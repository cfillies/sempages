{"version":3,"sources":["components/application/tbase/Interface.ts","components/application/tbase/OB2XML.ts","components/tseditor/sidebar.module.scss","components/controls/stlabels/SemTalkLabels.module.scss","components/controls/stassociationtype/SemTalkAssociationType.module.scss","components/ISemTalkOnline.ts","components/tseditor/tseditor.module.scss","components/application/semtalklistener/stglobal.tsx","components/controls/stinheritance/SemTalkInheritance.module.scss","components/controls/stinstances/SemTalkInstances.module.scss","components/controls/stattributes/SemTalkAttributes.module.scss","components/controls/stmethods/SemTalkMethods.module.scss","components/controls/ststates/SemTalkStates.module.scss","components/controls/stassociations/SemTalkAssociations.module.scss","components/controls/stgenericassociations/SemTalkGenericAssociations.module.scss","components/controls/stsynonyms/SemTalkSynonyms.module.scss","components/controls/sttabspecs/SemTalkTabSpecs.module.scss","components/controls/stformcomponents/Adresse.tsx","components/controls/stformcomponents/PersoenlicheAngaben.tsx","components/controls/stformcomponents/Dummy.tsx","components/controls/stformcomponents/Registry.ts","components/controls/stmodelproperty/SemTalkModelProperty.module.scss","components/controls/stnavigation/SemTalkNavigation.module.scss","components/controls/stobject/SemTalkObjects.module.scss","components/controls/stassociationtypes/SemTalkAssociationTypes.module.scss","components/controls/stattributetypes/SemTalkAttributeTypes.module.scss","components/controls/stmethodtypes/SemTalkMethodTypes.module.scss","components/controls/ststatetypes/SemTalkStateTypes.module.scss","components/controls/stgeneral/SemTalkGeneral.module.scss","components/controls/stattachments/SemTalkAttachments.module.scss","components/controls/strefinements/SemTalkRefinements.module.scss","components/controls/stgenericattributes/SemTalkGenericAttributes.module.scss","components/application/semtalklistener/visiordfsinterface.ts","components/application/SemTalkMaster.ts","components/controls/stpivot/SemTalkPivot.module.scss","components/controls/stcustomize/SemTalkCustomize.module.scss","components/application/semtalklistener/subtask/bpmn/usercontrol.module.scss","components/SemTalkOnline.module.scss","components/controls/staudit/SemTalkAudit.module.scss","components/controls/stdialog/SemTalkDialog.module.scss","components/controls/ststyle/SemTalkStyle.module.scss","components/controls/stsystemclass/SemTalkSystemClass.module.scss","components/controls/stattributetype/SemTalkAttributeType.module.scss","components/controls/stdiagramtype/SemTalkDiagramType.module.scss","components/controls/stcompose/SemTalkCompose.module.scss","components/controls/stshapestyle/SemTalkShapeStyle.module.scss","components/application/semtalklistener/subtask/epc/epcinterface.ts","components/application/semtalklistener/subtask/citforms/citextcomponent/citExtComponent.tsx","components/tseditor/pages.module.scss","components/controls/stform/SemTalkForm.module.scss","components/controls/stform/SemTalkFieldSet.tsx","components/controls/stform/SemTalkItemFieldSet.tsx","components/controls/stcommandbar/SemTalkCommandBar.module.scss","components/controls/sttoolbar/SemTalkToolBar.module.scss","components/controls/stbreadcrumbs/SemTalkBreadCrumbs.module.scss","components/SemTalkUndo.ts","components/application/tbase/langtools.ts","components/controls/richText/RichTextPropertyPane.module.scss","components/controls/richText/RichText.module.scss","components/controls/richText/RteColorPicker.module.scss","components/controls/stform/scripts.js","components/application/semtalklistener/stgoto.tsx","components/SemTalkMongoServer.ts","components/application/graph/graph.ts","components/application/semtalklistener/shapes/tsutil_DocumentShape.ts","components/application/semtalklistener/shapes/tsutil_DataStoreShape.ts","components/application/semtalklistener/shapes/tsutil_UMLClassShape.ts","components/application/semtalklistener/subtask.ts","components/application/semtalklistener/procsubtask.ts","components/application/semtalklistener/subtask/epc/epc-stencil.ts","components/application/semtalklistener/org-stencil.ts","components/application/semtalklistener/subtask/epc/shapes/EpcShape_Function.ts","components/application/semtalklistener/subtask/epc/shapes/EpcShape_Event.ts","components/application/semtalklistener/subtask/epc/shapes/EpcShape_Position.ts","components/application/semtalklistener/subtask/epc/shapes/EpcShape_OrgUnit.ts","components/application/semtalklistener/subtask/epc/shapes/EpcShape_Person.ts","components/application/semtalklistener/subtask/epc/shapes/EpcShape_AND.ts","components/application/semtalklistener/subtask/epc/shapes/EpcShape_OR.ts","components/application/semtalklistener/subtask/epc/shapes/EpcShape_XOR.ts","components/application/semtalklistener/subtask/epc/shapes/EpcShape_Entitytyp.ts","components/application/semtalklistener/subtask/epc/shapes/EpcShape_Sachmittel.ts","components/application/semtalklistener/subtask/epc/shapes/EpcShape_Prozesspfad.ts","components/application/semtalklistener/subtask/epc/shapes/EpcShape_Risiko.ts","components/application/semtalklistener/subtask/epc/shapes/EpcShape_Kennzahl.ts","components/application/semtalklistener/subtask/epc/shapes/EpcShape_Anwendungssystemtyp.ts","components/application/semtalklistener/subtask/epc/shapes/EpcShape_Klasse.ts","components/application/semtalklistener/subtask/epc/Stencil_EPC.ts","components/application/semtalklistener/Stencil_ORGCHART.ts","components/application/semtalklistener/subtask/epc/epcsubtask.ts","components/application/semtalklistener/subtask/bpmn/BPMNElements.ts","components/application/semtalklistener/subtask/bpmn/bpmn-stencil.ts","components/application/semtalklistener/subtask/bpmn/shapes/tsutil_BpmnShape_Task.ts","components/application/semtalklistener/subtask/bpmn/shapes/tsutil_BpmnShape_Gateway.ts","components/application/semtalklistener/subtask/bpmn/shapes/tsutil_bpmn.ts","components/application/semtalklistener/subtask/bpmn/shapes/tsutil_BpmnShape_Event.ts","components/application/semtalklistener/subtask/bpmn/shapes/tsutil_BpmnShape_TaskEvent.ts","components/application/semtalklistener/subtask/bpmn/Stencil_BPMN.ts","components/application/semtalklistener/subtask/bpmn/bpmnsubtask.ts","components/application/semtalklistener/subtask/bpmn/usercontrol.tsx","components/application/semtalklistener/subtask/citforms/cit-stencil.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_BooleanField.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_ChoiceField.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_ComputedField.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_CurrencyField.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_DateField.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_FieldSet.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_IdField.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_FileField.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_InfoBox.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_NumberField.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_NumberUnitField.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_Rule.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_TextArea.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_TextField.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_WebserviceMethod.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_XMLResource.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_ExternalComponent.ts","components/application/semtalklistener/subtask/citforms/shapes/CitShape_SubFieldSet.ts","components/application/semtalklistener/subtask/citforms/Stencil_cit_intelliForm.ts","components/application/semtalklistener/subtask/citforms/citformssubtask.ts","components/application/semtalklistener/subtask/citforms/usercontrol.tsx","components/application/semtalklistener/class-stencil.ts","components/application/semtalklistener/generic-stencil.ts","components/application/semtalklistener/Stencil_GENERIC.ts","components/ITSEditor.tsx","components/application/semtalklistener/Stencil_CLASS.ts","components/application/semtalklistener/Stencil_UMLCLASS.ts","components/application/semtalklistener/visiordfs.ts","components/controls/stlogin/Login.tsx","components/tseditor/sidebar.tsx","components/tseditor/pages.tsx","components/tseditor/tsutil.ts","components/tseditor/general-shape.ts","components/tseditor/tseditor.tsx","components/application/semtalklistener/refresh.tsx","components/controls/stattachments/SemTalkAttachments.tsx","components/controls/stfileopen/SemTalkOpen.tsx","components/controls/strefinements/SemTalkRefinements.tsx","components/controls/stgeneral/SemTalkGeneral.tsx","components/controls/stinheritance/SemTalkInheritance.tsx","components/controls/stinstances/SemTalkInstances.tsx","components/controls/richText/SwatchColorPickerGroup.tsx","components/common/utilities/ThemeColorHelper.ts","components/controls/richText/RteColorPicker.tsx","components/controls/richText/RichTextPropertyPane.tsx","components/controls/richText/RichText.tsx","components/controls/stattributes/SemTalkAttributes.tsx","components/controls/treeView/ITreeViewProps.ts","components/controls/stgenericattributes/SemTalkGenericAttributes.tsx","components/controls/stmethods/SemTalkMethods.tsx","components/controls/ststates/SemTalkStates.tsx","components/controls/stassociations/SemTalkAssociations.tsx","components/controls/stselect/SemTalkSelect.tsx","components/controls/stgenericassociations/SemTalkGenericAssociations.tsx","components/controls/stsynonyms/SemTalkSynonyms.tsx","components/controls/staudit/SemTalkAudit.tsx","components/controls/stusertab/SemTalkUserTab.tsx","components/controls/stdiagram/SemTalkDiagram.tsx","components/controls/stpivot/SemTalkPivot.tsx","components/controls/sttabspecs/SemTalkTabSpecs.tsx","components/controls/stdialog/SemTalkDialog.tsx","components/controls/stlabels/SemTalkLabels.tsx","components/controls/ststyle/SemTalkStyle.tsx","components/controls/stsystemclass/SemTalkSystemClass.tsx","components/controls/stassociationtype/SemTalkAssociationType.tsx","components/controls/stattributetype/SemTalkAttributeType.tsx","components/controls/stdiagramtype/SemTalkDiagramType.tsx","components/controls/stcustomize/SemTalkCustomize.tsx","components/controls/stinsert/SemTalkInsert.tsx","components/controls/treeView/ITreeItemActions.ts","components/controls/treeView/DropdownTreeItemAction.tsx","components/controls/treeView/ButtonTreeItemAction.tsx","components/controls/treeView/TreeItemActionsControl.tsx","components/controls/treeView/TreeItem.tsx","components/controls/treeView/TreeView.tsx","components/authConfig.ts","components/GraphService.ts","components/login.ts","components/controls/sttermset/SemTalkTermSet.tsx","components/controls/stcompose/SemTalkCompose.tsx","components/controls/stdiagram_new/SemTalkCreateDiagram.tsx","components/controls/stabout/SemTalkAbout.tsx","components/controls/stshapestyle/SemTalkShapeStyle.tsx","components/excel.ts","components/controls/sttable/SemTalkTable.tsx","components/controls/stfacetsearch/SemTalkFacet.tsx","components/controls/stfacetsearch/SemTalkFacetSearch.tsx","components/controls/stsettings/SemTalkSettings.tsx","components/controls/stmodelproperty/SemTalkModelProperty.tsx","components/controls/stnavigation/SemTalkNavigation.tsx","components/controls/stobject/SemTalkObjects.tsx","components/controls/stassociationtypes/SemTalkAssociationTypes.tsx","components/controls/stattributetypes/SemTalkAttributeTypes.tsx","components/controls/stmethodtypes/SemTalkMethodTypes.tsx","components/controls/ststatetypes/SemTalkStateTypes.tsx","components/controls/stdiagramtypes/SemTalkDiagramTypes.tsx","components/controls/strepository/SemTalkRepository.tsx","components/controls/sttableeditor/SemTalkTableEditor.tsx","components/controls/sttableimport/SemTalkTableImport.tsx","components/controls/stform/SemTalkFieldSetList.tsx","components/controls/stform/SemTalkForm.tsx","components/controls/stlogin/LoginIntern.tsx","components/application/explorer/spexplorer.tsx","components/controls/stcommandbar/SemTalkCommandBar.tsx","components/controls/sttoolbar/SemTalkToolBar.tsx","components/controls/stbreadcrumbs/SemTalkBreadCrumbs.tsx","components/controls/stexpand/SemTalkExpand.tsx","components/controls/stbpmninterface/SemTalkBPMNExport.tsx","components/controls/stbpmninterface/SemTalkBPMNImport.tsx","components/SemTalkOnline.tsx","App.tsx","components/controls/stlogin/Signup.tsx","components/controls/stlogin/Database.tsx","components/controls/stlogout/Logout.tsx","components/controls/stlogin/Options.tsx","components/controls/stlogin/UpdatePassword.tsx","components/controls/stlogin/ForgotPasswordVerify.tsx","index.tsx","components/application/semtalklistener/subtask/citforms/citinterface.ts","components/controls/treeView/TreeView.module.scss","components/application/tbase/OB2JSON.ts","components/application/semtalklistener/subtask/bpmn/bpmninterface.ts","components/application/tbase/utils.ts","components/application/tbase/Tbase.ts","components/application/tbase/Label.ts","components/application/tbase/TabSpec.ts","components/application/tbase/SystemClass.ts","components/application/tbase/Node.ts","components/application/tbase/BusinessClass.ts","components/application/tbase/ObjectBase.ts","components/application/semtalklistener/processInterface.ts"],"names":["SemTalkType","SemTalkRelation","SemTalkValueType","SemTalkBaseConstant","ModelAttribute","SemTalkConnectionPoint","SemTalkLanguage","SemTalkLanguageCode","SemTalkObjectBaseEvent","SemTalkComposeOrder","OB2XML","isSystemClass","c","tb","xmlstr","obx","DOMParser","parseFromString","getElementsByTagName","attributes","i","name","maxid","Number","value","SetModelAttribute","classes","cid","cidv","getNamedItem","systemClass","businessClass","readOnly","startsWith","this","MakeSystemClass","MakeBusinessClass","MakeClass","attrtypes","MakeAttributeType","methodtypes","MakeMethodType","statetypes","MakeStateType","assoctypes","MakeAssociationType","SemTalkProperty","sassoctypes","SemTalkSubClassOf","SLSubClassOf","SemTalkInstanceOf","SLInstanceOf","SemTalkSystemRelation","diagtypes","MakeDiagramType","at","FindDiagramType","LoadXML","diagrams","iclass","cl","console","assert","cs","MakeDiagram","SemTalkDiagram","FindAttributeType","FindMethodType","FindStateType","FindAssociationType","FindClass","instances","MakeInstance","SemTalkInstance","log","FindInstance","xd","document","implementation","createDocument","doc","createElement","AllModelAttributes","setAttribute","GetModelAttribute","toString","AllSystemClasses","obj","IsSystemClass","ObjectType","SemTalkClass","el","appendChild","SaveXML","AllClasses","AllAssociationTypes","IsAssociationType","RelationType","AllAttributeTypes","IsAttributeType","AllDiagramTypes","IsDiagramType","AllInstances","AllDiagrams","AllMethodTypes","AllStateTypes","blob","outerHTML","replace","RegExp","module","exports","SemTalkOnlineCommand","SemTalkCookie","gotoDocument","d","stgoto","gotoDocumentInternal","diag","window","semtalk","base","FindDiagramByID","Error","m","type","SemTalkNavigationEvent","pagename","ObjectName","mod","ObjectBase","modelname","modelid","ID","diagid","mstr","JSON","stringify","_obj","parent","postMessage","addCallBack","crtl","removeCallBack","getObject","getDiagram","gotoObject","o","FindObjectByID","objectname","objectcaption","ObjectCaption","objectid","gotoNodeByID","nd","n","FindNodeByID","gotoNode","Model","Diagram","ShapeID","_nd","val","pg","sh","a","sem","bas","node","FindNodeOfShape","shapeid","gotoShape","_cell","visSelectionChanged","alert","msg","mtype","Adresse","par","cmp","onfocus","parstate","state","labels","Stack","horizontal","tokens","childrenGap","TextField","label","defaultValue","required","onFocus","_ev","onChange","undefined","setState","PersoenlicheAngaben","Dummy","_par","_onfocus","Text","component","SemTalkUIConstant","SemTalkMaster","EPC_ElementName","EPC_AssociationName","EPC_DiagramTypeName","CitExtComponent","props","_selection","object","callback","resetState","hasError","comp_created","comp_filename","comp_rfilename","items","mounted","handleEvent","eventListener","data","upload","inp","onchange","e","onUploadChangeHandler","body","click","parentNode","removeChild","detach","SetValue","refresh","event","f","target","files","fr","FileReader","readAsText","onload","_event","s","result","json","parse","OB2JSON","LoadJSON","o2x","xml","buff","Buffer","from","b64","cit_AttributeName","ExternalComponent64","loadObject","ex","debug","md","_columns","key","fieldName","minWidth","isResizable","isMultiline","onRender","item","_index","_column","cap","PropName","aname","Attribute","checked","ischecked","isChecked","commands","iconProps","iconName","onClick","Guid","create","Selection","oid","RenameObject","id","variants","x64","GetValue","s2","v","AllSubClasses","VariantSaved","fn","AbsolutePath","indexOf","rp","substring","lastIndexOf","RelativePath","va","push","r","_error","_info","getResStrListener","compact","columns","selectionMode","SelectionMode","single","layoutMode","DetailsListLayoutMode","justified","selection","checkboxVisibility","CheckboxVisibility","hidden","isHeaderVisible","React","SemTalkFieldSet","infobox","booleanfield","choicefield","datefield","textfield","textarea","numberfield","filefield","fieldset","externalcomponent","computedfield","components","init","ob","FindSystemClass","cit_ElementName","FieldSet","InfoBox","BooleanField","ChoiceField","DateField","TextArea","NumberField","FileField","ExternalComponent","ComputedField","SubClasses","ext","Instances","length","ID2Name","buildFieldSet","_onFocusChanged","Nodes","tryeval","exp","endsWith","require","eval","fs","scope","fields","buildFieldSetRec","rels","Links","Relation","sort","x","y","ToObject","UserNumber","title","Title","String","field","variant","intro","Intro","dangerouslySetInnerHTML","__html","lnk","oth","IsInstance","StyleClass","fieldname","ClassOf","FieldName","Label","defaultvalue","defvalueexpr","DefaultValueExpression","readonly","ReadOnly","placeholder","pl","Placeholder","ointro","defaultChecked","tb2","fs0","fs1","extcomp","multiline","HideInput","rows","rc","RowCount","canRevealPassword","Required","options","text","optionslist","OptionsList","optionsfilelocation","OptionsFileLocation","xpathqueryselect","XPathQuerySelect","cname","split","option","label1","ct","ControlStyle","defaultSelectedKey","txt","DisplayText","ooutro","Outro","outro","SemTalkItemFieldSet","unscoped_fieldname","SemTalkUndo","undo","IsUndo","GetUndo","s1","b","inflateSync","Undo","localStorage","getItem","autosaveSemTalk","inflate","_err","bi","s1i","setItem","SaveUndo","deflate","buf","si","GetRedo","Redo","Language2Code","English","German","Japanese","Spanish","Russian","Simplified","Traditional","Code2Language","French","GetLanguage","GetLanguageCode","foo","goto_context","callbacks","post2Callbacks","evt","cb","guid","getContext","setObject","setCookie","page","setDiagram","getShape","shp","setShape","cvalue","Date","setTime","getTime","exdays","expires","toUTCString","cookie","location","pathname","url","model","stay","site","mgEncode","mongo","connection","database","w","iselectron","electron_mongo_api","encode","semmongoserverurl","dbname","js","semmongoconnectiontoken","axios","post","res","status","statusText","error","mgGetItem","listname","itemname","find","get","mgGetDocument","mgGetItems","mgGetCollections","getCollectionItems","mgInsertItems","insert","mgSaveDocument","jsoncontent","u","semuserlogin","user_info","profile","fullname","save","put","mgCheckDocument","checkin","mgUnsetValue","mgSetValue","mgSaveDocumentAs","mgGetValue","attribute","getvalue","setvalue","mgDeleteItem","deletedocument","delete","unsetvalue","mgGetItemNames","findNames","mgGetMetaData","findMetaData","mgCreate_database","desturl","destdbname","clonedb","mgnewDatabaseName","_connection","_database","newdatabasename","mglistDatabases","issemtalk","listdatabases","mgCallService","args","service","user","pwd","api","process","similarityservice","similarityuser","similaritypwd","callservice","mgLogin_with_email_password","email","password","electron_mongo_auth_api","login_with_email_password","mgCreate_user","regkey","create_user","mgChange_Password","old_password","new_password","update_password","login_token","mgForgot_Password_send_token","clientURL","forgot_password_send_token","mgForgot_Password_Update","verify_token","forgot_password_use_token","Edge","source","style","oned","edges","splice","mxObjectId","width","height","_style","_relative","geometry","_shapeid","nodeName","shapeName","shapeKey","Graph","_cells","_updates","shift","Delete","_parent","_id","_value","_x","_y","_width","_height","vertices","ci","isedge","_shp","_trigger","shape","shps","_includeEdges","visShapesDeleted","_source","_target","_shape","_ignoreChidren","DocumentShape","mxActor","call","DataStoreShape","mxCylinder","UMLClassShape","isRounded","strokewidth","mxUtils","extend","prototype","size","getLabelMargins","rect","getValue","mxRectangle","parseFloat","redrawPath","h","dy","Math","max","min","moveTo","lineTo","quadTo","close","end","mxCellRenderer","registerShape","isForeground","round","fill","curveTo","stroke","begin","translate","scale","paintVertexShape","strokeColor","strokeWidth","fillColor","setStrokeColor","setStrokeWidth","setFillColor","isgradient","gradientColor","setGradient","roundrect","fillAndStroke","setShadow","_c","_w","_h","Subtask","g","SLGeneric","IsClass","MakeSynonym","Stencil","ShowGenericDiagrams","SLHidden","ensureLanguages","comment","SLComment","Style","Hide","AddSubclassOf","COOF","SLConsistsOf","_sem","l","SLLanguage","li","None","Process_Subtask","patchMetaModel","ensureDistributions","ensureSimulation","patchChinese","ass","lang","code","mapping","Process_ElementName","SLActivity","SLEvent","SLDataObject","SLSwimlane","SLResource","SLOrgUnit","SLPerson","SLPosition","SLInformation","SLControl","SLInfoType","SLUses","SLUsesPhys","SIM_AttributeTypeName","Begin","Capacity","ConditionExpression","CostDriver","DistributionType","End","FixedCost","FlushNumber","FlushTime","Jobs","Period","Priority","Probability","Quantity","Restart","SetupTime","Strategy","TransportationTime","SLUserNumber","ValueFile","VariableCost","WaitingTime","WorkTime","WorkTime2","FindSynonym","getResStr","s3","s4","SIMGROUP","SIMTAB","SemTalkUserTab","Group","ValueType","Integer","Min","Max","Value","Options","SIM_Strategy","FIFO","LIFO","LONGEST","SHORTEST","ANY","AllowFreeForm","SIM_Distribution","CONSTANT","EVEN","NORMAL","EXPONENTIAL","Duration","Boolean","Symbol","InitialContents","InfoDepended","IsCopied","slact","Composeable","InstDialog","CheckAttachments","FindAttribute","InputCondition","SIM_Condition","AND","SAND","OR","Weight","OutputCondition","XOR","INFO","MakeAttribute","DeleteAttribute","TabSpecDefinitions","FindTabSpec","MakeGenericAttributeTabSpec","SLRESOURCE","Refineable","CheckClass","BPMN_AssociationName","dataobject","SLPHYSRESOURCE","SLPhysResource","SLBUFFER","SLBuffer","info","infotype","MakeGenericTabSpec","SLCONTROL","ss","sss","SLUSES","SLINVUSES","SLInvUses","SLENTRYPOINT","SLEntryPoint","SLSTORES","SLStores","SLREADS","SLReads","EPC_SHAPES","Function","Event","Position","OrgUnit","Person","Entitytyp","Klasse","Fachbegriff","Comment","Sachmittel","Prozesspfad","Kennzahl","Risiko","Control","Anwendungssystemtyp","ORGCHART_SHAPES","EpcFunctionShape","EpcEventShape","EpcPositionShape","EpcOrgUnitShape","EpcPersonShape","EpcANDShape","bounds","mxShape","EpcORShape","EpcXORShape","EpcEntitytypShape","EpcSachmittelShape","EpcProcessPathShape","EpcRisikoShape","EpcKennzahlShape","EpcAnwendungssystemtypShape","EpcKlasseShape","MasterOrgUnit","MasterPosition","MasterRole","MasterPerson","setDashed","ellipse","EPC_STENCIL0","logo","ORGCHART_STENCIL","EPC_Subtask","qs_super","getOverridable","quickShapes","stencil","targets","badlist","src","sc","SystemClass","masters","gs_super","GetShapeStyle","shapeType","shapeStyle","updateLabelStyle","lsp","lbl","ID2NameNsp","newtxt","newtxt0","initStencil","dtype","_stencil","_sprops","_extended","_loadStencil","SLProc","SLOrgChart","mst","ou","patchEPCMetaModel","patchEPCChinese","sub","sup","dobj","dotype","dos","Labels","MakeLabel","cfobj","t","Personentyp","Service","Class","Wissenskategorie","HumanRes","Operator","Transaction","Package","DataObject","EPCObject","aktiviert","erzeugt","führtaus","führtzu","hasTransaction","hasOperation","hasOutput","istInputfür","istVorgängervon","liefertInputfür","MessageType","suppliesOutputfor","verknüpft","wirdausgewertetvon","wirdbenötigtfür","wirdverwendetfür","wirdverwendetvon","BusinessObjectModel","OrgChart","ResClassModel","KnowlegeMap","SystemModel","SLValueChain","BPMNElements","BPMN_TaskTypeName","Send","Receive","User","Manual","Script","InstantiationReceive","BusinessRule","BPMN_TriggerTypeName","Message","Timer","Rule","Signal","Multiple","Cancel","Compensation","Link","Terminate","Escalation","ParallelMultiple","BPMN_EventTypeName","Start","Intermediate","BPMN_GatewayTypeName","XORwM","ExclusiveEvent","Inclusive","Parallel","Complex","ExclusiveEventIns","ParallelEventIns","BPMN_TaskType","BPMN_EventType","BPMN_GatewayType","BPMN_TriggerType","BPMN_SHAPES","Task","TaskEvent","Gateway","BpmnTaskShape","BpmnGatewayShape","EnvelopeSendShape","EnvelopeReceiveShape","instantiationReceiveShape","businessRuleShape","ScriptShape","manualShape","userShape","GearShape","OrShape","XorShape","parallelShape","parallelInsShape","complexShape","exEventShape","exEventInsShape","signalShape","signalfullShape","cancelShape","errorShape","cancelfullShape","compensationfullShape","loopShape","timerShape","LinkShape","MultipleShape","ParallelMultipleShape","RuleShape","EscalationShape","TerminateShape","BpmnEventShape","BpmnTaskEventShape","constraintsX","mxConnectionConstraint","mxPoint","ttype","BPMN_AttributeTypeName","TaskType","ao","SubProcessOrdering","ah","adhoc","co","re","refinement","isAdHoc","isCompensation","isLoopSub","isLoopStandard","BPMN_SubprocessOrdering","Loop","isLoopMultiParallel","isLoopMultiSeq","Sequential","loopnum","iconSpaceX","offsetY","currXOffset","dx","tmpW","tmpH","tmpW2","tmpH2","gwtype","GatewayType","arcStartX","arcTo","arcStartY","arcRay","arcStartY2","arcStartX2","arcRay2","evType","EventType","trType","TriggerType","he","we","w1","h1","dex","dey","BPMN_STENCIL0","BPMN_STENCIL1","subkey","BPMN_STENCIL2","BPMN_Subtask","ip_super","initPage","template","Contents","tseditor","sm","MasterSwimlane","em","swshape","graph","getDefaultParent","insertVertex","Swimlane","evshape","visShapeAdded","BPMN_ElementName","SLDecision","ei_super","EnsureInstance","mn_super","masterName","iv_super","isValid","srcid","dstid","Root","FindInstanceByID","dst","ev","dc","ssy","dsy","filterRelations","ctrl","sy","mf","SLMessageFlow","usemf","notSamePool","bu","ac","tt","filter","rs_super","resetSubTaskStyle","s0","settings","sysattr","setting","isevent","istask","isgateway","ta","gw","Refinement","underlineRefinements","tasktype","ttname","GetTaskTypeName","GetTaskType","GetTriggerType","GetTriggerTypeName","gwname","GetGatewayTypeName","GetGatewayType","et","GetEventType","GetEventTypeName","extended","renderUserTab","tab","_semtalk","Fabric","className","styles","semTalkUserTab","pivottab","CreatedBy","captionUserTab","patchBPMNMetaModel","patchBPMNChinese","dt","ins","SLDocumentInfo","BPMNGROUP","BPMNTAB","Participant","GetAllGatewayTypeNames","GetAllEventTypeNames","GetAllTriggerTypeNames","IntermediateType","BPMN_EventIntermediateType","Catch","Throw","z","att","Activity","Instantiate","Implementation","GetAllTaskTypeNames","BPMN_ImplementationType","Other","ts","use","SLMF","flo","FlowObject","mfl","FindAssociation","act","sys","System","HasDirectLink","MakeAssociation","Name","SLSystem","BPMNElement","Artifact","Annotation","Entity","SLAssociation","active","CIT_SHAPES","CurrencyField","IdField","NumberUnitField","TextAreaUnitField","WebserviceMethod","XmlResource","SubFieldSet","CitBooleanFieldShape","btoa","CitChoiceFieldShape","image","CitComputedFieldShape","CitCurrencyFieldShape","CitDateFieldShape","CitFieldSetShape","CitIdFieldShape","CitFileFieldShape","CitInfoBoxShape","CitNumberFieldShape","CitNumberUnitFieldShape","CitRuleShape","CitTextAreaShape","CitTextFieldShape","CitWebserviceMethodShape","CitXmlResourceShape","CitExternalComponentShape","CitSubFieldSetShape","CIT_STENCIL0","resx_cit","guilanguage","str","citForms_Subtask","Values","citnode","Node","Attributes","attr1","attr","PageBreakBefore","defineUserTabs","cit_UserTabsGroups","Layout","Main","citcomplexnode","ComplexNode","tabs","cit_UserTabs","inputfield","InputField","AuxField","ValidationPattern","Validation","j","ValidationExpression","k","ValidationMessage","DefaultValue","SampleValue","SampleValueExpression","p","EnablePrefill","q","LabelStyle","citdatefield","DefaultValueToday","Autocomplete","citbooleanfield","live","citchoicefield","LoopOptions","DatabaseConnection","Database","DatabaseQueryParameters","XML","XPathQueryText","XPathQueryValue","XPathQueryGroup","XPathQueryParameters","XPathQueryNamespaces","TrackValue","ListLimit","Repeated","ChoiceMultipleAllowOtherValue","ChoiceMultipleRememberOtherValues","citcomputedfield","ValueExpression","citidfield","RequestAcademicTitle","RequestAgeVerification","RequestAgeVerificationValue","RequestArtisticName","RequestBirthName","RequestDateOfBirth","RequestDocumentType","RequestFamilyNames","RequestGivenNames","RequestIssuingState","RequestPlaceOfBirth","RequestPlaceOfResidence","RequestPlaceVerification","RequestPlaceVerificationValue","RequestRestrictedId","citnumberunitfield","Units","citnumberfield","NumberFormat","cittextfield","MaxLength","cittextarea","ColumnCount","citcurrencyfield","citrule","cftype","ValidationMode","citwebservicemethod","FaultTemplate","Parameter","RequestTemplate","ResponseTemplate","WebserviceConnection","citxmlresource","Location","CacheMode","XsltScript","ResourceRange","citexternalcomponent","RoadmapTitle","citfieldset","SetType","SummaryExpression","ChoiceCascade","citsubfieldset","citinfobox","RenderAsHtml","usernumber","rule","xmlres","hasmetafield","main","hasresource","cithasresource","Condition","cithasmetafield","relation","Scope","Multiplicity","FixedCount","InitialRowCount","MaxCount","MinCount","RowIncrement","citExtComponentLb","citUserMain","citLayout","cit_DiagramTypeName","Dialogmodell","_object","gr_super","getRibbon","_ribbon","_toolbar","AddonCommand","showSubTask","renderSubTaskDialog","addoncommand","group","weight","valtype","opts","allowff","CLASS_SHAPES","MasterClass","MasterUMLClass","MasterComment","GENERIC_SHAPES","MasterSystemClass","MasterInstance","zoomoption","GENERIC_STENCIL","MasterSubClassOf","MasterProperty","CLASS_STENCIL","UMLCLASS_STENCIL","VisioRDFS","undoManger","explorer","visdoc","noevents","showhyperlinkmarker","resx_SemList","resx_SemTalk","IsAutoSave","transaction","tempId","overridables","highlight","hasVector","_s","ismodified","stencil_registry","inheritStyle","shpsettingsobj","shpsetting","iscustom","syssetting","_lsp","UpdateLabel","sysclass","issysclass","mxConstants","FONT_UNDERLINE","FONT_BOLD","ExtRefinement","showattachments","Attachments","FindShapeByShapeID","isEditing","clearCellOverlays","addOverlay","ALIGN_TOP","ALIGN_LEFT","open","Master","noev","newtxt1","IsAssociation","rel","relcla","FromObject","sw","getMxId","EnsureClass","diagtype","clobj","substr","IsParent","EnsureSystemClass","_diagtype","_mst","_subkey","makeInstance","class_cell","clid","FindClassByID","inst","rt","MakeNode","ExpandObject","makeSubClass","SLClass","FindSpecialization","ChangeObject","newobjs","newobj","beginTransaction","SetClass","FindObject","newname","MoveEdgesToShape","endTransaction","getShapeStyle","insertSwimlane","cell","AllValidClassRelations","valid","toggle","fnd","sparent","tparent","_ctrl","_sy","_dsy","_src","_dst","eventlistener","loadDiag","shpid","scrollCellToVisible","mxCellHighlight","view","getState","setTimeout","hide","OnNodeCreated","OnNodeDeleted","arg1","removeCells","OnClassChanged","arg0","UpdateByID","OnCreated","ensureSynonym","OnRefined","UpdateLabelByID","OnDetached","OnValueChanged","arg2","SLMXGAttribute","OnAttributeAdded","OnMethodAdded","OnStateAdded","OnRenamed","semtalktype","SemTalkAssociation","SemTalkAssociationType","SemTalkMethodType","SemTalkStateType","SemTalkAttributeType","OnCommentChanged","defof","SLCommentOf","bfnd","InvLinkedObjects","OnComposed","OnUnComposed","OnAssociationAdded","OnAssociationDeleted","fromobj","toobj","OnSynonymAdded","OnSynonymDeleted","OnSynonymRenamed","OnUserNumberChanged","OnSubClassCreated","OnSubClassDeleted","OnModelAttributeChanged","forder","NounVerb","VerbNoun","redraw","InsertObjects","expand","cells","InsertObject","geo","sco","specs","invspecs","InvLinks","ImportTermSet","sysc","term","htable","ctable","tname","oname","IsBusinessClass","bc","MakeSubClass","Term","descriptions","description","termlabel","decodeLang","languageTag","Children","cobj","termid","ImportTermSetTree","syscname","sel1","children","_languagedropdownOptions","isUndo","IsRedo","isRedo","isclass","isuml","UMLShape","isgeneric","_dtype","sprops","_showBPMN","loadStencil","stencilurl","templates","CUSTOMPROC_STENCIL","initStencils","showBPMN","Template","slproc","support_lib","support","dg","cdn","mtyp","context","l0","ID2NameNspLan","CLASS_STENCIL0","SLClassModel","UMLCLASS_STENCIL0","SLObjectModel","GENERIC_STENCIL0","setStencil","dclass","dclassname","_tab","deleteShapes","sel","getSelectionCells","getLabel","tmp","ff0","ff","font","fontfamily","vertex","align","html","visCellSystemClass","ShapeHTML","cla","claname","alist","mlist","atable","mtable","methods","Methods","states","States","_ribbonKeys","ribbon","toolbar","funcKeys","parseMenuItem","jitem","getRibbonKeys","registerOverridable","BeforeDocumentSave","lan","_loading","_callbacks","BPMNMode","initComment","bmode","isbpmn","tpl","patch","_ob","comof","SLDefinitionOf","com","fc","getAllCells","getChildCells","beginUpdate","UpdateDependents","endUpdate","InvCompositions","Owner","Associations","InvAssociations","PostEvent","shapes","isVertex","oldobj","newoid","Clone","isEdge","oldlnk","visConnectionAdded","dis","swimlane","getSwimlaneAt","rid","trg","sla","SLDisplays","lnks","LinkedObjects","urel","isinv","actname","visShapesCloned","shapename","clist","FindMasters","mst1","X","Y","shapeSubkey","un","NewUserNumber","EnsureUses","FindNode","sid","DeleteNode","OnceOnly","dsc","scl","relt","FindBusinessClass","icl","currnsp","CurrentNsp","oldsynname","Synonyms","syn","Language","oldid2name","oldname","Synonym","DeleteSynonym","DeleteAssociation","nsp","ID2Namespace","updateDiaglist","AllInstanceLabels","labelname","EnsureBORelation","BottomUp","newcla","Composition","AllSuperClasses","scc","slbls","relname","olist","AllLinkedObjects","slinfotype","ocl","othc","currentnsp","syn1","createVertex","_diag","toggleDirection","newlinks","estyle","IsAllowed","oshape","FindShape","eshape","insertEdge","MakeAssociationNode","FromShape","OtherShape","aclass","an","delrel","relshp","relid","newrel","oldnd","UpdateSwimlaneContent","link","properties","ctrlKey","relobj","srccl","dstcl","MessageBarType","_page","hostPageMessage","hostPageMessageString","referrer","ex1","sname","sbuf","shum","spos","sorg","spers","sinf","sphys","_xml","reason","mxgraphxml","getGraphXml","autoSave","encoded","encodelzutf8","SLMXGPagePrefix","SaveJSON","currentpage","clearUndo","clearSelection","lis","base64","lzutf8","inputEncoding","outputEncoding","Login","handleSubmit","preventDefault","username","toLowerCase","repository","setToken","setcurrToken","e1","gl","navigator","languages","language","success","nosuccess","errormsg","repoptions","initOptions","dblist","db","repdblist","stackTokens","padding","StackItem","MessageBar","messageBarType","onSubmit","Dropdown","selectedKey","_e","PrimaryButton","DefaultButton","to","Component","Sidebar","handleSidebarItems","theme","getTheme","classNames","mergeStyleSets","wrapper","position","pane","maxWidth","border","palette","neutralLight","sticky","color","neutralDark","fontSize","borderTop","black","borderBottom","textContent","editor","sidebar","row","left","right","pairedstencil","initSidebar","sidebarItems","querySelectorAll","customsidebarnode","len","newSidebarItems","classList","contains","add","href","sidebarnodeimage","alt","sidebarnodelabel","bg","backgroundColor","sidebarcontainer","ScrollablePane","Sticky","stickyPosition","StickyPositionType","Both","role","List","slice","onRenderCell","_onRenderRow","Pages","_onOptionChange","gotoPage","UNSAFE_componentWillReceiveProps","nextProps","diaglist","pages","semTalkPages","isvalidfn","setConnectable","mxGraphHandler","guidesEnabled","mxEdgeHandler","snapToTerminals","setPortsEnabled","connectionHandler","isConnectableCell","validateConnection","isvalid","mxGraph","getAllConnectionConstraints","terminal","isConnectionPoints","disabled","mxPolyline","constraints","createEdgeState","edge","createEdge","mxCellState","getCellStyle","mxConstraintHandler","intersects","icon","point","existingEdge","menuFunc","popupMenuHandler","factoryMethod","menu","graph1","createPopupMenu","config","findChildAt","mxIconSet","quickshapes","vertical","images","cnt","self","tit","img0","createImage","cursor","top","mxEvent","addGestureListeners","bind","start","isMouseDown","isMouseTrigger","isMouseEvent","consume","destroy","ncell","stopEditing","shapeAdded","ecell","orderCells","shapeConnectionAdded","TSEditor","copyColorStyle","setSelectionCells","container","img","addMouseListener","currentState","currentIconSet","mouseDown","_sender","me","dragLeave","getEvent","isv","getStylesheet","SHAPE_SWIMLANE","STYLE_HORIZONTAL","currentIconSetCell","mouseMove","getGraphX","getGraphY","getCell","getModel","dragEnter","mouseUp","_me","shapeExitedTextEdit","_evt","_state","mxCell","valueChangedCallback","hasRewriteValueChanged","valueChanged","newValue","apply","mxImageExport","drawCellState","canvas","getLinkForCellState","setLink","drawShape","cnt2","drawText","GENERAL_SHAPES","Rectangle","Eclipse","Square","Circle","Process","Diamond","Parallelogram","Triangle","Cylinder","Cloud","Document","Cube","Step","Trapezoid","Tape","Note","Card","Callout","Actor","Hexagon","Curve","Arrow","Line","containerEle","swimlanemanager","stacklayout","droptarget","imageShapes","keydownhandler","undoman","mxUndoManager","configShapes","vertexStyle","stylesheet","getDefaultVertexStyle","STYLE_STROKECOLOR","STYLE_FILLCOLOR","STYLE_FONTCOLOR","setDropEnabled","imageStyle","STYLE_SHAPE","SHAPE_IMAGE","STYLE_PERIMETER","mxPerimeter","RectanglePerimeter","putCellStyle","initEditor","gridSize","setTooltips","setAllowDanglingEdges","setDisconnectOnMove","disableContextMenu","mxClient","IS_QUIRKS","overflow","mxDivResizer","initGraph","util","initZoomConfig","undoListener","undoFunc","copyListener","copyFunc","keyListener","keyFunc","deleteListener","deleteFunc","handleDoubleClick","doubleClickFunc","handleClick","clickFunc","handleMove","moveCellsFunc","handleChange","selectFunc","handleConnect","connectFunc","handleDisconnect","disconnectFunc","initAutoSave","autoSaveFunc","valueChangeFunc","outline","getElementById","mxOutline","cellCreatedFunc","forEach","getAttribute","shapeLabel","shapeContent","createDragableItem","initCustomPort","pic","pointImage","mxImage","zoom","zoomIn","zoomOut","fit","zoomActual","cellsSelected","resetView","scaleAndTranslate","printPreview","pageFormat","x0","y0","_borderColor","pageSelector","preview","mxPrintPreview","pageScale","fromRectangle","printOverlays","targetWindow","togglePageBreaks","pageBreaksVisible","sizeDidChange","togglePanZoom","ispanzoom","toggleStencil","isstencil","updateStyle","newStyle","getStyle","setStyle","groupCells","groupId","labelName","cellsGrouped","cellId","isGroupCell","isGrouped","igeo","groupCell","handleUngroupCells","child","callbackFunc","addListener","CONNECT","getProperty","getTerminal","DISCONNECT","ungroupCells","tempCells","getGraphXmlNode","XMLSerializer","serializeToString","v1","v2","getCellById","includeEdges","removeEventListeners","removeEventListener","keepSelectionVisibleOnZoom","centerZoom","renameCell","newName","toggleCollapse","coll","collapsed","foldCells","startPanning","panningHandler","useLeftButtonForPanning","ignoreCell","stopPanning","connectionPoints","elbowCell","clear","canUndo","canRedo","redo","resetEditor","diagcaption","bsetDirection","doc2","parseXml","documentElement","renderGraphFromXml","getChildEdges","addMouseWheelListener","up","isConsumed","isAltDown","setEditor","currentCell","shapeDeleted","evtobj","shapeSelectionChanged","clone","shapeMoveCells","histories","shapeCopyCells","hasKeyHandler","keyPressed","showHelp","selectAll","shiftKey","moveCells","shapeConnectionsDeleted","shapeCreatePopupMenu","doLayout","layoutname","animate","invert","layout","mxGraphLayout","mxCircleLayout","mxFastOrganicLayout","mxCompactTreeLayout","edgeRouting","resetEdges","mxRadialTreeLayout","mxStackLayout","mxPartitionLayout","mxSwimlaneLayout","execute","morph","mxMorphing","DONE","startAnimation","isPool","model2","parent1","getParent","getRoot","exportSVG","background","imgExport","getGraphBounds","vs","svgDoc","createXmlDocument","root","createElementNS","NS_SVG","NS_XLINK","setAttributeNS","ceil","svgCanvas","mxSvgCanvas2D","floor","foAltText","drawState","getView","encodeURIComponent","getXml","listener","undoableEditHappened","UNDO","undoListenerFunc2","undoManager1","callbackFunc1","currentTarget","keyCode","metaKey","history","changes","constructor","addEventListener","copyListenerFunc2","mxClipboard","copy","paste","keyListenerFunc2","_graph","deleteListenerFunc2","editingCell","cellEditor","cellsSelectable","CLICK","DOUBLE_CLICK","MOVE_CELLS","getSelectionModel","CHANGE","formatXmlNode","xmlNode","rootEle","firstElementChild","hasRoot","tagName","hasIdO","warn","elements","idsArr","Array","element","ignoreSelection","mxCodec","enc","sortCells","getTopmostCells","isGridEnabled","graphHandler","tooltipHandler","isEnabled","foldingEnabled","pageVisible","xmlDocument","decoder","formatedNode","decode","renderNewGraphFromXml","div","mxGraphModel","mxParallelEdgeLayout","mxEdgeStyle","mxLayoutManager","mxRubberband","mxDragSource","mxGeometry","mxKeyHandler","mxConnectionHandler","mxToolbar","mxVertexHandler","mxAutoSaveManager","mxRectangleShape","mxHexagon","mxHexagonShape","mxRhombus","mxArrow","mxDefaultKeyHandler","mxDefaultPopupMenu","mxDefaultToolbar","mxEditor","mxCellMarker","mxCellTracker","mxEdgeSegmentHandler","mxElbowEdgeHandler","mxHandle","mxPanningHandler","mxChildChangeCodec","mxPopupMenuHandler","mxSelectionCellsHandler","mxTooltipHandler","mxCellCodec","mxCodecRegistry","mxDefaultKeyHandlerCodec","mxEditorCodec","mxGenericChangeCodec","mxGraphCodec","mxDefaultPopupMenuCodec","mxDefaultToolbarCodec","mxGraphViewCodec","mxModelCodec","mxObjectCodec","mxRootChangeCodec","mxStylesheetCodec","mxTerminalChangeCodec","mxCompositeLayout","mxEdgeLabelLayout","mxHierarchicalLayout","mxGraphAbstractHierarchyCell","mxGraphHierarchyEdge","mxGraphHierarchyModel","mxGraphHierarchyNode","mxSwimlaneModel","mxCoordinateAssignment","mxHierarchicalLayoutStage","mxMedianHybridCrossingReduction","mxMinimumCycleRemover","mxSwimlaneOrdering","mxCellPath","mxArrowConnector","mxCloud","mxConnector","mxDoubleEllipse","mxEllipse","mxImageShape","mxLabel","mxLine","mxMarker","mxStencil","mxStencilRegistry","mxSwimlane","mxText","mxTriangle","mxAbstractCanvas2D","mxAnimation","mxDictionary","mxEffects","mxEventObject","mxEventSource","mxForm","mxGuide","mxImageBundle","mxLog","mxMouseEvent","mxObjectIdentity","mxPanningManager","mxPopupMenu","mxResources","mxUndoableEdit","mxUrlConverter","mxVmlCanvas2D","mxWindow","mxXmlCanvas2D","mxXmlRequest","mxCellEditor","mxCellOverlay","mxCellStatePreview","mxGraphSelectionModel","mxGraphView","mxMultiplicity","mxStyleRegistry","mxSwimlaneManager","mxTemporaryCellStates","innerHTML","rotationEnabled","VERTEX_SELECTION_STROKEWIDTH","VERTEX_SELECTION_COLOR","VERTEX_SELECTION_DASHED","arguments","isCellResizable","relative","isWrapping","xmlgraph","setResizeContainer","wi","maxHeight","setHtmlLabels","createTarget","setCellsCloneable","IS_IE","returnValue","dragElt","ds","makeDraggable","x1","getClientX","y1","getClientY","elt","elementFromPoint","isAncestorNode","graph2","x2","y2","setTerminalPoint","importCells","autoscroll","_graph2","getCellAt","isGuidesEnabled","createDragElement","ishorizontal","_enforce","swimlaneNesting","vstyle","isvertical","STYLE_VERTICAL_ALIGN","STYLE_FONTSIZE","STYLE_STARTSIZE","alternateEdgeStyle","setSplitEnabled","isValidDropTarget","style1","isCellCollapsed","FOLD_CELLS","getGeometry","alternateBounds","resizeParent","isVertexIgnored","isSwimlane","getLayout","getChildCount","arr","query","Object","keys","findItemFromArray","direction","alignCells","ALIGN_CENTER","ALIGN_RIGHT","ALIGN_MIDDLE","ALIGN_BOTTOM","editorcontainer","graphinnercontainer","column","ref","graphcontent","imgpath","valign","witdh","tooltip","handler","overlayTaskType","verticalAlign","offset","overlay","addCellOverlay","mgr","autoSaveDelay","xmlStr","setStyleAttribute","laname","sl","kv","getStyleAttribute","fillcolor","fontcolor","strokecolor","gradientcolor","refreshPage","msgraphclient","di","inf","EditLink","refreshObject","refreshGraphObject","usemongo","refreshMongoRepositoryObject","refreshSPRepositoryObject","fetchGraph","upd","displayName","_mongo","le","getSPListName","getListItem","lany","SemTalkAttachmentTab","types","newitem","Association","SLAttachment","tcl","PropValue","_a","attachment","oldtitle","editItem","getSelection","DeleteAttachment","getItems","_onItemInvoked","cancelnew","addnewitem","MakeAttachment","langclass","attclass","assoc","PropValueName","PropValueCaption","CommandBar","semTalkAttachment","DetailsList","onItemInvoked","SemTalkOpen","isnew","lib","docs","localeCompare","mb","filename","CheckOutUserId","modified","modifiedby","fname","library","ischeckout","spCheckInOut","checkedout_tokens","templist","spinterface","getListData","ti","lil","documents","map","getUserById","checkoutToken","Author","visible","enabled","additem","localdocument","checkInStyle","checkOutStyle","_onColumnClick","newColumns","currColumn","currCol","newCol","isSortedDescending","isSorted","newItems","items1","columnKey","_copyAndSort","onColumnClick","pv","format","parseISO","_newcolumns","_item","additemX","selectitem","isopen","openlocalDocument","issaveas","savelocalDocument","curFileName","openDocumentCallBack","newDocumentCallBack","isimport","mergeDocumentCallBack","istemplate","saveAsDocumentCallBack","onSelectionChanged","setKeySelected","Checkbox","SemTalkRefinementTab","extitem","addextitem","deleteitem","refdiag","FindDiagram","_closeFileDialog","refinementtype","extdiag","semTalkRefinement","ComboBox","allowFreeform","Panel","isOpen","onDismiss","isBlocking","PanelType","medium","headerText","SemTalkGeneralTab","isinst","classname","sysclasses","isdataobject","isusernumber","systemclass","logourl","objectnamespace","ishyperlinksvisible","isclassvisible","isnamespacevisible","isrefinementvisible","saveObject","onCommentChange","newText","onNameChange","onNamespaceChange","onUserNumberChange","IsDiagram","RenameDiagram","newobject","isdo","isun","sclist","isdiagram","infos","SuperClasses","su","isoo","CheckNamespace","atype","ishidden","isreadonly","semTalkGeneral","autoAdjustHeight","SemTalkInheritanceTab","newitemtitle","newitemclass","issuper","syscl","DeleteSubclassOf","tc","goodlist","bl","semTalkInheritance","index","SemTalkInstancesTab","Instance","deleteItem","browseItem","SwatchColorPickerGroup","colorRows","chunk","groupColors","htmlFor","groupText","pickerLabel","FocusZone","FocusZoneDirection","handleTabKey","FocusZoneTabbableElements","all","isCircularNavigation","focusedContainer","tableRoot","cr","rowIndex","gc","tableCell","ActionButton","colorCell","selectedColor","handleColorChanged","svg","toUpperCase","selected","viewBox","focusable","onColorChanged","ThemeColorHelper","themeParts","themeValue","themePart","trim","themeStateVariable","__themeState__","themeState","varName","hasOwnProperty","RteColorPicker","wrapperRef","handleSwitchToDefault","isCalloutVisible","switchToDefaultColor","getSwatchColorPickerGroup","pickerGroup","groupName","GetThemeColor","ThemeColorDarker","ThemeColorDark","ThemeColorDarkAlt","ThemeColorPrimary","ThemeColorSecondary","ThemeColorTertiary","ThemeColorNeutralSecondary","ThemeColorNeutralPrimaryAlt","ThemeColorNeutralPrimary","ThemeColorNeutralDark","customColors","buttonLabel","defaultButtonLabel","fillThemeColor","previewColor","TooltipHost","content","calloutProps","gapSpace","colorPickerButton","previewSvg","previewRectangle","Icon","previewIcon","isBeakVisible","directionalHint","pickerCallout","setInitialFocus","defaultSvg","fillDefaultColor","colorPickerGroups","cpg","RichTextPropertyPane","onChangeSelection","range","oldRange","quill","formats","getFormat","renderActionsGroup","propertyPaneGroupField","controlsInOneRow","IconButton","handleUndo","propertyPaneButton","handleRedo","handleClearFormatting","renderFontStylesGroup","selectedHeader","header","ariaLabel","onChanged","onChangeHeading","renderFontSizesGroup","selectedSize","onChangeSize","renderInlineStylesGroup","bold","applyFormat","italic","underline","strike","script","renderColorStylesGroup","NeutralPrimary","fontColorGroups","handleFillColorChanged","handleHighlightColorChanged","renderAlignmentStylesGroup","onChangeIndent","renderListStylesGroup","list","renderHyperlinkStylesGroup","onLink","newHeadingValue","current","indent","newSizeValue","getModule","removeFormat","handleRenderNavigation","formattingPaneTitle","onClose","propertyPaneClose","prevProps","prevState","richTextPropertyPane","smallFixedFar","closeButtonAriaLabel","onRenderNavigation","focusTrapZoneProps","forceFocusInsideTrap","isClickableOutsideFocusTrap","propertyPaneGroupContent","propertyPaneGroupHeaderNoAccordion","initializeIcons","RichText","_quillElem","_wrapperRef","_propertyPaneRef","_toolbarId","ddStyleOpts","toolbarButtonH2","toolbarButtonH3","toolbarButtonH4","toolbarButtonBlockQuote","ddAlignOpts","ddListOpts","getEditor","renderLinkDialog","Dialog","hideDialog","closeDialog","dialogContentProps","DialogType","normal","modalProps","insertLinkDialog","containerClassName","insertUrl","insertUrlText","DialogFooter","actions","actionsRight","selectedUrl","action","unlinkButton","handleRemoveLink","handleCreateLink","checkLinkUrl","renderImageDialog","hideImageDialog","closeImageDialog","insertImageUrl","handleInsertImage","checkImageLinkUrl","onChangeBold","newBoldValue","onChangeItalic","onChangeUnderline","onChangeAlign","newAlignValue","onChangeList","showInsertLinkDialog","linkText","selectedText","urlStartIndex","startTextIndex","realLength","linkStart","getText","selectedRange","showInsertImageDialog","handleOnFocus","_range","_editor","editing","cursorPosition","deleteText","textToInsert","urlToInsert","insertText","setSelection","formatText","insertEmbed","handleChangeSelection","morePaneVisible","handleClosePanel","closePanel","handleShowMore","focus","newState","isEqual","handleClickOutside","elementContains","linkQuill","linkPropertyPane","wrapperTop","isEditMode","parentElement","clientRect","getBoundingClientRect","parentClientRect","toolbarTop","_prevState","nextState","toolbarDropDownOption","toolbarSubmenuDisplayButton","toolbarDropDownIcon","toolbarDropDownTitleIcon","richtext","showStyles","styleOptions","showBold","showItalic","showUnderline","showAlign","showList","showLink","showMore","showImage","modules","handlers","clipboard","matchVisual","Quill","import","whitelist","register","SizeClass","headerDropDown","toolbarDropDown","onRenderCaretDown","toolbarSubmenuCaret","onRenderOption","onRenderStyleOption","onRenderTitle","onRenderStyleTitle","onRenderAlignOption","onRenderAlignTitle","notifyOnReselect","onRenderListOption","onRenderListTitle","onRenderPlaceHolder","onRenderListPlaceholder","defaultProps","TreeViewSelectionMode","SelectChildrenMode","SemTalkAttributesTab","isact","isres","singleitem","newitemtype","allowfreeform","showproperties","bpmnl","hidebpmn","siml","hidesimulation","allattr","AllAttributes","showgroups","oattr","PropType","SemTalkAttribute","_label","inherited_attr","GetAttributeOwner","DatePicker","onSelectDate","date","toDateString","timerTime","hours","minutes","seconds","days","Float","Color","File","URL","Email","Password","_index1","editoritem","largevalue","Tel","newItem","newattr","editValue","lv","selectType","semTalkAttr","SemTalkGenericAttributesTab","grp","wei","tabspec","includes","PropWeight","SemTalkMethodsTab","Method","DeleteMethod","MakeMethod","SLHas","meth","AllMethods","semTalkMethod","SemTalkStatesTab","State","DeleteState","MakeState","AllStates","semTalkState","SemTalkAssociationsTab","others","inv","AllInvAssociationTypes","SLhasAttachment","assocs","invassocs","ctls","SLSequenceFlow","AllAssociations","AllInvAssociations","_isinv","other","association","computeInvOthers","computeOthers","oclasses","GetInvRelationOtherBases","selectRelation","GetRelationOtherBases","semTalkAssociations","SemTalkSelect","_allitems","_sel","_sysclass","_languages","objects","loadGraphListItems","reftype","nitems","spitems","eTag","ObjectDescription","ObjectClass","ReferenceType","SPItem","MGItem","loadGraphItems","editLink","loadGraphLists","externalitem","currentShape","isclasses","selectExtern","isbusinessclasses","copyExtern","mgitem","ls","oobj","isArray","sta","spitem","isexpand","_onFilter","fitems","autoComplete","showextern","showgraph","groupsandlistsasresources","fromcla","tocla","findIndex","des","sessionStorage","nid","graphClient","sharepointrepository","fetchGraphItems","resl","selmode","vismode","SemTalkGenericAssociationsTab","targetclass","relcl","Relname","toobjname","Toobj","IsInst","IsInv","_closeSelectDialog","hideSelectDialog","_SelectObject","objs","_expand","semTalkGenericAssociations","isexport","SemTalkSynonymsTab","newitemlanguage","newiteminv","newitemsyn","isassoctype","issyn","addItem","setItems","DeleteAltSynonym","MakeAltSynonym","checkSynExist","AllSynonyms","synLang","isassoc","Inverse","AltSynonyms","semTalkSynonym","SemTalkAuditTab","semTalkAudit","Created","ChangedBy","Changed","tabname","SemTalkDiagramTab","proptable","_clickany","gotonodes","_prevProps","valueCaption","labelCaption","prp","NodePage","DiagramName","_clickNode","_clickValue","SemTalkPivot","setType","isinstance","isbusinessclass","issystemclass","isassociationtype","isattributetype","ismethodtype","isstatetype","isdiagramtype","isassociation","isactivity","tabspecs","showAttributes","showAssocs","showSynonyms","showAudit","showSimulation","IsMethodType","IsStateType","TabSpecs","CheckAttributes","CheckAssociations","CheckSynonyms","CheckAudit","pivotArray","showGeneral","PivotItem","showInheritance","showInstances","showdiagproperties","Visible","SemTalkGenericAttributeTabSpec","ats","SemTalkGenericTabSpec","SemTalkTabSpec","showMethods","showStates","slabel","SLInstance","SemTalkSpecialization","SemTalkTypeName","Separator","semTalkPivot","Image","imagetab","Pivot","SemTalkTabSpecsTab","_selectionAttr","isattr","isgroup","isvisible","RelationValue","RangeValue","attrs","TabSpec","getAttributes","_columns_attr","_getSelectionDetails","isunique","setIndexSelected","typeoptions","_onTypeChange","invassoctypes","InvName","capobj","IsUni","utxt","item1","startoption","semTalkTabSpec","ChoiceGroup","MarqueeSelection","multiple","setKey","selectionPreservedOnEmptyClick","always","ad","SemTalkDialogTab","dialog","checkattributes","checkassociations","checksynonyms","checkaudit","checkclass","checknamespace","checkhyperlinks","InitInstDialog","semTalkDialog","SemTalkLabelsTab","defaultoptions","attroptions","isdefault","PropMaster","PropShape","ShowLabel","ShowAname","lx","idx","layoutName","lpos","deleteLabel","BuiltinInstLabels","semTalkLabel","SemTalkStyleTab","semTalkStyle","SemTalkSystemClassTab","HyperlinksEnabled","RefinementOfClass","ContentType","SharepointGoodlist","semTalkSystemClass","SemTalkAssociationTypeTab","connections","umloptions","_onUMLChange","IsCompositionAssociation","IsAggregation","Aggregate","Cyclic","Symmetric","Transitiv","UniqueModel","Unique","IsContainer","fromcon","South","tocon","North","fromtype","totype","AType","invname","SemTalkConnectionPointName","East","West","Expandable","FromConnection","ToConnection","FromType","ToType","dropdownStyles","dropdown","semTalkAssociationType","SemTalkAttributeTypeTab","IsList","SyncVisio","Raise","opt","semTalkAttributeType","SemTalkDiagramTypeTab","InstanceRoot","NewSLRoot","UseInheritanceRelations","UseAllRelationsOfSubclasses","Auto","Prefix","rootname","instrootname","slrootname","prefix","semTalkDiagramType","SemTalkCustomize","showSystemClass","showAssociationType","showAttributeType","showDiagramType","semTalkCustomize","FlowChartElement","SLOfftime","SemTalkInsert","isinsert","saveItem","Toggle","TreeItemActionsDisplayMode","DropdownTreeItemAction","prepareContextualMenuProps","treeItem","treeItemActions","useTargetWidth","treeItemAction","treeItemActionMenuItem","onActionExecute","actionCallback","treeItemActionCallback","checkForImmediateInvocations","invokeActionOnRender","contextualMenuProps","menuProps","menuIconProps","actionMore","ButtonTreeItemAction","prepareCommandBarButton","btnTitle","actionsToShow","CommandBarButton","actionButton","TreeItemActionsControl","displayMode","treeItemActionsDisplayMode","Buttons","availableActions","getAvailableActions","ContextualMenu","TreeItem","createChildNodes","paddingLeft","activeItems","parentCallbackExpandCollapse","parentCallbackOnSelect","onRenderItem","showCheckboxes","defaultExpandedChildren","expanded","defaultExpanded","leftOffset","isFirstRender","nodesToExpand","_itemSelected","_handleExpandCollapse","selectable","stopPropagation","blankspace","imageProps","subLabel","itemSubLabel","styleProps","marginLeft","contentStyles","listItem","tree","treeSelector","css","itemContent","noCheckBox","checkbox","renderItem","itemMenu","TreeView","pathTo","array","some","temp","loaded","handleTreeExpandCollapse","handleOnSelect","expandToSelected","defaultSelectedKeys","treeItems","selectedKeys","selectedChildren","selectedItems","getSelectedItems","selectAllChildren","isExpanded","onExpandCollapse","unselectArray","tempItem","unSelectChildren","isSelected","checkIfChildrenShouldBeSelected","Select","uniqBy","Unselect","onSelect","testMode","selectChildrenMode","selectChildrenIfParentSelected","All","Mount","Update","treeView","treeNodeItem","msalConfig","auth","clientId","authority","redirectUri","postLogoutRedirectUri","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","LogLevel","Info","Verbose","Warning","ensureClient","authProvider","Client","initWithMiddleware","ms365login","scopes","origin","msalInstance","PublicClientApplication","accounts","getAllAccounts","setActiveAccount","AuthCodeMSALBrowserAuthenticationProvider","account","interactionType","InteractionType","Popup","request","prompt","graphclient","addEventCallback","eventType","LOGIN_SUCCESS","payload","response","acquireTokenSilent","acquireTokenPopup","SemTalkTermSet","groupoptions","termsetoptions","groups","allimportitems","componentDidMount","msGraphClientFactory","getClient","clientID","termsetassoc","loadAssocTypes","termset","loadTermSet","termsetgroup","loadGroups","loadTermsets","loadOntology","assocname","SLHasDomain","SLHasRange","STTriggers","STTriggeredBy","attachedto","severeWarning","loadGroupItems","termsets","loadTermSetItems","rootlabel","termsetroot","fetchGraphItem","res0","termsetlabel","loadTerms","rx","addTermChildren","_treeItem","additems","expandItems","importtreeitems","localizedNames","TermSet","importItem","scn","sysclassname","callbackimport","cb2","exportItem","mergeItems","addTermSetChildren","citem","existing_items","cfnd","cbody","postGraphItem","res2","values","onTreeItemExpandCollapse","onTreeItemSelect","_items","_isExpanded","chi","onTreeItemExportExpandCollapse","addExportChildren","addTerms","slist","il","renderCustomTreeItem","paddingRight","treeitems","AllRootClasses","exporttreeitems","selectedexportitems","gr","dropdownWidth","SemTalkCompose","infotypes","curr_businessobj","curr_method","curr_state","curr_attr","_dropdown","loadGraphCompositions","ismethod","met","MethodCaption","StateCaption","AttributeCaption","getAllInfoTypes","matchName","getAllMethodTypes","getAllStateTypes","getAllAttributeTypes","setComposition","_ismethod","ComposedClass","copyExternVirtual","saveitem","matches","infoname","getAllCompositions","compositions","businf","stat","nitem","FindAMethod","FindAState","acl","MakeComposition","semTalkCompose","componentRef","SemTalkCreateDiagram","dn","diagram","getSelectedCount","SemTalkAbout","SemTalkShapeStyle","white","getColorFromString","_menuButtonFont","_menuButtonFill","_menuButtonGradient","_menuButtonStroke","colorCells","fontColor","selectedShapes","isvertex","bw","fo","al","lp","vlp","rounded","curved","dashed","resize","shadow","pickedFontColor","createColorObj","pickedGradientColor","pickedFillColor","opacity","pickedStrokeColor","edgestyle","elbow","labelPosition","verticalLabelPosition","dashPattern","startArrow","endArrow","Save","Reset","Copy","shapestyle","Paste","setWidth","setGeometry","setHeight","resetItem","copyItem","pasteItem","findcolor","swatchColorPickerOnCellHovered","_color","edgeStyleOptions","shapeOptions","endArrowOptions","startArrowOptions","alignOptions","alignVOptions","dropdownStylesSm","dashpatterns","onChangeEdgeStyle","onChangeShapeStyle","onChangeVAlign","onChangelabelPosition","onChangelabelVPosition","onChangeElbow","onChangeStartArrow","onChangeEndArrow","selectFontColor","showColorPickerFont","selectFillColor","showColorPickerFill","selectGradientColor","showColorPickerGradient","selectStrokeColor","showColorPickerStroke","_updateFillColor","colorObj","hexcode","hex","_updateFontColor","_updatGradientColor","_updateStrokeColor","colorPickerStyles","panel","colorRectangle","fontcolors","op","colors","fcObj","semTalkShapeStyle","SwatchColorPicker","onCellFocused","columnCount","cellShape","cellHeight","cellWidth","cellBorderWidth","_i","Slider","showValue","DirectionalHint","leftCenter","ColorPicker","showPreview","alphaType","Excel","import_excel","readAsArrayBuffer","buffer","Workbook","xlsx","load","then","workbook","book","eachSheet","worksheet","sheet","eachRow","onOpenExcelHandler","excel_workbook","export_worksheet","addWorksheet","getRow","addRow","amountRemaining","formula","percentRemaining","views","xSplit","ySplit","activeCell","save_excel","writeBuffer","data1","Blob","createObjectURL","anchor","download","revokeObjectURL","SemTalkTable","_allItems","_colspec","_valcache","_filters","_rels","_classitem","_submenus","_onItemsSelectionChanged","array2String","join","onContextualMenuDismissed","onColumnContextMenu","columnActionsMode","ColumnActionsMode","getContextualMenuProps","menuitems","canCheck","_onSortColumn","valc","_onFilterColumn","bottomLeftEdge","sortedItems","filtervalues","applyFilters","search","gridStyles","selectors","display","flexDirection","alignItems","headerWrapper","flex","contentWrapper","overflowY","overflowX","onRenderDetailsHeader","defaultRender","onRenderColumnHeaderTooltip","tooltipHostProps","xlsxExport","col","wb","_clear","_dosearch","newvalue","_dosearch10","isontology","SemTalkDiagramType","cacheKey","subMenuProps","unshift","hasDropdown","pprint","scla","items0","slcontrol","slmf","dataobj","information","output","input","issyscla","fst","dial","BreadCrumbs","attl","clal","rinst","rname","rcap","lol","infcap","sucap","irname","ircap","ilol","acap","getValues","issearch","filteredItems","grow","SearchBox","onSearch","onClear","constrainMode","ConstrainMode","unconstrained","fixedColumns","ariaLabelForSelectionColumn","ariaLabelForSelectAllCheckbox","SemTalkFacet","setSelected","dim","toggle_hidden","isFacetSelected","_facetcolumns","count","facets","dimname","API_ENDPOINT","dimlist","filtertypes","dimobj","array2string","dict2string","renderFolder","getOrderedFacets","selectedValues","facet","facet1","concat","hostStyles","SemTalkFacetSearch","mapContainer","docid","file","path","doctype","vorhaben","summary","adresse","Denkmalname","hidas","renderFacets","foundfacets","fl","facvals","_speak","SpeechSynthesisUtterance","volume","speechSynthesis","speak","text2speech","resolved","pageSize","filterkey","fetchResolved","metadata","fetchFacets","dosearch","filterKey","dosearch10","addFacet","removeFacet","facetIndex","getQueryOptions","params","i0","regex","page_size","pagesCount","resolvedCount","previousPage","nextPage","onFilterContextualMenuDismissed","fac","pdfurl","lat","lng","chips","boxSide","containerStackTokens","renderChips","SemTalkSettings","slangtab","_guilanguagedropdownOptions","_datalanguagedropdownOptions","_theme","_iconcolor","_fonts","_semanticsdropdownOptions","_corpusdropdownOptions","selectGuiLang","sguilanguage","selectDataLang","slanguage","selectTheme","getDefaultThemes","themeStyle","DarkMode","MiddleMode","BlueMode","GreenMode","OrangeMode","userDefThemeStyle","OpenFluentUIDesigner","selectGuiFont","guifont","selectIconColor","iconcolor","selectFont","selectSemanticServer","semanticsserver","ssemantics","selectSemanticCorpus","semanticscorpus","scorpus","setSemanticDistance","semanticsdistance","sdistance","toggleAutoComplete","setUserDefTheme","userDefTheme","bpmn","refinements","simulation","ll","showlanguage","showtoolbar","gf","th","ic","udth","sec","semantics_corpus","semantics_distance","app","applicationid","aut","tg","tr","semconnecttoken","usemongos","languagetab","langoptions","glangoptions","divHostStyle","SemTalkModelProperty","docname","propname","prop","propvalue","pn","semTalkModelProperty","_option","SemTalkNavigation","_click","addChildren","last_object","last_node","nodes","Refinements","editPage","deletePage","editObject","deleteObject","loadTree","AllRootDiagrams","rd","updateRec","removeRec","RemoveByID","OnDiagramDeleted","diagname","roleprocesses","semTalkNavigation","SemTalkObjects","SLBreakpoint","ilist","IsReadOnly","customizeObject","procroot","proc","SLRoot","oldclass","OnClassDeleted","OnInstanceDeleted","semTalkObjects","islist","iscombo","SemTalkAssociationTypes","selecteditems","sitems","uitems","OnDeleted","semTalkAssociationTypes","SemTalkAttributeTypes","semTalkAttributeTypes","SemTalkMethodTypes","semTalkMethodTypes","SemTalkStateTypes","semTalkStateTypes","SemTalkDiagramTypes","SemTalkRepository","collectionnames","_lookupselection","_addclasssubmenus","_propname","_objectname","_comboBoxInsert","initListOptions","allclasses","bn","initColumnOptions","D","E","getColumnOptions","cls","columnoptions","currentColName","attgroups","acla","addClassCommands","infname","nlist","selCollection","insertoptions","reload","mname","getCommands","getCollections","collection","newList","newColumn","xlsxImport","mongoitems","getKeys","submenus","dom","rows1","getRows","filterItem","getColumns","collections","colname","setLookupOptions","rowid","vlist","attrmongooptions","optionmongoitem","optionname","lookupoptions","selectmultiple","setLookupOptionsClass","selectionText","selectLookupOptions","flt","mongoitem","resizable","sortable","filterable","editable","TextEditor","editorOptions","editOnClick","toggleHideDialog","hideConfirmDeletionDialog","deleteConfirmedItem","objectexists","isincollection","selectedOptions","curObject","pname","addnewcolumn","addnewlist","updateitem","islookupcolumn","newvalues","_lookupcolumns","_closeLookupDialog","_saveItem","key2text","onGridRowsUpdated","indexes","head","toMongo","sheetname","ncol","newtext","_getLookupSelectionDetails","_getLookupSelection","classcolumnoptions","showitems","sortColumns","listoptions","gridstyle","grid","multiSelect","subText","onRowsChange","onRowClick","defaultColumnOptions","SemTalkTableEditor","_columnselection","_addclass_submenus","selclass","bl2","colopts","cols","defaultColumns","selClass","selectedColumns","setAllSelected","selectcolumns","semtalkitems","isEditable","name_header","_p","headerRenderer","syscla","FindMethod","FindState","iname","_columncolumns","_closeColumnDialog","ndlist","selectoptions","selectfreeform","repoItems","extobj","obj1","semtalkitem","mnames","toSemTalk","val2","vallist","selcolumns","_getColumnSelectionDetails","searchpage","selcols","onPaste","handlePaste","sourceColumnKey","sourceRow","targetColumnKey","targetRow","SemTalkTableImport","arrayBuffer","incomingfile","UploadExcel","fileReader","Uint8Array","fromCharCode","bstr","XLSX","first_sheet_name","SheetNames","Sheets","curUpload","sheet_to_json","raw","curItems","tmpcolumns","tmpColumn","tmpkeys","curItem","tmpItem","curItemElement","importData","tasks","swimlanes","getHRElements","CollArray","HRElements","DoImport","SLACTIVITY","SLNode","SLObject","ObjectID","taskCount","xpos","TaskNode","TaskObject","newSwimlane","curSwimlane","deleteSwimlane","selRow","addnewSwimlane","updateTask","setSelectedRows","rowIdx","rowKeyGetter","curListObject","rowCount","curTask","gridElement","onSelectedRowsChange","accept","SemTalkFieldSetList","selitem","newRow","ind","_n","print_extern","st","scope1","lnktitle","datafields","dummy","trigger","SemTalkForm","buildForm","startset","pivotChanged","ismult","mult","reactfs","itemKey","printItem","jsPDF","fld","autoTable","openItem","semTalkForm","onLinkClick","LoginIntern","dismiss","handleCancel","SPExplorer","_ctx","_site","_listName","_filename","_fieldname","_query","_title","_url","_body","_userId","version","err","err2","SemTalkCommandBar","undoItem","redoItem","langItem","getCommandBarItems","counter","leftItems","subItems","pushToItem","DoCommand","SelectDataLang","subItem","arialabel","updateItems","isrefine","iscomp","isprocess","ismongo","isdocument","ParseMenu","dynitems","faritems","iconOnly","keyEvent","ShowHelp","iscomposable","ot","leftitems","semTalkCommandBar","farItems","SemTalkToolBar","semTalkToolBar","SemTalkBreadCrumbs","_onBreadcrumbItemClicked","parseInt","semTalkBreadCrums","Breadcrumb","SemTalkExpand","distance","_simcolumns","toPrecision","aa","simsel","simcallback","_onSimItemInvoked","simitems","qitems","invitems","semantics_service","quterms","match","SemTalkBPMNExport","xmlns","bpmndi","ExportBPMN","vr","bpmndefinitions","collab","MakeUnixValue","rtln","vispg","iid","pid","pobj","slnd","slcont","curObj","ExportSLContent","curSTObj","curAsso","curRel","fromMXObj","fromObj","toMXObj","toObj","curORel","curEdge","getTriggerDefinitionOfEvents","xmlobj","tmpCondition","toLocaleLowerCase","tmpAttri","evtTrigger","szVal","ch","szRet","objID","_pname","slPos","pinx","piny","SemTalkBPMNImport","incomingfileAuto","UploadBPMN","curFileString","BPMNXML","processObjs","xpath","SLObjWithElements","allElements","Participants","processObj","tmpPart","lane","nodeValue","findChildrenOfLane","tmpPosObj","getBPMNPosition","part","sortArray","curParticipant","newSortArray","SortNumberArray","SortedSwimlane","SLObjWithElement","getElementsofLane","tm","enm","eim","exm","dm","SLEVENT","SLEXITPOINT","SLDECISION","SLName","SLElements","tashape","bpmntype","gashape","GatewayNode","GatewayObject","EventNode","EventObject","AssocElements","getAssociationElement","tmpAssoc","SourceObject","sourceRef","MXObject","TargetObject","targetRef","swap","LaneChildrenXML","processXML","LaneElements","lc","pe","participantXML","bpmnXML","curElement","localName","tmpProcType","bpmndiElements","tmpObj","bpmnFlow","AssocElement","disableWarnings","SemTalkOnline","ischeckedout2me","diagramroot","otherroot","click_x","click_y","autosave","checkouttoken_templist","checkouttoken_tempid","semantics","server","ResetMetaModel","patchSubTask","onTabClose","now","SemTalkStatus","initElectron","getfiledata","loadDocumentFromJSON","decodelzutf8","loadBase","restored","pgid","_readonly","checkReadOnly","getUsername","initSubTask","mxencoding","mx","nn","decoded","patchEPC","cntpages","isLoading","ishoriz","isHorizontal","patchHyperlink","saveCheckoutToken","addListItem","releaseCheckoutToken","tdd","deleteListItem","CheckoutUserId","UserPrincipalName","pageContext","loginName","o2j","diags","mxg","d2","patchMasters","uploadXMLFile","onUploadXMLHandler","Merge","uploadBPMNFile","stbpmnprops","downloadBPMNFile","downloadWordFile","stwordprops","downloadXMLFile","updateSVG","modname","saveCurrentGraph","mergeDocument","getTXT","ob0","enableSwimlanes","loadPage","loadDocument","cres","u1","spCheckOutDocument","siteRelativeURL","t2","fetch","getMessage","stencils","_tseditor","itemid","shapetype","s1a","s2e","LoadStencil","doubleClick","setSelectionCell","hideComposeDialog","startEditingAtCell","visShapeExitedTextEdit","visShapesMoved","visShapesCopied","visConnectionsDeleted","newDocument","confirm","hideFileOpen","spexplorercaption","resetFileDialog","openDocument","filters","extensions","hideCustomizeDialog","hideExpandDialog","hideCreateDiagramDialog","hideHelp","hideInsertDialog","hideOpenLinkDialog","hidePropertyDialog","hideRelationDialog","hideShapeStyle","hideTermSetDialog","importDocument","saveDocument","saveAsDocument","blocked","url3","postTXT","defaultPath","addPage","newPage","pgn","visPageAdded","isconnectionpoints","zoomin","zoomout","zoomFit","zoomfit","zoomactual","currentTransaction","popupMenuRef","_menu","_edi","onShowContextualMenu","layerX","layerY","editCell","refineCell","refineObject","speakObject","rate","pitch","editClass","pgcl","npg","FindDiagramByName","goUp","InvRefinements","detachObject","connectShapes","groupShapes","ungroupShapes","composeCell","composeObject","hyperlinkObject","hideHyperlinkDialog","collapseCell","termstore","_closeInsertDialog","selectclass","selectCell","ChangeRelation","objid","_closeRelationDialog","_closeTermSetDialog","ExpandSimilarObject","ExpandSimilarClass","createPage","_closeCreateDiagramDialog","selectObject","expandObject","showShapeStyle","showForm","hideFormDialog","hideSubTaskDialog","isribbon","allitems","ribbonitem","subitems","sitemindex","sitem","ContextualMenuItemType","Divider","menuItems","getMenuItem","onclick","nmenu","FindLabelForMaster","hlist","hn","showContextualMenu","onHideContextualMenu","inst_cell","subcl_cell","checkOutDocument","checkedOut","checkInDocument","spCheckInDocument","deleteDocument","fileImage","msgbartype","altKey","menuitem","vectors","hasvector","WordVectors","corpus","vlist1","args1","related","res1","fobj","w2","sig","tobj","r1","initVectors","wordswithvector","invertedTaxo","rootnames","intents","words","negregex","jl","InvertedTaxonomy","tx","MS365Login","mgLogin","hidemgLoginDialog","_onClose","showPivot","showSearch","showFacetSearch","showSettings","showModelProperties","showDiag","showNav","showHie","showAssocTypes","showAttrTypes","showMethodTypes","showStateTypes","showDiagTypes","showRelTree","showRep","showProp","showRepositoryTable","showTableEditor","showTableImport","showOpen","filePickerResult","openlinkurl","openlinkcaption","cmd","NewDocument","OpenDocument","SaveDocument","SaveAsDocument","AutoSave","DownloadDocument","UploadDocument","ImportDocument","UploadBPMNFile","UploadXMLFile","DownloadBPMNFile","DownloadWordFile","DownloadXMLFile","CheckInDocument","CheckOutDocument","FileImage","PrintPreview","StartPanning","StopPanning","TogglePanZoom","ToggleStencil","DeleteShapes","ShapeStyle","ConnectionPoints","AlignHorizontalLeft","AlignHorizontalCenter","AlignHorizontalRight","AlignVerticalTop","AlignVerticalCenter","AlignVerticalBottom","ZoomIn","ZoomOut","ZoomFit","ZoomActual","Redraw","TogglePageBreaks","EditObject","SelectCell","EditClass","DeleteObject","ComposeObject","ConnectShapes","GroupShapes","UngroupShapes","HyperlinkObject","RefineObject","DetachObject","CustomizeObject","InsertSwimlane","ToggleDirection","CollapseCell","RefreshObject","EditPage","AddPage","DeletePage","GoUp","Insert","Termstore","mxCompactTreeLayoutV","mxCompactTreeLayoutI","mxCompactTreeLayoutVI","ShowForm","modprop","sessionstatus","mres","u0","txt1","pageprop","SLSVGPagePrefix","modattr","SLSVGAttribute","semTalkOnlineWebpart","showCommandBar","showToolBar","dismissButtonAriaLabel","ProgressIndicator","iframeHost","extraLarge","large","removeItem","showProps","propsVisible","navigateproperties","smallFluid","onItemClick","icj","themeTemplate","themePrimary","themeDark","themeDarker","themeDarkAlt","createTheme","defaultFontStyle","fontFamily","Customizations","applySettings","App","token","currLoginToken","getToken","blc","showcommandbar","baseURI","param","decodeURI","se","semantics_server","sdi","navVisible","searchVisible","diagVisible","hieVisible","Signup","password2","registrationkey","CloneDatabase","generate","destdb","semtalklib","destreponame","mongo2","reponame","users","conntoken","horizontalAlign","Logout","semmongologintokencookiename","UpdatePassword","handleForgotPassword","curURL","oldpassword","ForgotPasswordVerify","repeat_password","curSplitURLArguments","userToken","tokenString","ReactDOM","render","exact","_fn","BusinessClass","FindSemTalkRelationType","class","Load","MaxID","jclasses","jassoctypes","jdiagtypes","jinstances","jdiags","jmethodtypes","jstatetypes","jattrtypes","ob2","sc2","ss2","ssc","instance_map","shapeids","nd2","oldshpid","newshpid","ass2","oth2","ass2a","IsValid","oids","oidn","Utils","mastername","SemTalkNamedThing","otype","_name","_type","_tbase","_label_synonyms","_alt_synonyms","FindAltSynonym","SemTalkSynonym","langname","CurrentName","je","synonyms","namespace","inverse","syns","s2l","owner","synonym","_xd","SemTalkObject","indeletion","_comment","SrcID","Ghosted","_created","_createdby","_changed","_changedby","LinePattern","LineWeight","_refinement","_composition","_attributes","_associations","_invassociations","_nodes","_objectids","_objects","old","RemoveInvRefinement","AddInvRefinement","isnotop","cmpvalue","SetComposition","cc","AddInvComposition","getAttributeType","OnAttributeDeleted","CurrentValue","ptype","getAssociationType","rec","_LinkedObjectsRec","aname1","ptype1","alist1","fnd1","_InvLinkedObjectsRec","HasLink","suburl","typ","exi","fra","nwi","atti","attc","OnAttachmentAdded","llist","GetAttachment","ai","created","changed","createdBy","changedBy","linepattern","lineweight","composition","cl1","fclass","mt1","fmethod","mt","ot1","fother","st1","at1","feature","ftype","fop","fnot","fvalue","associations","nodelist","rclass","rtype","invassociations","nl","a2","OnBeforeDeleted","bcreate","SemTalkVirtualInstance","own","_virtualclass","_je","_element","_oth","_class","_instances","AddInstance","isanon","RemoveInstance","ots","otd","SemTalkHiddenRelation","parents","inslinks","dstparents","dstinst","dstinslinks","sups","reli","srel","sa","fnda","allsuperclassesrec","atypes","MakeLabelSpec","MasterNoDot","haslabels","CollectInstLabels","mn","SemTalkSharePointInstance","UniqueID","CTName","SPPrefix","RowID","_invcompositions","_classes","OnClassBeforeDeleted","cval","GetCurrentValue","rem","allsubclassesrec","existing","_t","MakeSharePointClass","glist","dstc","isclassrelation","pa","reltmp","xobj","found","suplist","slist2","xs","_rec","AllLinks","CollectClassLabels","SemTalkSharePointClass","_attrtypes","valuetype","FindSemTalkValueType","syncvisio","raise","SemTalkValueTypeName","NoHTML","OnColorChanged","RemoveAttribute","nohtml","vl","reltype","FromMin","FromMax","ToMin","ToMax","AddAssociation","AddInvAssociation","OnAssociationBeforeDeleted","RemoveAssociation","RemoveInvAssociation","SemTalkRelationTypeName","SemTalkLabels","_labels","_classlabels","ShowCAname","builtinInstLabels","builtinClassLabels","builtinBusinesClassLabels","master","SemTalkLabel","AddLabel","SemTalkClassLabel","AddClassLabel","ClassLabels","SetField","lbls","ShowAName","ShowCAName","a1","an1","classlabels","ml","AllLabels","ml2","AllClassLabels","newtxt2","newtxt3","newtxt4","newtxt5","newtxt6","newtxt7","newtxt8","newtxt9","newtxt10","RemoveLabel","RemoveClassLabel","LabelSpec","nolayoutinfo","hasimage","showimage","usegrphx","imgfile","pat","SemTalkTabSpecs","_tabspecs","isuni","tl","AddTabSpec","RemoveTabSpec","SemTalkInstDialog","CheckGeneral","CheckMethods","CheckStates","SemTalkClassDialog","CheckSharePoint","CheckRefinement","CheckDSN","SemTalkSystemClass","InstIcon","ClassIcon","BottomUpSubclasses","HideInClassDiagram","ClassDialog","TabClassSpecs","TabInstanceSpecs","MakeClassLabel","FindClassLabelForMaster","task","gateway","hideInClassDiagram","LocalInstDialog","LocalClassDialog","CheckGeneralClass","CheckNamespaceClass","CheckMethodsClass","CheckAttributesClass","CheckAssociationsClass","CheckSynonymsClass","CheckStatesClass","CheckAuditClass","CollectBusinessClassLabels","_invname","_assoctypes","cyclic","fromconnection","toconnection","symmetric","transitiv","aggregate","unique","iscontainer","uniquemodel","expandable","SemTalkDiagDialog","CheckEdit","CheckInsert","CheckFind","CheckGoUp","CheckRefresh","LocalDiagramDialog","MasterNames","_isclass","DoubleClick","_diagtypes","AllSystemSubClasses","cla1","n1","t1","i1","instanceroot","slroot","auto","doubleclick","_refinedby","_contents","vid","_diags","OnDiagramCreated","IsAllowedMaster","RefinedObjects","ndid","_BreadCrumbs","flist","_ir","blist","ir","extref","extref2","us","ui","SemTalkNode","uid","Width","Height","AddNode","RemoveNode","SemTalkAssociationNode","BeginX","BeginY","EndX","EndY","SemTalkBusinessClass","_methods","_states","m1","getMethodType","SemTalkMethod","OnMethodDeleted","getStateType","SemTalkState","OnStateDeleted","_statetypes","_methodtypes","AddState","RemoveState","AddMethod","RemoveMethod","SemTalkComposition","Op","NotOp","RemoveInvComposition","DeleteComposition","_currentnsp","_modelattr","LogAsync","_msg","_succeed","_nextfunction","oldvalue","OnAttributeRenamed","OnStateRenamed","OnAttachmentDeleted","OnAttachmentRenamed","OnLoaded","OnSaved","OnBeforeSaved","con","AllObjects","paging_from","paging_to"],"mappings":"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","file":"static/js/main.0d59f77a.chunk.js","sourcesContent":["// tslint:disable:no-empty-interface\r\n// tslint:disable:interface-name\r\nexport enum SemTalkType {\r\n  SemTalkClass = 0,\r\n  SemTalkInstance = 1,\r\n  SemTalkAssociation = 2,\r\n  SemTalkAttribute = 3,\r\n  SemTalkState = 4,\r\n  SemTalkMethod = 5,\r\n  SemTalkAttributeType = 6,\r\n  SemTalkStateType = 7,\r\n  SemTalkMethodType = 8,\r\n  SemTalkAssociationType = 9,\r\n  SemTalkSpecialization = 10,\r\n  SemTalkDiagram = 11,\r\n  SemTalkDiagramType = 12,\r\n  SemTalkNode = 13,\r\n  SemTalkAssociationNode = 14,\r\n  SemTalkTabSpec = 15,\r\n  SemTalkGenericTabSpec = 16,\r\n  SemTalkGenericAttributeTabSpec = 17,\r\n  SemTalkLabel = 18,\r\n  SemTalkClassLabel = 19,\r\n  SemTalkSynonym = 20,\r\n  SemTalkComposition = 21\r\n}\r\nexport enum SemTalkRelation {\r\n  SemTalkProperty = 0,\r\n  SemTalkSubClassOf = 1,\r\n  SemTalkInstanceOf = 2,\r\n  SemTalkSystemRelation = 3,\r\n  SemTalkHiddenRelation = 4\r\n}\r\nexport enum SemTalkValueType {\r\n  Symbol = 0,\r\n  File = 1,\r\n  Date = 2,\r\n  Duration = 3,\r\n  Float = 4,\r\n  Integer = 5,\r\n  Boolean = 6,\r\n  Color = 7,\r\n  Email = 8,\r\n  Password = 9,\r\n  URL = 10,\r\n  Tel = 11,\r\n  Script = 12\r\n}\r\nexport enum SemTalkBaseConstant {\r\n  SLClass = \"Class\",\r\n  SLInstance = \"Instance\",\r\n  SLDiagram = \"Diagram\",\r\n  SLSubClassOf = \"subClassOf_\",\r\n  SLInstanceOf = \"instanceOf\",\r\n  SLConsistsOf = \"consists of\",\r\n  SLHas = \"has\",\r\n  SLGeneric = \"Generic\",\r\n  SLAttachment = \"Attachment\",\r\n  SLhasAttachment = \"has Attachment\",\r\n  SLComment = \"Comment\",\r\n  SLDefinitionOf = \"definitionOf\",\r\n  SLLanguage = \"SemTalkLanguage\",\r\n  SLDocumentInfo = \"DocumentInfo\",\r\n  SLSwimlane = \"Swimlane\",\r\n  SLDisplays = \"displays\",\r\n  SLUserNumber = \"UserNumber\",\r\n  SLMXGAttribute = \"mxg\",\r\n  SLMXGPagePrefix = \"MXG_\",\r\n  SLSVGAttribute = \"svg\",\r\n  SLSVGPagePrefix = \"SVG_\",\r\n  SLHasDomain = \"hasDomain\",\r\n  SLHasRange = \"hasRange\"\r\n}\r\nexport enum ModelAttribute {\r\n  modname = \"modname\",\r\n  currentnsp = \"currentnsp\",\r\n  mxencoding = \"mxencoding\",\r\n  // mxg =\"mxg\",\r\n  forder = \"forder\",\r\n  Template = \"Template\",\r\n  ShowGenericDiagrams = \"ShowGenericDiagrams\",\r\n  BPMNMode = \"BPMNMode\",\r\n  notstr = \"NOT \",\r\n  SLComment = \"SLComment\",\r\n  SLCommentOf = \"SLCommentOf\",\r\n  // SLDefinitionOf = \"definitionOf\",\r\n  underlineRefinements = \"underlineRefinements\"\r\n}\r\nexport enum SemTalkConnectionPoint {\r\n  North = 0,\r\n  East = 1,\r\n  South = 2,\r\n  West = 3\r\n}\r\nexport enum SemTalkLanguage {\r\n  German = \"German\",\r\n  English = \"English\",\r\n  Spanish = \"Spanish\",\r\n  Japanese = \"Japanese\",\r\n  Russian = \"Russian\",\r\n  French = \"French\",\r\n  Traditional = \"Chinese (Traditional)\",\r\n  Simplified = \"Chinese (Simplified)\",\r\n  None = \"None\"\r\n}\r\n\r\nexport enum SemTalkLanguageCode {\r\n  German = \"de\",\r\n  English = \"en\",\r\n  Spanish = \"es\",\r\n  Japanese = \"ja\",\r\n  Russian = \"ru\",\r\n  French = \"fr\",\r\n  Traditional = \"cn-traditional\",\r\n  Simplified = \"cn-simplified\"\r\n}\r\nexport enum SemTalkObjectBaseEvent {\r\n  OnCreated = \"SemTalk_OnCreated\",\r\n  OnBeforeDeleted = \"SemTalk_OnBeforeDeleted\",\r\n  OnDeleted = \"SemTalk_OnDeleted\",\r\n  OnRenamed = \"SemTalk_OnRenamed\",\r\n  OnCommentChanged = \"SemTalk_OnCommentChanged\",\r\n  OnRefined = \"SemTalk_OnRefined\",\r\n  OnDetached = \"SemTalk_OnDetached\",\r\n  OnComposed = \"SemTalk_OnComposed\",\r\n  OnUnComposed = \"SemTalk_OnUnComposed\",\r\n  OnAttributeAdded = \"SemTalk_OnAttributeAdded\",\r\n  OnAttributeDeleted = \"SemTalk_OnAttributeDeleted\",\r\n  OnAttributeRenamed = \"SemTalk_OnAttributeRenamed\",\r\n  OnValueChanged = \"SemTalk_OnValueChanged\",\r\n  OnUserNumberChanged = \"SemTalk_OnUserNumberChanged\",\r\n  OnColorChanged = \"SemTalk_OnColorChanged\",\r\n  OnStateAdded = \"SemTalk_OnStateAdded\",\r\n  OnStateRenamed = \"SemTalk_OnStateRenamed\",\r\n  OnStateDeleted = \"SemTalk_OnStateDeleted\",\r\n  OnMethodAdded = \"SemTalk_OnMethodAdded\",\r\n  OnMethodDeleted = \"SemTalk_OnMethodDeleted\",\r\n  OnAssociationAdded = \"SemTalk_OnAssociationAdded\",\r\n  OnAssociationDeleted = \"SemTalk_OnAssociationDeleted\",\r\n  OnAssociationBeforeDeletedByID = \"SemTalk_OnAssociationBeforeDeleted\",\r\n  OnAssociationBeforeDeleted = \"SemTalk_OnAssociationBeforeDeleted\",\r\n  OnSubClassCreated = \"SemTalk_OnSubClassCreated\",\r\n  OnSubClassDeleted = \"SemTalk_OnSubClassDeleted\",\r\n  OnAttachmentAdded = \"SemTalk_OnAttachmentAdded\",\r\n  OnAttachmentDeleted = \"SemTalk_OnAttachmentDeleted\",\r\n  OnAttachmentRenamed = \"SemTalk_OnAttachmentRenamed\",\r\n  OnNodeCreated = \"SemTalk_OnNodeCreated\",\r\n  OnNodeDeleted = \"SemTalk_OnNodeDeleted\",\r\n  OnClassBeforeDeleted = \"SemTalk_OnClassBeforeDeleted\",\r\n  OnClassDeleted = \"SemTalk_OnClassDeleted\",\r\n  OnInstanceDeleted = \"SemTalk_OnInstanceDeleted\",\r\n  OnDiagramDeleted = \"SemTalk_OnDiagramDeleted\",\r\n  OnDiagramCreated = \"SemTalk_OnDiagramCreated\",\r\n  OnSynonymAdded = \"SemTalk_OnSynonymAdded\",\r\n  OnSynonymDeleted = \"SemTalk_OnSynonymDeleted\",\r\n  OnSynonymRenamed = \"SemTalk_OnSynonymRenamed\",\r\n  OnClassChanged = \"SemTalk_OnClassChanged\",\r\n  OnLoaded = \"SemTalk_OnLoaded\",\r\n  OnSaved = \"SemTalk_OnSaved\",\r\n  OnBeforeSaved = \"SemTalk_OnBeforeSaved\",\r\n  OnModelAttributeChanged = \"SemTalk_OnModelAttributeChanged\",\r\n}\r\nexport enum SemTalkComposeOrder {\r\n  \"NounVerb\"= \"0\",\r\n  \"VerbNoun\"= \"1\"\r\n}\r\nexport interface IObjectBase {\r\n  _loading: boolean;\r\n  _callbacks: any[];\r\n  _objects: { [name: string]: ISemTalkObject };\r\n  _objectids: { [id: string]: ISemTalkObject };\r\n  _classes: { [id: string]: ISemTalkClass };\r\n  _instances: { [id: string]: ISemTalkInstance };\r\n  _attrtypes: { [id: string]: ISemTalkAttributeType };\r\n  _statetypes: { [id: string]: ISemTalkStateType };\r\n  _assoctypes: { [id: string]: ISemTalkAssociationType };\r\n  _methodtypes: { [id: string]: ISemTalkMethodType };\r\n  _diagtypes: { [id: string]: ISemTalkDiagramType };\r\n  _diags: { [id: string]: ISemTalkDiagram };\r\n  // _languages: string[];\r\n  _currentnsp: string;\r\n  LogAsync(msg: any, succeed?: () => void, nextfunction?: () => void): void;\r\n  _modelattr: { [name: string]: string };\r\n\r\n  ObjectName: string;\r\n  User: string;\r\n  ID: number;\r\n\r\n  maxid: number;\r\n  CurrentNsp: string;\r\n  GetModelAttribute(name: string): string;\r\n  SetModelAttribute(name: string, value: any): void;\r\n  AllModelAttributes(): string[];\r\n  // AllLanguages(): string[];\r\n  PostEvent(evt: any, obj: ISemTalkNamedThing | null, arg0?: any, arg1?: any, arg2?: any): void;\r\n  PostAny(m: any): void;\r\n  Log(msg: string): void;\r\n  // OnNodeCreated(n: SemTalkNode): void;\r\n  // OnNodeDeleted(n: SemTalkNode): void;\r\n  // PostEvent(evt: any, obj: SemTalkNamedThing | null, arg0?: any, arg1?: any, arg2?: any): void;\r\n  SemTalkTypeName(type: SemTalkType): string;\r\n  SemTalkConnectionPointName(con: SemTalkConnectionPoint): string;\r\n  // FindObjectByID(id: number): SemTalkObject | null;\r\n  // FindAssociationType(name: string): SemTalkAssociationType | null;\r\n  OnCreated(n: ISemTalkObject): void;\r\n  OnBeforeDeleted(obj: ISemTalkObject): void;\r\n  OnDeleted(obj: ISemTalkObject): void;\r\n  OnRenamed(obj: ISemTalkObject, oldname: string): void;\r\n  OnCommentChanged(obj: ISemTalkObject, oldvalue: string | null, newvalue: string | null): void;\r\n  OnRefined(obj: ISemTalkObject, old: ISemTalkDiagram): void;\r\n  OnDetached(obj: ISemTalkObject, value: ISemTalkDiagram): void;\r\n  OnComposed(obj: ISemTalkObject): void;\r\n  OnUnComposed(obj: ISemTalkObject): void;\r\n  OnAttributeAdded(obj: ISemTalkAttribute): void;\r\n  OnAttributeDeleted(obj: ISemTalkAttribute): void;\r\n  OnAttributeRenamed(obj: ISemTalkAttribute): void;\r\n  OnValueChanged(obj: ISemTalkAttribute, oldvalue: any): void;\r\n  OnUserNumberChanged(obj: ISemTalkAttribute, oldvalue: string): void;\r\n  OnColorChanged(obj: ISemTalkAttribute, oldvalue: string): void;\r\n  OnStateAdded(obj: ISemTalkState): void;\r\n  OnStateRenamed(obj: ISemTalkState, oldvalue: any): void;\r\n  OnStateDeleted(obj: ISemTalkState): void;\r\n  OnMethodAdded(obj: ISemTalkMethod): void;\r\n  OnMethodDeleted(obj: ISemTalkMethod): void;\r\n  OnAssociationAdded(obj: ISemTalkAssociation): void;\r\n  OnAssociationDeleted(obj: ISemTalkAssociation): void;\r\n  OnAssociationBeforeDeletedByID(obj: ISemTalkAssociation): void;\r\n  OnAssociationBeforeDeleted(obj: ISemTalkAssociation): void;\r\n  OnSubClassCreated(obj: ISemTalkSpecialization): void;\r\n  OnSubClassDeleted(obj: ISemTalkSpecialization): void;\r\n  OnAttachmentAdded(obj: ISemTalkAssociation): void;\r\n  OnAttachmentDeleted(obj: ISemTalkAssociation): void;\r\n  OnAttachmentRenamed(obj: ISemTalkAssociation): void;\r\n  OnNodeCreated(obj: ISemTalkObject, d: ISemTalkDiagram, s: string): void;\r\n  OnNodeDeleted(obj: ISemTalkObject, d: ISemTalkDiagram, s: string): void;\r\n  OnClassBeforeDeleted(obj: ISemTalkClass): void;\r\n  OnClassDeleted(obj: ISemTalkClass): void;\r\n  OnInstanceDeleted(obj: ISemTalkInstance): void;\r\n \r\n  OnDiagramDeleted(obj: ISemTalkDiagram): void;\r\n  OnDiagramCreated(obj: ISemTalkDiagram): void;\r\n  // OnDiagramClassChanged(obj: ISemTalkDiagram): void;\r\n  OnSynonymAdded(obj: ISemTalkSynonym): void;\r\n  OnSynonymDeleted(obj: ISemTalkSynonym): void;\r\n  OnSynonymRenamed(obj: ISemTalkSynonym, oldname: string): void;\r\n  OnClassChanged(ins: ISemTalkInstance, old: ISemTalkClass | null): void;\r\n  OnLoaded(filename: string): void;\r\n  OnSaved(filename: string): void;\r\n  OnBeforeSaved(filename: string): void;\r\n  OnModelAttributeChanged(attr: string, oldvalue: any, newvalue: any): void;\r\n\r\n  FindAttributeType(name: string): ISemTalkAttributeType | null;\r\n  FindStateType(name: string): ISemTalkStateType | null;\r\n  FindMethodType(name: string): ISemTalkMethodType | null;\r\n  FindAssociationType(name: string): ISemTalkAssociationType | null;\r\n  FindDiagramType(name: string): ISemTalkDiagramType | null;\r\n  FindClass(name: string): ISemTalkClass | null;\r\n  FindClassByID(id: number): ISemTalkClass | null;\r\n  FindSystemClass(name: string): ISemTalkSystemClass | null;\r\n  FindBusinessClass(name: string): ISemTalkBusinessClass | null;\r\n  FindInstance(name: string): ISemTalkInstance | null;\r\n  FindInstanceByID(id: number): ISemTalkInstance | null;\r\n  FindDiagram(name: string): ISemTalkDiagram | null;\r\n  FindDiagramByName(name: string): ISemTalkDiagram | null;\r\n  FindDiagramByID(id: number): ISemTalkDiagram | null;\r\n  FindObject(tname: SemTalkType, name: string): ISemTalkObject | null;\r\n  FindObjectByID(id: number): ISemTalkObject | null;\r\n  FindNodeByID(id: string): ISemTalkNode | null;\r\n  AllClasses(): ISemTalkClass[];\r\n  AllRootClasses(): ISemTalkClass[];\r\n  AllReadOnlyClasses(): ISemTalkClass[];\r\n  AllSystemClasses(): ISemTalkSystemClass[];\r\n  AllDiagramTypes(): ISemTalkDiagramType[];\r\n  AllMethodTypes(): ISemTalkMethodType[];\r\n  AllAssociationTypes(): ISemTalkAssociationType[];\r\n  AllAttributeTypes(): ISemTalkAttributeType[];\r\n  AllStateTypes(): ISemTalkStateType[];\r\n  AllInstances(): ISemTalkInstance[];\r\n  AllDiagrams(): ISemTalkDiagram[];\r\n  AllObjects(): ISemTalkObject[];\r\n  SemTalkRelationTypeName(r: SemTalkRelation): string;\r\n  FindSemTalkRelationType(s: string): SemTalkRelation;\r\n  SemTalkValueTypeName(r: SemTalkValueType): string;\r\n  FindSemTalkValueType(s: string): SemTalkValueType;\r\n  SemTalkTypeName(r: SemTalkType): string;\r\n  // Load(s: string, nfn?: () => void): void;\r\n  MakeClass(newname: string, id?: number | null): ISemTalkClass;\r\n  IsClass(obj: any): boolean;\r\n  MakeSystemClass(newname: string, id?: number | null): ISemTalkSystemClass;\r\n  MakeSharePointClass(newname: string, id?: number | null): ISemTalkSharePointClass;\r\n  IsSystemClass(obj: any): boolean;\r\n  MakeBusinessClass(newname: string, id?: number | null): ISemTalkBusinessClass;\r\n  MakeComposition(own: ISemTalkObject, cls: ISemTalkBusinessClass, met: ISemTalkMethodType | null, sta: ISemTalkStateType | null,\r\n    attr: ISemTalkAttributeType | null, oth?: ISemTalkBusinessClass | null, op?: string,\r\n    isnotop?: boolean, cmpvalue?: any): ISemTalkComposition;\r\n  IsBusinessClass(obj: any): boolean;\r\n  MakeInstance(cla: ISemTalkClass, newname: string, otype: SemTalkType, id?: number | null): ISemTalkInstance;\r\n  IsInstance(obj: any): boolean;\r\n  IsAssociation(obj: any): boolean;\r\n  MakeAttributeType(newname: string, id?: number | null): ISemTalkAttributeType;\r\n  IsAttributeType(obj: any): boolean;\r\n  MakeAttribute(obj: ISemTalkObject, cla: ISemTalkAttributeType, val: any | null): ISemTalkAttribute;\r\n  MakeMethodType(newname: string, id?: number | null): ISemTalkMethodType;\r\n  IsMethodType(obj: any): boolean;\r\n  MakeStateType(newname: string, id?: number | null): ISemTalkStateType;\r\n  IsStateType(obj: any): boolean;\r\n  IsDiagramType(obj: any): boolean;\r\n  MakeDiagramType(newname: string, id?: number | null): ISemTalkDiagramType;\r\n  IsAssociationType(obj: any): boolean;\r\n  MakeAssociationType(ptype: SemTalkRelation, newname: string, id?: number | null): ISemTalkAssociationType;\r\n  MakeNode(diag: ISemTalkDiagram, obj: ISemTalkObject, shpid: string, master?: string): ISemTalkNode;\r\n  IsNode(obj: any): boolean;\r\n  MakeAssociationNode(diag: ISemTalkDiagram, obj: ISemTalkAssociation, shpid: string, master?: string): ISemTalkAssociationNode;\r\n  IsAssociationNode(obj: any): boolean;\r\n  MakeDiagram(cla: ISemTalkDiagramType, newname: string, otype?: SemTalkType, id?: number): ISemTalkDiagram;\r\n  IsDiagram(obj: any): boolean;\r\n  MakeLabelSpec(): ILabelSpec;\r\n  SearchObjects(str: string): ISemTalkObject[];\r\n  SearchNodes(str: string, paging_from?: number, paging_to?: number): ISemTalkNode[];\r\n  SearchDiagram(diagid: number, str: string): ISemTalkNode[];\r\n}\r\n\r\nexport interface ISemTalkNamedThing {\r\n  ID: number;\r\n  ObjectBase: IObjectBase;\r\n  ID2Name: string;\r\n  ID2NameNsp(): string;\r\n  ObjectName: string;\r\n  ObjectCaption: string;\r\n  ObjectType: SemTalkType;\r\n  //  CurrentName(): string;\r\n  MakeSynonym(name: string, lang: string, isinv?: boolean): ISemTalkSynonym;\r\n  MakeAltSynonym(name: string, lang: string): ISemTalkSynonym;\r\n  FindSynonym(lang: string): ISemTalkSynonym | undefined;\r\n  FindAltSynonym(name: string, lang: string): ISemTalkSynonym | undefined;\r\n  DeleteSynonym(lang: string): ISemTalkNamedThing;\r\n  DeleteAltSynonym(name: string, lang: string): ISemTalkNamedThing;\r\n  Synonyms(): ISemTalkSynonym[];\r\n  AltSynonyms(): ISemTalkSynonym[];\r\n  ID2NameNspLan(lang: string): string;\r\n  AllSynonyms(): ISemTalkSynonym[];\r\n}\r\n\r\nexport interface ISemTalkObject extends ISemTalkNamedThing {\r\n  ID: number;\r\n  ObjectType: SemTalkType;\r\n  Comment: string;\r\n  Refinement: ISemTalkDiagram | null;\r\n  ExtRefinement: string | null;\r\n  EditLink: string | null;\r\n  ID2Namespace: string;\r\n  ID2NameNsp(): string;\r\n  Created: string;\r\n  Changed: string;\r\n  CreatedBy: string;\r\n  ChangedBy: string;\r\n  indeletion: boolean;\r\n\r\n  // ignore(): void;\r\n  Delete(): void;\r\n  Associations(): ISemTalkAssociation[];\r\n  InvAssociations(): ISemTalkAssociation[];\r\n  AssociationTypes(): ISemTalkAssociationType[];\r\n  InvAssociationTypes(): ISemTalkAssociationType[];\r\n  Attachments(): ISemTalkAssociation[];\r\n  Attributes(): ISemTalkAttribute[];\r\n  AllAttributes(): ISemTalkAttribute[];\r\n  GetAttributeOwner(attr: string | ISemTalkAttributeType): ISemTalkAttribute | null;\r\n  MapProperties(fn: (x: any) => void): void;\r\n  FindAttribute(name: string | ISemTalkAttributeType): ISemTalkAttribute | null;\r\n  MakeAttribute(name: string | ISemTalkAttributeType, value: any): ISemTalkAttribute;\r\n  DeleteAttribute(name: string | ISemTalkAttributeType): void;\r\n  MakeAssociation(name: string | ISemTalkAssociationType, oth: ISemTalkObject, type?: SemTalkRelation,\r\n    id?: number, fn?: (cla: ISemTalkAssociationType, ptype: SemTalkRelation, fromobj: ISemTalkObject, toobj: ISemTalkObject, i: number) => ISemTalkAssociation): ISemTalkAssociation;\r\n  DeleteAssociation(attr: string | ISemTalkAssociationType, toobj: ISemTalkObject): void;\r\n  GetValue(name: string): any;\r\n  SetValue(name: string, value: any): any;\r\n  GetCurrentValue(aname: string, lang?: string): any;\r\n  // AddNode(n: SemTalkNode): SemTalkNode;\r\n  // RemoveNode(n: SemTalkNode): void;\r\n  LinkedObjects(attr: string | ISemTalkAssociationType, rec?: boolean, ptype?: SemTalkRelation | null): ISemTalkObject[];\r\n  InvLinkedObjects(attr: string | ISemTalkAssociationType, rec?: boolean, ptype?: SemTalkRelation | null): ISemTalkObject[];\r\n  Links(attr: string | ISemTalkAssociationType, ptype?: SemTalkRelation | null): ISemTalkAssociation[];\r\n  InvLinks(attr: ISemTalkAssociationType | string, ptype?: SemTalkRelation | null): ISemTalkAssociation[];\r\n  HasLink(attr: ISemTalkAssociationType | string, other: ISemTalkObject, ptype?: SemTalkRelation | null): boolean;\r\n  HasDirectLink(attr: ISemTalkAssociationType | string, other: ISemTalkObject, ptype?: SemTalkRelation | null): boolean;\r\n  // IsValid(dst: ISemTalkObject, attr: ISemTalkAssociationType | string): boolean;\r\n  Nodes(): ISemTalkNode[];\r\n  FindNode(d: ISemTalkDiagram, s?: string): ISemTalkNode[];\r\n  UpdateLabel(mastername?: string): ILabelSpec;\r\n  Composition(): ISemTalkComposition | null;\r\n  MakeComposition(cls: ISemTalkBusinessClass, met: ISemTalkMethodType | null, sta: ISemTalkStateType | null,\r\n    attr: ISemTalkAttributeType | null, oth?: ISemTalkBusinessClass | null, op?: string,\r\n    isnotop?: boolean, cmpvalue?: any): ISemTalkComposition;\r\n  DeleteComposition(): void;\r\n  // SetComposition(a: ISemTalkComposition | null): ISemTalkComposition | null;\r\n  RenameObject(value: string): void;\r\n  RemoveAttribute(a: ISemTalkAttribute): void;\r\n  AddNode(n: ISemTalkNode): ISemTalkNode;\r\n  RemoveNode(a: ISemTalkNode): void;\r\n  AddAssociation(a: ISemTalkAssociation): ISemTalkAssociation;\r\n  AddInvAssociation(a: ISemTalkAssociation): ISemTalkAssociation;\r\n  RemoveAssociation(a: ISemTalkAssociation): ISemTalkAssociation;\r\n  RemoveInvAssociation(a: ISemTalkAssociation): ISemTalkAssociation;\r\n  FindAssociation(attr: string | ISemTalkAssociationType, toobj: ISemTalkObject, ptype?: SemTalkRelation | null): ISemTalkAssociation | null;\r\n  MakeAttachment(link: string, label?: string, nsp?: string, suburl?: string, typ?: string, exi?: string, fra?: string, nwi?: boolean): ISemTalkInstance | null;\r\n  GetAttachment(name: string): ISemTalkAssociation | null;\r\n  DeleteAttachment(name: string): void;\r\n  SystemClass(): ISemTalkSystemClass | null;\r\n}\r\nexport interface ISemTalkClass extends ISemTalkObject {\r\n  // IsSystemClass: boolean;\r\n  IsReadOnly: boolean;\r\n  Load(c: any): any;\r\n  LoadXML(c: Element): void;\r\n  Save(c: any): ISemTalkClass;\r\n  SaveXML(x: XMLDocument, c: HTMLElement): void;\r\n  Clone(c: ISemTalkClass): any;\r\n  SuperClasses(): ISemTalkClass[];\r\n  SubClasses(): ISemTalkClass[];\r\n  AllSuperClasses(): ISemTalkClass[];\r\n  AllSubClasses(): ISemTalkClass[];\r\n  AllAttributes(): ISemTalkAttribute[];\r\n  AllAssociations(): ISemTalkAssociation[];\r\n  AllInvAssociations(): ISemTalkAssociation[];\r\n  AllLinkedObjects(aname: string, rec?: boolean, ptype?: SemTalkRelation | null): ISemTalkObject[];\r\n  AllInvLinkedObjects(aname: string, rec?: boolean, ptype?: SemTalkRelation | null): ISemTalkObject[];\r\n  AllAttachments(): ISemTalkAssociation[];\r\n  AllLinks(aname: string): ISemTalkAssociation[];\r\n  AllInvLinks(aname: string): ISemTalkAssociation[];\r\n  SystemClass(): ISemTalkSystemClass | null;\r\n  IsParent(s: ISemTalkClass): boolean;\r\n  MakeInstance(n?: string, t?: SemTalkType, i?: number): ISemTalkInstance;\r\n  MakeSharePointInstance(n?: string, t?: SemTalkType, i?: number): ISemTalkSharePointInstance;\r\n  Instances(): ISemTalkInstance[];\r\n  AllInstances(): ISemTalkInstance[];\r\n  MakeSubClass(n: string, i?: number): ISemTalkClass;\r\n  MakeSharePointSubClass(n: string, i?: number): ISemTalkSharePointClass;\r\n  DeleteSubclassOf(c: ISemTalkClass): void;\r\n  // ClassLabels(mastername?: string): SemTalkClassLabel[];\r\n  AllValidClassRelations(dst: ISemTalkObject): ISemTalkAssociationType[];\r\n  GetRelationOtherBases(rel: ISemTalkAssociationType, ptype?: SemTalkRelation | null): ISemTalkClass[];\r\n  GetInvRelationOtherBases(rel: ISemTalkAssociationType, ptype?: SemTalkRelation | null): ISemTalkClass[];\r\n  GetCurrentValue(aname: string, lang?: string): any;\r\n  AddSubclassOf(c: ISemTalkClass): ISemTalkSpecialization | null;\r\n  AddInstance(a: ISemTalkInstance): ISemTalkInstance;\r\n  RemoveInstance(a: ISemTalkInstance): void;\r\n  AddInvComposition(a: ISemTalkComposition): ISemTalkComposition | null;\r\n  InvCompositions(): ISemTalkComposition[];\r\n  RemoveInvComposition(a: ISemTalkComposition): void;\r\n  IsLeaf: boolean;\r\n  AllAssociationTypes(): ISemTalkAssociationType[];\r\n  AllInvAssociationTypes(): ISemTalkAssociationType[];\r\n  AllAttributeTypes(): ISemTalkAttributeType[];\r\n  UsageCount(): number;\r\n  IsValid(dst: ISemTalkObject, attr: ISemTalkAssociationType | string): boolean;\r\n  UpdateLabel(mastername?: string): ILabelSpec;\r\n  FindSpecialization(toobj: ISemTalkClass): ISemTalkSpecialization | null;\r\n}\r\nexport interface ISemTalkInstance extends ISemTalkObject {\r\n  ClassOf(): ISemTalkClass;\r\n  SetClass(cla: ISemTalkClass): void;\r\n  Load(c: any): any;\r\n  LoadXML(c: Element): void;\r\n  Save(c: any[]): any;\r\n  SaveXML(x: XMLDocument, c: HTMLElement): void;\r\n  Clone(c: ISemTalkInstance): any;\r\n  IsValid(dst: ISemTalkObject, attr: ISemTalkAssociationType | string): boolean;\r\n  IsInstance(dst: ISemTalkClass): boolean;\r\n  AllAttributeTypes(): ISemTalkAttributeType[];\r\n  AllAttributes(): ISemTalkAttribute[];\r\n  ID2NameNsp(): string;\r\n  UpdateLabel(mastername?: string): ILabelSpec;\r\n}\r\nexport interface ISemTalkVirtualInstance {\r\n  Owner: ISemTalkObject;\r\n  PropName: string;\r\n  Load(c: any): any;\r\n  LoadXML(c: Element): void;\r\n  Save(par: any[]): any;\r\n  SaveXML(x: XMLDocument, c: HTMLElement): void;\r\n  Clone(c: ISemTalkVirtualInstance): any;\r\n  ClassOf(): ISemTalkClass;\r\n  SetClass(cla: ISemTalkClass): void;\r\n  Delete(): void;\r\n  ObjectType: SemTalkType;\r\n}\r\nexport interface ISemTalkAssociation extends ISemTalkInstance {\r\n  ToObject: ISemTalkObject;\r\n  FromObject: ISemTalkObject;\r\n  PropName: string;\r\n  ClassOf(): ISemTalkAssociationType;\r\n  RelationType: SemTalkRelation;\r\n}\r\nexport interface ISemTalkSpecialization extends ISemTalkAssociation {\r\n}\r\nexport interface ISemTalkMethod extends ISemTalkVirtualInstance {\r\n  ClassOf(): ISemTalkMethodType;\r\n}\r\nexport interface ISemTalkAttribute extends ISemTalkVirtualInstance {\r\n  PropName: string;\r\n  Value: any;\r\n  ClassOf(): ISemTalkAttributeType;\r\n  Values: string[] | null;\r\n  Options: string[];\r\n  ValueType: SemTalkValueType;\r\n  IsList: boolean;\r\n  Min: number | null;\r\n  Max: number | null;\r\n  NoHTML: boolean;\r\n  Required: boolean;\r\n  ReadOnly: boolean;\r\n  Group: string;\r\n  Weight: number;\r\n  AllowFreeForm: boolean;\r\n  CurrentValue(facet?: string): any;\r\n  SetFacetValue(facet: string, value: any): any;\r\n  GetFacetValue(facet: string): any;\r\n}\r\nexport interface ISemTalkState extends ISemTalkVirtualInstance {\r\n  ClassOf(): ISemTalkStateType;\r\n}\r\nexport interface ISemTalkSPListClass extends ISemTalkClass {\r\n}\r\nexport interface ISemTalkSharePointObject {\r\n  UniqueID: number | null;\r\n  URL: string | null;\r\n  CTName: string | null;\r\n  SPPrefix: string | null;\r\n  RowID: number | null;\r\n}\r\nexport interface ISemTalkSharePointClass extends ISemTalkClass, ISemTalkSharePointObject {\r\n}\r\nexport interface ISemTalkSharePointInstance extends ISemTalkInstance, ISemTalkSharePointObject {\r\n}\r\nexport interface ISemTalkSystemClass extends ISemTalkClass {\r\n  SystemClass(): ISemTalkSystemClass;\r\n  BottomUp: boolean;\r\n  Hide: boolean;\r\n  OnceOnly: boolean;\r\n  ShowLabel: boolean;\r\n  Style: string;\r\n  ShapeHTML: string;\r\n  ShowAname: boolean;\r\n  ShowCAname: boolean;\r\n  BuiltinInstLabels(): string[];\r\n  BuiltinClassLabels(): string[];\r\n  RefinementOfClass: boolean;\r\n  Refineable: boolean;\r\n  // HyperlinksEnabled: boolean;\r\n  Composeable: boolean;\r\n  SharepointGoodlist: string;\r\n  Labels(mastername?: string): ISemTalkLabel[];\r\n  CollectInstLabels(lbl: ILabelSpec, obj: ISemTalkInstance, mastername?: string): boolean;\r\n  CollectClassLabels(lbl: ILabelSpec, obj: ISemTalkClass, mastername?: string): boolean;\r\n  CollectBusinessClassLabels(lbl: ILabelSpec, obj: ISemTalkClass, mastername?: string): boolean;\r\n  AllLabels(): ISemTalkLabel[];\r\n  AllClassLabels(): ISemTalkClassLabel[];\r\n  AllInstanceLabels(): ISemTalkLabel[];\r\n  AllSystemSubClasses(): ISemTalkSystemClass[];\r\n  MakeLabel(text: string, master: string): ISemTalkLabel;\r\n  MakeClassLabel(text: string, master: string): ISemTalkClassLabel;\r\n  ClassLabels(mastername?: string): ISemTalkClassLabel[];\r\n  TabSpecDefinitions(): ISemTalkTabSpecs;\r\n  FindLabelForMaster(master: string, text?: string): ISemTalkLabel[];\r\n  FindClassLabelForMaster(master: string, text?: string): ISemTalkClassLabel[];\r\n  InitInstDialog(): ISemTalkInstDialog;\r\n  InstDialog: ISemTalkInstDialog | null;\r\n  InstanceTabSpecs(): ISemTalkTabSpec[];\r\n  TabSpecs(): ISemTalkTabSpec[];\r\n  ClassTabSpecs(): ISemTalkTabSpec[];\r\n  InstanceTabSpecs(): ISemTalkTabSpec[];\r\n  FindTabSpec(aname: string): ISemTalkTabSpec | null;\r\n}\r\nexport interface ISemTalkTabSpec {\r\n  Owner: ISemTalkTabSpecs;\r\n  IsClass: boolean;\r\n  Visible: boolean;\r\n  Text: string;\r\n  Delete(): void;\r\n  ObjectType: SemTalkType;\r\n  Load(a: any): any;\r\n  LoadXML(c: Element): void;\r\n  Save(a: any): any;\r\n  SaveXML(x: XMLDocument, c: HTMLElement): void;\r\n}\r\nexport interface ISemTalkGenericTabSpec extends ISemTalkTabSpec {\r\n  Relname: string;\r\n  Toobj: string;\r\n  IsInst: boolean;\r\n  IsInv: boolean;\r\n  IsUni: boolean;\r\n}\r\nexport interface ISemTalkGenericAttributeTabSpec extends ISemTalkTabSpec {\r\n  Group: string;\r\n  Attributes: string[];\r\n}\r\nexport interface ISemTalkTabSpecs {\r\n  Owner: ISemTalkSystemClass;\r\n  ObjectBase: IObjectBase;\r\n  TabSpecs(): ISemTalkTabSpec[];\r\n  TabInstanceSpecs(): ISemTalkTabSpec[];\r\n  TabClassSpecs(): ISemTalkTabSpec[];\r\n  GenericTabSpecs(): ISemTalkGenericTabSpec[];\r\n  GenericTabClassSpecs(): ISemTalkGenericTabSpec[];\r\n  GenericAttributeTabSpecs(): ISemTalkGenericAttributeTabSpec[];\r\n  GenericAttributeTabClassSpecs(): ISemTalkGenericAttributeTabSpec[];\r\n  FindTabSpec(aname: string): ISemTalkTabSpec | null;\r\n  MakeTabSpec(text: string, isclass: boolean): ISemTalkTabSpec;\r\n  MakeGenericTabSpec(text: string, relname: string, toobj: string, isinst: boolean, isinv: boolean, isuni: boolean, isclass: boolean): ISemTalkGenericTabSpec;\r\n  MakeGenericAttributeTabSpec(text: string, group: string, attributes: string[], isclass: boolean): ISemTalkGenericAttributeTabSpec;\r\n  Delete(): void;\r\n  Load(je: any): void;\r\n  LoadXML(c: Element): void;\r\n  Save(c: any): void;\r\n  SaveXML(x: XMLDocument, c: HTMLElement): void;\r\n  AddTabSpec(a: ISemTalkTabSpec): ISemTalkTabSpec;\r\n  RemoveTabSpec(a: ISemTalkTabSpec): void;\r\n\r\n}\r\nexport interface ISemTalkInstDialog {\r\n  CheckGeneral: boolean;\r\n  CheckNamespace: boolean;\r\n  CheckClass: boolean;\r\n  CheckMethods: boolean;\r\n  CheckAttributes: boolean;\r\n  CheckAssociations: boolean;\r\n  CheckSynonyms: boolean;\r\n  CheckAttachments: boolean;\r\n  CheckStates: boolean;\r\n  CheckAudit: boolean;\r\n}\r\nexport interface ILabelSpec {\r\n  newtxt: string;\r\n  newtxt0: string;\r\n  newtxt1: string;\r\n  newtxt2: string;\r\n  newtxt3: string;\r\n  newtxt4: string;\r\n  newtxt5: string;\r\n  newtxt6: string;\r\n  newtxt7: string;\r\n  newtxt8: string;\r\n  newtxt9: string;\r\n  newtxt10: string;\r\n  isuml: boolean;\r\n  slabel: boolean;\r\n  nolayoutinfo: boolean;\r\n  hasimage: boolean;\r\n  haslabels: boolean;\r\n  showimage: boolean;\r\n  usegrphx: boolean;\r\n  imgfile: string;\r\n  col: string;\r\n  pat: string;\r\n  wei: string;\r\n}\r\nexport interface ISemTalkLabel {\r\n  Master: string;\r\n  Owner: ISemTalkLabels;\r\n  Text: string;\r\n  Save(par: any[]): void;\r\n  SaveXML(x: XMLDocument, c: HTMLElement): void;\r\n  Delete(): void;\r\n}\r\nexport interface ISemTalkClassLabel extends ISemTalkLabel {\r\n}\r\nexport interface ISemTalkLabels {\r\n  Owner: ISemTalkSystemClass;\r\n  ObjectBase: IObjectBase;\r\n  ShowAname: boolean;\r\n  ShowCAname: boolean;\r\n  AllLabels(): ISemTalkLabel[];\r\n  Labels(mastername: string | undefined): ISemTalkLabel[];\r\n  ClassLabels(mastername: string | undefined): ISemTalkClassLabel[];\r\n  MakeLabel(text: string, master: string): ISemTalkLabel;\r\n  MakeClassLabel(text: string, master: string): ISemTalkClassLabel;\r\n  builtinInstLabels: string[];\r\n  builtinClassLabels: string[];\r\n  builtinBusinesClassLabels: string[];\r\n  Delete(): void;\r\n  Save(c: any): void;\r\n  SaveXML(x: XMLDocument, c: HTMLElement): void;\r\n  Load(c: any): void;\r\n  LoadXML(c: Element): void;\r\n  AllClassLabels(): ISemTalkClassLabel[];\r\n  AllInstanceLabels(): ISemTalkLabel[];\r\n  FindLabelForMaster(master: string, text?: string): ISemTalkLabel[];\r\n  FindClassLabelForMaster(master: string, text?: string): ISemTalkClassLabel[];\r\n  CollectClassLabels(lbl: ILabelSpec, obj: ISemTalkClass, mastername?: string): boolean;\r\n  CollectBusinessClassLabels(lbl: ILabelSpec, obj1: ISemTalkClass, mastername?: string): boolean;\r\n  CollectInstLabels(lbl: ILabelSpec, obj: ISemTalkInstance, mastername?: string): boolean;\r\n  RemoveLabel(a: ISemTalkLabel): void;\r\n  RemoveClassLabel(a: ISemTalkLabel): void;\r\n}\r\nexport interface ISemTalkAssociationType extends ISemTalkSystemClass {\r\n  RelationType: SemTalkRelation;\r\n  FromType: SemTalkType;\r\n  ToType: SemTalkType;\r\n  InvName: string;\r\n  Cyclic: boolean;\r\n  Symmetric: boolean;\r\n  Transitiv: boolean;\r\n  IsAggregation: boolean;\r\n  Unique: boolean;\r\n  IsContainer: boolean;\r\n  UniqueModel: boolean;\r\n  Expandable: boolean;\r\n  AllowFreeForm: boolean;\r\n  IsCompositionAssociation: boolean;\r\n  FromConnection: SemTalkConnectionPoint;\r\n  ToConnection: SemTalkConnectionPoint;\r\n}\r\nexport interface ISemTalkBusinessClass extends ISemTalkClass {\r\n  Methods(): ISemTalkMethod[];\r\n  States(): ISemTalkState[];\r\n  MakeState(attr: string | ISemTalkStateType): ISemTalkState;\r\n  FindState(attr: string | ISemTalkStateType): ISemTalkState | null;\r\n  FindAState(attr: string | ISemTalkStateType): ISemTalkState | null;\r\n  RemoveState(a: ISemTalkState): void;\r\n  AddState(a: ISemTalkState): ISemTalkState;\r\n  AllStates(): ISemTalkState[];\r\n  AllStateTypes(): ISemTalkStateType[];\r\n  MakeMethod(attr: string | ISemTalkMethodType): ISemTalkMethod;\r\n  FindMethod(attr: string | ISemTalkMethodType): ISemTalkMethod | null;\r\n  FindAMethod(attr: string | ISemTalkMethodType): ISemTalkMethod | null;\r\n  RemoveMethod(a: ISemTalkMethod): void;\r\n  AddMethod(a: ISemTalkMethod): ISemTalkMethod;\r\n  AllMethods(): ISemTalkMethod[];\r\n  AllMethodTypes(): ISemTalkMethodType[];\r\n  DeleteMethod(attr: string | ISemTalkMethodType): void;\r\n  DeleteState(attr: string | ISemTalkStateType): void;\r\n}\r\nexport interface ISemTalkMethodType extends ISemTalkClass {\r\n}\r\nexport interface ISemTalkAttributeType extends ISemTalkClass {\r\n  Value: any;\r\n  Values: string[];\r\n  Options: string[];\r\n  ValueType: SemTalkValueType;\r\n  IsList: boolean;\r\n  Min: number | null;\r\n  Max: number | null;\r\n  SyncVisio: boolean;\r\n  Raise: boolean;\r\n  Required: boolean;\r\n  Group: string;\r\n  Weight: number;\r\n  AllowFreeForm: boolean;\r\n}\r\nexport interface ISemTalkStateType extends ISemTalkClass {\r\n}\r\nexport interface ISemTalkSynonym {\r\n  Owner: ISemTalkNamedThing;\r\n  Name: string;\r\n  Language: string;\r\n  Load(c: any): any;\r\n  LoadXML(c: Element): void;\r\n  Save(c: any): any;\r\n  SaveXML(x: XMLDocument, c: HTMLElement): void;\r\n  Inverse: boolean;\r\n  Synonym: boolean;\r\n  Comment: string | null;\r\n}\r\n\r\nexport interface ISemTalkDiagram extends ISemTalkInstance {\r\n  ClassOf(): ISemTalkDiagramType;\r\n  SystemClass(): ISemTalkDiagramType | null;\r\n  AddInvRefinement(o: ISemTalkObject): ISemTalkObject;\r\n  RemoveInvRefinement(o: ISemTalkObject): void;\r\n  MakeNode(obj: ISemTalkObject, shpid: string, master?: string): ISemTalkNode;\r\n  Contents(): ISemTalkNode[];\r\n  InvRefinements(): ISemTalkDiagram[];\r\n  FindNodeOf(obj: ISemTalkObject): ISemTalkNode[];\r\n  FindNodeOfShape(shpid: string): ISemTalkNode | null;\r\n  IsLeaf: boolean;\r\n  Refinements(): ISemTalkDiagram[];\r\n  ExtRefinements(): string[];\r\n  BreadCrumbs(): ISemTalkDiagram[];\r\n  RefinedObjects(): ISemTalkObject[];\r\n  GetVariant(): ISemTalkDiagram;\r\n  NewUserNumber(): string;\r\n\r\n}\r\nexport interface ISemTalkDiagramType extends ISemTalkSystemClass {\r\n  IsClass: boolean;\r\n  Root: ISemTalkSystemClass | null;\r\n  InstanceRoot: ISemTalkSystemClass | null;\r\n  NewSLRoot: ISemTalkSystemClass | null;\r\n  UseInheritanceRelations: boolean;\r\n  UseAllRelationsOfSubclasses: boolean;\r\n  MakeInstance(n?: string, t?: SemTalkType, i?: number): ISemTalkDiagram;\r\n  Instances(): ISemTalkDiagram[];\r\n  IsAllowedMaster(o: ISemTalkObject, s: string): boolean;\r\n  IsAllowed(o: ISemTalkObject): boolean;\r\n  FindMasters(mst: string): ISemTalkSystemClass[];\r\n  GetValidDiagTypRefinementOf(): ISemTalkDiagramType[];\r\n  GetValidDiagTypRefinements(): ISemTalkDiagramType[];\r\n  AllRootDiagrams(): ISemTalkDiagram[];\r\n  UMLShape: boolean;\r\n  MasterNames: string[];\r\n  AllowedMasters(o: ISemTalkObject): string[];\r\n  Prefix: string | null;\r\n  GetPrefix(o: ISemTalkNamedThing): string;\r\n  Auto: boolean;\r\n  Stencil: string | null;\r\n}\r\nexport interface ISemTalkNode {\r\n  ID: string;\r\n  Model: ISemTalkObject;\r\n  Diagram: ISemTalkDiagram;\r\n  ShapeID: string;\r\n  Master: string | undefined;\r\n  Delete(): void;\r\n  X: number | null;\r\n  Y: number | null;\r\n  Width: number | null;\r\n  Height: number | null;\r\n  Load(c: any): any;\r\n  LoadXML(c: Element): void;\r\n  Save(c: any): any;\r\n  SaveXML(x: XMLDocument, c: HTMLElement): void;\r\n  ObjectCaption: string;\r\n}\r\nexport interface ISemTalkAssociationNode extends ISemTalkNode {\r\n  FromShape: string | undefined;\r\n  OtherShape: string | undefined;\r\n  BeginX: number | undefined;\r\n  BeginY: number | undefined;\r\n  EndX: number | undefined;\r\n  EndY: number | undefined;\r\n\r\n}\r\nexport interface ISemTalkComposition {\r\n  Owner: ISemTalkObject;\r\n  ComposedClass: ISemTalkBusinessClass;\r\n  Attribute: ISemTalkAttributeType | null;\r\n  State: ISemTalkStateType | null;\r\n  Method: ISemTalkMethodType | null;\r\n  Other: ISemTalkBusinessClass | null;\r\n  Delete(): void;\r\n  Save(): any;\r\n  SaveXML(x: XMLDocument, c: HTMLElement): void;\r\n  Op: string | null;\r\n  NotOp: boolean | null;\r\n  Value: any;\r\n  ID2NameNsp(): string;\r\n}\r\n\r\n\r\n","import {\r\n  IObjectBase, SemTalkBaseConstant,\r\n  SemTalkRelation, SemTalkType,\r\n  ISemTalkClass,\r\n  ISemTalkDiagramType\r\n} from \"./Interface\";\r\n// import * as parser from 'fast-xml-parser';\r\n// import { ObjectBase } from \"./ObjectBase\";\r\n\r\n\r\nexport class OB2XML {\r\n  private isSystemClass = (c: string): boolean => {\r\n    switch (c) {\r\n      case \"XOR\": return true;\r\n      case \"OR\": return true;\r\n      case \"AND\": return true;\r\n      case \"epc#Class\": return true;\r\n    }\r\n    return false;\r\n  }\r\n  public LoadXML(tb: IObjectBase, xmlstr: string): void {\r\n    let parser = new DOMParser();\r\n    let xmlDoc = parser.parseFromString(xmlstr, \"text/xml\");\r\n    let obx = xmlDoc.getElementsByTagName(\"ObjectBase\")[0];\r\n    if (obx.attributes) {\r\n      for (const i in obx.attributes) {\r\n        let c = obx.attributes[i];\r\n        switch (c.name) {\r\n          case \"MaxID\":\r\n            tb.maxid = Number(c.value);\r\n            break;\r\n          default:\r\n            tb.SetModelAttribute(c.name, c.value);\r\n        }\r\n      }\r\n    }\r\n\r\n    let classes = obx.getElementsByTagName(\"Class\");\r\n    for (const i in classes) {\r\n      let c = classes[i];\r\n      if (c.attributes) {\r\n        let cid: number;\r\n        const cidv = c.attributes.getNamedItem(\"ID\")?.value;\r\n        if (cidv) {\r\n          cid = Number(cidv);\r\n        } else {\r\n          tb.maxid += 1;\r\n          cid = tb.maxid;\r\n        }\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        let systemClass = c.attributes.getNamedItem(\"SystemClass\")?.value;\r\n        let businessClass = c.attributes.getNamedItem(\"BusinessClass\")?.value;\r\n        let readOnly = c.attributes.getNamedItem(\"ReadOnly\")?.value;\r\n        if (readOnly && (readOnly === \"1\" || readOnly === \"True\")) {\r\n          systemClass = \"True\";\r\n        }\r\n        if (name) {\r\n          if (name.startsWith(\"Ob#\") || name.startsWith(\"In#\")) {\r\n            businessClass = \"True\";\r\n          }\r\n        }\r\n        if (name) {\r\n          if (systemClass === \"True\" || this.isSystemClass(name)) {\r\n            tb.MakeSystemClass(name, cid);\r\n          } else {\r\n            if (businessClass && businessClass === \"True\") {\r\n              tb.MakeBusinessClass(name, cid);\r\n            } else {\r\n              tb.MakeClass(name, cid);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let attrtypes = obx.getElementsByTagName(\"AttributeType\");\r\n    for (const i in attrtypes) {\r\n      let c = attrtypes[i];\r\n      if (c.attributes) {\r\n        let cid: number;\r\n        const cidv = c.attributes.getNamedItem(\"ID\")?.value;\r\n        if (cidv) {\r\n          cid = Number(cidv);\r\n        } else {\r\n          tb.maxid += 1;\r\n          cid = tb.maxid;\r\n        }\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        if (name && cid) {\r\n          tb.MakeAttributeType(name, Number(cid));\r\n        }\r\n      }\r\n    }\r\n    let methodtypes = obx.getElementsByTagName(\"MethodType\");\r\n    for (const i in methodtypes) {\r\n      let c = methodtypes[i];\r\n      if (c.attributes) {\r\n        let cid: number;\r\n        const cidv = c.attributes.getNamedItem(\"ID\")?.value; \r\n        if (cidv) {\r\n          cid = Number(cidv);\r\n        } else {\r\n          tb.maxid+=1;\r\n          cid = tb.maxid;\r\n        }\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        if (name && cid) {\r\n          tb.MakeMethodType(name, Number(cid));\r\n        }\r\n      }\r\n    }\r\n    let statetypes = obx.getElementsByTagName(\"StateType\");\r\n    for (const i in statetypes) {\r\n      let c = statetypes[i];\r\n      if (c.attributes) {\r\n        let cid: number;\r\n        const cidv = c.attributes.getNamedItem(\"ID\")?.value; \r\n        if (cidv) {\r\n          cid = Number(cidv);\r\n        } else {\r\n          tb.maxid+=1;\r\n          cid = tb.maxid;\r\n        }\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        if (name && cid) {\r\n          tb.MakeStateType(name, Number(cid));\r\n        }\r\n      }\r\n    }\r\n    let assoctypes = obx.getElementsByTagName(\"RelationType\");\r\n    for (const i in assoctypes) {\r\n      let c = assoctypes[i];\r\n      if (c.attributes) {\r\n        let cid: number;\r\n        const cidv = c.attributes.getNamedItem(\"ID\")?.value; \r\n        if (cidv) {\r\n          cid = Number(cidv);\r\n        } else {\r\n          tb.maxid+=1;\r\n          cid = tb.maxid;\r\n        }\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        if (name && cid) {\r\n          tb.MakeAssociationType(SemTalkRelation.SemTalkProperty, name, Number(cid));\r\n        }\r\n      }\r\n    }\r\n    let sassoctypes = obx.getElementsByTagName(\"SystemRelation\");\r\n    for (const i in sassoctypes) {\r\n      let c = sassoctypes[i];\r\n      if (c.attributes) {\r\n        let cid: number;\r\n        const cidv = c.attributes.getNamedItem(\"ID\")?.value; \r\n        if (cidv) {\r\n          cid = Number(cidv);\r\n        } else {\r\n          tb.maxid+=1;\r\n          cid = tb.maxid;\r\n        }\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        if (name && cid) {\r\n          switch (name) {\r\n            case \"subClassOf_\": {\r\n              tb.MakeAssociationType(SemTalkRelation.SemTalkSubClassOf, SemTalkBaseConstant.SLSubClassOf, Number(cid));\r\n              break;\r\n            }\r\n            case \"instanceOf\": {\r\n              tb.MakeAssociationType(SemTalkRelation.SemTalkInstanceOf, SemTalkBaseConstant.SLInstanceOf, Number(cid));\r\n              break;\r\n            }\r\n            default:\r\n              tb.MakeAssociationType(SemTalkRelation.SemTalkSystemRelation, name, Number(cid));\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    let diagtypes = obx.getElementsByTagName(\"DiagramType\");\r\n    for (const i in diagtypes) {\r\n      let c = diagtypes[i];\r\n      if (c.attributes) {\r\n        let cid: number;\r\n        const cidv = c.attributes.getNamedItem(\"ID\")?.value; \r\n        if (cidv) {\r\n          cid = Number(cidv);\r\n        } else {\r\n          tb.maxid+=1;\r\n          cid = tb.maxid;\r\n        }\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        if (name && cid) {\r\n          tb.MakeDiagramType(name, Number(cid));\r\n        }\r\n      }\r\n    }\r\n    for (const i in diagtypes) {\r\n      let c = diagtypes[i];\r\n      if (c.attributes) {\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        if (name) {\r\n          const at = tb.FindDiagramType(name);\r\n          if (at !== null) {\r\n            at.LoadXML(c);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let diagrams = obx.getElementsByTagName(\"Diagram\");\r\n    for (const i in diagrams) {\r\n      let c = diagrams[i];\r\n      if (c.attributes) {\r\n        let cid: number = Number(c.attributes.getNamedItem(\"id\")?.value);\r\n        if (!cid) {\r\n          tb.maxid+=1;\r\n          cid = tb.maxid;\r\n        }\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        let iclass = c.attributes.getNamedItem(\"class\")?.value;\r\n        if (name && cid && iclass) {\r\n          const cl = tb.FindDiagramType(iclass);\r\n          console.assert(cl !== null);\r\n          let cs = tb.MakeDiagram((cl as ISemTalkDiagramType), name, SemTalkType.SemTalkDiagram, Number(cid));\r\n          console.assert(cs !== null);\r\n        }\r\n      }\r\n    }\r\n    for (const i in attrtypes) {\r\n      let c = attrtypes[i];\r\n      if (c.attributes) {\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        if (name) {\r\n          const at = tb.FindAttributeType(name);\r\n          if (at !== null) {\r\n            at.LoadXML(c);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (const i in methodtypes) {\r\n      let c = methodtypes[i];\r\n      if (c.attributes) {\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        if (name) {\r\n          const at = tb.FindMethodType(name);\r\n          if (at !== null) {\r\n            at.LoadXML(c);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (const i in statetypes) {\r\n      let c = statetypes[i];\r\n      if (c.attributes) {\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        if (name) {\r\n          const at = tb.FindStateType(name);\r\n          if (at !== null) {\r\n            at.LoadXML(c);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (const i in assoctypes) {\r\n      let c = assoctypes[i];\r\n      if (c.attributes) {\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        if (name) {\r\n          const at = tb.FindAssociationType(name);\r\n          if (at !== null) {\r\n            at.LoadXML(c);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (const i in classes) {\r\n      let c = classes[i];\r\n      if (c.attributes) {\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        if (name) {\r\n          const at = tb.FindClass(name);\r\n          if (at !== null) {\r\n            at.LoadXML(c);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let instances = obx.getElementsByTagName(\"Instance\");\r\n    for (const i in instances) {\r\n      let c = instances[i];\r\n      if (c.attributes) {\r\n        let cid: number;\r\n        const cidv = c.attributes.getNamedItem(\"ID\")?.value; \r\n        if (cidv) {\r\n          cid = Number(cidv);\r\n        } else {\r\n          tb.maxid+=1;\r\n          cid = tb.maxid;\r\n        }\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        let iclass = c.attributes.getNamedItem(\"class\")?.value;\r\n        if (name && cid && iclass) {\r\n          const cl = tb.FindClass(iclass);\r\n          console.assert(cl !== null);\r\n          if (cl) {\r\n            let cs = tb.MakeInstance((cl as ISemTalkClass), name, SemTalkType.SemTalkInstance, Number(cid));\r\n            console.assert(cs !== null);\r\n          } else {\r\n            console.log(\"Missing Class: \" + iclass);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (const i in instances) {\r\n      let c = instances[i];\r\n      if (c.attributes) {\r\n        let name = c.attributes.getNamedItem(\"name\")?.value;\r\n        if (name) {\r\n          const at = tb.FindInstance(name);\r\n          if (at !== null) {\r\n            at.LoadXML(c);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public SaveXML(tb: IObjectBase): string {\r\n    let xd: XMLDocument = document.implementation.createDocument(\"semtalk\", \"\", null);\r\n    var doc = xd.createElement(\"ObjectBase\");\r\n\r\n    for (const name of tb.AllModelAttributes()) {\r\n      doc.setAttribute(name, tb.GetModelAttribute(name));\r\n    }\r\n    doc.setAttribute(\"MaxID\", tb.maxid.toString());\r\n\r\n    for (const obj of tb.AllSystemClasses()) {\r\n      // if (obj.ObjectType === SemTalkType.SemTalkClass) {\r\n      if (tb.IsSystemClass(obj) && obj.ObjectType === SemTalkType.SemTalkClass) {\r\n        let el = xd.createElement(\"Class\");\r\n        doc.appendChild(el);\r\n        obj.SaveXML(xd, el);\r\n      }\r\n    }\r\n    for (const obj of tb.AllClasses()) {\r\n      if (!tb.IsSystemClass(obj) && obj.ObjectType === SemTalkType.SemTalkClass) {\r\n        // if (tb.IsClass(obj)) {\r\n        let el = xd.createElement(\"Class\");\r\n        doc.appendChild(el);\r\n        obj.SaveXML(xd, el);\r\n      }\r\n    }\r\n    for (const obj of tb.AllAssociationTypes()) {\r\n      if (tb.IsAssociationType(obj)) {\r\n        let el: any;\r\n        if (obj.RelationType !== SemTalkRelation.SemTalkProperty) {\r\n          el = xd.createElement(\"SystemRelation\");\r\n        } else {\r\n          el = xd.createElement(\"RelationType\");\r\n        }\r\n        doc.appendChild(el);\r\n        obj.SaveXML(xd, el);\r\n      }\r\n    }\r\n    for (const obj of tb.AllAttributeTypes()) {\r\n      if (tb.IsAttributeType(obj)) {\r\n        let el = xd.createElement(\"AttributeType\");\r\n        doc.appendChild(el);\r\n        obj.SaveXML(xd, el);\r\n      }\r\n    }\r\n    for (const obj of tb.AllDiagramTypes()) {\r\n      if (tb.IsDiagramType(obj)) {\r\n        let el = xd.createElement(\"DiagramType\");\r\n        doc.appendChild(el);\r\n        obj.SaveXML(xd, el);\r\n      }\r\n    }\r\n    for (const obj of tb.AllInstances()) {\r\n      if (obj.ObjectType === SemTalkType.SemTalkInstance) {\r\n        let el = xd.createElement(\"Instance\");\r\n        doc.appendChild(el);\r\n        obj.SaveXML(xd, el);\r\n      }\r\n    }\r\n    for (const obj of tb.AllDiagrams()) {\r\n      let el = xd.createElement(\"Diagram\");\r\n      doc.appendChild(el);\r\n      obj.SaveXML(xd, el);\r\n    }\r\n    for (const obj of tb.AllMethodTypes()) {\r\n      if (tb.IsAttributeType(obj)) {\r\n        let el = xd.createElement(\"MethodType\");\r\n        doc.appendChild(el);\r\n        obj.SaveXML(xd, el);\r\n      }\r\n    }\r\n    for (const obj of tb.AllStateTypes()) {\r\n      if (tb.IsAttributeType(obj)) {\r\n        let el = xd.createElement(\"StateType\");\r\n        doc.appendChild(el);\r\n        obj.SaveXML(xd, el);\r\n      }\r\n    }\r\n    let blob: string = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n    blob = blob + doc.outerHTML;\r\n    blob = blob.replace(new RegExp(\"http://www.semtalk.com/mxg#\", 'g'), \"\");\r\n    // let tb2 = new ObjectBase();\r\n    // this.LoadXML(tb2, blob);\r\n    return blob;\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebarcontainer\":\"sidebar_sidebarcontainer__jlJ8c\",\"customsidebarnode\":\"sidebar_customsidebarnode__2LyQf\",\"tooltip\":\"sidebar_tooltip__3oRH6\",\"sidebarnodeimage\":\"sidebar_sidebarnodeimage__1Y43t\",\"sidebarnodelabel\":\"sidebar_sidebarnodelabel__1L6lF\",\"svgnode\":\"sidebar_svgnode__95NxZ\",\"textnode\":\"sidebar_textnode__32Z-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkLabel\":\"SemTalkLabels_semTalkLabel__ifN_3\",\"pivottab\":\"SemTalkLabels_pivottab__vYV0c\",\"container\":\"SemTalkLabels_container__7FuGk\",\"row\":\"SemTalkLabels_row__30EKm\",\"column\":\"SemTalkLabels_column__1Pemg\",\"ms-Grid\":\"SemTalkLabels_ms-Grid__2pTMe\",\"title\":\"SemTalkLabels_title__16F4G\",\"subTitle\":\"SemTalkLabels_subTitle__2aZ-b\",\"form\":\"SemTalkLabels_form__1pTyB\",\"label\":\"SemTalkLabels_label__3Yj3y\",\"description\":\"SemTalkLabels_description__lwzqU\",\"button\":\"SemTalkLabels_button__4Iogn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkAssociationType\":\"SemTalkAssociationType_semTalkAssociationType__1XIwU\",\"pivottab\":\"SemTalkAssociationType_pivottab__1f2RO\",\"container\":\"SemTalkAssociationType_container__1JBMN\",\"row\":\"SemTalkAssociationType_row__2ZukO\",\"column\":\"SemTalkAssociationType_column__LMafi\",\"ms-Grid\":\"SemTalkAssociationType_ms-Grid__3MkWN\",\"title\":\"SemTalkAssociationType_title__3IUMD\",\"subTitle\":\"SemTalkAssociationType_subTitle__m5pjS\",\"form\":\"SemTalkAssociationType_form__31Smd\",\"label\":\"SemTalkAssociationType_label__16i83\",\"description\":\"SemTalkAssociationType_description__38YSk\",\"button\":\"SemTalkAssociationType_button__26TMQ\"};","import { MessageBarType } from \"office-ui-fabric-react\";\r\nimport { SemTalkStencil } from \"./application/semtalklistener/visiordfsinterface\";\r\nimport { ITSEditor } from \"./ITSEditor\";\r\nimport { SemTalkLanguage } from \"./application/tbase/Interface\";\r\n\r\nexport enum SemTalkOnlineCommand {\r\n  \"NewDocument\" = \"NewDocument\",\r\n  \"OpenDocument\" = \"OpenDocument\",\r\n  \"SaveDocument\" = \"SaveDocument\",\r\n  \"SaveAsDocument\" = \"SaveAsDocument\",\r\n  \"AutoSave\" = \"AutoSave\",\r\n  \"UploadDocument\" = \"UploadDocument\",\r\n  \"DownloadDocument\" = \"DownloadDocument\",\r\n  \"ImportDocument\" = \"ImportDocument\",\r\n  \"UploadBPMNFile\" = \"UploadBPMNFile\",\r\n  \"UploadXMLFile\" = \"UploadXMLFile\",\r\n  \"DownloadBPMNFile\" = \"DownloadBPMNFile\",\r\n  \"DownloadXMLFile\" = \"DownloadXMLFile\",\r\n  \"CheckInDocument\" = \"CheckInDocument\",\r\n  \"CheckOutDocument\" = \"CheckOutDocument\",\r\n  \"FileImage\" = \"FileImage\",\r\n  \"PrintPreview\" = \"PrintPreview\",\r\n  \"StartPanning\" = \"StartPanning\",\r\n  \"StopPanning\" = \"StopPanning\",\r\n  \"TogglePanZoom\" = \"TogglePanZoom\",\r\n  \"ToggleStencil\" = \"ToggleStencil\",\r\n  \"DeleteShapes\" = \"DeleteShapes\",\r\n  \"Undo\" = \"Undo\",\r\n  \"Redo\" = \"Redo\",\r\n  \"ShapeStyle\" = \"ShapeStyle\",\r\n  \"ConnectionPoints\" = \"ConnectionPoints\",\r\n  \"AlignHorizontalLeft\" = \"AlignHorizontalLeft\",\r\n  \"AlignHorizontalCenter\" = \"AlignHorizontalCenter\",\r\n  \"AlignHorizontalRight\" = \"AlignHorizontalRight\",\r\n  \"AlignVerticalTop\" = \"AlignVerticalTop\",\r\n  \"AlignVerticalCenter\" = \"AlignVerticalCenter\",\r\n  \"AlignVerticalBottom\" = \"AlignVerticalBottom\",\r\n  \"ZoomIn\" = \"ZoomIn\",\r\n  \"ZoomOut\" = \"ZoomOut\",\r\n  \"ZoomFit\" = \"ZoomFit\",\r\n  \"ZoomActual\" = \"ZoomActual\",\r\n  \"Redraw\" = \"Redraw\",\r\n  \"TogglePageBreaks\" = \"TogglePageBreaks\",\r\n  \"EditObject\" = \"EditObject\",\r\n  \"SelectCell\" = \"SelectCell\",\r\n  \"EditClass\" = \"EditClass\",\r\n  \"DeleteObject\" = \"DeleteObject\",\r\n  \"ComposeObject\" = \"ComposeObject\",\r\n  \"ConnectShapes\" = \"ConnectShapes\",\r\n  \"HyperlinkObject\" = \"HyperlinkObject\",\r\n  \"RefineObject\" = \"RefineObject\",\r\n  \"DetachObject\" = \"DetachObject\",\r\n  \"CustomizeObject\" = \"CustomizeObject\",\r\n  \"InsertSwimlane\" = \"InsertSwimlane\",\r\n  \"ToggleDirection\" = \"ToggleDirection\",\r\n  \"CollapseCell\" = \"CollapseCell\",\r\n  \"RefreshObject\" = \"RefreshObject\",\r\n  \"ExpandObject\" = \"ExpandObject\",\r\n  \"EditPage\" = \"EditPage\",\r\n  \"AddPage\" = \"AddPage\",\r\n  \"DeletePage\" = \"DeletePage\",\r\n  \"GoUp\" = \"GoUp\",\r\n  \"Renumber\" = \"Renumber\",\r\n  \"Insert\" = \"Insert\",\r\n  \"Termstore\" = \"Termstore\",\r\n  \"mxCompactTreeLayout\" = \"mxCompactTreeLayout\",\r\n  \"mxCompactTreeLayoutV\" = \"mxCompactTreeLayoutV\",\r\n  \"mxCompactTreeLayoutI\" = \"mxCompactTreeLayoutI\",\r\n  \"mxCompactTreeLayoutVI\" = \"mxCompactTreeLayoutVI\",\r\n  \"mxFastOrganicLayout\" = \"mxFastOrganicLayout\",\r\n  \"mxRadialTreeLayout\" = \"mxRadialTreeLayout\",\r\n  \"mxCircleLayout\" = \"mxCircleLayout\",\r\n  \"SelectDataLang\" = \"SelectDataLang\",\r\n  \"ShowHelp\" = \"ShowHelp\",\r\n  \"ShowForm\" = \"ShowForm\",\r\n  \"ResetMetaModel\" = \"ResetMetaModel\",\r\n  \"AddonCommand\" = \"AddonCommand\",\r\n  \"WordVectors\" = \"WordVectors\",\r\n  \"InvertedTaxonomy\" = \"InvertedTaxonomy\",\r\n  \"MS365Login\" = \"MS365Login\",\r\n  \"mgLogin\" = \"mgLogin\",\r\n  \"GroupShapes\" = \"GroupShapes\",\r\n  \"UngroupShapes\" = \"UngroupShapes\"\r\n}\r\nexport interface ISemTalkOnline {\r\n  DoCommand(cmd: SemTalkOnlineCommand, args: any): void;\r\n  ParseMenu(isribbon: boolean, ctrl?: React.Component): { \"items\": any, \"allitems\": any };\r\n\r\n  getLabel(cell: mxCell, tmp: string): string;\r\n  isCellResizable(cell: mxCell): boolean;\r\n  isWrapping(_cell: mxCell): boolean;\r\n  GetShapeStyle(key: string, shapeType: string): { style: string, isedge: boolean };\r\n  setEditor(tseditor: ITSEditor): void;\r\n  shapeCreatePopupMenu(_graph: mxGraph, _menu: mxPopupMenuHandler, cell: mxCell, evt: PointerEvent, _edi: ITSEditor): void;\r\n  shapeAdded(cell: mxCell): void;\r\n  shapeDeleted(cells: mxCell[]): void;\r\n  isValid(srcid: number, dstid: number): boolean;\r\n  shapeExitedTextEdit(cell: mxCell, newValue: any): void;\r\n  shapeSelectionChanged(cell: mxCell | undefined, evt: mxEventObject): void;\r\n  shapeConnectionAdded(event: mxEventObject, edge: mxCell, source: mxCell, target: mxCell): void;\r\n  shapeConnectionsDeleted(edge: mxCell): void;\r\n  shapeMoveCells(cells: mxCell[], clone: boolean): void;\r\n  shapeCopyCells(cells: mxCell[]): void;\r\n  selectCell(cell: mxCell): void;\r\n  editCell(cell: mxCell): void;\r\n  composeCell(cell: mxCell): void;\r\n  quickShapes(cell: mxCell): SemTalkStencil;\r\n  makeInstance(class_cell: mxCell, inst_cell: mxCell): void;\r\n  makeSubClass(class_cell: mxCell, subcl_cell: mxCell): void;\r\n  editObject(id: number): void;\r\n  selectDataLang(lang: SemTalkLanguage): void;\r\n  keyPressed(evtobj: KeyboardEvent): void;\r\n  hasKeyHandler(evtobj: KeyboardEvent): boolean;\r\n\r\n  showShapeStyle(cells: mxCell[]): void;\r\n  showHelp(): void;\r\n  gotoPage(diagid: number): void;\r\n  alert(msg: string, mtype: MessageBarType): void;\r\n  beginTransaction(xml: string, reason: string): void;\r\n  endTransaction(xml: string, reason: string): void;\r\n  updateDiaglist(): void;\r\n  openlocalDocument(): void;\r\n  savelocalDocument(): void;\r\n  openDocumentCallBack(filename: string): void;\r\n  newDocumentCallBack(template: string): void;\r\n  mergeDocumentCallBack(filename: string): void;\r\n  saveAsDocumentCallBack(filename: string, ext: string): void;\r\n}\r\nexport interface ISemTalkSemantics {\r\n  server: string;\r\n  corpus: string; \r\n  distance: number;\r\n}\r\nexport enum SemTalkCookie {\r\n  \"guilanguage\" = \"guilanguage\",\r\n  \"language\" = \"language\",\r\n  \"simulation\" = \"simulation\",\r\n  \"bpmn\" = \"bpmn\",\r\n  \"refinements\" = \"refinements\",\r\n  \"showlanguage\" = \"showlanguage\",\r\n  \"showtoolbar\" = \"showtoolbar\",\r\n  \"showhyperlinkmarker\" = \"showhyperlinkmarker\",\r\n  \"semmongoserverurl\" = \"semmongoserverurl\",\r\n  \"usemongo\" = \"usemongo\",\r\n  \"semconnecttoken\" = \"semconnecttoken\",\r\n  \"dbname\" = \"dbname\",\r\n  \"repository\" = \"repository\",\r\n  \"SemTalkStatus\" = \"SemTalkStatus\",\r\n  \"autosaveSemTalk\" = \"autosaveSemTalk\",\r\n  \"autoComplete\" = \"autoComplete\",\r\n  \"shapestyle\" = \"shapestyle\",\r\n  \"guifont\" = \"guifont\",\r\n  \"font\" = \"font\",\r\n  \"semanticsserver\" = \"semanticsserver\",\r\n  \"semanticscorpus\" = \"semanticcorpus\",\r\n  \"semanticsdistance\" = \"semanticsdistance\",\r\n  \"applicationid\" = \"applicationid\",\r\n  \"authority\" = \"authority\",\r\n  \"scopes\" = \"scopes\",\r\n  \"termsetgroup\"=\"termsetgroup\",\r\n  \"termset\"=\"termset\",\r\n  \"termsetroot\"=\"termsetroot\",\r\n  \"termsetassoc\"=\"termsetassoc\",\r\n  \"theme\"=\"theme\",\r\n  \"backgroundColor\" = \"backgroundColor\",\r\n  \"userDefTheme\" = \"userDefTheme\",\r\n  \"themeStyle\" = \"themeStyle\",\r\n  \"iconcolor\" = \"iconcolor\"\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editorcontainer\":\"tseditor_editorcontainer__1T9O3\",\"scrollcontainer\":\"tseditor_scrollcontainer__3jHWD\",\"graphinnercontainer\":\"tseditor_graphinnercontainer__3T3DQ\",\"row\":\"tseditor_row__3GLTJ\",\"column\":\"tseditor_column__2d-H7\",\"ms-Grid\":\"tseditor_ms-Grid__RTzx5\",\"graphcontent\":\"tseditor_graphcontent__2Q73Y\",\"outline\":\"tseditor_outline__2d1_H\"};","import * as stgoto from \"./stgoto\";\nimport { ISemTalkDiagram, \n  ISemTalkObject, SemTalkType } from '../tbase/Interface';\nimport { IVisioRDFS, SemTalkNavigationEvent } from \"./visiordfsinterface\";\nimport { MessageBarType } from \"office-ui-fabric-react\";\n\n// let bArgsParsed: boolean = false;\n\n// export function getHostPageInfoListener(md1: string) {\n//   const sem: IVisioRDFS = (window as any).semtalk;\n//   const bas = sem.base;\n//   let md: any;\n//   //try {\n//   //  console.log(e.data);\n//   md = JSON.parse(md1);\n//   let mtype = md.type;\n//   // let shapeID = md.shapeID;\n//   // let pagename = md.pagename;\n//   // let modelname = md.modelname;\n//   switch (mtype) {\n//     case \"shapeSelectionChanged\":\n//       {\n//         console.log(\"SelectionChanged:\" + md);\n\n//         const diag = bas.FindDiagram(md.pagename) as ISemTalkDiagram;\n//         let shapeid = md.shapeID;\n//         const node = diag.FindNodeOfShape(shapeid) as ISemTalkNode;\n//         let obj = node.Model;\n//         if (node.Master === SemTalkBaseConstant.SLSwimlane) {\n//           for (let dis of obj.LinkedObjects(SemTalkBaseConstant.SLDisplays)) {\n//             obj = dis;\n//             return;\n//           }\n//         }\n//         gotoObject(obj.ID);\n//         stgoto.setShape(shapeid);\n//         if (md.refine && !md.prop) {\n//           if (obj.Refinement !== null) {\n//             gotoDocument(obj.Refinement.ID);\n//           }\n//         }\n//       }\n//       break;\n//     case \"GotoPage\":\n//       {\n//         const diag = bas.FindDiagram(md.pagename) as ISemTalkDiagram;\n//         if (stgoto.getDiagram() !== diag.ID) {\n//           gotoDocument(diag.ID);\n//         }\n//         break;\n//       }\n//   }\n//   // catch (error) {\n//   //   this.logError(error);\n//   // }\n// }\n\nexport function gotoDocument(d: number) {\n  if (d !== stgoto.getDiagram()) {\n    gotoDocumentInternal(d);\n    const sem: IVisioRDFS = (window as any).semtalk;\n    const bas = sem.base;\n    const diag = bas.FindDiagramByID(d) as ISemTalkDiagram;\n\n    if (!diag) {\n      throw (new Error(\"GotoDocument bad Diagram ID: \" + d));\n    }\n\n    var m: any = {};\n    m.type = SemTalkNavigationEvent.gotoDocument;\n    m.pagename = diag.ObjectName;\n    const mod = diag.ObjectBase;\n    m.modelname = mod.ObjectName;\n    m.modelid = mod.ID;\n    m.diagid = diag.ID;\n    stgoto.post2Callbacks(m);\n    var mstr = JSON.stringify(m);\n    // bas.Log(mstr);\n    // setModel(mod.ID);\n    setDiagram(diag.ID);\n    window.parent.postMessage(mstr, '*');\n  }\n}\nfunction gotoDocumentInternal(d: number) {\n  if (stgoto.getDiagram() !== d) {\n    stgoto.setObject(-1);\n    // var pgid = 1;\n    stgoto.setDiagram(d);\n    // stclear.Clear('searchpageresults');\n    // Doit();\n    // DoitDiagram();\n  }\n}\n//export function addCallBack(crtl: React.Component, _eventListener: EventListenerOrEventListenerObject): string {\nexport function addCallBack(crtl: React.Component): string {\n  // window.addEventListener(\"message\", _eventListener);\n  return stgoto.addCallBack(crtl);\n}\n//export function removeCallBack(crtl: React.Component, _eventListener: EventListenerOrEventListenerObject): void {\nexport function removeCallBack(crtl: React.Component): void {\n  // window.removeEventListener(\"message\", _eventListener);\n  return stgoto.removeCallBack(crtl);\n}\n\nexport function getObject(): number {\n  return stgoto.getObject();\n}\nexport function getDiagram(): number {\n  return stgoto.getDiagram();\n}\nexport function setDiagram(_obj: number): void {\n  stgoto.setDiagram(_obj);\n}\n// export function getModel(): number {\n//   return stgoto.getModel();\n// }\n// export function setModel(_obj: number): void {\n//   stgoto.setModel(_obj);\n// }\n// export function setStay(_stay: boolean): void {\n//   if (_stay !== undefined) {\n//     stgoto.setStay(_stay);\n//   }\n// }\n// export function setSite(site: string): void {\n//   if (site !== undefined) {\n//     stgoto.setSite(site);\n//   }\n// }\n// export function accessCookie(cookieName: string): string {\n//   return stgoto.accessCookie(cookieName);\n// }\n// export function setCookie(cookieName: string, cookieValue: string) {\n//   return stgoto.setCookie(cookieName, cookieValue);\n// }\n// export function getURL(): number {\n//   let mo: string = stgoto.getURL();\n//   if (mo.length > 0) {\n//     return parseInt(mo);\n//   }\n//   return -1;\n// }\n// export function setURL(_obj: number): void {\n//   stgoto.setURL(_obj.toString());\n// }\nexport function getShape(): string {\n  return stgoto.getShape();\n}\nexport function getContext(): string {\n  return stgoto.getContext();\n}\n\nexport function gotoObject(o: number) {\n  // console.log(\"gotoObject: \", o);\n  if (stgoto.getObject() !== o) {\n    stgoto.setObject(o);\n    if (o > -1) {\n      const sem: IVisioRDFS = (window as any).semtalk;\n      const bas = sem.base;\n      const obj = bas.FindObjectByID(o) as ISemTalkObject;\n      if (obj !== null) {\n        const mod = obj.ObjectBase;\n        var m: any = {};\n        m.type = SemTalkNavigationEvent.gotoObject;\n        m.modelname = mod.ObjectName;\n        m.objectname = obj.ObjectName;\n        m.objectcaption = obj.ObjectCaption;\n        m.modelid = mod.ID;\n        m.objectid = obj.ID;\n        // var mstr = JSON.stringify(m);\n        stgoto.post2Callbacks(m);\n        // bas.Log(mstr);\n      }\n    }\n  }\n}\nexport function gotoObjectByName(name: string) {\n  const sem: IVisioRDFS = (window as any).semtalk;\n  const bas = sem.base;\n  const obj = bas.FindObject(SemTalkType.SemTalkClass, name) as ISemTalkObject;\n  gotoObject(obj.ID);\n}\n// export function loadsettings(settings: any) {\n//   if (settings._filter.length > 0) {\n//     stconfig._filter = settings._filter;\n//   }\n//   if (settings._service.length > 0) {\n//     stconfig._service = settings._service;\n//   }\n// }\nexport function gotoNodeByID(nd: string) {\n  const sem: IVisioRDFS = (window as any).semtalk;\n  const bas = sem.base;\n  const n = bas.FindNodeByID(nd);\n  if (n !== null) {\n    gotoNode(n.ID, n.Model.ID, n.Diagram.ID, n.ShapeID);\n  }\n}\n\nexport async function gotoNode(_nd: string, val: number, pg: number, sh: string) {\n  if (stgoto.getDiagram() !== pg) {\n    gotoDocumentInternal(pg);\n  }\n  stgoto.setObject(val);\n  //   stgoto.setDiagram(pg);\n  // if (stgoto.getShape() !== sh && stgoto.getDiagram() === pg) {\n  if (true) {\n    stgoto.setShape(sh);\n    const sem: IVisioRDFS = (window as any).semtalk;\n    const bas = sem.base;\n    const diag = bas.FindDiagramByID(pg);\n    if (diag !== null) {\n      const node = diag.FindNodeOfShape(sh);\n      if (node !== null) {\n        const obj = node.Model;\n        const mod = obj.ObjectBase;\n\n        var m: any = {};\n        m.type = SemTalkNavigationEvent.gotoNode;\n        m.pagename = diag.ObjectName;\n        m.modelname = mod.ObjectName;\n        m.objectname = obj.ObjectName;\n        m.objectcaption = obj.ObjectCaption;\n        m.modelid = mod.ID;\n        m.objectid = obj.ID;\n        // m.nodeid = node.ID;\n        m.diagid = diag.ID;\n        m.shapeid = sh;\n        stgoto.post2Callbacks(m);\n        var mstr = JSON.stringify(m);\n        //  bas.Log(mstr);\n        window.parent.postMessage(mstr, \"*\");\n      }\n    }\n  }\n}\nexport async function gotoShape(_cell: any) {\n  var m: any = {};\n  m.type = SemTalkNavigationEvent.visSelectionChanged;\n   stgoto.post2Callbacks(m);\n  var mstr = JSON.stringify(m);\n  //  bas.Log(mstr);\n  window.parent.postMessage(mstr, \"*\");\n}\n\n// export async function showPivot(vis: string) {\n//   var m: any = {};\n//   m.type = \"showPivot\";\n//   m.value = vis;\n//   stgoto.post2Callbacks(m);\n//   var mstr = JSON.stringify(m);\n//   window.parent.postMessage(mstr, \"*\");\n// }\n\n\nexport function gotoFindANode(_pg: number, _val: number) {\n}\n\nexport function showNode(_sh: string) {\n}\n\n// export function gotoReport(_rep: string) {\n//   var x = document.getElementById('results');\n//   if (x !== null) {\n//     alert('results', MessageBarType.info);\n//     // AddReport(_rep, 'results');\n//   }\n//   x = document.getElementById('results1');\n//   if (x !== null) {\n//     alert('results1', MessageBarType.info);\n//     // AddReport(_rep, 'results1');\n//   }\n// }\n\n// export var lastShownData = [\"\", \"\", \"\"];\n//window.onload = global.EnableMinimizeWebpart;\n\n// export function contains(l: any[], x: any) {\n//   for (var i = 0, j = l.length; i < j; i++) {\n//     if (l[i] === x) { return true; }\n//   }\n//   return false;\n// }\n// function addReportlist() {\n//   var ctl = document.getElementById('divRole');\n//   if (ctl !== null) {\n//     // var TreeView3 = new TreeView();\n//     // TreeView3.CSSName('windows7');\n//     // TreeView3.SetContainer(document.getElementById('divRep'));\n//     // ReportList(TreeView3);\n//   }\n// }\n// function getQueryStringParameter(p) {\n//   try {\n//     let params = document.URL.split(\"?\")[1].split(\"&\");\n//     for (var i = 0; i < params.length; i = i + 1) {\n//       var singleParam = params[i].split(\"=\");\n//       if (singleParam[0] === p)\n//         return decodeURIComponent(singleParam[1]);\n//     }\n//   } catch (e) { }\n//   return \"\";\n// }\n\n\n// Statt der gotos müssen hier postmessages hin\n/*        if (m.shapeid.length > 0) {\n           dbase.FindObjectAsync(\"Diagram\", m.pagename, function (d) {\n               if (d !== null) dbase.FindNodeByShapeAsync(d.ID, m.shapeid, function (n) {\n                   if (n !== null) global.gotoNode(n.ID, n.ObjectID, n.NodePage, n.NodeShape);\n               })\n           });\n       } else if (m.object.length > 0) {\n           dbase.FindObjectAsync(\"Instance\", m.object, function (obj) { if (obj !== null) global.gotoObject(obj.ID); })\n       } else if (m.pagename.length > 0) {\n           dbase.FindObjectAsync(\"Diagram\", m.pagename, function (diag) { if (diag !== null) global.gotoDocument(diag.ID); })\n       } else try {\n           global.gotoDocument(global.defaultdoc);\n       } catch (e) { }\n\n       if (m.search.length > 0) {\n           var strsearch = document.getElementById('strsearch1');\n           strsearch.value = m.search;\n           global.DoSearch();\n\n       } */\n\n\n\n// export function setRoleProcesses(proclist: any[]) {\n//   var m: any = {};\n//   m.type = \"gotoRole\";\n//   m.roleprocesses = proclist;\n//   var mstr = JSON.stringify(m);\n//   //Log(mstr);\n//   window.parent.postMessage(mstr, '*');\n\n// }\n\nexport function alert(msg: string, mtype: MessageBarType) {\n  var m: any = {};\n  m.type = SemTalkNavigationEvent.alert;\n  m.mtype = mtype;\n  m.msg = msg;\n  stgoto.post2Callbacks(m);\n  var mstr = JSON.stringify(m);\n  window.parent.postMessage(mstr, '*');\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkInheritance\":\"SemTalkInheritance_semTalkInheritance__2KoCd\",\"pivottab\":\"SemTalkInheritance_pivottab__2pAr3\",\"container\":\"SemTalkInheritance_container__2kd5c\",\"row\":\"SemTalkInheritance_row__3jsaO\",\"column\":\"SemTalkInheritance_column__32Kcb\",\"ms-Grid\":\"SemTalkInheritance_ms-Grid__3m7uK\",\"title\":\"SemTalkInheritance_title__b7XC8\",\"subTitle\":\"SemTalkInheritance_subTitle__23-uM\",\"form\":\"SemTalkInheritance_form__38djt\",\"label\":\"SemTalkInheritance_label__3lwQM\",\"description\":\"SemTalkInheritance_description__1nr0o\",\"button\":\"SemTalkInheritance_button__1P2aB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkInheritance\":\"SemTalkInstances_semTalkInheritance__3Qwmt\",\"pivottab\":\"SemTalkInstances_pivottab__3-Lui\",\"container\":\"SemTalkInstances_container__1yRun\",\"row\":\"SemTalkInstances_row__3gv5H\",\"column\":\"SemTalkInstances_column__1XoPz\",\"ms-Grid\":\"SemTalkInstances_ms-Grid__1ocTm\",\"title\":\"SemTalkInstances_title__x37d7\",\"subTitle\":\"SemTalkInstances_subTitle__3kpAJ\",\"form\":\"SemTalkInstances_form__2TSLT\",\"label\":\"SemTalkInstances_label__33s_z\",\"description\":\"SemTalkInstances_description__1qJ7Q\",\"button\":\"SemTalkInstances_button__14wZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkAttr\":\"SemTalkAttributes_semTalkAttr__1ntk_\",\"container\":\"SemTalkAttributes_container__lk7Qj\",\"pivottab\":\"SemTalkAttributes_pivottab__1Semk\",\"row\":\"SemTalkAttributes_row__3SGW0\",\"column\":\"SemTalkAttributes_column__3gZJy\",\"ms-Grid\":\"SemTalkAttributes_ms-Grid__2-VLB\",\"title\":\"SemTalkAttributes_title__4HuyN\",\"subTitle\":\"SemTalkAttributes_subTitle__26QzE\",\"form\":\"SemTalkAttributes_form__D34Gr\",\"label\":\"SemTalkAttributes_label__FoH7N\",\"description\":\"SemTalkAttributes_description__1Y8T7\",\"button\":\"SemTalkAttributes_button__3VVZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkMethod\":\"SemTalkMethods_semTalkMethod__1NEkv\",\"pivottab\":\"SemTalkMethods_pivottab__1QG4j\",\"container\":\"SemTalkMethods_container__32b4n\",\"row\":\"SemTalkMethods_row__3WRvS\",\"column\":\"SemTalkMethods_column__1WYkX\",\"ms-Grid\":\"SemTalkMethods_ms-Grid__3uZy6\",\"title\":\"SemTalkMethods_title__nfyK_\",\"subTitle\":\"SemTalkMethods_subTitle__1cXjW\",\"form\":\"SemTalkMethods_form___aEVK\",\"label\":\"SemTalkMethods_label__2Xyvh\",\"description\":\"SemTalkMethods_description__3FKhG\",\"button\":\"SemTalkMethods_button__1lold\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkState\":\"SemTalkStates_semTalkState__1BJFc\",\"pivottab\":\"SemTalkStates_pivottab__12s9U\",\"container\":\"SemTalkStates_container__1jB5d\",\"row\":\"SemTalkStates_row__YrBvw\",\"column\":\"SemTalkStates_column__3hEYs\",\"ms-Grid\":\"SemTalkStates_ms-Grid__xo7ut\",\"title\":\"SemTalkStates_title__xLzwp\",\"subTitle\":\"SemTalkStates_subTitle__1Ttcy\",\"form\":\"SemTalkStates_form__1wWei\",\"label\":\"SemTalkStates_label__3b8-O\",\"description\":\"SemTalkStates_description__2g1OA\",\"button\":\"SemTalkStates_button__JZObv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkAssociations\":\"SemTalkAssociations_semTalkAssociations__3ppGY\",\"pivottab\":\"SemTalkAssociations_pivottab__EVQ2q\",\"container\":\"SemTalkAssociations_container__3InTQ\",\"row\":\"SemTalkAssociations_row__wClY0\",\"column\":\"SemTalkAssociations_column__1Ju_o\",\"ms-Grid\":\"SemTalkAssociations_ms-Grid__1kLZX\",\"title\":\"SemTalkAssociations_title__3CLSN\",\"subTitle\":\"SemTalkAssociations_subTitle__2AF-V\",\"form\":\"SemTalkAssociations_form__1hDZC\",\"label\":\"SemTalkAssociations_label__3kC-3\",\"description\":\"SemTalkAssociations_description__1PBmt\",\"button\":\"SemTalkAssociations_button__QwxsH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkGenericAssociations\":\"SemTalkGenericAssociations_semTalkGenericAssociations__1pbGb\",\"pivottab\":\"SemTalkGenericAssociations_pivottab__1CjST\",\"container\":\"SemTalkGenericAssociations_container__2A3rM\",\"row\":\"SemTalkGenericAssociations_row__2eX2W\",\"column\":\"SemTalkGenericAssociations_column__3bcS9\",\"ms-Grid\":\"SemTalkGenericAssociations_ms-Grid__3DP_S\",\"title\":\"SemTalkGenericAssociations_title__Ae0BN\",\"subTitle\":\"SemTalkGenericAssociations_subTitle__2ar1T\",\"form\":\"SemTalkGenericAssociations_form__36_jr\",\"label\":\"SemTalkGenericAssociations_label__2uP62\",\"description\":\"SemTalkGenericAssociations_description__2nnDN\",\"button\":\"SemTalkGenericAssociations_button__1Eq7N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkSynonym\":\"SemTalkSynonyms_semTalkSynonym__3rtmO\",\"pivottab\":\"SemTalkSynonyms_pivottab__1iXlt\",\"container\":\"SemTalkSynonyms_container__2PXuD\",\"row\":\"SemTalkSynonyms_row__3XW63\",\"column\":\"SemTalkSynonyms_column__1MueV\",\"ms-Grid\":\"SemTalkSynonyms_ms-Grid__2NkZk\",\"title\":\"SemTalkSynonyms_title__3wi7q\",\"subTitle\":\"SemTalkSynonyms_subTitle__3NnS4\",\"form\":\"SemTalkSynonyms_form__3E4bs\",\"label\":\"SemTalkSynonyms_label__3NUj6\",\"description\":\"SemTalkSynonyms_description__2i6Ox\",\"button\":\"SemTalkSynonyms_button__1e_Vz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkTabSpec\":\"SemTalkTabSpecs_semTalkTabSpec__3FV2q\",\"pivottab\":\"SemTalkTabSpecs_pivottab__Sipy_\",\"container\":\"SemTalkTabSpecs_container__Ykar8\",\"row\":\"SemTalkTabSpecs_row__dTc2A\",\"column\":\"SemTalkTabSpecs_column__IUKn1\",\"ms-Grid\":\"SemTalkTabSpecs_ms-Grid__71uMW\",\"title\":\"SemTalkTabSpecs_title__dkdjA\",\"subTitle\":\"SemTalkTabSpecs_subTitle__3RqLD\",\"form\":\"SemTalkTabSpecs_form__3X5Lh\",\"label\":\"SemTalkTabSpecs_label__22Ydp\",\"description\":\"SemTalkTabSpecs_description__1rkm1\",\"button\":\"SemTalkTabSpecs_button__39ocN\"};","import * as React from 'react';\r\nimport {\r\n    TextField,\r\n    Stack\r\n} from 'office-ui-fabric-react';\r\nexport function ExternCaption() { return \"Adresse\"; }\r\nexport function ExternValue(par: any, cmp: string) {\r\n    const parstate = par.state;\r\n    return parstate[cmp + \"_strasse\"] + \" \" + parstate[cmp + \"_hausnummer\"] + \" \" + parstate[cmp + \"_plz\"] + \" \" + parstate[cmp + \"_ort\"];\r\n}\r\n\r\nexport function Adresse(par: any, cmp: string, onfocus: () => {}) {\r\n    const parstate = par.state;\r\n    if (!parstate[cmp + \"_strasse\"]) parstate[cmp + \"_strasse\"] = \"\";\r\n    if (!parstate[cmp + \"_hausnummer\"]) parstate[cmp + \"_hausnummer\"] = \"\";\r\n    if (!parstate[cmp + \"_plz\"]) parstate[cmp + \"_plz\"] = \"\";\r\n    if (!parstate[cmp + \"_ort\"]) parstate[cmp + \"_ort\"] = \"\";\r\n    par.labels[cmp + \"_strasse\"] = \"Strasse\";\r\n    par.labels[cmp + \"Nr\"] = \"_hausnummer\";\r\n    par.labels[cmp + \"_plz\"] = \"PLZ\";\r\n    par.labels[cmp + \"_ort\"] = \"Ort\";\r\n\r\n    return <Stack>\r\n        <Stack horizontal tokens={{ childrenGap: 10 }}>\r\n            <TextField label=\"Strasse\" defaultValue={parstate[cmp + \"_strasse\"]}\r\n                required\r\n                onFocus={(_ev: any) => { onfocus(); }}\r\n                onChange={(_ev, a) => {\r\n                    if (a !== undefined) {\r\n                        // model[cmp + \"_strasse\"] = a;\r\n                        par.setState({ [cmp + \"_strasse\"]: a });\r\n                    }\r\n                }\r\n                }\r\n            ></TextField>\r\n            <TextField label=\"Nr\" defaultValue={parstate[cmp + \"_hausnummer\"]}\r\n                onFocus={(_ev: any) => { onfocus(); }}\r\n                onChange={(_ev, a) => {\r\n                    if (a !== undefined) {\r\n                        // model[\"_hausnummer\"] = a;\r\n                        par.setState({ [cmp + \"_hausnummer\"]: a });\r\n                    }\r\n                }\r\n                }\r\n            ></TextField>\r\n        </Stack>\r\n        <Stack horizontal tokens={{ childrenGap: 10 }}>\r\n            <TextField label=\"PLZ\" defaultValue={parstate[cmp + \"_plz\"]}\r\n                onFocus={(_ev: any) => { onfocus(); }}\r\n                required\r\n                onChange={(_ev, a) => {\r\n                    if (a !== undefined) {\r\n                        par.setState({ [cmp + \"_plz\"]: a });\r\n                    }\r\n                }\r\n                }\r\n            ></TextField>\r\n            <TextField label=\"Ort\" defaultValue={parstate[cmp + \"_ort\"]}\r\n                onFocus={(_ev: any) => { onfocus(); }}\r\n                required\r\n                onChange={(_ev, a) => {\r\n                    if (a !== undefined) {\r\n                        par.setState({ [cmp + \"_ort\"]: a });\r\n                    }\r\n                }\r\n                }\r\n            ></TextField>\r\n        </Stack>\r\n    </Stack>;\r\n}","import * as React from 'react';\r\nimport {\r\n    TextField,\r\n    Stack\r\n} from 'office-ui-fabric-react';\r\nexport function ExternCaption() { return \"Person\";}\r\nexport function ExternValue(par: any, cmp: string) { \r\n    const parstate = par.state;\r\n    return parstate[cmp + \"_vorname\"] + \" \" + parstate[cmp + \"_name\"];}\r\n\r\nexport function PersoenlicheAngaben(par: any, cmp: string, onfocus : () => {}) {\r\n    const parstate = par.state;\r\n    if (!parstate[cmp + \"_vorname\"]) parstate[cmp + \"_vorname\"]=\"\";\r\n    if (!parstate[cmp + \"_name\"]) parstate[cmp + \"_name\"]=\"\";\r\n    if (!parstate[cmp + \"_insta\"]) parstate[cmp + \"_insta\"]=\"\";\r\n    if (!parstate[cmp + \"_whatsapp\"]) parstate[cmp + \"_whatsapp\"]=\"\";\r\n    par.labels[cmp + \"_vorname\"] = \"Vorname\";\r\n    par.labels[cmp + \"_name\"] = \"Name\";\r\n    par.labels[cmp + \"_insta\"] = \"Insta\";\r\n    par.labels[cmp + \"_whatsapp\"] = \"WhatsApp\";\r\n\r\n    return <Stack>\r\n        <Stack horizontal tokens={{ childrenGap: 10 }}>\r\n            <TextField label=\"Vorname\" defaultValue={parstate[cmp + \"_vorname\"]}\r\n                 onFocus={(_ev: any) => { onfocus(); }}\r\n                 required\r\n                 onChange={(_ev, a) => {\r\n                    if (a !== undefined) {\r\n                        // let model = par.state.model;\r\n                        // parstate[\"_vorname\"] = a;\r\n                        par.setState({ [cmp + \"_vorname\"]: a });\r\n                       // par.setState({ \"model\": model });\r\n                    }\r\n                }\r\n                }\r\n            ></TextField>\r\n            <TextField label=\"Name\" defaultValue={parstate[cmp + \"_name\"]}\r\n                onFocus={(_ev: any) => { onfocus(); }}\r\n                required\r\n                onChange={(_ev, a) => {\r\n                    if (a !== undefined) {\r\n                        // let model = par.state.model;\r\n                        // parstate[\"_name\"] = a;\r\n                        par.setState({ [cmp + \"_name\"]: a });\r\n                        // par.setState({ \"model\": model });\r\n                    }\r\n                }\r\n                }\r\n            ></TextField>\r\n        </Stack>\r\n        <Stack horizontal tokens={{ childrenGap: 10 }}>\r\n            <TextField label=\"Insta\" defaultValue={parstate[cmp + \"_insta\"]}\r\n                onFocus={(_ev: any) => { onfocus(); }}\r\n                onChange={(_ev, a) => {\r\n                    if (a !== undefined) {\r\n                        // let model = par.state.model;\r\n                        // parstate[\"_insta\"] = a;\r\n                        par.setState({ [cmp + \"_insta\"]: a });\r\n                        // par.setState({ \"model\": model });\r\n                    }\r\n                }\r\n                }\r\n            ></TextField>\r\n            <TextField label=\"WhatsApp\" defaultValue={parstate[cmp + \"_whatsapp\"]}\r\n                onFocus={(_ev: any) => { onfocus(); }}\r\n                onChange={(_ev, a) => {\r\n                    if (a !== undefined) {\r\n                        // let model = par.state.model;\r\n                        // parstate[\"_whatsapp\"] = a;\r\n                        par.setState({ [cmp + \"_whatsapp\"]: a });\r\n                        // par.setState({ \"model\": model });\r\n                    }\r\n                }\r\n                }\r\n            ></TextField>\r\n        </Stack>\r\n    </Stack>;\r\n}","import * as React from 'react';\r\nimport {\r\n    Text\r\n} from 'office-ui-fabric-react';\r\nexport default function Dummy(_par: any, cmp: string, _onfocus : () => {}) {\r\n    return <div><Text>{\"External Component: \" + cmp}</Text></div>;\r\n}","import * as Adresse from './Adresse';\nimport * as PersoenlicheAngaben from './PersoenlicheAngaben';\nimport Dummy from './Dummy';\n\n// export async function component(name: string) {\n//   try {\n//     let x = await import('./' + name);\n//     return x[name];\n//   } catch {\n//     return Dummy;\n//   }\n// }\n\nexport async function component(name: string) {\n  switch (name) {\n    case \"Adresse\": {\n      return Adresse.Adresse;\n    }\n    case \"PersoenlicheAngaben\": {\n      return PersoenlicheAngaben.PersoenlicheAngaben;\n    }\n    default:\n      return Dummy;\n  }\n}\nexport function extern_caption(name: string) {\n  switch (name) {\n    case \"Adresse\":\n      return Adresse.ExternCaption;\n    case \"PersoenlicheAngaben\":\n      return PersoenlicheAngaben.ExternCaption;\n    default:\n      return () => name;\n  }\n}\nexport function extern_value(name: string) {\n  switch (name) {\n    case \"Adresse\":\n      return Adresse.ExternValue;\n    case \"PersoenlicheAngaben\":\n      return PersoenlicheAngaben.ExternValue;\n    default:\n      return (_par: any, _cmp: string) => \"\";\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkModelProperty\":\"SemTalkModelProperty_semTalkModelProperty__37R8G\",\"container\":\"SemTalkModelProperty_container__w14Vw\",\"row\":\"SemTalkModelProperty_row__3dt0j\",\"column\":\"SemTalkModelProperty_column__2AsSJ\",\"ms-Grid\":\"SemTalkModelProperty_ms-Grid__2p68q\",\"title\":\"SemTalkModelProperty_title__Br8cJ\",\"subTitle\":\"SemTalkModelProperty_subTitle__34Il_\",\"description\":\"SemTalkModelProperty_description__1ZHgu\",\"button\":\"SemTalkModelProperty_button__3JzJj\",\"label\":\"SemTalkModelProperty_label__tBfSP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkNavigation\":\"SemTalkNavigation_semTalkNavigation__2v1fX\",\"container\":\"SemTalkNavigation_container__36iYd\",\"row\":\"SemTalkNavigation_row__kJ4ZX\",\"column\":\"SemTalkNavigation_column__1ILhj\",\"ms-Grid\":\"SemTalkNavigation_ms-Grid__2knHD\",\"title\":\"SemTalkNavigation_title__50w9u\",\"subTitle\":\"SemTalkNavigation_subTitle__1-75E\",\"description\":\"SemTalkNavigation_description__wKZLQ\",\"button\":\"SemTalkNavigation_button__hEDXU\",\"label\":\"SemTalkNavigation_label__DrE-E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkObjects\":\"SemTalkObjects_semTalkObjects__HZP6W\",\"container\":\"SemTalkObjects_container__mSBy-\",\"row\":\"SemTalkObjects_row__2LKTv\",\"column\":\"SemTalkObjects_column__u5VCx\",\"ms-Grid\":\"SemTalkObjects_ms-Grid__25yjz\",\"title\":\"SemTalkObjects_title__3QcwA\",\"subTitle\":\"SemTalkObjects_subTitle__32XPs\",\"description\":\"SemTalkObjects_description__3RNw4\",\"button\":\"SemTalkObjects_button__LAX2_\",\"label\":\"SemTalkObjects_label__36zwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkAssociationTypes\":\"SemTalkAssociationTypes_semTalkAssociationTypes__1GhCe\",\"container\":\"SemTalkAssociationTypes_container__Tdpv1\",\"row\":\"SemTalkAssociationTypes_row__2pmKi\",\"column\":\"SemTalkAssociationTypes_column__2BWFK\",\"ms-Grid\":\"SemTalkAssociationTypes_ms-Grid__1RQRS\",\"title\":\"SemTalkAssociationTypes_title__HnHUI\",\"subTitle\":\"SemTalkAssociationTypes_subTitle__K2Kvl\",\"description\":\"SemTalkAssociationTypes_description__3__A2\",\"button\":\"SemTalkAssociationTypes_button__i2OIF\",\"label\":\"SemTalkAssociationTypes_label__2J_ho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkAttributeTypes\":\"SemTalkAttributeTypes_semTalkAttributeTypes__3Cx_v\",\"container\":\"SemTalkAttributeTypes_container__2vydM\",\"row\":\"SemTalkAttributeTypes_row__1SWww\",\"column\":\"SemTalkAttributeTypes_column__nf3QL\",\"ms-Grid\":\"SemTalkAttributeTypes_ms-Grid__3isG1\",\"title\":\"SemTalkAttributeTypes_title__DcEWR\",\"subTitle\":\"SemTalkAttributeTypes_subTitle__YNCjh\",\"description\":\"SemTalkAttributeTypes_description__1Rsc4\",\"button\":\"SemTalkAttributeTypes_button___vt0P\",\"label\":\"SemTalkAttributeTypes_label__1No7M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkMethodTypes\":\"SemTalkMethodTypes_semTalkMethodTypes__kBoW6\",\"container\":\"SemTalkMethodTypes_container__3xpJY\",\"row\":\"SemTalkMethodTypes_row__f7mgw\",\"column\":\"SemTalkMethodTypes_column__Thbcz\",\"ms-Grid\":\"SemTalkMethodTypes_ms-Grid__3wF6L\",\"title\":\"SemTalkMethodTypes_title__3wPcQ\",\"subTitle\":\"SemTalkMethodTypes_subTitle__1oikM\",\"description\":\"SemTalkMethodTypes_description__3wKso\",\"button\":\"SemTalkMethodTypes_button__1XKZD\",\"label\":\"SemTalkMethodTypes_label__3Qv9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkStateTypes\":\"SemTalkStateTypes_semTalkStateTypes__1QXys\",\"container\":\"SemTalkStateTypes_container__3692M\",\"row\":\"SemTalkStateTypes_row__WG7ju\",\"column\":\"SemTalkStateTypes_column__2I_YR\",\"ms-Grid\":\"SemTalkStateTypes_ms-Grid__1WGhm\",\"title\":\"SemTalkStateTypes_title__1YRCN\",\"subTitle\":\"SemTalkStateTypes_subTitle__2I6qf\",\"description\":\"SemTalkStateTypes_description__K28ZW\",\"button\":\"SemTalkStateTypes_button__h_9ge\",\"label\":\"SemTalkStateTypes_label__L_hos\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkGeneral\":\"SemTalkGeneral_semTalkGeneral__1U568\",\"pivottab\":\"SemTalkGeneral_pivottab__i_mpy\",\"imagetab\":\"SemTalkGeneral_imagetab__2gU38\",\"container\":\"SemTalkGeneral_container__3CNHy\",\"textfield\":\"SemTalkGeneral_textfield__2ZIhv\",\"row\":\"SemTalkGeneral_row__3hwpN\",\"column\":\"SemTalkGeneral_column__2wx2q\",\"ms-Grid\":\"SemTalkGeneral_ms-Grid__13oh6\",\"title\":\"SemTalkGeneral_title__kZXqq\",\"subTitle\":\"SemTalkGeneral_subTitle__3pMXE\",\"form\":\"SemTalkGeneral_form__1Aywc\",\"label\":\"SemTalkGeneral_label__1LQl1\",\"description\":\"SemTalkGeneral_description__qbBfd\",\"button\":\"SemTalkGeneral_button__1EZPw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkAttachment\":\"SemTalkAttachments_semTalkAttachment__3p1R6\",\"pivottab\":\"SemTalkAttachments_pivottab__1V0e8\",\"container\":\"SemTalkAttachments_container__Bq0vw\",\"row\":\"SemTalkAttachments_row__2tdw7\",\"column\":\"SemTalkAttachments_column__22vpR\",\"ms-Grid\":\"SemTalkAttachments_ms-Grid__2wemN\",\"title\":\"SemTalkAttachments_title__mMYGo\",\"subTitle\":\"SemTalkAttachments_subTitle__1GgdO\",\"form\":\"SemTalkAttachments_form__3XAzu\",\"label\":\"SemTalkAttachments_label__2EPR2\",\"description\":\"SemTalkAttachments_description__3maNH\",\"button\":\"SemTalkAttachments_button__1VJNE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkRefinement\":\"SemTalkRefinements_semTalkRefinement__2w_xa\",\"pivottab\":\"SemTalkRefinements_pivottab__3Fo2n\",\"container\":\"SemTalkRefinements_container__q237U\",\"row\":\"SemTalkRefinements_row__1-CXT\",\"column\":\"SemTalkRefinements_column__2sFc_\",\"ms-Grid\":\"SemTalkRefinements_ms-Grid__2is1v\",\"title\":\"SemTalkRefinements_title__3MkFS\",\"subTitle\":\"SemTalkRefinements_subTitle__3cfg-\",\"form\":\"SemTalkRefinements_form__2IEfO\",\"label\":\"SemTalkRefinements_label__2EzFW\",\"description\":\"SemTalkRefinements_description__3BLPa\",\"button\":\"SemTalkRefinements_button__1sMlS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkAttr\":\"SemTalkGenericAttributes_semTalkAttr__OlM_v\",\"container\":\"SemTalkGenericAttributes_container__3f35b\",\"pivottab\":\"SemTalkGenericAttributes_pivottab__3k0jP\",\"row\":\"SemTalkGenericAttributes_row__3mdvD\",\"column\":\"SemTalkGenericAttributes_column__3qKmf\",\"ms-Grid\":\"SemTalkGenericAttributes_ms-Grid__kWclF\",\"title\":\"SemTalkGenericAttributes_title__1-Ki8\",\"subTitle\":\"SemTalkGenericAttributes_subTitle__1lTGE\",\"form\":\"SemTalkGenericAttributes_form__kV4RS\",\"label\":\"SemTalkGenericAttributes_label__350m0\",\"description\":\"SemTalkGenericAttributes_description__1a4zw\",\"button\":\"SemTalkGenericAttributes_button__1oYlC\"};","// import { Graph, Cell, Edge } from \"../graph/graph\";\r\nimport {\r\n  ISemTalkNode, IObjectBase, ISemTalkDiagram,\r\n  ISemTalkObject,\r\n  ISemTalkSystemClass,\r\n  ISemTalkInstance,\r\n  ISemTalkAssociation,\r\n  ISemTalkAssociationType,\r\n  ISemTalkDiagramType,\r\n  ISemTalkClass,\r\n  ILabelSpec,\r\n  SemTalkLanguageCode\r\n} from '../tbase/Interface';\r\nimport { ITSEditor } from \"../../ITSEditor\";\r\n// import { MSGraphClient } from '@microsoft/sp-http';\r\n// import { any } from '@microsoft/sp-webpart-base';\r\n// import { ITreeItem } from \"@pnp/spfx-controls-react/lib/TreeView\";\r\nimport { ISPExplorer } from '../explorer/spexplorerinterface';\r\nimport { Graph } from '../graph/graph';\r\nimport { ISemTalkUserTabProps } from '../../controls/stusertab/SemTalkUserTab';\r\nimport { MessageBarType } from 'office-ui-fabric-react';\r\n\r\nexport interface SemTalkShape {\r\n  \"name\": string;\r\n  \"key\": string;\r\n  \"logo\": string;\r\n  \"width\": number;\r\n  \"height\": number;\r\n  \"type\": string;\r\n  \"label\": string | undefined;\r\n  \"hidden\": boolean;\r\n}\r\nexport type SemTalkStencil = SemTalkShape[];\r\n\r\n\r\nexport enum SemTalkNavigationEvent {\r\n  gotoDocument = \"gotoDocument\",\r\n  gotoNode = \"gotoNode\",\r\n  gotoObject = \"gotoObject\",\r\n  visSelectionChanged = \"visSelectionChanged\",\r\n  alert = \"alert\"\r\n}\r\n\r\n// tslint:disable-next-line:interface-name\r\nexport interface IVisioRDFS {\r\n  noevents: boolean;\r\n  //vispage: Graph;\r\n  // editor: any;\r\n  tseditor: ITSEditor;\r\n  graph: mxGraph | Graph;\r\n  explorer: ISPExplorer;\r\n  // shape: any;\r\n  masters: SemTalkStencil;\r\n  redraw(): void;\r\n  getMessage(e: any): any;\r\n\r\n  template: string;\r\n  horizontal: boolean;\r\n\r\n  currentShape(): mxCell | undefined;\r\n  loadDiag(id: number): ISemTalkDiagram | null;\r\n  getMxId(shape: mxCell): string;\r\n  FindShapeByShapeID(shapeid: string): mxCell | null;\r\n  visCellSystemClass(oid: number): ISemTalkSystemClass | null;\r\n  visSelectionChanged(shape: mxCell): void;\r\n  visShapesCloned(shapes: mxCell[]): void;\r\n  visShapesMoved(shapes: mxCell[]): void;\r\n  visShapesCopied(shapes: mxCell[]): void;\r\n  EnsureClass(mst: string, diagtype: ISemTalkDiagramType): ISemTalkClass;\r\n  EnsureSystemClass(mst: string, diagtype: ISemTalkDiagramType): ISemTalkSystemClass;\r\n  EnsureInstance(cl: ISemTalkSystemClass, mst: string, subkey: string): ISemTalkInstance;\r\n  visShapeAdded(shape: mxCell): ISemTalkNode | null;\r\n  visShapesDeleted(shapes: mxCell[]): void;\r\n  visShapeExitedTextEdit(shape: mxCell, label: string): void;\r\n  makeInstance(class_cell: mxCell, inst_cell: mxCell): void;\r\n  makeSubClass(class_cell: mxCell, inst_cell: mxCell): void;\r\n  resetSubTaskStyle(s0: string): string;\r\n  updateLabelStyle(obj: ISemTalkObject, lsp: ILabelSpec, style: string): string;\r\n  UpdateLabel(obj: ISemTalkObject): void;\r\n  UpdateByID(id: number): void;\r\n  masterName(key: string): string;\r\n  MoveEdgesToShape(sel: mxCell, obj: ISemTalkObject, newobj: ISemTalkObject): void;\r\n  RenameDiagram(obj: ISemTalkObject, label: string): void;\r\n  RenameObject(obj: ISemTalkObject, label: string, shape: mxCell | null): void;\r\n  GetShapeStyle(shapeName: string, shapeType: string): { style: string, isedge: boolean };\r\n  ChangeObject(shape: mxCell, newobj: ISemTalkObject[]): void;\r\n  UpdateSwimlaneContent(shape: mxCell): void;\r\n  InsertObject(newobj: ISemTalkObject, x: number, y: number): mxCell | null;\r\n  EnsureBORelation(ins: ISemTalkInstance, label: string): void;\r\n  isValid(srcid: number, dstid: number): boolean;\r\n  notSamePool(source: mxCell, target: mxCell, toggle: boolean): boolean;\r\n  filterRelations(rels: ISemTalkAssociationType[],\r\n    source: mxCell, target: mxCell, ctrl: boolean,\r\n    sy: ISemTalkSystemClass, dsy: ISemTalkSystemClass,\r\n    src: ISemTalkInstance, dst: ISemTalkInstance): ISemTalkAssociationType[];\r\n  visConnectionAdded(evt: mxEventObject | undefined, link: mxCell, source: mxCell, target: mxCell): ISemTalkNode | null;\r\n  visConnectionsDeleted(link: mxCell): void;\r\n  visPageAdded(page: ISemTalkDiagram): void;\r\n  visPageDeleted(page: ISemTalkDiagram): void;\r\n  visPageChanged(page: ISemTalkDiagram): void;\r\n\r\n  base: IObjectBase;\r\n  page: ISemTalkDiagram | null | undefined;\r\n  getResStrListener(str: string, lang?: string): string;\r\n  getResStr(str: string, lang?: string): string;\r\n  getSPListName(bc: string): string;\r\n  init(ob: IObjectBase | null, lan: string): void;\r\n  patchSubTask(ob: IObjectBase): void;\r\n  getOverridable(name: string): any;\r\n  initSubTask(ob: IObjectBase): void;\r\n  initPage(diag: ISemTalkDiagram): void;\r\n  insertSwimlane(cell: mxCell): void;\r\n  toggleDirection(cell: mxCell): void;\r\n  ExpandObject(shape: mxCell, newlinks: ISemTalkAssociation[]): void;\r\n  ExpandSimilarClass(shape: mxCell, newlinks: string[]): void;\r\n  // redrawLastShape(): void;\r\n  beginTransaction(xml: string, reason: string): void;\r\n  endTransaction(xml: string, reason: string): void;\r\n  currentTransaction(): string;\r\n  autoSave(mxgraphxml: string): void;\r\n  IsAutoSave: boolean;\r\n  readonly: boolean;\r\n  tempId: number;\r\n  IsUndo(): boolean;\r\n  IsRedo(): boolean;\r\n  clearUndo(): void;\r\n\r\n  InsertObjects(newobjs: ISemTalkObject[], x: number, y: number, expand: boolean): void;\r\n  ImportTermSet(sysc: ISemTalkSystemClass, items: ITermSetItem[], x: number, y: number): void;\r\n  ImportTermSetTree(syscname: string, items: any[], x: number, y: number): void;\r\n\r\n  getLabel(cell: mxCell, tmp: string): string;\r\n  quickShapes(oid: number, stencil: SemTalkStencil): SemTalkStencil;\r\n\r\n  selectedShapes(): mxCell[];\r\n  deleteShapes(): void;\r\n  clearSelection(): void;\r\n  updateDiaglist(): void;\r\n\r\n  // refreshGraphObject(msgraphclient: MSGraphClient, obj: ISemTalkObject): void;\r\n  // refreshRepositoryObject(context: any, site: string, obj: ISemTalkObject): void;\r\n  // refreshPage(msgraphclient: MSGraphClient, context: any, site: string): void;\r\n  // refreshObject(obj: ISemTalkObject, msgraphclient: MSGraphClient, context: any, site: string);\r\n  initStencil(\r\n    dtype: ISemTalkDiagramType,\r\n    stencil: string, sprops: SharePointSettings, extended: boolean,\r\n    loadStencil: (template: string, url: string, spinterface: ISPExplorer) => Promise<SemTalkStencil>): Promise<SemTalkStencil>;\r\n\r\n  initStencils(ob: IObjectBase, sem: IVisioRDFS, guilanguage: SemTalkLanguageCode,\r\n    sprops: SharePointSettings, showBPMN: boolean,\r\n    loadStencil: (template: string, url: string, spinterface: ISPExplorer) => Promise<SemTalkStencil>): Promise<string>;\r\n  setStencil(diag: ISemTalkDiagram): SemTalkStencil;\r\n  renderUserTab(tab: string, object: ISemTalkObject): React.ReactElement<ISemTalkUserTabProps>;\r\n  captionUserTab(_tab: string): string;\r\n  hasVector: (s: ISemTalkSystemClass) => {};\r\n  BeforeDocumentSave(): boolean;\r\n  getRibbon(ribbon?: SemTalkRibbon): { \"ribbon\": SemTalkRibbon, \"toolbar\": SemTalkRibbon, \"keys\": {[keyEvent: string]: any} };\r\n  AddonCommand(args: any): void;\r\n  renderSubTaskDialog(addoncommand: string): any;\r\n  alert(s: string, mtype: MessageBarType): void;\r\n  ismodified: boolean;\r\n}\r\nexport type SharePointSettings = {\r\n  site: string, cdn: string,\r\n  context: any, support: string, templates: string\r\n};\r\n\r\nexport interface ITermSetItem {\r\n  Term: any;\r\n  ObjectName: string;\r\n  ObjectCaption: string;\r\n  Children: any[];\r\n}\r\nexport enum SemTalkUIConstant {\r\n  SLHidden = \"SemTalkHidden\",\r\n  SemTalkUserTab = \"SemTalkUserTab\",\r\n}\r\n\r\nexport type SemTalkRibbon = any[];\r\n"," export enum SemTalkMaster {\r\n  MasterSwimlane = \"swimlane\",\r\n  MasterClass = \"Class\",\r\n  MasterSystemClass = \"SystemClass\",\r\n  MasterUMLClass = \"UMLClass\",\r\n  MasterInstance = \"Instance\",\r\n  MasterSubClassOf = \"SubClassOf\",\r\n  MasterProperty = \"Property\",\r\n  MasterComment = \"Comment\",\r\n  MasterOrgUnit = \"OrgUnit\",\r\n  MasterPosition = \"Position\",\r\n  MasterRole = \"Role\",\r\n  MasterPerson = \"Person\"\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkPivot\":\"SemTalkPivot_semTalkPivot__2_DAJ\",\"container\":\"SemTalkPivot_container__oqRYl\",\"imagetab\":\"SemTalkPivot_imagetab__fLOOd\",\"row\":\"SemTalkPivot_row__vYpd2\",\"column\":\"SemTalkPivot_column__1Safz\",\"ms-Grid\":\"SemTalkPivot_ms-Grid__3yyxp\",\"title\":\"SemTalkPivot_title__21kuB\",\"subTitle\":\"SemTalkPivot_subTitle__2zq9k\",\"description\":\"SemTalkPivot_description__2EIxg\",\"button\":\"SemTalkPivot_button__1Rz-0\",\"label\":\"SemTalkPivot_label__2JdOU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkCustomize\":\"SemTalkCustomize_semTalkCustomize__2PnWi\",\"container\":\"SemTalkCustomize_container__2pFZQ\",\"imagetab\":\"SemTalkCustomize_imagetab__3u3Xv\",\"row\":\"SemTalkCustomize_row__EppNW\",\"column\":\"SemTalkCustomize_column__29ESV\",\"ms-Grid\":\"SemTalkCustomize_ms-Grid__2YF1d\",\"title\":\"SemTalkCustomize_title__H54_M\",\"subTitle\":\"SemTalkCustomize_subTitle__2G-eS\",\"description\":\"SemTalkCustomize_description__2XVI3\",\"button\":\"SemTalkCustomize_button__32uqM\",\"label\":\"SemTalkCustomize_label__Efe9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkUserTab\":\"usercontrol_semTalkUserTab__2k0TB\",\"pivottab\":\"usercontrol_pivottab__3zOpp\",\"container\":\"usercontrol_container__1DzDm\",\"textfield\":\"usercontrol_textfield__1qTvM\",\"row\":\"usercontrol_row__2L6RJ\",\"column\":\"usercontrol_column__1j5zt\",\"ms-Grid\":\"usercontrol_ms-Grid__1jJUQ\",\"title\":\"usercontrol_title__1LPYK\",\"subTitle\":\"usercontrol_subTitle__3-gox\",\"form\":\"usercontrol_form__3Y7jp\",\"label\":\"usercontrol_label__3SavV\",\"description\":\"usercontrol_description__2kery\",\"button\":\"usercontrol_button__2Ako2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkOnlineWebpart\":\"SemTalkOnline_semTalkOnlineWebpart__1SFbf\",\"detailsPanel\":\"SemTalkOnline_detailsPanel__3i9VK\",\"container\":\"SemTalkOnline_container__3AEg0\",\"description\":\"SemTalkOnline_description__-G6q3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkAudit\":\"SemTalkAudit_semTalkAudit__29F7s\",\"pivottab\":\"SemTalkAudit_pivottab__2F1Vf\",\"container\":\"SemTalkAudit_container__1MCs2\",\"textfield\":\"SemTalkAudit_textfield__3cU89\",\"row\":\"SemTalkAudit_row__3tAuk\",\"column\":\"SemTalkAudit_column__3G6rc\",\"ms-Grid\":\"SemTalkAudit_ms-Grid__iyCDB\",\"title\":\"SemTalkAudit_title__3P1BD\",\"subTitle\":\"SemTalkAudit_subTitle__22Jmh\",\"form\":\"SemTalkAudit_form__19ByZ\",\"label\":\"SemTalkAudit_label__1G2dl\",\"description\":\"SemTalkAudit_description__6c5IC\",\"button\":\"SemTalkAudit_button__rWob4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkDialog\":\"SemTalkDialog_semTalkDialog__Z2_GJ\",\"pivottab\":\"SemTalkDialog_pivottab__2iXD7\",\"container\":\"SemTalkDialog_container__ssPiN\",\"textfield\":\"SemTalkDialog_textfield__2Jg2n\",\"row\":\"SemTalkDialog_row__1EcY2\",\"column\":\"SemTalkDialog_column__1vyIK\",\"ms-Grid\":\"SemTalkDialog_ms-Grid__3w6v-\",\"title\":\"SemTalkDialog_title__1NURH\",\"subTitle\":\"SemTalkDialog_subTitle__1Mrla\",\"form\":\"SemTalkDialog_form__3fYXO\",\"label\":\"SemTalkDialog_label__ptgq8\",\"description\":\"SemTalkDialog_description__3M0Pu\",\"button\":\"SemTalkDialog_button__3nqwA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkStyle\":\"SemTalkStyle_semTalkStyle__1xeDe\",\"pivottab\":\"SemTalkStyle_pivottab__3oMsz\",\"container\":\"SemTalkStyle_container__H8bXC\",\"textfield\":\"SemTalkStyle_textfield__34qiL\",\"row\":\"SemTalkStyle_row__2CKgE\",\"column\":\"SemTalkStyle_column__1bVsC\",\"ms-Grid\":\"SemTalkStyle_ms-Grid__sL437\",\"title\":\"SemTalkStyle_title__1BXhh\",\"subTitle\":\"SemTalkStyle_subTitle__1OlNP\",\"form\":\"SemTalkStyle_form__mDOew\",\"label\":\"SemTalkStyle_label__1gCWC\",\"description\":\"SemTalkStyle_description__14ytM\",\"button\":\"SemTalkStyle_button__1UPzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkSystemClass\":\"SemTalkSystemClass_semTalkSystemClass__1cnQN\",\"pivottab\":\"SemTalkSystemClass_pivottab__2Hu2n\",\"container\":\"SemTalkSystemClass_container__3yKH1\",\"row\":\"SemTalkSystemClass_row__KYIHZ\",\"column\":\"SemTalkSystemClass_column__1Yq6w\",\"ms-Grid\":\"SemTalkSystemClass_ms-Grid__22KaF\",\"title\":\"SemTalkSystemClass_title__2100k\",\"subTitle\":\"SemTalkSystemClass_subTitle__3hFZh\",\"form\":\"SemTalkSystemClass_form__3hyLi\",\"label\":\"SemTalkSystemClass_label__1n0Pf\",\"description\":\"SemTalkSystemClass_description__17lPr\",\"button\":\"SemTalkSystemClass_button__2o2k0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkAttributeType\":\"SemTalkAttributeType_semTalkAttributeType__1FpNM\",\"pivottab\":\"SemTalkAttributeType_pivottab__4PHHK\",\"container\":\"SemTalkAttributeType_container__2A6DP\",\"row\":\"SemTalkAttributeType_row__3B2Xk\",\"column\":\"SemTalkAttributeType_column__2P2ms\",\"ms-Grid\":\"SemTalkAttributeType_ms-Grid__2RY2H\",\"title\":\"SemTalkAttributeType_title__1UE11\",\"subTitle\":\"SemTalkAttributeType_subTitle__2q6VL\",\"form\":\"SemTalkAttributeType_form__2ZfHv\",\"label\":\"SemTalkAttributeType_label__2_8zK\",\"description\":\"SemTalkAttributeType_description__76QpW\",\"button\":\"SemTalkAttributeType_button__CLoXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkDiagramType\":\"SemTalkDiagramType_semTalkDiagramType__1OPBq\",\"pivottab\":\"SemTalkDiagramType_pivottab__1-6XJ\",\"container\":\"SemTalkDiagramType_container__3isPx\",\"row\":\"SemTalkDiagramType_row__4AB-5\",\"column\":\"SemTalkDiagramType_column__25aQS\",\"ms-Grid\":\"SemTalkDiagramType_ms-Grid__QRfbU\",\"title\":\"SemTalkDiagramType_title__1JiQI\",\"subTitle\":\"SemTalkDiagramType_subTitle__3Yz84\",\"form\":\"SemTalkDiagramType_form__27HK1\",\"label\":\"SemTalkDiagramType_label__97vnT\",\"description\":\"SemTalkDiagramType_description__30ClB\",\"button\":\"SemTalkDiagramType_button__22MwH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkCompose\":\"SemTalkCompose_semTalkCompose__2idEu\",\"pivottab\":\"SemTalkCompose_pivottab__2kQ-O\",\"container\":\"SemTalkCompose_container__33PqR\",\"row\":\"SemTalkCompose_row__3ut2E\",\"column\":\"SemTalkCompose_column__3hjdZ\",\"ms-Grid\":\"SemTalkCompose_ms-Grid__3yk8O\",\"title\":\"SemTalkCompose_title__1pyGx\",\"subTitle\":\"SemTalkCompose_subTitle__gaMU5\",\"form\":\"SemTalkCompose_form__3Ny3G\",\"label\":\"SemTalkCompose_label__1GJCl\",\"description\":\"SemTalkCompose_description__2hr0M\",\"button\":\"SemTalkCompose_button__2Jj8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkShapeStyle\":\"SemTalkShapeStyle_semTalkShapeStyle__i_Ocm\",\"pivottab\":\"SemTalkShapeStyle_pivottab__2YaG1\",\"container\":\"SemTalkShapeStyle_container__12OQ7\",\"textfield\":\"SemTalkShapeStyle_textfield__10D8T\",\"row\":\"SemTalkShapeStyle_row__1MpDi\",\"column\":\"SemTalkShapeStyle_column__1hWjN\",\"ms-Grid\":\"SemTalkShapeStyle_ms-Grid__3vYvB\",\"title\":\"SemTalkShapeStyle_title__3fG8a\",\"subTitle\":\"SemTalkShapeStyle_subTitle__3wull\",\"form\":\"SemTalkShapeStyle_form__2z5i5\",\"label\":\"SemTalkShapeStyle_label__3zd_v\",\"description\":\"SemTalkShapeStyle_description__2dGI1\",\"button\":\"SemTalkShapeStyle_button__2tqrp\"};","export enum EPC_ElementName {\r\n    Personentyp = \"Personentyp\",\r\n    Service = \"Service\",\r\n    Entitytyp = \"Entitytyp\",\r\n    Class = \"epc#Class\",\r\n    Fachbegriff = \"Fachbegriff\",\r\n    Ressource = \"Allgemeine Ressource\",\r\n    Prozesspfad = \"Prozesspfad\",\r\n    Kennzahl = \"Kennzahl\",\r\n    Risiko = \"Risiko\",\r\n    Control = \"Control\",\r\n    Anwendungssystemtyp = \"Anwendungssystemtyp\",\r\n    XOR = \"XOR\",\r\n    OR = \"OR\",\r\n    AND = \"AND\",\r\n    Wissenskategorie = \"Wissenskategorie\",\r\n    HumanRes = \"Human Resource\",\r\n    Operator = \"Operator\",\r\n    Transaction = \"Transaction\",\r\n    Package = \"Package\",\r\n    EPCObject = \"EPC Object\",\r\n    DataObject = \"Data Object\"\r\n}\r\nexport enum EPC_AssociationName {\r\n    aktiviert = \"aktiviert\",\r\n    erzeugt = \"erzeugt\",\r\n    führtaus = \"führt aus\",\r\n    führtzu = \"führt zu\",\r\n    hasTransaction = \"has Transaction\",\r\n    hasOperation = \"hasOperation\",\r\n    hasOutput = \"hat Output\",\r\n    istInputfür = \"ist Input für\",\r\n    istVorgängervon = \"ist Vorgänger von\",\r\n    liefertInputfür = \"liefert Input für\",\r\n    MessageType = \"MessageType\",\r\n    suppliesOutputfor = \"supplies Output for\",\r\n    verknüpft = \"verknüpft\",\r\n    wirdausgewertetvon = \"wird ausgewertet von\",\r\n    wirdbenötigtfür = \"wird benötigt für\",\r\n    wirdverwendetfür = \"wird verwendet für\",\r\n    wirdverwendetvon = \"wird verwendet von\"\r\n}\r\nexport enum EPC_DiagramTypeName {\r\n    BusinessObjectModel = \"Business-Objekt Modell\",\r\n    OrgChart = \"Organigramm\",\r\n    ResClassModel = \"Sachmittelmodell\",\r\n    KnowlegeMap = \"Wissenslandkarte\",\r\n    SystemModel = \"Informationsträgermodell\"\r\n\r\n}","import * as React from 'react';\r\n// import styles from './citExtComponent.module.scss';\r\n\r\nimport {\r\n  // DefaultButton,\r\n  Selection, IColumn,\r\n  DetailsList, DetailsListLayoutMode,\r\n  CheckboxVisibility, CommandBar, TextField,\r\n  // IDropdownOption,\r\n  Checkbox,\r\n  // Label,\r\n  // ComboBox, IComboBoxOption, IComboBox,// MaskedTextField,\r\n  // DatePicker,\r\n  Stack\r\n} from 'office-ui-fabric-react';\r\nimport {\r\n  SelectionMode,\r\n  ISelection\r\n} from 'office-ui-fabric-react/lib/utilities/selection';\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport {\r\n  IObjectBase,\r\n  ISemTalkClass, ISemTalkObject\r\n} from \"../../../../tbase/Interface\";\r\nimport { getObject, addCallBack, removeCallBack } from '../../../stglobal';\r\nimport { Guid } from \"guid-typescript\";\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../../visiordfsinterface';\r\nimport { OB2JSON } from '../../../../tbase/OB2JSON';\r\nimport { ObjectBase } from '../../../../tbase/ObjectBase';\r\nimport { OB2XML } from '../../../../tbase/OB2XML';\r\nimport { cit_AttributeName } from '../citinterface';\r\n\r\nexport interface ICitExtComponentProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  context?: any;\r\n}\r\ninterface IVariantTab {\r\n  Attribute: ISemTalkClass;\r\n  PropName: string;\r\n  ischecked: boolean;\r\n}\r\nexport interface ICitExtComponentState {\r\n  objectid: number;\r\n  hasError: boolean;\r\n  base: IObjectBase;\r\n  comp_created: string;\r\n  comp_filename: string;\r\n  comp_rfilename: string;\r\n  items: IVariantTab[];\r\n}\r\nexport class CitExtComponent extends React.Component<ICitExtComponentProps, ICitExtComponentState> {\r\n  private _selection: ISelection;\r\n  private object: ISemTalkObject | null = null;\r\n  public callback: Guid;\r\n  private objectname: string = \"\";\r\n\r\n  constructor(props: ICitExtComponentProps) {\r\n    super(props);\r\n    console.debug(\"showcitExtComponent\");\r\n    this.callback = Guid.create();\r\n    this._selection = new Selection();\r\n    this.state = {\r\n      objectid: -1,\r\n      hasError: false,\r\n      base: this.props.semtalk.base,\r\n      comp_created: \"\",\r\n      comp_filename: \"\",\r\n      comp_rfilename: \"\",\r\n      items: [],\r\n    };\r\n  }\r\n  private resetState = () => {\r\n    this.setState({\r\n      objectid: -1,\r\n      hasError: false,\r\n      base: this.props.semtalk.base,\r\n      comp_created: \"\",\r\n      comp_filename: \"\",\r\n      comp_rfilename: \"\",\r\n      items: []\r\n    });\r\n  }\r\n  private mounted: boolean = false;\r\n\r\n  public async componentDidMount() {\r\n    this.mounted = true;\r\n    let oid: number = getObject();\r\n    if (oid > 0) {\r\n      this.loadObject(oid);\r\n    }\r\n    addCallBack(this);\r\n  }\r\n  public componentWillUnmount() {\r\n    if (this.object && this.object.ObjectCaption !== this.objectname) {\r\n      this.props.semtalk.RenameObject(this.object, this.objectname, null);\r\n    }\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n    this.object = null;\r\n  }\r\n\r\n  private loadObject(id: number) {\r\n    let variants: ISemTalkClass[] = [];\r\n    let obj = this.state.base.FindObjectByID(id);\r\n    this.object = obj;\r\n    if (obj) {\r\n      this.objectname = obj.ObjectCaption;\r\n      let x64: string = obj.GetValue(cit_AttributeName.ExternalComponent64);\r\n      if (x64) {\r\n        const buff2 = Buffer.from(x64, 'base64');\r\n        const s2 = buff2.toString('utf8');\r\n        let component = new ObjectBase();\r\n        const o2x = new OB2XML();\r\n        o2x.LoadXML(component, s2);\r\n        const v = component.FindAttributeType(\"Variant\");\r\n        if (v) variants = v.AllSubClasses();\r\n        obj.SetValue(cit_AttributeName.VariantSaved, component.GetModelAttribute(\"TimeSaved\"));\r\n        let fn = component.GetModelAttribute(\"vsd\");\r\n        obj.SetValue(cit_AttributeName.AbsolutePath, fn);\r\n        if (fn.indexOf(\"\\\\\")>0) {\r\n          let rp = fn.substring(fn.lastIndexOf(\"\\\\\")+1);\r\n          obj.SetValue(cit_AttributeName.RelativePath, rp);\r\n        } else {\r\n          if (fn.indexOf(\"/\")>0) {\r\n            let rp = fn.substring(fn.lastIndexOf(\"/\")+1);\r\n            obj.SetValue(cit_AttributeName.RelativePath, rp);\r\n          }\r\n\r\n        }\r\n\r\n        // for (let m of component.AllModelAttributes()) {\r\n        //   if (m.startsWith(\"MXG_\")) {\r\n        //     const mxgb64 = component.GetModelAttribute(m);\r\n        //     const mxgxml = VisioRDFS.decodelzutf8(mxgb64);\r\n        //     this.props.semtalk.tseditor.preview(mxgxml, \"extoutlineContainer\");\r\n        //     continue;\r\n        //   }\r\n        // }\r\n      }\r\n      let items: IVariantTab[] = [];\r\n      for (let va of variants) {\r\n        items.push({ PropName: va.ObjectCaption, Attribute: va, ischecked: obj.GetValue(va.ObjectName) === \"1\" });\r\n      }\r\n      let c = obj.GetValue(cit_AttributeName.VariantSaved);\r\n      let f = obj.GetValue(cit_AttributeName.AbsolutePath);\r\n      let r = obj.GetValue(cit_AttributeName.RelativePath);\r\n      if (!c) c = \"\";\r\n      if (!f) f = \"\";\r\n      if (!r) r = \"\";\r\n      this.setState({\r\n        objectid: id,\r\n        items: items,\r\n        comp_created: c,\r\n        comp_filename: f,\r\n        comp_rfilename: r,\r\n      });\r\n    }\r\n  }\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n  // private remove_lang = (base: IObjectBase) => {\r\n  //   // const o2x = new OB2XML();\r\n  //   for (let m of base.AllModelAttributes()) {\r\n  //     if (m.startsWith(\"MXG_\")) {\r\n  //       base.SetModelAttribute(m, undefined);\r\n  //     }\r\n  //   }\r\n  //   let lc = base.FindSystemClass(SemTalkBaseConstant.SLLanguage);\r\n  //   let co = base.FindSystemClass(SemTalkBaseConstant.SLComment);\r\n  //   let so = base.FindAssociationType(SemTalkBaseConstant.SLSubClassOf);\r\n  //   let io = base.FindAssociationType(SemTalkBaseConstant.SLInstanceOf);\r\n  //   let de = base.FindInstance(SemTalkLanguage.German);\r\n  //   let en = base.FindInstance(SemTalkLanguage.English);\r\n  //   if (lc) {\r\n  //     for (let l of lc.Instances()) {\r\n  //       if (l.ObjectName !== SemTalkLanguage.German &&\r\n  //         l.ObjectName !== SemTalkLanguage.English) {\r\n  //         lc.DeleteSynonym(l.ObjectName);\r\n  //         if (co) co.DeleteSynonym(l.ObjectName);\r\n  //         if (so) so.DeleteSynonym(l.ObjectName);\r\n  //         if (io) io.DeleteSynonym(l.ObjectName);\r\n  //         if (de) de.DeleteSynonym(l.ObjectName);\r\n  //         if (en) en.DeleteSynonym(l.ObjectName);\r\n  //         l.Delete();\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n  // private downloadfile = (filename: string, xml: string) => {\r\n  //   const url = window.URL.createObjectURL(new Blob([xml]),);\r\n  //   const link: any = document.createElement('a');\r\n  //   link.href = url;\r\n  //   link.setAttribute('download', filename,);\r\n  //   document.body.appendChild(link);\r\n  //   link.click();\r\n  //   link.parentNode.removeChild(link);\r\n  // }\r\n  private upload = () => {\r\n    const inp: any = document.createElement('input');\r\n    inp.setAttribute('type', `File`);\r\n    inp.setAttribute('className', `hidden`);\r\n    inp.setAttribute('multiple', false);\r\n    inp.setAttribute('accept', \".sdx\");\r\n    inp.onchange = (e: any) => {\r\n      this.onUploadChangeHandler(e);\r\n    };\r\n    document.body.appendChild(inp);\r\n    inp.click();\r\n    inp.parentNode.removeChild(inp);\r\n  }\r\n  private detach = () => {\r\n    let obj = this.object;\r\n    if (obj) {\r\n      obj.SetValue(\"cit_AttributeName.ExternalComponent64\", null);\r\n      obj.SetValue(\"comp_created\", null);\r\n      obj.SetValue(\"comp_filename\", null);\r\n      obj.SetValue(\"comp_rfilename\", null);\r\n    }\r\n    this.setState({\r\n      items: [],\r\n      comp_created: \"\",\r\n      comp_filename: \"\",\r\n      comp_rfilename: \"\",\r\n    });\r\n  }\r\n  private refresh = () => {\r\n    // Das geht nur wenn die Datei per URL errechbar ist. Sonst muss man es manuell zuordnen\r\n  }\r\n  private onUploadChangeHandler = (event: any) => {\r\n    let f = event.target.files[0];\r\n    console.log(f);\r\n    var fr = new FileReader();\r\n    fr.readAsText(f);\r\n    // let filename = f.name;\r\n    fr.onload = async (_event) => {\r\n      //Both \"event.target.result\" and \"fr.result\" contain the file's contents (because \"event.target\" is === \"fr\")\r\n      const s: string = fr.result as string;\r\n      const json = JSON.parse(s);\r\n      let tb = new ObjectBase();\r\n      const o2j = new OB2JSON();\r\n      o2j.LoadJSON(tb, json);\r\n      // this.remove_lang(tb);\r\n      const o2x = new OB2XML();\r\n      const xml = o2x.SaveXML(tb);\r\n      try {\r\n        // const buff = Buffer.from(s, 'utf8');\r\n        const buff = Buffer.from(xml, 'utf8');\r\n        const b64 = buff.toString('base64');\r\n\r\n        // let component = new ObjectBase();\r\n        // const o2x = new OB2XML();\r\n        // o2x.LoadXML(component, xml);\r\n       //  console.debug(buff.toString('base64'));\r\n        //  downloadfile(\"xxx.txt\", buff.toString('base64'));\r\n        // this.downloadfile(\"xxx.txt\", b64);\r\n        if (this.object) {\r\n          this.object.SetValue(cit_AttributeName.ExternalComponent64, b64);\r\n          this.loadObject(this.object.ID);\r\n\r\n          // this.downloadfile(\"xxx.sdx\", JSON.stringify(o2j.SaveJSON(this.object.ObjectBase)));\r\n          // console.debug(b64);\r\n          // const x64 = this.object.GetValue(cit_AttributeName.ExternalComponent64);\r\n          // const s2 = base64.decode(x64);\r\n          // const buff2 = Buffer.from(x64, 'base64');\r\n          // const s2 = buff2.toString('utf8');\r\n          // if (s22 !== s2) {\r\n          //     console.log(s22);\r\n          // }\r\n\r\n\r\n          // const tb2 = new ObjectBase();\r\n          // o2x.LoadXML(tb2, s2);\r\n          // const fs = tb2.FindSystemClass(\"FieldSet\");\r\n          // const fs1 = fs?.AllInstances()[0];\r\n          //   this.setState({ comp_created: tb2.GetModelAttribute(\"TimeSaved\"), comp_filename: f });\r\n          // console.debug(fs1);\r\n          // for (let m of tb2.AllModelAttributes()) {\r\n          //   if (m.startsWith(\"MXG_\")) {\r\n          //     const mxgb64 = tb2.GetModelAttribute(m);\r\n          //     const mxgxml = VisioRDFS.decodelzutf8(mxgb64);\r\n          //     this.props.semtalk.tseditor.preview(mxgxml, \"extoutlineContainer\");\r\n          //     continue;\r\n          //   }\r\n          // }\r\n        }\r\n\r\n      } catch (ex) {\r\n        console.debug(ex);\r\n      }\r\n      // console.debug(s);\r\n    };\r\n  }\r\n\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoObject:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n          // this.forceUpdate();\r\n        }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n          // this.forceUpdate();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  public componentDidCatch(_error: any, _info: any) {\r\n    this.setState({ hasError: true });\r\n  }\r\n  private _columns: IColumn[] = [\r\n    {\r\n      key: 'Value',\r\n      name: \"Value\",\r\n      fieldName: 'Value',\r\n      minWidth: 200,\r\n      // maxWidth: 180,\r\n      isResizable: true,\r\n      isMultiline: true,\r\n      onRender: (item: IVariantTab, _index?: number, _column?: IColumn) => {\r\n        let cap = item.PropName;\r\n        let aname = item.Attribute.ObjectName;\r\n        let r: any;\r\n        r = <Checkbox checked={item.ischecked} label={cap}\r\n          onChange={(_ev: any, isChecked: boolean | undefined) => {\r\n            if (isChecked !== undefined)\r\n              if (isChecked) {\r\n                if (this.object) {\r\n                  this.object.SetValue(aname, \"1\");\r\n                  // item.ischecked  =true;\r\n                }\r\n              } else {\r\n                if (this.object) {\r\n                  this.object.SetValue(aname, \"0\");\r\n                  // item.ischecked=false;\r\n                }\r\n              }\r\n            if (this.object) this.loadObject(this.object.ID);\r\n          }}></Checkbox>;\r\n        return r;\r\n      }\r\n    }\r\n  ];\r\n  private commands = [\r\n    {\r\n      key: 'Upload',\r\n      name: \"Komponente zuordnen\",\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: { iconName: 'OpenFile' },\r\n      onClick: this.upload,\r\n    },\r\n    {\r\n      key: 'Delete',\r\n      name: \"Komponente entfernen\",\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: { iconName: 'Delete' },\r\n      onClick: this.detach,\r\n    },\r\n    {\r\n      key: 'Refresh',\r\n      name: \"Komponente aktualisieren\",\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: { iconName: 'Update' },\r\n      onClick: this.refresh,\r\n    }];\r\n  public render(): React.ReactElement<ICitExtComponentProps> {\r\n    // let val: any[] = this.getItems();\r\n    let r: React.ReactElement<ICitExtComponentProps>;\r\n    const stackTokens = { childrenGap: 10 };\r\n    r = <Fabric>\r\n      <div id=\"spfxcitExtComponentTest\"></div>\r\n      {this.object &&\r\n        <Stack tokens={stackTokens}>\r\n          <CommandBar\r\n            items={this.commands}\r\n          ></CommandBar>\r\n          <TextField id=\"spfxExtCompCreated\" label={this.props.semtalk.getResStrListener(\"STRDLGAUDIT2\")} readOnly value={this.state.comp_created} />\r\n          <TextField id=\"spfxExtCompFile\" label={\"Pfad:\"} readOnly value={this.state.comp_filename} />\r\n          <TextField id=\"spfxExtCompRFile\" label={\"Dateiname:\"} readOnly value={this.state.comp_rfilename} />\r\n          <DetailsList\r\n            items={this.state.items}\r\n            compact={true}\r\n            columns={this._columns}\r\n            selectionMode={SelectionMode.single}\r\n            layoutMode={DetailsListLayoutMode.justified}\r\n            selection={this._selection}\r\n            checkboxVisibility={CheckboxVisibility.hidden}\r\n            isHeaderVisible={false}\r\n          />\r\n        </Stack>\r\n      }\r\n      <div id=\"extoutlineContainer\"></div>\r\n    </Fabric>;\r\n    return r;\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkPages\":\"pages_semTalkPages__qxrnp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkForm\":\"SemTalkForm_semTalkForm__wKlkw\",\"container\":\"SemTalkForm_container__3vZAR\",\"imagetab\":\"SemTalkForm_imagetab__3g6dW\",\"row\":\"SemTalkForm_row__20UOe\",\"column\":\"SemTalkForm_column__3Mo5Y\",\"ms-Grid\":\"SemTalkForm_ms-Grid__3-5Qe\",\"title\":\"SemTalkForm_title__2iaY_\",\"subTitle\":\"SemTalkForm_subTitle__1bTHU\",\"description\":\"SemTalkForm_description__AFtR6\",\"button\":\"SemTalkForm_button__16M7X\",\"label\":\"SemTalkForm_label__1hm4N\"};","/* eslint-disable react/no-direct-mutation-state */\nimport * as React from 'react';\n// import styles from './SemTalkForm.module.scss';\n\nimport { component } from '../stformcomponents/Registry';\n\nimport {\n  Text,\n  Checkbox,\n  Dropdown,\n  Stack,\n  // IDropdownOption,\n  TextField,\n  Label,\n  ChoiceGroup,\n} from 'office-ui-fabric-react';\n\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\nimport { cit_AttributeName, cit_ElementName } from '../../application/semtalklistener/subtask/citforms/citinterface';\nimport { ISemTalkInstance, ISemTalkSystemClass, ISemTalkObject } from '../../application/tbase/Interface';\nimport { gotoObject, gotoNode } from '../../application/semtalklistener/stglobal';\nimport { ObjectBase } from '../../application/tbase/ObjectBase';\nimport { OB2XML } from '../../application/tbase/OB2XML';\n\n\nexport interface ISemTalkFieldSetProps {\n  semtalk: IVisioRDFS;\n  fieldset: ISemTalkInstance;\n  scope: string;\n  parent: any;\n}\nexport interface ISemTalkFieldSetState {\n  fieldset: React.ReactElement | null;\n}\n\nexport class SemTalkFieldSet extends React.Component<ISemTalkFieldSetProps, ISemTalkFieldSetState> {\n  constructor(props: ISemTalkFieldSetProps) {\n    super(props);\n    console.debug(\"showFieldSet\");\n    this.state = {\n      fieldset: null\n    };\n  }\n  public async componentDidMount() {\n    this.setState({\n      fieldset: await this.init()\n    });\n  }\n  public componentWillUnmount() {\n  }\n  private infobox: ISemTalkSystemClass;\n  private booleanfield: ISemTalkSystemClass;\n  private choicefield: ISemTalkSystemClass;\n  private datefield: ISemTalkSystemClass;\n  private textfield: ISemTalkSystemClass;\n  private textarea: ISemTalkSystemClass;\n  private numberfield: ISemTalkSystemClass;\n  private filefield: ISemTalkSystemClass;\n  private fieldset: ISemTalkSystemClass;\n  private externalcomponent: ISemTalkSystemClass;\n  private computedfield: ISemTalkSystemClass;\n\n  private components: any = {};\n\n  private init = async (): Promise<React.ReactElement> => {\n    let ob = this.props.semtalk.base;\n    this.fieldset = ob.FindSystemClass(cit_ElementName.FieldSet) as ISemTalkSystemClass;\n    this.infobox = ob.FindSystemClass(cit_ElementName.InfoBox) as ISemTalkSystemClass;\n    this.booleanfield = ob.FindSystemClass(cit_ElementName.BooleanField) as ISemTalkSystemClass;\n    this.choicefield = ob.FindSystemClass(cit_ElementName.ChoiceField) as ISemTalkSystemClass;\n    this.datefield = ob.FindSystemClass(cit_ElementName.DateField) as ISemTalkSystemClass;\n    this.textfield = ob.FindSystemClass(cit_ElementName.TextField) as ISemTalkSystemClass;\n    this.textarea = ob.FindSystemClass(cit_ElementName.TextArea) as ISemTalkSystemClass;\n    this.numberfield = ob.FindSystemClass(cit_ElementName.NumberField) as ISemTalkSystemClass;\n    this.filefield = ob.FindSystemClass(cit_ElementName.FileField) as ISemTalkSystemClass;\n    this.externalcomponent = ob.FindSystemClass(cit_ElementName.ExternalComponent) as ISemTalkSystemClass;\n    this.computedfield = ob.FindSystemClass(cit_ElementName.ComputedField) as ISemTalkSystemClass;\n\n    if (this.externalcomponent) {\n      for (let ext of this.externalcomponent.SubClasses()) {\n        if (ext.Instances().length > 0) {\n          let cmp: any = await component(ext.ID2Name);\n          if (cmp) {\n            this.components[ext.ID2Name] = cmp;\n          }\n        }\n      }\n    }\n\n    return this.buildFieldSet(this.props.fieldset);\n  }\n  private _onFocusChanged = (obj: ISemTalkObject) => {\n    if (obj) {\n      for (let n of obj.Nodes()) {\n        gotoNode(n.ID, n.Model.ID, n.Diagram.ID, n.ShapeID);\n        return;\n      }\n      gotoObject(obj.ID);\n    }\n  }\n  private tryeval = (exp: string): string => {\n    if (exp.startsWith(\"{\") && exp.endsWith(\"}\")) {\n      exp = exp.substring(1, exp.length - 1);\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      let m = require('./scripts');\n      // console.debug(\":-( \" + module);\n      try {\n        // eslint-disable-next-line no-eval\n        exp = eval(\"m.\" + exp);\n      } catch {\n      }\n    }\n    return exp;\n  }\n  private buildFieldSet = (fs: ISemTalkInstance): React.ReactElement => {\n    let scope = this.props.scope;\n    let parent: any = this.props.parent;\n    let fields: React.ReactElement[] = [];\n    this.buildFieldSetRec(fs, fields, parent, scope);\n    let reactfs = <Stack>{fields}</Stack>;\n    return reactfs;\n\n  }\n  private buildFieldSetRec = (fs: ISemTalkInstance, fields: React.ReactElement[], parent: any, scope: string): void => {\n    let rels = fs.Links(cit_ElementName.Relation);\n    rels = rels.sort((x, y) => Number(x.ToObject.GetValue(cit_AttributeName.UserNumber)) - Number(y.ToObject.GetValue(cit_AttributeName.UserNumber)));\n    let title = fs.GetValue(cit_AttributeName.Title);\n    if (title && String(title).length > 0) {\n      let field = <Text key={\"Title\" + fs.ID} variant='large'>{title}</Text>;\n      fields.push(field);\n    }\n    let intro = fs.GetValue(cit_AttributeName.Intro);\n    if (intro && String(intro).length > 0) {\n      fields.push(<Text key={\"Intro\" + fs.ID}><div dangerouslySetInnerHTML={{ __html: String(intro) }}></div></Text>);\n    }\n    for (let lnk of rels) {\n      let oth = lnk.ToObject as ISemTalkInstance;\n      // let fieldname = oth.ID2Name.replace(\".\", \"_\");\n      if (oth.IsInstance(this.fieldset)) {\n        continue;\n      }\n      let hide = (oth.GetValue(cit_AttributeName.StyleClass) === \"2_hide\");\n      if (hide) {\n        continue;\n      }\n      let fieldname = oth.ClassOf().ID2Name.replace(\".\", \"_\");\n      // let unscoped_fieldname = fieldname;\n      let fn = oth.GetValue(cit_AttributeName.FieldName);\n      if (fn) {\n        fieldname = scope + \"_\" + fn;\n      } else {\n        // unscoped_fieldname = fn;\n        fieldname = scope + \"_\" + fieldname;\n      }\n      let lnktitle = lnk.GetValue(cit_AttributeName.Title);\n      let label: string = lnktitle;\n      if (!label) label = oth.GetValue(cit_AttributeName.Label);\n      if (!label) label = oth.ClassOf().ID2Name;\n\n      label = this.tryeval(label);\n\n      parent.labels[fieldname] = label;\n\n      let defaultvalue = parent.state[fieldname];\n      let defvalueexpr: string | null = oth.GetValue(cit_AttributeName.DefaultValueExpression);\n      if (defvalueexpr) {\n        if (defvalueexpr.indexOf(\"myForm.\") === 0) {\n          defvalueexpr = defvalueexpr.replace(\"myForm.\", \"\");\n          defvalueexpr = this.tryeval(defvalueexpr);\n          if (parent.state[defvalueexpr]) {\n            defaultvalue = parent.state[defvalueexpr];\n            parent.state[fieldname] = defaultvalue;  \n          }\n        }\n      }\n      let readonly: boolean = false;\n      if (oth.GetValue(cit_AttributeName.ReadOnly) === \"1\") {\n        readonly = true;\n      }\n      let placeholder = \"\";\n      let pl = oth.GetValue(cit_AttributeName.Placeholder);\n      if (pl) {\n        placeholder = pl;\n      }\n      let ointro = oth.GetValue(cit_AttributeName.Intro);\n      if (ointro && String(ointro).length > 0) {\n        fields.push(<Text key={\"Intro\" + oth.ID}><div dangerouslySetInnerHTML={{ __html: String(ointro) }}></div></Text>);\n      }\n\n      if (oth.IsInstance(this.booleanfield)) {\n        fields.push(<Checkbox key={oth.ObjectName} defaultChecked={parent.state[fieldname]}\n          label={label}\n          onFocus={(_ev: any) => {\n            this._onFocusChanged(oth);\n          }}\n          onChange={(_ev: any, isChecked: boolean | undefined) => {\n            this._onFocusChanged(oth);\n            if (isChecked !== undefined && isChecked !== parent.state[fieldname]) {\n              parent.setState({ [fieldname]: isChecked });\n            }\n          }\n          }\n        >\n        </Checkbox>);\n      }\n      if (oth.IsInstance(this.externalcomponent)) {\n        fields.push(<Label key={oth.ID + \"Label\"}>{label}</Label>);\n        const x64 = oth.GetValue(cit_AttributeName.ExternalComponent64);\n        const buff2 = Buffer.from(x64, 'base64');\n        const s2 = buff2.toString('utf8');\n        const tb2 = new ObjectBase();\n        const o2x = new OB2XML();\n        o2x.LoadXML(tb2, s2);\n        const fs0 = tb2.FindSystemClass(\"FieldSet\");\n        const fs1 = fs0?.AllInstances()[0];\n        // console.debug(fs1)\n        if (fs1) {\n          let extcomp = oth.ClassOf().ID2Name;\n          this.buildFieldSetRec(fs1, fields, parent, scope + \"_\" + extcomp);\n        }\n\n        //   let extcomp = oth.ClassOf().ID2Name;\n        //   if (extcomp && this.components[extcomp]) {\n        //     let module = this.components[extcomp];\n        //     if (module) {\n        //       let newrow = {};\n        //       parent.state[scope + \"_\" + extcomp] = newrow;\n        //       fields.push(module(parent, scope + \"_\" + extcomp, () => { this._onFocusChanged(oth); }));\n        //     } else {\n        //       console.debug(\"Missing ext Comp: \" + extcomp);\n        //     }\n        //   }\n      }\n\n      if (oth.IsInstance(this.computedfield)) {\n        parent.state[fieldname] = defaultvalue;\n      }\n      if (oth.IsInstance(this.textfield)) {\n        let multiline = false;\n        if (oth.IsInstance(this.textarea)) {\n          // rows = 5;\n          multiline = true;\n        }\n        let type = \"text\";\n        if (oth.GetValue(cit_AttributeName.HideInput) === \"1\") {\n          type = \"password\";\n        }\n        let rows: number = 1;\n        let rc = oth.GetValue(cit_AttributeName.RowCount);\n        if (rc) {\n          rows = Number(rc);\n        }\n        // let ml = oth.GetValue(cit_AttributeName.MaxLength);\n        // if (ml) {\n        //   rows = Number(ml);\n        // }\n        fields.push(<TextField key={oth.ObjectName}\n          defaultValue={defaultvalue}\n          multiline={multiline}\n          rows={rows}\n          label={label}\n          readOnly={readonly}\n          placeholder={placeholder}\n          type={type}\n          canRevealPassword\n          // revealPasswordAriaLabel=\"Show password\"\n          required={oth.GetValue(cit_AttributeName.Required) === \"1\"}\n          onFocus={(_ev: any) => { this._onFocusChanged(oth); }}\n          onChange={(_ev, a) => {\n            if (a !== undefined) {\n              parent.setState({ [fieldname]: a });\n            }\n          }}\n        ></TextField>);\n      }\n      if (oth.IsInstance(this.numberfield)) {\n        fields.push(<TextField type=\"number\" key={oth.ObjectName}\n          defaultValue={parent.state[fieldname]}\n          label={label}\n          readOnly={readonly}\n          placeholder={placeholder}\n          required={oth.GetValue(cit_AttributeName.Required) === \"1\"}\n          onFocus={(_ev: any) => { this._onFocusChanged(oth); }}\n          onChange={(_ev, a) => {\n            if (a !== undefined) {\n              parent.setState({ [fieldname]: a });\n            }\n          }}\n        ></TextField>);\n      }\n      if (oth.IsInstance(this.datefield)) {\n        fields.push(<TextField type=\"date\" key={oth.ObjectName}\n          defaultValue={parent.state[fieldname]}\n          label={label}\n          readOnly={readonly}\n          placeholder={placeholder}\n          required={oth.GetValue(cit_AttributeName.Required) === \"1\"}\n          onFocus={(_ev: any) => { this._onFocusChanged(oth); }}\n          onChange={(_ev, a) => {\n            if (a !== undefined) {\n              parent.setState({ [fieldname]: a });\n            }\n          }}\n        ></TextField>);\n      }\n      if (oth.IsInstance(this.filefield)) {\n        fields.push(<TextField type=\"file\" key={oth.ObjectName}\n          defaultValue={parent.state[fieldname]}\n          label={label}\n          readOnly={readonly}\n          placeholder={placeholder}\n          required={oth.GetValue(cit_AttributeName.Required) === \"1\"}\n          onFocus={(_ev: any) => { this._onFocusChanged(oth); }}\n          onChange={(_ev, a) => {\n            if (a !== undefined) {\n              parent.setState({ [fieldname]: a });\n            }\n          }}\n        ></TextField>);\n      }\n      if (oth.IsInstance(this.choicefield)) {\n        let options: { key: string, text: string }[] = [{ key: \"\", text: \"\" }];\n        let optionslist = oth.GetValue(cit_AttributeName.OptionsList);\n        let optionsfilelocation = oth.GetValue(cit_AttributeName.OptionsFileLocation);\n        let xpathqueryselect = oth.GetValue(cit_AttributeName.XPathQuerySelect);\n        if (xpathqueryselect) {\n          if (xpathqueryselect.indexOf(\"/\") > 0) {\n            let x = (xpathqueryselect as string);\n            let cname = x.substring(x.lastIndexOf(\"/\") + 1);\n            console.debug(cname);\n          }\n          options = [\n            { key: \"rats\", text: \"Ratsqymnasium Bielefeld\" },\n            { key: \"mcg\", text: \"Marie-Curie Gymnasium\" },\n            { key: \"gra\", text: \"Graues Kloster\" },\n          ];\n        }\n        if (optionslist && !optionsfilelocation) {\n          options = [];\n          for (let option of (optionslist as string).split(\"; \")) {\n            let key = option;\n            let text = option;\n            if (option.indexOf(\"|\") > -1) {\n              key = option.split(\"| \")[0];\n              text = option.split(\"| \")[1];\n            }\n            options.push({ key: key, text: text });\n          }\n          if (!parent.state[fieldname]) {\n            parent.state[fieldname] = options[0].key;\n            defaultvalue = options[0].key;\n          }\n        }\n\n        let label1: string = label;\n        if (label1) {\n          label1 = label1.replace(\"<h3>\", \"\").replace(\"</h3>\", \"\");\n        }\n        let ct = oth.GetValue(cit_AttributeName.ControlStyle);\n        if (ct && ct === \"RadioButton\") {\n          fields.push(<ChoiceGroup key={oth.ObjectName}\n            defaultSelectedKey={defaultvalue}\n            options={options}\n            label={label1}\n            readOnly={readonly}\n            placeholder={placeholder}\n            required={oth.GetValue(cit_AttributeName.Required) === \"1\"}\n            onFocus={(_ev: any) => { this._onFocusChanged(oth); }}\n            onChange={(_ev, a) => {\n              if (a !== undefined) {\n                parent.setState({ [fieldname]: a.key });\n              }\n            }}></ChoiceGroup >);\n        } else {\n          fields.push(<Dropdown key={oth.ObjectName}\n            defaultSelectedKey={defaultvalue}\n            options={options}\n            label={label1}\n            placeholder={placeholder}\n            required={oth.GetValue(cit_AttributeName.Required) === \"1\"}\n            onFocus={(_ev: any) => { this._onFocusChanged(oth); }}\n            onChange={(_ev, a) => {\n              if (a !== undefined) {\n                parent.setState({ [fieldname]: a.key });\n              }\n            }\n            }></Dropdown >);\n        }\n      }\n      if (oth.IsInstance(this.infobox)) {\n        let txt = oth.GetValue(cit_AttributeName.DisplayText);\n        fields.push(<Text key={oth.ObjectName}><div dangerouslySetInnerHTML={{ __html: txt }}></div></Text>);\n      }\n\n      let ooutro = oth.GetValue(cit_AttributeName.Outro);\n      if (ooutro && String(ooutro).length > 0) {\n        fields.push(<Text key={\"Outro\" + oth.ID}><div dangerouslySetInnerHTML={{ __html: String(ooutro) }}></div></Text>);\n      }\n\n    }\n\n    let outro = fs.GetValue(cit_AttributeName.Outro);\n    if (outro && String(outro).length > 0) {\n      fields.push(<Text key={\"Outro\" + fs.ID}><div dangerouslySetInnerHTML={{ __html: String(outro) }}></div></Text>);\n    }\n  }\n\n  public render(): React.ReactElement<ISemTalkFieldSetProps> {\n    let r: React.ReactElement<ISemTalkFieldSetProps> | null;\n    r = this.state.fieldset;\n    if (r) {\n      return r;\n    } else {\n      return <div></div>;\n    }\n  }\n}\n","/* eslint-disable react/no-direct-mutation-state */\nimport * as React from 'react';\n// import styles from './SemTalkForm.module.scss';\n\nimport { component } from '../stformcomponents/Registry';\n\nimport {\n  Text,\n  Checkbox,\n  ChoiceGroup,\n  Dropdown,\n  Stack,\n  TextField,\n  Label,\n} from 'office-ui-fabric-react';\n\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\nimport { cit_AttributeName, cit_ElementName } from '../../application/semtalklistener/subtask/citforms/citinterface';\nimport { ISemTalkInstance, ISemTalkObject, ISemTalkSystemClass } from '../../application/tbase/Interface';\nimport { gotoObject, gotoNode } from '../../application/semtalklistener/stglobal';\nimport { ObjectBase } from '../../application/tbase/ObjectBase';\nimport { OB2XML } from '../../application/tbase/OB2XML';\n\nexport interface ISemTalkItemFieldSetProps {\n  semtalk: IVisioRDFS;\n  fieldset: ISemTalkInstance;\n  scope: string;\n  parent: any;\n  item: any;\n}\nexport interface ISemTalkItemFieldSetState {\n  fieldset: React.ReactElement | null;\n  item: any;\n}\n\nexport class SemTalkItemFieldSet extends React.Component<ISemTalkItemFieldSetProps, ISemTalkItemFieldSetState> {\n  constructor(props: ISemTalkItemFieldSetProps) {\n    super(props);\n    console.debug(\"showFieldSet\");\n    this.state = {\n      item: this.props.item,\n      fieldset: null\n    };\n  }\n  public async componentDidMount() {\n    this.setState({\n      fieldset: await this.init()\n    });\n  }\n  public componentWillUnmount() {\n  }\n  private infobox: ISemTalkSystemClass;\n  private booleanfield: ISemTalkSystemClass;\n  private choicefield: ISemTalkSystemClass;\n  private datefield: ISemTalkSystemClass;\n  private textfield: ISemTalkSystemClass;\n  private textarea: ISemTalkSystemClass;\n  private numberfield: ISemTalkSystemClass;\n  private filefield: ISemTalkSystemClass;\n  private fieldset: ISemTalkSystemClass;\n  private externalcomponent: ISemTalkSystemClass;\n  private computedfield: ISemTalkSystemClass;\n\n  private components: any = {};\n\n  private init = async (): Promise<React.ReactElement> => {\n    let ob = this.props.semtalk.base;\n    this.fieldset = ob.FindSystemClass(cit_ElementName.FieldSet) as ISemTalkSystemClass;\n    this.infobox = ob.FindSystemClass(cit_ElementName.InfoBox) as ISemTalkSystemClass;\n    this.booleanfield = ob.FindSystemClass(cit_ElementName.BooleanField) as ISemTalkSystemClass;\n    this.choicefield = ob.FindSystemClass(cit_ElementName.ChoiceField) as ISemTalkSystemClass;\n    this.datefield = ob.FindSystemClass(cit_ElementName.DateField) as ISemTalkSystemClass;\n    this.textfield = ob.FindSystemClass(cit_ElementName.TextField) as ISemTalkSystemClass;\n    this.textarea = ob.FindSystemClass(cit_ElementName.TextArea) as ISemTalkSystemClass;\n    this.numberfield = ob.FindSystemClass(cit_ElementName.NumberField) as ISemTalkSystemClass;\n    this.filefield = ob.FindSystemClass(cit_ElementName.FileField) as ISemTalkSystemClass;\n    this.externalcomponent = ob.FindSystemClass(cit_ElementName.ExternalComponent) as ISemTalkSystemClass;\n    this.computedfield = ob.FindSystemClass(cit_ElementName.ComputedField) as ISemTalkSystemClass;\n\n    if (this.externalcomponent) {\n      for (let ext of this.externalcomponent.SubClasses()) {\n        if (ext.Instances().length > 0) {\n          let cmp: any = await component(ext.ID2Name);\n          if (cmp) {\n            this.components[ext.ID2Name] = cmp;\n          }\n        }\n      }\n    }\n\n\n    return this.buildFieldSet(this.props.fieldset, this.props.item);\n  }\n\n  private _onFocusChanged = (obj: ISemTalkObject) => {\n    if (obj) {\n      for (let n of obj.Nodes()) {\n        gotoNode(n.ID, n.Model.ID, n.Diagram.ID, n.ShapeID);\n        return;\n      }\n      gotoObject(obj.ID);\n    }\n  }\n\n  private buildFieldSet = (fs: ISemTalkInstance, item: any): React.ReactElement => {\n    let scope = this.props.scope;\n    let parent = this.props.parent;\n    let fields: React.ReactElement[] = [];\n    this.buildFieldSetRec(fs, item, fields, parent, scope);\n    let reactfs = <Stack>{fields}</Stack>;\n    return reactfs;\n\n  }\n  private buildFieldSetRec = (fs: ISemTalkInstance, item: any, fields: React.ReactElement[], parent: any, scope: string): void => {\n    let rels = fs.Links(cit_ElementName.Relation);\n    rels = rels.sort((x, y) => Number(x.ToObject.GetValue(cit_AttributeName.UserNumber)) - Number(y.ToObject.GetValue(cit_AttributeName.UserNumber)));\n    let title = fs.GetValue(cit_AttributeName.Title);\n    if (title && String(title).length > 0) {\n      let field = <Text key={\"Title\" + fs.ID} variant='large'>{title}</Text>;\n      fields.push(field);\n    }\n    let intro = fs.GetValue(cit_AttributeName.Intro);\n    if (intro && String(intro).length > 0) {\n      fields.push(<Text key={\"Intro\" + fs.ID}><div dangerouslySetInnerHTML={{ __html: String(intro) }}></div></Text>);\n    }\n    for (let lnk of rels) {\n      let oth = lnk.ToObject as ISemTalkInstance;\n      if (oth.IsInstance(this.fieldset)) {\n        continue;\n      }\n      let hide = (oth.GetValue(cit_AttributeName.StyleClass) === \"2_hide\");\n      if (hide) {\n        continue;\n      }\n      // let fieldname = oth.ID2Name.replace(\".\", \"_\");\n      let fieldname = oth.ClassOf().ID2Name.replace(\".\", \"_\");\n      let unscoped_fieldname = fieldname;\n      let fn = oth.GetValue(cit_AttributeName.FieldName);\n      if (fn) {\n        fieldname = scope + \"_\" + fn;\n      } else {\n        unscoped_fieldname = fn;\n        fieldname = scope + \"_\" + fieldname;\n      }\n      let lnktitle = lnk.GetValue(cit_AttributeName.Title);\n      let label = lnktitle;\n      if (!label) label = oth.GetValue(cit_AttributeName.Label);\n      if (!label) label = oth.ClassOf().ID2Name;\n\n      parent.labels[fieldname] = label;\n\n      let defaultvalue = parent.state[fieldname];\n      let defvalueexpr: string | null = oth.GetValue(cit_AttributeName.DefaultValueExpression);\n      if (defvalueexpr) {\n        if (defvalueexpr.indexOf(\"myForm.\") === 0) {\n          defvalueexpr = defvalueexpr.replace(\"myForm.\", \"\");\n          if (parent.state[defvalueexpr]) {\n            defaultvalue = parent.state[defvalueexpr];\n            parent.state[fieldname] = defaultvalue;\n          }\n        }\n      }\n      let readonly: boolean = false;\n      if (oth.GetValue(cit_AttributeName.ReadOnly) === \"1\") {\n        readonly = true;\n      }\n      let placeholder = \"\";\n      let pl = oth.GetValue(cit_AttributeName.Placeholder);\n      if (pl) {\n        placeholder = pl;\n      }\n      let ointro = oth.GetValue(cit_AttributeName.Intro);\n      if (ointro && String(ointro).length > 0) {\n        fields.push(<Text key={\"Intro\" + oth.ID}><div dangerouslySetInnerHTML={{ __html: String(ointro) }}></div></Text>);\n      }\n      if (oth.IsInstance(this.infobox)) {\n        let txt = oth.GetValue(cit_AttributeName.DisplayText);\n        fields.push(<Text key={oth.ObjectName}><div dangerouslySetInnerHTML={{ __html: txt }}></div></Text>);\n      }\n      if (oth.IsInstance(this.booleanfield)) {\n        fields.push(<Checkbox key={oth.ObjectName} defaultChecked={defaultvalue}\n          label={label}\n          onFocus={(_ev: any) => { this._onFocusChanged(oth); }}\n          onChange={(_ev: any, isChecked: boolean | undefined) => {\n            this._onFocusChanged(oth);\n            if (isChecked !== undefined) {\n              item[unscoped_fieldname] = isChecked;\n              parent.setState({ [scope + \"_\" + fieldname]: isChecked });\n            }\n          }\n          }\n        >\n        </Checkbox>);\n      }\n      if (oth.IsInstance(this.externalcomponent)) {\n        fields.push(<Label key={oth.ID + \"Label\"}>{label}</Label>);\n        const x64 = oth.GetValue(cit_AttributeName.ExternalComponent64);\n        const buff2 = Buffer.from(x64, 'base64');\n        const s2 = buff2.toString('utf8');\n        const tb2 = new ObjectBase();\n        const o2x = new OB2XML();\n        o2x.LoadXML(tb2, s2);\n        const fs0 = tb2.FindSystemClass(\"FieldSet\");\n        const fs1 = fs0?.AllInstances()[0];\n        // console.debug(fs1)\n        if (fs1) {\n          let extcomp = oth.ClassOf().ID2Name;\n          this.buildFieldSetRec(fs1, item, fields, parent, scope + \"_\" + extcomp);\n        }\n        // fields.push(<Label key={oth.ID + \"Label\"}>{label}</Label>);\n        // let extcomp = oth.ClassOf().ID2Name;\n        // if (extcomp && this.components[extcomp]) {\n        //   let module = this.components[extcomp];\n        //   if (module) {\n        //     fields.push(module(parent, scope, () => { this._onFocusChanged(oth); }));\n        //   } else {\n        //     console.debug(\"Missing ext Comp: \" + extcomp);\n        //   }\n        // }\n      }\n      if (oth.IsInstance(this.computedfield)) {\n        parent.state[fieldname] = defaultvalue;\n      }\n      if (oth.IsInstance(this.textfield)) {\n        // let rows: number = 1;\n        let multiline = false;\n        if (oth.IsInstance(this.textarea)) {\n          // rows = 5;\n          multiline = true;\n        }\n        let type = \"text\";\n        if (oth.GetValue(cit_AttributeName.HideInput) === \"1\") {\n          type = \"password\";\n        }\n        let rows: number = 1;\n        let rc = oth.GetValue(cit_AttributeName.RowCount);\n        if (rc) {\n          rows = Number(rc);\n        }\n        // let ml = oth.GetValue(cit_AttributeName.MaxLength);\n        // if (ml) {\n        //   rows = Number(ml);\n        // }\n\n        fields.push(<TextField key={oth.ObjectName}\n          defaultValue={defaultvalue}\n          multiline={multiline}\n          rows={rows}\n          label={label}\n          readOnly={readonly}\n          placeholder={placeholder}\n          type={type}\n          canRevealPassword\n          // revealPasswordAriaLabel=\"Show password\"\n          required={oth.GetValue(cit_AttributeName.Required) === \"1\"}\n          onFocus={(_ev: any) => { this._onFocusChanged(oth); }}\n          onChange={(_ev, a) => {\n            if (a !== undefined) {\n              item[unscoped_fieldname] = a;\n              parent.setState({ [fieldname]: a });\n            }\n          }}\n        ></TextField >);\n      }\n      if (oth.IsInstance(this.numberfield)) {\n        fields.push(<TextField\n          type=\"number\" key={oth.ObjectName}\n          defaultValue={defaultvalue}\n          label={label}\n          readOnly={readonly}\n          placeholder={placeholder}\n          required={oth.GetValue(cit_AttributeName.Required) === \"1\"}\n          onFocus={(_ev: any) => { this._onFocusChanged(oth); }}\n          onChange={(_ev, a) => {\n            if (a !== undefined) {\n              item[unscoped_fieldname] = a;\n              parent.setState({ [fieldname]: a });\n            }\n          }}\n        ></TextField>);\n      }\n      if (oth.IsInstance(this.datefield)) {\n        fields.push(<TextField type=\"date\" key={oth.ObjectName}\n          defaultValue={defaultvalue}\n          label={label}\n          readOnly={readonly}\n          placeholder={placeholder}\n          required={oth.GetValue(cit_AttributeName.Required) === \"1\"}\n          onFocus={(_ev: any) => { this._onFocusChanged(oth); }}\n          onChange={(_ev, a) => {\n            if (a !== undefined) {\n              item[unscoped_fieldname] = a;\n              parent.setState({ [fieldname]: a });\n            }\n          }}\n        ></TextField>);\n      }\n      if (oth.IsInstance(this.filefield)) {\n        // if (!model[scope][fieldname]) model[scope][fieldname] = \"\";\n        fields.push(<TextField type=\"file\" key={oth.ObjectName}\n          defaultValue={defaultvalue}\n          label={label}\n          readOnly={readonly}\n          placeholder={placeholder}\n          required={oth.GetValue(cit_AttributeName.Required) === \"1\"}\n          onFocus={(_ev: any) => { this._onFocusChanged(oth); }}\n          onChange={(_ev, a) => {\n            if (a !== undefined) {\n              item[unscoped_fieldname] = a;\n              parent.setState({ [fieldname]: a });\n            }\n          }}\n        ></TextField>);\n      }\n      if (oth.IsInstance(this.choicefield)) {\n        let options: { key: string, text: string }[] = [{ key: \"\", text: \"\" }];\n        let optionslist = oth.GetValue(cit_AttributeName.OptionsList);\n        let optionsfilelocation = oth.GetValue(cit_AttributeName.OptionsFileLocation);\n        let xpathqueryselect = oth.GetValue(cit_AttributeName.XPathQuerySelect);\n        if (xpathqueryselect) {\n          if (xpathqueryselect.indexOf(\"/\") > 0) {\n            let x = (xpathqueryselect as string);\n            let cname = x.substring(x.lastIndexOf(\"/\") + 1);\n            console.debug(cname);\n          }\n          options = [\n            { key: \"rats\", text: \"Ratsqymnasium Bielefeld\" },\n            { key: \"mcg\", text: \"Marie-Curie Gymnasium\" },\n            { key: \"gra\", text: \"Graues Kloster\" },\n          ];\n        }\n        if (optionslist && !optionsfilelocation) {\n          options = [];\n          for (let option of (optionslist as string).split(\"; \")) {\n            let key = option;\n            let text = option;\n            if (option.indexOf(\"|\") > -1) {\n              key = option.split(\"| \")[0];\n              text = option.split(\"| \")[1];\n            }\n            options.push({ key: key, text: text });\n          }\n          if (!parent.state[fieldname]) {\n            parent.state[fieldname] = options[0].key;\n            defaultvalue = options[0].key;\n          }\n        }\n        let label1: string = label;\n        if (label1) {\n          label1 = label1.replace(\"<h3>\", \"\").replace(\"</h3>\", \"\");\n        }\n        let ct = oth.GetValue(cit_AttributeName.ControlStyle);\n        if (ct && ct === \"RadioButton\") {\n          fields.push(<ChoiceGroup key={oth.ObjectName}\n            defaultSelectedKey={defaultvalue}\n            options={options}\n            label={label1}\n            readOnly={readonly}\n            placeholder={placeholder}\n            required={oth.GetValue(cit_AttributeName.Required) === \"1\"}\n            onFocus={(_ev: any) => { this._onFocusChanged(oth); }}\n            onChange={(_ev, a) => {\n              if (a !== undefined) {\n                item[unscoped_fieldname] = a.text;\n                parent.setState({ [fieldname]: a.key });\n              }\n            }}></ChoiceGroup >);\n        } else {\n          fields.push(<Dropdown key={oth.ObjectName}\n            defaultSelectedKey={defaultvalue}\n            options={options} label={label1}\n            placeholder={placeholder}\n            required={oth.GetValue(cit_AttributeName.Required) === \"1\"}\n            onFocus={(_ev: any) => { this._onFocusChanged(oth); }}\n            onChange={(_ev, a) => {\n              if (a !== undefined) {\n                item[unscoped_fieldname] = a.text;\n                parent.setState({ [fieldname]: a.key });\n              }\n            }\n            }\n          >\n          </Dropdown>);\n        }\n      }\n      let ooutro = oth.GetValue(cit_AttributeName.Outro);\n      if (ooutro && String(ooutro).length > 0) {\n        fields.push(<Text key={\"Outro\" + oth.ID}><div dangerouslySetInnerHTML={{ __html: String(ooutro) }}></div></Text>);\n      }\n    }\n    let outro = fs.GetValue(cit_AttributeName.Outro);\n    if (outro && String(outro).length > 0) {\n      fields.push(<Text key={\"Outro\" + fs.ID}><div dangerouslySetInnerHTML={{ __html: String(outro) }}></div></Text>);\n    }\n  }\n\n  public render(): React.ReactElement<ISemTalkItemFieldSetProps> {\n    let r: React.ReactElement<ISemTalkItemFieldSetProps> | null;\n    r = this.state.fieldset;\n    if (r) {\n      return r;\n    } else {\n      return <div></div>;\n    }\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkCommandBar\":\"SemTalkCommandBar_semTalkCommandBar__2HvS8\",\"container\":\"SemTalkCommandBar_container__2FkzW\",\"row\":\"SemTalkCommandBar_row__S9qee\",\"column\":\"SemTalkCommandBar_column__Y3bcA\",\"ms-Grid\":\"SemTalkCommandBar_ms-Grid__8d3PO\",\"title\":\"SemTalkCommandBar_title__2Bw60\",\"subTitle\":\"SemTalkCommandBar_subTitle__1yeAt\",\"description\":\"SemTalkCommandBar_description__24Egm\",\"button\":\"SemTalkCommandBar_button__TMv1-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkToolBar\":\"SemTalkToolBar_semTalkToolBar__3xikF\",\"container\":\"SemTalkToolBar_container__ao4xz\",\"row\":\"SemTalkToolBar_row__1tULT\",\"column\":\"SemTalkToolBar_column__1YSMh\",\"ms-Grid\":\"SemTalkToolBar_ms-Grid__3KAoo\",\"title\":\"SemTalkToolBar_title__3AuEs\",\"subTitle\":\"SemTalkToolBar_subTitle__2Sso9\",\"description\":\"SemTalkToolBar_description__1O-2O\",\"button\":\"SemTalkToolBar_button__2Vhdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semTalkBreadCrums\":\"SemTalkBreadCrumbs_semTalkBreadCrums__2deiT\"};","import { ISemTalkUndo } from './ISemTalkUndo';\nimport { inflate, deflate, inflateSync } from 'zlib';\nimport { SemTalkCookie} from './ISemTalkOnline';\n\nexport class SemTalkUndo implements ISemTalkUndo {\n  private undo = {\n    'autosaveSemTalkRedo': '',\n    'autosaveSemTalkUndo0': '',\n    'autosaveSemTalkUndo1': '',\n    'autosaveSemTalkUndo2': '',\n    'autosaveSemTalkUndo3': '',\n    'autosaveSemTalkUndo4': '',\n    'autosaveSemTalkUndo5': '',\n    'autosaveSemTalkUndo6': '',\n    'autosaveSemTalkUndo7': '',\n    'autosaveSemTalkUndo8': '',\n    'autosaveSemTalkUndo9': ''\n  };\n\n  public IsUndo = (): boolean => {\n    let s = this.undo['autosaveSemTalkUndo0'];\n    return (s !== undefined && s.length > 0);\n  }\n  public GetUndo = (): string => {\n    const s1 = this.undo['autosaveSemTalkUndo0'];\n    const b = Buffer.from(s1, 'base64');\n    const s = inflateSync(b).toString(\"utf8\");\n    return s;\n  // return this.undo['autosaveSemTalkUndo0'];\n  }\n  public Undo = () => {\n    this.undo['autosaveSemTalkRedo'] = (window as any).localStorage.getItem(SemTalkCookie.autosaveSemTalk);\n    let s1 = this.undo['autosaveSemTalkUndo0'];\n    let b = Buffer.from(s1, 'base64');\n    inflate(b, (_err, bi) => {\n      const s1i=bi.toString(\"utf8\");\n      (window as any).localStorage.setItem(SemTalkCookie.autosaveSemTalk, s1i);\n      this.undo['autosaveSemTalkUndo0'] = this.undo['autosaveSemTalkUndo1'];\n      this.undo['autosaveSemTalkUndo1'] = this.undo['autosaveSemTalkUndo2'];\n      this.undo['autosaveSemTalkUndo2'] = this.undo['autosaveSemTalkUndo3'];\n      this.undo['autosaveSemTalkUndo3'] = this.undo['autosaveSemTalkUndo4'];\n      this.undo['autosaveSemTalkUndo4'] = this.undo['autosaveSemTalkUndo5'];\n      this.undo['autosaveSemTalkUndo5'] = this.undo['autosaveSemTalkUndo6'];\n      this.undo['autosaveSemTalkUndo6'] = this.undo['autosaveSemTalkUndo7'];\n      this.undo['autosaveSemTalkUndo7'] = this.undo['autosaveSemTalkUndo8'];\n      this.undo['autosaveSemTalkUndo8'] = this.undo['autosaveSemTalkUndo9'];\n      this.undo['autosaveSemTalkUndo9'] = '';\n    });\n  }\n  public SaveUndo = (s: string) => {\n    // console.debug(s.length);\n    var b = Buffer.from(s, 'utf8');\n    deflate(b, (_err, buf) => {\n      this.undo['autosaveSemTalkUndo9'] = this.undo['autosaveSemTalkUndo8'];\n      this.undo['autosaveSemTalkUndo8'] = this.undo['autosaveSemTalkUndo7'];\n      this.undo['autosaveSemTalkUndo7'] = this.undo['autosaveSemTalkUndo6'];\n      this.undo['autosaveSemTalkUndo6'] = this.undo['autosaveSemTalkUndo5'];\n      this.undo['autosaveSemTalkUndo5'] = this.undo['autosaveSemTalkUndo4'];\n      this.undo['autosaveSemTalkUndo4'] = this.undo['autosaveSemTalkUndo3'];\n      this.undo['autosaveSemTalkUndo3'] = this.undo['autosaveSemTalkUndo2'];\n      this.undo['autosaveSemTalkUndo2'] = this.undo['autosaveSemTalkUndo1'];\n      this.undo['autosaveSemTalkUndo1'] = this.undo['autosaveSemTalkUndo0'];\n      const si = buf.toString('base64');\n      // console.debug(si.length);\n      this.undo['autosaveSemTalkUndo0'] = si;\n    });\n  }\n  public GetRedo = (): string => {\n    return this.undo['autosaveSemTalkRedo'];\n  }\n  public Redo = (): void => {\n    const s = this.undo['autosaveSemTalkRedo'];\n    this.undo['autosaveSemTalkRedo'] = '';\n    this.SaveUndo(s);\n  }\n}\n\n","import { SemTalkLanguage, SemTalkLanguageCode } from './Interface';\nexport function Language2Code(c: SemTalkLanguage): SemTalkLanguageCode | undefined {\n  switch (c) {\n    case SemTalkLanguage.English: {\n      return SemTalkLanguageCode.English;\n    }\n    case SemTalkLanguage.German: {\n      return SemTalkLanguageCode.German;\n    }\n    case SemTalkLanguage.Japanese: {\n      return SemTalkLanguageCode.Japanese;\n    }\n    case SemTalkLanguage.Spanish: {\n      return SemTalkLanguageCode.Spanish;\n    }\n    case SemTalkLanguage.Russian: {\n      return SemTalkLanguageCode.Russian;\n    }\n    case SemTalkLanguage.Simplified: {\n      return SemTalkLanguageCode.Simplified;\n    }\n    case SemTalkLanguage.Traditional: {\n      return SemTalkLanguageCode.Traditional;\n    }\n  }\n  return SemTalkLanguageCode.English;\n}\nexport function Code2Language(c: SemTalkLanguageCode): SemTalkLanguage {\n  switch (c) {\n    case SemTalkLanguageCode.English: {\n      return SemTalkLanguage.English;\n    }\n    case SemTalkLanguageCode.German: {\n      return SemTalkLanguage.German;\n    }\n    case SemTalkLanguageCode.Japanese: {\n      return SemTalkLanguage.Japanese;\n    }\n    case SemTalkLanguageCode.Spanish: {\n      return SemTalkLanguage.Spanish;\n    }\n    case SemTalkLanguageCode.Russian: {\n      return SemTalkLanguage.Russian;\n    }\n    case SemTalkLanguageCode.French: {\n      return SemTalkLanguage.French;\n    }\n    case SemTalkLanguageCode.Simplified: {\n      return SemTalkLanguage.Simplified;\n    }\n    case SemTalkLanguageCode.Traditional: {\n      return SemTalkLanguage.Traditional;\n    }\n  }\n}\nexport function GetLanguage(c: string): SemTalkLanguage | undefined {\n  switch (c) {\n    case \"English\": {\n      return SemTalkLanguage.English;\n    }\n    case \"German\": {\n      return SemTalkLanguage.German;\n    }\n    case \"Japanese\": {\n      return SemTalkLanguage.Japanese;\n    }\n    case \"Spanish\": {\n      return SemTalkLanguage.Spanish;\n    }\n    case \"Russian\": {\n      return SemTalkLanguage.Russian;\n    }\n    case \"French\": {\n      return SemTalkLanguage.French;\n    }\n    case \"Chinese (Simplified)\": {\n      return SemTalkLanguage.Simplified;\n    }\n    case \"Chinese (Traditional)\": {\n      return SemTalkLanguage.Traditional;\n    }\n  }\n  return undefined;\n}\nexport function GetLanguageCode(c: string): SemTalkLanguageCode | undefined {\n  switch (c) {\n    case \"en\": {\n      return SemTalkLanguageCode.English;\n    }\n    case \"de\": {\n      return SemTalkLanguageCode.German;\n    }\n    case \"ja\": {\n      return SemTalkLanguageCode.Japanese;\n    }\n    case \"es\": {\n      return SemTalkLanguageCode.Spanish;\n    }\n    case \"ru\": {\n      return SemTalkLanguageCode.Russian;\n    }\n    case \"fr\": {\n      return SemTalkLanguageCode.French;\n    }\n    case \"cn-simplified\": {\n      return SemTalkLanguageCode.Simplified;\n    }\n    case \"cn-traditional\": {\n      return SemTalkLanguageCode.Traditional;\n    }\n  }\n  return undefined;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NeutralPrimary\":\"#323130\",\"richTextPropertyPane\":\"RichTextPropertyPane_richTextPropertyPane__1Dwsz\",\"formattingPaneTitle\":\"RichTextPropertyPane_formattingPaneTitle__2qf_U\",\"propertyPaneGroupContent\":\"RichTextPropertyPane_propertyPaneGroupContent__22Zgw\",\"controlsInOneRow\":\"RichTextPropertyPane_controlsInOneRow___GRJ9\",\"propertyPaneClose\":\"RichTextPropertyPane_propertyPaneClose__oVtQv\",\"propertyPaneButton\":\"RichTextPropertyPane_propertyPaneButton__3_V1N\",\"propertyPaneGroupField\":\"RichTextPropertyPane_propertyPaneGroupField__29iIZ\",\"propertyPaneGroupHeaderNoAccordion\":\"RichTextPropertyPane_propertyPaneGroupHeaderNoAccordion__Wbnom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"richtext\":\"RichText_richtext__3OnvH\",\"insertLinkDialog\":\"RichText_insertLinkDialog__3eOFI\",\"actions\":\"RichText_actions__3d-o1\",\"actionsRight\":\"RichText_actionsRight__26fBj\",\"action\":\"RichText_action__2jarC\",\"unlinkButton\":\"RichText_unlinkButton__3aBJP\",\"headerDropDown\":\"RichText_headerDropDown__2XH3r\",\"toolbarDropDown\":\"RichText_toolbarDropDown__2meqj\",\"toolbarDropDownTitleIcon\":\"RichText_toolbarDropDownTitleIcon__2BByo\",\"toolbarDropDownIcon\":\"RichText_toolbarDropDownIcon__1dxhb\",\"toolbarDropDownOption\":\"RichText_toolbarDropDownOption__1iEoC\",\"toolbarButtonH2\":\"RichText_toolbarButtonH2__3lWVt\",\"toolbarButtonH3\":\"RichText_toolbarButtonH3__2gAHu\",\"toolbarButtonH4\":\"RichText_toolbarButtonH4__2Bgti\",\"toolbarButtonBlockQuote\":\"RichText_toolbarButtonBlockQuote__z6reA\",\"toolbarSubmenuCaret\":\"RichText_toolbarSubmenuCaret__qOJH8\",\"toolbarSubmenuDisplayButton\":\"RichText_toolbarSubmenuDisplayButton__3bZ0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ThemeColorDarker\":\"#004578\",\"ThemeColorDark\":\"#005a9e\",\"ThemeColorDarkAlt\":\"#106ebe\",\"ThemeColorPrimary\":\"#0078d4\",\"ThemeColorSecondary\":\"#2b88d8\",\"ThemeColorTertiary\":\"#71afe5\",\"ThemeColorNeutralSecondary\":\"#605e5c\",\"ThemeColorNeutralPrimaryAlt\":\"#3b3a39\",\"ThemeColorNeutralPrimary\":\"#323130\",\"ThemeColorNeutralDark\":\"#201f1e\",\"colorPickerButton\":\"RteColorPicker_colorPickerButton__2evyp\",\"previewSvg\":\"RteColorPicker_previewSvg__2pVAn\",\"border\":\"RteColorPicker_border__3qH0p\",\"previewRectangle\":\"RteColorPicker_previewRectangle__zmB4j\",\"buttonLabel\":\"RteColorPicker_buttonLabel__TJSaH\",\"previewIcon\":\"RteColorPicker_previewIcon__3FvlS\",\"pickerCallout\":\"RteColorPicker_pickerCallout__1nKgs\",\"defaultSvg\":\"RteColorPicker_defaultSvg__2SGOb\",\"fillThemeColor\":\"RteColorPicker_fillThemeColor__3X-tq\",\"fillDefaultColor\":\"RteColorPicker_fillDefaultColor__2sM_V\",\"pickerLabel\":\"RteColorPicker_pickerLabel__3t7Il\",\"focusedContainer\":\"RteColorPicker_focusedContainer__2B5hq\",\"tableRoot\":\"RteColorPicker_tableRoot__1q112\",\"tableCell\":\"RteColorPicker_tableCell__7Aupc\",\"colorCell\":\"RteColorPicker_colorCell__HZl2r\",\"svg\":\"RteColorPicker_svg__3JntD\",\"selected\":\"RteColorPicker_selected__3qy3v\"};","export function foo(x) {\r\n    // alert(x);\r\n    return x;\r\n}\r\nexport function Label() {\r\n    return \"ScriptLabel\";\r\n}","/* eslint-disable no-restricted-globals */\r\n\r\n\r\nif ((window as any).goto_context === undefined) {\r\n  (window as any).goto_context = {\r\n    url: \"\",\r\n    model: -1,\r\n    page: -1,\r\n    obj: -1,\r\n    shp: \"\",\r\n    callbacks: {},\r\n    stay: false,\r\n    exdays: 10,\r\n    site: \"\"\r\n  };\r\n} else {\r\n  console.log((window as any).goto_context);\r\n}\r\nexport function addCallBack(crtl: any): string {\r\n  let cb: any = (window as any).goto_context.callbacks;\r\n  cb[crtl.callback] = crtl;\r\n  return crtl.callback;\r\n}\r\nexport function removeCallBack(crtl: any): void {\r\n  let cb: any = (window as any).goto_context.callbacks;\r\n  delete cb[crtl.callback];\r\n}\r\nexport function post2Callbacks(evt: any): void {\r\n  let cb: any = (window as any).goto_context.callbacks;\r\n  for (const guid in cb) {\r\n    let ctrl = cb[guid];\r\n    // console.debug(\"Post2Callback: \", ctrl);\r\n    ctrl.handleEvent(evt);\r\n  }\r\n\r\n}\r\n\r\nexport function getContext(): any {\r\n  return (window as any).goto_context;\r\n}\r\nexport function clearNode(): void {\r\n  (window as any).goto_context.url = \"\";\r\n  (window as any).goto_context.page = -1;\r\n}\r\nexport function clearObject(): void {\r\n  (window as any).goto_context.url = \"\";\r\n  (window as any).goto_context.model = -1;\r\n  (window as any).goto_context.page = -1;\r\n  (window as any).goto_context.obj = -1;\r\n}\r\nexport function getObject(): number {\r\n  // console.debug(\"getObject: \", (window as any).goto_context.obj);\r\n  return (window as any).goto_context.obj;\r\n}\r\nexport function setObject(_obj: number) {\r\n  if (_obj !== undefined) {\r\n    setCookie(\"contextobj\", _obj.toString());\r\n    (window as any).goto_context.obj = _obj;\r\n  }\r\n}\r\nexport function getModel(): number {\r\n  return (window as any).goto_context.model;\r\n}\r\nexport function setModel(_obj: number): void {\r\n  if (_obj !== undefined) {\r\n    setCookie(\"contextmodel\", _obj.toString());\r\n    // if ((window as any).goto_context.stay) {\r\n    (window as any).goto_context.model = _obj;\r\n    // } else {\r\n    //   (window as any).goto_context.model = -1;\r\n    // }\r\n  }\r\n}\r\nexport function setStay(_stay: boolean): void {\r\n  (window as any).goto_context.stay = _stay;\r\n}\r\nexport function setSite(site: string): void {\r\n  if (site !== undefined) {\r\n    setCookie(\"contextsite\", site.toString());\r\n    (window as any).goto_context.site = site;\r\n  }\r\n}\r\nexport function getDiagram(): number {\r\n  return (window as any).goto_context.page;\r\n}\r\nexport function setDiagram(_obj: number): void {\r\n  if (_obj !== undefined) {\r\n    setCookie(\"contextpage\", _obj.toString());\r\n    (window as any).goto_context.page = _obj;\r\n  }\r\n}\r\n// export function getURL(): string {\r\n//   return (window as any).goto_context.url;\r\n// }\r\n// export function setURL(_obj: string) {\r\n//   setCookie (\"contexturl\", _obj);\r\n//  (window as any).goto_context.url = _obj;\r\n// }\r\nexport function getShape(): string {\r\n  return (window as any).goto_context.shp;\r\n}\r\nexport function setShape(_obj: string) {\r\n  if (_obj !== undefined) {\r\n    setCookie(\"contextshp\", _obj);\r\n    (window as any).goto_context.shp = _obj;\r\n  }\r\n}\r\nexport function getConversationID(): string {\r\n  return (window as any).goto_context.conversationID;\r\n}\r\nexport function setConversationID(_obj: string) {\r\n  setCookie(\"conversationID\", _obj);\r\n  (window as any).goto_context.conversationID = _obj;\r\n}\r\nexport function setCookie(cname: string, cvalue: string) {\r\n  let d = new Date();\r\n  d.setTime(d.getTime() + ((window as any).goto_context.exdays * 24 * 60 * 60 * 1000));\r\n  let expires = \"expires=\" + d.toUTCString();\r\n  //  document.cookie = (window as any).goto_context.site + \"/\" + cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n  document.cookie = window.location.pathname + \"/\" + cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport function accessCookie(cookieName: string): string {\r\n  // let name = (window as any).goto_context.site + \"/\" + cookieName + \"=\";\r\n  let name = window.location.pathname + \"/\" + cookieName + \"=\";\r\n  var allCookieArray: string[] = document.cookie.split(';');\r\n  for (var i: number = 0; i < allCookieArray.length; i++) {\r\n    let temp: string = allCookieArray[i].trim();\r\n    if (temp.indexOf(name) === 0)\r\n      return temp.substring(name.length, temp.length);\r\n  }\r\n  return \"\";\r\n}\r\n\r\n","import axios from 'axios';\r\n\r\nexport interface IMongoOption {\r\n  usemongo: boolean;\r\n  semmongoserverurl: string;\r\n  dbname: string;\r\n  repository: string;\r\n  documents: string;\r\n  templates: string;\r\n  stencils: string;\r\n  semmongoconnectiontoken: string;\r\n  semuserlogin: any;\r\n  iselectron: boolean;\r\n}\r\nexport async function mgEncode(mongo: IMongoOption, connection: string, database: string): Promise<any[]> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return w.electron_mongo_api.encode(connection, database);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + mongo.dbname + \"/encode\";\r\n  // if (url.length === 0) url = defaulturl;\r\n  try {\r\n    let js = { \"connect\": connection, \"database\": database };\r\n    let c = {\r\n      \"headers\": {\r\n        \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"semtalk-token\": mongo.semmongoconnectiontoken\r\n      },\r\n    };\r\n\r\n    let res = await axios.post(url, js, c);\r\n    if (res.status === 200 && res.data) {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"mgEncode: \" + res.statusText);\r\n      return [];\r\n    }\r\n  } catch (e) {\r\n    console.error(\"mgEncode: \" + e);\r\n    return [];\r\n  }\r\n}\r\nexport async function mgGetItem(mongo: IMongoOption, dbname: string, listname: string, itemname: string): Promise<any> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return w.electron_mongo_api.find(dbname, listname, { \"name\": itemname }, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + dbname + \"/collections/\" + listname + \"/items/\";\r\n  try {\r\n    url = url + itemname;\r\n    let c = { \"headers\": { \"semtalk-token\": mongo.semmongoconnectiontoken } };\r\n    let res = await axios.get(url, c);\r\n    if (res.status === 200 && res.data && res.data.length > 0) {\r\n      return res.data[0];\r\n    } else {\r\n      console.log(\"mgGetItem: \" + res.statusText);\r\n      return {};\r\n    }\r\n    // return res;\r\n  } catch (e) {\r\n    console.log(\"mgGetItem: \" + e);\r\n    return {};\r\n  }\r\n}\r\nexport async function mgGetDocument(mongo: IMongoOption, listname: string, itemname: string): Promise<any> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return w.electron_mongo_api.find(mongo.dbname, listname, { \"name\": itemname }, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + mongo.dbname + \"/collections/\" + listname + \"/items/\";\r\n  try {\r\n    let c = { \"headers\": { \"semtalk-token\": mongo.semmongoconnectiontoken } };\r\n    let res = await axios.get(url + itemname, c);\r\n    if (res.status === 200 && res.data && res.data.length > 0) {\r\n      return res.data[0][\"value\"];\r\n    } else {\r\n      console.log(\"mgGetDocument: \" + res.statusText);\r\n      return {};\r\n    }\r\n    // return res;\r\n  } catch (e) {\r\n    console.log(\"mgGetDocument: \" + e);\r\n    return {};\r\n  }\r\n}\r\nexport async function mgGetItems(mongo: IMongoOption, dbname: string, listname: string): Promise<any[]> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return w.electron_mongo_api.find(dbname, listname, {}, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + dbname + \"/collections/\" + listname + \"/items/\";\r\n  //if (url.length === 0) url = defaulturl;\r\n  try {\r\n    let c = { \"headers\": { \"semtalk-token\": mongo.semmongoconnectiontoken } };\r\n    let res = await axios.get(url + \"*\", c);\r\n    if (res.status === 200 && res.data && res.data.length > 0) {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"mgGetItems: \" + res.statusText);\r\n      return [];\r\n    }\r\n    // return res;\r\n  } catch (e) {\r\n    console.log(\"mgGetItems: \" + e);\r\n    return [];\r\n  }\r\n}\r\nexport async function mgGetCollections(mongo: IMongoOption, dbname: string): Promise<any[]> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return w.electron_mongo_api.getCollectionItems(dbname, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + dbname + \"/items\";\r\n  //if (url.length === 0) url = defaulturl;\r\n  try {\r\n    let c = { \"headers\": { \"semtalk-token\": mongo.semmongoconnectiontoken } };\r\n    let res = await axios.get(url, c);\r\n    if (res.status === 200 && res.data && res.data.length > 0) {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"mgGetItems: \" + res.statusText);\r\n      return [];\r\n    }\r\n    // return res;\r\n  } catch (e) {\r\n    console.log(\"mgGetItems: \" + e);\r\n    return [];\r\n  }\r\n}\r\nexport async function mgInsertItems(mongo: IMongoOption, dbname: string, listname: string, items: any[]): Promise<any[]> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return w.electron_mongo_api.insert(dbname, listname, items, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + dbname + \"/collections/\" + listname + \"/items\";\r\n  let js = { \"value\": items };\r\n  let c = {\r\n    \"headers\": {\r\n      \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"semtalk-token\": mongo.semmongoconnectiontoken\r\n    },\r\n  };\r\n\r\n  let res = await axios.post(url, js, c\r\n  );\r\n  if (res.status === 201 && res.data && res.data.length > 0) {\r\n    return res.data;\r\n  } else {\r\n    console.log(\"mgInsertItems: \" + res.statusText);\r\n    return [];\r\n  }\r\n}\r\nexport async function mgSaveItem(mongo: IMongoOption, dbname: string, listname: string, itemname: string, jsoncontent: any): Promise<any> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return w.electron_mongo_api.save(dbname, listname, itemname, jsoncontent, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + dbname + \"/collections/\" + listname + \"/items\";\r\n  // let js = { \"value\": jsoncontent };\r\n  let js = jsoncontent;\r\n  let c = {\r\n    \"headers\": {\r\n      \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"semtalk-token\": mongo.semmongoconnectiontoken\r\n    },\r\n  };\r\n\r\n  let res = await axios.put(url + \"/\" + itemname, js, c\r\n  );\r\n  if (res.status === 201 && res.data && res.data.length > 0) {\r\n    return res.data[0];\r\n  } else {\r\n    console.log(\"mgSaveItem: \" + res.statusText);\r\n    return {};\r\n  }\r\n}\r\nexport async function mgSaveDocument(mongo: IMongoOption, listname: string, itemname: string, jsoncontent: any): Promise<any> {\r\n  const d = new Date();\r\n  let u = \"\";\r\n  if (mongo.semuserlogin) {\r\n    u = mongo.semuserlogin.user_info.profile.fullname;\r\n  }\r\n  let js = {\r\n    // \"value\": { \"value\": jsoncontent },\r\n    \"value\": jsoncontent,\r\n    \"Modified\": d,\r\n    \"ModifiedBy\": u\r\n  };\r\n\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return w.electron_mongo_api.save(mongo.dbname, listname, itemname, js, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + mongo.dbname + \"/collections/\" + listname + \"/items\";\r\n  // Achtung!!! mit Absicht doppelter value . Jetzt nicht mehr\r\n  let c = {\r\n    \"headers\": {\r\n      \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"semtalk-token\": mongo.semmongoconnectiontoken\r\n    },\r\n  };\r\n  let res = await axios.put(url + \"/\" + itemname, js, c\r\n  );\r\n  if (res.status === 200 && res.data) {\r\n    // mgSetValue(mongo, mongo.dbname, listname, itemname, \"Modified\", d);\r\n    // mgSetValue(mongo, mongo.dbname, listname, itemname, \"ModifiedBy\", u);\r\n    return res;\r\n  }\r\n  console.log(\"mgSaveDocument: \" + res.statusText);\r\n  return res;\r\n}\r\nexport async function mgCheckDocument(mongo: IMongoOption, listname: string, itemname: string, checkin: boolean): Promise<any> {\r\n  if (checkin) {\r\n    mgUnsetValue(mongo, mongo.dbname, listname, itemname, \"CheckedOutDate\");\r\n    mgUnsetValue(mongo, mongo.dbname, listname, itemname, \"CheckedOutUser\");\r\n  } else {\r\n    const d = new Date();\r\n    let u = \"\";\r\n    if (mongo.semuserlogin) {\r\n      u = mongo.semuserlogin.user_info.profile.fullname;\r\n    }\r\n    mgSetValue(mongo, mongo.dbname, listname, itemname, \"CheckedOutDate\", d);\r\n    mgSetValue(mongo, mongo.dbname, listname, itemname, \"CheckedOutUser\", u);\r\n  }\r\n\r\n  console.log(\"mgCheckDocument: \", itemname);\r\n  return {};\r\n}\r\nexport async function mgSaveDocumentAs(mongo: IMongoOption, listname: string, itemname: string, jsoncontent: any): Promise<any> {\r\n  const d = new Date();\r\n  let u = \"\";\r\n  if (mongo.semuserlogin) {\r\n    u = mongo.semuserlogin.user_info.profile.fullname;\r\n  }\r\n\r\n  let js = {\r\n    // \"value\": { \"value\": jsoncontent },    \r\n    \"value\": jsoncontent,\r\n    \"Created\": d,\r\n    \"CreatedBy\": u\r\n  };\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return w.electron_mongo_api.insert(mongo.dbname, listname, itemname, js, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + mongo.dbname + \"/collections/\" + listname + \"/items\";\r\n  let c = {\r\n    \"headers\": {\r\n      \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"semtalk-token\": mongo.semmongoconnectiontoken\r\n    },\r\n  };\r\n\r\n  let res = await axios.post(url + \"/\" + itemname, js, c);\r\n  return res;\r\n}\r\nexport async function mgGetValue(mongo: IMongoOption, dbname: string, listname: string, itemname: string, attribute: any): Promise<any> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return w.electron_mongo_api.getvalue(mongo.dbname, listname, itemname, attribute, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + dbname + \"/collections/\" + listname + \"/items/\" + itemname + \"/attributes\";\r\n  let c = { \"headers\": { \"semtalk-token\": mongo.semmongoconnectiontoken } };\r\n  let res = await axios.get(url + \"/\" + attribute, c);\r\n  if (res.status === 200) {\r\n    return res.data;\r\n  } else {\r\n    console.log(\"mgGetValue: \" + res.statusText);\r\n    return {};\r\n  }\r\n}\r\nexport async function mgSetValue(mongo: IMongoOption, dbname: string, listname: string, itemname: string, attribute: any, value: any): Promise<any> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return w.electron_mongo_api.setvalue(mongo.dbname, listname, itemname, attribute, value, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + dbname + \"/collections/\" + listname + \"/items/\"\r\n    + itemname + \"/attributes/\" + attribute;\r\n  let js = { \"value\": value };\r\n  let c = {\r\n    \"headers\": {\r\n      \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"semtalk-token\": mongo.semmongoconnectiontoken\r\n    },\r\n  };\r\n\r\n  let res = await axios.put(url, js, c);\r\n  if (res.status === 200) {\r\n    return res.data;\r\n  } else {\r\n    console.log(\"mgSetValue: \" + res.statusText);\r\n    return {};\r\n  }\r\n}\r\nexport async function mgDeleteItem(mongo: IMongoOption, dbname: string, listname: string, name: string): Promise<any> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return w.electron_mongo_api.deletedocument(mongo.dbname, listname, { \"name\": name }, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + dbname + \"/collections/\" + listname + \"/items\";\r\n  let c = { \"headers\": { \"semtalk-token\": mongo.semmongoconnectiontoken } };\r\n  let res = await axios.delete(url + \"/\" + name, c);\r\n  if (res.status === 201 && res.data && res.data.length > 0) {\r\n    return res.data[0];\r\n  } else {\r\n    console.log(\"mgDeleteItem: \" + res.statusText);\r\n    return {};\r\n  }\r\n}\r\nexport async function mgUnsetValue(mongo: IMongoOption, dbname: string, listname: string, itemname: string, attribute: any): Promise<any> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return w.electron_mongo_api.unsetvalue(mongo.dbname, listname, itemname, attribute, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + dbname + \"/collections/\" + listname + \"/items/\"\r\n    + itemname + \"/attributes/\" + attribute;\r\n  let c = {\r\n    \"headers\": {\r\n      \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"semtalk-token\": mongo.semmongoconnectiontoken\r\n    },\r\n  };\r\n\r\n  let res = await axios.delete(url, c);\r\n  if (res.status === 200) {\r\n    return res.data;\r\n  } else {\r\n    console.log(\"mgUnsetValue: \" + res.statusText);\r\n    return {};\r\n  }\r\n}\r\nexport async function mgGetItemNames(mongo: IMongoOption, dbname: string, listname: string): Promise<any[]> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return await w.electron_mongo_api.findNames(dbname, listname, {}, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + dbname + \"/collections/\" + listname + \"/items\";\r\n  // if (url.length === 0) url = defaulturl;\r\n  try {\r\n    let c = { \"headers\": { \"semtalk-token\": mongo.semmongoconnectiontoken } };\r\n    let res = await axios.get(url, c);\r\n    if (res.status === 200 && res.data && res.data.length > 0) {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"mgGetItemNames: \" + res.statusText);\r\n      return [];\r\n    }\r\n  } catch (e) {\r\n    console.error(\"mgGetItemNames: \" + e);\r\n    return [];\r\n  }\r\n}\r\nexport async function mgGetMetaData(mongo: IMongoOption, dbname: string, listname: string): Promise<any[]> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return await w.electron_mongo_api.findMetaData(dbname, listname, {}, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + dbname + \"/collections/\" + listname + \"/metadata\";\r\n  // if (url.length === 0) url = defaulturl;\r\n  try {\r\n    let c = { \"headers\": { \"semtalk-token\": mongo.semmongoconnectiontoken } };\r\n    let res = await axios.get(url, c);\r\n    if (res.status === 200 && res.data && res.data.length > 0) {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"mgGetMetaData: \" + res.statusText);\r\n      return [];\r\n    }\r\n  } catch (e) {\r\n    console.error(\"mgGetMetaData: \" + e);\r\n    return [];\r\n  }\r\n}\r\nexport async function mgCreate_database(mongo: IMongoOption, desturl: string, destdbname: string): Promise<any[]> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return await w.electron_mongo_api.clonedb(mongo.dbname, desturl, destdbname, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"databases/\" + mongo.dbname + \"/clonedb\";\r\n  // if (url.length === 0) url = defaulturl;\r\n  try {\r\n    let js = { \"database\": mongo.dbname, \"desturl\": desturl, \"destdbname\": destdbname };\r\n    let c = {\r\n      \"headers\": {\r\n        \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"semtalk-token\": mongo.semmongoconnectiontoken\r\n      },\r\n    };\r\n\r\n    let res = await axios.post(url, js, c);\r\n    if (res.status === 200 && res.data) {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"mgCreate_database: \" + res.statusText);\r\n      return [];\r\n    }\r\n  } catch (e) {\r\n    console.error(\"mgCreate_database: \" + e);\r\n    return [];\r\n  }\r\n}\r\nexport async function mgnewDatabaseName(mongo: IMongoOption, _connection: string, _database: string): Promise<any[]> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_api) {\r\n    return w.electron_mongo_api.newdatabasename();\r\n  }\r\n  let url = mongo.semmongoserverurl + \"newdatabasename\";\r\n  // if (url.length === 0) url = defaulturl;\r\n  try {\r\n    let c = {\r\n      \"headers\": {\r\n        \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"semtalk-token\": mongo.semmongoconnectiontoken\r\n      },\r\n    };\r\n\r\n    let res = await axios.get(url, c);\r\n    if (res.status === 200 && res.data) {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"newDatabaseName: \" + res.statusText);\r\n      return [];\r\n    }\r\n  } catch (e) {\r\n    console.error(\"newDatabaseName: \" + e);\r\n    return [];\r\n  }\r\n}\r\nexport async function mglistDatabases(mongo: IMongoOption,\r\n  connection: string, database: string, issemtalk: string): Promise<any[]> {\r\n  let w: any = window;\r\n  if (w.electron_mongo_api) {\r\n    return await w.electron_mongo_api.listdatabases(mongo.dbname, issemtalk, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"listdatabases\";\r\n  // if (url.length === 0) url = defaulturl;\r\n  try {\r\n    let js = {\r\n      \"connect\": connection,\r\n      \"database\": database,\r\n      \"issemtalk\": issemtalk\r\n    };\r\n    let c = {\r\n      \"headers\": {\r\n        \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"semtalk-token\": mongo.semmongoconnectiontoken\r\n      },\r\n    };\r\n\r\n    let res = await axios.post(url, js, c);\r\n    if (res.status === 200 && res.data) {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"mglistDatabases: \" + res.statusText);\r\n      return [];\r\n    }\r\n  } catch (e) {\r\n    console.error(\"mglistDatabases: \" + e);\r\n    return [];\r\n  }\r\n}\r\nexport async function mgCallService(mongo: IMongoOption,\r\n  args: any, service?: string, user?: string, pwd?: string): Promise<any[]> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.api) {\r\n    if (service === undefined) {\r\n      service = process.env.similarityservice;\r\n    }\r\n    if (user === undefined) {\r\n      user = process.env.similarityuser;\r\n    }\r\n    if (pwd === undefined) {\r\n      pwd = process.env.similaritypwd;\r\n    }\r\n    return w.api.callservice(args, service, user, pwd);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"service\";\r\n  // if (url.length === 0) url = defaulturl;\r\n  try {\r\n    // let js = {\r\n    //   \"text\": text\r\n    // };\r\n    let c = {\r\n      \"headers\": {\r\n        \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"semtalk-token\": mongo.semmongoconnectiontoken\r\n      },\r\n    };\r\n\r\n    let res = await axios.post(url, args, c);\r\n    if (res.status === 200 && res.data) {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"mgCallService: \" + res.statusText);\r\n      return [];\r\n    }\r\n  } catch (e) {\r\n    console.error(\"mgCallService: \" + e);\r\n    return [];\r\n  }\r\n}\r\n// ------------------------------------------------------\r\n\r\nexport async function mgLogin_with_email_password(mongo: IMongoOption, dbname: string, email: string, password: string): Promise<any[]> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_auth_api) {\r\n    return await w.electron_mongo_auth_api.login_with_email_password(dbname, email, password, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"users/login_with_email_password\";\r\n  // if (url.length === 0) url = defaulturl;\r\n  try {\r\n    let js = {\r\n      \"dbname\": dbname,\r\n      \"email\": email, \"password\": password\r\n    };\r\n    let c = {\r\n      \"headers\": {\r\n        \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"semtalk-token\": mongo.semmongoconnectiontoken\r\n      },\r\n    };\r\n\r\n    let res = await axios.post(url, js, c);\r\n    if (res.status === 200 && res.data) {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"mgLogin_with_email_password: \" + res.statusText);\r\n      return [];\r\n    }\r\n  } catch (e) {\r\n    console.error(\"mgLogin_with_email_password: \" + e);\r\n    throw e;\r\n  }\r\n}\r\nexport async function mgCreate_user(mongo: IMongoOption, email: string, fullname: string, regkey: string, password: string): Promise<any[]> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_auth_api) {\r\n    return await w.electron_mongo_auth_api.create_user(mongo.dbname, email, fullname, password, regkey, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"users\";\r\n  // if (url.length === 0) url = defaulturl;\r\n  try {\r\n    let js = { \"dbname\": mongo.dbname, \"email\": email, \"fullname\": fullname, \"password\": password, \"regkey\": regkey };\r\n    let c = {\r\n      \"headers\": {\r\n        \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"semtalk-token\": mongo.semmongoconnectiontoken\r\n      },\r\n    };\r\n\r\n    let res = await axios.post(url, js, c);\r\n    if (res.status === 201 && res.data) {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"mgCreate_user: \" + res.statusText);\r\n      return [];\r\n    }\r\n  } catch (e) {\r\n    console.error(\"mgCreate_user: \" + e);\r\n    throw e;\r\n  }\r\n}\r\nexport async function mgChange_Password(mongo: IMongoOption, email: string, old_password: string, regkey: string, new_password: string): Promise<any[]> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_auth_api) {\r\n    let res: any = await w.electron_mongo_auth_api.login_with_email_password(mongo.dbname, email, old_password, mongo.semmongoconnectiontoken);\r\n    return await w.electron_mongo_auth_api.update_password(mongo.dbname, res.login_token, old_password,\r\n      new_password, mongo.semmongoconnectiontoken);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"users/updatepassword\";\r\n  // if (url.length === 0) url = defaulturl;\r\n  try {\r\n    let js = {\r\n      \"dbname\": mongo.dbname, \"email\": email, \"old_password\": old_password,\r\n      \"new_password\": new_password, \"regkey\": regkey\r\n    };\r\n    let c = {\r\n      \"headers\": {\r\n        \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"semtalk-token\": mongo.semmongoconnectiontoken\r\n      },\r\n    };\r\n\r\n    let res = await axios.post(url, js, c);\r\n    if (res.status === 201 && res.data) {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"mgChange_Password: \" + res.statusText);\r\n      return [];\r\n    }\r\n  } catch (e) {\r\n    console.error(\"mgChange_Password: \" + e);\r\n    throw e;\r\n  }\r\n}\r\n// export async function mgChange_Password_Token(mongo: IMongoOption, email: string, token: string, regkey: string, new_password: string): Promise<any[]> {\r\n//   let w: any = window;\r\n//   if (mongo.iselectron && w.electron_mongo_auth_api) {\r\n//     return await w.electron_mongo_auth_api.login_with_email_password(dbname, email, password, mongo.semmongoconnectiontoken);\r\n//   }\r\n//   let url = mongo.semmongoserverurl + \"users/updatepasswordwithToken\";\r\n//   // if (url.length === 0) url = defaulturl;\r\n//   try {\r\n//     let js = { \"dbname\": mongo.dbname, \"email\": email, \"token\": token, \"new_password\": new_password, \"regkey\": regkey };\r\n//     let c = {\r\n//       \"headers\": {\r\n//         \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n//         \"Access-Control-Allow-Origin\": \"*\",\r\n//         \"semtalk-token\": mongo.semmongoconnectiontoken\r\n//       },\r\n//     };\r\n\r\n//     let res = await axios.post(url, js, c);\r\n//     if (res.status === 201 && res.data) {\r\n//       return res.data;\r\n//     } else {\r\n//       console.log(\"mgChange_Password_Token: \" + res.statusText);\r\n//       return [];\r\n//     }\r\n//   } catch (e) {\r\n//     console.error(\"mgChange_Password_Token: \" + e);\r\n//     throw e;\r\n//   }\r\n// }\r\nexport async function mgForgot_Password_send_token(mongo: IMongoOption, email: string, clientURL: string): Promise<any> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_auth_api) {\r\n    return await w.electron_mongo_auth_api.forgot_password_send_token(mongo.dbname, email, mongo.semmongoconnectiontoken, clientURL);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"users/forgotpassword\";\r\n  // if (url.length === 0) url = defaulturl;\r\n  try {\r\n    let js = { \"dbname\": mongo.dbname, \"email\": email, \"clientURL\": clientURL };\r\n    let c = {\r\n      \"headers\": {\r\n        \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"semtalk-token\": mongo.semmongoconnectiontoken\r\n      },\r\n    };\r\n\r\n    let res = await axios.post(url, js, c);\r\n    if (res.status === 201) {\r\n      let result = await res;\r\n      return result;\r\n    } else {\r\n      console.log(\"mgForgot_Password: \" + res.statusText);\r\n      return [];\r\n    }\r\n  } catch (e) {\r\n    console.error(\"mgForgot_Password: \" + e);\r\n    throw e;\r\n  }\r\n}\r\nexport async function mgForgot_Password_Update(mongo: IMongoOption, email: string, verify_token: string, new_password: string): Promise<any[]> {\r\n  let w: any = window;\r\n  if (mongo.iselectron && w.electron_mongo_auth_api) {\r\n    return await w.electron_mongo_auth_api.forgot_password_use_token(mongo.dbname, email, verify_token, mongo.semmongoconnectiontoken, new_password);\r\n  }\r\n  let url = mongo.semmongoserverurl + \"users/updateforgotpassword\";\r\n  // if (url.length === 0) url = defaulturl;\r\n  try {\r\n    let js = { \"dbname\": mongo.dbname, \"email\": email, \"verifytoken\": verify_token, \"password\": new_password };\r\n    let c = {\r\n      \"headers\": {\r\n        \"Accept\": 'application/json', \"Content-Type\": 'application/json',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"semtalk-token\": mongo.semmongoconnectiontoken\r\n      },\r\n    };\r\n\r\n    let res = await axios.post(url, js, c);\r\n    if (res.status === 201 && res.data) {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"mgForgot_Password: \" + res.statusText);\r\n      return [];\r\n    }\r\n  } catch (e) {\r\n    console.error(\"mgForgot_Password: \" + e);\r\n    throw e;\r\n  }\r\n}\r\n\r\n\r\n","import { IVisioRDFS } from \"../semtalklistener/visiordfsinterface\";\n\n/* tslint:disable:member-ordering */\n/* tslint:disable:forin */\n/* tslint:disable:no-empty */\n\nexport class Cell {\n  constructor(parent: mxCell | null, mxObjectId: string, value: any, x: number | null, y: number | null, width: number | null, height: number | null, _style?: any, _relative?: boolean) {\n    // this.id = id;\n    this.mxObjectId = mxObjectId;\n    if (value.nodeName !== undefined) {\n      this.shapeName = value.nodeName;\n    }\n    // this.objectid = Number(mxObjectId);\n    // if (mxObjectId.indexOf(\"Sheet.\") === 0) {\n    //   this.shapeid = mxObjectId;\n    // } else {\n    //   this.shapeid = \"mxSheet.\" + mxObjectId;\n    // }\n    this.value = value;\n    this.parent = parent;\n    this.label = value.name;\n    this.geometry = { \"x\": x, \"y\": y, \"width\": width, \"height\": height };\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n  public oned: boolean = false;\n  public mxObjectId: string;\n  //  public id: string;\n  public geometry: any;\n  private _shapeid: any;\n  public get shapeid(): string {\n    if (this._shapeid !== undefined)\n      return this._shapeid;\n    return this.mxObjectId;\n  }\n  public set shapeid(s: string) {\n    this._shapeid = s;\n  }\n  public objectid: number = -1;\n  public label: string;\n  public parent: mxCell | null = null;\n  public x: number | null;\n  public y: number | null;\n  public width: number | null;\n  public height: number | null;\n  public value = { name: \"\", nodeName: \"\" };\n  public shapeName: string | null = null; // mastername\n  public shapeKey: string | null = null;\n  public edges: Edge[] = [];\n  public Delete(): void {\n  }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class Edge extends Cell {\n  constructor(parent: mxCell | null, id: string, value: any, source: Cell, target: Cell, style: any) {\n    super(parent, id, value, null, null, null, null, style);\n    this.source = source;\n    this.target = target;\n    source.edges.push(this);\n    target.edges.push(this);\n  }\n  public source: Cell;\n  public target: Cell;\n  public oned: boolean = true;\n  public Delete(): void {\n    this.source.edges.splice(this.source.edges.indexOf(this), 1);\n    this.target.edges.splice(this.target.edges.indexOf(this), 1);\n  }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class Model {\n  public beginUpdate(): void { }\n  public endUpdate(): void { }\n}\n\nexport class Graph {\n  public sem!: IVisioRDFS;\n  private model = new Model();\n  // tslint:disable-next-line:variable-name\n  private _cells: { [id: string]: Cell } = {};\n  // private maxcellid: number = 0;\n  // tslint:disable-next-line:variable-name\n  private _updates: Cell[] = [];\n  public getModel(): any { return this.model; }\n  public refresh(): void { }\n  public getChangeRequest(): Cell | undefined {\n    return this._updates.shift();\n  }\n  constructor(sem: IVisioRDFS) {\n    this.sem=sem;\n  }\n  public DeleteCell(c: Cell): void {\n    delete this._cells[c.shapeid];\n    c.Delete();\n  }\n  public getDefaultParent() {\n    return null;\n  }\n  public insertVertex(_parent: mxCell | null, _id: string | null, _value: any, _x: number | null, _y: number | null, _width: number | null, _height: number | null, _style?: any, _relative?: boolean) {\n    // if (id !== null && id.indexOf(\".\") > 0) {\n    //   id = id.substr(id.indexOf(\".\") + 1);\n    // }\n    // const idi: number = Number(id);\n    // if (idi >= this.maxcellid) {\n    //   this.maxcellid = idi;\n    // }\n    // this.maxcellid = this.maxcellid + 1;\n    // if (id === null) {\n    //   id = \"mxSheet.\" + this.maxcellid.toString();\n    // } else {\n    //   id = \"mxSheet.\" + id;\n    // }\n    // const v = new Cell(parent, id, value, x, y, width, height, style);\n    // this._cells[v.shapeid] = v;\n    // this.sem.visShapeAdded(v);\n    // if (this.sem.noevents === false) {\n    //   this._updates.push(v);\n    // }\n    // return v;\n  }\n  public getChildCells(_parent: Cell | null, vertices: boolean, edges: boolean): Cell[] {\n    const cl: Cell[] = [];\n    for (const ci in this._cells) {\n      const c = this._cells[ci];\n      const isedge = c instanceof Edge;\n      if ((isedge && edges) || (!isedge && vertices))\n        cl.push(c);\n    }\n    return cl;\n  }\n  public labelChanged(_shp: mxCell, _value: string, _trigger: any) {\n    // shp.label = value;\n    // this.sem.visShapeExitedTextEdit(shp, value);\n    // if (this.sem.noevents === false) {\n    //   this._updates.push(shp);\n    // }\n  }\n  public getLabel(shape: Cell): string {\n    return shape.label;\n  }\n  public scrollCellToVisible(_shp: mxCell) {\n  }\n  public setSelectionCells(shps: mxCell[]) {\n    this.sem.visSelectionChanged(shps[0]);\n  }\n  public getSelectionCells(): mxCell[] {\n    return [];\n  }\n  public removeCells(shps: mxCell[], _includeEdges: boolean) {\n    for (const s of shps) {\n      delete this._cells[s.shapeid];\n    }\n    this.sem.visShapesDeleted(shps);\n  }\n\n  public insertEdge(_parent: mxCell | null, _id: string | null, _value: any, _source: mxCell, _target: mxCell, _style: any) {\n    // if (id !== null && id.indexOf(\".\") > 0) {\n    //   id = id.substr(id.indexOf(\".\") + 1);\n    // }\n    // const idi: number = Number(id);\n    // if (idi >= this.maxcellid) {\n    //   this.maxcellid = idi;\n    // }\n    // if (id === null || idi === 0) {\n    //   this.maxcellid = this.maxcellid + 1;\n    //   id = \"mxSheet.\" + this.maxcellid.toString();\n    // } else {\n    //   id = \"mxSheet.\" + id;\n    // }\n    // const e = new Edge(parent, id, value, source, target, style);\n    // this._cells[e.shapeid] = e;\n    // this.sem.visConnectionAdded(null, e, source, target);\n    // return e;\n    // // if (this._cells[e.shapeid] !== undefined) {\n    // //   return e;\n    // // } else {\n    // //   return null;\n    // // }\n  }\n\n  public isEditing(_shape: any): boolean {\n    return false;\n  }\n  public beginUpdate(): void { }\n  public endUpdate(): void { }\n\n  public setSelectionCell(_shp: mxCell) {\n  }\n  public startEditingAtCell(_shp: mxCell) {\n  }\n\n  public updateCellSize(_shp: mxCell, _ignoreChidren: boolean) {}\n}\n","\n/* tslint:disable:noImplicitAny */\n/* eslint:disable:noImplicitAny */\n\nimport {\n  mxUtils,\n  mxRectangle,\n  mxCellRenderer,\n  mxActor,\n} from \"mxgraph-js\";// Document shape\n\nfunction DocumentShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(DocumentShape, mxActor);\nDocumentShape.prototype.size = 0.3;\nDocumentShape.prototype.getLabelMargins = function (rect: any) {\n  if (mxUtils.getValue(this.style, 'boundedLbl', false)) {\n    return new mxRectangle(0, 0, 0, parseFloat(mxUtils.getValue(\n      this.style, 'size', this.size\n    )) * rect.height);\n  }\n\n  return null;\n};\nDocumentShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n  console.debug(\"document\");\n  const dy = h * Math.max(0, Math.min(1, parseFloat(mxUtils.getValue(this.style, 'size', this.size))));\n  const fy = 1.4;\n\n  c.moveTo(0, 0);\n  c.lineTo(w, 0);\n  c.lineTo(w, h - dy / 2);\n  c.quadTo(w * 3 / 4, h - dy * fy, w / 2, h - dy / 2);\n  c.quadTo(w / 4, h - dy * (1 - fy), 0, h - dy / 2);\n  c.lineTo(0, dy / 2);\n  c.close();\n  c.end();\n};\n// console.debug(\"document registered\");\n\nmxCellRenderer.registerShape('document', DocumentShape);\n","\n/* tslint:disable:noImplicitAny */\n/* eslint:disable:noImplicitAny */\n\nimport {\n  mxUtils,\n  mxRectangle,\n  mxCellRenderer,\n  mxCylinder,\n} from \"mxgraph-js\";// Document shape\n\n\n// DataStore Shape, supports size style\nfunction DataStoreShape(this: any) {\n  mxCylinder.call(this);\n}\nmxUtils.extend(DataStoreShape, mxCylinder);\n\nDataStoreShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any, isForeground: any) {\n  // console.debug(\"datastorage\");\n  const dy = Math.min(h / 2, Math.round(h / 8) + this.strokewidth - 1);\n\n  if ((isForeground && this.fill != null) || (!isForeground && this.fill == null)) {\n    c.moveTo(0, dy);\n    c.curveTo(0, 2 * dy, w, 2 * dy, w, dy);\n\n    // Needs separate shapes for correct hit-detection\n    if (!isForeground) {\n      c.stroke();\n      c.begin();\n    }\n\n    c.translate(0, dy / 2);\n    c.moveTo(0, dy);\n    c.curveTo(0, 2 * dy, w, 2 * dy, w, dy);\n\n    // Needs separate shapes for correct hit-detection\n    if (!isForeground) {\n      c.stroke();\n      c.begin();\n    }\n\n    c.translate(0, dy / 2);\n    c.moveTo(0, dy);\n    c.curveTo(0, 2 * dy, w, 2 * dy, w, dy);\n\n    // Needs separate shapes for correct hit-detection\n    if (!isForeground) {\n      c.stroke();\n      c.begin();\n    }\n\n    c.translate(0, -dy);\n  }\n\n  if (!isForeground) {\n    c.moveTo(0, dy);\n    c.curveTo(0, -dy / 3, w, -dy / 3, w, dy);\n    c.lineTo(w, h - dy);\n    c.curveTo(w, h + dy / 3, 0, h + dy / 3, 0, h - dy);\n    c.close();\n  }\n};\nDataStoreShape.prototype.getLabelMargins = function (rect: any) {\n  return new mxRectangle(0, 2.5 * Math.min(rect.height / 2, Math.round(rect.height / 8) +\n    this.strokewidth - 1) * this.scale, 0, 0);\n};\n\nmxCellRenderer.registerShape('datastore', DataStoreShape);\n","/* tslint:disable:no-function-expression */\n\nimport {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\tmxActor,\n\t// mxShape,\n} from \"mxgraph-js\";// Document shape\n\n\n\nfunction UMLClassShape(this: any) {\n\tmxActor.call(this);\n\tthis.isRounded = true;\n\tthis.strokewidth = 2;\n\t// this.strokeOpacity = 100;\n}\nmxUtils.extend(UMLClassShape, mxActor);\n\nUMLClassShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\tlet isgradient = false;\n\tif (this[\"style\"][\"gradientColor\"]) {\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\n\t}\n\tif (isgradient) {\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\n\t\tc.setGradient(fillColor, gradientColor);\t\n\t}\n\n\tc.translate(x, y);\n\tlet rSize = 5;\n\t// let rSize = 0;\n\n\tc.roundrect(0, 0, w, h, rSize, rSize);\n\tc.fillAndStroke();\n\n\tc.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nUMLClassShape.prototype.redrawPath = function (_c: any, _x: any, _y: any, _w: any, _h: any) {\n\t// c.begin();\n\t// c.font = \"30px Arial\";\n\t// c.text(\"Hello World\", 0, 0);\n\t// c.text(\"Hello World2\", 10, 10);\n\t// c.text(\"Hello World3\", 20, 20);\n\t// c.setStrokeWidth(1);\n\t// c.rect(0,0,w/2,h/2);\n\t// c.text(\"XX\",5,5)\n\t// c.stroke();\n\t// c.rect(w/2,0,w/2,h/2);\n\t// c.moveTo(w * 0, h * 0.8);\n\t// c.lineTo(w * 1.0, h * 0.8);\n\t// c.moveTo(w * 0, h * 0.9);\n\t// c.lineTo(w * 1.0, h * 0.9);\n\t// c.close();\n\t// c.stroke();\n};\n\nmxCellRenderer.registerShape('umlclass', UMLClassShape);\n// console.debug(\"EpcPosition Shape registered\");\n","import {\r\n  ISemTalkSystemClass, SemTalkBaseConstant,\r\n  SemTalkLanguage, SemTalkLanguageCode,\r\n  SemTalkRelation, ModelAttribute\r\n  // ISemTalkAttribute,\r\n  // ISemTalkAttributeType,\r\n  // SemTalkValueType\r\n} from '../tbase/Interface';\r\n\r\nimport { IVisioRDFS, SemTalkUIConstant } from './visiordfsinterface';\r\n\r\nexport class Subtask {\r\n  public static patch(sem: IVisioRDFS) {\r\n    const base = sem.base;\r\n    // Shouldnt we always create \"Generic\"\r\n    const g = base.FindDiagramType(SemTalkBaseConstant.SLGeneric);\r\n    if (g !== null) {\r\n      g.IsClass = true;\r\n      g.MakeSynonym(\"Ontology\", SemTalkLanguage.English);\r\n      g.MakeSynonym(\"Ontologie\", SemTalkLanguage.German);\r\n      g.Stencil = \"class.vss\";\r\n    }\r\n    base.SetModelAttribute(ModelAttribute.ShowGenericDiagrams, \"True\");\r\n\r\n    let h = base.MakeSystemClass(SemTalkUIConstant.SLHidden);\r\n    Subtask.ensureLanguages(sem, h); \r\n\r\n   {\r\n      let comment = base.FindSystemClass(SemTalkBaseConstant.SLComment);\r\n      if (!comment) {\r\n        comment = base.MakeSystemClass(SemTalkBaseConstant.SLComment);\r\n      }\r\n      comment.Style = \"fillColor=yellow;shadow=1;strokeWidth=1;html=1\";\r\n      comment.Hide = true;\r\n      comment.AddSubclassOf(h);\r\n      comment.MakeSynonym(sem.getResStrListener(\"STRCOMMENT\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n      comment.MakeSynonym(sem.getResStrListener(\"STRCOMMENT\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n      comment.MakeSynonym(sem.getResStrListener(\"STRCOMMENT\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n      comment.MakeSynonym(sem.getResStrListener(\"STRCOMMENT\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n      comment.MakeSynonym(sem.getResStrListener(\"STRCOMMENT\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n      comment.MakeSynonym(sem.getResStrListener(\"STRCOMMENT\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n      comment.MakeSynonym(sem.getResStrListener(\"STRCOMMENT\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n    }\r\n\r\n    let f: ISemTalkSystemClass | null;\r\n\r\n    f = base.FindAssociationType(SemTalkBaseConstant.SLSubClassOf);\r\n    if (f) {\r\n      //f.Style = \"edgeStyle=loopEdgeStyle;shape=flexArrow;dashed=1;dashPattern=5 5;endArrow=classic;html=1;fillColor=#ffffff;\";\r\n      f.Style = \"shape=flexArrow;dashed=1;dashPattern=5 5;endArrow=classic;html=1;fillColor=#ffffff;strokeWidth=2;\";\r\n      f.MakeSynonym(sem.getResStrListener(\"STRDLHTMLOUTSUP\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n      f.MakeSynonym(sem.getResStrListener(\"STRDLHTMLOUTSUP\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n      f.MakeSynonym(sem.getResStrListener(\"STRDLHTMLOUTSUP\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n      f.MakeSynonym(sem.getResStrListener(\"STRDLHTMLOUTSUP\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n      f.MakeSynonym(sem.getResStrListener(\"STRDLHTMLOUTSUP\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n      f.MakeSynonym(sem.getResStrListener(\"STRDLHTMLOUTSUP\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n      f.MakeSynonym(sem.getResStrListener(\"STRDLHTMLOUTSUP\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n    }\r\n    f = base.FindAssociationType(SemTalkBaseConstant.SLInstanceOf);\r\n    if (f) {\r\n      //f.Style = \"edgeStyle=loopEdgeStyle;shape=flexArrow;dashed=1;dashPattern=5 5;endArrow=classic;html=1;fillColor=#ffffff;\";\r\n      f.Style = \"shape=flexArrow;dashed=1;dashPattern=2 2;endArrow=classic;html=1;fillColor=#ffffff;strokeWidth=2;\";\r\n      f.MakeSynonym(sem.getResStrListener(\"STRDLHTMLOUTINS\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n      f.MakeSynonym(sem.getResStrListener(\"STRDLHTMLOUTINS\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n      f.MakeSynonym(sem.getResStrListener(\"STRDLHTMLOUTINS\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n      f.MakeSynonym(sem.getResStrListener(\"STRDLHTMLOUTINS\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n      f.MakeSynonym(sem.getResStrListener(\"STRDLHTMLOUTINS\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n      f.MakeSynonym(sem.getResStrListener(\"STRDLHTMLOUTINS\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n      f.MakeSynonym(sem.getResStrListener(\"STRDLHTMLOUTINS\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n    }\r\n    let COOF = SemTalkBaseConstant.SLConsistsOf;\r\n    f = base.FindAssociationType(COOF);\r\n    if (!f) {\r\n      f = base.MakeAssociationType(SemTalkRelation.SemTalkProperty, COOF);\r\n      f.MakeSynonym(COOF, SemTalkLanguage.English);\r\n      f.MakeSynonym(\"besteht aus\", SemTalkLanguage.German);\r\n    }\r\n \r\n  }\r\n  public static init(_sem: IVisioRDFS) {\r\n  }\r\n  private static ensureLanguages(sem: IVisioRDFS, h: ISemTalkSystemClass) {\r\n    const base = sem.base;\r\n    let l = base.MakeSystemClass(SemTalkBaseConstant.SLLanguage);\r\n    l.Hide = true;\r\n    l.AddSubclassOf(h);\r\n    {\r\n      let li = base.FindInstance(SemTalkLanguage.German);\r\n      if (!li) {\r\n        li = l.MakeInstance(SemTalkLanguage.German);\r\n      }\r\n      li.MakeSynonym(sem.getResStrListener(\"STRGERMAN\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRGERMAN\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRGERMAN\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRGERMAN\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRGERMAN\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRGERMAN\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRGERMAN\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n    }\r\n    {\r\n      let li = base.FindInstance(SemTalkLanguage.English);\r\n      if (!li) {\r\n        li = l.MakeInstance(SemTalkLanguage.English);\r\n      }\r\n      li.MakeSynonym(sem.getResStrListener(\"STRENGLISH\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRENGLISH\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRENGLISH\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRENGLISH\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRENGLISH\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRENGLISH\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRENGLISH\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n    }\r\n    {\r\n      let li = base.FindInstance(SemTalkLanguage.Spanish);\r\n      if (!li) {\r\n        li = l.MakeInstance(SemTalkLanguage.Spanish);\r\n      }\r\n      li.MakeSynonym(sem.getResStrListener(\"STRSPANISH\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRSPANISH\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRSPANISH\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRSPANISH\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRSPANISH\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRSPANISH\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRSPANISH\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n    }\r\n    {\r\n      let li = base.FindInstance(SemTalkLanguage.Japanese);\r\n      if (!li) {\r\n        li = l.MakeInstance(SemTalkLanguage.Japanese);\r\n      }\r\n      li.MakeSynonym(sem.getResStrListener(\"STRJAPANESE\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRJAPANESE\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRJAPANESE\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRJAPANESE\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRJAPANESE\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRJAPANESE\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRJAPANESE\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n    }\r\n    {\r\n      let li = base.FindInstance(SemTalkLanguage.Russian);\r\n      if (!li) {\r\n        li = l.MakeInstance(SemTalkLanguage.Russian);\r\n      }\r\n      li.MakeSynonym(sem.getResStrListener(\"STRRUSSIAN\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRRUSSIAN\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRRUSSIAN\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRRUSSIAN\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRRUSSIAN\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRRUSSIAN\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRRUSSIAN\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n    }\r\n    {\r\n      let li = base.FindInstance(SemTalkLanguage.French);\r\n      if (!li) {\r\n        li = l.MakeInstance(SemTalkLanguage.French);\r\n      }\r\n      li.MakeSynonym(sem.getResStrListener(\"STRFRENCH\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRFRENCH\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRFRENCH\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRFRENCH\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRFRENCH\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRFRENCH\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n      li.MakeSynonym(sem.getResStrListener(\"STRFRENCH\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n    }\r\n    {\r\n      let li = base.FindInstance(SemTalkLanguage.Simplified);\r\n      if (!li) {\r\n        li = l.MakeInstance(SemTalkLanguage.Simplified);\r\n      }\r\n      li.MakeSynonym(sem.getResStrListener(\"STSIMPLIFIEDCHINESE\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n      li.MakeSynonym(sem.getResStrListener(\"STSIMPLIFIEDCHINESE\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n      li.MakeSynonym(sem.getResStrListener(\"STSIMPLIFIEDCHINESE\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n      li.MakeSynonym(sem.getResStrListener(\"STSIMPLIFIEDCHINESE\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n      li.MakeSynonym(sem.getResStrListener(\"STSIMPLIFIEDCHINESE\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n      li.MakeSynonym(sem.getResStrListener(\"STSIMPLIFIEDCHINESE\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n      li.MakeSynonym(sem.getResStrListener(\"STSIMPLIFIEDCHINESE\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n    }\r\n    {\r\n      let li = base.FindInstance(SemTalkLanguage.Traditional);\r\n      if (!li) {\r\n        li = l.MakeInstance(SemTalkLanguage.Traditional);\r\n      }\r\n      li.MakeSynonym(sem.getResStrListener(\"STTRADITIONALCHINESE\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n      li.MakeSynonym(sem.getResStrListener(\"STTRADITIONALCHINESE\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n      li.MakeSynonym(sem.getResStrListener(\"STTRADITIONALCHINESE\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n      li.MakeSynonym(sem.getResStrListener(\"STTRADITIONALCHINESE\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n      li.MakeSynonym(sem.getResStrListener(\"STTRADITIONALCHINESE\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n      li.MakeSynonym(sem.getResStrListener(\"STTRADITIONALCHINESE\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n      li.MakeSynonym(sem.getResStrListener(\"STTRADITIONALCHINESE\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n    }\r\n    {\r\n      let li = base.FindInstance(SemTalkLanguage.None);\r\n      if (!li) {\r\n        li = l.MakeInstance(SemTalkLanguage.None);\r\n      }\r\n    }\r\n  }\r\n}","/* eslint-disable no-lone-blocks */\r\nimport {\r\n  ISemTalkSystemClass,\r\n  ISemTalkAttribute,\r\n  ISemTalkAttributeType,\r\n  SemTalkValueType,\r\n  SemTalkLanguage, SemTalkLanguageCode,\r\n  IObjectBase,\r\n  SemTalkBaseConstant,  ModelAttribute\r\n} from '../tbase/Interface';\r\n\r\nimport { Subtask } from './subtask';\r\nimport { IVisioRDFS,\r\n          SemTalkUIConstant } from './visiordfsinterface';\r\nimport {Process_ElementName, SIM_AttributeTypeName, \r\n  SIM_Strategy, SIM_Distribution, SIM_Condition} from './processInterface';\r\nimport { BPMN_AssociationName } from './subtask/bpmn/bpmninterface';\r\n\r\nexport class Process_Subtask extends Subtask {\r\n  public static patch(sem: IVisioRDFS) {\r\n    const base = sem.base;\r\n    console.log(\"Process_Subtask\");\r\n\r\n    super.patch(sem);\r\n\r\n    this.patchMetaModel(base);\r\n\r\n    let h = base.FindSystemClass(SemTalkUIConstant.SLHidden);\r\n    if (h) {\r\n      Process_Subtask.ensureDistributions(sem, h);\r\n      Process_Subtask.ensureSimulation(sem, h);\r\n    }\r\n    this.patchChinese(sem, SemTalkLanguage.Simplified, SemTalkLanguageCode.Simplified);\r\n    this.patchChinese(sem, SemTalkLanguage.Traditional, SemTalkLanguageCode.Traditional);\r\n\r\n  }\r\n  private static patchMetaModel(base: IObjectBase) {\r\n    let ass = base.FindAssociationType(\"performs\");\r\n    if (ass !== null) ass.Delete();\r\n\r\n    let at: ISemTalkAttributeType | null;\r\n    at = base.FindAttributeType(\"active\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Competence\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"has task\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"has task\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ConnectedObjects\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Comment\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Resources\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Id\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Version\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Language\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ExpressionLanguage\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"QueryLanguage\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Pools\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Gates\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"From\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"To\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ExpressionName\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"expression\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"AssignTime\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Process Type\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Case name\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Message name\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Label\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"EventDetail\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ExpressionNumber\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"EvaluationPosition\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"DocsQty\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Docs\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"XORType\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"MarkerVisible\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ConditionType\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ErrorName\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Gate\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"InMessage\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"OutMessage\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Participant\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"BusinessRole\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"role\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"targetNamespace\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"wsdlfile\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"SystemType\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"SystemInstType\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Type\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ConnectedObjects\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ParticipantMultiplicity\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"LBParticipants\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"LBiniParticipants\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ActivityType\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"SubProcessType\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"DocIcon\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"LinkFilename\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Modified\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Editor\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Workflow\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ModerationStatus\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Level\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Last Modified\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ID\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"owshiddenversion\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"UniqueId\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"FSObjType\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Created Date\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ProgId\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"FileLeafRef\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"FileRef\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ContentTypeId\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Modified By\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Created By\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"File Type\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Title\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ContentType\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Created\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Author\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"FileDirRef\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"File Size\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"CheckedOutUserId\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"CheckoutUser\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"LinkCheckedOutTitle\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"IsCheckedoutToLocal\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ScopeId\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"VirusStatus\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"CheckedOutTitle\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"CheckinComment\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"EditMenuTableStart\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"EditMenuTableEnd\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"LinkFilenameNoMenu\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ServerUrl\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"EncodedAbsUrl\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"FileSizeDisplay\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"IsCurrentVersion\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"SelectTitle\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"SelectFilename\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"UIVersion\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"UIVersionString\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Order\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"GUID\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"WorkflowVersion\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ParentVersionString\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ParentLeafName\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Combine\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"RepairDocument\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"LookupField\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"CollectF\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Status\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"EditMenuTableStart2\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"Etag\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"SortBehavior\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"LinkFilename2\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ItemChildCount\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"FolderChildCount\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"CopySource\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"ProcessOwner\");\r\n    if (at !== null) at.Delete();\r\n    at = base.FindAttributeType(\"wsdl\");\r\n    if (at !== null) at.Delete();\r\n\r\n  }\r\n  private static patchChinese(sem: IVisioRDFS, lang: SemTalkLanguage, code: SemTalkLanguageCode) {\r\n    let ob = sem.base;\r\n    let mapping: { [code: string]: string } = {};\r\n\r\n    // bpmn drawing elements\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLActivity)] = \"STRTask\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLEvent)] = \"STREvent\";\r\n    mapping[ob.GetModelAttribute(ModelAttribute.SLComment)] = \"STRCOMMENT\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLDataObject)] = \"STRDataObject\";\r\n    mapping[SemTalkBaseConstant.SLSwimlane] = \"STRSwimlane\";\r\n \r\n \r\n    // objects\r\n    mapping[\"Breakpoint\"] = \"STRBreakpoint\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLResource)] = \"STRHumanResource\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLOrgUnit)] = \"STROrgUnit\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLPerson)] = \"STRPerson\";\r\n    mapping[\"Manager\"] = \"STRManager\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLPosition)] = \"STRPosition\";\r\n    mapping[\"Role\"] = \"STRRole\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLInformation)] = \"STRObject\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLControl)] = \"STRSequenceflow\";\r\n\r\n    // bpmn associations\r\n    mapping[\"has manager\"] = \"STRhasmanager\";\r\n    mapping[\"has offtime\"] = \"STRHASOFFTIME\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLInfoType)] = \"STRINFOTYPE\";\r\n    mapping[\"member\"] = \"STRMEMBER\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLUses)] = \"STRUSES\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLUsesPhys)] = \"STRUSEPHYRESOURCE\";\r\n    mapping[\"superior of\"] = \"STRSUPERIOROF\";\r\n    mapping[\"performs\"] = \"STRPERFORMS\";\r\n\r\n    // bpmn attributes\r\n    // ONLY BPMN_AttributeTypeName should be translated here\r\n    // mapping[SIM_AttributeTypeName.active] = \"STRACTIVE\";  // Delete (-> Sperrzeit)\r\n    mapping[\"Address\"] = \"STRADDRESS\";\r\n    mapping[SIM_AttributeTypeName.Begin] = \"STRBegin\";\r\n    mapping[SIM_AttributeTypeName.Capacity] = \"STRCapacity\";\r\n    mapping[\"City\"] = \"STRCITY\";\r\n    mapping[SIM_AttributeTypeName.ConditionExpression] = \"STRCONDITIONEXPRESSION\";\r\n    mapping[\"Cost\"] = \"STRCOST\"; // Delete\r\n    mapping[SIM_AttributeTypeName.CostDriver] = \"STRCostDriver\";\r\n    mapping[\"Country\"] = \"STRCOUNTRY\";\r\n    mapping[SIM_AttributeTypeName.DistributionType] = \"STRDistributionType\";\r\n    mapping[SIM_AttributeTypeName.End] = \"STREnd\";\r\n    mapping[\"FaxNumber\"] = \"STRFAXNUMBER\";\r\n    mapping[\"FirstName\"] = \"STRFIRSTNAME\";\r\n    mapping[SIM_AttributeTypeName.FixedCost] = \"STRFixedCost\";\r\n    mapping[SIM_AttributeTypeName.FlushNumber] = \"STRFlushNumber\";\r\n    mapping[SIM_AttributeTypeName.FlushTime] = \"STRFlushTime\";\r\n    mapping[SIM_AttributeTypeName.Jobs] = \"STRJobs\";\r\n    mapping[\"LastName\"] = \"STRLASTNAME\";\r\n    mapping[SIM_AttributeTypeName.Period] = \"STRPeriod\";\r\n    mapping[\"PhoneNumber\"] = \"STRPHONENUM\";\r\n    mapping[SIM_AttributeTypeName.Priority] = \"STRPriority\";\r\n    mapping[SIM_AttributeTypeName.Probability] = \"STRPROBABILITY\";\r\n    mapping[SIM_AttributeTypeName.Quantity] = \"STRQUANTITY\";\r\n    mapping[SIM_AttributeTypeName.Restart] = \"STRRestart\";\r\n    mapping[SIM_AttributeTypeName.SetupTime] = \"STRSetupTime\";\r\n    mapping[\"State\"] = \"STRSTATES\"; // Delete\r\n    mapping[SIM_AttributeTypeName.Strategy] = \"STRStrategy\";\r\n    mapping[SIM_AttributeTypeName.TransportationTime] = \"STRTRANSPORTATIONTIME\";\r\n    mapping[\"UserID\"] = \"STRUSERID\";\r\n    mapping[SemTalkBaseConstant.SLUserNumber] = \"STRUserNumber\"; \r\n    mapping[SIM_AttributeTypeName.ValueFile] = \"STRVALUEFILE\";\r\n    mapping[SIM_AttributeTypeName.VariableCost] = \"STRVariableCost\";\r\n    mapping[SIM_AttributeTypeName.WaitingTime] = \"STRWaitingTime\";\r\n    mapping[SIM_AttributeTypeName.WorkTime] = \"STRWorkTime\";\r\n    mapping[SIM_AttributeTypeName.WorkTime2] = \"STRWorkTime2\";\r\n    mapping[\"Zip\"] = \"STRZIP\";\r\n    // mapping[\"InitialContent\"] = \"STRInitialContent\";\r\n    mapping[\"InitialContents\"] = \"STRInitialContentS\"; // Delete\r\n\r\n    mapping[SemTalkBaseConstant.SLGeneric] = \"STRGeneric\";\r\n\r\n    for (let x in mapping) {\r\n      const c = ob.FindClass(x);\r\n      if (c) {\r\n        if (c.FindSynonym(lang) === undefined) {\r\n          c.MakeSynonym(sem.getResStr(mapping[x], code), lang);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private static ensureDistributions(sem: IVisioRDFS, h: ISemTalkSystemClass) {\r\n    const base = sem.base;\r\n    let s = base.MakeSystemClass(\"SemTalkDistribution\");\r\n    s.Hide = true;\r\n    s.AddSubclassOf(h);\r\n    let s1 = s.MakeInstance(\"Constant Value\");\r\n    s1.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMCONST\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n    s1.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMCONST\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n    s1.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMCONST\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n    s1.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMCONST\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n    s1.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMCONST\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n    s1.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMCONST\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n    s1.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMCONST\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n\r\n\r\n    let s2 = s.MakeInstance(\"Even distribution\");\r\n    s2.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMEAVEN\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n    s2.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMEAVEN\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n    s2.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMEAVEN\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n    s2.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMEAVEN\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n    s2.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMEAVEN\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n    s2.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMEAVEN\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n    s2.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMEAVEN\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n\r\n    let s3 = s.MakeInstance(\"Normal distribution\");\r\n    s3.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMNORMA\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n    s3.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMNORMA\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n    s3.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMNORMA\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n    s3.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMNORMA\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n    s3.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMNORMA\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n    s3.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMNORMA\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n    s3.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMNORMA\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n\r\n    let s4 = s.MakeInstance(\"Exponential distribution\");\r\n    s4.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMEPONE\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n    s4.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMEPONE\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n    s4.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMEPONE\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n    s4.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMEPONE\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n    s4.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMEPONE\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n    s4.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMEPONE\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n    s4.MakeSynonym(sem.getResStrListener(\"STRBONSIMMMEPONE\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n  }\r\n  private static ensureSimulation(sem: IVisioRDFS, h: ISemTalkSystemClass) {\r\n    const base = sem.base;\r\n\r\n    const SIMGROUP = \"Simulation\";\r\n    const SIMTAB = \"Simulation\";\r\n\r\n    let l = base.MakeSystemClass(SemTalkUIConstant.SemTalkUserTab);\r\n    l.Hide = true;\r\n    l.AddSubclassOf(h);\r\n    {\r\n      let li = base.FindInstance(SIMTAB);\r\n      if (!li) {\r\n        li = l.MakeInstance(SIMTAB);\r\n      }\r\n      li.MakeSynonym(sem.getResStr(\"STRSIMULATION\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n      li.MakeSynonym(sem.getResStr(\"STRSIMULATION\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n      li.MakeSynonym(sem.getResStr(\"STRSIMULATION\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n      li.MakeSynonym(sem.getResStr(\"STRSIMULATION\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n      li.MakeSynonym(sem.getResStr(\"STRSIMULATION\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n      li.MakeSynonym(sem.getResStr(\"STRSIMULATION\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n      li.MakeSynonym(sem.getResStr(\"STRSIMULATION\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n    }\r\n\r\n    // ATTRTYPES\r\n    if (true) {\r\n      let at: ISemTalkAttributeType | null;\r\n\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.CostDriver);\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.Priority) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Integer;\r\n        at.Min = 0;\r\n        at.Max = 10;\r\n        at.Value = 0;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.Strategy) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.Options = [SIM_Strategy.FIFO, SIM_Strategy.LIFO, SIM_Strategy.LONGEST,\r\n        SIM_Strategy.SHORTEST, SIM_Strategy.ANY];\r\n        at.AllowFreeForm = false;\r\n        at.Value = SIM_Strategy.FIFO;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.DistributionType) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.Options = [SIM_Distribution.CONSTANT, SIM_Distribution.EVEN,\r\n        SIM_Distribution.NORMAL, SIM_Distribution.EXPONENTIAL];\r\n        at.AllowFreeForm = false;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.WorkTime) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Duration;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.WorkTime2) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Duration;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.WaitingTime) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Duration;\r\n      }\r\n      base.MakeAttributeType(SIM_AttributeTypeName.Restart);\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.Restart) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Boolean;\r\n        at.Value = true;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.Begin) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Duration;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.End) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Duration;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.Jobs) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Integer;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.Period) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Duration;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.SetupTime) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Duration;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.FixedCost) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Integer;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.VariableCost) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Integer;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.TransportationTime) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Duration;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.Probability) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Duration;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.ConditionExpression) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Symbol;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.InitialContents) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Integer;\r\n        at.MakeSynonym(\"Anfangsinhalt\",SemTalkLanguage.German);\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.FlushNumber) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Duration;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.FlushTime) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Duration;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.InfoDepended) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Boolean;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.IsCopied) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Boolean;\r\n      }\r\n      at = base.FindAttributeType(SIM_AttributeTypeName.Quantity) as ISemTalkAttributeType;\r\n      if (at) {\r\n        at.Group = SIMGROUP;\r\n        at.ValueType = SemTalkValueType.Integer;\r\n      }\r\n    }\r\n\r\n    let f: ISemTalkSystemClass | null;\r\n    let a: ISemTalkAttribute;\r\n\r\n    // ACTIVITY\r\n    {\r\n      let SLACTIVITY = base.GetModelAttribute(Process_ElementName.SLActivity);\r\n      let activityclasses: string[] = [SLACTIVITY, \"Activity\"];\r\n      for (let slact of activityclasses) {\r\n        f = base.FindSystemClass(slact);\r\n        if (f) {\r\n          f.Composeable = true;\r\n          if (f.InstDialog) {\r\n            f.InstDialog.CheckAttachments = true;\r\n            // console.debug(f);\r\n          }\r\n\r\n          a = f.FindAttribute(SIM_AttributeTypeName.InputCondition) as ISemTalkAttribute;\r\n          if (a !== null) {\r\n            a.Group = SIMGROUP;\r\n            a.Options = [SIM_Condition.AND, SIM_Condition.SAND, SIM_Condition.OR];\r\n            a.AllowFreeForm = false;\r\n            a.Value = SIM_Condition.OR;\r\n            a.Weight = 5;\r\n          }\r\n\r\n          a = f.FindAttribute(SIM_AttributeTypeName.OutputCondition) as ISemTalkAttribute;\r\n          if (a !== null) {\r\n            a.Group = SIMGROUP;\r\n            a.Options = [SIM_Condition.AND, SIM_Condition.OR, SIM_Condition.XOR, SIM_Condition.INFO];\r\n            a.AllowFreeForm = false;\r\n            a.Value = SIM_Condition.AND;\r\n            a.Weight = 6;\r\n          }\r\n          a = f.FindAttribute(SIM_AttributeTypeName.WorkTime) as ISemTalkAttribute;\r\n          if (a !== null) {\r\n            a.Group = SIMGROUP;\r\n            a.Weight = 30;\r\n            a.ValueType = SemTalkValueType.Duration;\r\n            a.Value = 1;\r\n          }\r\n          a = f.FindAttribute(SIM_AttributeTypeName.CostDriver) as ISemTalkAttribute;\r\n          if (a !== null) {\r\n            a.Group = SIMGROUP;\r\n            a.Weight = 10;\r\n            // only if there are other simulation attributes\r\n            f.MakeAttribute(SIM_AttributeTypeName.Priority, 0);\r\n            a = f.FindAttribute(SIM_AttributeTypeName.Priority) as ISemTalkAttribute;\r\n            if (a !== null) {\r\n              a.ValueType = SemTalkValueType.Integer;\r\n              a.Value = 0;\r\n              a.Min = 0;\r\n              a.Max = 10;\r\n              a.Group = SIMGROUP;\r\n              a.Weight = 15;\r\n            }\r\n            f.MakeAttribute(SIM_AttributeTypeName.Restart, true);\r\n            if (a !== null) {\r\n              a = f.FindAttribute(SIM_AttributeTypeName.Restart) as ISemTalkAttribute;\r\n              a.ValueType = SemTalkValueType.Boolean;\r\n              a.Group = SIMGROUP;\r\n              a.Weight = 60;\r\n              a.Value = true;\r\n            }\r\n\r\n            a = f.FindAttribute(SIM_AttributeTypeName.Strategy) as ISemTalkAttribute;\r\n            if (a !== null) {\r\n              f.DeleteAttribute(SIM_AttributeTypeName.Strategy);\r\n            }\r\n            a = f.FindAttribute(SIM_AttributeTypeName.DistributionType) as ISemTalkAttribute;\r\n            if (a !== null) {\r\n              a.Options = [SIM_Distribution.CONSTANT, SIM_Distribution.EVEN,\r\n              SIM_Distribution.NORMAL, SIM_Distribution.EXPONENTIAL];\r\n              a.AllowFreeForm = false;\r\n              a.Value = SIM_Distribution.CONSTANT;\r\n              a.Group = SIMGROUP;\r\n              a.Weight = 25;\r\n            }\r\n\r\n            a = f.FindAttribute(SIM_AttributeTypeName.WorkTime2) as ISemTalkAttribute;\r\n            if (a !== null) {\r\n              a.Group = SIMGROUP;\r\n              a.Weight = 40;\r\n              a.ValueType = SemTalkValueType.Duration;\r\n              a.Value = 0;\r\n            }\r\n            a = f.FindAttribute(SIM_AttributeTypeName.WaitingTime) as ISemTalkAttribute;\r\n            if (a !== null) {\r\n              a.Group = SIMGROUP;\r\n              a.Weight = 50;\r\n              a.ValueType = SemTalkValueType.Duration;\r\n              a.Value = 0;\r\n            }\r\n          }\r\n\r\n          if (f.FindAttribute(\"AppPath\") !== null) f.DeleteAttribute(\"AppPath\");\r\n          if (f.FindAttribute(\"_AppParameter\") !== null) f.DeleteAttribute(\"_AppParameter\");\r\n          if (f.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n            f.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n        }\r\n      }\r\n    }\r\n\r\n    // RESOURCE\r\n\r\n    {\r\n      let SLRESOURCE = base.GetModelAttribute(Process_ElementName.SLResource);\r\n      f = base.FindSystemClass(SLRESOURCE);\r\n      if (f) {\r\n        f.Refineable = false;\r\n        if (f.InstDialog) {\r\n          f.InstDialog.CheckClass = true;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Capacity) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 10;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 1;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Strategy) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 20;\r\n          a.Options = [SIM_Strategy.FIFO, SIM_Strategy.LIFO,\r\n          SIM_Strategy.LIFO, SIM_Strategy.SHORTEST, SIM_Strategy.ANY];\r\n          a.AllowFreeForm = false;\r\n          a.Value = SIM_Strategy.FIFO;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.SetupTime) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 30;\r\n          a.ValueType = SemTalkValueType.Duration;\r\n          a.Value = 0;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.FixedCost) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 40;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 0;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.VariableCost) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 50;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 0;\r\n        }\r\n        if (f.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n          f.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n\r\n      }\r\n      f = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLPosition));\r\n      if (f)\r\n        if (f.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n          f.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n      f = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLOrgUnit));\r\n      if (f)\r\n        if (f.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n          f.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n      f = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLPerson));\r\n      if (f)\r\n        if (f.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n          f.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n\r\n      f = base.FindSystemClass(\"Role\");\r\n      if (f)\r\n        if (f.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n          f.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n    }\r\n    // Data Object\r\n    if (true) {\r\n      f = sem.base.FindSystemClass(sem.base.GetModelAttribute(Process_ElementName.SLDataObject));\r\n      if (f) {\r\n        f.Style = \"fillColor=lightyellow;\";\r\n        if (f.InstDialog) f.InstDialog.CheckAttachments = true;\r\n        f.MakeSynonym(sem.getResStr(\"STRDATAOBJECT\", SemTalkLanguageCode.German), SemTalkLanguage.German);\r\n        f.MakeSynonym(sem.getResStr(\"STRDATAOBJECT\", SemTalkLanguageCode.English), SemTalkLanguage.English);\r\n        // f.MakeSynonym(sem.getResStr(\"STRDATAOBJECT\", SemTalkLanguageCode.Spanish), SemTalkLanguage.Spanish);\r\n        f.MakeSynonym(sem.getResStr(\"STRDATAOBJECT\", SemTalkLanguageCode.Japanese), SemTalkLanguage.Japanese);\r\n        f.MakeSynonym(sem.getResStr(\"STRDATAOBJECT\", SemTalkLanguageCode.Russian), SemTalkLanguage.Russian);\r\n        f.MakeSynonym(sem.getResStr(\"STRDATAOBJECT\", SemTalkLanguageCode.Traditional), SemTalkLanguage.Traditional);\r\n        f.MakeSynonym(sem.getResStr(\"STRDATAOBJECT\", SemTalkLanguageCode.Simplified), SemTalkLanguage.Simplified);\r\n      }\r\n      f = base.FindAssociationType(BPMN_AssociationName.dataobject);\r\n      if (f) {\r\n        // f.Style = \"edgeStyle=loopEdgeStyle;shape=flexArrow;dashed=1;endArrow=classic;html=1\";\r\n        f.Style = \"shape=flexArrow;dashed=1;endArrow=classic;html=1;strokeWidth=2;\";\r\n      }\r\n    }\r\n\r\n    //PHYSRESOURCE\r\n\r\n    {\r\n      let SLPHYSRESOURCE = base.GetModelAttribute(Process_ElementName.SLPhysResource);\r\n      f = base.FindSystemClass(SLPHYSRESOURCE);\r\n      if (f) {\r\n        f.Refineable = false;\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Capacity) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 10;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 1;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Strategy) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 20;\r\n          a.Options = [SIM_Strategy.FIFO, SIM_Strategy.LIFO,\r\n          SIM_Strategy.LIFO, SIM_Strategy.SHORTEST, SIM_Strategy.ANY];\r\n          a.AllowFreeForm = false;\r\n          a.Value = SIM_Strategy.FIFO;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.SetupTime) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 30;\r\n          a.ValueType = SemTalkValueType.Duration;\r\n          a.Value = 0;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.FixedCost) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 40;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 0;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.VariableCost) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 50;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 0;\r\n        }\r\n        if (f.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n          f.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n\r\n      }\r\n    }\r\n    // BUFFER\r\n\r\n    {\r\n\r\n      let SLBUFFER = base.GetModelAttribute(Process_ElementName.SLBuffer);\r\n      f = base.FindSystemClass(SLBUFFER);\r\n      if (f) {\r\n        f.Refineable = false;\r\n        if (f.InstDialog) {\r\n          f.InstDialog.CheckClass = true;\r\n        }\r\n        f.Style = \"fillColor=lightgray;resize=0;strokeWidth=2;\";\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Capacity) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 10;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 1;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.FixedCost) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 20;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 0;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.VariableCost) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 30;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 0;\r\n        }\r\n        f.MakeAttribute(SIM_AttributeTypeName.InitialContents, 0);\r\n        a = f.FindAttribute(SIM_AttributeTypeName.InitialContents) as ISemTalkAttribute;\r\n        a.Group = SIMGROUP;\r\n        a.Weight = 40;\r\n        a.ValueType = SemTalkValueType.Integer;\r\n        a.Value = 0;\r\n\r\n        a = f.FindAttribute(SIM_AttributeTypeName.FlushTime) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 50;\r\n          a.ValueType = SemTalkValueType.Duration;\r\n          a.Value = 0;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.FlushNumber) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 60;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 0;\r\n        }\r\n        if (f.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n          f.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n\r\n        const info = base.GetModelAttribute(Process_ElementName.SLInformation);\r\n        if (f.TabSpecDefinitions().FindTabSpec(info) === null) {\r\n          const infotype = base.GetModelAttribute(Process_ElementName.SLInfoType);\r\n          f.TabSpecDefinitions().MakeGenericTabSpec(info, infotype, info, false, false, false, false);\r\n        }\r\n      }\r\n    }\r\n\r\n    // CONTROL\r\n\r\n    {\r\n      let SLCONTROL = base.GetModelAttribute(Process_ElementName.SLControl);\r\n      f = base.FindSystemClass(SLCONTROL);\r\n      if (f) {\r\n        // f.Style = \"edgeStyle=elbowEdgeStyle;elbow=vertical;shape=flexArrow;endArrow=classic;html=1;fillColor=#ffffff;\";\r\n        // f.Style = \"curved=1;endArrow=classic;html=1;fillColor=#ffffff;\";\r\n        f.Style = \"edgeStyle=elbowEdgeStyle;rounded=1;shape=flexArrow;endArrow=classic;html=1;fillColor=#ffffff;strokeWidth=2;\";\r\n        f.Refineable = false;\r\n        a = f.FindAttribute(SIM_AttributeTypeName.TransportationTime) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 10;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 1;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.FixedCost) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 20;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 0;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.VariableCost) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 30;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 0;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Probability) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 40;\r\n          a.ValueType = SemTalkValueType.Symbol;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.ConditionExpression) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 50;\r\n          a.ValueType = SemTalkValueType.Symbol;\r\n        }\r\n        if (f) {\r\n          if (f.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n            f.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n          for (let ss of f.AllSubClasses()) {\r\n            if (base.IsSystemClass(ss)) {\r\n              let sss = ss as ISemTalkSystemClass;\r\n              if (sss.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n                sss.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // USES / INVUSES\r\n\r\n    {\r\n      let SLUSES = base.GetModelAttribute(Process_ElementName.SLUses);\r\n      f = base.FindSystemClass(SLUSES);\r\n      if (f) {\r\n        f.MakeAttribute(SIM_AttributeTypeName.Quantity, 1);\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Quantity) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 30;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 1;\r\n        }\r\n        if (f) {\r\n          if (f.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n            f.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n        }\r\n      }\r\n      let SLINVUSES = base.GetModelAttribute(Process_ElementName.SLInvUses);\r\n      f = base.FindSystemClass(SLINVUSES);\r\n      if (f) {\r\n        f.MakeAttribute(SIM_AttributeTypeName.Quantity, 1);\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Quantity) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 30;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 1;\r\n        }\r\n        if (f) {\r\n          if (f.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n            f.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n        }\r\n      }\r\n    }\r\n\r\n    // ENTRYPOINT / EVENT\r\n\r\n    {\r\n      let SLENTRYPOINT = base.GetModelAttribute(Process_ElementName.SLEntryPoint);\r\n      f = base.FindSystemClass(SLENTRYPOINT);\r\n      if (f === null)\r\n        f = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLEvent));\r\n      if (f) {\r\n        f.Style = \"resize=0;strokeWidth=2;\";\r\n        f.Composeable = true;\r\n        f.Refineable = false;\r\n\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Begin) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 10;\r\n          a.ValueType = SemTalkValueType.Duration;\r\n          a.Value = 0;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.End) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 20;\r\n          a.ValueType = SemTalkValueType.Duration;\r\n          a.Value = 0;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Priority) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 30;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 0;\r\n          a.Min = 0;\r\n          a.Max = 10;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.DistributionType) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Options = [SIM_Distribution.CONSTANT, SIM_Distribution.EVEN,\r\n          SIM_Distribution.NORMAL, SIM_Distribution.EXPONENTIAL];\r\n          a.AllowFreeForm = false;\r\n          a.Value = SIM_Distribution.CONSTANT;\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 40;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Jobs) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 50;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 0;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Period) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 60;\r\n          a.ValueType = SemTalkValueType.Duration;\r\n          a.Value = 0;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.WorkTime) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 70;\r\n          a.ValueType = SemTalkValueType.Duration;\r\n          a.Value = 1;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.WorkTime2) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 70;\r\n          a.ValueType = SemTalkValueType.Duration;\r\n          a.Value = 1;\r\n        }\r\n        if (f.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n          f.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n      }\r\n    }\r\n\r\n    // READ / STORES\r\n    {\r\n      let SLSTORES = base.GetModelAttribute(Process_ElementName.SLStores);\r\n      f = base.FindSystemClass(SLSTORES);\r\n      if (f) {\r\n        a = f.FindAttribute(SIM_AttributeTypeName.InfoDepended) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 10;\r\n          a.ValueType = SemTalkValueType.Boolean;\r\n          a.Value = false;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.FixedCost) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 20;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 0;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Quantity) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 30;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 1;\r\n        }\r\n        if (f) {\r\n          if (f.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n            f.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n        }\r\n        const info = base.GetModelAttribute(Process_ElementName.SLInformation);\r\n        if (f.TabSpecDefinitions().FindTabSpec(info) === null) {\r\n          const infotype = base.GetModelAttribute(Process_ElementName.SLInfoType);\r\n          f.TabSpecDefinitions().MakeGenericTabSpec(info, infotype, info, false, false, false, false);\r\n        }\r\n      }\r\n      let SLREADS = base.GetModelAttribute(Process_ElementName.SLReads);\r\n      f = base.FindSystemClass(SLREADS);\r\n      if (f) {\r\n        a = f.FindAttribute(SIM_AttributeTypeName.IsCopied) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 10;\r\n          a.ValueType = SemTalkValueType.Boolean;\r\n          a.Value = false;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.FixedCost) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 20;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 0;\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Quantity) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Group = SIMGROUP;\r\n          a.Weight = 30;\r\n          a.ValueType = SemTalkValueType.Integer;\r\n          a.Value = 1;\r\n        }\r\n        if (f) {\r\n          if (f.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n            f.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n        }\r\n        const info = base.GetModelAttribute(Process_ElementName.SLInformation);\r\n        if (f.TabSpecDefinitions().FindTabSpec(info) === null) {\r\n          const infotype = base.GetModelAttribute(Process_ElementName.SLInfoType);\r\n          f.TabSpecDefinitions().MakeGenericTabSpec(info, infotype, info, false, false, false, false);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","export const EPC_SHAPES: any = {\r\n  Function: {\r\n    type: 'vertex',\r\n    style: 'shape=epcfunction;html=1;',\r\n  },\r\n  AND: {\r\n    type: 'vertex',\r\n    style: 'shape=epcand;whiteSpace=wrap;resize=0;html=1;',\r\n  },\r\n  Event: {\r\n    type: 'vertex',\r\n    style: 'shape=epcevent;html=1;',\r\n  },\r\n  OR: {\r\n    type: 'vertex',\r\n    style: 'shape=epcor;whiteSpace=wrap;resize=0;html=1;',\r\n  },\r\n  XOR: {\r\n    type: 'vertex',\r\n    style: 'shape=epcxor;whiteSpace=wrap;resize=0;html=1;',\r\n  },\r\n  Position: {\r\n    type: 'vertex',\r\n    style: 'shape=epcposition;html=1;',\r\n  },\r\n  OrgUnit: {\r\n    type: 'vertex',\r\n    style: 'shape=epcorgunit;html=1;',\r\n  },\r\n  Person: {\r\n    type: 'vertex',\r\n    style: 'shape=epcperson;html=1',\r\n  },\r\n  Entitytyp: {\r\n    type: 'vertex',\r\n    style: 'shape=epcentitytyp;html=1;',\r\n  },\r\n  Klasse: {\r\n    type: 'vertex',\r\n    style: 'shape=epcklasse;html=1;',\r\n  },\r\n  Fachbegriff: {\r\n    type: 'vertex',\r\n    style: 'shape=epcfachbegriff;html=1;',\r\n  },\r\n  Comment: {\r\n    type: 'vertex',\r\n    style: 'html=1;',\r\n  },  \r\n  Sachmittel: {\r\n    type: 'vertex',\r\n    style: 'shape=epcsachmittel;html=1;',\r\n  },\r\n  Prozesspfad: {\r\n    type: 'vertex',\r\n    style: 'shape=epcprocesspath;html=1;',\r\n  },\r\n  Kennzahl: {\r\n    type: 'vertex',\r\n    style: 'shape=epckennzahl;html=1;',\r\n  },\r\n  Risiko: {\r\n    type: 'vertex',\r\n    style: 'shape=epcrisiko;html=1;',\r\n  },\r\n  Control: {\r\n    type: 'vertex',\r\n    style: 'shape=epccontrol;html=1;',\r\n  },\r\n  Anwendungssystemtyp: {\r\n    type: 'vertex',\r\n    style: 'shape=epcanwendungssystemtyp;html=1;',\r\n  },\r\n\r\n};\r\n","import { SemTalkMaster} from \"../SemTalkMaster\";\r\nexport const ORGCHART_SHAPES: any = {};\r\nORGCHART_SHAPES[SemTalkMaster.MasterOrgUnit] = {\r\n    type: 'vertex',\r\n    style: 'shape=rectangle;whiteSpace=wrap;resize=0;html=1;strokeWidth=2;',\r\n  };\r\n  ORGCHART_SHAPES[SemTalkMaster.MasterPosition] = {\r\n    type: 'vertex',\r\n    style: 'shape=rectangle;whiteSpace=wrap;resize=0;html=1;strokeWidth=2;',\r\n  };\r\n  ORGCHART_SHAPES[SemTalkMaster.MasterRole] = {\r\n    type: 'vertex',\r\n    style: 'shape=rectangle;whiteSpace=wrap;resize=0;html=1;strokeWidth=2;',\r\n  };\r\n  ORGCHART_SHAPES[SemTalkMaster.MasterPerson] = {\r\n    type: 'vertex',\r\n    style: 'shape=rectangle;whiteSpace=wrap;resize=0;html=1;strokeWidth=2;',\r\n  };\r\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";// Document shape\r\n\r\nfunction EpcFunctionShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(EpcFunctionShape, mxActor);\r\n\r\nEpcFunctionShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.roundrect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nEpcFunctionShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\r\n\tc.fillAndStroke();\r\n};\r\n\r\nmxCellRenderer.registerShape('epcfunction', EpcFunctionShape);\r\n// console.debug(\"EpcFunction Shape registered\");\r\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";// Document shape\r\n\r\nfunction EpcEventShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(EpcEventShape, mxActor);\r\n\r\nEpcEventShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\r\n\tc.translate(x, y);\r\n\t// let rSize = 5;\r\n\r\n\t// c.roundrect(0, 0, w, h, rSize, rSize);\r\n\t// c.fillAndStroke();\r\n\t// c.stroke();\r\n\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\t\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nEpcEventShape.prototype.redrawPath = (c: any, _x: any, _y: any, w: any, h: any) => {\r\n\tc.begin();\r\n\tc.moveTo(0, h * 0.5);\r\n\tc.lineTo(w * 0.1, h);\r\n\tc.lineTo(w * 0.9, h);\r\n\tc.lineTo(w, h * 0.5);\r\n\tc.lineTo(w * 0.9, 0);\r\n\tc.lineTo(w * 0.1, 0);\r\n\tc.lineTo(0, h * 0.5);\r\n\tc.close();\r\n\tc.fillAndStroke();\r\n};\r\n\r\nmxCellRenderer.registerShape('epcevent', EpcEventShape);\r\n// console.debug(\"EpcEvent Shape registered\");\r\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";\r\n\r\nfunction EpcPositionShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(EpcPositionShape, mxActor);\r\n\r\nEpcPositionShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.rect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nEpcPositionShape.prototype.redrawPath = (c: any, _x: any, _y: any, w: any, h: any) => {\r\n\tc.setStrokeWidth(1);\r\n\tc.setDashed(true);\r\n\t// c.setDashPattern(\"1 1\");\r\n\tc.begin();\r\n\tc.moveTo(w * 0.05, h);\r\n\tc.lineTo(w * 0.05, 0);\r\n\tc.close();\r\n\tc.stroke();\r\n};\r\n\r\nmxCellRenderer.registerShape('epcposition', EpcPositionShape);\r\n// console.debug(\"EpcPosition Shape registered\");\r\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";\r\n\r\n\r\nfunction EpcOrgUnitShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(EpcOrgUnitShape, mxActor);\r\n\r\nEpcOrgUnitShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.rect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nEpcOrgUnitShape.prototype.redrawPath = (c: any, _x: any, _y: any, w: any, h: any) => {\r\n\tc.setStrokeWidth(1);\r\n\tc.begin();\r\n\tc.moveTo(w * 0, h * 0.1);\r\n\tc.lineTo(w * 1.0, h * 0.1);\r\n\tc.close();\r\n\tc.stroke();\r\n};\r\n\r\nmxCellRenderer.registerShape('epcorgunit', EpcOrgUnitShape);\r\n// console.debug(\"EpcPosition Shape registered\");\r\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";\r\n\r\nfunction EpcPersonShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(EpcPersonShape, mxActor);\r\n\r\nEpcPersonShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.rect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nEpcPersonShape.prototype.redrawPath = (_c: any, _x: any, _y: any, _w: any, _h: any) => {\r\n\r\n};\r\n\r\nmxCellRenderer.registerShape('epcperson', EpcPersonShape);\r\n// console.debug(\"EpcPerson Shape registered\");\r\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\t// mxActor,\n\tmxShape,\n} from \"mxgraph-js\";// Document shape\n\nfunction EpcANDShape(this: any, bounds: any, fill: any, stroke: any, strokewidth: any) {\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth) ? strokewidth : 1;\n\n}\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(EpcANDShape, mxShape);\n\nEpcANDShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tvar strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tvar strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tvar fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\n\tc.translate(x, y);\n\t//var rSize = 5;\n\tc.ellipse(0, 0, w, h);\n\tc.stroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nEpcANDShape.prototype.redrawPath = (c: any, _x: any, _y: any, w: any, h: any) => {\n\t// h /= 2;\n\t// w /= 2;\n\tlet shp = mxCellRenderer.prototype.getShape('GatewayAndShape');\n\tshp.prototype.redrawPath(c, 0, 0, w, h);\n\tc.fillAndStroke();\n};\n\nmxCellRenderer.registerShape('epcand', EpcANDShape);\n// console.debug(\"AND Shape registered\");\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\t// mxActor,\n\tmxShape,\n} from \"mxgraph-js\";\n\nfunction EpcORShape(this: any, bounds: any, fill: any, stroke: any, strokewidth: any) {\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth) ? strokewidth : 1;\n\n}\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(EpcORShape, mxShape);\n\nEpcORShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tvar strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tvar strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tvar fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\n\tc.translate(x, y);\n\t//var rSize = 5;\n\tc.ellipse(0, 0, w, h);\n\tc.stroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nEpcORShape.prototype.redrawPath = (c: any, _x: any, _y: any, w: any, h: any) => {\n\tc.translate(w * 0.1, h * 0.1);\n\t// let shp = mxCellRenderer.prototype.getShape('GatewayInclusivORShape')\n\t// shp.prototype.redrawPath(c, 0, 0, w/2, h/2);\n\tlet strokeColor = c.state.strokeColor;\n\tlet fillColor = c.state.fillColor;\n\tc.setFillColor(strokeColor);\n\tc.ellipse(0, 0, w * 0.8, h * 0.8);\n\tc.stroke();\n\tc.setFillColor(fillColor);\n\tc.fillAndStroke();\n};\n\nmxCellRenderer.registerShape('epcor', EpcORShape);\n// console.debug(\"OR Shape registered\");\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\t// mxActor,\n\tmxShape,\n} from \"mxgraph-js\";\n\nfunction EpcXORShape(this: any, bounds: any, fill: any, stroke: any, strokewidth: any) {\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth) ? strokewidth : 1;\n\n}\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(EpcXORShape, mxShape);\n\nEpcXORShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tvar strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tvar strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tvar fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\n\tc.translate(x, y);\n\t//var rSize = 5;\n\tc.ellipse(0, 0, w, h);\n\tc.stroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nEpcXORShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\n\tc.fillAndStroke();\n};\n\nmxCellRenderer.registerShape('epcxor', EpcXORShape);\n// console.debug(\"XOR Shape registered\");\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";// Document shape\r\n\r\nfunction EpcEntitytypShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(EpcEntitytypShape, mxActor);\r\n\r\nEpcEntitytypShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.rect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nEpcEntitytypShape.prototype.redrawPath = (c: any, _x: any, _y: any, w: any, h: any) => {\r\n\tc.setStrokeWidth(1);\r\n\tc.begin();\r\n\tc.moveTo(w * 0.05, h);\r\n\tc.lineTo(w * 0.05, 0);\r\n\tc.close();\r\n\tc.stroke();\r\n};\r\n\r\nmxCellRenderer.registerShape('epcentitytyp', EpcEntitytypShape);\r\n// console.debug(\"EpcEntitytyp Shape registered\");\r\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";\r\n\r\nfunction EpcSachmittelShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(EpcSachmittelShape, mxActor);\r\n\r\nEpcSachmittelShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.rect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nEpcSachmittelShape.prototype.redrawPath = (c: any, _x: any, _y: any, w: any, h: any) => {\r\n\tc.setStrokeWidth(1);\r\n\tc.begin();\r\n\tc.moveTo(w * 0.05, h);\r\n\tc.lineTo(w * 0.05, 0);\r\n\tc.close();\r\n\tc.stroke();\r\n};\r\n\r\nmxCellRenderer.registerShape('epcsachmittel', EpcSachmittelShape);\r\n// console.debug(\"EpcSachmittel Shape registered\");\r\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";\r\n\r\nfunction EpcProcessPathShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(EpcProcessPathShape, mxActor);\r\n\r\nEpcProcessPathShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.roundrect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nEpcProcessPathShape.prototype.redrawPath = (c: any, _x: any, _y: any, w: any, h: any) => {\r\n\tc.translate(10, 10);\r\n\tc.begin();\r\n\tc.moveTo(0, h * 0.5);\r\n\tc.lineTo(w * 0.1, h);\r\n\tc.lineTo(w * 0.9, h);\r\n\tc.lineTo(w, h * 0.5);\r\n\tc.lineTo(w * 0.9, 0);\r\n\tc.lineTo(w * 0.1, 0);\r\n\tc.lineTo(0, h * 0.5);\r\n\tc.close();\r\n\tc.fillAndStroke();\r\n};\r\n\r\nmxCellRenderer.registerShape('epcprocesspath', EpcProcessPathShape);\r\n// console.debug(\"EpcProcessPath Shape registered\");\r\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";\r\n\r\nfunction EpcRisikoShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(EpcRisikoShape, mxActor);\r\n\r\nEpcRisikoShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.rect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nEpcRisikoShape.prototype.redrawPath = (c: any, _x: any, _y: any, w: any, h: any) => {\r\n\tc.setStrokeWidth(1);\r\n\tc.begin();\r\n\tc.moveTo(w * 0.05, h);\r\n\tc.lineTo(w * 0.05, 0);\r\n\tc.close();\r\n\tc.stroke();\r\n};\r\n\r\nmxCellRenderer.registerShape('epcrisiko', EpcRisikoShape);\r\n// console.debug(\"EpcRisiko Shape registered\");\r\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";// Document shape\r\n\r\nfunction EpcKennzahlShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(EpcKennzahlShape, mxActor);\r\n\r\nEpcKennzahlShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.rect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nEpcKennzahlShape.prototype.redrawPath = (c: any, _x: any, _y: any, w: any, h: any) => {\r\n\tc.setStrokeWidth(1);\r\n\tc.begin();\r\n\tc.moveTo(w * 0.05, h);\r\n\tc.lineTo(w * 0.05, 0);\r\n\tc.close();\r\n\tc.stroke();\r\n};\r\n\r\nmxCellRenderer.registerShape('epckennzahl', EpcKennzahlShape);\r\n// console.debug(\"EpcKennzahl Shape registered\");\r\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";// Document shape\r\n\r\nfunction EpcAnwendungssystemtypShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(EpcAnwendungssystemtypShape, mxActor);\r\n\r\nEpcAnwendungssystemtypShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.rect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nEpcAnwendungssystemtypShape.prototype.redrawPath = (c: any, _x: any, _y: any, w: any, h: any) => {\r\n\tc.setStrokeWidth(1);\r\n\tc.begin();\r\n\tc.moveTo(w * 0.05, h);\r\n\tc.lineTo(w * 0.05, 0);\r\n\tc.close();\r\n\tc.stroke();\r\n};\r\n\r\nmxCellRenderer.registerShape('epcAnwendungssystemtyp', EpcAnwendungssystemtypShape);\r\n// console.debug(\"EpcAnwendungssystemtyp Shape registered\");\r\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";// Document shape\r\n\r\nfunction EpcKlasseShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(EpcKlasseShape, mxActor);\r\n\r\nEpcKlasseShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.rect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nEpcKlasseShape.prototype.redrawPath = (c: any, _x: any, _y: any, w: any, h: any) => {\r\n\tc.setStrokeWidth(1);\r\n\tc.begin();\r\n\tc.moveTo(w * 0, h * 0.95);\r\n\tc.lineTo(w * 1, h * 0.95);\r\n\tc.moveTo(w * 0, h * 0.9);\r\n\tc.lineTo(w * 1, h * 0.9);\r\n\tc.close();\r\n\tc.stroke();\r\n};\r\n\r\nmxCellRenderer.registerShape('epcklasse', EpcKlasseShape);\r\n// console.debug(\"EpcKlasse Shape registered\");\r\n","import { SemTalkStencil } from \"../../visiordfsinterface\";\r\nexport const EPC_STENCIL0: SemTalkStencil = [\r\n  {\r\n    name: 'Swimlane',\r\n    key: 'swimlane',\r\n    logo: '/images/symbols/Pool_Lane.png',\r\n    width: 600,\r\n    height: 120,\r\n    type: \"general\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Function',\r\n    key: 'Function',\r\n    logo: '/images/stencils/epc-masters/Function.svg',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"epc\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Event',\r\n    key: 'Event',\r\n    logo: '/images/stencils/epc-masters/Event.svg',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"epc\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'XOR',\r\n    key: 'XOR',\r\n    logo: '/images/stencils/epc-masters/XOR.svg',\r\n    width: 40,\r\n    height: 40,\r\n    type: \"epc\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'AND',\r\n    key: 'AND',\r\n    logo: '/images/stencils/epc-masters/AND.svg',\r\n    width: 40,\r\n    height: 40,\r\n    type: \"epc\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'OR',\r\n    key: 'OR',\r\n    logo: '/images/stencils/epc-masters/OR.svg',\r\n    width: 40,\r\n    height: 40,\r\n    type: \"epc\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Stelle',\r\n    key: 'Position',\r\n    logo: '/images/stencils/epc-masters/Stelle.svg',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"epc\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Organisationseinheit',\r\n    key: 'OrgUnit',\r\n    logo: '/images/stencils/epc-masters/OrgUnit.svg',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"epc\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Person',\r\n    key: 'Person',\r\n    logo: '/images/stencils/epc-masters/Person.svg',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"epc\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Comment',\r\n    key: 'Comment',\r\n    logo: '/images/symbols/Comment.png',\r\n    width: 60,\r\n    height: 60,\r\n    type: \"epc\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Entitytyp',\r\n    key: 'Entitytyp',\r\n    logo: '/images/stencils/epc-masters/Entitytyp.svg',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"epc\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Klasse',\r\n    key: 'Klasse',\r\n    logo: '/images/stencils/epc-masters/Class.svg',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"epc\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Fachbegriff',\r\n    key: 'Fachbegriff',\r\n    logo: '/images/stencils/epc-masters/Fachbegriff.svg',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"epc\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Service',\r\n    key: 'datastore',\r\n    logo: '/images/system.svg',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"svg\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Informationsträger',\r\n    key: 'Document',\r\n    logo: '/images/stencils/epc-masters/Informationsträger.svg',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"general\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Wissenskategorie',\r\n    key: 'Wissenskategorie',\r\n    logo: '/images/stencils/epc-masters/Wissenskategorie.svg',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"image\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Prozesspfad',\r\n    key: 'Prozesspfad',\r\n    logo: '/images/stencils/epc-masters/Prozesspfad.svg',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"epc\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Sachmittel',\r\n    key: 'Sachmittel',\r\n    logo: '/images/stencils/epc-masters/Allgemeine_Ressource.svg',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"epc\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  // {\r\n  //   name: 'Kennzahl',\r\n  //   key: 'Kennzahl',\r\n  //   logo: '/images/stencils/epc-masters/Kennzahl.svg',\r\n  //   width: 80,\r\n  //   height: 60,\r\n  //   type: \"epc\",\r\n    // hidden: false,\r\n    // label: undefined\r\n  // },\r\n  // {\r\n  //   name: 'Risiko',\r\n  //   key: 'Risiko',\r\n  //   logo: '/images/stencils/epc-masters/Risiko.svg',\r\n  //   width: 80,\r\n  //   height: 60,\r\n  //   type: \"epc\"\r\n  //   type: \"epc\",\r\n  // hidden: false,\r\n  // label: undefined\r\n// },\r\n  // {\r\n  //   name: 'Anwendungssystemtyp',\r\n  //   key: 'Anwendungssystemtyp',\r\n  //   logo: '/images/stencils/epc-masters/Anwendungssystemtyp.svg',\r\n  //   width: 80,\r\n  //   height: 60,\r\n  //   type: \"epc\"\r\n  //   type: \"epc\",\r\n  // hidden: false,\r\n  // label: undefined\r\n// }\r\n\r\n\r\n\r\n];\r\n","// import { SemTalkBaseConstant } from \"../tbase/Interface\";\r\nimport { SemTalkMaster } from \"../SemTalkMaster\";\r\nimport { SemTalkStencil } from \"./visiordfsinterface\";\r\nexport const ORGCHART_STENCIL: SemTalkStencil = [\r\n     {\r\n      name: SemTalkMaster.MasterOrgUnit,\r\n      key: SemTalkMaster.MasterOrgUnit,\r\n      logo: '/images/stencils/epc-masters/OrgUnit.svg',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"org\",\r\n      label: undefined,\r\n      hidden: false\r\n    },\r\n    {\r\n      name: SemTalkMaster.MasterPosition,\r\n      key: SemTalkMaster.MasterPosition,\r\n      logo: '/images/stencils/epc-masters/Stelle.svg',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"org\",\r\n      label: undefined,\r\n      hidden: false\r\n    },\r\n    // {\r\n    //   name: SemTalkMaster.MasterRole,\r\n    //   key: SemTalkMaster.MasterRole,\r\n    //   logo: '/images/stencils/epc-masters/Personentyp.svg',\r\n    //   width: 80,\r\n    //   height: 60,\r\n    //   type: \"org\",\r\n    //   label: \"STRRole\",\r\n    //   hidden: false\r\n    // },\r\n    {\r\n      name: SemTalkMaster.MasterPerson,\r\n      key: SemTalkMaster.MasterPerson,\r\n      logo: '/images/stencils/epc-masters/Person.svg',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"org\",\r\n      label: undefined,\r\n      hidden: false\r\n    },\r\n    {\r\n      name: 'Connector',\r\n      key: 'Connector',\r\n      hidden: true,\r\n      logo: '/images/symbols/connect.gif',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"general\",\r\n      label: \"Connector\"\r\n    },\r\n    {\r\n      name: 'Property',\r\n      key: 'Property',\r\n      hidden: true,\r\n      logo: '/images/symbols/connect.gif',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"general\",\r\n      label: \"Property\"\r\n    }\r\n  ];","/* eslint-disable no-lone-blocks */\r\nimport {\r\n  ISemTalkSystemClass,\r\n  ISemTalkObject,\r\n  ILabelSpec,\r\n\r\n  // ISemTalkAttribute,\r\n  // ISemTalkAttributeType,\r\n  // SemTalkValueType,\r\n  IObjectBase,\r\n  SemTalkLanguage,\r\n  SemTalkLanguageCode,\r\n  SemTalkBaseConstant,\r\n  ISemTalkDiagramType\r\n} from '../../../tbase/Interface';\r\nimport { Process_Subtask } from '../../procsubtask';\r\nimport { IVisioRDFS, SemTalkStencil } from '../../visiordfsinterface';\r\n// import { ITSEditor } from '../../Interface';\r\nimport { Process_ElementName, SIM_AttributeTypeName } from '../../processInterface';\r\nimport { EPC_ElementName, EPC_AssociationName, EPC_DiagramTypeName } from './epcinterface';\r\nimport { EPC_SHAPES } from './epc-stencil';\r\nimport { ORGCHART_SHAPES } from '../../org-stencil';\r\nimport './shapes/index';\r\nimport { EPC_STENCIL0 } from './Stencil_EPC';\r\nimport { ORGCHART_STENCIL } from '../../Stencil_ORGCHART';\r\nimport { SemTalkMaster } from '../../../SemTalkMaster';\r\n\r\nexport class EPC_Subtask extends Process_Subtask {\r\n  // public static stencil: SemTalkStencil = [];\r\n  public static init(sem: IVisioRDFS) {\r\n    super.init(sem);\r\n\r\n    let qs_super = sem.getOverridable(\"quickShapes\");\r\n    sem.quickShapes = (oid: number, stencil: any): any[] => {\r\n      const ob = sem.base;\r\n      let targets: string[] = [];\r\n      const badlist = [SemTalkBaseConstant.SLComment, SemTalkBaseConstant.SLSwimlane,\r\n      ob.GetModelAttribute(Process_ElementName.SLDataObject)];\r\n      const src = ob.FindObjectByID(oid);\r\n      if (src) {\r\n        let sc: ISemTalkObject | null = src.SystemClass();\r\n        if (sc === null) sc = src;\r\n        if (sc && badlist.indexOf(sc.ObjectName) < 0) {\r\n          switch (sc.ObjectName) {\r\n            case ob.GetModelAttribute(Process_ElementName.SLActivity): {\r\n              targets.push(ob.GetModelAttribute(Process_ElementName.SLEvent));\r\n              targets.push(ob.GetModelAttribute(Process_ElementName.SLActivity));\r\n              targets.push(\"XOR\");\r\n              targets.push(\"AND\");\r\n              targets.push(\"OR\");\r\n              targets.push(ob.GetModelAttribute(Process_ElementName.SLDataObject));\r\n              targets.push(\"Connector\");\r\n              break;\r\n            }\r\n            case ob.GetModelAttribute(Process_ElementName.SLEvent): {\r\n              targets.push(ob.GetModelAttribute(Process_ElementName.SLActivity));\r\n              targets.push(ob.GetModelAttribute(Process_ElementName.SLEvent));\r\n              targets.push(\"XOR\");\r\n              targets.push(\"AND\");\r\n              targets.push(\"OR\");\r\n              targets.push(ob.GetModelAttribute(Process_ElementName.SLDataObject));\r\n              targets.push(\"Connector\");\r\n              break;\r\n            }\r\n            case \"OR\":\r\n            case \"AND\":\r\n            case \"XOR\": {\r\n              targets.push(ob.GetModelAttribute(Process_ElementName.SLActivity));\r\n              targets.push(ob.GetModelAttribute(Process_ElementName.SLEvent));\r\n              targets.push(\"XOR\");\r\n              targets.push(\"AND\");\r\n              break;\r\n            }\r\n            default: {\r\n              return qs_super(oid, stencil);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      let masters: any[] = [];\r\n      for (let key of targets)\r\n        for (let m of stencil) {\r\n          if (m.name === key)\r\n            masters.push(m);\r\n        }\r\n      return masters;\r\n    };\r\n\r\n    // let mn_super = sem.getOverridable(\"masterName\");\r\n    // sem.masterName = (key: string): string => {\r\n    //   if (sem.masters)\r\n    //     for (let m of sem.masters) {\r\n    //       if (m.key === key) {\r\n    //         return m.name;\r\n    //       }\r\n    //       switch (key) {\r\n    //         case \"Role\":\r\n    //           return \"Personentyp\";\r\n    //       }\r\n    //     }\r\n    //   return mn_super(key);\r\n    // };\r\n\r\n    let gs_super = sem.getOverridable(\"GetShapeStyle\");\r\n    sem.GetShapeStyle = (key: string, shapeType: string): { style: string, isedge: boolean } => {\r\n      let shapeStyle = key;\r\n      let isedge: boolean = false;\r\n      switch (shapeType) {\r\n        case 'epc': {\r\n          if (EPC_SHAPES[key]) {\r\n            if (EPC_SHAPES[key].type === 'edge') {\r\n              isedge = true;\r\n            }\r\n            shapeStyle = EPC_SHAPES[key].style;\r\n          }\r\n          break;\r\n        }\r\n        case 'org': {\r\n          if (ORGCHART_SHAPES[key]) {\r\n            if (ORGCHART_SHAPES[key].type === 'edge') {\r\n              isedge = true;\r\n            }\r\n            shapeStyle = ORGCHART_SHAPES[key].style;\r\n          }\r\n          break;\r\n        }\r\n        default: {\r\n          return gs_super(key, shapeType);\r\n        }\r\n      }\r\n      return { style: shapeStyle, isedge: isedge };\r\n    };\r\n\r\n    // let uls_super = sem.getOverridable(\"updateLabelStyle\");\r\n    sem.updateLabelStyle = (obj: ISemTalkObject, lsp: ILabelSpec, style: string): string => {\r\n      let lbl = obj.SystemClass()?.ID2NameNsp();\r\n      if (lsp.newtxt === lbl) {\r\n        lsp.newtxt = \"\";\r\n      }\r\n      if (lsp.newtxt0 === lbl) {\r\n        lsp.newtxt0 = \"\";\r\n      }\r\n      return style;\r\n    };\r\n\r\n    sem.initStencil = async (\r\n      dtype: ISemTalkDiagramType,\r\n      _stencil: string, _sprops: any, _extended: boolean,\r\n      _loadStencil: (template: string, url: string, spinterface: any) => Promise<SemTalkStencil>) => {\r\n      let stencil: SemTalkStencil = [];\r\n      let bas = dtype.ObjectBase; \r\n      switch (dtype.ObjectName) {\r\n        case bas.GetModelAttribute(Process_ElementName.SLProc): {\r\n          stencil.push(...EPC_STENCIL0);\r\n          break;\r\n        }\r\n        case bas.GetModelAttribute(Process_ElementName.SLOrgChart): {\r\n          stencil.push(...ORGCHART_STENCIL);\r\n          for (let mst of stencil) {\r\n            switch (mst[\"name\"]) {\r\n              case SemTalkMaster.MasterOrgUnit: {\r\n                let ou = dtype.ObjectBase.FindClass(bas.GetModelAttribute(Process_ElementName.SLOrgUnit));\r\n                if (ou) {\r\n                  mst[\"name\"]=ou.ObjectName;\r\n                  mst[\"key\"]=ou.ObjectName;\r\n                }\r\n                break;\r\n              }\r\n              case SemTalkMaster.MasterPosition: {\r\n                let ou = dtype.ObjectBase.FindClass(bas.GetModelAttribute(Process_ElementName.SLPosition));\r\n                if (ou) {\r\n                  mst[\"name\"]=ou.ObjectName;\r\n                  mst[\"key\"]=ou.ObjectName;\r\n                }\r\n                break;\r\n              }\r\n              case SemTalkMaster.MasterPerson: {\r\n                let ou = dtype.ObjectBase.FindClass(bas.GetModelAttribute(Process_ElementName.SLPerson));\r\n                if (ou) {\r\n                  mst[\"name\"]=ou.ObjectName;\r\n                  mst[\"key\"]=ou.ObjectName;\r\n                }\r\n                break;\r\n              }            }\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n      return stencil;\r\n    };\r\n  }\r\n  public static patch(sem: IVisioRDFS) {\r\n    super.patch(sem);\r\n    const base = sem.base;\r\n    sem.horizontal = true;\r\n    console.log(\"EPC_Subtask\");\r\n\r\n\r\n    this.patchEPCMetaModel(base);\r\n    this.patchEPCChinese(sem, SemTalkLanguage.Simplified, SemTalkLanguageCode.Simplified);\r\n    this.patchEPCChinese(sem, SemTalkLanguage.Traditional, SemTalkLanguageCode.Traditional);\r\n  }\r\n\r\n  private static patchEPCMetaModel(base: IObjectBase) {\r\n\r\n    base.SetModelAttribute(Process_ElementName.SLOrgChart, \"Organigramm\");\r\n\r\n    const SIMGROUP = \"Simulation\";\r\n    const SIMTAB = \"Simulation\";\r\n\r\n\r\n    let cl = base.FindClass(\"Table\");\r\n    if (cl !== null) cl.Delete();\r\n    cl = base.FindClass(\"Cluster/Datenmodell\");\r\n    if (cl !== null) cl.Delete();\r\n\r\n    let sub = base.FindAssociationType(\"subtask\");\r\n    if (sub != null) sub.Delete();\r\n    let sup = base.FindAssociationType(\"ist übergeordnet\");\r\n    if (sup != null) sup.Delete();\r\n\r\n\r\n    const dobj = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLDataObject));\r\n    if (dobj)\r\n      for (let dotype of dobj.SubClasses()) {\r\n        if (base.IsSystemClass(dotype)) {\r\n          const dos = dotype as ISemTalkSystemClass;\r\n          if (dos.Labels().length === 0) {\r\n            dos.MakeLabel(base.GetModelAttribute(Process_ElementName.SLInfoType) + \"{ Group\", \"\");\r\n          }\r\n        }\r\n      }\r\n    const cfobj = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLControl));\r\n    if (cfobj)\r\n      for (let cftype of cfobj.SubClasses()) {\r\n        const dos = cftype as ISemTalkSystemClass;\r\n        dos.Style = \"edgeStyle=orthogonalEdgeStyle;rounded=1;\";\r\n        for (let lbl of dos.Labels()) {\r\n          if (lbl.Text === SIM_AttributeTypeName.Probability + \"{ Group\") {\r\n            lbl.Delete();\r\n          }\r\n        }\r\n      }\r\n\r\n    let f: ISemTalkSystemClass | null;\r\n    // let a: ISemTalkAttribute;\r\n    // EVENT\r\n    {\r\n      f = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLEvent));\r\n      if (f) {\r\n        f.Composeable = true;\r\n        f.Style = \"shape=epcevent;whiteSpace=wrap;fillColor=pink;resize=0;strokeWidth=2;strokeColor=red;\";\r\n        // f.Style = \"fillColor=lightgreen;verticalLabelPosition=bottom;verticalAlign=top;resize=0;strokeWidth=2;\";\r\n        f.Refineable = false;\r\n      }\r\n    }\r\n\r\n    // ACTIVITY\r\n    {\r\n      let SLACTIVITY = base.GetModelAttribute(Process_ElementName.SLActivity);\r\n      let activityclasses: string[] = [SLACTIVITY];\r\n      for (let slact of activityclasses) {\r\n        f = base.FindSystemClass(slact);\r\n        if (f) {\r\n          f.Style = \"shape=epcfunction;whiteSpace=wrap;rounded=1;fillColor=lightgreen;resize=0;strokeWidth=2;strokeColor=green;\";\r\n          f.Refineable = true;\r\n          let t = f.TabSpecDefinitions().FindTabSpec(\"SequenceID\");\r\n          if (t !== null) t.Delete();\r\n          t = f.TabSpecDefinitions().FindTabSpec(\"SAProle\");\r\n          if (t !== null) t.Delete();\r\n          t = f.TabSpecDefinitions().FindTabSpec(\"CompositeRole\");\r\n          if (t !== null) t.Delete();\r\n\r\n          // if (f.FindTabSpec(res) === null)\r\n          // f.TabSpecDefinitions().MakeGenericTabSpec(res, use, res, true, false, false, false);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Personentyp\r\n    if (true) {\r\n      f = base.FindSystemClass(EPC_ElementName.Personentyp);\r\n      if (f) {\r\n        f.Style = 'shape=epcposition;rounded=0;whiteSpace=wrap;resize=0;html=1;fillColor=lightyellow;strokeWidth=2;';\r\n        f.Refineable = false;\r\n        if (f.TabSpecDefinitions().FindTabSpec(SIMTAB) === null)\r\n          f.TabSpecDefinitions().MakeGenericAttributeTabSpec(SIMTAB, SIMGROUP, [], false);\r\n      }\r\n    }\r\n    {\r\n      f = base.FindSystemClass(EPC_ElementName.Service);\r\n      if (f) {\r\n        f.Style = 'shape=datastore;whiteSpace=wrap;resize=1;html=1;fillColor=white;strokeWidth=2;';\r\n      }\r\n      f = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLPosition));\r\n      if (f) {\r\n        f.Style = 'shape=epcposition;rounded=0;whiteSpace=wrap;resize=0;html=1;fillColor=lightyellow;strokeWidth=2;';\r\n      }\r\n      f = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLOrgUnit));\r\n      if (f) {\r\n        f.Style = 'shape=epcorgunit;rounded=0;whiteSpace=wrap;resize=0;html=1;fillColor=lightyellow;strokeWidth=2;';\r\n      }\r\n      f = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLPerson));\r\n      if (f) {\r\n        f.Style = 'shape=epcperson;rounded=0;whiteSpace=wrap;resize=0;html=1;fillColor=lightyellow;strokeWidth=2;';\r\n      }\r\n      f = base.FindSystemClass(EPC_ElementName.Entitytyp);\r\n      if (f) {\r\n        f.Style = 'shape=epcentitytyp;rounded=0;whiteSpace=wrap;resize=0;html=1;fillColor=#00FFFF;strokeWidth=2;';\r\n      }\r\n      f = base.FindSystemClass(EPC_ElementName.Class);\r\n      if (f) {\r\n        f.Style = 'shape=epcklasse;rounded=0;whiteSpace=wrap;resize=0;html=1;fillColor=#00FFFF;strokeWidth=2;';\r\n      }\r\n      f = base.FindSystemClass(EPC_ElementName.Fachbegriff);\r\n      if (f) {\r\n        f.Style = 'shape=epcfachbegriff;rounded=0;whiteSpace=wrap;resize=0;html=1;fillColor=#729FDC;strokeWidth=2;';\r\n      }\r\n      f = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLResource));\r\n      if (f) {\r\n        f.Style = 'shape=epcsachmittel;rounded=0;whiteSpace=wrap;resize=0;html=1;fillColor=#FF6600;strokeWidth=2;';\r\n      }\r\n      f = base.FindSystemClass(EPC_ElementName.Prozesspfad);\r\n      if (f) {\r\n        f.Style = 'shape=epcprocesspath;rounded=0;whiteSpace=wrap;resize=0;html=1;fillColor=white;strokeWidth=2;';\r\n      }\r\n      f = base.FindSystemClass(EPC_ElementName.Kennzahl);\r\n      if (f) {\r\n        f.Style = 'shape=epckennzahl;rounded=0;whiteSpace=wrap;resize=0;html=1;fillColor=#D9D9A6;strokeWidth=2;';\r\n      }\r\n      f = base.FindSystemClass(EPC_ElementName.Risiko);\r\n      if (f) {\r\n        f.Style = 'shape=epcrisiko;rounded=0;whiteSpace=wrap;resize=0;html=1;fillColor=#FF3366;strokeWidth=2;';\r\n      }\r\n      f = base.FindSystemClass(EPC_ElementName.Control);\r\n      if (f) {\r\n        f.Style = 'shape=epccontrol;rounded=0;whiteSpace=wrap;resize=0;html=1;fillColor=#FF6666;strokeWidth=2;';\r\n      }\r\n      f = base.FindSystemClass(EPC_ElementName.Anwendungssystemtyp);\r\n      if (f) {\r\n        f.Style = 'shape=epcanwendungssystemtyp;rounded=0;whiteSpace=wrap;resize=0;html=1;fillColor=#00FFFF;strokeWidth=2;';\r\n      }\r\n    }\r\n  }\r\n\r\n  private static patchEPCChinese(sem: IVisioRDFS, lang: SemTalkLanguage, code: SemTalkLanguageCode) {\r\n    let ob = sem.base;\r\n    let mapping: { [code: string]: string } = {};\r\n\r\n    // basic drawing elements\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLActivity)] = \"STRFunction\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLEvent)] = \"STREvent\";\r\n    mapping[EPC_ElementName.XOR] = \"STRXOR\";\r\n    mapping[EPC_ElementName.AND] = \"STRAND\";\r\n    mapping[EPC_ElementName.OR] = \"STROR\";\r\n    // mapping[Process_ElementName.Swimlane] = \"STRSwimlane\";\r\n\r\n    // extended drawing elements\r\n    // mapping[ob.GetModelAttribute(Process_ElementName.SLPosition)] = \"STRPosition\"; // x difference between Position and Stelle?\r\n    // mapping[ob.GetModelAttribute(Process_ElementName.SLOrgUnit)] = \"STROrgUnit\"; // x\r\n    // mapping[ob.GetModelAttribute(Process_ElementName.SLPerson)] = \"STRPerson\";\r\n    // mapping[ob.GetModelAttribute(ModelAttribute.SLComment)] = \"STRCOMMENT\";\r\n    mapping[EPC_ElementName.Entitytyp] = \"STREntitytyp\";\r\n    mapping[EPC_ElementName.Class] = \"STRClass\"; // x\r\n    mapping[EPC_ElementName.Fachbegriff] = \"STRFachbegriff\";\r\n    mapping[EPC_ElementName.Service] = \"STRService\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLBuffer)] = \"STRInformationsträger\";\r\n    mapping[EPC_ElementName.Wissenskategorie] = \"STRWissenskategorie\";\r\n    mapping[EPC_ElementName.Prozesspfad] = \"STRProcesspfad\"; // x\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLPhysResource)] = \"STRSachmittel\"; // x\r\n\r\n    // epc objects\r\n    // mapping[\"epc#Class\"] = \"STRClass\";\r\n    // mapping[\"Stelle\"] = \"STRStelle\";\r\n    // mapping[\"Allgemeine Ressource\"] = \"STRAllgemeineRessource\";\r\n    // mapping[\"Breakpoint\"] = \"STRBreakpoint\";\r\n    mapping[EPC_ElementName.HumanRes] = \"STRHumanResource\";\r\n    mapping[EPC_ElementName.Operator] = \"STROperator\";\r\n    mapping[EPC_ElementName.Transaction] = \"STRTransaction\";\r\n    mapping[EPC_ElementName.Package] = \"STRPackage\";\r\n    // mapping[\"Manager\"] = \"STRManager\";\r\n    // mapping[\"Organisationseinheit\"] = \"STROrganisationseinheit\";\r\n    mapping[EPC_ElementName.DataObject] = \"STRDataObject\";\r\n    // mapping[\"Stelle\"] = \"STRStelle\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLInformation)] = \"STRObject\";\r\n    mapping[EPC_ElementName.EPCObject] = \"STREPCOBJECT\";\r\n\r\n    // epc associations\r\n    // mapping[ob.GetModelAttribute(\"SLMessageFlow\")] = \"STRMessageflow\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLControl)] = \"STRSequenceflow\"; // Control Flow = Sequence Flow?\r\n    mapping[EPC_AssociationName.aktiviert] = \"STRaktiviert\";\r\n    mapping[EPC_AssociationName.erzeugt] = \"STRerzeugt\";\r\n    mapping[EPC_AssociationName.führtaus] = \"STRfuehrtaus\";\r\n    mapping[EPC_AssociationName.führtzu] = \"STRfuehrtzu\";\r\n    // mapping[\"has manager\"] = \"STRhasmanager\";\r\n    // mapping[\"has offtime\"] = \"STRHASOFFTIME\";\r\n    mapping[EPC_AssociationName.hasTransaction] = \"STRhasTransaction\";\r\n    mapping[EPC_AssociationName.hasOperation] = \"STRhasOperation\";\r\n    mapping[EPC_AssociationName.hasOutput] = \"STRhatOutput\";\r\n    // mapping[ob.GetModelAttribute(Process_ElementName.SLInfoType)] = \"STRINFOTYPE\";\r\n    mapping[EPC_AssociationName.istInputfür] = \"STRistInputfuer\";\r\n    mapping[EPC_AssociationName.istVorgängervon] = \"STRistVorgaengervon\";\r\n    mapping[EPC_AssociationName.liefertInputfür] = \"STRliefertInputfuer\";\r\n    // mapping[\"member\"] = \"STRMEMBER\";\r\n    mapping[EPC_AssociationName.MessageType] = \"STRMESSAGETYPE\";\r\n    // mapping[\"reports to\"] = \"STRREPORTSTO\";\r\n    // mapping[\"superior of\"] = \"STRSUPERIOROF\";\r\n    mapping[EPC_AssociationName.suppliesOutputfor] = \"STRSUPPOUTPUTFOR\";\r\n    // mapping[\"uses hum.resource\"] = \"STRUSES\";\r\n    mapping[EPC_AssociationName.verknüpft] = \"STRverknuepft\";\r\n    mapping[EPC_AssociationName.wirdausgewertetvon] = \"STRwirdausgewertetvon\";\r\n    mapping[EPC_AssociationName.wirdbenötigtfür] = \"STRwirdbenoetigtfuer\";\r\n    mapping[EPC_AssociationName.wirdverwendetfür] = \"STRwirdverwendetfuer\";\r\n    mapping[EPC_AssociationName.wirdverwendetvon] = \"STRwirdverwendetvon\";\r\n\r\n    // epc attributes\r\n    // mapping[\"active\"] = \"STRACTIVE\";\r\n    // mapping[\"InitialContents\"] = \"STRInitialContentS\";\r\n    // mapping[\"Restart\"] = \"STRRestart\";\r\n    // mapping[\"_AppParameter\"] = \"STR_AppParameter\";\r\n    // mapping[\"_Attachments\"] = \"STR_Attachments\";\r\n    // mapping[\"Address\"] = \"STRADDRESS\";\r\n    // mapping[\"AllocateDynamic\"] = \"STRALLOCATEDYNAMIC\";\r\n    // // mapping[\"AppPath\"] = \"STRAPPPATH\";\r\n    // mapping[\"AvailabilityDaily\"] = \"STRAvailabilityDaily\";\r\n    // mapping[\"AvailabilityOne\"] = \"STRAvailabilityOne\";\r\n    // mapping[\"Begin\"] = \"STRBegin\";\r\n    // mapping[\"Capacity\"] = \"STRCapacity\";\r\n    // mapping[\"City\"] = \"STRCITY\";\r\n    // // mapping[\"Competence\"] = \"STRCOMPETENCE\";\r\n    // mapping[\"ConditionExpression\"] = \"STRCONDITIONEXPRESSION\";\r\n    // // mapping[\"ConnectedObjects\"] = \"STRConnectedObjects\";\r\n    // mapping[\"CostDriver\"] = \"STRCostDriver\";\r\n    // mapping[\"Country\"] = \"STRCOUNTRY\";\r\n    // mapping[\"DistributionParam\"] = \"STRDISTRIBPARAMETER\";\r\n    // mapping[\"DistributionType\"] = \"STRDistributionType\";\r\n    // mapping[\"End\"] = \"STREnd\";\r\n    // mapping[\"FaxNumber\"] = \"STRFAXNUMBER\";\r\n    // mapping[\"FirstName\"] = \"STRFIRSTNAME\";\r\n    // mapping[\"FixedCost\"] = \"STRFixedCost\";\r\n    // mapping[\"FlushNumber\"] = \"STRFlushNumber\";\r\n    // mapping[\"FlushTime\"] = \"STRFlushTime\";\r\n    // mapping[\"From\"] = \"STRFROM\";\r\n    // mapping[\"GraphicsFile\"] = \"STRGRAPHICSFILE\";\r\n    // mapping[\"has task\"] = \"STRHASTASK\";\r\n    // mapping[\"InfoDepended\"] = \"STRINFODEPENDED\";\r\n    // // mapping[\"InformationClass\"] = \"STRINFOCLASS\";\r\n    // mapping[\"InitialNumber\"] = \"STRINITNUM\";\r\n    // mapping[\"InputCondition\"] = \"STRINPUTCONDITION\";\r\n    // mapping[\"IsAutomatic\"] = \"STRISAUTOMATIC\";\r\n    // mapping[\"IsCopied\"] = \"STRISCOPIED\";\r\n    // mapping[\"Jobs\"] = \"STRJobs\";\r\n    // mapping[\"LastName\"] = \"STRLASTNAME\";\r\n    // mapping[\"mappedto\"] = \"STRMAPPEDTO\";\r\n    // mapping[\"Number of entries\"] = \"STRNUMOFENTRIES\";\r\n    // mapping[\"OutputCondition\"] = \"STROUTPUTCONDITION\";\r\n    // mapping[\"Period\"] = \"STRPeriod\";\r\n    // mapping[\"PeriodBeginn\"] = \"STRPERIODBEGIN\";\r\n    // mapping[\"PhoneNumber\"] = \"STRPHONENUM\";\r\n    // mapping[\"Probability\"] = \"STRPROBABILITY\";\r\n    // mapping[\"Quantity\"] = \"STRQUANTITY\";\r\n    // mapping[\"SetupTime\"] = \"STRSetupTime\";\r\n    // mapping[\"SimulateMethods\"] = \"STRSIMMETHODS\";\r\n    // mapping[\"SimulateRefinement\"] = \"STRSIMREFINMENT\";\r\n    // mapping[\"State\"] = \"STRSTATES\";\r\n    // mapping[\"Strategy\"] = \"STRStrategy\";\r\n    // mapping[\"InitialContents\"] = \"STRInitialContentS\";\r\n    // mapping[\"SuspendEnabled\"] = \"STRSUSPENDENABLED\";\r\n    // mapping[\"SuspendStartNew\"] = \"STRSUSPENDNEW\";\r\n    // mapping[\"SystemType\"] = \"STRSYSTEMTYPE\";\r\n    // mapping[\"TextFile\"] = \"STRTXTFILE\";\r\n    // mapping[\"To\"] = \"STRTO\";\r\n    // mapping[\"TransportationTime\"] = \"STRTRANSPORTATIONTIME\";\r\n    // mapping[\"Type\"] = \"STRTYPE\";\r\n    // mapping[\"UserID\"] = \"STRUSERID\";\r\n    // mapping[SemTalkBaseConstant.SLUserNumber] = \"STRUserNumber\";\r\n    // mapping[\"VariableCost\"] = \"STRVariableCost\";\r\n    // mapping[\"WaitingTime\"] = \"STRWaitingTime\";\r\n    // mapping[\"WorkTime\"] = \"STRWorkTime\";\r\n    // mapping[\"WorkTime2\"] = \"STRWorkTime2\";\r\n    // mapping[\"Zip\"] = \"STRZIP\";\r\n    // mapping[\"PeriodEnd\"] = \"STRPERIODEND\";\r\n    // mapping[\"Priority\"] = \"STRPriority\";\r\n\r\n    // epc diagrams or models\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLProc)] = \"STREPC\";\r\n    mapping[EPC_DiagramTypeName.BusinessObjectModel] = \"STRObjectModel\";// correct for business obj model?\r\n    mapping[EPC_DiagramTypeName.OrgChart] = \"STROrganigramm\";\r\n    mapping[EPC_DiagramTypeName.ResClassModel] = \"STRSachmittelmodell\"; // del?\r\n    mapping[EPC_DiagramTypeName.KnowlegeMap] = \"STRWissenslandkarte\"; // del?\r\n    mapping[EPC_DiagramTypeName.SystemModel] = \"STRInformationsträgermodell\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLValueChain)] = \"STRWertschoepfungskette\";\r\n    // mapping[\"EP\"] = \"STRWertschoepfungskette\";\r\n\r\n    for (let x in mapping) {\r\n      const c = ob.FindClass(x);\r\n      if (c) {\r\n        if (c.FindSynonym(lang) === undefined) {\r\n          c.MakeSynonym(sem.getResStr(mapping[x], code), lang);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","\nimport {\n  BPMN_TaskTypeName, BPMN_TriggerTypeName, BPMN_GatewayTypeName,\n  BPMN_TriggerType, BPMN_EventType, BPMN_GatewayType, BPMN_TaskType, BPMN_EventTypeName,\n} from './bpmninterface';\n\nexport class BPMNElements {\n  public static GetAllTaskTypeNames(): BPMN_TaskTypeName[] {\n    return [BPMN_TaskTypeName.None,\n    BPMN_TaskTypeName.Service,\n    BPMN_TaskTypeName.Send,\n    BPMN_TaskTypeName.Receive,\n    BPMN_TaskTypeName.User,\n    BPMN_TaskTypeName.Manual,\n    BPMN_TaskTypeName.Script,\n    BPMN_TaskTypeName.InstantiationReceive,\n    BPMN_TaskTypeName.BusinessRule\n    ];\n  }\n\n  public static GetAllTriggerTypeNames(): BPMN_TriggerTypeName[] {\n    return [\n      BPMN_TriggerTypeName.None,\n      BPMN_TriggerTypeName.Message,\n      BPMN_TriggerTypeName.Timer,\n      BPMN_TriggerTypeName.Error,\n      BPMN_TriggerTypeName.Rule,\n      BPMN_TriggerTypeName.Signal,\n      BPMN_TriggerTypeName.Multiple,\n      BPMN_TriggerTypeName.Cancel,\n      BPMN_TriggerTypeName.Compensation,\n      BPMN_TriggerTypeName.Link,\n      BPMN_TriggerTypeName.Terminate,\n      BPMN_TriggerTypeName.Escalation,\n      BPMN_TriggerTypeName.ParallelMultiple\n    ];\n  }\n\n  public static GetAllEventTypeNames(): BPMN_EventTypeName[] {\n    return [\n      BPMN_EventTypeName.Start,\n      BPMN_EventTypeName.Intermediate,\n      BPMN_EventTypeName.End\n    ];\n  }\n  public static GetAllGatewayTypeNames(): BPMN_GatewayTypeName[] {\n    return [\n      BPMN_GatewayTypeName.XOR,\n      BPMN_GatewayTypeName.XORwM,\n      BPMN_GatewayTypeName.ExclusiveEvent,\n      BPMN_GatewayTypeName.Inclusive,\n      BPMN_GatewayTypeName.Parallel,\n      BPMN_GatewayTypeName.Complex,\n      BPMN_GatewayTypeName.ExclusiveEventIns,\n      BPMN_GatewayTypeName.ParallelEventIns\n    ];\n  }\n\n\n  public static GetTaskTypeName(type: BPMN_TaskType): BPMN_TaskTypeName {\n    switch (type) {\n      case BPMN_TaskType.None: {\n        return BPMN_TaskTypeName.None;\n      }\n      case BPMN_TaskType.Service: {\n        return BPMN_TaskTypeName.Service;\n      }\n      case BPMN_TaskType.Send: {\n        return BPMN_TaskTypeName.Send;\n      }\n      case BPMN_TaskType.Receive: {\n        return BPMN_TaskTypeName.Receive;\n      }\n      case BPMN_TaskType.User: {\n        return BPMN_TaskTypeName.User;\n      }\n      case BPMN_TaskType.Manual: {\n        return BPMN_TaskTypeName.Manual;\n      }\n      case BPMN_TaskType.Script: {\n        return BPMN_TaskTypeName.Script;\n      }\n      case BPMN_TaskType.InstantiationReceive: {\n        return BPMN_TaskTypeName.InstantiationReceive;\n      }\n      case BPMN_TaskType.BusinessRule: {\n        return BPMN_TaskTypeName.BusinessRule;\n      }\n    }\n    return BPMN_TaskTypeName.None;\n  }\n  public static GetEventTypeName(type: BPMN_EventType): BPMN_EventTypeName {\n    switch (type) {\n      case BPMN_EventType.Start: {\n        return BPMN_EventTypeName.Start;\n      }\n      case BPMN_EventType.Intermediate: {\n        return BPMN_EventTypeName.Intermediate;\n      }\n      case BPMN_EventType.End: {\n        return BPMN_EventTypeName.End;\n      }\n    }\n    return BPMN_EventTypeName.Start;\n  }\n\n  public static GetGatewayTypeName(type: BPMN_GatewayType): BPMN_GatewayTypeName {\n    switch (type) {\n      case BPMN_GatewayType.XOR: {\n        return BPMN_GatewayTypeName.XOR;\n      }\n      case BPMN_GatewayType.XORwM: {\n        return BPMN_GatewayTypeName.XORwM;\n      }\n      case BPMN_GatewayType.ExclusiveEvent: {\n        return BPMN_GatewayTypeName.ExclusiveEvent;\n      }\n      case BPMN_GatewayType.Inclusive: {\n        return BPMN_GatewayTypeName.Inclusive;\n      }\n      case BPMN_GatewayType.Parallel: {\n        return BPMN_GatewayTypeName.Parallel;\n      }\n      case BPMN_GatewayType.Complex: {\n        return BPMN_GatewayTypeName.Complex;\n      }\n      case BPMN_GatewayType.ExclusiveEventIns: {\n        return BPMN_GatewayTypeName.ExclusiveEventIns;\n      }\n      case BPMN_GatewayType.ParallelEventIns: {\n        return BPMN_GatewayTypeName.ParallelEventIns;\n      }\n    }\n    return BPMN_GatewayTypeName.XOR;\n  }\n  public static GetTriggerTypeName(name: BPMN_TriggerType): BPMN_TriggerTypeName {\n    switch (name) {\n      case BPMN_TriggerType.None: {\n        return BPMN_TriggerTypeName.None;\n      }\n      case BPMN_TriggerType.Message: {\n        return BPMN_TriggerTypeName.Message;\n      }\n      case BPMN_TriggerType.Timer: {\n        return BPMN_TriggerTypeName.Timer;\n      }\n      case BPMN_TriggerType.Error: {\n        return BPMN_TriggerTypeName.Error;\n      }\n      case BPMN_TriggerType.Rule: {\n        return BPMN_TriggerTypeName.Rule;\n      }\n      case BPMN_TriggerType.Signal: {\n        return BPMN_TriggerTypeName.Signal;\n      }\n      case BPMN_TriggerType.Multiple: {\n        return BPMN_TriggerTypeName.Multiple;\n      }\n      case BPMN_TriggerType.Cancel: {\n        return BPMN_TriggerTypeName.Cancel;\n      }\n      case BPMN_TriggerType.Compensation: {\n        return BPMN_TriggerTypeName.Compensation;\n      }\n      case BPMN_TriggerType.Link: {\n        return BPMN_TriggerTypeName.Link;\n      }\n      case BPMN_TriggerType.Terminate: {\n        return BPMN_TriggerTypeName.Terminate;\n      }\n      case BPMN_TriggerType.Escalation: {\n        return BPMN_TriggerTypeName.Escalation;\n      }\n      case BPMN_TriggerType.ParallelMultiple: {\n        return BPMN_TriggerTypeName.ParallelMultiple;\n      }\n    }\n    return BPMN_TriggerTypeName.None;\n  }\n\n  public static GetTaskType(name: string): BPMN_TaskType {\n    switch (name) {\n      case BPMN_TaskTypeName.None: {\n        return BPMN_TaskType.None;\n      }\n      case BPMN_TaskTypeName.Service: {\n        return BPMN_TaskType.Service;\n      }\n      case BPMN_TaskTypeName.Send: {\n        return BPMN_TaskType.Send;\n      }\n      case BPMN_TaskTypeName.Receive: {\n        return BPMN_TaskType.Receive;\n      }\n      case BPMN_TaskTypeName.User: {\n        return BPMN_TaskType.User;\n      }\n      case BPMN_TaskTypeName.Manual: {\n        return BPMN_TaskType.Manual;\n      }\n      case BPMN_TaskTypeName.Script: {\n        return BPMN_TaskType.Script;\n      }\n      case BPMN_TaskTypeName.InstantiationReceive: {\n        return BPMN_TaskType.InstantiationReceive;\n      }\n      case BPMN_TaskTypeName.BusinessRule: {\n        return BPMN_TaskType.BusinessRule;\n      }\n    }\n    return BPMN_TaskType.None;\n  }\n\n  public static GetEventType(name: string): BPMN_EventType {\n    switch (name) {\n      case BPMN_EventTypeName.Start: {\n        return BPMN_EventType.Start;\n      }\n      case BPMN_EventTypeName.Intermediate: {\n        return BPMN_EventType.Intermediate;\n      }\n      case BPMN_EventTypeName.End: {\n        return BPMN_EventType.End;\n      }\n    }\n    return BPMN_EventType.Start;\n  }\n\n  public static GetGatewayType(name: string): BPMN_GatewayType {\n    switch (name) {\n      case BPMN_GatewayTypeName.XOR: {\n        return BPMN_GatewayType.XOR;\n      }\n      case BPMN_GatewayTypeName.XORwM: {\n        return BPMN_GatewayType.XORwM;\n      }\n      case BPMN_GatewayTypeName.ExclusiveEvent: {\n        return BPMN_GatewayType.ExclusiveEvent;\n      }\n      case BPMN_GatewayTypeName.Inclusive: {\n        return BPMN_GatewayType.Inclusive;\n      }\n      case BPMN_GatewayTypeName.Parallel: {\n        return BPMN_GatewayType.Parallel;\n      }\n      case BPMN_GatewayTypeName.Complex: {\n        return BPMN_GatewayType.Complex;\n      }\n      case BPMN_GatewayTypeName.ExclusiveEventIns: {\n        return BPMN_GatewayType.ExclusiveEventIns;\n      }\n      case BPMN_GatewayTypeName.ParallelEventIns: {\n        return BPMN_GatewayType.ParallelEventIns;\n      }\n    }\n    return BPMN_GatewayType.XOR;\n  }\n  public static GetTriggerType(name: string): BPMN_TriggerType {\n    switch (name) {\n      case BPMN_TriggerTypeName.None: {\n        return BPMN_TriggerType.None;\n      }\n      case BPMN_TriggerTypeName.Message: {\n        return BPMN_TriggerType.Message;\n      }\n      case BPMN_TriggerTypeName.Timer: {\n        return BPMN_TriggerType.Timer;\n      }\n      case BPMN_TriggerTypeName.Error: {\n        return BPMN_TriggerType.Error;\n      }\n      case BPMN_TriggerTypeName.Rule: {\n        return BPMN_TriggerType.Rule;\n      }\n      case BPMN_TriggerTypeName.Signal: {\n        return BPMN_TriggerType.Signal;\n      }\n      case BPMN_TriggerTypeName.Multiple: {\n        return BPMN_TriggerType.Multiple;\n      }\n      case BPMN_TriggerTypeName.Cancel: {\n        return BPMN_TriggerType.Cancel;\n      }\n      case BPMN_TriggerTypeName.Compensation: {\n        return BPMN_TriggerType.Compensation;\n      }\n      case BPMN_TriggerTypeName.Link: {\n        return BPMN_TriggerType.Link;\n      }\n      case BPMN_TriggerTypeName.Terminate: {\n        return BPMN_TriggerType.Terminate;\n      }\n      case BPMN_TriggerTypeName.Escalation: {\n        return BPMN_TriggerType.Escalation;\n      }\n      case BPMN_TriggerTypeName.ParallelMultiple: {\n        return BPMN_TriggerType.ParallelMultiple;\n      }\n    }\n    return BPMN_TriggerType.None;\n  }\n\n  // public static CheckTaskType(taskTypeValue: string): Boolean {\n  //   if (taskTypeValue !== \"\" && taskTypeValue !== BPMN_TaskTypeName.None\n  //     && taskTypeValue !== \"Reference\" && taskTypeValue !== BPMN_TaskTypeName.Abstract) {\n  //     return true;\n  //   }\n  //   return false;\n  // }\n\n  // public static CheckGatewayType(gatewayTypeValue: string): Boolean {\n  //   if (gatewayTypeValue !== \"\" && gatewayTypeValue !== BPMN_GatewayTypeName.XOR) {\n  //     return true;\n  //   }\n  //   return false;\n  // }\n\n  // public static CheckTriggerType(triggerTypeValue: string): Boolean {\n  //   const n: string = BPMN_TriggerTypeName.None;\n  //   if (triggerTypeValue !== \"\" || triggerTypeValue !== n) {\n  //     return true;\n  //   }\n  //   return false;\n  // }\n}\n","export const BPMN_SHAPES: any = {\r\n  Task: {\r\n    type: 'vertex',\r\n    style: 'shape=bpmntask;html=1;',\r\n  },\r\n  TaskEvent: {\r\n    type: 'vertex',\r\n    style: 'shape=bpmntaskevent;html=1;',\r\n  },\r\n  Gateway: {\r\n    type: 'vertex',\r\n    style: 'shape=bpmngateway;html=1;',\r\n  },\r\n  Event: {\r\n    type: 'vertex',\r\n    style: 'shape=bpmnevent;html=1;',\r\n  },\r\n  Comment: {\r\n    type: 'vertex',\r\n    style: 'html=1;',\r\n  },\r\n  Text: {\r\n    type: 'Text',\r\n    style: 'html=1;',\r\n  }\r\n};\r\n","\r\nimport {\r\n\tBPMN_TaskTypeName,\r\n\tBPMN_AttributeTypeName,\r\n\tBPMN_SubprocessOrdering\r\n} from '../bpmninterface';\r\n\r\nimport {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n\tmxConnectionConstraint,\r\n\tmxPoint\r\n} from \"mxgraph-js\";\r\n\r\nfunction BpmnTaskShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(BpmnTaskShape, mxActor);\r\n\r\nBpmnTaskShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.roundrect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nBpmnTaskShape.prototype.constraintsX = [\r\n\tnew mxConnectionConstraint(new mxPoint(0.5, 0.5), false),\r\n\t// new mxConnectionConstraint(new mxPoint(0.25, 0), false),\r\n\tnew mxConnectionConstraint(new mxPoint(0.5, 0), false),\r\n\t// new mxConnectionConstraint(new mxPoint(0.75, 0), false),\r\n\t// new mxConnectionConstraint(new mxPoint(0, 0.25), true),\r\n\tnew mxConnectionConstraint(new mxPoint(0, 0.5), true),\r\n\t// new mxConnectionConstraint(new mxPoint(0, 0.75), true),\r\n\t// new mxConnectionConstraint(new mxPoint(1, 0.25), true),\r\n\tnew mxConnectionConstraint(new mxPoint(1, 0.5), true),\r\n\t// new mxConnectionConstraint(new mxPoint(1, 0.75), true),\r\n\t// new mxConnectionConstraint(new mxPoint(0.25, 1), true),\r\n\tnew mxConnectionConstraint(new mxPoint(0.5, 1), true),\r\n\t// new mxConnectionConstraint(new mxPoint(0.75, 1), true)\r\n  ];\r\n\r\nBpmnTaskShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\r\n\tlet ttype = mxUtils.getValue(this.style, BPMN_AttributeTypeName.TaskType, \"none\");\r\n\tlet ao = mxUtils.getValue(this.style, BPMN_AttributeTypeName.SubProcessOrdering, \"\");\r\n\tlet ah = mxUtils.getValue(this.style, BPMN_AttributeTypeName.adhoc, \"\");\r\n\tlet co = mxUtils.getValue(this.style, BPMN_AttributeTypeName.Compensation, \"\");\r\n\tlet re = mxUtils.getValue(this.style, BPMN_AttributeTypeName.refinement, \"\");\r\n\r\n\tlet isAdHoc = (ah.length > 0);\r\n\tlet isCompensation = (co.length > 0);\r\n\t//if (!isAdHoc) ao = \"\";\r\n\tlet isLoopSub = (re.toString().length > 0);\r\n\tlet isLoopStandard = (ao === BPMN_SubprocessOrdering.Loop);\r\n\tlet isLoopMultiParallel = (ao === BPMN_SubprocessOrdering.Parallel);\r\n\tlet isLoopMultiSeq = (ao === BPMN_SubprocessOrdering.Sequential);\r\n\tlet isLoopComp = false;\r\n\r\n\tlet loopnum = 0;\r\n\r\n\tif (isLoopStandard) loopnum++;\r\n\tif (isLoopMultiParallel) loopnum++;\r\n\tif (isLoopMultiSeq) loopnum++;\r\n\tif (isLoopComp) loopnum++;\r\n\tif (isLoopSub) loopnum++;\r\n\tif (isAdHoc) loopnum++;\r\n\tif (isCompensation) loopnum++;\r\n\r\n\tconst iconSpaceX = 14;\r\n\tconst offsetY = 14;\r\n\tlet currXOffset = - iconSpaceX * loopnum * 0.5;\r\n\r\n\tif (isLoopStandard) {\r\n\t\tc.setStrokeWidth(1);\r\n\t\tlet shp = mxCellRenderer.prototype.getShape('loopShape');\r\n\t\tlet dx = w * 0.5 + currXOffset + 2;\r\n\t\tlet dy = h - offsetY + 1;\r\n\t\tc.translate(dx, dy);\r\n\t\t// shp.prototype.redrawPath(c, w * 0.5 + currXOffset + 1, h - offsetY + 1, 12, 12);\r\n\t\tshp.prototype.redrawPath(c, 0, 0, 12, 12);\r\n\t\tc.stroke();\r\n\t\tcurrXOffset += iconSpaceX;\r\n\t\tc.translate(-dx, -dy);\r\n\r\n\t}\r\n\tif (isLoopMultiParallel) {\r\n\t\tc.translate(w * 0.5 + currXOffset + 1, h - offsetY + 1);\r\n\r\n\t\tc.begin();\r\n\t\tc.moveTo(2.4, 0);\r\n\t\tc.lineTo(2.4, 12);\r\n\t\tc.moveTo(6, 0);\r\n\t\tc.lineTo(6, 12);\r\n\t\tc.moveTo(9.6, 0);\r\n\t\tc.lineTo(9.6, 12);\r\n\t\tc.stroke();\r\n\r\n\t\tc.translate(- w * 0.5 - currXOffset - 1, offsetY - 1 - h);\r\n\t\tcurrXOffset += iconSpaceX;\r\n\t}\r\n\r\n\tif (isLoopMultiSeq) {\r\n\t\tc.translate(w * 0.5 + currXOffset + 1, h - offsetY + 1);\r\n\r\n\t\tc.begin();\r\n\t\tc.moveTo(0, 2.4);\r\n\t\tc.lineTo(12, 2.4);\r\n\t\tc.moveTo(0, 6);\r\n\t\tc.lineTo(12, 6);\r\n\t\tc.moveTo(0, 9.6);\r\n\t\tc.lineTo(12, 9.6);\r\n\t\tc.stroke();\r\n\r\n\t\tc.translate(- w * 0.5 - currXOffset - 1, offsetY - 1 - h);\r\n\t\tcurrXOffset += iconSpaceX;\r\n\t}\r\n\r\n\tif (isLoopComp) {\r\n\t\t// var stencil = mxStencilRegistry.getStencil('mxgraph.bpmn.compensation');\r\n\t\t// if (stencil != null) {\r\n\t\t// \tstencil.drawShape(c, this, w * 0.5 + currXOffset, h - offsetY + 1, 14, 12);\r\n\t\t// \tcurrXOffset += iconSpaceX;\r\n\t\t// }\r\n\t}\r\n\r\n\tif (isLoopSub) {\r\n\t\tc.translate(w * 0.5 + currXOffset, h - offsetY);\r\n\r\n\t\tc.rect(0, 0, 14, 14);\r\n\t\tc.stroke();\r\n\r\n\t\tc.begin();\r\n\t\tc.moveTo(4, 7);\r\n\t\tc.lineTo(10, 7);\r\n\t\tc.moveTo(7, 4);\r\n\t\tc.lineTo(7, 10);\r\n\t\tc.stroke();\r\n\r\n\t\tc.translate(- w * 0.5 - currXOffset, offsetY - h);\r\n\t\tcurrXOffset += iconSpaceX;\r\n\t}\r\n\r\n\tif (isAdHoc) {\r\n\t\tc.translate(w * 0.5 + currXOffset, h - offsetY);\r\n\t\tc.begin();\r\n\t\tc.moveTo(0, 5);\r\n\t\tc.curveTo(3, 0, 6, 8, 9, 3);\r\n\t\tc.stroke();\r\n\t\tc.translate(- w * 0.5 - currXOffset, offsetY - h);\r\n\t\tcurrXOffset += iconSpaceX;\r\n\t}\r\n\r\n\tif (isCompensation){\r\n\t\tc.translate(w * 0.5 + currXOffset, h - offsetY);\r\n\t\tc.begin();\r\n\t\tc.moveTo(0, 7);\r\n\t\tc.lineTo(5, 7 / 2);\r\n\t\tc.lineTo(5, 7 * 1.5);\r\n\t\tc.lineTo(0, 7);\r\n\t\tc.stroke();\r\n\t\tc.close();\r\n\t\tc.begin();\r\n\t\tc.moveTo(5, 7);\r\n\t\tc.lineTo((5) * 2, 7 / 2);\r\n\t\tc.lineTo((7 - 2) * 2, 7 * 1.5);\r\n\t\tc.lineTo(7 - 2, 7);\r\n\t\tc.close();\r\n\t\tc.stroke();\r\n\t\tc.translate(- w * 0.5 - currXOffset, offsetY - h);\r\n\t\tcurrXOffset += iconSpaceX;\r\n\t}\r\n\t  \r\n\r\n\r\n\tswitch (ttype) {\r\n\t\tcase BPMN_TaskTypeName.Manual: {\r\n\t\t\tc.setStrokeWidth(1);\r\n\t\t\tc.translate(3, 3);\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('manualShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, 18, 14);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TaskTypeName.User: {\r\n\t\t\tc.setStrokeWidth(1);\r\n\t\t\tc.translate(2, 2);\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('userShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, 16, 16);\r\n\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TaskTypeName.BusinessRule: {\r\n\t\t\tc.setStrokeWidth(1);\r\n\t\t\tc.translate(4, 4);\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('businessRuleShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, 18, 14);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TaskTypeName.Script: {\r\n\t\t\tc.setStrokeWidth(1);\r\n\t\t\tc.translate(3, 3);\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('scriptShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, 19, 18);\r\n\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TaskTypeName.Service: {\r\n\t\t\tc.setStrokeWidth(1);\r\n\t\t\tc.translate(2, 2);\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('gearShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, 16, 16);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TaskTypeName.Receive: {\r\n\t\t\tc.translate(1, 1);\r\n\r\n\t\t\tlet tmpW = w * 0.2;\r\n\t\t\tlet tmpH = h * 0.2;\r\n\r\n\t\t\tc.setStrokeWidth(1);\r\n\t\t\tc.rect(2, 2, tmpW, tmpH);\r\n\t\t\tc.fillAndStroke();\r\n\t\t\t// Paint the envelope closure\r\n\t\t\tc.begin();\r\n\t\t\t// V line\r\n\t\t\tc.moveTo(2, 2);\r\n\t\t\tc.lineTo(2 + (tmpW) * 0.5, 2 + tmpH * 0.6);\r\n\t\t\tc.lineTo(2 + (tmpW), 2);\r\n\t\t\tc.close();\r\n\t\t\tc.fillAndStroke();\r\n\t\t\t// First bottom line\r\n\t\t\tc.moveTo(2, 2 + tmpH);\r\n\t\t\tc.lineTo(2 + (tmpW) / 3, 2 + tmpH * 0.45);\r\n\t\t\tc.close();\r\n\t\t\tc.fillAndStroke();\r\n\t\t\t// Second bottom line\r\n\t\t\tc.moveTo(2 + (tmpW), 2 + tmpH);\r\n\t\t\tc.lineTo(2 + ((tmpW) * 2) / 3, 2 + tmpH * 0.45);\r\n\t\t\tc.stroke();\r\n\t\t\tc.close();\r\n\t\t\tc.fillAndStroke();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TaskTypeName.Send: {\r\n\t\t\tc.translate(1, 1);\r\n\r\n\t\t\tlet tmpW = w * 0.2;\r\n\t\t\tlet tmpH = h * 0.2;\r\n\r\n\t\t\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\t\t\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\t\t\tc.setStrokeColor(fillColor);\r\n\t\t\tc.setFillColor(strokeColor);\r\n\r\n\t\t\tc.setStrokeWidth(1);\r\n\t\t\tc.rect(2, 2, tmpW, tmpH);\r\n\t\t\tc.fillAndStroke();\r\n\t\t\t// Paint the envelope closure\r\n\t\t\tc.begin();\r\n\t\t\t// V line\r\n\t\t\tc.moveTo(2, 2);\r\n\t\t\t// c.moveTo(4, 4);\r\n\r\n\t\t\tc.lineTo(2 + (tmpW) * 0.5, 2 + tmpH * 0.6);\r\n\t\t\tc.lineTo(2 + (tmpW), 2);\r\n\t\t\tc.close();\r\n\t\t\tc.fillAndStroke();\r\n\t\t\t// First bottom line\r\n\t\t\tc.moveTo(2, 2 + tmpH);\r\n\t\t\tc.lineTo(2 + (tmpW) / 3, 2 + tmpH * 0.45);\r\n\t\t\tc.close();\r\n\t\t\tc.fillAndStroke();\r\n\t\t\t// Second bottom line\r\n\t\t\tc.moveTo(2 + (tmpW), 2 + tmpH);\r\n\t\t\tc.lineTo(2 + ((tmpW) * 2) / 3, 2 + tmpH * 0.45);\r\n\t\t\tc.stroke();\r\n\t\t\tc.close();\r\n\t\t\tc.fillAndStroke();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TaskTypeName.InstantiationReceive: {\r\n\t\t\t// c.setStrokeWidth(1);\r\n\t\t\t// c.translate(3, 3);\r\n\t\t\t// let shp = mxCellRenderer.prototype.getShape('instantiationReceiveShape')\r\n\t\t\t// shp.prototype.redrawPath(c, 0, 0, 18, 18);\r\n\r\n\t\t\tlet tmpW = w * 0.2;\r\n\t\t\tlet tmpH = h * 0.2;\r\n\r\n\t\t\tc.setStrokeWidth(1);\r\n\t\t\tc.ellipse(2, 2, tmpW, tmpH);\r\n\t\t\tc.stroke();\r\n\t\t\tlet tmpW2 = tmpW * 0.6;\r\n\t\t\tlet tmpH2 = tmpH * 0.5;\r\n\t\t\tc.rect(5, 5, tmpW2, tmpH2);\r\n\t\t\tc.fillAndStroke();\r\n\t\t\tc.begin();\r\n\t\t\tc.moveTo(5, 4);\r\n\t\t\tc.lineTo(5 + (tmpW2) * 0.5, 5 + tmpH2 * 0.6);\r\n\t\t\tc.lineTo(5 + (tmpW2), 5);\r\n\t\t\tc.close();\r\n\t\t\tc.fillAndStroke();\r\n\t\t\t// First bottom line\r\n\t\t\tc.moveTo(5, 5 + tmpH2);\r\n\t\t\tc.lineTo(5 + (tmpW2) / 3, 5 + tmpH2 * 0.45);\r\n\t\t\tc.close();\r\n\t\t\tc.fillAndStroke();\r\n\r\n\t\t\t/*const stencil = mxStencilRegistry.getStencil('Instantiation Task');\r\n\t\t\tif (stencil) {\r\n\t\t\t\tstencil.drawShape(c, this, 2, 2, 16, 16);\r\n\t\t\t}*/\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TaskTypeName.None: {\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t}\r\n\tc.fillAndStroke();\r\n\r\n};\r\n\r\nmxCellRenderer.registerShape('bpmntask', BpmnTaskShape);\r\n// console.debug(\"Task Shapes registered\");","import {\r\n\tBPMN_GatewayTypeName,\r\n\tBPMN_AttributeTypeName\r\n} from '../bpmninterface';\r\n\r\nimport {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\t// mxActor,\r\n\tmxShape,\r\n\tmxConnectionConstraint,\r\n\tmxPoint\r\n} from \"mxgraph-js\";// Document shape\r\n\r\n\r\n\r\n//BPMN gateway shape\r\nfunction BpmnGatewayShape(this: any, bounds: any, fill: any, stroke: any, strokewidth: any) {\r\n\tmxShape.call(this);\r\n\tthis.bounds = bounds;\r\n\tthis.fill = fill;\r\n\tthis.stroke = stroke;\r\n\tthis.strokewidth = (strokewidth !== null) ? strokewidth : 1;\r\n}\r\n\r\n/**\r\n * Extends mxShape.\r\n */\r\nmxUtils.extend(BpmnGatewayShape, mxShape);\r\nBpmnGatewayShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\t//var rSize = 5;\r\n\r\n\tc.begin();\r\n\tc.moveTo(w * 0.5, 0);\r\n\tc.lineTo(w, h * 0.5);\r\n\tc.lineTo(w * 0.5, h);\r\n\tc.lineTo(0, h * 0.5);\r\n\tc.close();\r\n\tc.fillAndStroke();\r\n\r\n\tc.setShadow(false);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nBpmnGatewayShape.prototype.constraintsX = [\r\n\tnew mxConnectionConstraint(new mxPoint(0.5, 0.5), false),\r\n\t// new mxConnectionConstraint(new mxPoint(0.25, 0), false),\r\n\tnew mxConnectionConstraint(new mxPoint(0.5, 0), false),\r\n\t// new mxConnectionConstraint(new mxPoint(0.75, 0), false),\r\n\t// new mxConnectionConstraint(new mxPoint(0, 0.25), true),\r\n\tnew mxConnectionConstraint(new mxPoint(0, 0.5), true),\r\n\t// new mxConnectionConstraint(new mxPoint(0, 0.75), true),\r\n\t// new mxConnectionConstraint(new mxPoint(1, 0.25), true),\r\n\tnew mxConnectionConstraint(new mxPoint(1, 0.5), true),\r\n\t// new mxConnectionConstraint(new mxPoint(1, 0.75), true),\r\n\t// new mxConnectionConstraint(new mxPoint(0.25, 1), true),\r\n\tnew mxConnectionConstraint(new mxPoint(0.5, 1), true),\r\n\t// new mxConnectionConstraint(new mxPoint(0.75, 1), true)\r\n  ];\r\n  \r\n//BpmnGatewayShape.prototype.paintVertexShape = function(c, x, y, w, h)\r\nBpmnGatewayShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\r\n\t//c.translate(x, y);\r\n\tc.begin();\r\n\tc.moveTo(w * 0.5, 0);\r\n\tc.lineTo(w, h * 0.5);\r\n\tc.lineTo(w * 0.5, h);\r\n\tc.lineTo(0, h * 0.5);\r\n\tc.close();\r\n\tc.fillAndStroke();\r\n\r\n\tc.setShadow(false);\r\n\r\n\tlet gwtype = mxUtils.getValue(this.style, BPMN_AttributeTypeName.GatewayType, BPMN_GatewayTypeName.XOR);\r\n\r\n\t// var strokeColor = \"\";\r\n\t// var fillColor = \"\";\r\n\t//console.log(\"gwtype \" + gwType);\r\n\t//Gateway XOR (event)\r\n\t//\tGateway XOR (data)\r\n\t//\tGateway OR\r\n\tlet tmpW = w * 0.5;\r\n\tlet tmpH = h * 0.5;\r\n\tc.translate(w * 0.25, h * 0.25);\r\n\r\n\tswitch (gwtype) {\r\n\t\tcase BPMN_GatewayTypeName.XOR: {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_GatewayTypeName.XORwM: {\r\n\t\t\th /= 2;\r\n\t\t\tw /= 2;\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('GatewayExclusivOrShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tc.fillAndStroke();\r\n\r\n\t\t\t// c.begin();\r\n\t\t\t// c.moveTo(tmpW * 0.105, tmpH * 0.05);\r\n\t\t\t// c.lineTo(tmpW * 0.5, tmpH * 0.38);\r\n\t\t\t// c.lineTo(tmpW * 0.895, tmpH * 0.05);\r\n\t\t\t// c.lineTo(tmpW * 0.95, tmpH * 0.11);\r\n\t\t\t// c.lineTo(tmpW * 0.6172, tmpH * 0.5);\r\n\t\t\t// c.lineTo(tmpW * 0.95, tmpH * 0.89);\r\n\t\t\t// c.lineTo(tmpW * 0.895, tmpH * 0.95);\r\n\t\t\t// c.lineTo(tmpW * 0.5, tmpH * 0.62);\r\n\t\t\t// c.lineTo(tmpW * 0.105, tmpH * 0.95);\r\n\t\t\t// c.lineTo(tmpW * 0.05, tmpH * 0.89);\r\n\t\t\t// c.lineTo(tmpW * 0.3808, tmpH * 0.5);\r\n\t\t\t// c.lineTo(tmpW * 0.05, tmpH * 0.11);\r\n\t\t\t// c.close();\r\n\t\t\t// c.fillAndStroke();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_GatewayTypeName.ExclusiveEvent: {\r\n\t\t\th /= 2;\r\n\t\t\tw /= 2;\r\n\t\t\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\t\t\tc.setStrokeWidth(strokeWidth + 1);\r\n\t\t\tc.ellipse(0, 0, w, h);\r\n\t\t\tc.stroke();\r\n\t\t\tc.setStrokeWidth(strokeWidth);\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('GatewayExclusivEventShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tc.fillAndStroke();\r\n\t\t\t// c.ellipse(0, 0, tmpW, tmpH);\r\n\t\t\t// c.stroke();\r\n\t\t\t// c.ellipse(1.5, 1.5, tmpW - 3, tmpH - 3);\r\n\t\t\t// c.stroke();\r\n\r\n\t\t\t// c.begin();\r\n\t\t\t// c.moveTo(tmpW * 0.2, tmpH * 0.3);\r\n\t\t\t// c.lineTo(tmpW * 0.5, tmpH * 0.1);\r\n\t\t\t// c.lineTo(tmpW * 0.8, tmpH * 0.3);\r\n\t\t\t// c.lineTo(tmpW * 0.7, tmpH * 0.8);\r\n\t\t\t// c.lineTo(tmpW * 0.3, tmpH * 0.8);\r\n\t\t\t// c.lineTo(tmpW * 0.2, tmpH * 0.3);\r\n\t\t\t// c.stroke();\r\n\t\t\t// c.close();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_GatewayTypeName.Parallel: {\r\n\t\t\th /= 2;\r\n\t\t\tw /= 2;\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('GatewayAndShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tc.fillAndStroke();\r\n\t\t\t// c.begin();\r\n\t\t\t// c.moveTo(tmpW * 0.38, 0);\r\n\t\t\t// c.lineTo(tmpW * 0.62, 0);\r\n\t\t\t// c.lineTo(tmpW * 0.62, tmpH * 0.38);\r\n\t\t\t// c.lineTo(tmpW, tmpH * 0.38);\r\n\t\t\t// c.lineTo(tmpW, tmpH * 0.62);\r\n\t\t\t// c.lineTo(tmpW * 0.62, tmpH * 0.62);\r\n\t\t\t// c.lineTo(tmpW * 0.62, tmpH);\r\n\t\t\t// c.lineTo(tmpW * 0.38, tmpH);\r\n\t\t\t// c.lineTo(tmpW * 0.38, tmpH * 0.62);\r\n\t\t\t// c.lineTo(0, tmpH * 0.62);\r\n\t\t\t// c.lineTo(0, tmpH * 0.38);\r\n\t\t\t// c.lineTo(tmpW * 0.38, tmpH * 0.38);\r\n\t\t\t// c.close();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_GatewayTypeName.Complex: {\r\n\t\t\th /= 2;\r\n\t\t\tw /= 2;\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('GatewayComplexShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\t// c.begin();\r\n\t\t\t// c.moveTo(0, tmpH * 0.44);\r\n\t\t\t// c.lineTo(tmpW * 0.36, tmpH * 0.44);\r\n\t\t\t// c.lineTo(tmpW * 0.1, tmpH * 0.18);\r\n\t\t\t// c.lineTo(tmpW * 0.18, tmpH * 0.1);\r\n\t\t\t// c.lineTo(tmpW * 0.44, tmpH * 0.36);\r\n\t\t\t// c.lineTo(tmpW * 0.44, 0);\r\n\t\t\t// c.lineTo(tmpW * 0.56, 0);\r\n\t\t\t// c.lineTo(tmpW * 0.56, tmpH * 0.36);\r\n\t\t\t// c.lineTo(tmpW * 0.82, tmpH * 0.1);\r\n\t\t\t// c.lineTo(tmpW * 0.90, tmpH * 0.18);\r\n\t\t\t// c.lineTo(tmpW * 0.64, tmpH * 0.44);\r\n\t\t\t// c.lineTo(tmpW, tmpH * 0.44);\r\n\t\t\t// c.lineTo(tmpW, tmpH * 0.56);\r\n\t\t\t// c.lineTo(tmpW * 0.64, tmpH * 0.56);\r\n\t\t\t// c.lineTo(tmpW * 0.9, tmpH * 0.82);\r\n\t\t\t// c.lineTo(tmpW * 0.82, tmpH * 0.9);\r\n\t\t\t// c.lineTo(tmpW * 0.56, tmpH * 0.64);\r\n\t\t\t// c.lineTo(tmpW * 0.56, tmpH);\r\n\t\t\t// c.lineTo(tmpW * 0.44, tmpH);\r\n\t\t\t// c.lineTo(tmpW * 0.44, tmpH * 0.64);\r\n\t\t\t// c.lineTo(tmpW * 0.18, tmpH * 0.9);\r\n\t\t\t// c.lineTo(tmpW * 0.1, tmpH * 0.82);\r\n\t\t\t// c.lineTo(tmpW * 0.36, tmpH * 0.56);\r\n\t\t\t// c.lineTo(0, tmpH * 0.56);\r\n\t\t\t// c.close();\r\n\t\t\tc.fillAndStroke();\r\n\r\n\t\t\t// c.setFillColor(fillColor);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_GatewayTypeName.Inclusive: {\r\n\t\t\t// h /= 2;\r\n\t\t\t// w /= 2;\r\n\t\t\t// let shp = mxCellRenderer.prototype.getShape('GatewayInclusivORShape')\r\n\t\t\t// shp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\t// c.fillAndStroke();\r\n\t\t\tlet strokeColor = c.state.strokeColor;\r\n\t\t\tlet fillColor = c.state.fillColor;\r\n\t\t\tc.setFillColor(strokeColor);\r\n\t\t\tc.ellipse(0, 0, tmpW, tmpH);\r\n\t\t\tc.stroke();\r\n\t\t\tc.setFillColor(fillColor);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_GatewayTypeName.ExclusiveEventIns: {\r\n\t\t\th /= 2;\r\n\t\t\tw /= 2;\r\n\t\t\tc.ellipse(0, 0, w, h);\r\n\t\t\tc.stroke();\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('GatewayExclusivEventShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tc.fillAndStroke();\r\n\r\n\t\t\t// c.ellipse(0, 0, tmpW, tmpH);\r\n\t\t\t// c.stroke();\r\n\r\n\t\t\t// c.stroke();\r\n\t\t\t// c.begin();\r\n\t\t\t// c.moveTo(tmpW * 0.2, tmpH * 0.3);\r\n\t\t\t// c.lineTo(tmpW * 0.5, tmpH * 0.1);\r\n\t\t\t// c.lineTo(tmpW * 0.8, tmpH * 0.3);\r\n\t\t\t// c.lineTo(tmpW * 0.7, tmpH * 0.8);\r\n\t\t\t// c.lineTo(tmpW * 0.3, tmpH * 0.8);\r\n\t\t\t// c.lineTo(tmpW * 0.2, tmpH * 0.3);\r\n\t\t\t// c.stroke();\r\n\t\t\t// c.close();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_GatewayTypeName.ParallelEventIns: {\r\n\t\t\th /= 2;\r\n\t\t\tw /= 2;\r\n\t\t\tc.ellipse(0, 0, w, h);\r\n\t\t\tc.stroke();\r\n\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('GatewayEventParallelInsShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tc.fillAndStroke();\r\n\r\n\t\t\t// let fillColor = c.state.fillColor;\r\n\t\t\t// c.ellipse(0, 0, tmpW, tmpH);\r\n\t\t\t// c.stroke();\r\n\r\n\t\t\t// c.begin();\r\n\t\t\t// c.moveTo(tmpW * 0.45, tmpH * 0.1);\r\n\t\t\t// c.lineTo(tmpW * 0.55, tmpH * 0.1);\r\n\t\t\t// c.lineTo(tmpW * 0.55, tmpH * 0.45);\r\n\t\t\t// c.lineTo(tmpW * 0.9, tmpH * 0.45);\r\n\t\t\t// c.lineTo(tmpW * 0.9, tmpH * 0.55);\r\n\t\t\t// c.lineTo(tmpW * 0.55, tmpH * 0.55);\r\n\t\t\t// c.lineTo(tmpW * 0.55, tmpH * 0.9);\r\n\t\t\t// c.lineTo(tmpW * 0.45, tmpH * 0.9);\r\n\t\t\t// c.lineTo(tmpW * 0.45, tmpH * 0.55);\r\n\t\t\t// c.lineTo(tmpW * 0.1, tmpH * 0.55);\r\n\t\t\t// c.lineTo(tmpW * 0.1, tmpH * 0.45);\r\n\t\t\t// c.lineTo(tmpW * 0.45, tmpH * 0.45);\r\n\t\t\t// c.lineTo(tmpW * 0.45, tmpH * 0.1);\r\n\t\t\t// c.stroke();\r\n\t\t\t// c.close();\r\n\t\t\t// c.setFillColor(fillColor);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nmxCellRenderer.registerShape('bpmngateway', BpmnGatewayShape);\r\nconsole.debug(\"Gateway Shapes registered\");\r\n","import {\n\n  mxUtils,\n  mxCellRenderer,\n  mxActor,\n  // mxStencilRegistry,\n  // mxStencil\n\n} from \"mxgraph-js\";\n\n\n//EnvelopeSendShape\nfunction EnvelopeSendShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(EnvelopeSendShape, mxActor);\nEnvelopeSendShape.prototype.size = 0.3;\n/*EnvelopeShape.prototype.getLabelMargins = function (rect) {\n  if (mxUtils.getValue(this.style, 'boundedLbl', false)) {\n    return new mxRectangle(0, 0, 0, parseFloat(mxUtils.getValue(\n      this.style, 'size', this.size\n    )) * rect.height);\n  }\n\n  return null;\n};*/\n\n// tslint:disable-next-line:no-function-expression\nEnvelopeSendShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n  // w = w;\n  h = h - 5;\n  c.rect(0, 1, w, h);\n  c.fillAndStroke();\n  // Paint the envelope closure\n  c.begin();\n  // V line\n  c.moveTo(0, 1);\n  c.lineTo((w) * 0.5, h * 0.6);\n  c.lineTo((w), 1);\n  c.close();\n  c.fillAndStroke();\n  // First bottom line\n  c.moveTo(0, h);\n  c.lineTo((w) / 3, h * 0.45);\n  c.close();\n  c.fillAndStroke();\n  // Second bottom line\n  c.moveTo((w), h);\n  c.lineTo(((w) * 2) / 3, h * 0.45);\n  c.stroke();\n  c.close();\n  c.fillAndStroke();\n\n};\n\nmxCellRenderer.registerShape('envelopeSendShape', EnvelopeSendShape);\n\n//EnvelopeReceiveShape\nfunction EnvelopeReceiveShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(EnvelopeReceiveShape, mxActor);\nEnvelopeReceiveShape.prototype.size = 0.3;\n/*EnvelopeShape.prototype.getLabelMargins = function (rect) {\n  if (mxUtils.getValue(this.style, 'boundedLbl', false)) {\n    return new mxRectangle(0, 0, 0, parseFloat(mxUtils.getValue(\n      this.style, 'size', this.size\n    )) * rect.height);\n  }\n\n  return null;\n};*/\n\n// tslint:disable-next-line:no-function-expression\nEnvelopeReceiveShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n  // w = w;\n  // h = h;\n  c.rect(0, 1, w, h);\n  c.fillAndStroke();\n  // Paint the envelope closure\n  c.begin();\n  // V line\n  c.moveTo(0, 1);\n  c.lineTo((w) * 0.5, h * 0.6);\n  c.lineTo((w), 1);\n  c.close();\n  c.fillAndStroke();\n  // First bottom line\n  c.moveTo(0, h);\n  c.lineTo((w) / 3, h * 0.45);\n  c.close();\n  c.fillAndStroke();\n  // Second bottom line\n  c.moveTo((w), h);\n  c.lineTo(((w) * 2) / 3, h * 0.45);\n  c.stroke();\n  c.close();\n  c.fillAndStroke();\n\n};\n\nmxCellRenderer.registerShape('envelopeReceiveShape', EnvelopeReceiveShape);\n\n//EnvelopeReceiveShape\nfunction instantiationReceiveShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(instantiationReceiveShape, mxActor);\ninstantiationReceiveShape.prototype.size = 0.3;\n\n// tslint:disable-next-line:no-function-expression\ninstantiationReceiveShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n\n\n  const arcStartY = 6; //19.125;\n  const arcStartX = w - 17; //14.5;\n  const arcRay = 6;\n\n  c.moveTo(arcStartX, arcStartY);\n  c.arcTo(arcRay, arcRay, 0, 1, 1, arcStartX + 2 * arcRay, arcStartY);\n  c.arcTo(arcRay, arcRay, 0, 0, 1, arcStartX, arcStartY);\n  c.close();\n  c.stroke();\n  w = w - 10;\n  h = h - 8;\n  c.rect(3, 2, w, h);\n  c.fillAndStroke();\n  // Paint the envelope closure\n  c.begin();\n  // V line\n  c.moveTo(3, 2);\n  c.lineTo(7, 5.5);\n  c.lineTo(11, 2);\n  c.close();\n  c.stroke();\n\n\n};\n\nmxCellRenderer.registerShape('instantiationReceiveShape', instantiationReceiveShape);\n\n//ListShape\nfunction businessRuleShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(businessRuleShape, mxActor);\nbusinessRuleShape.prototype.size = 0.3;\n\n\n// tslint:disable-next-line:no-function-expression\nbusinessRuleShape.prototype.redrawPath = function (c: any, _x: any, _y: any, _w: any, _h: any) {\n\n  c.begin();\n  //c.rect(0, 0, w, h);\n  //c.rect(3, 0, w -3, h);\n  c.moveTo(0, 0);\n  c.lineTo(60 / 5, 0);\n  c.lineTo(60 / 5, 60 / 5);\n  c.lineTo(0, 60 / 5);\n  c.lineTo(0, 0);\n  c.close();\n  c.moveTo(0, 2);\n  c.lineTo(60 / 5, 2);\n  c.close();\n  c.moveTo(0, 7);\n  c.lineTo(60 / 5, 7);\n  c.close();\n  c.moveTo(3, 2);\n  c.lineTo(3, 60 / 5);\n  c.close();\n  c.fillAndStroke();\n\n};\n\nmxCellRenderer.registerShape('businessRuleShape', businessRuleShape);\n\n//ScriptShape\nfunction ScriptShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(ScriptShape, mxActor);\nScriptShape.prototype.size = 0.3;\n\n// tslint:disable-next-line:no-function-expression\nScriptShape.prototype.redrawPath = function (c: any, _x: any, _y: any, _w: any, _h: any) {\n\n\n  c.begin();\n  c.moveTo(0, 0);\n  c.curveTo(50.73 / 32, 0 / 32, 33.26 / 32, 8.86 / 32, 22.35 / 32, 18.84 / 32);\n  c.curveTo(8.11 / 32, 32.15 / 32, 0 / 32, 50.77 / 32, 0 / 32, 70.26 / 32);\n  c.curveTo(0 / 32, 73.15 / 32, 0 / 32, 87.59 / 32, 0 / 32, 113.6 / 32);\n  c.curveTo(55.4 / 32, 113.6 / 32, 86.18 / 32, 113.6 / 32, 92.33 / 32, 113.6 / 32);\n  c.curveTo(94.92 / 32, 150.46 / 32, 85.64 / 32, 180.4 / 32, 74.22 / 32, 211.27 / 32);\n  c.curveTo(40.16 / 32, 298.07 / 32, 30.77 / 32, 339.83 / 32, 55.56 / 32, 410.87 / 32);\n  c.curveTo(63.72 / 32, 438.26 / 32, 87.59 / 32, 457.85 / 32, 114.91 / 32, 461.09 / 32);\n  c.curveTo(216.96 / 32, 460.85 / 32, 294.9 / 32, 461.64 / 32, 388.41 / 32, 461.2 / 32);\n  c.curveTo(407.2 / 32, 461.09 / 32, 425.14 / 32, 453.55 / 32, 438.3 / 32, 440.13 / 32);\n  c.curveTo(451.46 / 32, 426.71 / 32, 458.75 / 32, 403.06 / 32, 458.46 / 32, 384.26 / 32);\n  c.curveTo(458.43 / 32, 382.23 / 32, 458.18 / 32, 365.93 / 32, 458.15 / 32, 363.89 / 32);\n  c.curveTo(432.12 / 32, 364.24 / 32, 406.09 / 32, 364.04 / 32, 380.06 / 32, 364.04 / 32);\n  c.curveTo(377.61 / 32, 347.52 / 32, 377.24 / 32, 337.58 / 32, 378.28 / 32, 324.48 / 32);\n  c.curveTo(380.5 / 32, 296.47 / 32, 389.08 / 32, 273.36 / 32, 398.59 / 32, 247.1 / 32);\n  c.curveTo(408.11 / 32, 220.83 / 32, 418.41 / 32, 191.47 / 32, 420.86 / 32, 154.24 / 32);\n  c.curveTo(422.11 / 32, 135.34 / 32, 421.4 / 32, 110.24 / 32, 417.77 / 32, 86.75 / 32);\n  c.curveTo(417.76 / 32, 86.71 / 32, 417.73 / 32, 86.54 / 32, 417.69 / 32, 86.22 / 32);\n  c.curveTo(417.64 / 32, 85.95 / 32, 417.61 / 32, 85.79 / 32, 417.6 / 32, 85.76 / 32);\n  c.curveTo(414.03 / 32, 68.13 / 32, 410.49 / 32, 48.84 / 32, 399.79 / 32, 31.47 / 32);\n  c.curveTo(389.09 / 32, 14.11 / 32, 366.95 / 32, 0.59 / 32, 341.75 / 32, 0.59 / 32);\n  c.curveTo(286.97 / 32, 0.59 / 32, 122.63 / 32, 0.57 / 32, 67.85 / 32, 0.57 / 32);\n  c.close();\n  c.fillAndStroke();\n  c.moveTo(182.1 / 32, 131.2 / 32);\n  c.lineTo(182.1 / 32, 151.68 / 32);\n  c.lineTo(321.89 / 32, 151.68 / 32);\n  c.lineTo(321.89 / 32, 131.2 / 32);\n  c.lineTo(182.1 / 32, 131.2 / 32);\n  c.close();\n  c.moveTo(162.25 / 32, 251.09 / 32);\n  c.lineTo(162.25 / 32, 271.49 / 32);\n  c.lineTo(301.96 / 32, 271.49 / 32);\n  c.lineTo(301.96 / 32, 251.09 / 32);\n  c.lineTo(162.25 / 32, 251.09 / 32);\n  c.close();\n  c.fillAndStroke();\n  c.moveTo(85.04 / 32, 72.68 / 32);\n  c.curveTo(80.63 / 32, 72.68 / 32, 45.33 / 32, 72.68 / 32, 40.92 / 32, 72.68 / 32);\n  c.curveTo(40.46 / 32, 58.4 / 32, 47.15 / 32, 51.87 / 32, 50.27 / 32, 48.75 / 32);\n  c.curveTo(55.8 / 32, 44.28 / 32, 59.84 / 32, 41 / 32, 73.82 / 32, 41 / 32);\n  c.curveTo(78.45 / 32, 52.13 / 32, 82.23 / 32, 62.71 / 32, 85.04 / 32, 72.68 / 32);\n  c.close();\n  c.fillAndStroke();\n  c.moveTo(364.94 / 32, 52.9 / 32);\n  c.curveTo(370 / 32, 61.11 / 32, 373.9 / 32, 76.44 / 32, 377.38 / 32, 93.51 / 32);\n  c.curveTo(380.35 / 32, 113.1 / 32, 381.01 / 32, 136.42 / 32, 380.02 / 32, 151.57 / 32);\n  c.curveTo(377.97 / 32, 182.76 / 32, 369.51 / 32, 207.12 / 32, 360.1 / 32, 233.1 / 32);\n  c.curveTo(350.69 / 32, 259.09 / 32, 340.27 / 32, 286.77 / 32, 337.53 / 32, 321.27 / 32);\n  c.curveTo(336.38 / 32, 335.86 / 32, 336.72 / 32, 346.69 / 32, 338.87 / 32, 364.01 / 32);\n  c.curveTo(326.35 / 32, 364.01 / 32, 263.75 / 32, 364.01 / 32, 151.06 / 32, 364.01 / 32);\n  c.curveTo(151.06 / 32, 382.2 / 32, 151.06 / 32, 392.31 / 32, 151.06 / 32, 394.33 / 32);\n  c.curveTo(147.77 / 32, 404.8 / 32, 138.9 / 32, 418.2 / 32, 127.43 / 32, 419.94 / 32);\n  c.curveTo(111.49 / 32, 422.35 / 32, 97.86 / 32, 411.8 / 32, 94.75 / 32, 399.19 / 32);\n  c.curveTo(65.14 / 32, 321.99 / 32, 94.93 / 32, 275.54 / 32, 112.57 / 32, 225.47 / 32);\n  c.curveTo(130.14 / 32, 177.95 / 32, 137.92 / 32, 117.41 / 32, 112.71 / 32, 42.09 / 32);\n  c.curveTo(192.88 / 32, 41.9 / 32, 274.33 / 32, 42.21 / 32, 342.89 / 32, 41.98 / 32);\n  c.curveTo(357.15 / 32, 42.03 / 32, 359.83 / 32, 44.61 / 32, 364.94 / 32, 52.9 / 32);\n  c.close();\n  c.fillAndStroke();\n  c.moveTo(409.96 / 32, 399.48 / 32);\n  c.curveTo(409.96 / 32, 408.42 / 32, 398.54 / 32, 425.67 / 32, 392.02 / 32, 425.67 / 32);\n  c.curveTo(325.19 / 32, 425.79 / 32, 252.29 / 32, 425.67 / 32, 185.23 / 32, 425.67 / 32);\n  c.curveTo(189.88 / 32, 424.43 / 32, 194.66 / 32, 405.64 / 32, 194.66 / 32, 399.48 / 32);\n  c.curveTo(237.72 / 32, 399.48 / 32, 388.43 / 32, 399.48 / 32, 409.96 / 32, 399.48 / 32);\n  c.close();\n  c.fillAndStroke();\n\n  // Lines\n  c.begin();\n  c.moveTo(182.1 / 32, 131.2 / 32);\n  c.lineTo(182.1 / 32, 151.68 / 32);\n  c.lineTo(321.89 / 32, 151.68 / 32);\n  c.lineTo(321.89 / 32, 131.2 / 32);\n  c.lineTo(182.1 / 32, 131.2 / 32);\n  c.close();\n  c.moveTo(162.25 / 32, 251.09 / 32);\n  c.lineTo(162.25 / 32, 271.49 / 32);\n  c.lineTo(301.96 / 32, 271.49 / 32);\n  c.lineTo(301.96 / 32, 251.09 / 32);\n  c.lineTo(162.25 / 32, 251.09 / 32);\n  c.close();\n  c.fillAndStroke();\n\n\n};\n\nmxCellRenderer.registerShape('scriptShape', ScriptShape);\n\n//manualShape\nfunction manualShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(manualShape, mxActor);\nmanualShape.prototype.size = 0.3;\n\n// tslint:disable-next-line:no-function-expression\nmanualShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, _h: any) {\n  w = w - 3;\n  c.begin();\n  c.moveTo(0, 3);\n  c.curveTo(0, 2, 2, 1, 4, 0);\n  c.lineTo(8, 0);\n  c.lineTo(8, 2);\n  c.lineTo(6, 2);\n  c.lineTo(6, 2.5);\n  c.lineTo(w - 2, 2.5);\n  c.curveTo(w - 1, 3, w, 3.9, w - 1, 4.5);\n  c.lineTo(9, 4.5);\n  c.lineTo(9, 5);\n  c.lineTo(12, 5.5);\n  c.curveTo(12, 6, 13, 6.66, 12, 7);\n  c.lineTo(9, 7);\n  c.lineTo(11.5, 7);\n  c.curveTo(11.5, 7.5, 12, 8.1, 11.5, 8.5);\n  c.lineTo(9, 8.5);\n  c.lineTo(9, 9);\n  c.lineTo(11, 9.5);\n  c.curveTo(11.5, 10, 12, 10.66, 11.5, 11);\n  c.lineTo(0, 11);\n  c.lineTo(0, 3);\n  c.close();\n  c.fillAndStroke();\n\n};\n\nmxCellRenderer.registerShape('manualShape', manualShape);\n\n//userShape\nfunction userShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(userShape, mxActor);\nuserShape.prototype.size = 0.3;\n\n// tslint:disable-next-line:no-function-expression\nuserShape.prototype.redrawPath = function (c: any, _x: any, _y: any, _w: any, _h: any) {\n  c.begin();\n  c.moveTo(124.31 / 15, 150.29 / 15);\n  c.lineTo(99.66 / 15, 141.03 / 15);\n  c.arcTo(6.43 / 15, 6.43 / 15, 0 / 15, 0 / 15, 1 / 15, 95.51 / 15, 135.03 / 15);\n  c.lineTo(95.51 / 15, 130.66 / 15);\n  c.arcTo(47.75 / 15, 47.75 / 15, 0 / 15, 0 / 15, 0 / 15, 119.51 / 15, 89.25 / 15);\n  c.lineTo(119.51 / 15, 71.25 / 15);\n  c.arcTo(47.62 / 15, 47.62 / 15, 0 / 15, 0 / 15, 0 / 15, 101.18 / 15, 33.64 / 15);\n  c.arcTo(29.35 / 15, 29.35 / 15, 0 / 15, 0 / 15, 0 / 15, 101.52 / 15, 29.14 / 15);\n  c.arcTo(29.68 / 15, 29.68 / 15, 0 / 15, 0 / 15, 0 / 15, 42.17 / 15, 29.14 / 15);\n  c.arcTo(29.24 / 15, 29.24 / 15, 0 / 15, 0 / 15, 0 / 15, 42.53 / 15, 33.63 / 15);\n  c.arcTo(47.65 / 15, 47.65 / 15, 0 / 15, 0 / 15, 0 / 15, 24.14 / 15, 71.23 / 15);\n  c.lineTo(24.14 / 15, 89.23 / 15);\n  c.arcTo(47.7 / 15, 47.7 / 15, 0 / 15, 0 / 15, 0 / 15, 48.19 / 15, 130.63 / 15);\n  c.lineTo(48.19 / 15, 135.03 / 15);\n  c.arcTo(6.43 / 15, 6.43 / 15, 0 / 15, 0 / 15, 1 / 15, 44.03 / 15, 141.03 / 15);\n  c.lineTo(19.31 / 15, 150.29 / 15);\n  c.arcTo(29.81 / 15, 29.81 / 15, 0 / 15, 0 / 15, 0 / 15, 0.09 / 15, 178.03 / 15);\n  c.lineTo(0.09 / 15, 233.51 / 15);\n  c.arcTo(5.63 / 15, 5.63 / 15, 0 / 15, 1 / 15, 0 / 15, 11.34 / 15, 233.51 / 15);\n  c.lineTo(11.34 / 15, 178.03 / 15);\n  c.arcTo(18.19 / 15, 18.19 / 15, 0 / 15, 0 / 15, 1 / 15, 11.57 / 15, 175.17 / 15);\n  c.lineTo(20.5 / 15, 184.11 / 15);\n  c.arcTo(12.32 / 15, 12.32 / 15, 0 / 15, 0 / 15, 1 / 15, 24.14 / 15, 192.89 / 15);\n  c.lineTo(24.14 / 15, 233.51 / 15);\n  c.arcTo(5.63 / 15, 5.63 / 15, 0 / 15, 1 / 15, 0 / 15, 35.39 / 15, 233.51 / 15);\n  c.lineTo(35.39 / 15, 192.93 / 15);\n  c.arcTo(23.5 / 15, 23.5 / 15, 0 / 15, 0 / 15, 0 / 15, 28.46 / 15, 176.2 / 15);\n  c.lineTo(17.04 / 15, 164.78 / 15);\n  c.arcTo(18.34 / 15, 18.34 / 15, 0 / 15, 0 / 15, 1 / 15, 23.29 / 15, 160.78 / 15);\n  c.lineTo(43.65 / 15, 153.15 / 15);\n  c.lineTo(66.22 / 15, 175.72 / 15);\n  c.lineTo(66.22 / 15, 233.51 / 15);\n  c.arcTo(5.63 / 15, 5.63 / 15, 0 / 15, 1 / 15, 0 / 15, 77.47 / 15, 233.51 / 15);\n  c.lineTo(77.47 / 15, 175.76 / 15);\n  c.lineTo(100.04 / 15, 153.19 / 15);\n  c.lineTo(120.4 / 15, 160.82 / 15);\n  c.arcTo(18.39 / 15, 18.39 / 15, 0 / 15, 0 / 15, 1 / 15, 126.65 / 15, 164.82 / 15);\n  c.lineTo(115.24 / 15, 176.24 / 15);\n  c.arcTo(23.5 / 15, 23.5 / 15, 0 / 15, 0 / 15, 0 / 15, 108.31 / 15, 192.93 / 15);\n  c.lineTo(108.31 / 15, 233.55 / 15);\n  c.arcTo(5.63 / 15, 5.63 / 15, 0 / 15, 1 / 15, 0 / 15, 119.56 / 15, 233.55 / 15);\n  c.lineTo(119.56 / 15, 192.93 / 15);\n  c.arcTo(12.35 / 15, 12.35 / 15, 0 / 15, 0 / 15, 1 / 15, 123.19 / 15, 184.15 / 15);\n  c.lineTo(132.13 / 15, 175.22 / 15);\n  c.arcTo(18 / 15, 18 / 15, 0 / 15, 0 / 15, 1 / 15, 132.36 / 15, 178.08 / 15);\n  c.lineTo(132.36 / 15, 233.56 / 15);\n  c.arcTo(5.63 / 15, 5.63 / 15, 0 / 15, 0 / 15, 0 / 15, 143.61 / 15, 233.56 / 15);\n  c.lineTo(143.61 / 15, 178.03 / 15);\n  c.arcTo(29.81 / 15, 29.81 / 15, 0 / 15, 0 / 15, 0 / 15, 124.31 / 15, 150.29 / 15);\n  c.close();\n  c.moveTo(71.85 / 15, 10.72 / 15);\n  c.arcTo(18.46 / 15, 18.46 / 15, 0 / 15, 0 / 15, 1 / 15, 90.17 / 15, 27.18 / 15);\n  c.arcTo(47.68 / 15, 47.68 / 15, 0 / 15, 0 / 15, 0 / 15, 53.53 / 15, 27.18 / 15);\n  c.arcTo(18.44 / 15, 18.44 / 15, 0 / 15, 0 / 15, 1 / 15, 71.85 / 15, 10.72 / 15);\n  c.stroke();\n  c.close();\n  c.moveTo(35.39 / 15, 71.23 / 15);\n  c.arcTo(36.46 / 15, 36.46 / 15, 0 / 15, 0 / 15, 1 / 15, 108.31 / 15, 71.23 / 15);\n  c.lineTo(108.31 / 15, 77.4 / 15);\n  c.curveTo(82.12 / 15, 75.4 / 15, 56.97 / 15, 60.55 / 15, 56.71 / 15, 60.4 / 15);\n  c.arcTo(5.62 / 15, 5.62 / 15, 0 / 15, 0 / 15, 0 / 15, 48.78 / 15, 62.71 / 15);\n  c.curveTo(46.24 / 15, 67.79 / 15, 40.45 / 15, 71.89 / 15, 35.39 / 15, 74.62 / 15);\n  c.close();\n  c.moveTo(35.39 / 15, 89.23 / 15);\n  c.lineTo(35.39 / 15, 87.08 / 15);\n  c.curveTo(40.55 / 15, 84.85 / 15, 49.73 / 15, 80.08 / 15, 55.67 / 15, 72.66 / 15);\n  c.curveTo(64.83 / 15, 77.46 / 15, 85.92 / 15, 87.21 / 15, 108.31 / 15, 88.66 / 15);\n  c.lineTo(108.31 / 15, 89.24 / 15);\n  c.arcTo(36.46 / 15, 36.46 / 15, 0 / 15, 1 / 15, 1 / 15, 35.39 / 15, 89.24 / 15);\n  c.close();\n  c.moveTo(71.85 / 15, 165.45 / 15);\n  c.lineTo(54.06 / 15, 147.69 / 15);\n  c.arcTo(17.7 / 15, 17.7 / 15, 0 / 15, 0 / 15, 0 / 15, 59.43 / 15, 135.32 / 15);\n  c.arcTo(47.57 / 15, 47.57 / 15, 0 / 15, 0 / 15, 0 / 15, 84.27 / 15, 135.32 / 15);\n  c.arcTo(17.7 / 15, 17.7 / 15, 0 / 15, 0 / 15, 0 / 15, 89.64 / 15, 147.69 / 15);\n  c.close();\n  c.stroke();\n  c.fill();\n\n};\n\nmxCellRenderer.registerShape('userShape', userShape);\n\n//GearShape\nfunction GearShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(GearShape, mxActor);\nGearShape.prototype.size = 0.3;\n\n// tslint:disable-next-line:no-function-expression\nGearShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, _h: any) {\n  const arcStartY = 12; //19.125;\n  const arcStartX = w - 7; //14.5;\n  const arcRay = 6.75 / 3;\n\n  c.begin();\n  c.moveTo(arcStartX, arcStartY);\n  c.arcTo(arcRay, arcRay, 0, 1, 1, arcStartX + 2 * arcRay, arcStartY);\n  c.arcTo(arcRay, arcRay, 0, 0, 1, arcStartX, arcStartY);\n  c.stroke();\n\n  c.begin();\n  c.moveTo(arcStartX - 5, arcStartY - 5);\n  c.arcTo(arcRay, arcRay, 0, 1, 1, arcStartX - 5 + 2 * arcRay, arcStartY - 5);\n  c.arcTo(arcRay, arcRay, 0, 0, 1, arcStartX - 5, arcStartY - 5);\n  c.fillAndStroke();\n\n  c.begin();\n  c.moveTo(w - 1.03 / 3, 12.31 / 3 + 5);\n  c.lineTo(w - 5.08 / 3, 15.48 / 3 + 5);\n  c.lineTo(w - 4.65 / 3, 18.66 / 3 + 5);\n  c.lineTo(w - 0, 20.70 / 3 + 5);\n  c.lineTo(w - 1.48 / 3, 27.12 / 3 + 5);\n  c.lineTo(w - 6.705 / 3, 26.46 / 3 + 5);\n  c.lineTo(w - 8.695 / 3, 29.26 / 3 + 5);\n  c.lineTo(w - 6.78 / 3, 33.83 / 3 + 5);\n  c.lineTo(w - 12.235 / 3, 37.22 / 3 + 5);\n  c.lineTo(w - 15.405 / 3, 33.165 / 3 + 5);\n  c.lineTo(w - 18.94 / 3, 33.605 / 3 + 5);\n  c.lineTo(w - 20.785 / 3, 38.25 / 3 + 5);\n  c.lineTo(w - 27.12 / 3, 36.775 / 3 + 5);\n  c.lineTo(w - 26.53 / 3, 31.47 / 3 + 5);\n  c.lineTo(w - 29.26 / 3, 29.26 / 3 + 5);\n  c.lineTo(w - 33.605 / 3, 31.545 / 3 + 5);\n  c.lineTo(w - 37.29 / 3, 25.94 / 3 + 5);\n  c.lineTo(w - 33.015 / 3, 22.625 / 3 + 5);\n  c.lineTo(w - 33.46 / 3, 19.31 / 3 + 5);\n  c.lineTo(w - 38.25 / 3, 17.465 / 3 + 5);\n  c.lineTo(w - 36.85 / 3, 11.13 / 3 + 5);\n  c.lineTo(w - 31.32 / 3, 11.72 / 3 + 5);\n  c.lineTo(w - 29.405 / 3, 9.21 / 3 + 5);\n  c.lineTo(w - 31.395 / 3, 4.35 / 3 + 5);\n  c.lineTo(w - 25.87 / 3, 1.105 / 3 + 5);\n  c.lineTo(w - 22.405 / 3, 5.235 / 3 + 5);\n  c.lineTo(w - 19.015 / 3, 4.715 / 3 + 5);\n  c.lineTo(w - 16.875 / 3, 0 + 5);\n  c.lineTo(w - 10.76 / 3, 1.62 / 3 + 5);\n  c.lineTo(w - 11.35 / 3, 6.78 / 3 + 5);\n  c.lineTo(w - 9.065 / 3, 8.77 / 3 + 5);\n  c.lineTo(w - 4.35 / 3, 6.78 / 3 + 5);\n  c.fillAndStroke();\n  c.close();\n\n  c.begin();\n  c.moveTo(w - 1.03 / 3 - 5, 12.31 / 3);\n  c.lineTo(w - 5.08 / 3 - 5, 15.48 / 3);\n  c.lineTo(w - 4.65 / 3 - 5, 18.66 / 3);\n  c.lineTo(w - 0 - 5, 20.70 / 3);\n  c.lineTo(w - 1.48 / 3 - 5, 27.12 / 3);\n  c.lineTo(w - 6.705 / 3 - 5, 26.46 / 3);\n  c.lineTo(w - 8.695 / 3 - 5, 29.26 / 3);\n  c.lineTo(w - 6.78 / 3 - 5, 33.83 / 3);\n  c.lineTo(w - 12.235 / 3 - 5, 37.22 / 3);\n  c.lineTo(w - 15.405 / 3 - 5, 33.165 / 3);\n  c.lineTo(w - 18.94 / 3 - 5, 33.605 / 3);\n  c.lineTo(w - 20.785 / 3 - 5, 38.25 / 3);\n  c.lineTo(w - 27.12 / 3 - 5, 36.775 / 3);\n  c.lineTo(w - 26.53 / 3 - 5, 31.47 / 3);\n  c.lineTo(w - 29.26 / 3 - 5, 29.26 / 3);\n  c.lineTo(w - 33.605 / 3 - 5, 31.545 / 3);\n  c.lineTo(w - 37.29 / 3 - 5, 25.94 / 3);\n  c.lineTo(w - 33.015 / 3 - 5, 22.625 / 3);\n  c.lineTo(w - 33.46 / 3 - 5, 19.31 / 3);\n  c.lineTo(w - 38.25 / 3 - 5, 17.465 / 3);\n  c.lineTo(w - 36.85 / 3 - 5, 11.13 / 3);\n  c.lineTo(w - 31.32 / 3 - 5, 11.72 / 3);\n  c.lineTo(w - 29.405 / 3 - 5, 9.21 / 3);\n  c.lineTo(w - 31.395 / 3 - 5, 4.35 / 3);\n  c.lineTo(w - 25.87 / 3 - 5, 1.105 / 3);\n  c.lineTo(w - 22.405 / 3 - 5, 5.235 / 3);\n  c.lineTo(w - 19.015 / 3 - 5, 4.715 / 3);\n  c.lineTo(w - 16.875 / 3 - 5, 0);\n  c.lineTo(w - 10.76 / 3 - 5, 1.62 / 3);\n  c.lineTo(w - 11.35 / 3 - 5, 6.78 / 3);\n  c.lineTo(w - 9.065 / 3 - 5, 8.77 / 3);\n  c.lineTo(w - 4.35 / 3 - 5, 6.78 / 3);\n  c.fillAndStroke();\n  c.close();\n\n};\n\nmxCellRenderer.registerShape('gearShape', GearShape);\n\nfunction OrShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(OrShape, mxActor);\n\n// tslint:disable-next-line:no-function-expression\nOrShape.prototype.redrawPath = function (c: any, _x: any, _y: any, _w: any, h: any) {\n  const arcStartY = h / 2; //19.125;\n  const arcStartX = 0; //14.5;\n  const arcRay = 15;\n\n  c.moveTo(arcStartX, arcStartY);\n  c.arcTo(arcRay, arcRay, 0, 1, 1, arcStartX + 2 * arcRay, arcStartY);\n  c.arcTo(arcRay, arcRay, 0, 0, 1, arcStartX, arcStartY);\n  c.close();\n  c.stroke();\n};\n\nmxCellRenderer.registerShape('GatewayInclusivORShape', OrShape);\n\n// Xor\nfunction XorShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(XorShape, mxActor);\n// tslint:disable-next-line:no-function-expression\nXorShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n\n  w = w - 5;\n  h = h - 5;\n  c.begin();\n  c.moveTo(5, 5);\n  c.lineTo(w, h);\n  c.moveTo(5, h);\n  c.lineTo(w, 5);\n  c.close();\n\n};\n\nmxCellRenderer.registerShape('GatewayExclusivOrShape', XorShape);\n\n// parallel\nfunction parallelShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(parallelShape, mxActor);\n// tslint:disable-next-line:no-function-expression\nparallelShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n\n  // w = w;\n  // h = h;\n  c.begin();\n  c.moveTo(w / 2, 0);\n  c.lineTo(w / 2, h);\n  c.moveTo(0, h / 2);\n  c.lineTo(w, h / 2);\n\n  c.close();\n\n};\n\nmxCellRenderer.registerShape('GatewayAndShape', parallelShape);\n\n//\nfunction parallelInsShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(parallelInsShape, mxActor);\n// tslint:disable-next-line:no-function-expression\nparallelInsShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n  const arcStartY = h / 2; //19.125;\n  const arcStartX = 0; //14.5;\n  const arcRay = 15;\n\n  c.moveTo(arcStartX, arcStartY);\n  c.arcTo(arcRay, arcRay, 0, 1, 1, arcStartX + 2 * arcRay, arcStartY);\n  c.arcTo(arcRay, arcRay, 0, 0, 1, arcStartX, arcStartY);\n  //c.close();\n  c.stroke();\n  w = w - 4;\n  h = h - 4;\n  c.begin();\n  c.moveTo((w / 2), 4);\n  c.lineTo((w / 2) + 4, 4);\n  c.lineTo((w / 2) + 4, (h / 2));\n  c.lineTo(w, (h / 2));\n  c.lineTo(w, (h / 2) + 4);\n  c.lineTo((w / 2) + 4, (h / 2) + 4);\n  c.lineTo((w / 2) + 4, h);\n  c.lineTo((w / 2), h);\n  c.lineTo((w / 2), (h / 2) + 4);\n  c.lineTo(4, (h / 2) + 4);\n  c.lineTo(4, (h / 2));\n  c.lineTo((w / 2), (h / 2));\n  c.lineTo((w / 2), 4);\n  c.stroke();\n  c.close();\n};\n\nmxCellRenderer.registerShape('GatewayEventParallelInsShape', parallelInsShape);\n\n// complex\nfunction complexShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(complexShape, mxActor);\n// tslint:disable-next-line:no-function-expression\ncomplexShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n\n  w = w - 5;\n  h = h - 5;\n  c.begin();\n  c.moveTo(5, 5);\n  c.lineTo(w, h);\n  c.moveTo(5, h);\n  c.lineTo(w, 5);\n  c.moveTo(2.5, h / 2 + 2.5);\n  c.lineTo(w + 2.5, h / 2 + 2.5);\n  c.moveTo(w / 2 + 2.5, 2.5);\n  c.lineTo(w / 2 + 2.5, h + 2.5);\n  c.close();\n\n};\n\nmxCellRenderer.registerShape('GatewayComplexShape', complexShape);\n\n// Exclusive Event Shape\nfunction exEventShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(exEventShape, mxActor);\n// tslint:disable-next-line:no-function-expression\nexEventShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n  let arcStartY = h / 2;\n  let arcStartX = 0;\n  let arcRay = 15;\n  c.moveTo(arcStartX, arcStartY);\n  c.arcTo(arcRay, arcRay, 0, 1, 1, arcStartX + 2 * arcRay, arcStartY);\n  c.arcTo(arcRay, arcRay, 0, 0, 1, arcStartX, arcStartY);\n  //c.stroke();\n  //c.close();\n  let arcStartY2 = h / 2 + 0.5;\n  let arcStartX2 = 2.25;\n  let arcRay2 = 12.5;\n  c.moveTo(arcStartX2, arcStartY2);\n  c.arcTo(arcRay2, arcRay2, 1, 3, 3, arcStartX2 + 2 * arcRay2, arcStartY2);\n  c.arcTo(arcRay2, arcRay2, 1, 1, 3, arcStartX2, arcStartY2);\n  c.stroke();\n\n  w = w - 7;\n  h = h - 7;\n  c.begin();\n  c.moveTo(w / 2 + 3.5, 5.5);\n  c.lineTo(w, 11);\n  c.lineTo(w - 3.5, h);\n  c.lineTo(8.5, h);\n  c.lineTo(6, 11);\n  c.lineTo(w / 2 + 3.5, 5.5);\n  c.stroke();\n  c.close();\n\n};\n\nmxCellRenderer.registerShape('GatewayExclusivEventShape', exEventShape);\n\n//Exclusive Event Instantiate\nfunction exEventInsShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(exEventInsShape, mxActor);\n// tslint:disable-next-line:no-function-expression\nexEventInsShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n  let arcStartY = h / 2;\n  let arcStartX = 0;\n  let arcRay = 15;\n  c.moveTo(arcStartX, arcStartY);\n  c.arcTo(arcRay, arcRay, 0, 1, 1, arcStartX + 2 * arcRay, arcStartY);\n  c.arcTo(arcRay, arcRay, 0, 0, 1, arcStartX, arcStartY);\n  c.stroke();\n\n  w = w - 7;\n  h = h - 7;\n  c.begin();\n  c.moveTo(w / 2 + 3.5, 5.5);\n  c.lineTo(w, 11);\n  c.lineTo(w - 3.5, h);\n  c.lineTo(8.5, h);\n  c.lineTo(6, 11);\n  c.lineTo(w / 2 + 3.5, 5.5);\n  c.stroke();\n  c.close();\n\n};\n\nmxCellRenderer.registerShape('exEventInsShape', exEventInsShape);\n\n//signal Shape\nfunction signalShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(signalShape, mxActor);\n// tslint:disable-next-line:no-function-expression\nsignalShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n\n  c.begin();\n  c.moveTo(w / 2, 0);\n  c.lineTo(w, h - 2);\n  c.lineTo(0, h - 2);\n  c.lineTo(w / 2, 0);\n  c.close();\n  c.stroke();\n\n};\nmxCellRenderer.registerShape('EventSignalShape', signalShape);\n\n//signalfull Shape\nfunction signalfullShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(signalfullShape, mxActor);\n// tslint:disable-next-line:no-function-expression\nsignalfullShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n\n  c.begin();\n  c.moveTo(w / 2, 0);\n  c.lineTo(w, h - 2);\n  c.lineTo(0, h - 2);\n  c.lineTo(w / 2, 0);\n  c.close();\n  c.fillAndStroke();\n\n};\n\nmxCellRenderer.registerShape('EventSignalfullShape', signalfullShape);\n\n//cancelShape\nfunction cancelShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(cancelShape, mxActor);\n// tslint:disable-next-line:no-function-expression\ncancelShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n\n  c.begin();\n  c.moveTo(3, h);\n  c.lineTo(0, h - 2);\n  c.lineTo(w / 2 - 3, h / 2);\n  c.lineTo(0, 3);\n  c.lineTo(3, 0);\n  c.lineTo(w / 2, h / 2 - 3);\n  c.lineTo(w - 3, 0);\n  c.lineTo(w, 3);\n  c.lineTo(w / 2 + 3, h / 2);\n  c.lineTo(w, h - 3);\n  c.lineTo(w - 2, h);\n  c.lineTo(w / 2, h / 2 + 3);\n  c.lineTo(3, h);\n  c.close();\n  c.fillAndStroke();\n\n};\n\nmxCellRenderer.registerShape('EventCancelShape', cancelShape);\n\n//errorShape\nfunction errorShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(errorShape, mxActor);\n// tslint:disable-next-line:no-function-expression\nerrorShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n  w = w - 3;\n  h = h - 3;\n  c.begin();\n  c.moveTo(0, h);\n  c.lineTo(w / 3, 0);\n  c.lineTo((w / 3) * 2 + 1, h / 2 - 1);\n  c.lineTo(w, 1);\n  c.lineTo((w / 3) * 2 + 1, h);\n  c.lineTo((w / 3) - 1, h / 2 + 1);\n  c.lineTo(0, h);\n  c.close();\n  c.fillAndStroke();\n\n\n\n};\n\nmxCellRenderer.registerShape('EventErrorShape', errorShape);\n\n//cancelShape\nfunction cancelfullShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(cancelfullShape, mxActor);\n// tslint:disable-next-line:no-function-expression\ncancelfullShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n  w = w - 3;\n  h = h - 3;\n  c.begin();\n  c.moveTo(2, 2);\n  c.lineTo(w, h);\n  c.moveTo(2, h);\n  c.lineTo(w, 2);\n  c.close();\n\n};\n\nmxCellRenderer.registerShape('EventCancelfullShape', cancelfullShape);\n\n//compensationfullShape\nfunction compensationfullShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(compensationfullShape, mxActor);\n// tslint:disable-next-line:no-function-expression\ncompensationfullShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n  w = w / 2;\n  h = h / 2;\n  c.begin();\n  c.moveTo(0, h);\n  c.lineTo(w - 2, h / 2);\n  c.lineTo(w - 2, h * 1.5);\n  c.lineTo(0, h);\n  c.fillAndStroke();\n  c.close();\n  c.begin();\n  c.moveTo(w - 2, h);\n  c.lineTo((w - 2) * 2, h / 2);\n  c.lineTo((w - 2) * 2, h * 1.5);\n  c.lineTo(w - 2, h);\n  c.close();\n  c.fillAndStroke();\n\n\n\n};\n\nmxCellRenderer.registerShape('EventCompensationShape', compensationfullShape);\n\n//Loop Shape\nfunction loopShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(loopShape, mxActor);\n// tslint:disable-next-line:no-function-expression\nloopShape.prototype.redrawPath = function (c: any, _x: any, _y: any, _w: any, _h: any) {\n\n  c.begin();\n  c.moveTo(2.5, 9.08);\n  c.arcTo(4, 4, 0, 0.5, 0.5, 5.5, 11.08);\n  c.stroke();\n\n  // Arrow\n  c.begin();\n  c.moveTo(3.5, 7.08);\n  c.lineTo(3.75, 9.08);\n  c.lineTo(0, 8.08);\n  c.close();\n  c.fillAndStroke();\n\n  // c.begin();\n  // c.moveTo(5.5, 19.08);\n  // c.arcTo(8, 8, 0, 1, 1, 10.5, 21.08);\n  // c.stroke();\n\n  // // Arrow\n  // c.begin();\n  // c.moveTo(7.5, 14.08);\n  // c.lineTo(5.75, 19.08);\n  // c.lineTo(0, 17.08);\n  // c.close();\n  // c.fillAndStroke();\n\n};\n\nmxCellRenderer.registerShape('loopShape', loopShape);\n\n//timerShape Shape\nfunction timerShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(timerShape, mxActor);\n// tslint:disable-next-line:no-function-expression\ntimerShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n  let f = 0.3;\n  c.ellipse(7, 7, w * 0.65, h * 0.65);\n  c.stroke();\n  c.begin();\n  c.moveTo(49.5 * f + 6, 49.5 * f + 6);\n  c.lineTo(51.5 * f + 6, 16 * f + 6);\n  c.moveTo(49.5 * f + 6, 49.5 * f + 6);\n  c.lineTo(71.5 * f + 6, 49.5 * f + 6);\n  c.moveTo(49.5 * f + 6, 5.5 * f + 6);\n  c.lineTo(49.5 * f + 6, 15.5 * f + 6);\n  c.moveTo(69 * f + 6, 15.6 * f + 6);\n  c.lineTo(66.2 * f + 6, 20.5 * f + 6);\n  c.moveTo(83.2 * f + 6, 29.8 * f + 6);\n  c.lineTo(78.3 * f + 6, 32.8 * f + 6);\n  c.moveTo(88.5 * f + 6, 49.5 * f + 6);\n  c.lineTo(83.5 * f + 6, 49.5 * f + 6);\n  c.moveTo(83.2 * f + 6, 69.2 * f + 6);\n  c.lineTo(78.3 * f + 6, 66.2 * f + 6);\n  c.moveTo(30 * f + 6, 15.6 * f + 6);\n  c.lineTo(32.8 * f + 6, 20.5 * f + 6);\n  c.moveTo(69 * f + 6, 83.4 * f + 6);\n  c.lineTo(66.2 * f + 6, 78.5 * f + 6);\n  c.moveTo(49.5 * f + 6, 83.5 * f + 6);\n  c.lineTo(49.5 * f + 6, 88.5 * f + 6);\n  c.moveTo(30 * f + 6, 83.4 * f + 6);\n  c.lineTo(32.8 * f + 6, 78.5 * f + 6);\n  c.moveTo(15.8 * f + 6, 69.2 * f + 6);\n  c.lineTo(20.7 * f + 6, 66.2 * f + 6);\n  c.moveTo(5.5 * f + 6, 49.5 * f + 6);\n  c.lineTo(15.5 * f + 6, 49.5 * f + 6);\n  c.moveTo(15.8 * f + 6, 29.8 * f + 6);\n  c.lineTo(20.7 * f + 6, 32.8 * f + 6);\n  c.close();\n  c.stroke();\n\n  // const arcStartY =h/2;//19.125;\n  // const arcStartX =0;//14.5;\n  // const arcRay = 13;\n  // c.begin();\n  // c.moveTo(arcStartX, arcStartY);\n  // c.arcTo(arcRay, arcRay, 0, 1, 1, arcStartX + 2 * arcRay, arcStartY);\n  // c.arcTo(arcRay, arcRay, 0, 0, 1, arcStartX, arcStartY);\n  // c.stroke();\n  // c.begin();\n  // c.moveTo(49.5/3.75,49.5/3.75);\n  //       c.lineTo(51.5/3.75,16/3.75);\n  //       c.moveTo(49.5/3.75,49.5/3.75);\n  //       c.lineTo(71.5/3.75,49.5/3.75);\n  //       c.moveTo(49.5/3.75,5.5/3.75);\n  //       c.lineTo(49.5/3.75,15.5/3.75);\n  //       c.moveTo(69/3.75,15.6/3.75);\n  //       c.lineTo(66.2/3.75,20.5/3.75);\n  //       c.moveTo(83.2/3.75,29.8/3.75);\n  //       c.lineTo(78.3/3.75,32.8/3.75);\n  //       c.moveTo(88.5/3.75,49.5/3.75);\n  //       c.lineTo(83.5/3.75,49.5/3.75);\n  //       c.moveTo(83.2/3.75,69.2/3.75);\n  //       c.lineTo(78.3/3.75,66.2/3.75);\n  //       c.moveTo(30/3.75,15.6/3.75);\n  //       c.lineTo(32.8/3.75,20.5/3.75);\n  //       c.moveTo(69/3.75,83.4/3.75);\n  //       c.lineTo(66.2/3.75,78.5/3.75);\n  //       c.moveTo(49.5/3.75,83.5/3.75);\n  //       c.lineTo(49.5/3.75,88.5/3.75);\n  //       c.moveTo(30/3.75,83.4/3.75);\n  //       c.lineTo(32.8/3.75,78.5/3.75);\n  //       c.moveTo(15.8/3.75,69.2/3.75);\n  //       c.lineTo(20.7/3.75,66.2/3.75);\n  //       c.moveTo(5.5/3.75,49.5/3.75);\n  //       c.lineTo(15.5/3.75,49.5/3.75);\n  //       c.moveTo(15.8/3.75,29.8/3.75);\n  //       c.lineTo(20.7/3.75,32.8/3.75);\n  //       c.close();\n  //       c.stroke();\n\n};\n\nmxCellRenderer.registerShape('EventTimerShape', timerShape);\n\n//LinkShape\nfunction LinkShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(LinkShape, mxActor);\n// tslint:disable-next-line:no-function-expression\nLinkShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n\n\n  c.begin();\n  c.moveTo(0, h - 5);\n  c.lineTo(0, 5);\n  c.lineTo(w - 5, 5);\n  c.lineTo(w - 5, 1);\n  c.lineTo(w, h / 2);\n  c.lineTo(w - 5, h - 1);\n  c.lineTo(w - 5, h - 5);\n  c.close();\n  c.fillAndStroke();\n\n};\n\nmxCellRenderer.registerShape('EventLinkShape', LinkShape);\n\n//MultipleShape\nfunction MultipleShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(MultipleShape, mxActor);\n// tslint:disable-next-line:no-function-expression\nMultipleShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n\n\n  c.begin();\n  c.moveTo(w / 2, 0);\n  c.lineTo(w, 8);\n  c.lineTo(w - 3.5, h);\n  c.lineTo(3.5, h);\n  c.lineTo(0, 8);\n  c.close();\n  c.fillAndStroke();\n\n\n};\n\nmxCellRenderer.registerShape('EventMultipleShape', MultipleShape);\n\n//ParallelMultipleShape\nfunction ParallelMultipleShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(ParallelMultipleShape, mxActor);\n// tslint:disable-next-line:no-function-expression\nParallelMultipleShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n\n  c.begin();\n  c.moveTo(0, h / 2 + 2);\n  c.lineTo(0, h / 2 - 2);\n  c.lineTo(w / 2 - 2, h / 2 - 2);\n  c.lineTo(w / 2 - 2, 0);\n  c.lineTo(w / 2 + 2, 0);\n  c.lineTo(w / 2 + 2, h / 2 - 2);\n  c.lineTo(w, h / 2 - 2);\n  c.lineTo(w, h / 2 + 2);\n  c.lineTo(w / 2 + 2, h / 2 + 2);\n  c.lineTo(w / 2 + 2, h);\n  c.lineTo(w / 2 - 2, h);\n  c.lineTo(w / 2 - 2, h / 2 + 2);\n  c.lineTo(0, h / 2 + 2);\n  c.lineTo(0, h / 2 - 2);\n  c.close();\n  c.fillAndStroke();\n\n};\n\nmxCellRenderer.registerShape('EventParallelMultipleShape', ParallelMultipleShape);\n\n//ParallelMultipleShape\nfunction RuleShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(RuleShape, mxActor);\n// tslint:disable-next-line:no-function-expression\nRuleShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n  c.rect(0, 0, w, h);\n  c.stroke();\n  c.begin();\n  c.moveTo(2, h / 6);\n  c.lineTo(w - 2, h / 6);\n  c.moveTo(2, h / 6 * 2);\n  c.lineTo(w - 2, h / 6 * 2);\n  c.moveTo(2, h / 6 * 3);\n  c.lineTo(w - 2, h / 6 * 3);\n  c.moveTo(2, h / 6 * 4);\n  c.lineTo(w - 2, h / 6 * 4);\n  c.moveTo(2, h / 6 * 5);\n  c.lineTo(w - 2, h / 6 * 5);\n  c.stroke();\n\n};\n\nmxCellRenderer.registerShape('EventRuleShape', RuleShape);\n\n\n//ParallelMultipleShape\nfunction EscalationShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(EscalationShape, mxActor);\n// tslint:disable-next-line:no-function-expression\nEscalationShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n\n  c.begin();\n  c.moveTo(w / 2, 0);\n  c.lineTo(w / 2 - 8, h);\n  c.lineTo(w / 2, h - 3);\n  c.lineTo(w / 2 + 8, h);\n  c.lineTo(w / 2, 0);\n  c.fillAndStroke();\n\n};\n\nmxCellRenderer.registerShape('EventEscalationShape', EscalationShape);\n\n//TerminateShape\nfunction TerminateShape(this: any) {\n  mxActor.call(this);\n}\nmxUtils.extend(TerminateShape, mxActor);\n// tslint:disable-next-line:no-function-expression\nTerminateShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\n\n  c.ellipse(w * 0.15, h * 0.15, w * 0.70, w * 0.70);\n  c.fillAndStroke();\n\n  // const arcStartY =h/2;//19.125;\n  // const arcStartX =0;//14.5;\n  // const arcRay = 13;\n  // c.begin();\n  // c.moveTo(arcStartX, arcStartY);\n  // c.arcTo(arcRay, arcRay, 0, 1, 1, arcStartX + 2 * arcRay, arcStartY);\n  // c.arcTo(arcRay, arcRay, 0, 0, 1, arcStartX, arcStartY);\n  // c.close();\n  // c.fillAndStroke();\n\n};\n\nmxCellRenderer.registerShape('EventTerminateShape', TerminateShape);\n","\r\nimport '../bpmninterface';\r\nimport './tsutil_bpmn';\r\nimport {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\t// mxActor,\r\n\tmxShape,\r\n} from \"mxgraph-js\";// Document shape\r\n\r\nimport {\r\n\tBPMN_EventTypeName,\r\n\tBPMN_TriggerTypeName,\r\n\tBPMN_AttributeTypeName\r\n} from '../bpmninterface';\r\n\r\n\r\n\r\n\r\n//BPMN Event shape\r\nfunction BpmnEventShape(this: any, bounds: any, fill: any, stroke: any, strokewidth: any) {\r\n\tmxShape.call(this);\r\n\tthis.bounds = bounds;\r\n\tthis.fill = fill;\r\n\tthis.stroke = stroke;\r\n\tthis.strokewidth = (strokewidth) ? strokewidth : 1;\r\n}\r\n\r\n/**\r\n * Extends mxShape.\r\n */\r\nmxUtils.extend(BpmnEventShape, mxShape);\r\n\r\nBpmnEventShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\t//var rSize = 5;\r\n\tc.ellipse(0, 0, w, h);\r\n\tc.stroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\n//BpmnGatewayShape.prototype.paintVertexShape = function(c, x, y, w, h)\r\nBpmnEventShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\r\n\tlet evType = mxUtils.getValue(this.style, BPMN_AttributeTypeName.EventType, null);\r\n\tlet trType = mxUtils.getValue(this.style, BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.None);\r\n\r\n\tswitch (evType) {\r\n\t\tcase BPMN_EventTypeName.Start: {\r\n\t\t\tc.ellipse(0, 0, w, h);\r\n\t\t\tc.fillAndStroke();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_EventTypeName.Intermediate: {\r\n\t\t\tc.ellipse(0, 0, w, h);\r\n\t\t\tc.fillAndStroke();\r\n\t\t\tc.ellipse(3, 3, w * 0.85, h * 0.85);\r\n\t\t\tc.stroke();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_EventTypeName.End: {\r\n\t\t\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\t\t\tc.setStrokeWidth(strokeWidth*2);\r\n\t\t\tc.ellipse(0, 0, w, h);\r\n\t\t\t// c.stroke();\r\n\t\t\t// c.ellipse(4, 4, w * 0.8, h * 0.8);\r\n\t\t\tc.fillAndStroke();\r\n\t\t\tc.setStrokeWidth(strokeWidth);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tswitch (trType) {\r\n\t\tcase BPMN_TriggerTypeName.None: {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TriggerTypeName.Timer: {\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('EventTimerShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TriggerTypeName.Cancel: {\r\n\t\t\tc.translate(w * 0.22, h * 0.22);\r\n\t\t\tw = w * 0.56;\r\n\t\t\th = h * 0.56;\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('EventCancelShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TriggerTypeName.Terminate: {\r\n\t\t\tc.translate(w * 0.05, h * 0.05);\r\n\t\t\tw = w * 0.9;\r\n\t\t\th = h * 0.9;\r\n\t\t\t// c.setFillColor(strokeColor);\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('EventTerminateShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\t// c.setFillColor(strokeColor);\r\n\t\t\t// c.ellipse(w * 0.15, h * 0.15, w * 0.70, w * 0.70);\r\n\t\t\t// c.fillAndStroke();\r\n\t\t\t/*const stencil = mxStencilRegistry.getStencil('BpmnTerminate');\r\n\t\t\tif (stencil) {\r\n\t\t\t  stencil.drawShape(c, this, 0, 0, w, h);\r\n\t\t\t}*/\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TriggerTypeName.Compensation: {\r\n\t\t\tc.translate(w * 0.28, h * 0.35);\r\n\t\t\tw = w * 0.44;\r\n\t\t\th = h * 0.3;\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('EventCompensationShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TriggerTypeName.Error: {\r\n\t\t\tc.translate(w * 0.212, h * 0.243);\r\n\t\t\tw = w * 0.58;\r\n\t\t\th = h * 0.507;\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('EventErrorShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TriggerTypeName.Link: {\r\n\t\t\tc.translate(w * 0.27, h * 0.33);\r\n\t\t\tw = w * 0.46;\r\n\t\t\th = h * 0.34;\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('EventLinkShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TriggerTypeName.Message: {\r\n\t\t\tc.translate(w * 0.25, h * 0.25);\r\n\t\t\tw = w * 0.5;\r\n\t\t\th = h * 0.5;\r\n\t\t\t// c.setStrokeWidth(1);\r\n\t\t\t// c.translate(w * 0.15, h * 0.3);\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('envelopeSendShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TriggerTypeName.Rule: {\r\n\t\t\tc.translate(w * 0.3, h * 0.16);\r\n\t\t\tw = w * 0.4;\r\n\t\t\th = h * 0.68;\r\n\t\t\t// c.setStrokeWidth(1);\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('EventRuleShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TriggerTypeName.Multiple: {\r\n\t\t\tc.translate(w * 0.212, h * 0.243);\r\n\t\t\tw = w * 0.58;\r\n\t\t\th = h * 0.507;\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('EventMultipleShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TriggerTypeName.ParallelMultiple: {\r\n\t\t\tc.translate(w * 0.2, h * 0.2);\r\n\t\t\tw = w * 0.6;\r\n\t\t\th = h * 0.6;\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('EventParallelMultipleShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TriggerTypeName.Signal: {\r\n\t\t\tc.translate(w * 0.19, h * 0.15);\r\n\t\t\tw = w * 0.62;\r\n\t\t\th = h * 0.57;\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('EventSignalShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase BPMN_TriggerTypeName.Escalation: {\r\n\t\t\tc.translate(w * 0.19, h * 0.15);\r\n\t\t\tw = w * 0.62;\r\n\t\t\th = h * 0.57;\r\n\t\t\tlet shp = mxCellRenderer.prototype.getShape('EventEscalationShape');\r\n\t\t\tshp.prototype.redrawPath(c, 0, 0, w, h);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nmxCellRenderer.registerShape('bpmnevent', BpmnEventShape);\r\nconsole.debug(\"Event Shapes registered\");\r\n","\r\nimport {\r\n  BPMN_TaskTypeName,\r\n  BPMN_AttributeTypeName,\r\n  BPMN_TriggerTypeName,\r\n  BPMN_SubprocessOrdering\r\n} from '../bpmninterface';\r\n\r\nimport {\r\n  mxUtils,\r\n  // mxRectangle,\r\n  mxCellRenderer,\r\n  mxActor,\r\n  // mxShape,\r\n} from \"mxgraph-js\";// Document shape\r\n\r\n\r\nfunction BpmnTaskEventShape(this: any) {\r\n  mxActor.call(this);\r\n  this.isRounded = true;\r\n  this.strokewidth = 2;\r\n  // this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(BpmnTaskEventShape, mxActor);\r\n\r\nBpmnTaskEventShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n  let strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n  let strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n  let fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\t\r\n  c.setStrokeColor(strokeColor);\r\n  // c.setStrokeColor('#000000');\r\n  c.setStrokeWidth(strokeWidth);\r\n  c.setFillColor(fillColor);\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n  c.translate(x, y);\r\n  let rSize = 5;\r\n\r\n  c.roundrect(0, 0, w, h, rSize, rSize);\r\n  c.fillAndStroke();\r\n\r\n  // c.setShadow(false);\r\n  this.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nBpmnTaskEventShape.prototype.redrawPath = function (c: any, _x: any, _y: any, w: any, h: any) {\r\n  let trType = mxUtils.getValue(this.style, BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.None);\r\n  let ttype = mxUtils.getValue(this.style, BPMN_AttributeTypeName.TaskType, \"none\");\r\n\r\n  //var rSize = 5;\r\n  // c.translate(x+w*0.3, y);\r\n  let he = h * 0.3;\r\n  let we = h * 0.3;\r\n  c.ellipse(we * 0.5, h - he * 0.5, he, we);\r\n  c.fillAndStroke();\r\n\r\n\r\n  switch (trType) {\r\n    case BPMN_TriggerTypeName.None: {\r\n      break;\r\n    }\r\n    case BPMN_TriggerTypeName.Timer: {\r\n      // c.translate(w * 0.11, h * 0.11);\r\n      let w1 = we;\r\n      let h1 = he;\r\n      let shp = mxCellRenderer.prototype.getShape('EventTimerShape');\r\n      const dex = we * 0.5 + w1 * 0.5;\r\n      const dey = h - he * 0.5 + h1 * 0.5;\r\n      c.translate(dex, dey);\r\n      shp.prototype.redrawPath(c, 0, 0, w1, h1);\r\n      c.translate(-dex, -dey);\r\n      break;\r\n    }\r\n    case BPMN_TriggerTypeName.Cancel: {\r\n      // c.translate(w * 0.22, h * 0.22);\r\n      let w1 = we * 0.56;\r\n      let h1 = he * 0.56;\r\n      let shp = mxCellRenderer.prototype.getShape('EventCancelShape');\r\n      const dex = we * 0.5 + w1 * 0.5;\r\n      const dey = h - he * 0.5 + h1 * 0.5;\r\n      c.translate(dex, dey);\r\n      shp.prototype.redrawPath(c, 0, 0, w1, h1);\r\n      c.translate(-dex, -dey);\r\n      break;\r\n    }\r\n    case BPMN_TriggerTypeName.Terminate: {\r\n      // c.translate(w * 0.05, h * 0.05);\r\n      let w1 = we * 0.9;\r\n      let h1 = he * 0.9;\r\n      // let strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n      // c.setFillColor(strokeColor);\r\n      let shp = mxCellRenderer.prototype.getShape('EventTerminateShape');\r\n      const dex = we * 0.5 + w1 * 0.5;\r\n      const dey = h - he * 0.5 + h1 * 0.5;\r\n      c.translate(dex, dey);\r\n      shp.prototype.redrawPath(c, 0, 0, w1, h1);\r\n      c.translate(-dex, -dey);\r\n      break;\r\n    }\r\n    case BPMN_TriggerTypeName.Compensation: {\r\n      // c.translate(w * 0.28, h * 0.35);\r\n      let w1 = we * 0.44;\r\n      let h1 = he * 0.3;\r\n      let shp = mxCellRenderer.prototype.getShape('EventCompensationShape');\r\n      const dex = we * 0.5 + w1 * 0.5;\r\n      const dey = h - he * 0.5 + h1 * 0.5;\r\n      c.translate(dex, dey);\r\n      shp.prototype.redrawPath(c, 0, 0, w1, h1);\r\n      c.translate(-dex, -dey);\r\n      break;\r\n    }\r\n    case BPMN_TriggerTypeName.Error: {\r\n      // c.translate(w * 0.212, h * 0.243);\r\n      let w1 = we * 0.58;\r\n      let h1 = he * 0.507;\r\n      let shp = mxCellRenderer.prototype.getShape('EventErrorShape');\r\n      const dex = we * 0.5 + w1 * 0.5;\r\n      const dey = h - he * 0.5 + h1 * 0.5;\r\n      c.translate(dex, dey);\r\n      shp.prototype.redrawPath(c, 0, 0, w1, h1);\r\n      c.translate(-dex, -dey);\r\n      break;\r\n    }\r\n    case BPMN_TriggerTypeName.Link: {\r\n      // c.translate(w * 0.27, h * 0.33);\r\n      let w1 = we * 0.46;\r\n      let h1 = he * 0.34;\r\n      let shp = mxCellRenderer.prototype.getShape('EventLinkShape');\r\n      const dex = we * 0.5 + w1 * 0.5;\r\n      const dey = h - he * 0.5 + h1 * 0.5;\r\n      c.translate(dex, dey);\r\n      shp.prototype.redrawPath(c, 0, 0, w1, h1);\r\n      c.translate(-dex, -dey);\r\n      break;\r\n    }\r\n    case BPMN_TriggerTypeName.Message: {\r\n      // c.translate(w * 0.25, h * 0.25);\r\n      let w1 = we * 0.5;\r\n      let h1 = he * 0.5;\r\n      // c.setStrokeWidth(1);\r\n      // c.translate(w * 0.15, h * 0.3);\r\n      let shp = mxCellRenderer.prototype.getShape('envelopeSendShape');\r\n      const dex = we * 0.5 + w1 * 0.5;\r\n      const dey = h - he * 0.5 + h1 * 0.5;\r\n      c.translate(dex, dey);\r\n      shp.prototype.redrawPath(c, 0, 0, w1, h1);\r\n      c.translate(-dex, -dey);\r\n      break;\r\n    }\r\n    case BPMN_TriggerTypeName.Rule: {\r\n      // c.translate(w * 0.3, h * 0.16);\r\n      let w1 = we * 0.4;\r\n      let h1 = he * 0.68;\r\n      // c.setStrokeWidth(1);\r\n      let shp = mxCellRenderer.prototype.getShape('EventRuleShape');\r\n      const dex = we * 0.5 + w1 * 0.5;\r\n      const dey = h - he * 0.5 + h1 * 0.5;\r\n      c.translate(dex, dey);\r\n      shp.prototype.redrawPath(c, 0, 0, w1, h1);\r\n      c.translate(-dex, -dey);\r\n      break;\r\n    }\r\n    case BPMN_TriggerTypeName.Multiple: {\r\n      // c.translate(w * 0.212, h * 0.243);\r\n      let w1 = we * 0.58;\r\n      let h1 = he * 0.507;\r\n      let shp = mxCellRenderer.prototype.getShape('EventMultipleShape');\r\n      const dex = we * 0.5 + w1 * 0.5;\r\n      const dey = h - he * 0.5 + h1 * 0.5;\r\n      c.translate(dex, dey);\r\n      shp.prototype.redrawPath(c, 0, 0, w1, h1);\r\n      c.translate(-dex, -dey);\r\n      break;\r\n    }\r\n    case BPMN_TriggerTypeName.ParallelMultiple: {\r\n      // c.translate(w * 0.2, h * 0.2);\r\n      let w1 = we * 0.6;\r\n      let h1 = he * 0.6;\r\n      let shp = mxCellRenderer.prototype.getShape('EventParallelMultipleShape');\r\n      const dex = we * 0.5 + w1 * 0.5;\r\n      const dey = h - he * 0.5 + h1 * 0.5;\r\n      c.translate(dex, dey);\r\n      shp.prototype.redrawPath(c, 0, 0, w1, h1);\r\n      c.translate(-dex, -dey);\r\n      break;\r\n    }\r\n    case BPMN_TriggerTypeName.Signal: {\r\n      // c.translate(w * 0.19, h * 0.15);\r\n      let w1 = we * 0.62;\r\n      let h1 = he * 0.57;\r\n      let shp = mxCellRenderer.prototype.getShape('EventSignalShape');\r\n      const dex = we * 0.5 + w1 * 0.5;\r\n      const dey = h - he * 0.5 + h1 * 0.5;\r\n      c.translate(dex, dey);\r\n      shp.prototype.redrawPath(c, 0, 0, w1, h1);\r\n      c.translate(-dex, -dey);\r\n      break;\r\n    }\r\n    case BPMN_TriggerTypeName.Escalation: {\r\n      // c.translate(w * 0.19, h * 0.15);\r\n      let w1 = we * 0.62;\r\n      let h1 = he * 0.57;\r\n      let shp = mxCellRenderer.prototype.getShape('EventEscalationShape');\r\n      const dex = we * 0.5 + w1 * 0.5;\r\n      const dey = h - he * 0.5 + h1 * 0.5;\r\n      c.translate(dex, dey);\r\n      shp.prototype.redrawPath(c, 0, 0, w1, h1);\r\n      c.translate(-dex, -dey);\r\n      break;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // c.translate(x, y);\r\n\r\n  let ao = mxUtils.getValue(this.style, BPMN_AttributeTypeName.SubProcessOrdering, \"\");\r\n  let ah = mxUtils.getValue(this.style, BPMN_AttributeTypeName.adhoc, \"\");\r\n  let co = mxUtils.getValue(this.style, BPMN_AttributeTypeName.Compensation, \"\");\r\n  let re = mxUtils.getValue(this.style, BPMN_AttributeTypeName.refinement, \"\");\r\n\r\n  let isLoopSub = (re.toString().length > 0);\r\n  let isLoopStandard = (ao === BPMN_SubprocessOrdering.Loop);\r\n  let isLoopMultiParallel = (ao === BPMN_SubprocessOrdering.Parallel);\r\n  let isLoopMultiSeq = (ao === BPMN_SubprocessOrdering.Sequential);\r\n  let isLoopComp = false;\r\n  let isAdHoc = (ah.length > 0);\r\n  let isCompensation = (co.length > 0);\r\n\r\n  let loopnum = 0;\r\n\r\n  if (isLoopStandard) loopnum++;\r\n  if (isLoopMultiParallel) loopnum++;\r\n  if (isLoopMultiSeq) loopnum++;\r\n  if (isLoopComp) loopnum++;\r\n  if (isLoopSub) loopnum++;\r\n  if (isAdHoc) loopnum++;\r\n  if (isCompensation) loopnum++;\r\n\r\n  const iconSpaceX = 14;\r\n  const offsetY = 14;\r\n  let currXOffset = - iconSpaceX * loopnum * 0.5;\r\n\r\n  if (isLoopStandard) {\r\n    c.setStrokeWidth(1);\r\n    let shp = mxCellRenderer.prototype.getShape('loopShape');\r\n    let dx = w * 0.5 + currXOffset + 2;\r\n    let dy = h - offsetY + 1;\r\n    c.translate(dx, dy);\r\n    // shp.prototype.redrawPath(c, w * 0.5 + currXOffset + 1, h - offsetY + 1, 12, 12);\r\n    shp.prototype.redrawPath(c, 0, 0, 12, 12);\r\n    c.stroke();\r\n    currXOffset += iconSpaceX;\r\n    c.translate(-dx, -dy);\r\n\r\n  }\r\n  if (isLoopMultiParallel) {\r\n    c.translate(w * 0.5 + currXOffset + 1, h - offsetY + 1);\r\n\r\n    c.begin();\r\n    c.moveTo(2.4, 0);\r\n    c.lineTo(2.4, 12);\r\n    c.moveTo(6, 0);\r\n    c.lineTo(6, 12);\r\n    c.moveTo(9.6, 0);\r\n    c.lineTo(9.6, 12);\r\n    c.stroke();\r\n\r\n    c.translate(- w * 0.5 - currXOffset - 1, offsetY - 1 - h);\r\n    currXOffset += iconSpaceX;\r\n  }\r\n\r\n  if (isLoopMultiSeq) {\r\n    c.translate(w * 0.5 + currXOffset + 1, h - offsetY + 1);\r\n\r\n    c.begin();\r\n    c.moveTo(0, 2.4);\r\n    c.lineTo(12, 2.4);\r\n    c.moveTo(0, 6);\r\n    c.lineTo(12, 6);\r\n    c.moveTo(0, 9.6);\r\n    c.lineTo(12, 9.6);\r\n    c.stroke();\r\n\r\n    c.translate(- w * 0.5 - currXOffset - 1, offsetY - 1 - h);\r\n    currXOffset += iconSpaceX;\r\n  }\r\n\r\n  if (isLoopComp) {\r\n    // var stencil = mxStencilRegistry.getStencil('mxgraph.bpmn.compensation');\r\n    // if (stencil != null) {\r\n    // \tstencil.drawShape(c, this, w * 0.5 + currXOffset, h - offsetY + 1, 14, 12);\r\n    // \tcurrXOffset += iconSpaceX;\r\n    // }\r\n  }\r\n\r\n  if (isLoopSub) {\r\n    c.translate(w * 0.5 + currXOffset, h - offsetY);\r\n\r\n    c.rect(0, 0, 14, 14);\r\n    c.stroke();\r\n\r\n    c.begin();\r\n    c.moveTo(4, 7);\r\n    c.lineTo(10, 7);\r\n    c.moveTo(7, 4);\r\n    c.lineTo(7, 10);\r\n    c.stroke();\r\n\r\n    c.translate(- w * 0.5 - currXOffset, offsetY - h);\r\n    currXOffset += iconSpaceX;\r\n  }\r\n\r\n  if (isAdHoc) {\r\n    c.translate(w * 0.5 + currXOffset, h - offsetY);\r\n    c.begin();\r\n    c.moveTo(0, 5);\r\n    c.curveTo(3, 0, 6, 8, 9, 3);\r\n    c.stroke();\r\n    c.translate(- w * 0.5 - currXOffset, offsetY - h);\r\n    currXOffset += iconSpaceX;\r\n  }\r\n\r\n  if (isCompensation) {\r\n    c.translate(w * 0.5 + currXOffset, h - offsetY);\r\n    c.begin();\r\n\t\tc.moveTo(0, 7);\r\n\t\tc.lineTo(5, 7 / 2);\r\n\t\tc.lineTo(5, 7 * 1.5);\r\n\t\tc.lineTo(0, 7);\r\n\t\tc.stroke();\r\n\t\tc.close();\r\n\t\tc.begin();\r\n\t\tc.moveTo(5, 7);\r\n\t\tc.lineTo((5) * 2, 7 / 2);\r\n\t\tc.lineTo((7 - 2) * 2, 7 * 1.5);\r\n\t\tc.lineTo(7 - 2, 7);\r\n\t\tc.close();\r\n\t\tc.stroke();\r\n    c.translate(- w * 0.5 - currXOffset, offsetY - h);\r\n    currXOffset += iconSpaceX;\r\n  }\r\n\r\n\r\n  switch (ttype) {\r\n    case BPMN_TaskTypeName.Manual: {\r\n      c.setStrokeWidth(1);\r\n      c.translate(3, 3);\r\n      let shp = mxCellRenderer.prototype.getShape('manualShape');\r\n      shp.prototype.redrawPath(c, 0, 0, 18, 14);\r\n      break;\r\n    }\r\n    case BPMN_TaskTypeName.User: {\r\n      c.setStrokeWidth(1);\r\n      c.translate(2, 2);\r\n      let shp = mxCellRenderer.prototype.getShape('userShape');\r\n      shp.prototype.redrawPath(c, 0, 0, 16, 16);\r\n      break;\r\n    }\r\n    case BPMN_TaskTypeName.BusinessRule: {\r\n      c.setStrokeWidth(1);\r\n      c.translate(4, 4);\r\n      let shp = mxCellRenderer.prototype.getShape('businessRuleShape');\r\n      shp.prototype.redrawPath(c, 0, 0, 18, 14);\r\n      break;\r\n    }\r\n    case BPMN_TaskTypeName.Script: {\r\n      c.setStrokeWidth(1);\r\n      c.translate(3, 3);\r\n      let shp = mxCellRenderer.prototype.getShape('scriptShape');\r\n      shp.prototype.redrawPath(c, 0, 0, 19, 18);\r\n      break;\r\n    }\r\n    case BPMN_TaskTypeName.Service: {\r\n      c.setStrokeWidth(1);\r\n      c.translate(2, 2);\r\n      let shp = mxCellRenderer.prototype.getShape('gearShape');\r\n      shp.prototype.redrawPath(c, 0, 0, 16, 16);\r\n      break;\r\n    }\r\n    case BPMN_TaskTypeName.Receive: {\r\n      // c.setStrokeWidth(1);\r\n      // c.translate(4, 4);\r\n      // let shp = mxCellRenderer.prototype.getShape('envelopeSendShape')\r\n      // shp.prototype.redrawPath(c, 0, 0, 18, 13);\r\n      c.translate(1, 1);\r\n\r\n      let tmpW = w * 0.2;\r\n      let tmpH = h * 0.2;\r\n\r\n      c.setStrokeWidth(1);\r\n      c.rect(2, 2, tmpW, tmpH);\r\n      c.fillAndStroke();\r\n      // Paint the envelope closure\r\n      c.begin();\r\n      // V line\r\n      c.moveTo(2, 2);\r\n      c.lineTo(2 + (tmpW) * 0.5, 2 + tmpH * 0.6);\r\n      c.lineTo(2 + (tmpW), 2);\r\n      c.close();\r\n      c.fillAndStroke();\r\n      // First bottom line\r\n      c.moveTo(2, 2 + tmpH);\r\n      c.lineTo(2 + (tmpW) / 3, 2 + tmpH * 0.45);\r\n      c.close();\r\n      c.fillAndStroke();\r\n      // Second bottom line\r\n      c.moveTo(2 + (tmpW), 2 + tmpH);\r\n      c.lineTo(2 + ((tmpW) * 2) / 3, 2 + tmpH * 0.45);\r\n      c.stroke();\r\n      c.close();\r\n      c.fillAndStroke();\r\n\r\n      /*const stencil = mxStencilRegistry.getStencil('MessageSend Task');\r\n      if (stencil) {\r\n        stencil.drawShape(c, this, 2, 2, 16, 16);\r\n      }*/\r\n      break;\r\n    }\r\n    case BPMN_TaskTypeName.Send: {\r\n      // c.setStrokeWidth(1);\r\n      // c.translate(4, 4);\r\n      // let shp = mxCellRenderer.prototype.getShape('envelopeReceiveShape')\r\n      // shp.prototype.redrawPath(c, 0, 0, 18, 13);\r\n      c.translate(1, 1);\r\n\r\n      let tmpW = w * 0.2;\r\n      let tmpH = h * 0.2;\r\n\r\n      let strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n      let fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n      c.setStrokeColor(fillColor);\r\n      c.setFillColor(strokeColor);\r\n\r\n      c.setStrokeWidth(1);\r\n      c.rect(2, 2, tmpW, tmpH);\r\n      c.fillAndStroke();\r\n      // Paint the envelope closure\r\n      c.begin();\r\n      // V line\r\n      c.moveTo(2, 2);\r\n      // c.moveTo(4, 4);\r\n\r\n      c.lineTo(2 + (tmpW) * 0.5, 2 + tmpH * 0.6);\r\n      c.lineTo(2 + (tmpW), 2);\r\n      c.close();\r\n      c.fillAndStroke();\r\n      // First bottom line\r\n      c.moveTo(2, 2 + tmpH);\r\n      c.lineTo(2 + (tmpW) / 3, 2 + tmpH * 0.45);\r\n      c.close();\r\n      c.fillAndStroke();\r\n      // Second bottom line\r\n      c.moveTo(2 + (tmpW), 2 + tmpH);\r\n      c.lineTo(2 + ((tmpW) * 2) / 3, 2 + tmpH * 0.45);\r\n      c.stroke();\r\n      c.close();\r\n      c.fillAndStroke();\r\n\r\n      /*const stencil = mxStencilRegistry.getStencil('MessageReceive Task');\r\n      if (stencil) {\r\n        stencil.drawShape(c, this, 2, 2, 16, 16);\r\n      }*/\r\n      break;\r\n    }\r\n    case BPMN_TaskTypeName.InstantiationReceive: {\r\n      // c.setStrokeWidth(1);\r\n      // c.translate(3, 3);\r\n      // let shp = mxCellRenderer.prototype.getShape('instantiationReceiveShape')\r\n      // shp.prototype.redrawPath(c, 0, 0, 18, 18);\r\n\r\n      let tmpW = w * 0.2;\r\n      let tmpH = h * 0.2;\r\n\r\n      c.setStrokeWidth(1);\r\n      c.ellipse(2, 2, tmpW, tmpH);\r\n      c.stroke();\r\n      let tmpW2 = tmpW * 0.6;\r\n      let tmpH2 = tmpH * 0.5;\r\n      c.rect(5, 5, tmpW2, tmpH2);\r\n      c.fillAndStroke();\r\n      c.begin();\r\n      c.moveTo(5, 4);\r\n      c.lineTo(5 + (tmpW2) * 0.5, 5 + tmpH2 * 0.6);\r\n      c.lineTo(5 + (tmpW2), 5);\r\n      c.close();\r\n      c.fillAndStroke();\r\n      // First bottom line\r\n      c.moveTo(5, 5 + tmpH2);\r\n      c.lineTo(5 + (tmpW2) / 3, 5 + tmpH2 * 0.45);\r\n      c.close();\r\n      c.fillAndStroke();\r\n\r\n      /*const stencil = mxStencilRegistry.getStencil('Instantiation Task');\r\n      if (stencil) {\r\n        stencil.drawShape(c, this, 2, 2, 16, 16);\r\n      }*/\r\n      break;\r\n    }\r\n    case BPMN_TaskTypeName.None: {\r\n      break;\r\n    }\r\n\r\n  }\r\n  c.fillAndStroke();\r\n\r\n};\r\n\r\nmxCellRenderer.registerShape('bpmntaskevent', BpmnTaskEventShape);\r\n// console.debug(\"Task Shapes registered\");","import { SemTalkStencil } from \"../../visiordfsinterface\";\r\n\r\nexport const BPMN_STENCIL0: SemTalkStencil = [\r\n  {\r\n    name: 'Swimlane',\r\n    key: 'swimlane',\r\n    logo: '/images/symbols/Pool_Lane.png',\r\n    width: 600,\r\n    height: 120,\r\n    type: \"general\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  // {\r\n  //   name: 'Task',\r\n  //   key: 'Rounded Rectangle',\r\n  //   logo: '/images/symbols/Task.png',\r\n  //   width: 80,\r\n  //   height: 60,\r\n  //   type: \"general\",\r\n    // hidden: false,\r\n    // label: undefined\r\n  // },\r\n  {\r\n    name: 'Task',\r\n    key: 'Task',\r\n    logo: '/images/symbols/Task.png',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Comment',\r\n    key: 'Comment',\r\n    logo: '/images/symbols/Comment.png',\r\n    width: 60,\r\n    height: 60,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Gateway',\r\n    key: 'Gateway',\r\n    logo: '/images/symbols/Gateway.png',\r\n    width: 60,\r\n    height: 60,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Data Object',\r\n    key: 'Document',\r\n    logo: '/images/document.svg',\r\n    width: 60,\r\n    height: 60,\r\n    type: \"general\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'System',\r\n    key: 'datastore',\r\n    logo: '/images/system.svg',\r\n    width: 60,\r\n    height: 60,\r\n    type: \"svg\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Text',\r\n    key: 'Text',\r\n    logo: '/images/text.gif',\r\n    width: 60,\r\n    height: 60,\r\n    type: \"general\",\r\n    hidden: false,\r\n    label: undefined\r\n  },];\r\n\r\nexport const BPMN_STENCIL1: any[] = [\r\n  {\r\n    name: 'Event',\r\n    key: 'Event',\r\n    subkey: '',\r\n    logo: '/images/symbols/event.png',\r\n    width: 40,\r\n    height: 40,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  }];\r\nexport const BPMN_STENCIL2: any[] = [\r\n  {\r\n    name: 'Start Event',\r\n    key: 'Event',\r\n    subkey: 'Start',\r\n    logo: '/images/symbols/event.png',\r\n    width: 40,\r\n    height: 40,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Intermediate Event',\r\n    key: 'Event',\r\n    subkey: 'Intermediate',\r\n    logo: '/images/symbols/event_intermediate.png',\r\n    width: 40,\r\n    height: 40,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'End Event',\r\n    key: 'Event',\r\n    subkey: 'End',\r\n    logo: '/images/symbols/event_end.png',\r\n    width: 40,\r\n    height: 40,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'AND Gateway',\r\n    key: 'Gateway',\r\n    subkey: 'AND',\r\n    logo: '/images/symbols/fork.png',\r\n    width: 60,\r\n    height: 60,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'COMPLEX Gateway',\r\n    key: 'Gateway',\r\n    subkey: 'COMPLEX',\r\n    logo: '/images/symbols/merge.png',\r\n    width: 60,\r\n    height: 60,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'OR Gateway',\r\n    key: 'Gateway',\r\n    subkey: 'OR',\r\n    logo: '/images/symbols/inclusive.png',\r\n    width: 60,\r\n    height: 60,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Start Timer',\r\n    key: 'Event',\r\n    subkey: 'Start Timer',\r\n    logo: '/images/symbols/timer.png',\r\n    width: 40,\r\n    height: 40,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Send Task',\r\n    key: 'Task',\r\n    subkey: 'Send',\r\n    logo: '/images/symbols/Task.png',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Receive Task',\r\n    key: 'Task',\r\n    subkey: 'Receive',\r\n    logo: '/images/symbols/Task.png',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Event Task',\r\n    key: 'TaskEvent',\r\n    subkey: 'Event',\r\n    logo: '/images/symbols/Task.png',\r\n    width: 80,\r\n    height: 60,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Start Message',\r\n    key: 'Event',\r\n    subkey: 'Start Message',\r\n    logo: '/images/symbols/message.png',\r\n    width: 40,\r\n    height: 40,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Intermediate Message',\r\n    key: 'Event',\r\n    subkey: 'Intermediate Message',\r\n    logo: '/images/symbols/message_intermediate.png',\r\n    width: 40,\r\n    height: 40,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'End Message',\r\n    key: 'Event',\r\n    subkey: 'End Message',\r\n    logo: '/images/symbols/message_end.png',\r\n    width: 40,\r\n    height: 40,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'End Error',\r\n    key: 'Event',\r\n    subkey: 'End Error',\r\n    logo: '/images/symbols/error.png',\r\n    width: 40,\r\n    height: 40,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Start Link',\r\n    key: 'Event',\r\n    subkey: 'Start Link',\r\n    logo: '/images/symbols/link.png',\r\n    width: 40,\r\n    height: 40,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'Intermediate Link',\r\n    key: 'Event',\r\n    subkey: 'Intermediate Link',\r\n    logo: '/images/symbols/link.png',\r\n    width: 40,\r\n    height: 40,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    name: 'End Link',\r\n    key: 'Event',\r\n    subkey: 'End Link',\r\n    logo: '/images/symbols/link.png',\r\n    width: 40,\r\n    height: 40,\r\n    type: \"bpmn\",\r\n    hidden: false,\r\n    label: undefined\r\n  }\r\n];","/* eslint-disable no-lone-blocks */\r\nimport {\r\n  ISemTalkSystemClass,\r\n  ISemTalkAttribute,\r\n  // ISemTalkAttributeType,\r\n  ISemTalkAssociationType,\r\n  SemTalkValueType,\r\n  ISemTalkDiagram,\r\n  ISemTalkDiagramType,\r\n  ISemTalkObject,\r\n  ISemTalkInstance,\r\n  ILabelSpec,\r\n  IObjectBase,\r\n  SemTalkBaseConstant,\r\n  SemTalkLanguage, SemTalkLanguageCode,\r\n  ModelAttribute\r\n} from '../../../tbase/Interface';\r\nimport { Process_Subtask } from '../../procsubtask';\r\nimport { IVisioRDFS } from '../../visiordfsinterface';\r\nimport { SemTalkMaster } from '../../../SemTalkMaster';\r\nimport { Process_ElementName, SIM_AttributeTypeName } from '../../processInterface';\r\nimport { renderUserTab } from './usercontrol';\r\n\r\nimport {\r\n  BPMN_ElementName,\r\n  BPMN_AttributeTypeName,\r\n  BPMN_EventTypeName,\r\n  BPMN_TaskTypeName,\r\n  BPMN_GatewayTypeName,\r\n  BPMN_TriggerType,\r\n  // BPMN_EventType,\r\n  BPMN_GatewayType,\r\n  BPMN_TaskType,\r\n  BPMN_ImplementationType,\r\n  BPMN_SubprocessOrdering,\r\n  BPMN_EventIntermediateType,\r\n  BPMN_TriggerTypeName\r\n} from './bpmninterface';\r\nimport {\r\n  BPMNElements\r\n} from './BPMNElements';\r\nimport { BPMN_SHAPES } from './bpmn-stencil';\r\nimport { ORGCHART_SHAPES } from '../../org-stencil';\r\nimport { SemTalkStencil } from '../../visiordfsinterface';\r\nimport './shapes/index';\r\nimport { BPMN_STENCIL0, BPMN_STENCIL1, BPMN_STENCIL2 } from './Stencil_BPMN';\r\nimport { ORGCHART_STENCIL } from '../../Stencil_ORGCHART';\r\n\r\n\r\nexport class BPMN_Subtask extends Process_Subtask {\r\n  // public static stencil: SemTalkStencil = [];\r\n\r\n  public static init(sem: IVisioRDFS) {\r\n    super.init(sem);\r\n    let gs_super = sem.getOverridable(\"GetShapeStyle\");\r\n    sem.GetShapeStyle = (key: string, shapeType: string): { style: string, isedge: boolean } => {\r\n      let shapeStyle = key;\r\n      let isedge: boolean = false;\r\n      switch (shapeType) {\r\n        case 'bpmn': {\r\n          if (BPMN_SHAPES[key]) {\r\n            if (BPMN_SHAPES[key].type === 'edge') {\r\n              isedge = true;\r\n            }\r\n            shapeStyle = BPMN_SHAPES[key].style;\r\n          }\r\n          break;\r\n        }\r\n        case 'org': {\r\n          if (ORGCHART_SHAPES[key]) {\r\n            if (ORGCHART_SHAPES[key].type === 'edge') {\r\n              isedge = true;\r\n            }\r\n            shapeStyle = ORGCHART_SHAPES[key].style;\r\n          } else {\r\n            shapeStyle = ORGCHART_SHAPES[SemTalkMaster.MasterPosition].style;\r\n          }\r\n          break;\r\n        }\r\n        default: {\r\n          return gs_super(key, shapeType);\r\n        }\r\n      }\r\n      return { style: shapeStyle, isedge: isedge };\r\n    };\r\n\r\n    let ip_super = sem.getOverridable(\"initPage\");\r\n    sem.initPage = (diag: ISemTalkDiagram) => {\r\n      ip_super(diag);\r\n      let isbpmn = (sem.template === \"bpmn\");\r\n      if (isbpmn && diag.Contents().length === 0 && sem.tseditor &&\r\n        sem.page && sem.page.ClassOf().ObjectName === sem.base.GetModelAttribute(Process_ElementName.SLProc)) {\r\n        let sm = sem.GetShapeStyle(SemTalkMaster.MasterSwimlane, \"general\");\r\n        let em = sem.GetShapeStyle(\"Circle\", \"general\");\r\n        let SLENTRYPOINT = sem.base.GetModelAttribute(Process_ElementName.SLEntryPoint);\r\n        let f = sem.base.FindSystemClass(SLENTRYPOINT);\r\n        if (f === null)\r\n          f = sem.base.FindSystemClass(sem.base.GetModelAttribute(Process_ElementName.SLEvent));\r\n        if (f) {\r\n          em = { style: f.Style, isedge: false };\r\n        }\r\n        let parent = sem.graph.getDefaultParent();\r\n        let swshape: mxCell;\r\n        // if (diag.GetValue(\"HorizontalSwimlane\"))\r\n        // {\r\n        //   swshape = this.graph.insertVertex(parent, null, \"\", 0, 0, diag.GetValue(\"SwimlaneHeight\"), diag.GetValue(\"SwimlaneWidth\"), sm.style);\r\n        // }\r\n        // else\r\n        // {\r\n        //   swshape = this.graph.insertVertex(parent, null, \"\", 0, 0, diag.GetValue(\"SwimlaneWidth\"), diag.GetValue(\"SwimlaneHeight\"), sm.style);\r\n        // }\r\n        if (parent) {\r\n          swshape = sem.graph.insertVertex(parent, \"\", \"\", 0, 0, 600, 200, sm.style) as mxCell;\r\n          swshape.shapeName = Process_ElementName.Swimlane;\r\n          swshape.shapeKey = SemTalkMaster.MasterSwimlane;\r\n          let evshape = sem.graph.insertVertex(swshape, \"\", \"\", 50, 200 / 2 - 30, 40, 40, em.style);\r\n          if (evshape) {\r\n            evshape.shapeName = \"Start Event\";\r\n            evshape.shapeKey = \"Event\";\r\n            //   this.insertSwimlane(swshape);\r\n            sem.visShapeAdded(evshape);\r\n          }\r\n          sem.visShapeAdded(swshape);\r\n        }\r\n        sem.tseditor.refresh();\r\n        // console.debug(swshape);\r\n      }\r\n    };\r\n\r\n    let qs_super = sem.getOverridable(\"quickShapes\");\r\n    sem.quickShapes = (oid: number, stencil: any): any[] => {\r\n      const ob = sem.base;\r\n      let targets: string[] = [];\r\n      const badlist = [SemTalkBaseConstant.SLComment, SemTalkBaseConstant.SLSwimlane,\r\n      ob.GetModelAttribute(Process_ElementName.SLDataObject)];\r\n      const src = ob.FindObjectByID(oid);\r\n      if (src) {\r\n        let sc: ISemTalkObject | null = src.SystemClass();\r\n        if (sc === null) sc = src;\r\n        if (sc && badlist.indexOf(sc.ObjectName) < 0) {\r\n          switch (sc.ObjectName) {\r\n            case ob.GetModelAttribute(Process_ElementName.SLActivity): {\r\n              targets.push(ob.GetModelAttribute(BPMN_ElementName.SLDecision));\r\n              targets.push(ob.GetModelAttribute(Process_ElementName.SLActivity));\r\n              targets.push(\"Intermediate Event\");\r\n              targets.push(ob.GetModelAttribute(Process_ElementName.SLEvent));\r\n              targets.push(\"End Event\");\r\n              targets.push(ob.GetModelAttribute(Process_ElementName.SLDataObject));\r\n              targets.push(\"Connector\");\r\n              break;\r\n            }\r\n            case ob.GetModelAttribute(BPMN_ElementName.SLDecision): {\r\n              targets.push(ob.GetModelAttribute(BPMN_ElementName.SLDecision));\r\n              targets.push(ob.GetModelAttribute(Process_ElementName.SLActivity));\r\n              targets.push(\"Intermediate Event\");\r\n              targets.push(ob.GetModelAttribute(Process_ElementName.SLEvent));\r\n              targets.push(\"End Event\");\r\n              targets.push(\"Connector\");\r\n              break;\r\n            }\r\n            case ob.GetModelAttribute(Process_ElementName.SLEvent): {\r\n              switch (src.GetValue(BPMN_AttributeTypeName.EventType)) {\r\n                case BPMN_EventTypeName.Start: {\r\n                  targets.push(ob.GetModelAttribute(Process_ElementName.SLActivity));\r\n                  targets.push(ob.GetModelAttribute(BPMN_ElementName.SLDecision));\r\n                  targets.push(\"Intermediate Event\");\r\n                  targets.push(\"End Event\");\r\n                  targets.push(\"Connector\");\r\n                  break;\r\n                }\r\n                case BPMN_EventTypeName.Intermediate: {\r\n                  targets.push(ob.GetModelAttribute(Process_ElementName.SLActivity));\r\n                  targets.push(ob.GetModelAttribute(BPMN_ElementName.SLDecision));\r\n                  targets.push(\"Intermediate Event\");\r\n                  targets.push(\"End Event\");\r\n                  targets.push(\"Connector\");\r\n                  break;\r\n                }\r\n                case BPMN_EventTypeName.End: {\r\n                  break;\r\n                }\r\n                default: {\r\n                  targets.push(ob.GetModelAttribute(Process_ElementName.SLActivity));\r\n                  targets.push(ob.GetModelAttribute(BPMN_ElementName.SLDecision));\r\n                  targets.push(\"Intermediate Event\");\r\n                  targets.push(\"Event\");\r\n                  targets.push(\"End Event\");\r\n                  targets.push(\"XOR\");\r\n                  targets.push(\"AND\");\r\n                  targets.push(\"Connector\");\r\n                  break;\r\n                }\r\n\r\n              }\r\n              break;\r\n            }\r\n            default: {\r\n              return qs_super(oid, stencil);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      let masters: any[] = [];\r\n      for (let key of targets)\r\n        for (let m of stencil) {\r\n          if (m.name === key)\r\n            masters.push(m);\r\n        }\r\n      return masters;\r\n    };\r\n\r\n    let ei_super = sem.getOverridable(\"EnsureInstance\");\r\n    sem.EnsureInstance = (cl: ISemTalkSystemClass, mst: string, subkey: string): ISemTalkInstance => {\r\n      let obj = ei_super(cl, mst, subkey);\r\n      if (mst === \"Event\") {\r\n        switch (subkey) {\r\n          case \"Start\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.Start);\r\n            break;\r\n          }\r\n          case \"Intermediate\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.Intermediate);\r\n            break;\r\n          }\r\n          case \"End\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.End);\r\n            break;\r\n          }\r\n          case \"End Error\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.End);\r\n            obj.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Error);\r\n            break;\r\n          }\r\n          case \"Start Timer\":\r\n          case \"Timer Start\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.Start);\r\n            obj.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Timer);\r\n            break;\r\n          }\r\n          case \"Start Message\":\r\n          case \"Message Start\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.Start);\r\n            obj.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Message);\r\n            break;\r\n          }\r\n          case \"Message Intermediate\":\r\n          case \"Intermediate Message\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.Intermediate);\r\n            obj.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Message);\r\n            break;\r\n          }\r\n          case \"Message End\":\r\n          case \"End Message\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.End);\r\n            obj.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Message);\r\n            break;\r\n          }\r\n          case \"Start Link\":\r\n          case \"Link Start\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.Start);\r\n            obj.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Link);\r\n            break;\r\n          }\r\n          case \"Link Intermediate\":\r\n          case \"Intermediate Link\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.Intermediate);\r\n            obj.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Link);\r\n            break;\r\n          }\r\n          case \"Link End\":\r\n          case \"End Link\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.End);\r\n            obj.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Link);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (mst === \"Gateway\") {\r\n        switch (subkey) {\r\n          case \"OR\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.GatewayType, BPMN_GatewayTypeName.Inclusive);\r\n            break;\r\n          }\r\n          case \"COMPLEX\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.GatewayType, BPMN_GatewayTypeName.Complex);\r\n            break;\r\n          }\r\n          case \"AND\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.GatewayType, BPMN_GatewayTypeName.Parallel);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (mst === \"Task\") {\r\n        switch (subkey) {\r\n          case \"Send\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.TaskType, BPMN_TaskTypeName.Send);\r\n            break;\r\n          }\r\n          case \"Receive\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.TaskType, BPMN_TaskTypeName.Receive);\r\n            break;\r\n          }\r\n          case \"Event\": {\r\n            obj.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Error);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return obj;\r\n    };\r\n\r\n    let mn_super = sem.getOverridable(\"masterName\");\r\n    sem.masterName = (key: string): string => {\r\n      if (sem.masters)\r\n        for (let m of sem.masters) {\r\n          if (m.key === key) {\r\n            return m.name;\r\n          }\r\n          switch (key) {\r\n            case \"Task\":\r\n              return \"Task\";\r\n            case \"Event\":\r\n            case \"Start Event\":\r\n              return \"Event\";\r\n            case \"End Event\":\r\n              return \"Event\";\r\n            case \"Intermediate Event\":\r\n              return \"Event\";\r\n            case \"Start Timer\":\r\n            case \"Timer Start\":\r\n            case \"Timer_Start\":\r\n              return \"Event\";\r\n            case \"Start Message\":\r\n            case \"Message Start\":\r\n              return \"Event\";\r\n            case \"End Message\":\r\n            case \"Message End\":\r\n              return \"Event\";\r\n            case \"Message Intermediate\":\r\n            case \"Intermediate Message\":\r\n              return \"Event\";\r\n            case \"End Error\":\r\n            case \"Error End\":\r\n              return \"Event\";\r\n            case \"Link Start\":\r\n            case \"Start Link\":\r\n              return \"Event\";\r\n            case \"Link Intermediate\":\r\n            case \"Intermediate Link\":\r\n              return \"Event\";\r\n            case \"Link End\":\r\n            case \"End Link\":\r\n              return \"Event\";\r\n            case \"OR Gateway\":\r\n              return \"Gateway\";\r\n            case \"COMPLEX Gateway\":\r\n              return \"Gateway\";\r\n            case \"AND Gateway\":\r\n              return \"Gateway\";\r\n            case \"Business Rule Task\":\r\n              return \"Task\";\r\n            case \"Manual Task\":\r\n              return \"Task\";\r\n            case \"Service Task\":\r\n              return \"Task\";\r\n            case \"Send Task\":\r\n              return \"Task\";\r\n            case \"TaskEvent\":\r\n            case \"Event Task\":\r\n              return \"Task\";\r\n            case \"Receive Task\":\r\n              return \"Task\";\r\n            case \"Script Task\":\r\n              return \"Task\";\r\n            case \"User Task\":\r\n              return \"Task\";\r\n          }\r\n        }\r\n      return mn_super(key);\r\n    };\r\n\r\n    let iv_super = sem.getOverridable(\"isValid\");\r\n    sem.isValid = (srcid: number, dstid: number): boolean => {\r\n      if (sem.page && sem.page.ClassOf().Root === null) {\r\n        return true;\r\n      }\r\n      const src = sem.base.FindInstanceByID(srcid);\r\n      const dst = sem.base.FindInstanceByID(dstid);\r\n      const ev = sem.base.GetModelAttribute(Process_ElementName.SLEvent);\r\n      if (src !== null && dst !== null) {\r\n        const sc = src.ClassOf();\r\n        const dc = dst.ClassOf();\r\n        if (sc !== null && dc !== null) {\r\n          const ssy = sc.SystemClass();\r\n          const dsy = dc.SystemClass();\r\n          if (ssy !== null && dsy !== null) {\r\n            if (dsy.ObjectName === ev && dst.GetValue(BPMN_AttributeTypeName.EventType) === BPMN_EventTypeName.Start) {\r\n              return false;\r\n            }\r\n            if (ssy.ObjectName === ev && src.GetValue(BPMN_AttributeTypeName.EventType) === BPMN_EventTypeName.End) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return iv_super(srcid, dstid);\r\n    };\r\n\r\n    // let fr_super = sem.getOverridable(\"filterRelations\");\r\n    sem.filterRelations = (rels: ISemTalkAssociationType[],\r\n      source: mxCell, target: mxCell, ctrl: boolean,\r\n      sy: ISemTalkSystemClass, dsy: ISemTalkSystemClass,\r\n      src: ISemTalkInstance, dst: ISemTalkInstance): ISemTalkAssociationType[] => {\r\n      if (rels.length > 1) {\r\n        const mf = sem.base.GetModelAttribute(BPMN_ElementName.SLMessageFlow);\r\n        let usemf: boolean = false;\r\n        let isbpmn = (sem.template === \"bpmn\");\r\n        if (isbpmn && rels.length === 2 &&\r\n          rels.find((r) => r.ObjectName === mf)\r\n          && sem.notSamePool(source, target, ctrl)) {\r\n          usemf = true;\r\n          const bu = sem.base.GetModelAttribute(Process_ElementName.SLBuffer);\r\n          if (!ctrl && sy && sy.ObjectName !== bu && dsy && dsy.ObjectName !== bu) {\r\n            const ac = sem.base.GetModelAttribute(Process_ElementName.SLActivity);\r\n            const ev = sem.base.GetModelAttribute(Process_ElementName.SLEvent);\r\n            switch (sy.ObjectName) {\r\n              case ac: {\r\n                const tt = src.GetValue(BPMN_AttributeTypeName.TaskType);\r\n                if (tt !== BPMN_TaskTypeName.Send && tt !== BPMN_TaskTypeName.Service) {\r\n                  usemf = false;\r\n                }\r\n                break;\r\n              }\r\n              case ev: {\r\n                const tt = src.GetValue(BPMN_AttributeTypeName.TriggerType);\r\n                if (tt !== BPMN_TriggerTypeName.Message) {\r\n                  usemf = false;\r\n                }\r\n                break;\r\n              }\r\n            }\r\n            switch (dsy.ObjectName) {\r\n              case ac: {\r\n                const tt = dst.GetValue(BPMN_AttributeTypeName.TaskType);\r\n                if (tt !== BPMN_TaskTypeName.Receive && tt !== BPMN_TaskTypeName.Service) {\r\n                  usemf = false;\r\n                }\r\n                break;\r\n              }\r\n              case ev: {\r\n                const tt = dst.GetValue(BPMN_AttributeTypeName.TriggerType);\r\n                if (tt !== BPMN_TriggerTypeName.Message) {\r\n                  usemf = false;\r\n                }\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (!usemf) {\r\n          rels = rels.filter((r) => r.ObjectName !== mf);\r\n        } else {\r\n          rels = rels.filter((r) => r.ObjectName === mf);\r\n        }\r\n      }\r\n      return rels;\r\n    };\r\n\r\n    let rs_super = sem.getOverridable(\"resetSubTaskStyle\");\r\n    sem.resetSubTaskStyle = (s0: string): string => {\r\n      s0 = rs_super(s0);\r\n      let settings = s0.split(\";\");\r\n      s0 = \"\";\r\n      const sysattr: string[] = [BPMN_AttributeTypeName.TaskType,\r\n      BPMN_AttributeTypeName.GatewayType,\r\n      BPMN_AttributeTypeName.EventType,\r\n      BPMN_AttributeTypeName.TriggerType,\r\n      BPMN_AttributeTypeName.SubProcessOrdering,\r\n      BPMN_AttributeTypeName.adhoc,\r\n      BPMN_AttributeTypeName.refinement,\r\n      BPMN_AttributeTypeName.Compensation];\r\n      for (const setting of settings) {\r\n        const n = setting.split(\"=\")[0];\r\n        if (n.length > 0 && sysattr.indexOf(n) < 0) {\r\n          s0 = s0 + setting + \";\";\r\n        }\r\n      }\r\n      return s0;\r\n    };\r\n    // let uls_super = sem.getOverridable(\"updateLabelStyle\");\r\n    sem.updateLabelStyle = (obj: ISemTalkObject, lsp: ILabelSpec, style: string): string => {\r\n      let ob = obj.ObjectBase;\r\n      let isevent = false;\r\n      let istask = false;\r\n      let isgateway = false;\r\n      let ev: ISemTalkSystemClass | null = null;\r\n      let ta: ISemTalkSystemClass | null = null;\r\n      let gw: ISemTalkSystemClass | null = null;\r\n      // if (bmode && bmode.length > 0 && ob.IsInstance(obj)) {\r\n      if (ob.IsInstance(obj)) {\r\n        ev = ob.FindSystemClass(ob.GetModelAttribute(Process_ElementName.SLEvent));\r\n        if (ev) isevent = (obj as ISemTalkInstance).IsInstance(ev);\r\n        ta = ob.FindSystemClass(ob.GetModelAttribute(Process_ElementName.SLActivity));\r\n        if (ta) istask = (obj as ISemTalkInstance).IsInstance(ta);\r\n        gw = ob.FindSystemClass(ob.GetModelAttribute(BPMN_ElementName.SLDecision));\r\n        //gw = ob.FindSystemClass(\"Gateway\");\r\n        if (gw) isgateway = (obj as ISemTalkInstance).IsInstance(gw);\r\n      }\r\n      // var bpmnFunc: BPMNInterface.BPMNElements = new BPMNInterface.BPMNElements;\r\n      if (ta !== null && istask) {\r\n\r\n        if (obj.Refinement !== null) {\r\n          const ref = obj.ObjectBase.GetModelAttribute(ModelAttribute.underlineRefinements);\r\n          if (ref !== \"1\") {\r\n            style += BPMN_AttributeTypeName.refinement + \"=\" + obj.Refinement.ObjectName + \";\";\r\n          }\r\n          let ah: boolean = (obj.GetValue(BPMN_AttributeTypeName.adhoc) === \"True\");\r\n          if (ah) {\r\n            style += BPMN_AttributeTypeName.adhoc + \"=\" + ah + \";\";\r\n            // imgTaskLookAdhoc += \"TaskAdHoc.png\";\r\n          }\r\n        }\r\n        // let imgTaskFunction: string = overlayPath;\r\n        let ao: any = obj.GetValue(BPMN_AttributeTypeName.SubProcessOrdering);\r\n        let co: boolean = (obj.GetValue(BPMN_AttributeTypeName.Compensation) === \"True\");\r\n\r\n        // let pos_bot: BPMN_OverlayPosition = BPMN_OverlayPosition.ALIGN_BOTTOM;\r\n        // let pos_cen: BPMN_OverlayPosition = BPMN_OverlayPosition.ALIGN_CENTER;\r\n\r\n        if (ao !== null && ao !== \"\" && ao !== \"None\") {\r\n          style += BPMN_AttributeTypeName.SubProcessOrdering + \"=\" + ao + \";\";\r\n          // if (ao === \"Parallel\") {\r\n          //   imgTaskFunction += \"TaskParallel.png\";\r\n          // }\r\n          // else {\r\n          //   imgTaskFunction += \"TaskSequential.png\";\r\n          // }\r\n          // if (ah || lo) {\r\n          //   tseditor.addOverlay(shp, site + imgTaskFunction, pos_bot, pos_cen, 18, 18, -9, -9, '');\r\n          // }\r\n          // else {\r\n          //   tseditor.addOverlay(shp, site + imgTaskFunction, pos_bot, pos_cen, 18, 18, 0, -9, '');\r\n          // }\r\n        }\r\n        if (co) {\r\n          style += BPMN_AttributeTypeName.Compensation + \"=\" + co + \";\";\r\n          // imgTaskLookAdhoc += \"TaskLoop.png\";\r\n        }\r\n        // if (ah || lo) {\r\n        // var imgTaskLookAdhoc: string = overlayPath;\r\n\r\n\r\n        // if (ao !== undefined && ao !== null && ao !== \"\") {\r\n        //   tseditor.addOverlay(shp, site + imgTaskLookAdhoc, pos_bot, pos_cen, 18, 18, 0, -9, '');\r\n        // }\r\n        // else {\r\n        //   tseditor.addOverlay(shp, site + imgTaskLookAdhoc, pos_bot, pos_cen, 18, 18, 9, -9, '');\r\n        // }\r\n        // }\r\n\r\n        // if (BPMNElements.CheckTaskType(ttname)) {\r\n        var tasktype: string | null = null;\r\n        let ttname: string = obj.GetValue(BPMN_AttributeTypeName.TaskType);\r\n        // Just make sure it is a real teasktype name\r\n        tasktype = BPMNElements.GetTaskTypeName(BPMNElements.GetTaskType(ttname));\r\n        if (tasktype !== null) {\r\n          style += BPMN_AttributeTypeName.TaskType + \"=\" + tasktype + \";\";\r\n        }\r\n\r\n        let trType: string | null = null;\r\n        const tt = BPMNElements.GetTriggerType(obj.GetValue(BPMN_AttributeTypeName.TriggerType));\r\n        trType = BPMNElements.GetTriggerTypeName(tt);\r\n        if (trType !== null) {\r\n          style += BPMN_AttributeTypeName.TriggerType + \"=\" + trType + \";\";\r\n        }\r\n\r\n        if (lsp.newtxt === obj.SystemClass()?.ID2NameNsp()) {\r\n          lsp.newtxt = \"\";\r\n        }\r\n      }\r\n      if (gw !== null && isgateway) {\r\n        let gwname: string = obj.GetValue(BPMN_AttributeTypeName.GatewayType);\r\n        // if (BPMNElements.CheckGatewayType(gwname)) {\r\n        var gwtype = BPMNElements.GetGatewayTypeName(BPMNElements.GetGatewayType(gwname));\r\n        if (gwtype !== null) {\r\n          style += BPMN_AttributeTypeName.GatewayType + \"=\" + gwtype;\r\n        }\r\n        if (lsp.newtxt === obj.SystemClass()?.ID2NameNsp()) {\r\n          lsp.newtxt = \"\";\r\n        }\r\n      }\r\n\r\n      if (ev != null && isevent) {\r\n        // if (BPMNElements.CheckTriggerType(obj.GetValue(BPMN_AttributeTypeName.TriggerType))) {\r\n        let evType: string | null = null;\r\n        const et = BPMNElements.GetEventType(obj.GetValue(BPMN_AttributeTypeName.EventType));\r\n        evType = BPMNElements.GetEventTypeName(et);\r\n\r\n        let trType: string | null = null;\r\n        const tt = BPMNElements.GetTriggerType(obj.GetValue(BPMN_AttributeTypeName.TriggerType));\r\n        trType = BPMNElements.GetTriggerTypeName(tt);\r\n\r\n        // let reftr = this.FindTrigger(ev, obj as ISemTalkInstance).ObjectCaption;\r\n        // if (reftr !== trType) {\r\n        //   console.debug(\"FindTrigger: \" + reftr);\r\n        // }\r\n        // if (tt !== BPMN_TriggerType.None) {\r\n        //   lsp.newtxt = \"\";\r\n        // }\r\n        if (evType !== null) {\r\n          style += BPMN_AttributeTypeName.EventType + \"=\" + evType + \";\";\r\n        }\r\n        if (trType !== null) {\r\n          style += BPMN_AttributeTypeName.TriggerType + \"=\" + trType + \";\";\r\n        }\r\n        if (lsp.newtxt === obj.SystemClass()?.ID2NameNsp()) {\r\n          lsp.newtxt = \"\";\r\n        }\r\n      }\r\n      return style;\r\n    };\r\n\r\n    sem.initStencil = async (\r\n      dtype: ISemTalkDiagramType,\r\n      _stencil: string, _sprops: any, extended: boolean,\r\n      _loadStencil: (template: string, url: string, spinterface: any) => Promise<SemTalkStencil>) => {\r\n      let stencil: SemTalkStencil = [];\r\n      switch (dtype.ObjectName) {\r\n        case dtype.ObjectBase.GetModelAttribute(Process_ElementName.SLProc): {\r\n          stencil.push(...BPMN_STENCIL0);\r\n          if (extended) {\r\n            stencil.push(...BPMN_STENCIL2);\r\n          } else {\r\n            stencil.push(...BPMN_STENCIL1);\r\n          }\r\n          break;\r\n        }\r\n        case dtype.ObjectBase.GetModelAttribute(Process_ElementName.SLOrgChart): {\r\n          stencil.push(...ORGCHART_STENCIL);\r\n          break;\r\n        }\r\n      }\r\n      return stencil;\r\n    };\r\n\r\n    sem.renderUserTab = (tab: string, object: ISemTalkObject): any => {\r\n      return renderUserTab(tab, sem, object);\r\n    };\r\n    sem.captionUserTab = (tab: string): string => {\r\n      switch (tab) {\r\n        case \"ActivityProperties\": {\r\n          return \"ActivityUserTab\";\r\n        }\r\n        default:\r\n          return \"\";\r\n      }\r\n    };\r\n  }\r\n\r\n  public static patch(sem: IVisioRDFS) {\r\n    const base = sem.base;\r\n    sem.horizontal = false;\r\n    base.SetModelAttribute(BPMN_ElementName.SLDecision, \"Gateway\");\r\n    console.log(\"BPMN_Subtask\");\r\n\r\n    if (base.FindDiagramType(SemTalkBaseConstant.SLGeneric) === null) {\r\n      base.MakeDiagramType(SemTalkBaseConstant.SLGeneric);\r\n    }\r\n\r\n    super.patch(sem);\r\n    this.patchBPMNMetaModel(base);\r\n    this.patchBPMNChinese(sem, SemTalkLanguage.Simplified, SemTalkLanguageCode.Simplified);\r\n    this.patchBPMNChinese(sem, SemTalkLanguage.Traditional, SemTalkLanguageCode.Traditional);\r\n    this.patchBPMNChinese(sem, SemTalkLanguage.French, SemTalkLanguageCode.French);\r\n\r\n  }\r\n  private static patchBPMNMetaModel(base: IObjectBase) {\r\n    let dt: ISemTalkDiagramType | null;\r\n    dt = base.FindDiagramType(\"System model\");\r\n    if (dt !== null) dt.Delete();\r\n    dt = base.FindDiagramType(\"Choreography\");\r\n    if (dt !== null) dt.Delete();\r\n    dt = base.FindDiagramType(\"Message model\");\r\n    if (dt !== null) dt.Delete();\r\n\r\n    dt = base.FindDiagramType(\"Object model\");\r\n    if (dt !== null) {\r\n      console.debug(\"BPMN SubTask: \" + dt);\r\n      dt.IsClass = true;\r\n    }\r\n\r\n    let cl = base.FindClass(\"BPELMessage\");\r\n    if (cl !== null) cl.Delete();\r\n    cl = base.FindClass(\"Support Type\");\r\n    if (cl !== null) cl.Delete();\r\n    cl = base.FindClass(\"Assignment\");\r\n    if (cl !== null) cl.Delete();\r\n    cl = base.FindClass(\"InternalEntryPoint\");\r\n    if (cl !== null) cl.Delete();\r\n    cl = base.FindClass(\"InternalExitPoint\");\r\n    if (cl !== null) cl.Delete();\r\n    cl = base.FindClass(\"Variable\");\r\n    if (cl !== null) cl.Delete();\r\n    cl = base.FindClass(\"ChoreographyElement\");\r\n    if (cl !== null) cl.Delete();\r\n    cl = base.FindClass(\"Choreography Task\");\r\n    if (cl !== null) cl.Delete();\r\n    cl = base.FindClass(\"messagech\");\r\n    if (cl !== null) cl.Delete();\r\n    cl = base.FindClass(\"Message\");\r\n    if (cl !== null) cl.Delete();\r\n\r\n    let ins = base.FindInstance(\"MyDocInfo\");\r\n    if (ins !== null) ins.Delete();\r\n\r\n    cl = base.FindClass(SemTalkBaseConstant.SLDocumentInfo);\r\n    if (cl !== null) cl.Delete();\r\n\r\n    base.SetModelAttribute(Process_ElementName.SLOrgChart, \"OrgChart\");\r\n    dt = base.FindDiagramType(\"OrgChart\");\r\n    if (dt !== null) dt.Root = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLResource));\r\n\r\n    const BPMNGROUP = \"BPMN\";\r\n    const BPMNTAB = \"BPMN\";\r\n\r\n    let f: ISemTalkSystemClass | null;\r\n    f = base.FindSystemClass(base.GetModelAttribute(BPMN_ElementName.SLDecision));\r\n    let a: ISemTalkAttribute;\r\n    // const BPMNHelper: BPMNElements = new BPMNElements;\r\n\r\n    // Participant\r\n    {\r\n      f = base.FindSystemClass(base.GetModelAttribute(BPMN_ElementName.Participant));\r\n      if (f) {\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Strategy) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Delete();\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.Capacity) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Delete();\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.FixedCost) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Delete();\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.VariableCost) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Delete();\r\n        }\r\n        a = f.FindAttribute(SIM_AttributeTypeName.SetupTime) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Delete();\r\n        }\r\n      }\r\n    }\r\n\r\n    // GATEWAY\r\n    {\r\n      //f = base.FindSystemClass(\"Gateway\");\r\n      f = base.FindSystemClass(base.GetModelAttribute(BPMN_ElementName.SLDecision));\r\n      if (f) {\r\n        f.Composeable = true;\r\n        f.Refineable = false;\r\n\r\n        f.Style = \"shape=bpmngateway;whiteSpace=wrap;resize=0;strokeWidth=2;\";\r\n        // f.Style = \"fillColor=lightsalmon;resize=0;strokeWidth=2;\";\r\n        a = f.FindAttribute(BPMN_AttributeTypeName.GatewayType) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Options = BPMNElements.GetAllGatewayTypeNames();\r\n          a.AllowFreeForm = false;\r\n          a.Group = BPMNGROUP;\r\n          a.Weight = 10;\r\n          a.ValueType = SemTalkValueType.Symbol;\r\n          a.Value = BPMNElements.GetGatewayTypeName(BPMN_GatewayType.XOR);\r\n        }\r\n        if (f.TabSpecDefinitions().FindTabSpec(BPMNTAB) === null)\r\n          f.TabSpecDefinitions().MakeGenericAttributeTabSpec(BPMNTAB, BPMNGROUP, [], false);\r\n      }\r\n    }\r\n\r\n    // EVENT\r\n    {\r\n      f = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLEvent));\r\n      if (f) {\r\n        f.Composeable = true;\r\n        f.Style = \"shape=bpmnevent;whiteSpace=wrap;verticalLabelPosition=bottom;verticalAlign=top;resize=0;strokeWidth=2;\";\r\n        // f.Style = \"fillColor=lightgreen;verticalLabelPosition=bottom;verticalAlign=top;resize=0;strokeWidth=2;\";\r\n        f.Refineable = false;\r\n\r\n        a = f.FindAttribute(BPMN_AttributeTypeName.EventType) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Options = BPMNElements.GetAllEventTypeNames();\r\n          a.AllowFreeForm = false;\r\n          a.ReadOnly = true;\r\n          a.Group = BPMNGROUP;\r\n          a.Weight = 10;\r\n          a.ValueType = SemTalkValueType.Symbol;\r\n          a.Value = undefined;\r\n          // a.Value = BPMNElements.GetEventTypeName(BPMN_EventType.End);\r\n        }\r\n        a = f.FindAttribute(BPMN_AttributeTypeName.TriggerType) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Options = BPMNElements.GetAllTriggerTypeNames();\r\n          a.Group = BPMNGROUP;\r\n          a.Weight = 20;\r\n          a.ValueType = SemTalkValueType.Symbol;\r\n          a.Value = BPMNElements.GetTriggerTypeName(BPMN_TriggerType.None);\r\n        }\r\n        a = f.FindAttribute(BPMN_AttributeTypeName.IntermediateType) as ISemTalkAttribute;\r\n        if (a !== null) {\r\n          a.Options = [BPMN_EventIntermediateType.None, BPMN_EventIntermediateType.Catch, BPMN_EventIntermediateType.Throw];\r\n          a.Group = BPMNGROUP;\r\n          a.Weight = 20;\r\n          a.ValueType = SemTalkValueType.Symbol;\r\n          a.Value = BPMN_EventIntermediateType.None;\r\n        } else {\r\n          a = f.MakeAttribute(BPMN_AttributeTypeName.IntermediateType, \"\") as ISemTalkAttribute;\r\n          a.Options = [BPMN_EventIntermediateType.None, BPMN_EventIntermediateType.Catch, BPMN_EventIntermediateType.Throw];\r\n          a.Group = BPMNGROUP;\r\n          a.Weight = 20;\r\n          a.ValueType = SemTalkValueType.Symbol;\r\n          a.Value = BPMN_EventIntermediateType.None;\r\n        }\r\n        let zombies = [\"TimeDate\", \"TimeCycle\", \"RuleName\"];\r\n        for (let z of zombies) {\r\n          let att = base.FindAttributeType(z);\r\n          if (att) {\r\n            a = f.FindAttribute(att) as ISemTalkAttribute;\r\n            if (a !== null) { a.Delete(); }\r\n            att.Delete();\r\n          }\r\n        }\r\n        if (f.TabSpecDefinitions().FindTabSpec(BPMNTAB) === null)\r\n          f.TabSpecDefinitions().MakeGenericAttributeTabSpec(BPMNTAB, BPMNGROUP, [], false);\r\n      }\r\n    }\r\n\r\n    // ACTIVITY\r\n    {\r\n      let SLACTIVITY = base.GetModelAttribute(Process_ElementName.SLActivity);\r\n      let activityclasses: string[] = [SLACTIVITY, BPMN_ElementName.Activity];\r\n      for (let slact of activityclasses) {\r\n        f = base.FindSystemClass(slact);\r\n        if (f) {\r\n          f.Refineable = true;\r\n          // BPMN\r\n          if (f.ObjectName === \"Activity\") {\r\n            f.Hide = true;\r\n            a = f.FindAttribute(BPMN_AttributeTypeName.TaskType) as ISemTalkAttribute;\r\n            if (a !== null) { a.Delete(); }\r\n            a = f.FindAttribute(BPMN_AttributeTypeName.Instantiate) as ISemTalkAttribute;\r\n            if (a !== null) { a.Delete(); }\r\n            a = f.FindAttribute(BPMN_AttributeTypeName.Implementation) as ISemTalkAttribute;\r\n            if (a !== null) { a.Delete(); }\r\n            a = f.MakeAttribute(BPMN_AttributeTypeName.adhoc, false) as ISemTalkAttribute;\r\n            if (a !== null) { a.Delete(); }\r\n            a = f.MakeAttribute(BPMN_AttributeTypeName.Compensation, false) as ISemTalkAttribute;\r\n            if (a !== null) { a.Delete(); }\r\n            a = f.MakeAttribute(BPMN_AttributeTypeName.SubProcessOrdering, BPMN_SubprocessOrdering.None) as ISemTalkAttribute;\r\n            if (a !== null) { a.Delete(); }\r\n            a = f.MakeAttribute(BPMN_AttributeTypeName.Script, \"\") as ISemTalkAttribute;\r\n            if (a !== null) { a.Delete(); }\r\n            a = f.FindAttribute(BPMN_AttributeTypeName.TriggerType) as ISemTalkAttribute;\r\n            if (a !== null) { a.Delete(); }\r\n            let zombies = [\"Interface\", \"IORules\", \"IsDefault\",\r\n              \"IsTransaction\", \"LoopCondition\", \"LoopCounter\",\r\n              \"LoopType\", \"LoopMaximum\", \"MI_Condition\",\r\n              \"MI_FlowCondition\", \"MI_Ordering\", \"Operation\",\r\n              \"Complex_MIFlowCondition\", \"StartQuantity\", \"TestTime\"];\r\n            for (let z of zombies) {\r\n              let att = base.FindAttributeType(z);\r\n              if (att) {\r\n                a = f.FindAttribute(att) as ISemTalkAttribute;\r\n                if (a !== null) { a.Delete(); }\r\n                att.Delete();\r\n              }\r\n            }\r\n          }\r\n          if (f.ObjectName === \"Task\") {\r\n            f.Hide = false;\r\n            f.Style = \"shape=bpmntask;whiteSpace=wrap;rounded=1;resize=0;strokeWidth=2;\";\r\n            a = f.FindAttribute(BPMN_AttributeTypeName.TaskType) as ISemTalkAttribute;\r\n            if (a !== null) {\r\n              a.Options = BPMNElements.GetAllTaskTypeNames(); //\"Reference\", \"Abstract\",  --> Not in BPMN\r\n              a.AllowFreeForm = false;\r\n              a.Value = BPMNElements.GetTaskTypeName(BPMN_TaskType.None);\r\n              a.Group = BPMNGROUP;\r\n              a.Weight = 25;\r\n            }\r\n            a = f.FindAttribute(BPMN_AttributeTypeName.Instantiate) as ISemTalkAttribute;\r\n            if (a !== null) {\r\n              a = f.FindAttribute(BPMN_AttributeTypeName.Instantiate) as ISemTalkAttribute;\r\n              a.ValueType = SemTalkValueType.Boolean;\r\n              a.Group = BPMNGROUP;\r\n              a.Weight = 35;\r\n              a.Value = true;\r\n            }\r\n            a = f.FindAttribute(BPMN_AttributeTypeName.Implementation) as ISemTalkAttribute;\r\n            if (a !== null) {\r\n              a.Options = [BPMN_ImplementationType.None, BPMN_ImplementationType.Service, BPMN_ImplementationType.Other];\r\n              a.AllowFreeForm = false;\r\n              a.Value = BPMN_ImplementationType.None;\r\n              a.Group = BPMNGROUP;\r\n              a.Weight = 45;\r\n            }\r\n            a = f.MakeAttribute(BPMN_AttributeTypeName.adhoc, false) as ISemTalkAttribute;\r\n            if (a !== null) {\r\n              a = f.FindAttribute(BPMN_AttributeTypeName.adhoc) as ISemTalkAttribute;\r\n              a.ValueType = SemTalkValueType.Boolean;\r\n              a.Group = BPMNGROUP;\r\n              a.Weight = 35;\r\n              a.Value = false;\r\n            }\r\n            a = f.MakeAttribute(BPMN_AttributeTypeName.Compensation, false) as ISemTalkAttribute;\r\n            if (a !== null) {\r\n              a = f.FindAttribute(BPMN_AttributeTypeName.Compensation) as ISemTalkAttribute;\r\n              a.ValueType = SemTalkValueType.Boolean;\r\n              a.Group = BPMNGROUP;\r\n              a.Weight = 35;\r\n              a.Value = false;\r\n            }\r\n            a = f.MakeAttribute(BPMN_AttributeTypeName.SubProcessOrdering, BPMN_SubprocessOrdering.None) as ISemTalkAttribute;\r\n            if (a !== null) {\r\n              a.Options = [BPMN_SubprocessOrdering.None, BPMN_SubprocessOrdering.Loop, BPMN_SubprocessOrdering.Parallel, BPMN_SubprocessOrdering.Sequential];\r\n              a.AllowFreeForm = false;\r\n              a.Value = BPMN_SubprocessOrdering.None;\r\n              a.Group = BPMNGROUP;\r\n              a.Weight = 65;\r\n            }\r\n            a = f.MakeAttribute(BPMN_AttributeTypeName.Script, \"\") as ISemTalkAttribute;\r\n            if (a !== null) {\r\n              a.AllowFreeForm = true;\r\n              a.Value = \"\";\r\n              a.Group = BPMNGROUP;\r\n              a.Weight = 75;\r\n            }\r\n            a = f.FindAttribute(BPMN_AttributeTypeName.TriggerType) as ISemTalkAttribute;\r\n            if (a === null) {\r\n              a = f.MakeAttribute(BPMN_AttributeTypeName.TriggerType, BPMNElements.GetTriggerTypeName(BPMN_TriggerType.None)) as ISemTalkAttribute;\r\n            }\r\n            if (a !== null) {\r\n              a.Options = BPMNElements.GetAllTriggerTypeNames();\r\n              a.Group = BPMNGROUP;\r\n              a.Weight = 20;\r\n              a.ValueType = SemTalkValueType.Symbol;\r\n              a.Value = BPMNElements.GetTriggerTypeName(BPMN_TriggerType.None);\r\n            }\r\n            if (f.TabSpecDefinitions().FindTabSpec(BPMNTAB) === null)\r\n              f.TabSpecDefinitions().MakeGenericAttributeTabSpec(BPMNTAB, BPMNGROUP, [], false);\r\n            const res = base.GetModelAttribute(Process_ElementName.SLResource);\r\n            let ts = f.TabSpecDefinitions().FindTabSpec(res);\r\n            if (ts !== null) {\r\n              ts.Delete();\r\n            }\r\n            //  if (f.TabSpecDefinitions().FindTabSpec(res) === null) {\r\n            const use = base.GetModelAttribute(Process_ElementName.SLUses);\r\n            if (f.FindTabSpec(res) === null)\r\n              f.TabSpecDefinitions().MakeGenericTabSpec(res, use, res, true, false, false, false);\r\n            //  }\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // BPMN MF\r\n    {\r\n      let SLMF = base.GetModelAttribute(BPMN_ElementName.SLMessageFlow);\r\n      f = base.FindSystemClass(SLMF);\r\n      if (f) {\r\n        // f.Style = \"edgeStyle=loopEdgeStyle;shape=flexArrow;dashed=1;dashPattern=5 5;endArrow=classic;html=1;fillColor=#ffffff;\";\r\n        f.Style = \"shape=flexArrow;dashed=1;dashPattern=5 5;endArrow=classic;html=1;fillColor=#ffffff;strokeWidth=2;\";\r\n        f.Refineable = false;\r\n\r\n        const infotype = base.GetModelAttribute(Process_ElementName.SLInfoType);\r\n        const info = base.GetModelAttribute(Process_ElementName.SLInformation);\r\n        if (f.FindTabSpec(info) === null)\r\n          f.TabSpecDefinitions().MakeGenericTabSpec(info, infotype, info, false, false, false, false);\r\n\r\n      }\r\n    }\r\n\r\n    // BPMN\r\n\r\n    let flo = base.FindSystemClass(BPMN_ElementName.FlowObject);\r\n    let par = base.FindSystemClass(BPMN_ElementName.Participant);\r\n    let ob = base.FindAssociationType(base.GetModelAttribute(Process_ElementName.SLInformation));\r\n    let mfl = base.FindAssociationType(base.GetModelAttribute(BPMN_ElementName.SLMessageFlow));\r\n    if (flo && par && ob && mfl) {\r\n      let lnk = flo.FindAssociation(mfl, flo);\r\n      if (lnk != null) lnk.Delete();\r\n      lnk = flo.FindAssociation(mfl, par);\r\n      if (lnk != null) lnk.Delete();\r\n      lnk = flo.FindAssociation(mfl, ob);\r\n      if (lnk != null) lnk.Delete();\r\n      lnk = par.FindAssociation(mfl, ob);\r\n      if (lnk != null) lnk.Delete();\r\n      lnk = par.FindAssociation(mfl, flo);\r\n      if (lnk != null) lnk.Delete();\r\n    }\r\n    let act = base.FindSystemClass(BPMN_ElementName.Task);\r\n    let evt = base.FindSystemClass(BPMN_ElementName.Event);\r\n    let sys = base.FindSystemClass(BPMN_ElementName.System);\r\n    if (act && evt && par && sys && mfl) {\r\n      if (!act.HasDirectLink(mfl, act)) act.MakeAssociation(mfl, act);\r\n      if (!act.HasDirectLink(mfl, evt)) act.MakeAssociation(mfl, evt);\r\n      if (!act.HasDirectLink(mfl, sys)) act.MakeAssociation(mfl, sys);\r\n      if (!act.HasDirectLink(mfl, par)) act.MakeAssociation(mfl, par);\r\n      if (!sys.HasDirectLink(mfl, act)) sys.MakeAssociation(mfl, act);\r\n      if (!sys.HasDirectLink(mfl, par)) sys.MakeAssociation(mfl, par);\r\n      if (!evt.HasDirectLink(mfl, evt)) evt.MakeAssociation(mfl, evt);\r\n      if (!evt.HasDirectLink(mfl, act)) evt.MakeAssociation(mfl, act);\r\n      if (!evt.HasDirectLink(mfl, par)) evt.MakeAssociation(mfl, par);\r\n      if (!par.HasDirectLink(mfl, par)) par.MakeAssociation(mfl, par);\r\n      if (!par.HasDirectLink(mfl, evt)) par.MakeAssociation(mfl, evt);\r\n      if (!par.HasDirectLink(mfl, sys)) par.MakeAssociation(mfl, sys);\r\n    }\r\n\r\n    // at = base.FindAttributeType(\"UserID\");\r\n    // if (at) {\r\n    //      at.MakeSynonym(\"Benutzerkennung\",SemTalkLanguage.German);\r\n    // }\r\n\r\n    let sub = base.FindAssociationType(\"subtask\");\r\n    if (sub != null) sub.Delete();\r\n    let ass = base.FindAssociationType(\"has Message\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"has Object\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"has Role\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"has Entity\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"has Participant\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"has Expression\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"results from\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"has Assignment\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"has WebService\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"evaluates\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"sends\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"receives\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"has LoopCondition\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"has MICondition\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"has ComplexMIFlowCondition\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"has Association\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"contains\");\r\n    if (ass !== null) ass.Delete();\r\n    // ass = base.FindAssociationType(\"consists of\");\r\n    // if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"isMessageOf\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"subtask\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"isInitiatingParticipant\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"isParticipant\");\r\n    if (ass !== null) ass.Delete();\r\n    // ass = base.FindAssociationType(BPMN_AssociationName.dataobject);\r\n    // if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"messageflow\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"is component of\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"isVariableOf\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"dataobjectOf\");\r\n    if (ass !== null) ass.Delete();\r\n    ass = base.FindAssociationType(\"dataobjectof\");\r\n    if (ass !== null) ass.Delete();\r\n\r\n\r\n    let at = base.FindAttributeType(BPMN_AttributeTypeName.TaskType);\r\n    if (at) {\r\n      let s = at.FindSynonym(SemTalkLanguage.German);\r\n      if (s && s.Name === \"AusgabeTyp\") {\r\n        s.Name = \"Aufgabentyp\";\r\n      }\r\n    }\r\n    at = base.FindAttributeType(BPMN_AttributeTypeName.EventType);\r\n    if (at) {\r\n      let s = at.FindSynonym(SemTalkLanguage.German);\r\n      if (s && s.Name === \"EreignisTyp\") {\r\n        s.Name = \"Ereignistyp\";\r\n      }\r\n    }\r\n    at = base.FindAttributeType(BPMN_AttributeTypeName.TriggerType);\r\n    if (at) {\r\n      let s = at.FindSynonym(SemTalkLanguage.German);\r\n      if (s && s.Name === \"TriggerTyp\") {\r\n        s.Name = \"Auslöser\";\r\n      }\r\n    }\r\n    at = base.FindAttributeType(BPMN_AttributeTypeName.IntermediateType);\r\n    if (at) {\r\n      let s = at.FindSynonym(SemTalkLanguage.German);\r\n      if (s && s.Name === \"IntermediateType\") {\r\n        s.Name = \"IntermediateType\";\r\n      }\r\n    }\r\n\r\n    // let rt: ISemTalkAssociationType | null;\r\n    // rt = base.FindAssociationType(\"messageflow\");\r\n    // if (rt !== null) rt.Delete();\r\n\r\n  }\r\n  private static patchBPMNChinese(sem: IVisioRDFS, lang: SemTalkLanguage, code: SemTalkLanguageCode) {\r\n    let ob = sem.base;\r\n    let mapping: { [code: string]: string } = {};\r\n\r\n    // bpmn drawing elements\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLActivity)] = \"STRTask\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLEvent)] = \"STREvent\";\r\n    mapping[ob.GetModelAttribute(BPMN_ElementName.SLDecision)] = \"STRGateway\";\r\n    mapping[ob.GetModelAttribute(ModelAttribute.SLComment)] = \"STRCOMMENT\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLDataObject)] = \"STRDataObject\";\r\n    mapping[SemTalkBaseConstant.SLSwimlane] = \"STRSwimlane\";\r\n    mapping[ob.GetModelAttribute(BPMN_ElementName.SLSystem)] = \"STRSystem\";\r\n\r\n    // bpmn extended drawing elements\r\n    // all of these are no Classes, but we may use the resource string as labels in Stencil_BPMN\r\n    mapping[\"Start Event\"] = \"STRStartEvent\";\r\n    mapping[\"End Event\"] = \"STREndEvent\";\r\n    mapping[\"Intermediate Event\"] = \"STRIntermediateEvent\";\r\n    mapping[\"AND Gateway\"] = \"STRParallelGateway\";\r\n    mapping[\"OR Gateway\"] = \"STRInclusiveGateway\";\r\n    mapping[\"COMPLEX Gateway\"] = \"STRComplexGateway\";\r\n    mapping[\"Start Timer\"] = \"STRStartTimer\";\r\n    mapping[\"Event Task\"] = \"STRErrorEvent\";\r\n    mapping[\"Send Task\"] = \"STRMessageThrowingEvent\";\r\n    mapping[\"Receive Task\"] = \"STRMessageCathingEvent\";\r\n    mapping[\"Start Message\"] = \"STRStartMessage\";\r\n    mapping[\"Intermediate Message\"] = \"STRIntermediateMessage\";\r\n    mapping[\"End Message\"] = \"STREndMessage\";\r\n    mapping[\"End Error\"] = \"STREndError\";\r\n    mapping[\"Start Link\"] = \"STRStartLink\";\r\n    mapping[\"Intermediate Link\"] = \"STRIntermediateLink\";\r\n    mapping[\"End Link\"] = \"STREndLink\";\r\n\r\n    // bpmn objects\r\n    mapping[BPMN_ElementName.BPMNElement] = \"STRBPMNElement\";\r\n    mapping[BPMN_ElementName.Artifact] = \"STRArtifact\";\r\n    mapping[BPMN_ElementName.Annotation] = \"STRAnnotation\";\r\n    mapping[\"Breakpoint\"] = \"STRBreakpoint\";\r\n    mapping[BPMN_ElementName.FlowObject] = \"STRFlowObject\";\r\n    mapping[BPMN_ElementName.Participant] = \"STRParticipant\";\r\n    mapping[BPMN_ElementName.Entity] = \"STREntity\";\r\n    // mapping[ob.GetModelAttribute(Process_ElementName.SLResource)] = \"STRHumanResource\";\r\n    // mapping[ob.GetModelAttribute(Process_ElementName.SLOrgUnit)] = \"STROrgUnit\";\r\n    // mapping[ob.GetModelAttribute(Process_ElementName.SLPerson)] = \"STRPerson\";\r\n    // mapping[\"Manager\"] = \"STRManager\";\r\n    // mapping[ob.GetModelAttribute(Process_ElementName.SLPosition)] = \"STRPosition\";\r\n    mapping[\"Role\"] = \"STRRole\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLInformation)] = \"STRObject\";\r\n    mapping[ob.GetModelAttribute(BPMN_ElementName.SLAssociation)] = \"STRdataobjectOf\";\r\n    mapping[ob.GetModelAttribute(BPMN_ElementName.SLMessageFlow)] = \"STRMessageflow\";\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLControl)] = \"STRSequenceflow\";\r\n    mapping[BPMN_ElementName.Activity] = \"STRACTIVITY\";\r\n\r\n    // bpmn associations\r\n    // mapping[\"has manager\"] = \"STRhasmanager\";\r\n    // mapping[\"has offtime\"] = \"STRHASOFFTIME\";\r\n    // mapping[ob.GetModelAttribute(Process_ElementName.SLInfoType)] = \"STRINFOTYPE\";\r\n    // mapping[\"member\"] = \"STRMEMBER\";\r\n    // mapping[ob.GetModelAttribute(Process_ElementName.SLUses)] = \"STRUSES\";\r\n    // mapping[ob.GetModelAttribute(Process_ElementName.SLUsesPhys)] = \"STRUSEPHYRESOURCE\";\r\n    // mapping[\"superior of\"] = \"STRSUPERIOROF\";\r\n    // mapping[\"performs\"] = \"STRPERFORMS\";\r\n\r\n    // bpmn attributes\r\n    // ONLY BPMN_AttributeTypeName should be translated here\r\n    mapping[SIM_AttributeTypeName.active] = \"STRACTIVE\";  // Delete (-> Sperrzeit)\r\n    mapping[\"Address\"] = \"STRADDRESS\";\r\n    mapping[BPMN_AttributeTypeName.adhoc] = \"STRADHOC\";\r\n    mapping[\"adhocordering\"] = \"STRADHOCORDERING\"; // Delete\r\n    mapping[BPMN_AttributeTypeName.SubProcessOrdering] = \"STRADHOCORDERING2\";\r\n    mapping[\"adoc\"] = \"STRADOC\"; // Delete\r\n    mapping[\"BaseName\"] = \"STRBASENAME\"; // Delete\r\n    mapping[SIM_AttributeTypeName.Begin] = \"STRBegin\";\r\n    mapping[SIM_AttributeTypeName.Capacity] = \"STRCapacity\";\r\n    mapping[\"City\"] = \"STRCITY\";\r\n    mapping[\"Compensation\"] = \"STRCOMPENSATION\"; // Delete\r\n    mapping[\"Complex_MIFlowCondition\"] = \"STRCOMPLEXMIFLOWCONDITION\"; // Delete\r\n    mapping[SIM_AttributeTypeName.ConditionExpression] = \"STRCONDITIONEXPRESSION\";\r\n    mapping[\"Cost\"] = \"STRCOST\"; // Delete\r\n    mapping[SIM_AttributeTypeName.CostDriver] = \"STRCostDriver\";\r\n    mapping[\"Country\"] = \"STRCOUNTRY\";\r\n    mapping[SIM_AttributeTypeName.DistributionType] = \"STRDistributionType\";\r\n    mapping[\"Duration\"] = \"STRDURATION\"; // Delete\r\n    mapping[\"Edit\"] = \"STREDIT\"; // Delete\r\n    mapping[SIM_AttributeTypeName.End] = \"STREnd\";\r\n    mapping[BPMN_AttributeTypeName.EventType] = \"STREVENTTYPE\";\r\n    mapping[\"FaxNumber\"] = \"STRFAXNUMBER\";\r\n    mapping[\"FirstName\"] = \"STRFIRSTNAME\";\r\n    mapping[SIM_AttributeTypeName.FixedCost] = \"STRFixedCost\";\r\n    mapping[SIM_AttributeTypeName.FlushNumber] = \"STRFlushNumber\";\r\n    mapping[SIM_AttributeTypeName.FlushTime] = \"STRFlushTime\";\r\n    mapping[BPMN_AttributeTypeName.GatewayType] = \"STRGATEWAYTYPE\";\r\n    mapping[BPMN_AttributeTypeName.Implementation] = \"STRIMPLEMENTATION\";\r\n    mapping[BPMN_AttributeTypeName.Instantiate] = \"STRINSTANTIATE\";\r\n    mapping[\"Interface\"] = \"STRInterface\"; // Delete\r\n    mapping[\"IORules\"] = \"STRIORULES\";// Delete\r\n    mapping[\"IsDefault\"] = \"STRISDEFAULT\";\r\n    mapping[\"ISO\"] = \"STRISO\";\r\n    mapping[\"IsTransaction\"] = \"STRISTRANSACTION\";// Delete\r\n    mapping[\"LoopCondition\"] = \"STRLOOPCONDITION\"; // Delete\r\n    mapping[\"LoopCounter\"] = \"STRLOOPCOUNTER\"; // Delete\r\n    mapping[\"LoopType\"] = \"STRLOOPTYPE\"; // Delete\r\n    mapping[\"LoopMaximum\"] = \"STRLOOPMAXIMUM\"; // Delete\r\n    mapping[\"MI_Condition\"] = \"STRMICONDITION\"; // Delete\r\n    mapping[\"MI_FlowCondition\"] = \"STRMIFLOWCONDITION\"; // Delete\r\n    mapping[\"MI_Ordering\"] = \"STRMIORDERING\"; // Delete\r\n    mapping[\"Operation\"] = \"STROPERATION\"; // Delete\r\n    mapping[SIM_AttributeTypeName.Period] = \"STRPeriod\";\r\n    mapping[\"PermMask\"] = \"STRPERMMASK\"; // Delete\r\n    mapping[\"LastName\"] = \"STRLASTNAME\";\r\n    mapping[\"PhoneNumber\"] = \"STRPHONENUM\";\r\n    mapping[SIM_AttributeTypeName.Jobs] = \"STRJobs\";\r\n    mapping[SIM_AttributeTypeName.Priority] = \"STRPriority\";\r\n    mapping[SIM_AttributeTypeName.Probability] = \"STRPROBABILITY\";\r\n    mapping[SIM_AttributeTypeName.Quantity] = \"STRQUANTITY\";\r\n    mapping[SIM_AttributeTypeName.Restart] = \"STRRestart\";\r\n    mapping[\"RuleName\"] = \"STRRULENAME\"; // Delete\r\n    mapping[BPMN_AttributeTypeName.Script] = \"STRSCRIPT\";\r\n    mapping[SIM_AttributeTypeName.SetupTime] = \"STRSetupTime\";\r\n    mapping[\"StartQuantity\"] = \"STRSTARTQUANTITY\";  // Delete\r\n    mapping[\"State\"] = \"STRSTATES\"; // Delete\r\n    mapping[SIM_AttributeTypeName.Strategy] = \"STRStrategy\";\r\n    mapping[BPMN_AttributeTypeName.TaskType] = \"STRTASKTYPE\";\r\n    mapping[\"TestTime\"] = \"STRTESTTIME\";  // Delete\r\n    mapping[\"TimeCycle\"] = \"STRTIMECYCLE\";  // Delete\r\n    mapping[\"TimeDate\"] = \"STRTIMEDATE\"; // Delete\r\n    mapping[SIM_AttributeTypeName.TransportationTime] = \"STRTRANSPORTATIONTIME\";\r\n    mapping[BPMN_AttributeTypeName.TriggerType] = \"STRTRIGGERTYPE\";\r\n    mapping[\"UserID\"] = \"STRUSERID\";\r\n    mapping[SemTalkBaseConstant.SLUserNumber] = \"STRUserNumber\";\r\n    mapping[SIM_AttributeTypeName.ValueFile] = \"STRVALUEFILE\";\r\n    mapping[SIM_AttributeTypeName.VariableCost] = \"STRVariableCost\";\r\n    mapping[SIM_AttributeTypeName.WaitingTime] = \"STRWaitingTime\";\r\n    mapping[SIM_AttributeTypeName.WorkTime] = \"STRWorkTime\";\r\n    mapping[SIM_AttributeTypeName.WorkTime2] = \"STRWorkTime2\";\r\n    mapping[\"Zip\"] = \"STRZIP\";\r\n    mapping[\"BoundaryType\"] = \"STRBOUNDARYTYPE\"; // Delete\r\n    mapping[\"BpmnScript\"] = \"STRBPMNSCRIPT\"; // Delete\r\n    mapping[\"Collapsed\"] = \"STRCOLLAPSED\"; // Delete\r\n    // mapping[\"InitialContent\"] = \"STRInitialContent\";\r\n    mapping[\"InitialContents\"] = \"STRInitialContentS\"; // Delete\r\n    mapping[\"loop\"] = \"STRLOOP\"; // Delete\r\n    mapping[\"Transaction\"] = \"STRTRANSACTION\"; // Delete\r\n\r\n    // bpmn diagrams or models\r\n    mapping[ob.GetModelAttribute(Process_ElementName.SLProc)] = \"STRBPD\";\r\n    mapping[\"OrgChart\"] = \"STROrgChar\";\r\n    mapping[\"Object Diagram\"] = \"STRObjectDiagram\";\r\n    mapping[SemTalkBaseConstant.SLGeneric] = \"STRGeneric\";\r\n\r\n    for (let x in mapping) {\r\n      const c = ob.FindClass(x);\r\n      if (c) {\r\n        if (c.FindSynonym(lang) === undefined) {\r\n          c.MakeSynonym(sem.getResStr(mapping[x], code), lang);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // private static FindTrigger(ev: ISemTalkSystemClass, obj: ISemTalkInstance): ISemTalkInstance {\r\n  //   let trigger: ISemTalkInstance = obj;\r\n  //   let ob = ev.ObjectBase;\r\n  //   for (const nd of obj.Nodes()) {\r\n  //     const et = obj.GetValue(BPMN_AttributeTypeName.EventType);\r\n  //     switch (et) {\r\n  //       case BPMN_EventTypeName.Start: {\r\n  //         const olist = nd.Diagram.RefinedObjects();\r\n  //         if (olist.length === 1) {\r\n  //           const refined = olist[0];\r\n  //           const inputs = refined.InvLinkedObjects(ob.GetModelAttribute(Process_ElementName.SLControl));\r\n  //           if (inputs.length > 0) {\r\n  //             trigger = inputs[0] as ISemTalkInstance;\r\n  //             if (trigger.IsInstance(ev) && trigger.GetValue(BPMN_AttributeTypeName.EventType) === BPMN_EventTypeName.Start) {\r\n  //               trigger = this.FindTrigger(ev, trigger);\r\n  //             }\r\n  //           }\r\n  //         }\r\n  //         break;\r\n  //       }\r\n  //       case BPMN_EventTypeName.End: {\r\n  //         const olist = nd.Diagram.RefinedObjects();\r\n  //         if (olist.length === 1) {\r\n  //           const refined = olist[0];\r\n  //           const outputs = refined.LinkedObjects(ob.GetModelAttribute(Process_ElementName.SLControl));\r\n  //           if (outputs.length > 0) {\r\n  //             trigger = outputs[0] as ISemTalkInstance;\r\n  //             if (trigger.IsInstance(ev) && trigger.GetValue(BPMN_AttributeTypeName.EventType) === BPMN_EventTypeName.End) {\r\n  //               trigger = this.FindTrigger(ev, trigger);\r\n  //             }\r\n  //           }\r\n  //         }\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   return trigger;\r\n  // }\r\n}","import * as React from 'react';\r\nimport styles from './usercontrol.module.scss';\r\nimport { IVisioRDFS } from './../../visiordfsinterface';\r\nimport {\r\n    TextField, Stack,\r\n} from 'office-ui-fabric-react'; //IStackStyles\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { ISemTalkObject } from './../../../tbase/Interface';\r\n// import { any } from '@microsoft/sp-webpart-base';\r\n\r\nexport interface ISemTalkUserTabProps {\r\n    title?: string;\r\n    description?: string;\r\n    semtalk: IVisioRDFS;\r\n    context?: any;\r\n    tabname: string;\r\n}\r\n\r\nexport function renderUserTab(tab: string, _semtalk: IVisioRDFS, object: ISemTalkObject): React.ReactElement<ISemTalkUserTabProps> {\r\n    let r: React.ReactElement<ISemTalkUserTabProps>;\r\n    const stackTokens = { childrenGap: 10 };\r\n    r = <Fabric>\r\n        <div className={styles.semTalkUserTab}> <div className={styles.pivottab}> </div></div >\r\n        {\r\n            object &&\r\n            <Stack tokens={stackTokens}><span>vcbbngnfg</span>\r\n                <TextField label={tab} readOnly value={object.CreatedBy} />\r\n             </Stack>\r\n        }\r\n    </Fabric>;\r\n    return r;\r\n}\r\n","export const CIT_SHAPES: any = {\r\n  BooleanField: {\r\n    type: 'vertex',\r\n    style: 'shape=citbooleanfield;resize=0;html=1;',\r\n  },\r\n  ChoiceField: {\r\n    type: 'vertex',\r\n    style: 'shape=citchoicefield;resize=0;html=1;',\r\n  },\r\n  ComputedField: {\r\n    type: 'vertex',\r\n    style: 'shape=citcomputedfield;resize=0;html=1;',\r\n  },\r\n  CurrencyField: {\r\n    type: 'vertex',\r\n    style: 'shape=citcurrencyfield;resize=0;html=1;',\r\n  },\r\n  DateField: {\r\n    type: 'vertex',\r\n    style: 'shape=citdatefield;resize=0;html=1;',\r\n  },\r\n  FileField: {\r\n    type: 'vertex',\r\n    style: 'shape=citfilefield;resize=0;html=1;',\r\n  },\r\n  IdField: {\r\n    type: 'vertex',\r\n    style: 'shape=citidfield;resize=0;html=1;',\r\n  },\r\n  NumberField: {\r\n    type: 'vertex',\r\n    style: 'shape=citnumberfield;resize=0;html=1;',\r\n  },\r\n  NumberUnitField: {\r\n    type: 'vertex',\r\n    style: 'shape=citnumberunitfield;resize=0;html=1;',\r\n  },\r\n  TextField: {\r\n    type: 'vertex',\r\n    style: 'shape=cittextfield;resize=0;html=1;',\r\n  },\r\n  TextAreaUnitField: {\r\n    type: 'vertex',\r\n    style: 'shape=cittextareafield;resize=0;html=1;',\r\n  },\r\n  Rule: {\r\n    type: 'vertex',\r\n    style: 'shape=citrule;resize=0;html=1;',\r\n  },\r\n  WebserviceMethod: {\r\n    type: 'vertex',\r\n    style: 'shape=citwebservicemethod;resize=0;html=1;',\r\n  },\r\n  XmlResource: {\r\n    type: 'vertex',\r\n    style: 'shape=citxmlresource;resize=0;html=1;',\r\n  },\r\n  ExternalComponent: {\r\n    type: 'vertex',\r\n    style: 'shape=citexternalcomponent;resize=0;html=1;',\r\n  },\r\n  SubFieldSet: {\r\n    type: 'vertex',\r\n    style: 'shape=citsubfieldset;resize=0;html=1;',\r\n  },\r\n  FieldSet: {\r\n    type: 'vertex',\r\n    style: 'shape=citfieldset;resize=0;html=1;',\r\n  },\r\n  InfoBox: {\r\n    type: 'vertex',\r\n    style: 'shape=citinfobox;resize=0;html=1;',\r\n  },\r\n  TextArea: {\r\n    type: 'vertex',\r\n    style: 'shape=cittextarea;resize=0;html=1;',\r\n  }\r\n\r\n};\r\n\r\n\r\n","import {\n  mxUtils,\n  // mxRectangle,\n  mxCellRenderer,\n  mxActor,\n  // mxShape,\n} from \"mxgraph-js\";// Document shape\n\nfunction CitBooleanFieldShape(this: any) {\n  mxActor.call(this);\n  this.isRounded = true;\n  this.strokewidth = 2;\n  // this.strokeOpacity = 100;\n}\nmxUtils.extend(CitBooleanFieldShape, mxActor);\n\n// let img = new Image();\n// let icon = \"citbooleanicon.svg\";\n\n// if (window.location.pathname.indexOf(\"/_layouts\") > 0) {\n//   let site = window.location.pathname.substr(0, window.location.pathname.indexOf(\"/_layouts\"));\n//   img.src = site + \"/Support/images/stencils/cit_intelliForm_dialog-masters/\" + icon;\n// } else {\n//     let blob = new Blob([svg], {type: 'image/svg+xml'});\n//     let url = URL.createObjectURL(blob);    \n//     img.src = url;\n//     // img.src = \"./images/stencils/cit_intelliForm_dialog-masters/\" + icon;\n// }\n\nlet svg = '<?xml version=\"1.0\" encoding=\"iso-8859-1\"?><svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\"><path style=\"fill:#C3E678;\" d=\"M238.345,189.773h247.172c14.626,0,26.483,11.857,26.483,26.483v158.897\tc0,14.626-11.857,26.483-26.483,26.483H344.276v29.116c0,5.544-6.702,8.32-10.622,4.399l-33.516-33.515h-61.793\tc-14.626,0-26.483-11.857-26.483-26.483V216.256C211.862,201.63,223.719,189.773,238.345,189.773z\"/><path style=\"fill:#A5D76E;\" d=\"M211.862,216.256v158.897c0,1.9,0.218,3.746,0.599,5.534\tc61.705-24.77,105.332-85.043,105.332-155.603c0-12.122-1.353-23.918-3.795-35.31h-75.654\tC223.719,189.773,211.862,201.63,211.862,216.256z\"/><path style=\"fill:#FF6464;\" d=\"M300.138,225.083c0-82.881-67.188-150.069-150.069-150.069S0,142.202,0,225.083\tc0,72.598,51.555,133.146,120.05,147.054l45.199,45.199c4.171,4.171,11.303,1.217,11.303-4.682v-39.978\tC246.78,360.151,300.138,298.912,300.138,225.083z\"/><circle style=\"fill:#D2555A;\" cx=\"150.069\" cy=\"225.125\" r=\"114.759\"/><g>\t<path style=\"fill:#FFFFFF;\" d=\"M150.074,304.582c-0.003,0-0.008,0.001-0.011,0c-4.875,0-8.833-3.957-8.833-8.833\t\tc0-0.001,0-0.003,0-0.006s0-0.003,0-0.006c0-4.875,3.957-8.833,8.833-8.833c0.002,0,0.007-0.001,0.011,0\t\tc4.875,0,8.833,3.957,8.833,8.833c0,0.001,0,0.002,0,0.003c0,0.002,0,0.004,0,0.007\t\tC158.908,300.625,154.95,304.582,150.074,304.582z\"/>\t<path style=\"fill:#FFFFFF;\" d=\"M361.931,348.67c-2.259,0-4.519-0.862-6.242-2.585l-44.138-44.138\t\tc-3.448-3.447-3.448-9.036,0-12.483c3.447-3.447,9.036-3.447,12.483,0l37.897,37.895l82.034-82.034\t\tc3.447-3.447,9.036-3.447,12.483,0c3.448,3.447,3.448,9.036,0,12.483l-88.276,88.276C366.45,347.808,364.19,348.67,361.931,348.67z\t\t\"/>\t<path style=\"fill:#FFFFFF;\" d=\"M150.069,269.261c-4.875,0-8.828-3.953-8.828-8.828v-2.637c0-11.743,7.631-21.921,18.989-25.327\t\tc14.806-4.44,25.148-18.349,25.149-33.826c0.001-9.183-3.741-17.983-10.536-24.778c-6.794-6.794-15.592-10.536-24.775-10.536\t\tc-0.001,0-0.001,0-0.003,0c-19.469,0.001-35.308,15.841-35.308,35.31c0,4.875-3.953,8.828-8.828,8.828\t\tc-4.875,0-8.828-3.953-8.828-8.828c0-29.203,23.758-52.963,52.962-52.966c0,0,0.003,0,0.004,0c13.898,0,27.128,5.578,37.258,15.706\t\tc10.13,10.13,15.708,23.363,15.706,37.262c-0.002,23.211-15.518,44.074-37.732,50.735c-3.831,1.149-6.406,4.531-6.406,8.416v2.637\t\tC158.897,265.31,154.944,269.261,150.069,269.261z\"/></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg>';\nvar enc = window.btoa(svg);\nlet url  = \"data:image/svg+xml;base64,\" + enc;\n\nCitBooleanFieldShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n  let strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n  let strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n  let fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n  c.setStrokeColor(strokeColor);\n  // c.setStrokeColor('#000000');\n  c.setStrokeWidth(strokeWidth);\n  c.setFillColor(fillColor);\n  let isgradient = false;\n  if (this[\"style\"][\"gradientColor\"]) {\n    isgradient = (this[\"style\"][\"gradientColor\"] !== '#ffffff');\n  }\n  if (isgradient) {\n    let gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\n    c.setGradient(fillColor, gradientColor);\n  }\n  c.translate(x, y);\n  let rSize = 5;\n\n  c.roundrect(0, 0, w, h, rSize, rSize);\n  c.fillAndStroke();\n\n  // c.setShadow(false);\n  this.redrawPath(c, x, y, w, h);\n\n};\n\nCitBooleanFieldShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\n  c.begin();\n  c.image(_w - 40, 5, 50, 20, url, true);\n  c.close();\n  c.fillAndStroke();\n};\n\nmxCellRenderer.registerShape('citbooleanfield', CitBooleanFieldShape);\nconsole.debug(\"CitBooleanFieldShape registered\");\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\tmxActor,\n\t// mxShape,\n} from \"mxgraph-js\";// Document shape\n\nfunction CitChoiceFieldShape(this: any) {\n\tmxActor.call(this);\n\tthis.isRounded = true;\n\tthis.strokewidth = 2;\n\t// this.strokeOpacity = 100;\n}\nmxUtils.extend(CitChoiceFieldShape, mxActor);\n\n// let img = new Image();\n// let icon = \"citchoiceicon.svg\";\n\nlet svg ='<?xml version=\"1.0\" encoding=\"iso-8859-1\"?> <!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --> <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" \t viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\"> <g> \t<path style=\"fill:#7AB9E8;\" d=\"M46.545,155.152C20.88,155.152,0,134.271,0,108.606s20.88-46.545,46.545-46.545 \t\ts46.545,20.88,46.545,46.545S72.211,155.152,46.545,155.152z M46.544,108.577l0.002,0.029 \t\tC46.545,108.586,46.544,108.577,46.544,108.577z\"/> \t<path style=\"fill:#7AB9E8;\" d=\"M46.545,449.939C20.88,449.939,0,429.059,0,403.394c0-25.665,20.88-46.545,46.545-46.545 \t\ts46.545,20.88,46.545,46.545C93.091,429.059,72.211,449.939,46.545,449.939z M46.544,403.364l0.002,0.029 \t\tC46.545,403.374,46.544,403.364,46.544,403.364z\"/> \t<path style=\"fill:#7AB9E8;\" d=\"M46.545,302.545C20.88,302.545,0,281.665,0,256s20.88-46.545,46.545-46.545 \t\tS93.091,230.335,93.091,256S72.211,302.545,46.545,302.545z M46.544,255.971L46.545,256 \t\tC46.545,255.98,46.544,255.971,46.544,255.971z\"/> </g> <g> \t<rect x=\"131.879\" y=\"232.727\" style=\"fill:#88888F;\" width=\"380.121\" height=\"46.545\"/> \t<rect x=\"131.879\" y=\"380.121\" style=\"fill:#88888F;\" width=\"380.121\" height=\"46.545\"/> \t<rect x=\"131.879\" y=\"85.333\" style=\"fill:#88888F;\" width=\"380.121\" height=\"46.545\"/> </g> <g> \t<rect x=\"318.061\" y=\"232.727\" style=\"fill:#56545A;\" width=\"193.939\" height=\"46.545\"/> \t<rect x=\"318.061\" y=\"380.121\" style=\"fill:#56545A;\" width=\"193.939\" height=\"46.545\"/> \t<rect x=\"318.061\" y=\"85.333\" style=\"fill:#56545A;\" width=\"193.939\" height=\"46.545\"/> </g> <g> \t<path style=\"fill:#579ADF;\" d=\"M46.545,209.455v93.091c25.665,0,46.545-20.88,46.545-46.545S72.211,209.455,46.545,209.455z\"/> \t<path style=\"fill:#579ADF;\" d=\"M46.545,155.152c25.665,0,46.545-20.88,46.545-46.545s-20.88-46.545-46.545-46.545V155.152z\"/> \t<path style=\"fill:#579ADF;\" d=\"M46.545,356.848v93.091c25.665,0,46.545-20.88,46.545-46.545 \t\tC93.091,377.729,72.211,356.848,46.545,356.848z\"/> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g></svg>';\nvar enc = window.btoa(svg);\nlet url  = \"data:image/svg+xml;base64,\" + enc;\n\n// if (window.location.pathname.indexOf(\"/_layouts\") > 0) {\n// \tlet site = window.location.pathname.substr(0, window.location.pathname.indexOf(\"/_layouts\"));\n// \timg.src = site + \"/Support/images/stencils/cit_intelliForm_dialog-masters/\" + icon;\n//   } else {\n// \timg.src = \"./images/stencils/cit_intelliForm_dialog-masters/\" + icon;\n//   }\n\nCitChoiceFieldShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\tlet isgradient = false;\n\tif (this[\"style\"][\"gradientColor\"]) {\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\n\t}\n\tif (isgradient) {\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\n\t\tc.setGradient(fillColor, gradientColor);\n\t}\n\tc.translate(x, y);\n\tlet rSize = 5;\n\n\tc.roundrect(0, 0, w, h, rSize, rSize);\n\tc.fillAndStroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nCitChoiceFieldShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\n\tc.begin();\n\tc.image(_w - 40,5,50,20,url,true);\n\tc.close();\n\tc.fillAndStroke();\n};\n\nmxCellRenderer.registerShape('citchoicefield', CitChoiceFieldShape);\n// console.debug(\"EpcFunction Shape registered\");\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\tmxActor,\n\t// mxShape,\n} from \"mxgraph-js\";// Document shape\n\nfunction CitComputedFieldShape(this: any) {\n\tmxActor.call(this);\n\tthis.isRounded = true;\n\tthis.strokewidth = 2;\n\t// this.strokeOpacity = 100;\n}\nmxUtils.extend(CitComputedFieldShape, mxActor);\n\n// let icon = \"citcomputedicon.svg\";\n\nlet svg = '<?xml version=\"1.0\" encoding=\"iso-8859-1\"?> <!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --> <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" \t viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\"> <rect y=\"83.2\" style=\"fill:#C9E3F7;\" width=\"512\" height=\"422.4\"/> <rect x=\"256\" y=\"83.2\" style=\"fill:#78B9EB;\" width=\"256\" height=\"422.4\"/> <rect x=\"64\" y=\"83.2\" style=\"fill:#3C5D76;\" width=\"384\" height=\"89.6\"/> <rect x=\"102.4\" y=\"6.4\" style=\"fill:#C9E3F7;\" width=\"76.8\" height=\"115.2\"/> <g> \t<rect x=\"332.8\" y=\"6.4\" style=\"fill:#78B9EB;\" width=\"76.8\" height=\"115.2\"/> \t<rect x=\"102.4\" y=\"236.8\" style=\"fill:#78B9EB;\" width=\"76.8\" height=\"76.8\"/> </g> <g> \t<rect x=\"332.8\" y=\"236.8\" style=\"fill:#3C5D76;\" width=\"76.8\" height=\"76.8\"/> \t<rect x=\"332.8\" y=\"352\" style=\"fill:#3C5D76;\" width=\"76.8\" height=\"76.8\"/> </g> <g> \t<rect x=\"102.4\" y=\"352\" style=\"fill:#78B9EB;\" width=\"76.8\" height=\"76.8\"/> \t<rect x=\"217.6\" y=\"236.8\" style=\"fill:#78B9EB;\" width=\"76.8\" height=\"76.8\"/> \t<rect x=\"217.6\" y=\"352\" style=\"fill:#78B9EB;\" width=\"76.8\" height=\"76.8\"/> </g> <g> \t<rect x=\"256\" y=\"236.8\" style=\"fill:#3C5D76;\" width=\"38.4\" height=\"76.8\"/> \t<rect x=\"256\" y=\"352\" style=\"fill:#3C5D76;\" width=\"38.4\" height=\"76.8\"/> </g> <polygon style=\"fill:#C9E3F7;\" points=\"256,6.4 217.6,6.4 217.6,121.6 256,121.6 268.8,57.6 \"/> <rect x=\"256\" y=\"6.4\" style=\"fill:#78B9EB;\" width=\"38.4\" height=\"115.2\"/> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> </svg>';\nvar enc = window.btoa(svg);\nlet url  = \"data:image/svg+xml;base64,\" + enc;\n\nCitComputedFieldShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\tlet isgradient = false;\n\tif (this[\"style\"][\"gradientColor\"]) {\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\n\t}\n\tif (isgradient) {\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\n\t\tc.setGradient(fillColor, gradientColor);\n\t}\n\tc.translate(x, y);\n\tlet rSize = 5;\n\n\tc.roundrect(0, 0, w, h, rSize, rSize);\n\n\tc.fillAndStroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nCitComputedFieldShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\n\tc.begin();\n\tc.image(_w - 40,5,50,20, url,true);\n\tc.close();\n\tc.fillAndStroke();\n};\n\n// function addSymbol ()\n\nmxCellRenderer.registerShape('citcomputedfield', CitComputedFieldShape);\n// console.debug(\"EpcFunction Shape registered\");\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\tmxActor,\n\t// mxShape,\n} from \"mxgraph-js\";// Document shape\n\nfunction CitCurrencyFieldShape(this: any) {\n\tmxActor.call(this);\n\tthis.isRounded = true;\n\tthis.strokewidth = 2;\n\t// this.strokeOpacity = 100;\n}\nmxUtils.extend(CitCurrencyFieldShape, mxActor);\n\n// let icon = \"citcurrencyicon.svg\";\nlet svg = '<?xml version=\"1.0\" encoding=\"iso-8859-1\"?> <!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --> <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" \t viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\"> <path style=\"fill:#3A7545;\" d=\"M495.528,107.762H16.472C7.375,107.762,0,115.136,0,124.233v263.534 \tc0,9.097,7.375,16.472,16.472,16.472h479.057c9.097,0,16.472-7.375,16.472-16.472V124.233 \tC512,115.135,504.626,107.762,495.528,107.762z\"/> <path style=\"fill:#8DC652;\" d=\"M257.099,107.762H16.472C7.375,107.762,0,115.136,0,124.233v263.534 \tc0,9.097,7.375,16.472,16.472,16.472h240.627V107.762z\"/> <g> \t<path style=\"fill:#38979E;\" d=\"M16.472,237.058c62.311,0,112.825-50.513,112.825-112.825H16.472V237.058z\"/> \t<path style=\"fill:#38979E;\" d=\"M16.472,274.941v112.825h112.825C129.297,325.454,78.784,274.941,16.472,274.941z\"/> </g> <g> \t<path style=\"fill:#235559;\" d=\"M382.703,124.233c0,62.311,50.513,112.825,112.825,112.825V124.233H382.703z\"/> \t<path style=\"fill:#235559;\" d=\"M495.528,274.941c-62.311,0-112.825,50.513-112.825,112.825h112.825V274.941z\"/> </g> <circle style=\"fill:#005049;\" cx=\"256.003\" cy=\"257.122\" r=\"102.015\"/> <path style=\"fill:#006E64;\" d=\"M257.099,155.124c-0.367-0.004-0.731-0.014-1.099-0.014c-56.342,0-102.016,45.674-102.016,102.016 \ts45.674,102.016,102.016,102.016c0.368,0,0.732-0.01,1.099-0.014V155.124z\"/> <path style=\"fill:#ACACB2;\" d=\"M251.485,308.473c-19.029-0.635-34.57-10.466-34.57-20.615c0-5.392,4.757-13.32,10.783-13.32 \tc6.66,0,12.052,9.356,23.787,11.417v-25.69c-14.59-5.55-31.716-12.369-31.716-32.667c0-20.139,14.906-29.813,31.716-32.191v-4.44 \tc0-2.219,2.538-4.282,6.025-4.282c3.013,0,6.025,2.061,6.025,4.282v3.964c9.832,0.317,28.386,2.854,28.386,13.796 \tc0,4.282-2.855,13.004-9.832,13.004c-5.233,0-8.246-5.074-18.554-5.867v23.153c14.431,5.392,31.24,12.845,31.24,34.252 \tc0,19.663-12.686,31.556-31.24,34.57v4.599c0,2.219-3.013,4.282-6.025,4.282c-3.489,0-6.025-2.061-6.025-4.282v-3.964H251.485z \t M253.07,235.212v-18.871c-7.137,1.428-10.149,5.074-10.149,8.88C242.921,229.819,247.044,232.674,253.07,235.212z M261.95,264.548 \tv21.25c5.392-1.268,9.673-4.282,9.673-9.991C271.623,270.574,267.659,267.244,261.95,264.548z\"/> <path style=\"fill:#235559;\" d=\"M485.645,134.116v243.768H26.355V134.116H485.645 M495.528,107.762H16.472 \tC7.375,107.762,0,115.136,0,124.233v263.534c0,9.097,7.375,16.472,16.472,16.472h479.057c9.097,0,16.472-7.375,16.472-16.472 \tV124.233C512,115.135,504.626,107.762,495.528,107.762L495.528,107.762z\"/> <path style=\"fill:#38979E;\" d=\"M0,124.233v263.534c0,9.097,7.375,16.472,16.472,16.472h240.627v-26.355H26.355V134.116h230.744 \tv-26.355H16.472C7.375,107.762,0,115.135,0,124.233z\"/> <path style=\"fill:#FFFFFF;\" d=\"M257.1,186.717c-3.269,0.158-5.615,2.122-5.615,4.251v4.44c-16.81,2.379-31.716,12.052-31.716,32.191 \tc0,20.297,17.126,27.117,31.716,32.667v25.69c-11.736-2.061-17.127-11.417-23.787-11.417c-6.026,0-10.783,7.928-10.783,13.32 \tc0,10.149,15.54,19.981,34.57,20.615v3.964c0,2.129,2.344,4.093,5.615,4.251V186.717H257.1z M242.921,225.22 \tc0-3.806,3.013-7.453,10.149-8.88v18.871C247.044,232.674,242.921,229.819,242.921,225.22z\"/> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> </svg>';\nvar enc = window.btoa(svg);\nlet url  = \"data:image/svg+xml;base64,\" + enc;\n\nCitCurrencyFieldShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\tlet isgradient = false;\n\tif (this[\"style\"][\"gradientColor\"]) {\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\n\t}\n\tif (isgradient) {\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\n\t\tc.setGradient(fillColor, gradientColor);\n\t}\n\tc.translate(x, y);\n\tlet rSize = 5;\n\n\tc.roundrect(0, 0, w, h, rSize, rSize);\n\tc.fillAndStroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nCitCurrencyFieldShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\n\tc.begin();\n\tc.image(_w - 40,5,50,20,url,true);\n\tc.close();\n\tc.fillAndStroke();\n};\n\nmxCellRenderer.registerShape('citcurrencyfield', CitCurrencyFieldShape);\n// console.debug(\"EpcFunction Shape registered\");\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\tmxActor,\n\t// mxShape,\n} from \"mxgraph-js\";// Document shape\n\nfunction CitDateFieldShape(this: any) {\n\tmxActor.call(this);\n\tthis.isRounded = true;\n\tthis.strokewidth = 2;\n\t// this.strokeOpacity = 100;\n}\nmxUtils.extend(CitDateFieldShape, mxActor);\n\n// let icon = \"citdateicon.svg\";\nlet svg = '<?xml version=\"1.0\" encoding=\"iso-8859-1\"?> <!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --> <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" \t viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\"> <rect y=\"83.2\" style=\"fill:#C9E3F7;\" width=\"512\" height=\"422.4\"/> <rect x=\"256\" y=\"83.2\" style=\"fill:#78B9EB;\" width=\"256\" height=\"422.4\"/> <rect x=\"64\" y=\"83.2\" style=\"fill:#3C5D76;\" width=\"384\" height=\"89.6\"/> <rect x=\"102.4\" y=\"6.4\" style=\"fill:#C9E3F7;\" width=\"76.8\" height=\"115.2\"/> <g> \t<rect x=\"332.8\" y=\"6.4\" style=\"fill:#78B9EB;\" width=\"76.8\" height=\"115.2\"/> \t<rect x=\"102.4\" y=\"236.8\" style=\"fill:#78B9EB;\" width=\"76.8\" height=\"76.8\"/> </g> <g> \t<rect x=\"332.8\" y=\"236.8\" style=\"fill:#3C5D76;\" width=\"76.8\" height=\"76.8\"/> \t<rect x=\"332.8\" y=\"352\" style=\"fill:#3C5D76;\" width=\"76.8\" height=\"76.8\"/> </g> <g> \t<rect x=\"102.4\" y=\"352\" style=\"fill:#78B9EB;\" width=\"76.8\" height=\"76.8\"/> \t<rect x=\"217.6\" y=\"236.8\" style=\"fill:#78B9EB;\" width=\"76.8\" height=\"76.8\"/> \t<rect x=\"217.6\" y=\"352\" style=\"fill:#78B9EB;\" width=\"76.8\" height=\"76.8\"/> </g> <g> \t<rect x=\"256\" y=\"236.8\" style=\"fill:#3C5D76;\" width=\"38.4\" height=\"76.8\"/> \t<rect x=\"256\" y=\"352\" style=\"fill:#3C5D76;\" width=\"38.4\" height=\"76.8\"/> </g> <polygon style=\"fill:#C9E3F7;\" points=\"256,6.4 217.6,6.4 217.6,121.6 256,121.6 268.8,57.6 \"/> <rect x=\"256\" y=\"6.4\" style=\"fill:#78B9EB;\" width=\"38.4\" height=\"115.2\"/> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> </svg>';\nvar enc = window.btoa(svg);\nlet url  = \"data:image/svg+xml;base64,\" + enc;\n\nCitDateFieldShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\tlet isgradient = false;\n\tif (this[\"style\"][\"gradientColor\"]) {\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\n\t}\n\tif (isgradient) {\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\n\t\tc.setGradient(fillColor, gradientColor);\n\t}\n\tc.translate(x, y);\n\tlet rSize = 5;\n\n\tc.roundrect(0, 0, w, h, rSize, rSize);\n\tc.fillAndStroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nCitDateFieldShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\n\tc.begin();\n\tc.image(_w - 40,5,50,20,url,true);\n\tc.close();\n\tc.fillAndStroke();\n};\n\nmxCellRenderer.registerShape('citdatefield', CitDateFieldShape);\n// console.debug(\"EpcFunction Shape registered\");\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";// Document shape\r\n\r\nfunction CitFieldSetShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(CitFieldSetShape, mxActor);\r\n\r\nCitFieldSetShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.roundrect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nCitFieldSetShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\r\n\tc.fillAndStroke();\r\n};\r\n\r\nmxCellRenderer.registerShape('citfieldset', CitFieldSetShape);\r\n// console.debug(\"EpcFunction Shape registered\");\r\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\tmxActor,\n\t// mxShape,\n} from \"mxgraph-js\";// Document shape\n\nfunction CitIdFieldShape(this: any) {\n\tmxActor.call(this);\n\tthis.isRounded = true;\n\tthis.strokewidth = 2;\n\t// this.strokeOpacity = 100;\n}\nmxUtils.extend(CitIdFieldShape, mxActor);\n\n\n// let icon = \"citidicon.svg\";\nlet svg = '<?xml version=\"1.0\" encoding=\"iso-8859-1\"?> <!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --> <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" \t viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\"> <path style=\"fill:#9BC9FF;\" d=\"M488.727,69.818H256H23.273C10.42,69.818,0,80.238,0,93.091v325.818 \tc0,12.853,10.42,23.273,23.273,23.273H256h232.727c12.853,0,23.273-10.42,23.273-23.273V93.091 \tC512,80.238,501.58,69.818,488.727,69.818z\"/> <path style=\"fill:#57A4FF;\" d=\"M23.273,69.818C10.42,69.818,0,80.238,0,93.091v325.818c0,12.853,10.42,23.273,23.273,23.273H256 \tV69.818H23.273z\"/> <g> \t<circle style=\"fill:#BDFDFF;\" cx=\"173.692\" cy=\"211.673\" r=\"56.809\"/> \t<path style=\"fill:#BDFDFF;\" d=\"M173.7,268.479c-48.803,0-88.367,39.561-88.367,88.37h176.733 \t\tC262.066,308.039,222.503,268.479,173.7,268.479z\"/> \t<path style=\"fill:#BDFDFF;\" d=\"M395.636,279.273H323.6c-12.853,0-23.273-10.42-23.273-23.273c0-12.853,10.42-23.273,23.273-23.273 \t\th72.037c12.853,0,23.273,10.42,23.273,23.273C418.909,268.853,408.489,279.273,395.636,279.273z\"/> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> </svg>  ';\nvar enc = window.btoa(svg);\nlet url  = \"data:image/svg+xml;base64,\" + enc;\n\nCitIdFieldShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\tlet isgradient = false;\n\tif (this[\"style\"][\"gradientColor\"]) {\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\n\t}\n\tif (isgradient) {\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\n\t\tc.setGradient(fillColor, gradientColor);\n\t}\n\tc.translate(x, y);\n\tlet rSize = 5;\n\n\tc.roundrect(0, 0, w, h, rSize, rSize);\n\tc.fillAndStroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nCitIdFieldShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\n\tc.begin();\n\tc.image(_w - 40,5,50,20,url,true);\n\tc.close();\n\tc.fillAndStroke();\n};\n\nmxCellRenderer.registerShape('citidfield', CitIdFieldShape);\n\n// console.debug(\"EpcFunction Shape registered\");\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\tmxActor,\n\t// mxShape,\n} from \"mxgraph-js\";// Document shape\n\nfunction CitFileFieldShape(this: any) {\n\tmxActor.call(this);\n\tthis.isRounded = true;\n\tthis.strokewidth = 2;\n\t// this.strokeOpacity = 100;\n}\nmxUtils.extend(CitFileFieldShape, mxActor);\n\n// let icon = \"citfileicon.svg\";\nlet svg = '<?xml version=\"1.0\" encoding=\"iso-8859-1\"?> <!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --> <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" \t viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\"> <path style=\"fill:#00D7DF;\" d=\"M256,512c-54.292,0-98.462-44.17-98.462-98.462V98.462C157.538,44.17,201.708,0,256,0 \ts98.462,44.17,98.462,98.462v315.077C354.462,467.83,310.292,512,256,512z M256,39.385c-32.576,0-59.077,26.502-59.077,59.077 \tv315.077c0,32.576,26.501,59.077,59.077,59.077s59.077-26.501,59.077-59.077V98.462C315.077,65.887,288.576,39.385,256,39.385z\"/> <path style=\"fill:#00A1A7;\" d=\"M315.077,341.333v72.205c0,32.576-26.501,59.077-59.077,59.077s-59.077-26.501-59.077-59.077V98.462 \tc0-32.575,26.501-59.077,59.077-59.077c0.021,0,0.041,0.001,0.063,0.001V0.001C256.041,0.001,256.021,0,256,0 \tc-54.292,0-98.462,44.17-98.462,98.462v315.077C157.538,467.83,201.708,512,256,512s98.462-44.17,98.462-98.462v-98.462 \tL315.077,341.333z\"/> <path style=\"fill:#00D7DF;\" d=\"M295.385,374.154c-32.576,0-59.077-26.501-59.077-59.077V157.538h39.385v157.538 \tc0,10.858,8.834,19.692,19.692,19.692c10.858,0,19.692-8.834,19.692-19.692V157.538h39.385v157.538 \tC354.462,347.653,327.961,374.154,295.385,374.154z\"/> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> </svg>';\nvar enc = window.btoa(svg);\nlet url  = \"data:image/svg+xml;base64,\" + enc;\n    // // Ports are equal for all shapes...\n\t// let ports: any[] = [];\n\n\t// // NOTE: Constraint is used later for orthogonal edge routing (currently ignored)\n\t// ports['w'] = {x: 0, y: 0.5, perimeter: true, constraint: 'west'};\n\t// ports['e'] = {x: 1, y: 0.5, perimeter: true, constraint: 'east'};\n\t// ports['n'] = {x: 0.5, y: 0, perimeter: true, constraint: 'north'};\n\t// ports['s'] = {x: 0.5, y: 1, perimeter: true, constraint: 'south'};\n\t// ports['nw'] = {x: 0, y: 0, perimeter: true, constraint: 'north west'};\n\t// ports['ne'] = {x: 1, y: 0, perimeter: true, constraint: 'north east'};\n\t// ports['sw'] = {x: 0, y: 1, perimeter: true, constraint: 'south west'};\n\t// ports['se'] = {x: 1, y: 1, perimeter: true, constraint: 'south east'};\n\nCitFileFieldShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\tlet isgradient = false;\n\tif (this[\"style\"][\"gradientColor\"]) {\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\n\t}\n\tif (isgradient) {\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\n\t\tc.setGradient(fillColor, gradientColor);\n\t}\n\tc.translate(x, y);\n\tlet rSize = 5;\n\n\tc.roundrect(0, 0, w, h, rSize, rSize);\n\tc.fillAndStroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\t// this.getPorts();\n\n};\n\nCitFileFieldShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\n\tc.begin();\n\tc.image(_w - 40,5,50,20,url,true);\n\tc.close();\n\tc.fillAndStroke();\n};\n\n// CitFileFieldShape.prototype.getPorts = () =>{\n// \treturn ports;\n// }\n\n\n\nmxCellRenderer.registerShape('citfilefield', CitFileFieldShape);\n// console.debug(\"EpcFunction Shape registered\");\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";// Document shape\r\n\r\nfunction CitInfoBoxShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(CitInfoBoxShape, mxActor);\r\n\r\nCitInfoBoxShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.roundrect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nCitInfoBoxShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\r\n\tc.fillAndStroke();\r\n};\r\n\r\nmxCellRenderer.registerShape('citinfobox', CitInfoBoxShape);\r\n// console.debug(\"EpcFunction Shape registered\");\r\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\tmxActor,\n\t// mxShape,\n} from \"mxgraph-js\";// Document shape\n\nfunction CitNumberFieldShape(this: any) {\n\tmxActor.call(this);\n\tthis.isRounded = true;\n\tthis.strokewidth = 2;\n\t// this.strokeOpacity = 100;\n}\nmxUtils.extend(CitNumberFieldShape, mxActor);\n\n// let icon = \"citnumbericon.svg\";\nlet svg = '<svg width=\"72px\" height=\"72px\" viewBox=\"0 0 72 72\" id=\"emoji\" xmlns=\"http://www.w3.org/2000/svg\">   <g id=\"color\">     <path fill=\"#d0cfce\" stroke=\"none\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M59.0349,60H12.9651 C12.4343,60,12,59.5657,12,59.0349V12.9651C12,12.4343,12.4343,12,12.9651,12h46.0698C59.5657,12,60,12.4343,60,12.9651v46.0698 C60,59.5657,59.5657,60,59.0349,60z\"/>   </g>   <g id=\"hair\"/>   <g id=\"skin\"/>   <g id=\"skin-shadow\"/>   <g id=\"line\">     <path fill=\"none\" stroke=\"#000000\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M59.0349,60H12.9651 C12.4343,60,12,59.5657,12,59.0349V12.9651C12,12.4343,12.4343,12,12.9651,12h46.0698C59.5657,12,60,12.4343,60,12.9651v46.0698 C60,59.5657,59.5657,60,59.0349,60z\"/>     <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M39.4907,24.9226c0.2864-1.3997,1.5249-2.4527,3.0093-2.4527l0,0c0.8481,0,1.6161,0.3439,2.172,0.8997 c0.8647,0.8647,0.7849,2.3016-0.0264,3.2164l-5.2173,5.8839h6.1434\"/>     <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M27.7088,46.4738c0.263,1.1393,1.3999,1.9961,2.7626,1.9961l0,0c1.5574,0,2.8199-1.1193,2.8199-2.5s-1.2624-2.5-2.8199-2.5 c1.5574,0,2.8199-1.1193,2.8199-2.5s-1.2624-2.5-2.8199-2.5l0,0c-1.3627,0-2.4996,0.857-2.7626,1.9961\"/>     <polyline fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" points=\"28.1158,24.5439 30.8842,22.4699 30.8842,32.4699\"/>     <polyline fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" points=\"43.2914,38.4699 39.5754,46.8709 45.4246,46.8709\"/>     <line x1=\"44.4612\" x2=\"44.4612\" y1=\"43.7742\" y2=\"48.4699\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>   </g> </svg>';\nvar enc = window.btoa(svg);\nlet url  = \"data:image/svg+xml;base64,\" + enc;\n\nCitNumberFieldShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\tlet isgradient = false;\n\tif (this[\"style\"][\"gradientColor\"]) {\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\n\t}\n\tif (isgradient) {\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\n\t\tc.setGradient(fillColor, gradientColor);\n\t}\n\tc.translate(x, y);\n\tlet rSize = 5;\n\n\tc.roundrect(0, 0, w, h, rSize, rSize);\n\tc.fillAndStroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nCitNumberFieldShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\n\tc.begin();\n\tc.image(_w - 40,5,50,20,url,true);\n\tc.close();\n\tc.fillAndStroke();\n};\n\nmxCellRenderer.registerShape('citnumberfield', CitNumberFieldShape);\n// console.debug(\"EpcFunction Shape registered\");\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\tmxActor,\n\t// mxShape,\n} from \"mxgraph-js\";// Document shape\n\nfunction CitNumberUnitFieldShape(this: any) {\n\tmxActor.call(this);\n\tthis.isRounded = true;\n\tthis.strokewidth = 2;\n\t// this.strokeOpacity = 100;\n}\nmxUtils.extend(CitNumberUnitFieldShape, mxActor);\n\n// let icon = \"citnumbericon.svg\";\nlet svg = '<?xml version=\"1.0\" encoding=\"iso-8859-1\"?> <!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --> <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" \t viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\"> <polygon style=\"fill:#FFBE00;\" points=\"512,118.581 270.553,315.291 242.497,379.163 270.553,412.62 436.544,277.385 \t436.544,436.544 270.553,436.544 242.497,475.901 270.553,512 281.769,512 297.443,501.543 313.116,512 335.67,512 351.344,501.543 \t367.017,512 389.571,512 405.245,501.543 420.918,512 443.471,512 459.145,501.543 474.818,512 512,512 \"/> <polygon style=\"fill:#FFE074;\" points=\"241.188,436.544 270.553,412.62 270.553,315.291 29.107,512 120.067,512 135.741,501.543 \t151.414,512 173.968,512 189.642,501.543 205.315,512 227.869,512 243.543,501.543 259.216,512 270.553,512 270.553,436.544 \"/> <g> \t<rect x=\"120.069\" y=\"475.899\" style=\"fill:#FFBE00;\" width=\"31.347\" height=\"36.099\"/> \t<rect x=\"173.965\" y=\"475.899\" style=\"fill:#FFBE00;\" width=\"31.347\" height=\"36.099\"/> \t<rect x=\"227.871\" y=\"475.899\" style=\"fill:#FFBE00;\" width=\"31.347\" height=\"36.099\"/> </g> <g> \t<rect x=\"281.767\" y=\"475.899\" style=\"fill:#FF9302;\" width=\"31.347\" height=\"36.099\"/> \t<rect x=\"335.673\" y=\"475.899\" style=\"fill:#FF9302;\" width=\"31.347\" height=\"36.099\"/> \t<rect x=\"389.569\" y=\"475.899\" style=\"fill:#FF9302;\" width=\"31.347\" height=\"36.099\"/> \t<rect x=\"443.476\" y=\"475.899\" style=\"fill:#FF9302;\" width=\"31.347\" height=\"36.099\"/> </g> <polygon style=\"fill:#FC2B32;\" points=\"23.439,400.998 46.878,368.658 46.878,53.901 12.982,32.986 \"/> <polygon style=\"fill:#FF5D65;\" points=\"0,53.901 0,368.658 23.439,400.998 23.439,32.986 \"/> <polygon style=\"fill:#0089D3;\" points=\"23.439,0 12.982,26.95 23.439,53.901 46.878,53.901 46.878,0 \"/> <rect style=\"fill:#63C8EE;\" width=\"23.439\" height=\"53.901\"/> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> </svg>  ';\nvar enc = window.btoa(svg);\nlet url  = \"data:image/svg+xml;base64,\" + enc;\n\nCitNumberUnitFieldShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\tlet isgradient = false;\n\tif (this[\"style\"][\"gradientColor\"]) {\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\n\t}\n\tif (isgradient) {\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\n\t\tc.setGradient(fillColor, gradientColor);\n\t}\n\tc.translate(x, y);\n\tlet rSize = 5;\n\n\tc.roundrect(0, 0, w, h, rSize, rSize);\n\tc.fillAndStroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nCitNumberUnitFieldShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\n\tc.begin();\n\tc.image(_w - 40,5,50,20,url,true);\n\tc.close();\n\tc.fillAndStroke();\n};\n\nmxCellRenderer.registerShape('citnumberunitfield', CitNumberUnitFieldShape);\n// console.debug(\"EpcFunction Shape registered\");\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\tmxActor,\n\t// mxShape,\n} from \"mxgraph-js\";// Document shape\n\nfunction CitRuleShape(this: any) {\n\tmxActor.call(this);\n\tthis.isRounded = true;\n\tthis.strokewidth = 2;\n\t// this.strokeOpacity = 100;\n}\nmxUtils.extend(CitRuleShape, mxActor);\n\n// let icon = \"citruleicon.svg\";\nlet svg = '<?xml version=\"1.0\" encoding=\"iso-8859-1\"?> <!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --> <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" \t viewBox=\"0 0 499.698 499.698\" style=\"enable-background:new 0 0 499.698 499.698;\" xml:space=\"preserve\"> <g> \t<path style=\"fill:#FF5023;\" d=\"M217.279,359.294l-91.373-91.373l28.285-28.284l63.088,63.088l32.57-32.57V0l-14.402,14.948 \t\tC188.739,63.425,128.045,90.124,64.544,90.126c-12.13,0-24.388-1.009-36.433-3L3.902,83.124l0.963,24.519 \t\tc2.861,72.846,16.971,138.61,41.938,195.463c20.175,45.941,47.421,86.163,80.982,119.547 \t\tc57.637,57.333,113.968,74.626,116.337,75.334l5.727,1.711V326.724L217.279,359.294z\"/> \t<path style=\"fill:#FF3501;\" d=\"M471.588,87.126c-12.04,1.99-24.298,3-36.434,3c-63.496,0.002-124.19-26.697-170.902-75.178 \t\tL249.849,0v270.156l95.659-95.657l28.283,28.284L249.849,326.724v172.975l5.727-1.711c2.369-0.708,58.7-18.001,116.337-75.334 \t\tc33.562-33.385,60.808-73.606,80.982-119.547c24.968-56.853,39.077-122.616,41.938-195.463l0.963-24.519L471.588,87.126z\"/> \t<polygon style=\"fill:#FFDA44;\" points=\"154.191,239.637 125.906,267.921 217.279,359.294 249.849,326.724 373.792,202.782 \t\t345.508,174.498 249.849,270.156 217.279,302.725 \t\"/> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> </svg>';\nvar enc = window.btoa(svg);\nlet url  = \"data:image/svg+xml;base64,\" + enc;\n\nCitRuleShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\tlet isgradient = false;\n\tif (this[\"style\"][\"gradientColor\"]) {\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\n\t}\n\tif (isgradient) {\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\n\t\tc.setGradient(fillColor, gradientColor);\n\t}\n\tc.translate(x, y);\n\tlet rSize = 5;\n\n\tc.roundrect(0, 0, w, h, rSize, rSize);\n\tc.fillAndStroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nCitRuleShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\n\tc.begin();\n\tc.image(_w - 40,5,50,20,url,true);\n\tc.close();\n\tc.fillAndStroke();\n};\n\nmxCellRenderer.registerShape('citrule', CitRuleShape);\n// console.debug(\"EpcFunction Shape registered\");\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\tmxActor,\n\t// mxShape,\n} from \"mxgraph-js\";// Document shape\n\nfunction CitTextAreaShape(this: any) {\n\tmxActor.call(this);\n\tthis.isRounded = true;\n\tthis.strokewidth = 2;\n\t// this.strokeOpacity = 100;\n}\nmxUtils.extend(CitTextAreaShape, mxActor);\n\n// let icon = \"cittextareaicon.svg\";\nlet svg = '<?xml version=\"1.0\" encoding=\"iso-8859-1\"?> <!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --> <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" \t viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\"> <g> \t<rect x=\"2.392\" y=\"439.172\" style=\"fill:#00D7DF;\" width=\"507.586\" height=\"72.828\"/> \t<rect x=\"2.392\" y=\"293.517\" style=\"fill:#00D7DF;\" width=\"507.586\" height=\"72.828\"/> </g> <g> \t<rect x=\"256.177\" y=\"439.172\" style=\"fill:#00A1A7;\" width=\"253.793\" height=\"72.828\"/> \t<rect x=\"256.177\" y=\"293.517\" style=\"fill:#00A1A7;\" width=\"253.793\" height=\"72.828\"/> \t<rect x=\"256.177\" y=\"145.655\" style=\"fill:#00A1A7;\" width=\"253.793\" height=\"72.828\"/> \t<rect x=\"256.177\" style=\"fill:#00A1A7;\" width=\"253.793\" height=\"72.828\"/> </g> <path style=\"fill:#FF5023;\" d=\"M126.455,2.207H72.227L2.022,220.69h50.792l12.244-44.138h68.568l12.401,44.138h50.792L126.455,2.207 \tz M76.264,139.034l22.559-79.448h0.892l22.707,79.448H76.264z\"/> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> </svg>  ';\nvar enc = window.btoa(svg);\nlet url  = \"data:image/svg+xml;base64,\" + enc;\n\nCitTextAreaShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\tlet isgradient = false;\n\tif (this[\"style\"][\"gradientColor\"]) {\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\n\t}\n\tif (isgradient) {\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\n\t\tc.setGradient(fillColor, gradientColor);\n\t}\n\tc.translate(x, y);\n\tlet rSize = 5;\n\n\tc.roundrect(0, 0, w, h, rSize, rSize);\n\tc.fillAndStroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nCitTextAreaShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\n\tc.begin();\n\tc.image(_w - 40,5,50,20,url,true);\n\tc.close();\n\tc.fillAndStroke();\n};\n\nmxCellRenderer.registerShape('cittextarea', CitTextAreaShape);\n// console.debug(\"EpcFunction Shape registered\");\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\tmxActor,\n\t// mxShape,\n} from \"mxgraph-js\";// Document shape\n\nfunction CitTextFieldShape(this: any) {\n\tmxActor.call(this);\n\tthis.isRounded = true;\n\tthis.strokewidth = 2;\n\t// this.strokeOpacity = 100;\n}\nmxUtils.extend(CitTextFieldShape, mxActor);\n\n// let icon = \"cittexticon.svg\";\nlet svg = '<?xml version=\"1.0\" encoding=\"iso-8859-1\"?> <!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --> <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" \t viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\"> <rect x=\"16.3\" y=\"443.317\" style=\"fill:#00D7DF;\" width=\"478.699\" height=\"68.683\"/> <path style=\"fill:#FF5023;\" d=\"M196.605,303.87H315.46l21.496,72.846h88.043L303.032,0h-94L87.339,376.715h88.041L196.605,303.87z \t M255.133,101.984h1.544l39.362,133.203H216.03L255.133,101.984z\"/> <rect x=\"256.351\" y=\"443.317\" style=\"fill:#00A1A7;\" width=\"239.35\" height=\"68.683\"/> <polygon style=\"fill:#BF3C1A;\" points=\"303.032,0 255.651,0 255.651,101.984 256.68,101.984 296.041,235.187 255.651,235.187 \t255.651,303.87 315.462,303.87 336.957,376.715 425.001,376.715 \"/> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> </svg>';\nvar enc = window.btoa(svg);\nlet url  = \"data:image/svg+xml;base64,\" + enc;\n\nCitTextFieldShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\tlet isgradient = false;\n\tif (this[\"style\"][\"gradientColor\"]) {\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\n\t}\n\tif (isgradient) {\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\n\t\tc.setGradient(fillColor, gradientColor);\n\t}\n\tc.translate(x, y);\n\tlet rSize = 5;\n\n\tc.roundrect(0, 0, w, h, rSize, rSize);\n\tc.fillAndStroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nCitTextFieldShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\n\tc.begin();\n\tc.image(_w - 40,5,50,20,url,true);\n\tc.close();\n\tc.fillAndStroke();\n};\n\nmxCellRenderer.registerShape('cittextfield', CitTextFieldShape);\n// console.debug(\"EpcFunction Shape registered\");\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\tmxActor,\n\t// mxShape,\n} from \"mxgraph-js\";// Document shape\n\nfunction CitWebserviceMethodShape(this: any) {\n\tmxActor.call(this);\n\tthis.isRounded = true;\n\tthis.strokewidth = 2;\n\t// this.strokeOpacity = 100;\n}\nmxUtils.extend(CitWebserviceMethodShape, mxActor);\n\n// let icon = \"citwsicon.svg\";\nlet svg = '<?xml version=\"1.0\" encoding=\"iso-8859-1\"?> <!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --> <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" \t viewBox=\"0 0 512.883 512.883\" style=\"enable-background:new 0 0 512.883 512.883;\" xml:space=\"preserve\"> <path style=\"fill:#E8EDEE;\" d=\"M0,106.372v386.648c0,10.593,8.828,19.421,19.421,19.421h104.166h264.828h104.166 \tc10.593,0,19.421-8.828,19.421-19.421V106.372H0z\"/> <path style=\"fill:#546A79;\" d=\"M512,106.372H0V17.214C0,7.503,7.062,0.441,16.772,0.441H496.11c8.828,0,16.772,7.062,16.772,16.772 \tv89.159H512z\"/> <path style=\"fill:#ED7161;\" d=\"M79.448,53.407c0,15.007-11.476,26.483-26.483,26.483S26.483,68.414,26.483,53.407 \ts11.476-26.483,26.483-26.483S79.448,38.4,79.448,53.407\"/> <path style=\"fill:#ECBA16;\" d=\"M158.897,53.407c0,15.007-11.476,26.483-26.483,26.483c-15.007,0-26.483-11.476-26.483-26.483 \ts11.476-26.483,26.483-26.483C147.421,26.924,158.897,38.4,158.897,53.407\"/> <path style=\"fill:#42B05C;\" d=\"M238.345,53.407c0,15.007-11.476,26.483-26.483,26.483c-15.007,0-26.483-11.476-26.483-26.483 \ts11.476-26.483,26.483-26.483C226.869,26.924,238.345,38.4,238.345,53.407\"/> <path style=\"fill:#7383BF;\" d=\"M158.897,176.993H44.138c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h114.759 \tc5.297,0,8.828,3.531,8.828,8.828S164.193,176.993,158.897,176.993\"/> <path style=\"fill:#ECBA16;\" d=\"M282.483,176.993h-88.276c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h88.276 \tc5.297,0,8.828,3.531,8.828,8.828S287.779,176.993,282.483,176.993\"/> <path style=\"fill:#42B05C;\" d=\"M335.448,176.993h-17.655c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h17.655 \tc5.297,0,8.828,3.531,8.828,8.828S340.745,176.993,335.448,176.993\"/> <path style=\"fill:#7383BF;\" d=\"M379.586,212.303H247.172c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h132.414 \tc5.297,0,8.828,3.531,8.828,8.828S384.883,212.303,379.586,212.303\"/> <g> \t<path style=\"fill:#DD342E;\" d=\"M211.862,212.303H88.276c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h123.586 \t\tc5.297,0,8.828,3.531,8.828,8.828S217.159,212.303,211.862,212.303\"/> \t<path style=\"fill:#DD342E;\" d=\"M52.966,212.303h-8.828c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h8.828 \t\tc5.297,0,8.828,3.531,8.828,8.828S58.262,212.303,52.966,212.303\"/> </g> <path style=\"fill:#7383BF;\" d=\"M123.586,247.614H44.138c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h79.448 \tc5.297,0,8.828,3.531,8.828,8.828S128.883,247.614,123.586,247.614\"/> <path style=\"fill:#ECBA16;\" d=\"M176.552,247.614h-17.655c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h17.655 \tc5.297,0,8.828,3.531,8.828,8.828S181.848,247.614,176.552,247.614\"/> <path style=\"fill:#42B05C;\" d=\"M335.448,247.614H211.862c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h123.586 \tc5.297,0,8.828,3.531,8.828,8.828S340.745,247.614,335.448,247.614\"/> <path style=\"fill:#DD342E;\" d=\"M158.897,282.924H44.138c-5.297,0-8.828-3.531-8.828-8.828c0-5.297,3.531-8.828,8.828-8.828h114.759 \tc5.297,0,8.828,3.531,8.828,8.828C167.724,279.393,164.193,282.924,158.897,282.924\"/> <path style=\"fill:#7383BF;\" d=\"M282.483,282.924h-88.276c-5.297,0-8.828-3.531-8.828-8.828c0-5.297,3.531-8.828,8.828-8.828h88.276 \tc5.297,0,8.828,3.531,8.828,8.828C291.31,279.393,287.779,282.924,282.483,282.924\"/> <path style=\"fill:#ECBA16;\" d=\"M282.483,318.234h-35.31c-5.297,0-8.828-3.531-8.828-8.828c0-5.297,3.531-8.828,8.828-8.828h35.31 \tc5.297,0,8.828,3.531,8.828,8.828C291.31,314.703,287.779,318.234,282.483,318.234\"/> <path style=\"fill:#42B05C;\" d=\"M211.862,318.234H88.276c-5.297,0-8.828-3.531-8.828-8.828c0-5.297,3.531-8.828,8.828-8.828h123.586 \tc5.297,0,8.828,3.531,8.828,8.828C220.69,314.703,217.159,318.234,211.862,318.234\"/> <path style=\"fill:#ECBA16;\" d=\"M52.966,318.234h-8.828c-5.297,0-8.828-3.531-8.828-8.828c0-5.297,3.531-8.828,8.828-8.828h8.828 \tc5.297,0,8.828,3.531,8.828,8.828C61.793,314.703,58.262,318.234,52.966,318.234\"/> <path style=\"fill:#DD342E;\" d=\"M123.586,353.545H44.138c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h79.448 \tc5.297,0,8.828,3.531,8.828,8.828S128.883,353.545,123.586,353.545\"/> <path style=\"fill:#ECBA16;\" d=\"M176.552,353.545h-17.655c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h17.655 \tc5.297,0,8.828,3.531,8.828,8.828S181.848,353.545,176.552,353.545\"/> <path style=\"fill:#7383BF;\" d=\"M273.655,353.545h-61.793c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h61.793 \tc5.297,0,8.828,3.531,8.828,8.828S278.952,353.545,273.655,353.545\"/> <path style=\"fill:#42B05C;\" d=\"M158.897,388.855H44.138c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h114.759 \tc5.297,0,8.828,3.531,8.828,8.828S164.193,388.855,158.897,388.855\"/> <path style=\"fill:#ECBA16;\" d=\"M238.345,388.855h-44.138c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h44.138 \tc5.297,0,8.828,3.531,8.828,8.828S243.641,388.855,238.345,388.855\"/> <path style=\"fill:#DD342E;\" d=\"M211.862,424.166H88.276c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h123.586 \tc5.297,0,8.828,3.531,8.828,8.828S217.159,424.166,211.862,424.166\"/> <path style=\"fill:#7383BF;\" d=\"M52.966,424.166h-8.828c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h8.828 \tc5.297,0,8.828,3.531,8.828,8.828S58.262,424.166,52.966,424.166\"/> <path style=\"fill:#42B05C;\" d=\"M123.586,459.476H44.138c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h79.448 \tc5.297,0,8.828,3.531,8.828,8.828S128.883,459.476,123.586,459.476\"/> <path style=\"fill:#ECBA16;\" d=\"M176.552,459.476h-17.655c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828h17.655 \tc5.297,0,8.828,3.531,8.828,8.828S181.848,459.476,176.552,459.476\"/> <path style=\"fill:#7383BF;\" d=\"M256,459.476h-44.138c-5.297,0-8.828-3.531-8.828-8.828s3.531-8.828,8.828-8.828H256 \tc5.297,0,8.828,3.531,8.828,8.828S261.297,459.476,256,459.476\"/> <path style=\"fill:#2E243B;\" d=\"M500.524,488.607l-60.028-60.028l57.379-28.248L342.51,342.952l57.379,155.366l28.248-57.379 \tl60.028,60.028c1.766,1.766,4.414,2.648,6.179,2.648c1.766,0,4.414-0.883,6.179-2.648 \tC504.055,497.434,504.055,492.138,500.524,488.607\"/> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> </svg>';\nvar enc = window.btoa(svg);\nlet url  = \"data:image/svg+xml;base64,\" + enc;\n\nCitWebserviceMethodShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\tlet isgradient = false;\n\tif (this[\"style\"][\"gradientColor\"]) {\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\n\t}\n\tif (isgradient) {\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\n\t\tc.setGradient(fillColor, gradientColor);\n\t}\n\tc.translate(x, y);\n\tlet rSize = 5;\n\n\tc.roundrect(0, 0, w, h, rSize, rSize);\n\tc.fillAndStroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nCitWebserviceMethodShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\n\tc.begin();\n\tc.image(_w - 40,5,50,20,url,true);\n\tc.close();\n\tc.fillAndStroke();\n};\n\nmxCellRenderer.registerShape('citwebservicemethod', CitWebserviceMethodShape);\n// console.debug(\"EpcFunction Shape registered\");\n","import {\n\tmxUtils,\n\t// mxRectangle,\n\tmxCellRenderer,\n\tmxActor,\n\t// mxShape,\n} from \"mxgraph-js\";// Document shape\n\nfunction CitXmlResourceShape(this: any) {\n\tmxActor.call(this);\n\tthis.isRounded = true;\n\tthis.strokewidth = 2;\n\t// this.strokeOpacity = 100;\n}\nmxUtils.extend(CitXmlResourceShape, mxActor);\n\n// let icon = \"citxmlicon.svg\";\nlet svg = '<?xml version=\"1.0\" encoding=\"iso-8859-1\"?> <!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --> <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" \t viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\"> <path style=\"fill:#E2E5E7;\" d=\"M128,0c-17.6,0-32,14.4-32,32v448c0,17.6,14.4,32,32,32h320c17.6,0,32-14.4,32-32V128L352,0H128z\"/> <path style=\"fill:#B0B7BD;\" d=\"M384,128h96L352,0v96C352,113.6,366.4,128,384,128z\"/> <polygon style=\"fill:#CAD1D8;\" points=\"480,224 384,128 480,128 \"/> <path style=\"fill:#50BEE8;\" d=\"M416,416c0,8.8-7.2,16-16,16H48c-8.8,0-16-7.2-16-16V256c0-8.8,7.2-16,16-16h352c8.8,0,16,7.2,16,16 \tV416z\"/> <g> \t<path style=\"fill:#FFFFFF;\" d=\"M131.28,326.176l22.272-27.888c6.64-8.688,19.568,2.432,12.288,10.752 \t\tc-7.664,9.088-15.728,18.944-23.424,29.024l26.112,32.496c7.024,9.6-7.04,18.816-13.952,9.344l-23.536-30.192l-23.152,30.832 \t\tc-6.528,9.328-20.992-1.152-13.68-9.856l25.712-32.624c-8.064-10.096-15.872-19.936-23.664-29.024 \t\tc-8.064-9.6,6.912-19.44,12.784-10.48L131.28,326.176z\"/> \t<path style=\"fill:#FFFFFF;\" d=\"M201.264,327.84v47.328c0,5.648-4.608,8.832-9.2,8.832c-4.096,0-7.68-3.184-7.68-8.832v-72.016 \t\tc0-6.656,5.648-8.848,7.68-8.848c3.696,0,5.872,2.192,8.048,4.624l28.16,37.984l29.152-39.408c4.24-5.232,14.592-3.2,14.592,5.648 \t\tv72.016c0,5.648-3.584,8.832-7.664,8.832c-4.608,0-8.192-3.184-8.192-8.832V327.84l-21.248,26.864 \t\tc-4.592,5.648-10.352,5.648-14.576,0L201.264,327.84z\"/> \t<path style=\"fill:#FFFFFF;\" d=\"M294.288,303.152c0-4.224,3.584-7.808,8.064-7.808c4.096,0,7.552,3.6,7.552,7.808v64.096h34.8 \t\tc12.528,0,12.8,16.752,0,16.752h-42.336c-4.48,0-8.064-3.184-8.064-7.808v-73.04H294.288z\"/> </g> <path style=\"fill:#CAD1D8;\" d=\"M400,432H96v16h304c8.8,0,16-7.2,16-16v-16C416,424.8,408.8,432,400,432z\"/> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> </svg>  ';\nvar enc = window.btoa(svg);\nlet url  = \"data:image/svg+xml;base64,\" + enc;\n  \nCitXmlResourceShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\n\n\tc.setStrokeColor(strokeColor);\n\t// c.setStrokeColor('#000000');\n\tc.setStrokeWidth(strokeWidth);\n\tc.setFillColor(fillColor);\n\tlet isgradient = false;\n\tif (this[\"style\"][\"gradientColor\"]) {\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\n\t}\n\tif (isgradient) {\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\n\t\tc.setGradient(fillColor, gradientColor);\n\t}\n\tc.translate(x, y);\n\tlet rSize = 5;\n\n\tc.roundrect(0, 0, w, h, rSize, rSize);\n\tc.fillAndStroke();\n\n\t// c.setShadow(false);\n\tthis.redrawPath(c, x, y, w, h);\n\n};\n\nCitXmlResourceShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\n\tc.begin();\n\tc.image(_w - 40,5,50,20,url,true);\n\tc.close();\n\tc.fillAndStroke();\n};\n\nmxCellRenderer.registerShape('citxmlresource', CitXmlResourceShape);\n// console.debug(\"EpcFunction Shape registered\");\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";// Document shape\r\n\r\nfunction CitExternalComponentShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(CitExternalComponentShape, mxActor);\r\n\r\nCitExternalComponentShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.roundrect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nCitExternalComponentShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\r\n\t// c.begin();\r\n\t// c.image(_w *.75 ,5,_w * .30,_h * .30,img.src,true);\r\n\t// c.close();\r\n\tc.fillAndStroke();\r\n};\r\n\r\nmxCellRenderer.registerShape('citexternalcomponent', CitExternalComponentShape);\r\n// console.debug(\"EpcFunction Shape registered\");\r\n","import {\r\n\tmxUtils,\r\n\t// mxRectangle,\r\n\tmxCellRenderer,\r\n\tmxActor,\r\n\t// mxShape,\r\n} from \"mxgraph-js\";// Document shape\r\n\r\nfunction CitSubFieldSetShape(this: any) {\r\n\tmxActor.call(this);\r\n\tthis.isRounded = true;\r\n\tthis.strokewidth = 2;\r\n\t// this.strokeOpacity = 100;\r\n}\r\nmxUtils.extend(CitSubFieldSetShape, mxActor);\r\n\r\nCitSubFieldSetShape.prototype.paintVertexShape = function (c: any, x: any, y: any, w: any, h: any) {\r\n\tlet strokeColor = mxUtils.getValue(this.style, 'strokeColor', '#000000');\r\n\tlet strokeWidth = mxUtils.getValue(this.style, 'strokeWidth', 2);\r\n\tlet fillColor = mxUtils.getValue(this.style, 'fillColor', '#ffffff');\r\n\r\n\tc.setStrokeColor(strokeColor);\r\n\t// c.setStrokeColor('#000000');\r\n\tc.setStrokeWidth(strokeWidth);\r\n\tc.setFillColor(fillColor);\r\n\tlet isgradient = false;\r\n\tif (this[\"style\"][\"gradientColor\"]) {\r\n\t\tisgradient= (this[\"style\"][\"gradientColor\"] !== '#ffffff');\r\n\t}\r\n\tif (isgradient) {\r\n\t\tlet gradientColor = mxUtils.getValue(this.style, 'gradientColor', '#ffffff');\r\n\t\tc.setGradient(fillColor, gradientColor);\t\r\n\t}\r\n\tc.translate(x, y);\r\n\tlet rSize = 5;\r\n\r\n\tc.roundrect(0, 0, w, h, rSize, rSize);\r\n\tc.fillAndStroke();\r\n\r\n\t// c.setShadow(false);\r\n\tthis.redrawPath(c, x, y, w, h);\r\n\r\n};\r\n\r\nCitSubFieldSetShape.prototype.redrawPath = (c: any, _x: any, _y: any, _w: any, _h: any) => {\r\n\tc.fillAndStroke();\r\n};\r\n\r\nmxCellRenderer.registerShape('citsubfieldset', CitSubFieldSetShape);\r\n// console.debug(\"EpcFunction Shape registered\");\r\n","import { SemTalkStencil } from \"../../visiordfsinterface\";\r\nexport const CIT_STENCIL0: SemTalkStencil =\r\n  [\r\n    {\r\n    \"name\": \"BooleanField\",\r\n    \"key\": \"BooleanField\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/BooleanField.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    type: \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"ChoiceField\",\r\n    \"key\": \"ChoiceField\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/ChoiceField.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"ComputedField\",\r\n    \"key\": \"ComputedField\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/ComputedField.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"TextField\",\r\n    \"key\": \"TextField\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/TextField.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"DateField\",\r\n    \"key\": \"DateField\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/DateField.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"NumberField\",\r\n    \"key\": \"NumberField\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/NumberField.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"InfoBox\",\r\n    \"key\": \"InfoBox\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/InfoBox.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"CurrencyField\",\r\n    \"key\": \"CurrencyField\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/CurrencyField.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"NumberUnitField\",\r\n    \"key\": \"NumberUnitField\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/NumberUnitField.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"TextArea\",\r\n    \"key\": \"TextArea\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/TextArea.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"Rule\",\r\n    \"key\": \"Rule\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/Rule.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"FieldSet\",\r\n    \"key\": \"FieldSet\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/FieldSet.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"FileField\",\r\n    \"key\": \"FileField\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/FileField.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"WebserviceMethod\",\r\n    \"key\": \"WebserviceMethod\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/WebserviceMethod.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"XmlResource\",\r\n    \"key\": \"XmlResource\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/XmlResource.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"IdField\",\r\n    \"key\": \"IdField\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/IdField.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"SubFieldSet\",\r\n    \"key\": \"SubFieldSet\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/SubFieldSet.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"ExternalComponent\",\r\n    \"key\": \"ExternalComponent\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/ExternalComponent.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"Data Graphic\",\r\n    \"key\": \"Data_Graphic\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/Data_Graphic.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"Flags\",\r\n    \"key\": \"Flags\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/Flags.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  },\r\n  {\r\n    \"name\": \"Colored shapes\",\r\n    \"key\": \"Colored_shapes\",\r\n    \"logo\": \"/images/stencils/cit_intelliForm_dialog-masters/Colored_shapes.svg\",\r\n    width: 160,\r\n    height: 60,\r\n    \"type\": \"cit\",\r\n    hidden: false,\r\n    label: undefined\r\n  }\r\n  ];\r\n","import {\r\n  ISemTalkObject,\r\n  ISemTalkSystemClass,\r\n  ILabelSpec,\r\n  ISemTalkDiagram,\r\n  ISemTalkDiagramType,\r\n  SemTalkValueType,\r\n  SemTalkLanguageCode,\r\n  ISemTalkAttribute,\r\n  // ISemTalkAttributeType,\r\n  // ISemTalkTabSpec,\r\n  // ISemTalkTabSpecs\r\n} from '../../../tbase/Interface';\r\nimport { IVisioRDFS, SemTalkRibbon, SemTalkStencil } from '../../visiordfsinterface';\r\nimport { Subtask } from '../../subtask';\r\nimport { cit_AttributeName, cit_DiagramTypeName, cit_ElementName, cit_UserTabs, cit_UserTabsGroups } from './citinterface';\r\nimport { CIT_SHAPES } from './cit-stencil';\r\nimport './shapes/index';\r\nimport { CIT_STENCIL0 } from './Stencil_cit_intelliForm';\r\nimport { renderUserTab } from './usercontrol';\r\n// import { ObjectBase } from '../../../tbase/ObjectBase';\r\n// import { Process_ElementName } from '../../processInterface';\r\n// const citExtComponentLb = \"STREXTCOMPONENT\";\r\n// const citUserMain = \"STRUSERMAIN\";\r\nlet guilanguage: SemTalkLanguageCode = SemTalkLanguageCode.German;\r\nlet resx_cit: any;\r\n\r\nresx_cit = require(\"./citlabels.json\");\r\n\r\nfunction getResStr(str: string, lang?: SemTalkLanguageCode): string {\r\n  if (lang === undefined) {\r\n    lang = guilanguage;\r\n  }\r\n  if (lang === SemTalkLanguageCode.English) {\r\n    const s = resx_cit[str];\r\n    if (s !== undefined) {\r\n      return s.value;\r\n    }\r\n    return str;\r\n  } else {\r\n    const s = resx_cit[str];\r\n    if (s !== undefined) {\r\n      // if (lang !== \"de\") {\r\n      //   if (lang === \"sc\") lang = \"cn-simplified\";\r\n      //   if (lang === \"tc\") lang = \"cn-traditional\";\r\n      // }\r\n      let v = s[lang];\r\n      if (v === undefined) {\r\n        return s.value;\r\n      }\r\n      return v;\r\n    } else {\r\n      return str;\r\n    }\r\n  }\r\n}\r\nexport class citForms_Subtask extends Subtask {\r\n  // public static stencil: SemTalkStencil = [];\r\n\r\n\r\n  public static patch(sem: IVisioRDFS) {\r\n    // super.patch(sem);\r\n    sem.horizontal = false;\r\n    const bas = sem.base;\r\n    console.log(\"citForms_Subtask\");\r\n\r\n\r\n    // {\r\n    //   let l = bas.MakeSystemClass(SemTalkBaseConstant.SLLanguage);\r\n    //   l.Hide = true;\r\n    //    let li = bas.FindInstance(SemTalkLanguage.None);\r\n    //   if (!li) {\r\n    //     li = l.MakeInstance(SemTalkLanguage.None);\r\n    //   }\r\n    // }\r\n    //  Das muss man unbedingt ändern !!!!!\r\n    // bas.SetModelAttribute(Process_ElementName.SLProc, cit_DiagramTypeName.Dialogmodell);\r\n\r\n    let cl = bas.FindClass(\"Swimlane\");\r\n    if (cl !== null) cl.Delete();\r\n\r\n    for (let att of bas.AllAttributeTypes()) {\r\n      if (att.Value) {\r\n        att.Value = undefined;\r\n      }\r\n      att.Values = [];\r\n    }\r\n    // let h = bas.FindSystemClass(SemTalkUIConstant.SLHidden);\r\n    let SUC = bas.MakeSystemClass(\"SemTalkUserTab\");\r\n    SUC.Hide = true;\r\n    // SUC.AddSubclassOf(h);\r\n\r\n    // let fieldname = bas.FindAttributeType(\"ValidationExpression\");\r\n    // if (fieldname) {\r\n    //   fieldname.Value = undefined;\r\n    // }\r\n\r\n    // fieldname = bas.FindAttributeType(\"FieldName\");\r\n    // if (fieldname) {\r\n    //   fieldname.Value = undefined;\r\n    // }\r\n\r\n    // let labelattr = bas.FindAttributeType(\"Label\");\r\n    // if (labelattr) {\r\n    //   labelattr.Value = undefined;\r\n    // }\r\n\r\n    // ------node-------\r\n    let citnode = bas.FindSystemClass(cit_ElementName.Node);\r\n    if (citnode) {\r\n      for (let attr1 of citnode.Attributes()) {\r\n        if (attr1.Value && attr1.ValueType === SemTalkValueType.Symbol) {\r\n          attr1.Value = undefined;\r\n        }\r\n      }\r\n      let attr = citnode.FindAttribute(cit_AttributeName.PageBreakBefore) as ISemTalkAttribute;\r\n      if (attr == null) {\r\n        attr = citnode.MakeAttribute(cit_AttributeName.PageBreakBefore, \"\");\r\n      }\r\n      attr = defineUserTabs(attr, cit_UserTabsGroups.Layout, 200);\r\n\r\n      attr = citnode.FindAttribute(cit_AttributeName.UserNumber) as ISemTalkAttribute;\r\n      if (attr == null) {\r\n        citnode.MakeAttribute(cit_AttributeName.UserNumber, \"\");\r\n      }\r\n      attr = defineUserTabs(attr, cit_UserTabsGroups.Main, 100);\r\n    }\r\n\r\n\r\n\r\n    // ------complexnode-------\r\n    let citcomplexnode = bas.FindSystemClass(cit_ElementName.ComplexNode);\r\n    if (citcomplexnode) {\r\n      for (let attr1 of citcomplexnode.Attributes()) {\r\n        if (attr1.Value && attr1.ValueType === SemTalkValueType.Symbol) {\r\n          attr1.Value = undefined;\r\n        }\r\n      }\r\n      let a = citcomplexnode.FindAttribute(cit_AttributeName.Intro) as ISemTalkAttribute;\r\n      if (a == null) {\r\n        a = citcomplexnode.MakeAttribute(cit_AttributeName.Intro, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Main, 200);\r\n\r\n      let b = citcomplexnode.FindAttribute(cit_AttributeName.Outro) as ISemTalkAttribute;\r\n      if (b == null) {\r\n        citcomplexnode.MakeAttribute(cit_AttributeName.Outro, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Main, 300);\r\n\r\n      let c = citcomplexnode.FindAttribute(cit_AttributeName.Title) as ISemTalkAttribute;\r\n      if (c == null) {\r\n        citcomplexnode.MakeAttribute(cit_AttributeName.Title, \"\");\r\n      }\r\n      c = defineUserTabs(c, cit_UserTabsGroups.Main, 400);\r\n\r\n      let tabs = citcomplexnode.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n      }\r\n    }\r\n\r\n    // ------inputfield-------\r\n    let inputfield = bas.FindClass(cit_ElementName.InputField);\r\n    if (inputfield) {\r\n      let a = inputfield.FindAttribute(cit_AttributeName.Title);\r\n      if (a && a.Value) {\r\n        a.Value = undefined;\r\n      }\r\n      if (a == null) {\r\n        a = inputfield.MakeAttribute(cit_AttributeName.Title, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Main, 300);\r\n\r\n      let b = inputfield.FindAttribute(cit_AttributeName.Label);\r\n      if (b && b.Value) {\r\n        b.Value = undefined;\r\n      }\r\n      if (b == null) {\r\n        b = inputfield.MakeAttribute(cit_AttributeName.Label, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Main, 200);\r\n\r\n      let c = inputfield.FindAttribute(cit_AttributeName.FieldName);\r\n      if (c && c.Value) {\r\n        c.Value = undefined;\r\n      }\r\n      if (c == null) {\r\n        c = inputfield.MakeAttribute(cit_AttributeName.FieldName, \"\");\r\n      }\r\n      c = defineUserTabs(c, cit_UserTabsGroups.Main, 600);\r\n\r\n      let d = inputfield.FindAttribute(cit_AttributeName.Intro);\r\n      if (d && d.Value) {\r\n        d.Value = undefined;\r\n      }\r\n      if (d == null) {\r\n        d = inputfield.MakeAttribute(cit_AttributeName.Intro, \"\");\r\n      }\r\n      d = defineUserTabs(d, cit_UserTabsGroups.Main, 700);\r\n\r\n      let e = inputfield.FindAttribute(cit_AttributeName.ReadOnly);\r\n      if (e && e.Value) {\r\n        e.Value = undefined;\r\n      }\r\n      if (e == null) {\r\n        e = inputfield.MakeAttribute(cit_AttributeName.ReadOnly, \"\");\r\n      }\r\n      e = defineUserTabs(e, cit_UserTabsGroups.Main, 500);\r\n\r\n      let f = inputfield.FindAttribute(cit_AttributeName.Outro);\r\n      if (f && f.Value) {\r\n        f.Value = undefined;\r\n      }\r\n      if (f == null) {\r\n        f = inputfield.MakeAttribute(cit_AttributeName.Outro, \"\");\r\n      }\r\n      f = defineUserTabs(f, cit_UserTabsGroups.Main, 800);\r\n\r\n      let g = inputfield.FindAttribute(cit_AttributeName.AuxField);\r\n      if (g && g.Value) {\r\n        g.Value = undefined;\r\n      }\r\n      if (g == null) {\r\n        g = inputfield.MakeAttribute(cit_AttributeName.AuxField, \"\");\r\n      }\r\n      g = defineUserTabs(g, cit_UserTabsGroups.Main, 900);\r\n\r\n\r\n      let h = inputfield.FindAttribute(cit_AttributeName.AuxField);\r\n      if (h && h.Value) {\r\n        h.Value = undefined;\r\n      }\r\n      if (h == null) {\r\n        h = inputfield.MakeAttribute(cit_AttributeName.AuxField, \"\");\r\n      }\r\n      h = defineUserTabs(h, cit_UserTabsGroups.Main, 900);\r\n\r\n\r\n      let i = inputfield.FindAttribute(cit_AttributeName.ValidationPattern);\r\n      if (i && i.Value) {\r\n        i.Value = undefined;\r\n      }\r\n      if (i == null) {\r\n        i = inputfield.MakeAttribute(cit_AttributeName.ValidationPattern, \"\");\r\n      }\r\n      i = defineUserTabs(i, cit_UserTabsGroups.Validation, 100);\r\n\r\n\r\n      let j = inputfield.FindAttribute(cit_AttributeName.ValidationExpression);\r\n      if (j && j.Value) {\r\n        j.Value = undefined;\r\n      }\r\n      if (j == null) {\r\n        j = inputfield.MakeAttribute(cit_AttributeName.ValidationExpression, \"\");\r\n      }\r\n      j = defineUserTabs(j, cit_UserTabsGroups.Validation, 200);\r\n\r\n\r\n      let k = inputfield.FindAttribute(cit_AttributeName.ValidationMessage);\r\n      if (k && k.Value) {\r\n        k.Value = undefined;\r\n      }\r\n      if (k == null) {\r\n        k = inputfield.MakeAttribute(cit_AttributeName.ValidationMessage, \"\");\r\n      }\r\n      k = defineUserTabs(k, cit_UserTabsGroups.Validation, 300);\r\n\r\n\r\n      let l = inputfield.FindAttribute(cit_AttributeName.DefaultValue);\r\n      if (l && l.Value) {\r\n        l.Value = undefined;\r\n      }\r\n      if (l == null) {\r\n        l = inputfield.MakeAttribute(cit_AttributeName.DefaultValue, \"\");\r\n      }\r\n      l = defineUserTabs(l, cit_UserTabsGroups.Value, 100);\r\n\r\n\r\n      let m = inputfield.FindAttribute(cit_AttributeName.DefaultValueExpression);\r\n      if (m && m.Value) {\r\n        m.Value = undefined;\r\n      }\r\n      if (m == null) {\r\n        m = inputfield.MakeAttribute(cit_AttributeName.DefaultValueExpression, \"\");\r\n      }\r\n      m = defineUserTabs(m, cit_UserTabsGroups.Value, 200);\r\n\r\n\r\n      let n = inputfield.FindAttribute(cit_AttributeName.SampleValue);\r\n      if (n && n.Value) {\r\n        n.Value = undefined;\r\n      }\r\n      if (n == null) {\r\n        n = inputfield.MakeAttribute(cit_AttributeName.SampleValue, \"\");\r\n      }\r\n      n = defineUserTabs(n, cit_UserTabsGroups.Value, 400);\r\n\r\n\r\n      let o = inputfield.FindAttribute(cit_AttributeName.SampleValueExpression);\r\n      if (o && o.Value) {\r\n        o.Value = undefined;\r\n      }\r\n      if (o == null) {\r\n        o = inputfield.MakeAttribute(cit_AttributeName.SampleValueExpression, \"\");\r\n      }\r\n      o = defineUserTabs(o, cit_UserTabsGroups.Value, 500);\r\n\r\n\r\n      let p = inputfield.FindAttribute(cit_AttributeName.EnablePrefill);\r\n      if (p && p.Value) {\r\n        p.Value = undefined;\r\n      }\r\n      if (p == null) {\r\n        p = inputfield.MakeAttribute(cit_AttributeName.EnablePrefill, \"\");\r\n      }\r\n      p = defineUserTabs(p, cit_UserTabsGroups.Value, 300);\r\n\r\n\r\n      let q = inputfield.FindAttribute(cit_AttributeName.LabelStyle);\r\n      if (q && q.Value) {\r\n        q.Value = undefined;\r\n      }\r\n      if (q == null) {\r\n        q = inputfield.MakeAttribute(cit_AttributeName.LabelStyle, \"\");\r\n      }\r\n      q = defineUserTabs(q, cit_UserTabsGroups.Layout, 300);\r\n\r\n\r\n      let r = inputfield.FindAttribute(cit_AttributeName.StyleClass);\r\n      if (r && r.Value) {\r\n        r.Value = undefined;\r\n      }\r\n      if (r == null) {\r\n        r = inputfield.MakeAttribute(cit_AttributeName.StyleClass, \"\");\r\n      }\r\n      r = defineUserTabs(r, cit_UserTabsGroups.Layout, 300);\r\n\r\n\r\n    }\r\n\r\n\r\n    // ------datefield-------\r\n    let citdatefield = bas.FindSystemClass(\"DateField\");\r\n    if (citdatefield) {\r\n      citdatefield.Style = \"shape=citdatefield;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=lightblue;strokeColor=blue;fontColor=black\";\r\n      let a = citdatefield.FindAttribute(cit_AttributeName.DefaultValueToday);\r\n      // if (a && a.Value) {\r\n      //   a.Value = undefined;\r\n      // }\r\n      if (a == null) {\r\n        a = citdatefield.MakeAttribute(cit_AttributeName.DefaultValueToday, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Value, 600);\r\n\r\n\r\n      let b = citdatefield.FindAttribute(cit_AttributeName.Placeholder);\r\n      // if (b && b.Value) {\r\n      //   b.Value = undefined;\r\n      // }\r\n      if (b == null) {\r\n        b = citdatefield.MakeAttribute(cit_AttributeName.Placeholder, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Value, 400);\r\n\r\n\r\n      let c = citdatefield.FindAttribute(cit_AttributeName.Autocomplete);\r\n      // if (c && c.Value) {\r\n      //   c.Value = undefined;\r\n      // }\r\n      if (c == null) {\r\n        c = citdatefield.MakeAttribute(cit_AttributeName.Autocomplete, \"\");\r\n      }\r\n      c = defineUserTabs(c, cit_UserTabsGroups.Layout, 350);\r\n\r\n      let tabs = citdatefield.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Value);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Validation);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALUES\"), cit_UserTabsGroups.Value, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERLAYOUT\"), cit_UserTabsGroups.Layout, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALIDATION\"), cit_UserTabsGroups.Validation, [], false);\r\n      }\r\n    }\r\n\r\n    // ------booleanfield-------\r\n    let citbooleanfield = bas.FindSystemClass(\"BooleanField\");\r\n    if (citbooleanfield) {\r\n      citbooleanfield.Style = \"shape=citbooleanfield;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=lightblue;strokeColor=blue;fontColor=black\";\r\n      let a = citbooleanfield.FindAttribute(cit_AttributeName.ControlStyle);\r\n      if (a == null) {\r\n        a = citbooleanfield.MakeAttribute(cit_AttributeName.ControlStyle, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Layout, 50);\r\n\r\n\r\n      let b = citbooleanfield.FindAttribute(cit_AttributeName.live);\r\n      if (b == null) {\r\n        b = citbooleanfield.MakeAttribute(cit_AttributeName.live, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Main, 900);\r\n      let tabs = citbooleanfield.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Value);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Validation);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALUES\"), cit_UserTabsGroups.Value, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERLAYOUT\"), cit_UserTabsGroups.Layout, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALIDATION\"), cit_UserTabsGroups.Validation, [], false);\r\n      }\r\n    }\r\n\r\n    // ------choicefield-------\r\n    let citchoicefield = bas.FindSystemClass(\"ChoiceField\");\r\n    if (citchoicefield) {\r\n      citchoicefield.Style = \"shape=citchoicefield;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=lightblue;strokeColor=blue;fontColor=black\";\r\n      let a = citchoicefield.FindAttribute(cit_AttributeName.OptionsList);\r\n      if (a == null) {\r\n        a = citchoicefield.MakeAttribute(cit_AttributeName.OptionsList, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Value, 600);\r\n\r\n      let b = citchoicefield.FindAttribute(cit_AttributeName.OptionsFileLocation);\r\n      if (b == null) {\r\n        b = citchoicefield.MakeAttribute(cit_AttributeName.OptionsFileLocation, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Value, 700);\r\n\r\n      let c = citchoicefield.FindAttribute(cit_AttributeName.LoopOptions);\r\n      if (c == null) {\r\n        c = citchoicefield.MakeAttribute(cit_AttributeName.LoopOptions, \"\");\r\n      }\r\n      c = defineUserTabs(c, cit_UserTabsGroups.Main, 1100);\r\n\r\n      let d = citchoicefield.FindAttribute(cit_AttributeName.DatabaseConnection);\r\n      if (d == null) {\r\n        d = citchoicefield.MakeAttribute(cit_AttributeName.DatabaseConnection, \"\");\r\n      }\r\n      d = defineUserTabs(d, cit_UserTabsGroups.Database, 100);\r\n\r\n      let e = citchoicefield.FindAttribute(cit_AttributeName.ControlStyle);\r\n      if (e == null) {\r\n        e = citchoicefield.MakeAttribute(cit_AttributeName.ControlStyle, \"\");\r\n      }\r\n      e = defineUserTabs(e, cit_UserTabsGroups.Layout, 50);\r\n\r\n      let f = citchoicefield.FindAttribute(cit_AttributeName.live);\r\n      if (f == null) {\r\n        f = citchoicefield.MakeAttribute(cit_AttributeName.live, \"\");\r\n      }\r\n      f = defineUserTabs(f, cit_UserTabsGroups.Main, 900);\r\n\r\n      let g = citchoicefield.FindAttribute(cit_AttributeName.DatabaseQueryParameters);\r\n      if (g == null) {\r\n        g = citchoicefield.MakeAttribute(cit_AttributeName.DatabaseQueryParameters, \"\");\r\n      }\r\n      g = defineUserTabs(g, cit_UserTabsGroups.Database, 300);\r\n\r\n      let h = citchoicefield.FindAttribute(cit_AttributeName.XPathQuerySelect);\r\n      if (h == null) {\r\n        h = citchoicefield.MakeAttribute(cit_AttributeName.XPathQuerySelect, \"\");\r\n      }\r\n      h = defineUserTabs(h, cit_UserTabsGroups.XML, 100);\r\n\r\n      let i = citchoicefield.FindAttribute(cit_AttributeName.XPathQueryText);\r\n      if (i == null) {\r\n        i = citchoicefield.MakeAttribute(cit_AttributeName.XPathQueryText, \"\");\r\n      }\r\n      i = defineUserTabs(i, cit_UserTabsGroups.XML, 200);\r\n\r\n      let j = citchoicefield.FindAttribute(cit_AttributeName.XPathQueryValue);\r\n      if (j == null) {\r\n        j = citchoicefield.MakeAttribute(cit_AttributeName.XPathQueryValue, \"\");\r\n      }\r\n      j = defineUserTabs(j, cit_UserTabsGroups.XML, 300);\r\n\r\n      let k = citchoicefield.FindAttribute(cit_AttributeName.XPathQueryGroup);\r\n      if (k == null) {\r\n        k = citchoicefield.MakeAttribute(cit_AttributeName.XPathQueryGroup, \"\");\r\n      }\r\n      k = defineUserTabs(k, cit_UserTabsGroups.XML, 500);\r\n\r\n      let l = citchoicefield.FindAttribute(cit_AttributeName.XPathQueryParameters);\r\n      if (l == null) {\r\n        l = citchoicefield.MakeAttribute(cit_AttributeName.XPathQueryParameters, \"\");\r\n      }\r\n      l = defineUserTabs(l, cit_UserTabsGroups.XML, 700);\r\n\r\n      let m = citchoicefield.FindAttribute(cit_AttributeName.XPathQueryNamespaces);\r\n      if (m == null) {\r\n        m = citchoicefield.MakeAttribute(cit_AttributeName.XPathQueryNamespaces, \"\");\r\n      }\r\n      m = defineUserTabs(m, cit_UserTabsGroups.XML, 600);\r\n\r\n      let n = citchoicefield.FindAttribute(cit_AttributeName.TrackValue);\r\n      if (n == null) {\r\n        n = citchoicefield.MakeAttribute(cit_AttributeName.TrackValue, \"\");\r\n      }\r\n      n = defineUserTabs(n, cit_UserTabsGroups.Value, 1000);\r\n\r\n      let o = citchoicefield.FindAttribute(cit_AttributeName.ListLimit);\r\n      if (o == null) {\r\n        o = citchoicefield.MakeAttribute(cit_AttributeName.ListLimit, \"\");\r\n      }\r\n      o = defineUserTabs(o, cit_UserTabsGroups.Value, 800);\r\n\r\n      let p = citchoicefield.FindAttribute(cit_AttributeName.Repeated);\r\n      if (p == null) {\r\n        p = citchoicefield.MakeAttribute(cit_AttributeName.Repeated, \"\");\r\n      }\r\n      p = defineUserTabs(p, cit_UserTabsGroups.Value, 900);\r\n\r\n      let q = citchoicefield.FindAttribute(cit_AttributeName.ChoiceMultipleAllowOtherValue);\r\n      if (q == null) {\r\n        q = citchoicefield.MakeAttribute(cit_AttributeName.ChoiceMultipleAllowOtherValue, \"\");\r\n      }\r\n      q = defineUserTabs(q, cit_UserTabsGroups.Layout, 360);\r\n\r\n      let r = citchoicefield.FindAttribute(cit_AttributeName.ChoiceMultipleRememberOtherValues);\r\n      if (r == null) {\r\n        r = citchoicefield.MakeAttribute(cit_AttributeName.ChoiceMultipleRememberOtherValues, \"\");\r\n      }\r\n      r = defineUserTabs(r, cit_UserTabsGroups.Layout, 370);\r\n\r\n      let s = citchoicefield.FindAttribute(cit_AttributeName.live);\r\n      if (s == null) {\r\n        s = citchoicefield.MakeAttribute(cit_AttributeName.live, \"\");\r\n      }\r\n      s = defineUserTabs(s, cit_UserTabsGroups.Main, 900);\r\n\r\n      let t = citchoicefield.FindAttribute(cit_AttributeName.Autocomplete);\r\n      if (t == null) {\r\n        t = citchoicefield.MakeAttribute(cit_AttributeName.Autocomplete, \"\");\r\n      }\r\n      t = defineUserTabs(t, cit_UserTabsGroups.XML, 350);\r\n\r\n      let tabs = citchoicefield.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Value);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Validation);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.XML);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Database);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALUES\"), cit_UserTabsGroups.Value, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERLAYOUT\"), cit_UserTabsGroups.Layout, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALIDATION\"), cit_UserTabsGroups.Validation, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERXML\"), cit_UserTabsGroups.XML, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERDATABASE\"), cit_UserTabsGroups.Database, [], false);\r\n      }\r\n\r\n\r\n    }\r\n\r\n    // ------computedfield-------\r\n    let citcomputedfield = bas.FindSystemClass(\"ComputedField\");\r\n    if (citcomputedfield) {\r\n      citcomputedfield.Style = \"shape=citcomputedfield;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=lightblue;strokeColor=blue;fontColor=black\";\r\n      let a = citcomputedfield.FindAttribute(cit_AttributeName.ValueExpression);\r\n      if (a == null) {\r\n        a = citcomputedfield.MakeAttribute(cit_AttributeName.ValueExpression, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Value, 150);\r\n\r\n      let tabs = citcomputedfield.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Value);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Validation);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.XML);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Database);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALUES\"), cit_UserTabsGroups.Value, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERLAYOUT\"), cit_UserTabsGroups.Layout, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALIDATION\"), cit_UserTabsGroups.Validation, [], false);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // ------idfield-------\r\n    let citidfield = bas.FindSystemClass(\"IdField\");\r\n    if (citidfield) {\r\n      citidfield.Style = \"shape=citidfield;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=lightblue;strokeColor=blue;fontColor=black\";\r\n      let a = citidfield.FindAttribute(cit_AttributeName.RequestAcademicTitle);\r\n      if (a == null) {\r\n        a = citidfield.MakeAttribute(cit_AttributeName.RequestAcademicTitle, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Value, 10);\r\n\r\n      let b = citidfield.FindAttribute(cit_AttributeName.RequestAgeVerification);\r\n      if (b == null) {\r\n        b = citidfield.MakeAttribute(cit_AttributeName.RequestAgeVerification, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Value, 15);\r\n\r\n      let c = citidfield.FindAttribute(cit_AttributeName.RequestAgeVerificationValue);\r\n      if (c == null) {\r\n        c = citidfield.MakeAttribute(cit_AttributeName.RequestAgeVerificationValue, \"\");\r\n      }\r\n      c = defineUserTabs(c, cit_UserTabsGroups.Value, 20);\r\n\r\n      let d = citidfield.FindAttribute(cit_AttributeName.RequestArtisticName);\r\n      if (d == null) {\r\n        d = citidfield.MakeAttribute(cit_AttributeName.RequestArtisticName, \"\");\r\n      }\r\n      d = defineUserTabs(d, cit_UserTabsGroups.Value, 25);\r\n\r\n      let e = citidfield.FindAttribute(cit_AttributeName.RequestBirthName);\r\n      if (e == null) {\r\n        e = citidfield.MakeAttribute(cit_AttributeName.RequestBirthName, \"\");\r\n      }\r\n      e = defineUserTabs(e, cit_UserTabsGroups.Value, 30);\r\n\r\n      let f = citidfield.FindAttribute(cit_AttributeName.RequestDateOfBirth);\r\n      if (f == null) {\r\n        f = citidfield.MakeAttribute(cit_AttributeName.RequestDateOfBirth, \"\");\r\n      }\r\n      f = defineUserTabs(f, cit_UserTabsGroups.Value, 35);\r\n\r\n      let g = citidfield.FindAttribute(cit_AttributeName.RequestDocumentType);\r\n      if (g == null) {\r\n        g = citidfield.MakeAttribute(cit_AttributeName.RequestDocumentType, \"\");\r\n      }\r\n      g = defineUserTabs(g, cit_UserTabsGroups.Value, 40);\r\n\r\n      let h = citidfield.FindAttribute(cit_AttributeName.RequestFamilyNames);\r\n      if (h == null) {\r\n        h = citidfield.MakeAttribute(cit_AttributeName.RequestFamilyNames, \"\");\r\n      }\r\n      h = defineUserTabs(h, cit_UserTabsGroups.Value, 45);\r\n\r\n      let i = citidfield.FindAttribute(cit_AttributeName.RequestGivenNames);\r\n      if (i == null) {\r\n        i = citidfield.MakeAttribute(cit_AttributeName.RequestGivenNames, \"\");\r\n      }\r\n      i = defineUserTabs(i, cit_UserTabsGroups.Value, 50);\r\n\r\n      let j = citidfield.FindAttribute(cit_AttributeName.RequestIssuingState);\r\n      if (j == null) {\r\n        j = citidfield.MakeAttribute(cit_AttributeName.RequestIssuingState, \"\");\r\n      }\r\n      j = defineUserTabs(j, cit_UserTabsGroups.Value, 55);\r\n\r\n      let k = citidfield.FindAttribute(cit_AttributeName.RequestPlaceOfBirth);\r\n      if (k == null) {\r\n        k = citidfield.MakeAttribute(cit_AttributeName.RequestPlaceOfBirth, \"\");\r\n      }\r\n      k = defineUserTabs(k, cit_UserTabsGroups.Value, 60);\r\n\r\n      let l = citidfield.FindAttribute(cit_AttributeName.RequestPlaceOfResidence);\r\n      if (l == null) {\r\n        l = citidfield.MakeAttribute(cit_AttributeName.RequestPlaceOfResidence, \"\");\r\n      }\r\n      l = defineUserTabs(l, cit_UserTabsGroups.Value, 65);\r\n\r\n      let m = citidfield.FindAttribute(cit_AttributeName.RequestPlaceVerification);\r\n      if (m == null) {\r\n        m = citidfield.MakeAttribute(cit_AttributeName.RequestPlaceVerification, \"\");\r\n      }\r\n      m = defineUserTabs(m, cit_UserTabsGroups.Value, 70);\r\n\r\n      let n = citidfield.FindAttribute(cit_AttributeName.RequestPlaceVerificationValue);\r\n      if (n == null) {\r\n        n = citidfield.MakeAttribute(cit_AttributeName.RequestPlaceVerificationValue, \"\");\r\n      }\r\n      n = defineUserTabs(n, cit_UserTabsGroups.Value, 75);\r\n\r\n      let o = citidfield.FindAttribute(cit_AttributeName.RequestRestrictedId);\r\n      if (o == null) {\r\n        o = citidfield.MakeAttribute(cit_AttributeName.RequestRestrictedId, \"\");\r\n      }\r\n      o = defineUserTabs(o, cit_UserTabsGroups.Value, 80);\r\n\r\n      let tabs = citidfield.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Value);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Validation);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALUES\"), cit_UserTabsGroups.Value, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERLAYOUT\"), cit_UserTabsGroups.Layout, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALIDATION\"), cit_UserTabsGroups.Validation, [], false);\r\n      }\r\n\r\n    }\r\n\r\n    // ------numberunitfield-------\r\n    let citnumberunitfield = bas.FindSystemClass(\"NumberUnitField\");\r\n    if (citnumberunitfield) {\r\n      citnumberunitfield.Style = \"shape=citnumberunitfield;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=lightblue;strokeColor=blue;fontColor=black\";\r\n      let a = citnumberunitfield.FindAttribute(cit_AttributeName.Units);\r\n      if (a == null) {\r\n        a = citnumberunitfield.MakeAttribute(cit_AttributeName.Units, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Main, 50);\r\n\r\n      let tabs = citnumberunitfield.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Value);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Validation);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALUES\"), cit_UserTabsGroups.Value, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERLAYOUT\"), cit_UserTabsGroups.Layout, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALIDATION\"), cit_UserTabsGroups.Validation, [], false);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // ------numberfield-------\r\n    let citnumberfield = bas.FindSystemClass(\"NumberField\");\r\n    if (citnumberfield) {\r\n      citnumberfield.Style = \"shape=citnumber field;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=lightblue;strokeColor=blue;fontColor=black\";\r\n      let a = citnumberfield.FindAttribute(cit_AttributeName.NumberFormat);\r\n      if (a == null) {\r\n        a = citnumberfield.MakeAttribute(cit_AttributeName.NumberFormat, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Value, 50);\r\n\r\n      let b = citnumberfield.FindAttribute(cit_AttributeName.TrackValue);\r\n      if (b == null) {\r\n        b = citnumberfield.MakeAttribute(cit_AttributeName.TrackValue, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Value, 700);\r\n\r\n      let c = citnumberfield.FindAttribute(cit_AttributeName.Placeholder);\r\n      if (c == null) {\r\n        c = citnumberfield.MakeAttribute(cit_AttributeName.Placeholder, \"\");\r\n      }\r\n      c = defineUserTabs(c, cit_UserTabsGroups.Layout, 400);\r\n\r\n      let tabs = citnumberfield.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Value);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Validation);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALUES\"), cit_UserTabsGroups.Value, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERLAYOUT\"), cit_UserTabsGroups.Layout, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALIDATION\"), cit_UserTabsGroups.Validation, [], false);\r\n\r\n      }\r\n\r\n    }\r\n    // ------textfield-------\r\n    let cittextfield = bas.FindSystemClass(\"TextField\");\r\n    if (cittextfield) {\r\n      cittextfield.Style = \"shape=cittextfield;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=lightblue;strokeColor=blue;fontColor=black\";\r\n      let a = cittextfield.FindAttribute(cit_AttributeName.HideInput);\r\n      if (a == null) {\r\n        a = cittextfield.MakeAttribute(cit_AttributeName.HideInput, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Layout, 400);\r\n\r\n      let b = cittextfield.FindAttribute(cit_AttributeName.MaxLength);\r\n      if (b == null) {\r\n        b = cittextfield.MakeAttribute(cit_AttributeName.MaxLength, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Layout, 500);\r\n\r\n      let c = cittextfield.FindAttribute(cit_AttributeName.Placeholder);\r\n      if (c == null) {\r\n        c = cittextfield.MakeAttribute(cit_AttributeName.Placeholder, \"\");\r\n      }\r\n      c = defineUserTabs(c, cit_UserTabsGroups.Layout, 600);\r\n\r\n      let i = cittextfield.FindAttribute(cit_AttributeName.ValidationPattern);\r\n      if (i == null) {\r\n        i = cittextfield.MakeAttribute(cit_AttributeName.ValidationPattern, \"\");\r\n      }\r\n      i = defineUserTabs(i, cit_UserTabsGroups.Validation, 100);\r\n\r\n\r\n      let j = cittextfield.FindAttribute(cit_AttributeName.ValidationExpression);\r\n      if (j == null) {\r\n        j = cittextfield.MakeAttribute(cit_AttributeName.ValidationExpression, \"\");\r\n      }\r\n      j = defineUserTabs(j, cit_UserTabsGroups.Validation, 200);\r\n\r\n\r\n      let k = cittextfield.FindAttribute(cit_AttributeName.ValidationMessage);\r\n      if (k == null) {\r\n        k = cittextfield.MakeAttribute(cit_AttributeName.ValidationMessage, \"\");\r\n      }\r\n      k = defineUserTabs(k, cit_UserTabsGroups.Validation, 300);\r\n\r\n      let tabs = cittextfield.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Value);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Validation);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALUES\"), cit_UserTabsGroups.Value, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERLAYOUT\"), cit_UserTabsGroups.Layout, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALIDATION\"), cit_UserTabsGroups.Validation, [], false);\r\n\r\n      }\r\n\r\n\r\n    }\r\n\r\n    // ------textareafield-------\r\n    let cittextarea = bas.FindSystemClass(\"TextArea\");\r\n    if (cittextarea) {\r\n      cittextarea.Style = \"shape=cittextareafield;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=lightblue;strokeColor=blue;fontColor=black\";\r\n      let a = cittextarea.FindAttribute(cit_AttributeName.ColumnCount);\r\n      if (a == null) {\r\n        a = cittextarea.MakeAttribute(cit_AttributeName.ColumnCount, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Layout, 400);\r\n\r\n      let b = cittextarea.FindAttribute(cit_AttributeName.RowCount);\r\n      if (b == null) {\r\n        b = cittextarea.MakeAttribute(cit_AttributeName.RowCount, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Layout, 500);\r\n\r\n      let c = cittextarea.FindAttribute(cit_AttributeName.MaxLength);\r\n      if (c == null) {\r\n        c = cittextarea.MakeAttribute(cit_AttributeName.MaxLength, \"\");\r\n      }\r\n      c = defineUserTabs(c, cit_UserTabsGroups.Layout, 600);\r\n\r\n      let i = cittextarea.FindAttribute(cit_AttributeName.Placeholder);\r\n      if (i == null) {\r\n        i = cittextarea.MakeAttribute(cit_AttributeName.Placeholder, \"\");\r\n      }\r\n      i = defineUserTabs(i, cit_UserTabsGroups.Layout, 700);\r\n\r\n      let j = cittextarea.FindAttribute(cit_AttributeName.TrackValue);\r\n      if (j == null) {\r\n        j = cittextarea.MakeAttribute(cit_AttributeName.TrackValue, \"\");\r\n      }\r\n      j = defineUserTabs(j, cit_UserTabsGroups.Validation, 600);\r\n\r\n      let tabs = cittextarea.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Value);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Validation);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALUES\"), cit_UserTabsGroups.Value, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERLAYOUT\"), cit_UserTabsGroups.Layout, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALIDATION\"), cit_UserTabsGroups.Validation, [], false);\r\n\r\n      }\r\n    }\r\n\r\n    // ------currencyfield-------\r\n    let citcurrencyfield = bas.FindSystemClass(\"CurrencyField\");\r\n    if (citcurrencyfield) {\r\n      citcurrencyfield.Style = \"shape=citcurrencyfield;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=lightblue;strokeColor=blue;fontColor=black\";\r\n      let a = citcurrencyfield.FindAttribute(cit_AttributeName.Units);\r\n      if (a == null) {\r\n        a = citcurrencyfield.MakeAttribute(cit_AttributeName.Units, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Main, 50);\r\n\r\n      let tabs = citcurrencyfield.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Value);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Validation);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALUES\"), cit_UserTabsGroups.Value, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERLAYOUT\"), cit_UserTabsGroups.Layout, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALIDATION\"), cit_UserTabsGroups.Validation, [], false);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // ------rule-------\r\n    let citrule = bas.FindSystemClass(\"Rule\");\r\n    if (citrule) {\r\n      for (let lbl of citrule.Labels()) {\r\n        if (lbl.Text === \"Class{ Group\") {\r\n          lbl.Delete();\r\n        }\r\n      }\r\n      if (citrule.Labels().length === 0) {\r\n        citrule.MakeLabel(\"Class{ 1\", \"\");\r\n        citrule.MakeLabel(\"UserNumber{ 0\", \"\");\r\n      }\r\n      for (let cftype of citrule.SubClasses()) {\r\n        if (bas.IsSystemClass(cftype)) {\r\n          const dos = cftype as ISemTalkSystemClass;\r\n          // dos.Style = \"edgeStyle=orthogonalEdgeStyle;rounded=1;\";\r\n          if (dos.Labels().length === 0) {\r\n            dos.MakeLabel(\"Class{ 1\", \"\");\r\n            dos.MakeLabel(\"UserNumber{ 0\", \"\");\r\n          }\r\n        }\r\n      }\r\n      citrule.Style = \"shape=citrule;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=#ffe6cc;strokeColor=#d79b00;fontColor=black\";\r\n\r\n      let a = citrule.FindAttribute(cit_AttributeName.ValidationExpression);\r\n      if (a == null) {\r\n        a = citrule.MakeAttribute(cit_AttributeName.ValidationExpression, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Validation, 200);\r\n\r\n      let b = citrule.FindAttribute(cit_AttributeName.ValidationMessage);\r\n      if (b == null) {\r\n        b = citrule.MakeAttribute(cit_AttributeName.ValidationMessage, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Validation, 300);\r\n\r\n      let c = citrule.FindAttribute(cit_AttributeName.ValidationMode);\r\n      if (c == null) {\r\n        c = citrule.MakeAttribute(cit_AttributeName.ValidationMode, \"\");\r\n      }\r\n      c = defineUserTabs(c, cit_UserTabsGroups.Validation, 400);\r\n\r\n      let i = citrule.FindAttribute(cit_AttributeName.UserNumber);\r\n      if (i == null) {\r\n        i = citrule.MakeAttribute(cit_AttributeName.UserNumber, \"\");\r\n      }\r\n      i = defineUserTabs(i, cit_UserTabsGroups.Main, 100);\r\n\r\n      let j = citrule.FindAttribute(cit_AttributeName.StyleClass);\r\n      if (j == null) {\r\n        j = citrule.MakeAttribute(cit_AttributeName.StyleClass, \"\");\r\n      }\r\n      j = defineUserTabs(j, cit_UserTabsGroups.Main, 300);\r\n\r\n      let tabs = citrule.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Value);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Validation);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALIDATION\"), cit_UserTabsGroups.Validation, [], false);\r\n      }\r\n    }\r\n\r\n    // ------webservicemethod-------\r\n    let citwebservicemethod = bas.FindSystemClass(\"WebserviceMethod\");\r\n    if (citwebservicemethod) {\r\n      for (let lbl of citwebservicemethod.Labels()) {\r\n        if (lbl.Text === \"Class{ Group\") {\r\n          lbl.Delete();\r\n        }\r\n      }\r\n      if (citwebservicemethod.Labels().length === 0) {\r\n        citwebservicemethod.MakeLabel(\"Class{ 1\", \"\");\r\n      }\r\n      for (let cftype of citwebservicemethod.SubClasses()) {\r\n        if (bas.IsSystemClass(cftype)) {\r\n          const dos = cftype as ISemTalkSystemClass;\r\n          // dos.Style = \"edgeStyle=orthogonalEdgeStyle;rounded=1;\";\r\n          if (dos.Labels().length === 0) {\r\n            dos.MakeLabel(\"Class{ 1\", \"\");\r\n          }\r\n        }\r\n      }\r\n      citwebservicemethod.Style = \"shape=citwebservicemethod;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=#ffff00;strokeColor=#a87323;fontColor=black\";\r\n\r\n      let a = citwebservicemethod.FindAttribute(cit_AttributeName.FaultTemplate);\r\n      if (a == null) {\r\n        a = citwebservicemethod.MakeAttribute(cit_AttributeName.FaultTemplate, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Parameter, 400);\r\n\r\n      let b = citwebservicemethod.FindAttribute(cit_AttributeName.RequestTemplate);\r\n      if (b == null) {\r\n        b = citwebservicemethod.MakeAttribute(cit_AttributeName.RequestTemplate, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Parameter, 300);\r\n\r\n      let c = citwebservicemethod.FindAttribute(cit_AttributeName.ResponseTemplate);\r\n      if (c == null) {\r\n        c = citwebservicemethod.MakeAttribute(cit_AttributeName.ResponseTemplate, \"\");\r\n      }\r\n      c = defineUserTabs(c, cit_UserTabsGroups.Parameter, 200);\r\n\r\n      let i = citwebservicemethod.FindAttribute(cit_AttributeName.WebserviceConnection);\r\n      if (i == null) {\r\n        i = citwebservicemethod.MakeAttribute(cit_AttributeName.WebserviceConnection, \"\");\r\n      }\r\n      i = defineUserTabs(i, cit_UserTabsGroups.Parameter, 100);\r\n\r\n      let j = citwebservicemethod.FindAttribute(cit_AttributeName.StyleClass);\r\n      if (j == null) {\r\n        j = citwebservicemethod.MakeAttribute(cit_AttributeName.StyleClass, \"\");\r\n      }\r\n      j = defineUserTabs(j, cit_UserTabsGroups.Main, 300);\r\n\r\n      let tabs = citwebservicemethod.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Parameter);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERPARAMETER\"), cit_UserTabsGroups.Parameter, [], false);\r\n\r\n      }\r\n    }\r\n\r\n\r\n    // ------xmlresource-------\r\n    let citxmlresource = bas.FindSystemClass(\"XmlResource\");\r\n    if (citxmlresource) {\r\n      for (let lbl of citxmlresource.Labels()) {\r\n        if (lbl.Text === \"Class{ Group\") {\r\n          lbl.Delete();\r\n        }\r\n      }\r\n      if (citxmlresource.Labels().length === 0) {\r\n        citxmlresource.MakeLabel(\"Class{ 1\", \"\");\r\n      }\r\n      for (let cftype of citxmlresource.SubClasses()) {\r\n        if (bas.IsSystemClass(cftype)) {\r\n          const dos = cftype as ISemTalkSystemClass;\r\n          // dos.Style = \"edgeStyle=orthogonalEdgeStyle;rounded=1;\";\r\n          if (dos.Labels().length === 0) {\r\n            dos.MakeLabel(\"Class{ 1\", \"\");\r\n          }\r\n        }\r\n      }\r\n      citxmlresource.Style = \"shape=citxmlresource;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=#ffff00;strokeColor=#a87323;fontColor=black\";\r\n\r\n      let a = citxmlresource.FindAttribute(cit_AttributeName.Location);\r\n      if (a == null) {\r\n        a = citxmlresource.MakeAttribute(cit_AttributeName.Location, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Parameter, 200);\r\n\r\n      let b = citxmlresource.FindAttribute(cit_AttributeName.CacheMode);\r\n      if (b == null) {\r\n        b = citxmlresource.MakeAttribute(cit_AttributeName.CacheMode, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Parameter, 300);\r\n\r\n      let c = citxmlresource.FindAttribute(cit_AttributeName.XsltScript);\r\n      if (c == null) {\r\n        c = citxmlresource.MakeAttribute(cit_AttributeName.XsltScript, \"\");\r\n      }\r\n      c = defineUserTabs(c, cit_UserTabsGroups.Parameter, 400);\r\n\r\n      let i = citxmlresource.FindAttribute(cit_AttributeName.ResourceRange);\r\n      if (i == null) {\r\n        i = citxmlresource.MakeAttribute(cit_AttributeName.ResourceRange, \"\");\r\n      }\r\n      i = defineUserTabs(i, cit_UserTabsGroups.Parameter, 500);\r\n\r\n      let j = citxmlresource.FindAttribute(cit_AttributeName.ValidationExpression);\r\n      if (j == null) {\r\n        j = citxmlresource.MakeAttribute(cit_AttributeName.ValidationExpression, \"\");\r\n      }\r\n      j = defineUserTabs(j, cit_UserTabsGroups.Parameter, 600);\r\n\r\n      let tabs = citxmlresource.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Parameter);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERPARAMETER\"), cit_UserTabsGroups.Parameter, [], false);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // ------externalcomponent-------\r\n    let citexternalcomponent = bas.FindSystemClass(\"ExternalComponent\");\r\n    if (citexternalcomponent) {\r\n      citexternalcomponent.Style = \"shape=citexternalcomponent;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=#e8b66b;strokeColor=#a87323;fontColor=black\";\r\n      \r\n      let a = citexternalcomponent.FindAttribute(cit_AttributeName.RoadmapTitle);\r\n      if (a == null) {\r\n        a = citexternalcomponent.MakeAttribute(cit_AttributeName.RoadmapTitle, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Main, 500);\r\n\r\n      let tabs = citexternalcomponent.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERLAYOUT\"), cit_UserTabsGroups.Layout, [], false);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // ------fieldset-------\r\n    let citfieldset = bas.FindSystemClass(\"FieldSet\");\r\n    if (citfieldset) {\r\n      citfieldset.Style = \"shape=citfieldset;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=lightgreen;strokeColor=green;fontColor=black\";\r\n      for (let attr of citfieldset.Attributes()) {\r\n        if (attr.Value && attr.ValueType === SemTalkValueType.Symbol) {\r\n          attr.Value = undefined;\r\n        }\r\n      }\r\n\r\n      let a = citfieldset.FindAttribute(cit_AttributeName.RoadmapTitle);\r\n      if (a == null) {\r\n        a = citfieldset.MakeAttribute(cit_AttributeName.RoadmapTitle, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Main, 500);\r\n\r\n      let b = citfieldset.FindAttribute(cit_AttributeName.SetType);\r\n      if (b == null) {\r\n        b = citfieldset.MakeAttribute(cit_AttributeName.SetType, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Value, 300);\r\n\r\n      let c = citfieldset.FindAttribute(cit_AttributeName.SummaryExpression);\r\n      if (c == null) {\r\n        c = citfieldset.MakeAttribute(cit_AttributeName.SummaryExpression, \"\");\r\n      }\r\n      c = defineUserTabs(c, cit_UserTabsGroups.Value, 100);\r\n\r\n      let i = citfieldset.FindAttribute(cit_AttributeName.ChoiceCascade);\r\n      if (i == null) {\r\n        i = citfieldset.MakeAttribute(cit_AttributeName.ChoiceCascade, \"\");\r\n      }\r\n      i = defineUserTabs(i, cit_UserTabsGroups.Value, 400);\r\n\r\n\r\n      let j = citfieldset.FindAttribute(cit_AttributeName.EnablePrefill);\r\n      if (j == null) {\r\n        j = citfieldset.MakeAttribute(cit_AttributeName.EnablePrefill, \"\");\r\n      }\r\n      j = defineUserTabs(j, cit_UserTabsGroups.Value, 200);\r\n\r\n\r\n      let k = citfieldset.FindAttribute(cit_AttributeName.PageBreakBefore);\r\n      if (k == null) {\r\n        k = citfieldset.MakeAttribute(cit_AttributeName.PageBreakBefore, \"\");\r\n      }\r\n      k = defineUserTabs(k, cit_UserTabsGroups.Layout, 100);\r\n\r\n      let l = citfieldset.FindAttribute(cit_AttributeName.StyleClass);\r\n      if (l == null) {\r\n        l = citfieldset.MakeAttribute(cit_AttributeName.StyleClass, \"\");\r\n      }\r\n      l = defineUserTabs(l, cit_UserTabsGroups.Layout, 200);\r\n\r\n      let tabs = citfieldset.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Value);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALUES\"), cit_UserTabsGroups.Value, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERLAYOUT\"), cit_UserTabsGroups.Layout, [], false);\r\n      }\r\n\r\n    }\r\n\r\n    // ------subfieldset-------\r\n    let citsubfieldset = bas.FindSystemClass(\"SubFieldSet\");\r\n    if (citsubfieldset) {\r\n      citsubfieldset.Style = \"shape=citsubfieldset;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=lightgreen;strokeColor=green;fontColor=green\";\r\n      let a = citsubfieldset.FindAttribute(cit_AttributeName.RoadmapTitle);\r\n      if (a == null) {\r\n        a = citsubfieldset.MakeAttribute(cit_AttributeName.RoadmapTitle, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Main, 500);\r\n\r\n      let tabs = citsubfieldset.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERLAYOUT\"), cit_UserTabsGroups.Layout, [], false);\r\n\r\n      }\r\n    \r\n    }\r\n\r\n    // ------infobox-------\r\n    let citinfobox = bas.FindSystemClass(\"InfoBox\");\r\n    if (citinfobox) {\r\n      citinfobox.Style = \"shape=citinfobox;whiteSpace=wrap;resize=1;strokeWidth=2;html=1;fillColor=lightgray;strokeColor=gray;fontColor=black\";\r\n      let a = citinfobox.FindAttribute(cit_AttributeName.Title);\r\n      if (a == null) {\r\n        a = citinfobox.MakeAttribute(cit_AttributeName.Title, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Main, 200);\r\n\r\n      let b = citinfobox.FindAttribute(cit_AttributeName.DisplayText);\r\n      if (b && b.Value) {\r\n        b.Value = undefined;\r\n      }\r\n      if (b == null) {\r\n        b = citinfobox.MakeAttribute(cit_AttributeName.DisplayText, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Main, 300);\r\n\r\n      let c = citinfobox.FindAttribute(cit_AttributeName.RenderAsHtml);\r\n      if (c == null) {\r\n        c = citinfobox.MakeAttribute(cit_AttributeName.RenderAsHtml, \"\");\r\n      }\r\n      c = defineUserTabs(c, cit_UserTabsGroups.Main, 400);\r\n\r\n      let tabs = citinfobox.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERLAYOUT\"), cit_UserTabsGroups.Layout, [], false);\r\n\r\n      }\r\n    }\r\n\r\n  \r\n\r\n    let usernumber = sem.base.FindAttributeType(\"UserNumber\");\r\n    if (usernumber) {\r\n      usernumber.Value = undefined;\r\n    }\r\n    let node = bas.FindClass(\"Node\");\r\n    if (node) {\r\n      let a = node.FindAttribute(\"UserNumber\");\r\n      if (a) {\r\n        a.Value = undefined;\r\n      }\r\n    }\r\n    let rule = bas.FindClass(\"Rule\");\r\n    if (rule) {\r\n      let a = rule.FindAttribute(\"UserNumber\");\r\n      if (a) {\r\n        a.Value = undefined;\r\n      }\r\n    }\r\n    let xmlres = bas.FindClass(\"XmlResource\");\r\n    if (xmlres) {\r\n      let a = xmlres.FindAttribute(\"UserNumber\");\r\n      if (a) {\r\n        a.Value = undefined;\r\n      }\r\n    }\r\n    let hasmetafield = bas.FindAssociationType(\"HasMetaField\");\r\n    if (hasmetafield) {\r\n      let a = hasmetafield.FindAttribute(\"UserNumber\");\r\n      if (a) {\r\n        a.Value = undefined;\r\n      }\r\n      let tabs = hasmetafield.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let main = tabs.FindTabSpec(\"UserTab_Main\");\r\n        if (main) {\r\n          main.Delete();\r\n        }\r\n        tabs.MakeGenericAttributeTabSpec(\"UserTab_Main\", \"MainAttributes\", [], false);\r\n        // tabs.MakeGenericAttributeTabSpec(\"UserTab_Values\", \"ValueAttributes\", [], false);\r\n        // tabs.MakeGenericAttributeTabSpec(\"UserTab_Layout\", \"LayoutAttributes\", [], false);\r\n        // tabs.MakeGenericAttributeTabSpec(\"UserTab_Validation\", \"ValidationAttributes\", [], false);\r\n      }\r\n    }\r\n\r\n    // ------hasresource-------\r\n    let hasresource = bas.FindClass(\"HasResource\");\r\n    if (hasresource) {\r\n      let a = hasresource.FindAttribute(\"UserNumber\");\r\n      if (a) {\r\n        a.Value = undefined;\r\n      }\r\n    }\r\n\r\n    let cithasresource = bas.FindAssociationType(\"HasResource\");\r\n    if (cithasresource){\r\n      let a = cithasresource.FindAttribute(cit_AttributeName.UserNumber);\r\n      if (a && a.Value) {\r\n        a.Value = undefined;\r\n      }\r\n      if (a == null) {\r\n        a = cithasresource.MakeAttribute(cit_AttributeName.UserNumber, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Main, 100);\r\n\r\n      let b = cithasresource.FindAttribute(cit_AttributeName.Condition);\r\n      if (b && b.Value) {\r\n        b.Value = undefined;\r\n      }\r\n      if (b == null) {\r\n        b = cithasresource.MakeAttribute(cit_AttributeName.Condition, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Main, 400);\r\n\r\n      let tabs = cithasresource.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n      }\r\n      cithasresource.Style = \"edgeStyle=orthogonalEdgeStyle;rounded=1;shape=flexArrow;endArrow=classic;html=1;fillColor=#ffffff;strokeWidth=2;custom=1;\";\r\n\r\n    }\r\n\r\n    // ------hasmetafield-------\r\n    let cithasmetafield = bas.FindAssociationType(\"HasMetaField\");\r\n    if (cithasmetafield){\r\n      let a = cithasmetafield.FindAttribute(cit_AttributeName.UserNumber);\r\n      if (a && a.Value) {\r\n        a.Value = undefined;\r\n      }\r\n      if (a == null) {\r\n        a = cithasmetafield.MakeAttribute(cit_AttributeName.UserNumber, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Main, 100);\r\n\r\n\r\n      let tabs = cithasmetafield.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n      }\r\n      cithasmetafield.Style = \"edgeStyle=orthogonalEdgeStyle;rounded=1;shape=flexArrow;endArrow=classic;html=1;fillColor=#ffffff;strokeWidth=2;custom=1;\";\r\n\r\n    }\r\n\r\n\r\n    // ------relation-------\r\n    let relation = bas.FindAssociationType(\"Relation\");\r\n    if (relation) {\r\n\r\n      let a = relation.FindAttribute(cit_AttributeName.UserNumber);\r\n      if (a && a.Value) {\r\n        a.Value = undefined;\r\n      }\r\n      if (a == null) {\r\n        a = relation.MakeAttribute(cit_AttributeName.UserNumber, \"\");\r\n      }\r\n      a = defineUserTabs(a, cit_UserTabsGroups.Main, 100);\r\n\r\n      let b = relation.FindAttribute(cit_AttributeName.RelationType);\r\n      if (b && b.Value) {\r\n        b.Value = undefined;\r\n      }\r\n      if (b == null) {\r\n        b = relation.MakeAttribute(cit_AttributeName.RelationType, \"\");\r\n      }\r\n      b = defineUserTabs(b, cit_UserTabsGroups.Main, 200);\r\n\r\n      let c = relation.FindAttribute(cit_AttributeName.ConditionExpression);\r\n      if (c && c.Value) {\r\n        c.Value = undefined;\r\n      }\r\n      if (c == null) {\r\n        c = relation.MakeAttribute(cit_AttributeName.ConditionExpression, \"\");\r\n      }\r\n      c = defineUserTabs(c, cit_UserTabsGroups.Main, 300);\r\n\r\n      let d = relation.FindAttribute(cit_AttributeName.Condition);\r\n      if (d && d.Value) {\r\n        d.Value = undefined;\r\n      }\r\n      if (d == null) {\r\n        d = relation.MakeAttribute(cit_AttributeName.Condition, \"\");\r\n      }\r\n      d = defineUserTabs(d, cit_UserTabsGroups.Main, 400);\r\n\r\n      let e = relation.FindAttribute(cit_AttributeName.Title);\r\n      if (e && e.Value) {\r\n        e.Value = undefined;\r\n      }\r\n      if (e == null) {\r\n        e = relation.MakeAttribute(cit_AttributeName.Title, \"\");\r\n      }\r\n      e = defineUserTabs(e, cit_UserTabsGroups.Main, 500);\r\n\r\n      let f = relation.FindAttribute(cit_AttributeName.RoadmapTitle);\r\n      if (f && f.Value) {\r\n        f.Value = undefined;\r\n      }\r\n      if (f == null) {\r\n        f = relation.MakeAttribute(cit_AttributeName.RoadmapTitle, \"\");\r\n      }\r\n      f = defineUserTabs(f, cit_UserTabsGroups.Main, 600);\r\n\r\n      let g = relation.FindAttribute(cit_AttributeName.Intro);\r\n      if (g && g.Value) {\r\n        g.Value = undefined;\r\n      }\r\n      if (g == null) {\r\n        g = relation.MakeAttribute(cit_AttributeName.Intro, \"\");\r\n      }\r\n      g = defineUserTabs(g, cit_UserTabsGroups.Main, 700);\r\n\r\n\r\n      let h = relation.FindAttribute(cit_AttributeName.Outro);\r\n      if (h && h.Value) {\r\n        h.Value = undefined;\r\n      }\r\n      if (h == null) {\r\n        h = relation.MakeAttribute(cit_AttributeName.Outro, \"\");\r\n      }\r\n      h = defineUserTabs(h, cit_UserTabsGroups.Main, 800);\r\n\r\n\r\n      let i = relation.FindAttribute(cit_AttributeName.Scope);\r\n      if (i && i.Value) {\r\n        i.Value = undefined;\r\n      }\r\n      if (i == null) {\r\n        i = relation.MakeAttribute(cit_AttributeName.Scope, \"\");\r\n      }\r\n      i = defineUserTabs(i, cit_UserTabsGroups.Main, 900);\r\n\r\n\r\n      let j = relation.FindAttribute(cit_AttributeName.EnablePrefill);\r\n      if (j && j.Value) {\r\n        j.Value = undefined;\r\n      }\r\n      if (j == null) {\r\n        j = relation.MakeAttribute(cit_AttributeName.EnablePrefill, \"\");\r\n      }\r\n      j = defineUserTabs(j, cit_UserTabsGroups.Main, 1000);\r\n\r\n\r\n      let k = relation.FindAttribute(cit_AttributeName.Multiplicity);\r\n      if (k && k.Value) {\r\n        k.Value = undefined;\r\n      }\r\n      if (k == null) {\r\n        k = relation.MakeAttribute(cit_AttributeName.Multiplicity, \"\");\r\n      }\r\n      k = defineUserTabs(k, cit_UserTabsGroups.Layout, 100);\r\n\r\n\r\n      let l = relation.FindAttribute(cit_AttributeName.SummaryExpression);\r\n      if (l && l.Value) {\r\n        l.Value = undefined;\r\n      }\r\n      if (l == null) {\r\n        l = relation.MakeAttribute(cit_AttributeName.SummaryExpression, \"\");\r\n      }\r\n      l = defineUserTabs(l, cit_UserTabsGroups.Layout, 200);\r\n\r\n\r\n      let m = relation.FindAttribute(cit_AttributeName.FixedCount);\r\n      if (m && m.Value) {\r\n        m.Value = undefined;\r\n      }\r\n      if (m == null) {\r\n        m = relation.MakeAttribute(cit_AttributeName.FixedCount, \"\");\r\n      }\r\n      m = defineUserTabs(m, cit_UserTabsGroups.Layout, 300);\r\n\r\n\r\n      let n = relation.FindAttribute(cit_AttributeName.InitialRowCount);\r\n      if (n && n.Value) {\r\n        n.Value = undefined;\r\n      }\r\n      if (n == null) {\r\n        n = relation.MakeAttribute(cit_AttributeName.InitialRowCount, \"\");\r\n      }\r\n      n = defineUserTabs(n, cit_UserTabsGroups.Layout, 400);\r\n\r\n\r\n      let o = relation.FindAttribute(cit_AttributeName.MaxCount);\r\n      if (o && o.Value) {\r\n        o.Value = undefined;\r\n      }\r\n      if (o == null) {\r\n        o = relation.MakeAttribute(cit_AttributeName.MaxCount, \"\");\r\n      }\r\n      o = defineUserTabs(o, cit_UserTabsGroups.Layout, 500);\r\n\r\n\r\n      let p = relation.FindAttribute(cit_AttributeName.MinCount);\r\n      if (p && p.Value) {\r\n        p.Value = undefined;\r\n      }\r\n      if (p == null) {\r\n        p = relation.MakeAttribute(cit_AttributeName.MinCount, \"\");\r\n      }\r\n      p = defineUserTabs(p, cit_UserTabsGroups.Layout, 600);\r\n\r\n\r\n      let q = relation.FindAttribute(cit_AttributeName.RowIncrement);\r\n      if (q && q.Value) {\r\n        q.Value = undefined;\r\n      }\r\n      if (q == null) {\r\n        q = relation.MakeAttribute(cit_AttributeName.RowIncrement, \"\");\r\n      }\r\n      q = defineUserTabs(q, cit_UserTabsGroups.Layout, 700);\r\n\r\n\r\n      let r = relation.FindAttribute(cit_AttributeName.ValidationExpression);\r\n      if (r && r.Value) {\r\n        r.Value = undefined;\r\n      }\r\n      if (r == null) {\r\n        r = relation.MakeAttribute(cit_AttributeName.ValidationExpression, \"\");\r\n      }\r\n      r = defineUserTabs(r, cit_UserTabsGroups.Validation, 100);\r\n\r\n\r\n      let s = relation.FindAttribute(cit_AttributeName.ValidationMessage);\r\n      if (s && s.Value) {\r\n        s.Value = undefined;\r\n      }\r\n      if (s == null) {\r\n        s = relation.MakeAttribute(cit_AttributeName.ValidationMessage, \"\");\r\n      }\r\n      s = defineUserTabs(s, cit_UserTabsGroups.Validation, 200);\r\n\r\n\r\n      let t = relation.FindAttribute(cit_AttributeName.ValidationMode);\r\n      if (t && t.Value) {\r\n        t.Value = undefined;\r\n      }\r\n      if (t == null) {\r\n        t = relation.MakeAttribute(cit_AttributeName.ValidationMode, \"\");\r\n      }\r\n      t = defineUserTabs(t, cit_UserTabsGroups.Validation, 300);\r\n\r\n      let tabs = relation.TabSpecDefinitions();\r\n      if (tabs) {\r\n        let tab = tabs.FindTabSpec(cit_UserTabs.Main);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Layout);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tab = tabs.FindTabSpec(cit_UserTabs.Validation);\r\n        if (tab) {\r\n          tab.Delete();\r\n        }\r\n\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERMAIN\"), cit_UserTabsGroups.Main, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERLAYOUT\"), cit_UserTabsGroups.Layout, [], false);\r\n        tabs.MakeGenericAttributeTabSpec(getResStr(\"STRUSERVALIDATION\"), cit_UserTabsGroups.Validation, [], false);\r\n      }\r\n      relation.Style = \"edgeStyle=orthogonalEdgeStyle;rounded=1;shape=flexArrow;endArrow=classic;html=1;fillColor=#ffffff;strokeWidth=2;custom=1;\";\r\n\r\n    }\r\n\r\n\r\n    let scope = sem.base.FindAttributeType(\"Scope\");\r\n    if (scope) {\r\n      scope.Value = undefined;\r\n    }\r\n\r\n    // super.patch(sem);\r\n  }\r\n  // private static _ribbonKeys: { [keyEvent: string]: any } = {};\r\n  // private static _ribbon: any[] | null = null;\r\n\r\n  public static init(sem: IVisioRDFS) {\r\n\r\n\r\n    const citExtComponentLb = getResStr(\"STREXTCOMPONENT\");\r\n    const citUserMain = getResStr(\"STRUSERMAIN\");\r\n    const citLayout = getResStr(\"STRUSERLAYOUT\");\r\n\r\n    let qs_super = sem.getOverridable(\"quickShapes\");\r\n    sem.quickShapes = (oid: number, stencil: any): any[] => {\r\n      const ob = sem.base;\r\n      let targets: string[] = [];\r\n      const badlist: any[] = [];\r\n      const src = ob.FindObjectByID(oid);\r\n      if (src) {\r\n        let sc: ISemTalkObject | null = src.SystemClass();\r\n        if (sc === null) sc = src;\r\n        if (sc && badlist.indexOf(sc.ObjectName) < 0) {\r\n          switch (sc.ObjectName) {\r\n            case cit_ElementName.FieldSet: {\r\n              targets.push(cit_ElementName.FieldSet);\r\n              targets.push(cit_ElementName.BooleanField);\r\n              targets.push(cit_ElementName.TextField);\r\n              targets.push(cit_ElementName.ComputedField);\r\n              break;\r\n            }\r\n            default: {\r\n              return qs_super(oid, stencil);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      let masters: any[] = [];\r\n      for (let key of targets)\r\n        for (let m of stencil) {\r\n          if (m.name === key)\r\n            masters.push(m);\r\n        }\r\n      return masters;\r\n    };\r\n\r\n    let gs_super = sem.getOverridable(\"GetShapeStyle\");\r\n    sem.GetShapeStyle = (key: string, shapeType: string): { style: string, isedge: boolean } => {\r\n      let shapeStyle = key;\r\n      let isedge: boolean = false;\r\n      switch (shapeType) {\r\n        case 'cit': {\r\n          if (CIT_SHAPES[key]) {\r\n            if (CIT_SHAPES[key].type === 'edge') {\r\n              isedge = true;\r\n            }\r\n            shapeStyle = CIT_SHAPES[key].style;\r\n          }\r\n          break;\r\n        }\r\n        default: {\r\n          return gs_super(key, shapeType);\r\n        }\r\n      }\r\n      return { style: shapeStyle, isedge: isedge };\r\n    };\r\n\r\n    let ip_super = sem.getOverridable(\"initPage\");\r\n    sem.initPage = (diag: ISemTalkDiagram) => {\r\n      ip_super(diag);\r\n      let isCit = (sem.template === \"cit\");\r\n      // let em = sem.GetShapeStyle(\"Circle\", \"general\");\r\n      if (isCit && diag.Contents().length === 0 && sem.tseditor) {\r\n        // let citEntryPoint = sem.base.GetModelAttribute(cit_ElementName.FieldSet)\r\n        let em = sem.GetShapeStyle(\"Circle\", \"general\");\r\n        let f = sem.base.FindSystemClass(cit_ElementName.FieldSet);\r\n        if (f) {\r\n          em = { style: f.Style, isedge: false };\r\n        }\r\n        let parent = sem.graph.getDefaultParent();\r\n        if (parent) {\r\n          let evshape = sem.graph.insertVertex(parent, \"\", \"\", 50, 200 / 2 - 30, 160, 60, em.style) as mxCell;\r\n          if (evshape) {\r\n            evshape.shapeName = cit_ElementName.FieldSet;\r\n            evshape.shapeKey = \"FieldSet\";\r\n            sem.visShapeAdded(evshape);\r\n          }\r\n\r\n          // let evshape = sem.graph.insertVertex(swshape, \"\", \"\", 50, 200 / 2 - 30, 40, 40, em.style);\r\n        }\r\n\r\n      }\r\n    };\r\n\r\n\r\n    // let uls_super = sem.getOverridable(\"updateLabelStyle\");\r\n    sem.updateLabelStyle = (obj: ISemTalkObject, lsp: ILabelSpec, style: string): string => {\r\n      let lbl = obj.SystemClass()?.ID2NameNsp();\r\n      if (lsp.newtxt === lbl) {\r\n        lsp.newtxt = \"\";\r\n      }\r\n      if (lsp.newtxt0 === lbl) {\r\n        lsp.newtxt0 = \"\";\r\n      }\r\n      return style;\r\n    };\r\n\r\n    sem.initStencil = async (\r\n      dtype: ISemTalkDiagramType,\r\n      _stencil: string, _sprops: any, _extended: boolean,\r\n      _loadStencil: (template: string, url: string, spinterface: any) => Promise<SemTalkStencil>) => {\r\n      let stencil: SemTalkStencil = [];\r\n      if (dtype.ObjectName === cit_DiagramTypeName.Dialogmodell) {\r\n        stencil.push(...CIT_STENCIL0);\r\n      }\r\n      return stencil;\r\n    };\r\n\r\n    sem.renderUserTab = (tab: string, object: ISemTalkObject): any => {\r\n      return renderUserTab(tab, sem, object);\r\n    };\r\n    sem.captionUserTab = (tab: string): string => {\r\n      switch (tab) {\r\n        case \"citExternalComponent\": {\r\n          return citExtComponentLb;\r\n        }\r\n        case \"citUserMain\": {\r\n          return citUserMain;\r\n        }\r\n        case \"citLayout\": {\r\n          return citLayout;\r\n        }\r\n        default:\r\n          return \"\";\r\n      }\r\n    };\r\n\r\n\r\n    let gr_super = sem.getOverridable(\"getRibbon\");\r\n     sem.getRibbon = (_ribbon?: SemTalkRibbon, _toolbar?: SemTalkRibbon): { \"ribbon\": SemTalkRibbon,\r\n        \"toolbar\": SemTalkRibbon, \r\n        \"keys\": { [keyEvent: string]: any } } => {\r\n      let r = require(\"./cit_ribbon.json\");\r\n      let t = require(\"./cit_toolbar.json\");\r\n      return gr_super(r,t);\r\n    };\r\n\r\n    sem.AddonCommand = (args: any): void => {\r\n      if (args[\"command\"]) {\r\n        alert(args[\"command\"]);\r\n        args[\"callback\"].showSubTask(args[\"command\"]);\r\n      }\r\n    };\r\n    sem.renderSubTaskDialog = (addoncommand: string): any => {\r\n      return \"CIT renderSubTaskDialog: \" + addoncommand;\r\n    };\r\n  }\r\n}\r\n\r\nfunction defineUserTabs(att: ISemTalkAttribute, group: string, weight: number, valtype?: SemTalkValueType, val?: any, opts?: [], allowff?: boolean) { //Attribute, Group, Weight, ValueType, Value, Options, AllowFreeForm(Boolean)\r\n  if (att) {\r\n    att.Group = group;\r\n    att.Weight = weight;\r\n    if (valtype) {\r\n      att.ValueType = valtype;\r\n    }\r\n    if (val) {\r\n      att.Value = val;\r\n    }\r\n    if (opts) {\r\n      att.Options = opts;\r\n    }\r\n    if (allowff) {\r\n      att.AllowFreeForm = allowff;\r\n    }\r\n  }\r\n  return att;\r\n}\r\n","import * as React from 'react';\r\n// import styles from './usercontrol.module.scss';\r\nimport { IVisioRDFS } from './../../visiordfsinterface';\r\n//  import {\r\n//      TextField, \r\n//     //  Stack, DefaultButton,\r\n//  } from 'office-ui-fabric-react';\r\n  //IStackStyles\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { \r\n    ISemTalkObject, \r\n} from './../../../tbase/Interface';\r\n\r\nimport { CitExtComponent } from './citextcomponent/citExtComponent'; \r\n\r\n\r\nexport interface ISemTalkUserTabProps {\r\n    title?: string;\r\n    description?: string;\r\n    semtalk: IVisioRDFS;\r\n    context?: any;\r\n}\r\n\r\nexport function renderUserTab(tab: string, semtalk: IVisioRDFS, _object: ISemTalkObject): React.ReactElement<ISemTalkUserTabProps> {\r\n    let r: React.ReactElement<ISemTalkUserTabProps>;\r\n    r = <Fabric>\r\n        <div>\r\n        { tab==='citExternalComponent' &&\r\n         <CitExtComponent semtalk={semtalk}></CitExtComponent>\r\n        }\r\n        </div>\r\n    </Fabric>;\r\n    return r;\r\n}\r\n","import { SemTalkMaster} from \"../SemTalkMaster\";\r\nexport const CLASS_SHAPES: any = {};\r\nCLASS_SHAPES[SemTalkMaster.MasterClass] = {\r\n    type: 'vertex',\r\n    style: 'shape=ellipse;whiteSpace=wrap;resize=0;html=1;strokeWidth=2;',\r\n  };\r\n  CLASS_SHAPES[SemTalkMaster.MasterUMLClass] = {\r\n    type: 'vertex',\r\n    style: 'shape=umlclass;whiteSpace=wrap;resize=1;html=1;strokeWidth=2;',\r\n  };\r\n  CLASS_SHAPES[SemTalkMaster.MasterComment] = {\r\n    type: 'vertex',\r\n    style: 'whiteSpace=wrap;html=1;',\r\n  };\r\n","import { SemTalkMaster} from \"../SemTalkMaster\";\r\n\r\nexport const GENERIC_SHAPES: any = {};\r\nGENERIC_SHAPES[SemTalkMaster.MasterClass] = {\r\n  type: 'vertex',\r\n  style: 'shape=ellipse;whiteSpace=wrap;resize=0;html=1;strokeWidth=2;',\r\n};\r\nGENERIC_SHAPES[SemTalkMaster.MasterSystemClass] = {\r\n  type: 'vertex',\r\n  style: 'shape=ellipse;whiteSpace=wrap;resize=1;html=1;strokeWidth=5;',\r\n};\r\nGENERIC_SHAPES[SemTalkMaster.MasterInstance] = {\r\n  type: 'vertex',\r\n  style: 'shape=ellipse;whiteSpace=wrap;resize=0;html=1;dashed=1;',\r\n};\r\nGENERIC_SHAPES[SemTalkMaster.MasterComment] = {\r\n  type: 'vertex',\r\n  style: 'whiteSpace=wrap;html=1;',\r\n};","import { SemTalkMaster } from \"../SemTalkMaster\";\r\nimport { SemTalkStencil } from \"./visiordfsinterface\";\r\nexport const GENERIC_STENCIL: SemTalkStencil = [\r\n    {\r\n      name: SemTalkMaster.MasterClass,\r\n      key: SemTalkMaster.MasterClass,\r\n      logo: '/images/symbols/Class.png',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"generic\",\r\n      label: \"STRDLHTMLOUTCLA\",\r\n      hidden: false\r\n    },\r\n    {\r\n      name: SemTalkMaster.MasterSystemClass,\r\n      key: SemTalkMaster.MasterSystemClass,\r\n      logo: '/images/symbols/Class.png',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"generic\",\r\n      label: \"STRSYSCLASS\",\r\n      hidden: false\r\n    },\r\n    {\r\n      name: SemTalkMaster.MasterInstance,\r\n      key: SemTalkMaster.MasterInstance,\r\n      hidden: true,\r\n      logo: '/images/symbols/Instance.png',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"generic\",\r\n      label: \"STRDLHTMLOUTINS\"\r\n    },\r\n    {\r\n      name: SemTalkMaster.MasterComment,\r\n      key: SemTalkMaster.MasterComment,\r\n      logo: '/images/symbols/Comment.png',\r\n      width: 60,\r\n      height: 60,\r\n      type: \"generic\",\r\n      label: \"STRCOMMENT\",\r\n      hidden: false\r\n    },\r\n    {\r\n      name: 'Connector',\r\n      key: 'Connector',\r\n      hidden: true,\r\n      logo: '/images/symbols/arrow.gif',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"general\",\r\n      label: \"Connector\"\r\n    },\r\n    {\r\n      name: SemTalkMaster.MasterSubClassOf,\r\n      key: SemTalkMaster.MasterSubClassOf,\r\n      hidden: true,\r\n      logo: '/images/symbols/arrow.gif',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"general\",\r\n      label: \"STRDLGWOPTSUBC\"\r\n    },\r\n    {\r\n      name: SemTalkMaster.MasterProperty,\r\n      key: SemTalkMaster.MasterProperty,\r\n      hidden: true,\r\n      logo: '/images/symbols/connect.gif',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"general\",\r\n      label: \"Property\"\r\n    }\r\n  ];","import { MessageBarType } from \"office-ui-fabric-react\";\n\nexport enum zoomoption {\n  zoomin = 0,\n  zoomout = 1,\n  zoomfit = 2,\n  zoomactual = 3\n}\n// import { ISemTalkDiagram} from '../application/tbase/Interface';\n\nexport interface ITSEditor {\n  graph: mxGraph;\n  sidebar: any;\n  pages: any;\n  initSidebar(sidebarItems: any): any;\n  configShapes(graph: mxGraph, stencil: any[]): void;\n  initCustomPort(pic: any): any;\n  zoom(type: zoomoption): void;\n  resetView(scale: number): any;\n  printPreview(scale?: number, pageFormat?: any, border?: number, \n    x0?: number, y0?: number, borderColor?: any, title?: any, pageSelector?: any): any;\n  togglePageBreaks(): void;\n  togglePanZoom(): void;\n  toggleStencil(): void;\n  updateStyle(cell: mxCell, key: string, value: string): void;\n  groupCells(groupId: any, labelName: string): mxCell;\n  ungroupCells(cells: mxCell[]): mxCell[];\n  getGraphXml(): string;\n  getSelectionCells(): mxCell[];\n  createVertex(value: any, x: number, y: number, \n    width: number, height: number, shapeStyle?: string): mxCell;\n  insertEdge(v1: mxCell, v2: mxCell, style?: string): mxCell;\n  getCellById(id: string): mxCell | undefined;\n  getAllCells(): mxCell[];\n  getChildCells(parent: mxCell, vertices?: boolean, edges?: boolean): mxCell[];\n  removeCells(cells: mxCell[], includeEdges: boolean): void;\n  beginUpdate(): void;\n  endUpdate(): void;\n  removeEventListeners(): void;\n  renameCell(newName: string, cell: mxCell): void;\n  toggleCollapse(cell: mxCell): any;\n  elbowCell(cell: mxCell): any;\n  refresh(): any;\n  clearSelection(): any;\n  startPanning(): any;\n  stopPanning(): any;\n  connectionPoints(): void;\n  resetEditor(xml: string, diagcaption: string, diagid: number, horizontal: boolean, bsetDirection: boolean): any;\n  isHorizontal(): boolean;\n  // updateDiagramData(data: any): any;\n  enableSwimlanes(ishorizontal: boolean, enforce: boolean): any;\n  toggleDirection(shape: mxCell): any;\n  // enableLayout();\n  doLayout(node: any, layoutname: any, parent: any, animate: boolean, horizontal: boolean, invert: boolean): any;\n  getShapeStyle(shapeName: string, shapeType: string): { style: string, isedge: boolean };\n  align(direction: string, cells: mxCell[] | undefined): any;\n  // distribute(direction: string);\n  exportSVG(graph: mxGraph): any;\n  // exportFile(format: string): any;\n  clearCellOverlays(shape: any): any;\n  addOverlay(shp: any, imgpath: any, valign: string, align: string, witdh: number, height: number, dx: number, dy: number,\n    tooltip: string, cursor?: string | null, handler?: () => void): any;\n  gotoPage(diagid: number): any;\n  updateDiaglist(diaglist: { text: string, key: number }[]): any;\n  alert(msg: string, mtype: MessageBarType): void;\n  clearUndo(): void;\n  isUndo(): boolean;\n  isRedo(): boolean;\n  Undo(): void;\n  Redo(): void;\n  preview(xml: any, div: string): void;\n}","import { SemTalkBaseConstant } from \"../tbase/Interface\";\r\nimport { SemTalkMaster } from \"../SemTalkMaster\";\r\nimport { SemTalkStencil } from \"./visiordfsinterface\";\r\nexport const CLASS_STENCIL: SemTalkStencil = [\r\n     {\r\n      name: SemTalkMaster.MasterClass,\r\n      key: SemTalkMaster.MasterClass,\r\n      logo: '/images/symbols/Class.png',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"class\",\r\n      label: \"STRDLHTMLOUTCLA\",\r\n      hidden: false\r\n    },\r\n    {\r\n      name: SemTalkBaseConstant.SLComment,\r\n      key: SemTalkMaster.MasterComment,\r\n      logo: '/images/symbols/Comment.png',\r\n      width: 60,\r\n      height: 60,\r\n      type: \"class\",\r\n      label: \"STRCOMMENT\",\r\n      hidden: false\r\n    },\r\n    {\r\n      name: 'Connector',\r\n      key: 'Connector',\r\n      hidden: true,\r\n      logo: '/images/symbols/connect.gif',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"general\",\r\n      label: \"Connector\"\r\n    },\r\n    {\r\n      name: 'SubClassOf',\r\n      key: 'SubClassOf',\r\n      hidden: true,\r\n      logo: '/images/symbols/arrow.gif',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"general\",\r\n      label: \"SubClassOf\"\r\n    },\r\n    {\r\n      name: 'Property',\r\n      key: 'Property',\r\n      hidden: true,\r\n      logo: '/images/symbols/connect.gif',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"general\",\r\n      label: \"Property\"\r\n    }\r\n  ];","import { SemTalkBaseConstant } from \"../tbase/Interface\";\r\nimport { SemTalkMaster } from \"../SemTalkMaster\";\r\nimport { SemTalkStencil } from \"./visiordfsinterface\";\r\nexport const UMLCLASS_STENCIL: SemTalkStencil = [\r\n    // {\r\n    //   name: SemTalkMaster.MasterClass,\r\n    //   key: SemTalkMaster.MasterClass,\r\n    //   logo: '/images/symbols/Class.png',\r\n    //   width: 80,\r\n    //   height: 60,\r\n    //   type: \"class\",\r\n    //   label: \"STRDLHTMLOUTCLA\"\r\n    // },\r\n    {\r\n      name: SemTalkMaster.MasterUMLClass,\r\n      key: SemTalkMaster.MasterUMLClass,\r\n      logo: '/images/symbols/UML Class.png',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"class\",\r\n      label: \"STRUMLSHAPE\",\r\n      hidden: false\r\n    },\r\n    {\r\n      name: SemTalkBaseConstant.SLComment,\r\n      key: SemTalkMaster.MasterComment,\r\n      logo: '/images/symbols/Comment.png',\r\n      width: 60,\r\n      height: 60,\r\n      type: \"class\",\r\n      label: \"STRCOMMENT\",\r\n      hidden: false\r\n    },\r\n    {\r\n      name: 'Connector',\r\n      key: 'Connector',\r\n      hidden: true,\r\n      logo: '/images/symbols/connect.gif',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"general\",\r\n      label: \"Connector\"\r\n    },\r\n    {\r\n      name: 'SubClassOf',\r\n      key: 'SubClassOf',\r\n      hidden: true,\r\n      logo: '/images/symbols/arrow.gif',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"general\",\r\n      label: \"SubClassOf\"\r\n    },\r\n    {\r\n      name: 'Property',\r\n      key: 'Property',\r\n      hidden: true,\r\n      logo: '/images/symbols/connect.gif',\r\n      width: 80,\r\n      height: 60,\r\n      type: \"general\",\r\n      label: \"Property\"\r\n    }\r\n  ];","/* eslint-disable no-useless-concat */\nimport * as base64 from 'base-64';\nimport * as graph from \"../graph/graph\";\nimport { OB2JSON } from \"../tbase/OB2JSON\";\nimport { Guid } from \"guid-typescript\";\nimport * as lzutf8 from 'lzutf8';\n\nimport {\n  IVisioRDFS, ITermSetItem, SemTalkNavigationEvent,\n  SemTalkStencil, SharePointSettings, SemTalkRibbon\n} from \"../semtalklistener/visiordfsinterface\";\n// für jest:\nimport { mxConstants } from \"mxgraph-js\"; // mxEvent, mxCellOverlay, mxImage, mxEvent, mxPoint\nimport {\n  IObjectBase,\n  ISemTalkDiagram,\n  ISemTalkObject,\n  ISemTalkClass,\n  ISemTalkSystemClass,\n  ISemTalkInstance,\n  ISemTalkNode,\n  ISemTalkAssociation,\n  ISemTalkLabel,\n  SemTalkType,\n  // ISemTalkAttribute,\n  // ISemTalkAttributeType,\n  // SemTalkValueType,\n  SemTalkRelation,\n  ISemTalkAssociationType,\n  SemTalkBaseConstant,\n  SemTalkLanguage, SemTalkLanguageCode,\n  SemTalkObjectBaseEvent,\n  ModelAttribute,\n  ISemTalkDiagramType,\n  ILabelSpec,\n  SemTalkComposeOrder,\n  ISemTalkBusinessClass\n  // ISemTalkMethodType\n  // ISemTalkAssociationType\n} from '../tbase/Interface';\nimport { Process_ElementName } from './processInterface';\nimport './shapes/tsutil_DocumentShape';\nimport './shapes/tsutil_DataStoreShape';\nimport './shapes/tsutil_UMLClassShape';\n\nimport { GetLanguage, Code2Language } from '../tbase/langtools';\nimport { ISemTalkUndo } from '../../ISemTalkUndo';\nimport { SemTalkCookie } from '../../ISemTalkOnline';\n\nimport { Subtask } from './subtask';\nimport { EPC_Subtask } from './subtask/epc/epcsubtask';\nimport { BPMN_Subtask } from './subtask/bpmn/bpmnsubtask';\nimport { citForms_Subtask } from './subtask/citforms/citformssubtask';\n\n\n/* tslint:disable:member-ordering */\n/* tslint:disable:no-empty */\nimport { ITSEditor } from '../../ITSEditor';\n// import { setShape } from \"./stgoto\";\nimport { ISPExplorer } from \"../explorer/spexplorerinterface\";\n\nimport { MessageBarType } from 'office-ui-fabric-react';\nimport { CLASS_SHAPES } from './class-stencil';\nimport { GENERIC_SHAPES } from './generic-stencil';\nimport { ORGCHART_SHAPES } from './org-stencil';\nimport { SemTalkMaster } from \"../SemTalkMaster\";\n\nimport { GENERIC_STENCIL } from './Stencil_GENERIC';\nimport { CLASS_STENCIL } from './Stencil_CLASS';\nimport { UMLCLASS_STENCIL } from './Stencil_UMLCLASS';\nimport { round } from 'lodash';\n// import { OB2XML } from '../tbase/OB2XML';\n// import { cit_DiagramTypeName } from './subtask/citforms/citinterface';\n\nexport class VisioRDFS implements IVisioRDFS {\n  //public vispage: graph.Graph = new graph.Graph;\n  //public graph: graph.Graph = new graph.Graph;\n  public graph: mxGraph | graph.Graph;\n  public explorer!: ISPExplorer;\n  public tseditor!: ITSEditor;\n  // private shape: any | null;\n  public visdoc: { [id: string]: graph.Graph } = {};\n  public masters: SemTalkStencil;\n  public base!: IObjectBase;\n  public page: ISemTalkDiagram | null | undefined;\n  public guilanguage: SemTalkLanguageCode = SemTalkLanguageCode.German;\n  public noevents: boolean = false;\n  public site: string = \"\";\n  public template: string = \"\";\n  public horizontal: boolean = false;\n  public showhyperlinkmarker: boolean = false;\n  private resx_SemList: any;\n  private resx_SemTalk: any;\n  public IsAutoSave: boolean = false;\n  private transaction: string = \"\";\n  public readonly: boolean = false;\n  public tempId: number = 0;\n  private undoManger: ISemTalkUndo | null;\n  private overridables: any = {};\n  private highlight: mxCellHighlight | undefined;\n  public hasVector = (_s: ISemTalkObject): any => undefined;\n  public ismodified = false;\n\n\n  // public CUSTOMPROC_STENCIL: SemTalkStencil = [];\n  // public CLASS_STENCIL: SemTalkStencil = [];\n  // public GENERIC_STENCIL: SemTalkStencil = [];\n  // private PROC_STENCIL: SemTalkStencil = [];\n\n  public stencil_registry: { [key: string]: SemTalkStencil } = {};\n\n  constructor(base: IObjectBase | null, undoManger: ISemTalkUndo | null) {\n    this.undoManger = undoManger;\n    if (base) this.base = base;\n    this.graph = new graph.Graph(this);\n    this.registerOverridable(\"GetShapeStyle\", this.GetShapeStyle);\n    this.registerOverridable(\"initPage\", this.initPage);\n    this.registerOverridable(\"quickShapes\", this.quickShapes);\n    this.registerOverridable(\"EnsureInstance\", this.EnsureInstance);\n    this.registerOverridable(\"masterName\", this.masterName);\n    this.registerOverridable(\"isValid\", this.isValid);\n    this.registerOverridable(\"filterRelations\", this.filterRelations);\n    this.registerOverridable(\"resetSubTaskStyle\", this.resetSubTaskStyle);\n    this.registerOverridable(\"updateLabelStyle\", this.updateLabelStyle);\n    this.registerOverridable(\"initStencil\", this.initStencil);\n    this.registerOverridable(\"setStencil\", this.setStencil);\n    this.registerOverridable(\"renderUserTab\", this.renderUserTab);\n    this.registerOverridable(\"captionUserTab\", this.captionUserTab);\n    this.registerOverridable(\"getLabel\", this.getLabel);\n    this.registerOverridable(\"BeforeDocumentSave\", this.BeforeDocumentSave);\n    this.registerOverridable(\"getRibbon\", this.getRibbon);\n    this.registerOverridable(\"AddonCommand\", this.AddonCommand);\n    this.registerOverridable(\"renderSubTaskDialog\", this.renderSubTaskDialog);\n    return this;\n  }\n\n  public currentShape(): any | undefined {\n    if (this.graph) {\n      const sel = this.graph.getSelectionCells();\n      if (sel && sel.length > 0) {\n        return sel[0];\n      }\n    }\n    return undefined;\n  }\n  public init(ob: IObjectBase | null, lan: SemTalkLanguageCode): void {\n    console.debug(\"init VisioRDFS\");\n    if (this.graph) {\n      if (this.graph instanceof graph.Graph) {\n        this.graph.sem = this;\n      }\n    }\n    this.noevents = true;\n    if (ob) {\n      ob._loading = true;\n      this.base = ob;\n      ob._callbacks.push(this);\n      if (ob.GetModelAttribute(Process_ElementName.SLProc) === \"eEPK\")\n        ob.SetModelAttribute(ModelAttribute.BPMNMode, \"\");\n      if (ob.GetModelAttribute(ModelAttribute.Template) === \"cit_intelliForm_dialog.vst\")\n        ob.SetModelAttribute(ModelAttribute.BPMNMode, \"\");\n    }\n\n    this.guilanguage = lan;\n    this.resx_SemList = require(\"./SemList.json\");\n    this.resx_SemTalk = require(\"./SemTalk.json\");\n\n    if (ob) {\n      this.initComment();\n      ob._loading = false;\n\n      let bmode = this.base.GetModelAttribute(ModelAttribute.BPMNMode);\n      let isbpmn = (bmode && bmode.length > 0);\n      this.horizontal = false;\n      if (isbpmn) {\n        this.template = \"bpmn\";\n      } else {\n        let tpl = ob.GetModelAttribute(ModelAttribute.Template);\n        if (tpl.indexOf(\"epc\") > -1) {\n          this.template = \"epc\";\n        }\n        if (tpl.indexOf(\"cit\") > -1) {\n          this.template = \"cit\";\n        }\n      }\n    }\n    this._ribbon = null;\n    this._toolbar = null;\n\n    this.noevents = false;\n  }\n\n  public patchSubTask(ob: IObjectBase): void {\n    this.noevents = true;\n    ob._loading = true;\n    let bmode = this.base.GetModelAttribute(ModelAttribute.BPMNMode);\n    let tpl = ob.GetModelAttribute(ModelAttribute.Template);\n    let isbpmn = (bmode && bmode.length > 0);\n    this.horizontal = false;\n    if (isbpmn) {\n      BPMN_Subtask.patch(this);\n      this.template = \"bpmn\";\n    } else {\n      if (tpl.indexOf(\"epc\") > -1) {\n        this.template = \"epc\";\n        EPC_Subtask.patch(this);\n      } else {\n        if (tpl.indexOf(\"cit\") > -1) {\n          citForms_Subtask.patch(this);\n        } else {\n          Subtask.patch(this);\n        }\n      }\n    }\n    ob._loading = false;\n    this.noevents = false;\n  }\n  private registerOverridable(name: string, fn: any) {\n    if (!this.overridables[name]) {\n      this.overridables[name] = fn;\n    }\n  }\n  public getOverridable(name: string): any {\n    return this.overridables[name];\n  }\n\n  public BeforeDocumentSave(): boolean {\n\n    // @Edgardo: Dieser Code sollte in die citformssubtask.init\n    // sem.BeforeDocumentSave = (): boolean = { ..\n\n    // switch (this.template) {\n    //   case \"cit\": {\n    //     // const o2x = new OB2XML();\n    //     this.noevents = true;\n    //     for (let m of this.base.AllModelAttributes()) {\n    //       if (m.startsWith(\"MXG_\")) {\n    //         this.base.SetModelAttribute(m, undefined);\n    //       }\n    //     }\n    //     this.noevents = false;\n    //     let lc = this.base.FindSystemClass(SemTalkBaseConstant.SLLanguage);\n    //     let co = this.base.FindSystemClass(SemTalkBaseConstant.SLComment);\n    //        let so = this.base.FindAssociationType(SemTalkBaseConstant.SLSubClassOf);\n    //        let io = this.base.FindAssociationType(SemTalkBaseConstant.SLInstanceOf);\n    //     let de = this.base.FindInstance(SemTalkLanguage.German);\n    //     let en = this.base.FindInstance(SemTalkLanguage.English);\n    //     if (lc) {\n    //       for (let l of lc.Instances()) {\n    //         if (l.ObjectName !== SemTalkLanguage.German &&\n    //           l.ObjectName !== SemTalkLanguage.English) {\n    //           lc.DeleteSynonym(l.ObjectName);\n    //           if (co) co.DeleteSynonym(l.ObjectName);\n    //           if (so) so.DeleteSynonym(l.ObjectName);\n    //           if (io) io.DeleteSynonym(l.ObjectName);\n    //           if (de) de.DeleteSynonym(l.ObjectName);\n    //           if (en) en.DeleteSynonym(l.ObjectName);\n    //           l.Delete();\n    //         }\n    //       }\n    //     }\n\n    //     const xml: string = o2x.SaveXML(this.base);\n    //     try {\n    //       const encxml = base64.encode(xml);\n    //       // const encxml = lzutf8.compress(xml);\n    //       this.base.SetModelAttribute(\"CITXML\", encxml);\n    //     } catch (e) {\n    //       console.debug(e);\n    //     }\n    //   }\n    // }\n    return true;\n  }\n\n  public initSubTask(_ob: IObjectBase): void {\n\n    this.GetShapeStyle = this.getOverridable(\"GetShapeStyle\");\n    this.initPage = this.getOverridable(\"initPage\");\n    this.quickShapes = this.getOverridable(\"quickShapes\");\n    this.EnsureInstance = this.getOverridable(\"EnsureInstance\");\n    this.masterName = this.getOverridable(\"masterName\");\n    this.isValid = this.getOverridable(\"isValid\");\n    this.filterRelations = this.getOverridable(\"filterRelations\");\n    this.resetSubTaskStyle = this.getOverridable(\"resetSubTaskStyle\");\n    this.updateLabelStyle = this.getOverridable(\"updateLabelStyle\");\n    this.initStencil = this.getOverridable(\"initStencil\");\n    this.setStencil = this.getOverridable(\"setStencil\");\n    this.renderUserTab = this.getOverridable(\"renderUserTab\");\n    this.captionUserTab = this.getOverridable(\"captionUserTab\");\n    this.getLabel = this.getOverridable(\"getLabel\");\n    this.BeforeDocumentSave = this.getOverridable(\"BeforeDocumentSave\");\n    this._ribbon = null;\n    this._toolbar = null;\n    this.getRibbon = this.getOverridable(\"getRibbon\");\n    this.AddonCommand = this.getOverridable(\"AddonCommand\");\n    this.renderSubTaskDialog = this.getOverridable(\"renderSubTaskDialog\");\n\n    switch (this.template) {\n      case \"bpmn\":\n        BPMN_Subtask.init(this);\n        break;\n      case \"epc\":\n        EPC_Subtask.init(this);\n        break;\n      case \"cit\":\n        citForms_Subtask.init(this);\n        break;\n      default:\n        Subtask.init(this);\n    }\n  }\n  private initComment() {\n    let comof = this.base.GetModelAttribute(ModelAttribute.SLCommentOf);\n    if (comof === undefined) {\n      comof = SemTalkBaseConstant.SLDefinitionOf;\n      this.base.SetModelAttribute(ModelAttribute.SLCommentOf, comof);\n    }\n    if (this.base.FindAssociationType(comof) === null)\n      this.base.MakeAssociationType(SemTalkRelation.SemTalkSystemRelation, comof);\n\n    const f = this.base.FindAssociationType(comof);\n    if (f) {\n      //    f.Style = \"edgeStyle=loopEdgeStyle;shape=flexArrow;dashed=1;endArrow=classic;html=1\";\n      f.Style = \"shape=flexArrow;dashed=1;endArrow=classic;html=1\";\n    }\n\n    let com = this.base.GetModelAttribute(ModelAttribute.SLComment);\n    if (com === undefined) {\n      com = SemTalkBaseConstant.SLComment;\n      this.base.SetModelAttribute(ModelAttribute.SLComment, com);\n    }\n    let fc = this.base.FindSystemClass(com);\n    if (fc === null) {\n      fc = this.base.MakeSystemClass(com);\n      fc.Style = \"fillColor=yellow;shadow=1;strokeWidth=2;\";\n    }\n  }\n\n  public getResStrListener(str: string, lang?: SemTalkLanguageCode): string {\n    if (lang === undefined) {\n      lang = this.guilanguage;\n    }\n    if (lang === SemTalkLanguageCode.English) {\n      const s = this.resx_SemList[str];\n      if (s !== undefined) {\n        return s.value;\n      }\n      return str;\n    } else {\n      const s = this.resx_SemList[str];\n      if (s !== undefined) {\n        // if (lang !== \"de\") {\n        //   if (lang === \"sc\") lang = \"cn-simplified\";\n        //   if (lang === \"tc\") lang = \"cn-traditional\";\n        // }\n        let v = s[lang];\n        if (v === undefined) {\n          return s.value;\n        }\n        return v;\n      } else {\n        return str;\n      }\n    }\n  }\n  public getResStr(str: string, lang?: SemTalkLanguageCode): string {\n    if (lang === undefined) {\n      lang = this.guilanguage;\n    }\n    if (lang === SemTalkLanguageCode.English) {\n      const s = this.resx_SemTalk[str];\n      if (s !== undefined) {\n        return s.value;\n      }\n      return str;\n    } else {\n      const s = this.resx_SemTalk[str];\n      if (s !== undefined) {\n        // if (lang !== \"de\") {\n        //   if (lang === \"sc\") lang = \"cn-simplified\";\n        //   if (lang === \"tc\") lang = \"cn-traditional\";\n        // }\n        let v = s[lang];\n        if (v === undefined) {\n          return s.value;\n        }\n        return v;\n      } else {\n        return str;\n      }\n    }\n  }\n  public FindShapeByShapeID(shapeid: string): mxCell | null {\n    // if (shapeid.startsWith(\"Sheet.\")) {\n    //     shapeid = \"mx\" + shapeid;\n    // }\n    if (this.tseditor) {\n      let cells = this.tseditor.getAllCells();\n      for (const i in cells) {\n        const s = cells[i];\n        if (this.getMxId(s) === shapeid || s.shapeid === shapeid || s.shapeid === \"mx\" + shapeid) {\n          return s;\n        }\n      }\n    } else {\n      // let cells = (this.graph as graph.Graph).getChildCells(null, true, true);\n      // for (const i in cells) {\n      //   const s = cells[i];\n      //   if (s.shapeid === shapeid || s.shapeid === \"mx\" + shapeid) {\n      //     return s;\n      //   }\n      // }\n    }\n    //   for (const s of cells) {\n\n    return null;\n  }\n  public FindShape(obj: ISemTalkObject): any | null {\n    let cells: any[];\n    if (this.tseditor) {\n      cells = this.tseditor.getAllCells();\n      //  cells = this.tseditor.getChildCells(null, true, true);\n    } else {\n      cells = (this.graph as graph.Graph).getChildCells(null, true, true);\n    }\n    //    for (const s of cells) {\n    for (const i in cells) {\n      const s = cells[i];\n      if (s.objectid === obj.ID) {\n        return s;\n      }\n    }\n    return null;\n  }\n\n  private inheritStyle = (style: string, s0: string): string => {\n    if (style.length > 0 && style !== s0) {\n      let shpsettingsobj: any = {};\n      for (const shpsetting of s0.split(\";\")) {\n        if (shpsetting.length > 0) {\n          const n = shpsetting.split(\"=\")[0];\n          shpsettingsobj[n] = shpsetting.split(\"=\")[1];\n        }\n      }\n      let iscustom = shpsettingsobj[\"custom\"] === \"1\";\n      for (const syssetting of style.split(\";\")) {\n        if (syssetting.length > 0) {\n          const n = syssetting.split(\"=\")[0];\n          const v = syssetting.split(\"=\")[1];\n          if (n.length > 0 && n !== \"shape\") {\n            if (!iscustom || shpsettingsobj[n] === undefined) {\n              if (shpsettingsobj[n] !== v) {\n                shpsettingsobj[n] = v;\n              }\n            }\n          }\n          // s0 = s0 + syssetting + \";\";\n        }\n      }\n      s0 = \"\";\n      for (let n in shpsettingsobj) {\n        s0 += n + \"=\" + shpsettingsobj[n] + \";\";\n      }\n    }\n    return s0;\n  }\n  public resetSubTaskStyle = (s0: string): string => {\n    // let settings = s0.split(\";\");\n    // s0 = \"\";\n    // const sysattr: string[] = [\"shape\"];\n    // for (const setting of settings) {\n    //   const n = setting.split(\"=\")[0];\n    //   if (n.length > 0 && sysattr.indexOf(n) < 0) {\n    //     s0 = s0 + setting + \";\";\n    //   }\n    // }\n    return s0;\n  }\n  public updateLabelStyle = (_obj: ISemTalkObject, _lsp: ILabelSpec, style: string): string => {\n    // Hook for subtask\n    return style;\n  }\n\n  public UpdateLabel = (obj: ISemTalkObject) => {\n    let style = \"\";\n    const sysclass = obj.SystemClass();\n    const issysclass = obj.ObjectBase.IsSystemClass(obj);\n    if (sysclass === null)\n      style = \"\";\n    if (sysclass) {\n      style = sysclass.Style;\n    }\n    if (style === undefined) {\n      style = \"\";\n    }\n    const s2 = \"fontStyle=\" + String(mxConstants.FONT_UNDERLINE + mxConstants.FONT_BOLD) + \";\";\n    if (obj.Refinement !== null || obj.ExtRefinement !== null) {\n      const ref = obj.ObjectBase.GetModelAttribute(ModelAttribute.underlineRefinements);\n      if (ref === \"1\") {\n        if (!style.endsWith(\";\")) style += \";\";\n        style += s2;\n      }\n    }\n\n    if (issysclass) {\n      const s3 = \"strokeWidth=5\" + \";\";\n      if (!style.endsWith(\";\")) style += \";\";\n      style += s3;\n    }\n\n    const showattachments: boolean = obj.Attachments().length > 0;\n    let att: ISemTalkAssociation | null = null;\n    if (showattachments) {\n      att = obj.Attachments()[0];\n    }\n    const overlayPath: string = \"/Support/images/overlays/\";\n    for (const nd of obj.Nodes()) {\n      // const lbl: stinterface.LabelSpec=obj.UpdateLabel(nd.Master);\n      const shp = this.FindShapeByShapeID(nd.ShapeID);\n      if (this.graph.isEditing(shp)) {\n        break;\n      }\n      if (shp !== null) {\n        if (this.tseditor) {\n          this.tseditor.clearCellOverlays(shp);\n        }\n        if (this.showhyperlinkmarker && this.tseditor && showattachments && this.site.length > 0) {\n          // let overlay = new mxCellOverlay(new mxImage(this.site + overlayPath + \"information.png\", 18, 18), 'Add child');\n          if (att !== null) {\n            let lbl: string = att.GetValue(\"label\");\n            if (lbl !== null && lbl.length > 0) {\n            } else {\n              lbl = att.ToObject.ID2NameNsp();\n            }\n            this.tseditor.addOverlay(shp, this.site + overlayPath + \"information.png\", mxConstants.ALIGN_TOP,\n              mxConstants.ALIGN_LEFT, 18, 18, 8, 0, lbl, 'hand', () => {\n                if (att !== null) {\n                  try {\n                    window.open(att.ToObject.ObjectName, \"_blank\");\n                  } catch (e) {\n                    console.debug(\"addOverlay: \" + e);\n                  }\n                }\n              });\n          }\n        }\n\n        let s0: any = shp.style;\n        if (s0 === undefined) s0 = style;\n        if (s0[\"style\"] !== undefined) s0 = s0[\"style\"];\n        s0 = s0.replace(s2, \"\");\n\n        if (s0.indexOf('entryX') > 0 || s0.indexOf('entryY') > 0) {\n          if (sysclass) s0 = sysclass.Style;\n        }\n        // inherit styles from sysclass in case the shape has no custom styles\n        s0 = this.inheritStyle(style, s0);\n\n        const lsp = obj.UpdateLabel(nd.Master);\n\n        s0 = this.resetSubTaskStyle(s0);\n        style = this.updateLabelStyle(obj, lsp, s0);\n\n        const noev = this.noevents;\n        //  shp.label = nd.ObjectCaption;\n        shp.objectid = nd.Model.ID;\n\n        if (lsp.newtxt === SemTalkMaster.MasterClass + \".\" + nd.Model.ID) {\n          lsp.newtxt = \"\";\n        }\n        if (lsp.newtxt === SemTalkMaster.MasterSystemClass + \".\" + nd.Model.ID) {\n          lsp.newtxt = \"\";\n        }\n        if (obj.ObjectType === SemTalkType.SemTalkInstance &&\n          lsp.newtxt === obj.SystemClass()?.ObjectCaption) {\n          lsp.newtxt = \"\";\n        }\n\n        this.noevents = true;\n        if (lsp.newtxt !== undefined && lsp.newtxt.length === 0\n          && lsp.newtxt0 && lsp.newtxt0.length > 0) {\n          // this.editor.labelChanged(shp, lsp.newtxt0, null);\n          // this.editor.renameCell(lsp.newtxt0, shp);\n          if (obj.ObjectType === SemTalkType.SemTalkInstance &&\n            lsp.newtxt0 === obj.SystemClass()?.ObjectName) {\n            lsp.newtxt0 = \"\";\n          }\n          if (shp.value !== lsp.newtxt0) {\n            shp.value = lsp.newtxt0;\n          }\n\n        } else {\n          // this.editor.labelChanged(shp, lsp.newtxt, null);\n          // this.editor.renameCell(lsp.newtxt, shp);\n          if (shp.value !== lsp.newtxt) {\n            shp.value = lsp.newtxt;\n          }\n        }\n        if (lsp.newtxt1.length > 0) {\n          shp.value += \"\\n\" + lsp.newtxt1;\n        }\n\n        if (style.length > 0) {\n          //  Das ist BPMN only:\n          // if (obj.Refinement === null && s0.indexOf(\"refinement=\") !== -1) {\n          //   let tmpStyle: string[] = s0.split(\";\");\n          //   let newStyle: string = \"\";\n          //   for (let tmpstr of tmpStyle) {\n          //     if (tmpstr.indexOf(\"refinement=\") !== -1 && tmpstr.indexOf(\"fontStyle=\") !== -1) {\n          //       if (newStyle === \"\") {\n          //         newStyle = tmpstr;\n          //       } else {\n          //         newStyle = newStyle + \";\" + tmpstr;\n          //       }\n          //     }\n          //   }\n          //   s0 = newStyle;\n          // }\n          // s0 = s0 + style;\n          // shp.style = s0;\n          shp.style = style;\n          // }\n        } else {\n          if (s0.indexOf(s2) > -1) {\n            s0 = s0.replace(s2, '');\n          }\n          shp.style = s0;\n        }\n        if (this.base.IsAssociation(obj)) {\n          let rel = obj as ISemTalkAssociation;\n          let relcla = rel.ClassOf();\n          if (relcla.ObjectName === SemTalkBaseConstant.SLSubClassOf ||\n            relcla.ObjectName === SemTalkBaseConstant.SLInstanceOf) {\n            shp.style = relcla.Style;\n            shp.value = \"\";\n            // let v =this.hasVector(rel.FromObject);\n            // if (v) {\n            //   let dst = v[rel.ToObject.ID2Name];\n            //   if (dst) {\n            //     if (shp.style.indexOf(\"strokeWidth=1\") < 0) {\n            //       shp.style += \"strokeWidth=\" + String((Number(dst)*5).toPrecision(1)) + \";\";\n            //     }\n            //   }\n            // }\n          } else {\n            if (this.base.IsClass(rel.FromObject) && this.base.IsClass(rel.ToObject)) {  // && relcla.Style === ''\n              // shp.Style = \"edgeStyle=loopEdgeStyle;shape=flexArrow;endArrow=classic;html=1;fillColor=#ffffff;\";\n              shp.style = relcla.Style;\n              let sw = \"2\";\n              if (rel.FindAttribute(\"similarity\")) {\n                let s = round(Number.parseFloat(rel.GetValue(\"similarity\")) * 3, 0) + 1;\n                sw = s.toString();\n                shp.value = \"\";\n              } else {\n                shp.value = relcla.ID2NameNsp();\n              }\n              if (shp.style === \"\") {\n                shp.style = \"shape=flexArrow;endArrow=classic;html=1;fillColor=#ffffff;strokeWidth=\" + sw + \";\";\n              } else {\n                if (shp.style.indexOf(\"strokeWidth\") < 0) {\n                  shp.style = shp.style + \";strokeWidth=\" + sw + \";\";\n                }\n              }\n            }\n          }\n        }\n        // }\n        shp.label = shp.value;\n        if (this.hasVector && this.hasVector(obj)) {\n          if (shp.style.indexOf(\"shadow=1\") < 0) {\n            shp.style += \"shadow=1;\";\n          }\n        }\n        // if (shp.edge) {\n        //   shp.style=\"edgeStyle=loopEdgeStyle;endArrow=none;dashed=1;html=1;\";\n        // }\n        // if (shp.shapeName === SemTalkMaster.MasterUMLClass) {\n        //   this.graph.updateCellSize(shp,true);\n        // }\n\n        this.noevents = noev;\n      }\n    }\n  }\n  private UpdateLabelByID(id: number) {\n    const obj = this.base.FindObjectByID(id);\n    if (obj !== null) {\n      this.UpdateLabel(obj);\n    }\n  }\n  public UpdateByID(id: number) {\n    if (this.noevents) { return; }\n    const obj = this.base.FindObjectByID(id);\n    if (this.tseditor) {\n      this.tseditor.beginUpdate();\n    }\n    if (obj !== null) {\n      this.UpdateLabel(obj);\n      this.UpdateDependents(obj);\n    }\n    if (this.tseditor) {\n      this.tseditor.endUpdate();\n      this.tseditor.refresh();\n    }\n  }\n  public UpdateDependents(obj: ISemTalkObject) {\n    if (obj.ObjectBase.IsClass(obj)) {\n      const cla = obj as ISemTalkClass;\n      for (const ins of cla.Instances()) {\n        this.UpdateLabel(ins);\n      }\n      for (const cmp of cla.InvCompositions()) {\n        this.UpdateDependents(cmp.Owner);\n      }\n    } else {\n      if (obj.ObjectBase.IsAssociation(obj)) {\n        this.UpdateLabel((obj as ISemTalkAssociation).FromObject);\n        this.UpdateLabel((obj as ISemTalkAssociation).ToObject);\n      }\n    }\n    for (const rel of obj.Associations()) {\n      this.UpdateLabel(rel.ToObject);\n    }\n    for (const rel of obj.InvAssociations()) {\n      this.UpdateLabel(rel.FromObject);\n    }\n  }\n\n  public visSelectionChanged(shape: mxCell) {\n    if (this.noevents) { return; }\n    if (shape !== null) {\n      const oid = shape.objectid;\n      // const sid = shape.shapeid;\n      const obj = this.base.FindObjectByID(oid);\n      if (obj !== null) {\n        this.base.PostEvent(SemTalkNavigationEvent.gotoObject, obj);\n      }\n      // const shp = this.FindShapeByShapeID(sid);\n    }\n  }\n  public visCellSystemClass(oid: number): ISemTalkSystemClass | null {\n    const obj = this.base.FindObjectByID(oid);\n    if (obj !== null) {\n      if (this.base.IsClass(obj)) {\n        return (obj as ISemTalkClass).SystemClass();\n      } else {\n        return (obj as ISemTalkInstance).ClassOf().SystemClass();\n      }\n    }\n    return null;\n  }\n\n  public masterName = (key: string): string => {\n    if (this.masters)\n      for (let m of this.masters) {\n        if (m.key === key)\n          return m.name;\n        switch (key) {\n          case \"Class\":\n            return SemTalkMaster.MasterClass;\n          case \"UMLClass\":\n            return SemTalkMaster.MasterUMLClass;\n          case \"SystemClass\":\n            return SemTalkMaster.MasterSystemClass;\n          case \"Comment\":\n            return SemTalkMaster.MasterComment;\n          case \"Instance\":\n            return SemTalkMaster.MasterInstance;\n        }\n      }\n    return key;\n  }\n  public visShapesCloned(shapes: mxCell[]) {\n    for (let c of shapes) {\n      if (c.isVertex()) {\n        let oid = c[\"objectid\"];\n        const oldobj = this.base.FindInstanceByID(oid);\n        c[\"objectid\"] = undefined;\n        c[\"shapeid\"] = undefined;\n        if (c.shapeName === undefined) {\n          if (oldobj !== null) {\n            const sc = oldobj.SystemClass();\n            if (sc !== null) {\n              c.shapeName = this.masterName(sc.ObjectName);\n            }\n          }\n        }\n        this.visShapeAdded(c);\n        let newoid = c[\"objectid\"];\n        let newobj = this.base.FindInstanceByID(newoid);\n        if (newobj && oldobj) {\n          newobj.SetClass(oldobj.ClassOf());\n          newobj.Clone(oldobj);\n        }\n      }\n    }\n    for (let c of shapes) {\n      if (c.isEdge()) {\n        const oid = c[\"objectid\"];\n        const oldlnk = this.base.FindInstanceByID(oid);\n        c[\"objectid\"] = undefined;\n        c[\"shapeid\"] = undefined;\n        if (c.shapeName === undefined) {\n          if (oldlnk !== null) {\n            const sc = oldlnk.SystemClass();\n            if (sc !== null) {\n              c.shapeName = this.masterName(sc.ObjectName);\n            }\n          }\n        }\n        this.visShapeAdded(c);\n        this.visConnectionAdded(undefined, c, c.source, c.target);\n        let newoid = c[\"objectid\"];\n        let newobj = this.base.FindInstanceByID(newoid);\n        if (newobj && oldlnk) {\n          newobj.Clone(oldlnk);\n        }\n      }\n    }\n  }\n  private EnsureUses(c: mxCell) {\n    let dis: ISemTalkAssociationType | null = null;\n    let parent: mxCell = c.parent;\n\n    if (parent && parent.id === '1') {\n      if (this.tseditor) {\n        let x = c.geometry.x;\n        let y = c.geometry.y;\n        const swimlane = this.tseditor.graph.getSwimlaneAt(x, y, parent);\n        if (swimlane !== null) {\n          parent = swimlane;\n          // console.debug(swimlane);\n        }\n      }\n    }\n    if (parent && parent.id !== '1') {\n      const oid = c[\"objectid\"];\n      const src = this.base.FindInstanceByID(oid);\n      const rid = parent[\"objectid\"];\n      let trg: ISemTalkObject | null = null;\n      const sla = this.base.FindInstanceByID(rid);\n      if (sla !== null) {\n        if (dis === null) dis = this.base.FindAssociationType(SemTalkBaseConstant.SLDisplays);\n        if (dis !== null) {\n          let lnks = sla.LinkedObjects(dis);\n          if (lnks && lnks !== null && lnks.length === 1) {\n            trg = lnks[0];\n          }\n        }\n      }\n      // let noev = this.noevents;\n      // this.noevents = true;\n      if (src && trg !== null) {\n        let urel = this.base.GetModelAttribute(Process_ElementName.SLUses);\n        let isinv = false;\n        if (urel === undefined) {\n          isinv = true;\n          urel = this.base.GetModelAttribute(Process_ElementName.SLInvUses);\n        }\n        const ass = this.base.FindAssociationType(urel);\n        if (ass)\n          if (!isinv) {\n            if (ass && !src.HasDirectLink(ass, trg)) {\n              for (let lnk of src.Links(ass)) {\n                if (lnk.ToObject.ObjectName !== trg.ObjectName) {\n                  lnk.Delete();\n                }\n              }\n              src.MakeAssociation(ass, trg);\n            }\n          } else {\n            if (ass && !trg.HasDirectLink(ass, src)) {\n              for (let lnk of src.InvLinks(ass)) {\n                if (lnk.FromObject.ObjectName !== trg.ObjectName) {\n                  lnk.Delete();\n                }\n              }\n              trg.MakeAssociation(ass, src);\n            }\n          }\n      }\n      // this.noevents = noev;\n    } else {\n    }\n  }\n  public UpdateSwimlaneContent(shape: mxCell) {\n    if (shape === null || shape === undefined) return;\n    if (shape.children === null) return;\n    let dis: ISemTalkAssociationType | null = this.base.FindAssociationType(SemTalkBaseConstant.SLDisplays);\n    const rid = shape[\"objectid\"];\n    const sla = this.base.FindInstanceByID(rid);\n    let trg: ISemTalkObject | null = null;\n    if (sla !== null) {\n      if (dis !== null) {\n        let lnks = sla.LinkedObjects(dis);\n        if (lnks && lnks !== null && lnks.length === 1) {\n          trg = lnks[0];\n        }\n      }\n    }\n    const act = this.base.GetModelAttribute(Process_ElementName.SLActivity);\n    let urel = this.base.GetModelAttribute(Process_ElementName.SLUses);\n    let isinv = false;\n    if (urel === undefined) {\n      isinv = true;\n      urel = this.base.GetModelAttribute(Process_ElementName.SLInvUses);\n    }\n    const ass = this.base.FindAssociationType(urel);\n    if (ass)\n      for (let c of shape.children) {\n        if (c.isVertex())\n          if (this.masterName(c.shapeKey) === act) {\n            const oid = c[\"objectid\"];\n            const src = this.base.FindInstanceByID(oid);\n            // let noev = this.noevents;\n            // this.noevents = true;\n            if (src && trg !== null) {\n              if (!isinv) {\n                if (ass && !src.HasDirectLink(ass, trg)) {\n                  for (let lnk of src.Links(ass)) {\n                    if (lnk.ToObject.ObjectName !== trg.ObjectName) {\n                      lnk.Delete();\n                    }\n                  }\n                  src.MakeAssociation(ass, trg);\n                }\n              } else {\n                if (ass && !trg.HasDirectLink(ass, src)) {\n                  for (let lnk of src.InvLinks(ass)) {\n                    if (lnk.FromObject.ObjectName !== trg.ObjectName) {\n                      lnk.Delete();\n                    }\n                  }\n                  trg.MakeAssociation(ass, src);\n                }\n              }\n            }\n            // this.noevents = noev;\n          }\n      }\n  }\n  public visShapesMoved(shapes: mxCell[]) {\n    let ass: ISemTalkAssociationType | null = null;\n    let isinv = false;\n    let dis: ISemTalkAssociationType | null = null;\n    const actname = this.base.GetModelAttribute(Process_ElementName.SLActivity);\n    // const act = this.base.FindSystemClass(actname);\n    // if (act) {\n    for (let c of shapes) {\n      if (c.isVertex())\n        if (c.parent && c.parent.id !== '1') {\n          let mname = this.masterName(c.shapeKey);\n          if (mname === actname) {\n            const oid = c[\"objectid\"];\n            const src = this.base.FindInstanceByID(oid);\n            //  && src.IsInstance(act)\n            if (src) {\n              const rid = c.parent[\"objectid\"];\n              let trg: ISemTalkObject | null = null;\n              const sla = this.base.FindInstanceByID(rid);\n              if (sla !== null) {\n                if (dis === null) dis = this.base.FindAssociationType(SemTalkBaseConstant.SLDisplays);\n                if (dis !== null) {\n                  let lnks = sla.LinkedObjects(dis);\n                  if (lnks && lnks !== null && lnks.length === 1) {\n                    trg = lnks[0];\n                  }\n                }\n              }\n              // let noev = this.noevents;\n              // this.noevents = true;\n              if (src && trg !== null) {\n                if (ass === null) {\n                  let urel = this.base.GetModelAttribute(Process_ElementName.SLUses);\n                  if (urel === undefined) {\n                    isinv = true;\n                    urel = this.base.GetModelAttribute(Process_ElementName.SLInvUses);\n                  }\n                  ass = this.base.FindAssociationType(urel);\n                }\n                if (ass)\n                  if (!isinv) {\n                    if (ass && !src.HasDirectLink(ass, trg)) {\n                      for (let lnk of src.Links(ass)) {\n                        if (lnk.ToObject.ObjectName !== trg.ObjectName) {\n                          lnk.Delete();\n                        }\n                      }\n                      src.MakeAssociation(ass, trg);\n                    }\n                  } else {\n                    if (ass && !trg.HasDirectLink(ass, src)) {\n                      for (let lnk of src.InvLinks(ass)) {\n                        if (lnk.FromObject.ObjectName !== trg.ObjectName) {\n                          lnk.Delete();\n                        }\n                      }\n                      trg.MakeAssociation(ass, src);\n                    }\n                  }\n              }\n              // this.noevents = noev;\n            } else {\n            }\n          }\n        }\n    }\n    // }\n  }\n  public visShapesCopied(shapes: mxCell[]) {\n    this.visShapesCloned(shapes);\n  }\n  public getMxId = (shape: mxCell): string => {\n    if (shape === undefined) {\n      // eslint-disable-next-line no-throw-literal\n      throw (\"getMxId\");\n    }\n    if (shape.shapeid === undefined) {\n      const g: string = Guid.create().toString();\n      shape.shapeid = g;\n      // return shape.mxObjectId;\n    }\n    return shape.shapeid;\n  }\n  public EnsureClass = (mst: string, diagtype: ISemTalkDiagramType): ISemTalkClass => {\n    this.base.maxid = this.base.maxid + 1;\n    let cname = mst + \".\" + this.base.maxid;\n    let clobj: ISemTalkClass;\n    if (diagtype.Root !== null) {\n      cname = diagtype.Root.ObjectName.substr(0, 2) + \"#\" + cname;\n      if (diagtype.Root.ObjectName === this.base.GetModelAttribute(Process_ElementName.SLInformation)) {\n        clobj = this.base.MakeBusinessClass(cname, this.base.maxid);\n      } else {\n        clobj = this.base.MakeClass(cname, this.base.maxid);\n      }\n    } else {\n      clobj = this.base.MakeClass(cname, this.base.maxid);\n    }\n    if (diagtype.Root !== null) {\n      if (!clobj.IsParent(diagtype.Root)) {\n        clobj.AddSubclassOf(diagtype.Root);\n      }\n    }\n    return clobj;\n  }\n  public EnsureSystemClass = (mst: string, _diagtype: ISemTalkDiagramType): ISemTalkSystemClass => {\n    this.base.maxid = this.base.maxid + 1;\n    let cname = mst + \".\" + this.base.maxid;\n    return this.base.MakeSystemClass(cname, this.base.maxid);\n  }\n  public EnsureInstance = (cl: ISemTalkSystemClass, _mst: string, _subkey: string): ISemTalkInstance => {\n    this.base.maxid = this.base.maxid + 1;\n    return this.base.MakeInstance(cl, cl.ObjectName + \".\" + this.base.maxid, SemTalkType.SemTalkInstance, this.base.maxid);\n  }\n  public visShapeAdded(shape: mxCell): ISemTalkNode | null {\n    if (this.noevents) { return null; }\n    this.beginTransaction(\"\", \"visShapeAdded\");\n    let nd: ISemTalkNode | null = null;\n    if (this.page !== null && this.page !== undefined) {\n      const diagtype = this.page.ClassOf();\n      let shapename = shape.shapeName;\n      if (shapename === null) {\n        shapename = shape.shapeKey;\n      }\n      //   console.debug(shape);\n      let mst: string = this.masterName(shapename);\n      const clist = diagtype.FindMasters(mst);\n      if (mst === this.base.GetModelAttribute(ModelAttribute.SLComment)) {\n        let c = this.base.FindSystemClass(mst);\n        if (c) clist.push(c);\n      }\n      let mst1 = mst;\n      if (mst === SemTalkMaster.MasterUMLClass) {\n        mst = SemTalkMaster.MasterClass;\n      }\n      if (clist.length < 1) {\n        // this.graph.removeCells([shape], true);\n        if (mst === SemTalkMaster.MasterClass || mst === SemTalkMaster.MasterSystemClass || mst === SemTalkMaster.MasterUMLClass) {\n        } else\n          return null;\n      }\n      // shape.shapeid = this.getMxId(shape);\n      let obj: ISemTalkObject | null;\n      // console.debug(shape);\n      switch (mst) {\n        case SemTalkMaster.MasterClass: {\n          obj = this.EnsureClass(mst, diagtype);\n          shape.objectid = obj.ID;\n          nd = this.base.MakeNode(this.page, obj, this.getMxId(shape));\n          nd.Master = mst1;\n          nd.X = shape.geometry.x;\n          nd.Y = shape.geometry.y;\n          break;\n        }\n        case SemTalkMaster.MasterSystemClass: {\n          obj = this.EnsureSystemClass(mst, diagtype);\n          shape.objectid = obj.ID;\n          nd = this.base.MakeNode(this.page, obj, this.getMxId(shape));\n          nd.Master = mst1;\n          nd.X = shape.geometry.x;\n          nd.Y = shape.geometry.y;\n          break;\n        }\n        default: {\n          const cl = clist[0];\n          if (shape.objectid === undefined && cl !== null) {\n            obj = this.EnsureInstance(cl, mst, shape.shapeSubkey);\n            shape.objectid = obj.ID;\n            nd = this.base.MakeNode(this.page, obj, this.getMxId(shape));\n            nd.Master = mst;\n            nd.X = shape.geometry.x;\n            nd.Y = shape.geometry.y;\n            // return nd;\n\n            let isact = (cl.ObjectName === this.base.GetModelAttribute(Process_ElementName.SLActivity));\n            if (isact && this.page) {\n              const un = this.page.NewUserNumber();\n              if (un.length > 0) {\n                obj.SetValue(SemTalkBaseConstant.SLUserNumber, un);\n              }\n              this.EnsureUses(shape);\n            }\n          } else {\n            // copy\n            obj = this.base.FindObjectByID(shape.objectid);\n            if (obj !== null) {\n              // shape.shapeid = this.getMxId(shape);\n              nd = this.base.MakeNode(this.page, obj, this.getMxId(shape));\n              nd.Master = mst;\n              nd.X = shape.geometry.x;\n              nd.Y = shape.geometry.y;\n              // return nd;\n              let isact = (cl.ObjectName === this.base.GetModelAttribute(Process_ElementName.SLActivity));\n              if (isact && this.page) {\n                const un = this.page.NewUserNumber();\n                if (un.length > 0) {\n                  obj.SetValue(SemTalkBaseConstant.SLUserNumber, un);\n                }\n                // this.visShapesMoved([shape]);\n              }\n            }\n          }\n        }\n      }\n      if (obj !== null) {\n        // this.vispage.labelChanged(shape, obj.ID2Name, null);\n        if (this.tseditor) {\n          this.tseditor.beginUpdate();\n        }\n        this.UpdateLabel(obj);\n        if (this.tseditor) {\n          this.tseditor.endUpdate();\n          this.tseditor.refresh();\n        }\n        this.base.PostEvent(SemTalkNavigationEvent.gotoObject, obj);\n      }\n    }\n    this.endTransaction(\"\", \"visShapeAdded\");\n    return nd;\n  }\n  public makeInstance = (class_cell: mxCell, shape: mxCell) => {\n    if (this.page !== null && this.page !== undefined) {\n      const clid = class_cell.objectid;\n      const cl: ISemTalkClass | null = this.base.FindClassByID(clid);\n      let rel: ISemTalkAssociation | null = null;\n      if (cl) {\n        const inst = cl.MakeInstance();\n        let rt = this.base.FindAssociationType(SemTalkBaseConstant.SLInstanceOf);\n        if (rt) {\n          rt.RelationType = SemTalkRelation.SemTalkInstanceOf;\n          rel = inst.MakeAssociation(rt, cl, SemTalkRelation.SemTalkInstanceOf);\n        }\n        shape.objectid = inst.ID;\n        // shape.shapeid = this.getMxId(shape);\n        this.base.MakeNode(this.page, inst, this.getMxId(shape), \"Instance\");\n        shape.value = inst.ID2NameNsp();\n        let su = cl.SystemClass();\n        if (su === null) {\n          shape.style = shape.style + \"fillColor=lightgray;fontColor=gray;strokeColor=gray;custom=1;\";\n        }\n        inst.UpdateLabel(\"Instance\");\n        if (rel) this.ExpandObject(shape, [rel]);\n      }\n    }\n  }\n  public makeSubClass = (class_cell: mxCell, shape: mxCell) => {\n    if (this.page !== null && this.page !== undefined) {\n      const clid = class_cell.objectid;\n      const cl: ISemTalkClass | null = this.base.FindClassByID(clid);\n      if (this.page !== null && this.page !== undefined && cl) {\n        const diagtype = this.page.ClassOf();\n        this.base.maxid = this.base.maxid + 1;\n        let cname = SemTalkBaseConstant.SLClass + \".\" + this.base.maxid;\n        let clobj: ISemTalkClass;\n        if (diagtype.Root !== null) {\n          cname = diagtype.Root.ObjectName.substr(0, 2) + \"#\" + cname;\n          if (diagtype.Root.ObjectName === this.base.GetModelAttribute(Process_ElementName.SLInformation)) {\n            clobj = this.base.MakeBusinessClass(cname, this.base.maxid);\n          } else {\n            clobj = this.base.MakeClass(cname, this.base.maxid);\n          }\n        } else {\n          clobj = this.base.MakeClass(cname, this.base.maxid);\n        }\n        if (cl) {\n          if (!clobj.IsParent(cl)) {\n            clobj.AddSubclassOf(cl);\n          }\n        }\n        shape.objectid = clobj.ID;\n        // shape.shapeid = this.getMxId(shape);\n        this.base.MakeNode(this.page, clobj, this.getMxId(shape), SemTalkMaster.MasterClass);\n        shape.value = clobj.ID2NameNsp();\n        clobj.UpdateLabel();\n        let rel = clobj.FindSpecialization(cl);\n        if (rel) this.ExpandObject(shape, [rel]);\n      }\n    }\n  }\n  public DeleteNode(obj: ISemTalkObject, shapeid: string): void {\n    let alist: ISemTalkNode[];\n    if (this.page) {\n      alist = obj.FindNode(this.page, shapeid);\n      if (alist.length > 0) {\n        alist[0].Delete();\n      }\n    }\n\n  }\n  public visShapesDeleted(shapes: mxCell[]): void {\n    if (this.noevents) { return; }\n    if (shapes === undefined) { return; }\n\n    this.beginTransaction(\"\", \"visShapesDeleted\");\n\n    for (const shape of shapes) {\n      if (shape.objectid !== undefined) {\n        // copy\n        const sid: any = this.getMxId(shape);\n        const obj = this.base.FindObjectByID(shape.objectid);\n        if (obj !== null) {\n          this.DeleteNode(obj, sid);\n          if (this.base.IsAssociation(obj)) {\n            const r = obj as ISemTalkAssociation;\n            if (this.base.IsInstance(r.FromObject)) {\n              const sc = (r.FromObject as ISemTalkInstance).ClassOf().SystemClass();\n              if (sc !== null && sc.OnceOnly === true) {\n                obj.Delete();\n                // return;\n              }\n            }\n            if (this.base.IsInstance(r.ToObject)) {\n              const dsc = (r.ToObject as ISemTalkInstance).ClassOf().SystemClass();\n              if (dsc !== null && dsc.OnceOnly === true) {\n                obj.Delete();\n                //  return;\n              }\n            }\n          }\n          // if (this.base.IsInstance(obj)) {\n          //   const sc = (obj as ISemTalkInstance).ClassOf().SystemClass();\n          //   if (sc !== null && sc.OnceOnly === true) {\n          //     obj.Delete();\n          //     return;\n          //   }\n          // }\n        }\n      }\n    }\n    this.endTransaction(\"\", \"visShapesDeleted\");\n  }\n  // public EnsureRelation(ins: ISemTalkInstance, scl: ISemTalkClass, label: string, relt: ISemTalkAssociationType) {\n  //   if (label.indexOf(\".\") > 0) {\n  //     label = label.substring(0, label.indexOf(\".\"));\n  //   }\n  //   const nsp = scl.ObjectName.substring(0, 2);\n  //   const cname = nsp + \"#\" + label;\n  //   let cl = this.base.FindClass(cname);\n  //   if (cl === null) {\n  //     cl = this.base.MakeClass(cname);\n  //   }\n  //   if (cl !== null) {\n  //     if (!cl.IsParent(scl)) {\n  //       cl.AddSubclassOf(scl);\n  //     }\n  //     if (!ins.HasDirectLink(relt, cl)) {\n  //       ins.MakeAssociation(relt, cl);\n  //     }\n  //   }\n  // }\n  public EnsureBORelation(ins: ISemTalkInstance, label: string): void {\n    if (label.indexOf(\".\") > 0) {\n      label = label.substring(0, label.indexOf(\".\"));\n    }\n    let info = this.base.GetModelAttribute(Process_ElementName.SLInformation);\n    let scl = this.base.FindClass(info);\n    if (scl !== null) {\n      let rel = this.base.GetModelAttribute(Process_ElementName.SLInfoType);\n      let relt = this.base.FindAssociationType(rel);\n      if (relt !== null) {\n        const nsp = scl.ObjectName.substring(0, 2);\n        const cname = nsp + \"#\" + label;\n        let lnks = ins.Links(relt);\n        let cl = this.base.FindBusinessClass(cname);\n        if (lnks.length === 1 && cl === null) {\n          let icl = lnks[0].ToObject;\n          const currnsp = this.base.CurrentNsp;\n          let oldsynname = \"\";\n          // if (oldsyn) oldsynname = oldsyn.Name;\n          for (let syn of icl.Synonyms()) {\n            if (syn.Name === icl.ID2Name && syn.Language === currnsp) {\n              oldsynname = syn.Name;\n            }\n          }\n          if (icl.ID2Name === oldsynname) {\n            if (icl.InvLinks(relt).length === 1) {\n              icl.RenameObject(cname);\n              this.UpdateLabel(ins);\n              return;\n            }\n          } else {\n            let syn = icl.FindSynonym(currnsp);\n            let oldid2name = icl.ID2Name;\n            let oldname = icl.ObjectName;\n            if (syn && (!syn.Synonym || (syn.Name === oldname || syn.Name === oldid2name))) {\n              icl.DeleteSynonym(currnsp);\n              icl.MakeSynonym(label, currnsp);\n            } else {\n              icl.MakeSynonym(label, currnsp);\n            }\n            this.UpdateLabel(ins);\n            return;\n          }\n        }\n        if (cl === null) {\n          cl = this.base.MakeBusinessClass(cname);\n        }\n        if (cl !== null) {\n          if (!cl.IsParent(scl)) {\n            cl.AddSubclassOf(scl);\n          }\n          for (const lnk of ins.Links(relt)) {\n            if (lnk.ToObject.ObjectName !== cl.ObjectName) {\n              ins.DeleteAssociation(relt, lnk.ToObject);\n            }\n          }\n          if (!ins.HasDirectLink(relt, cl)) {\n            ins.MakeAssociation(relt, cl);\n          }\n        }\n      }\n    }\n  }\n  public RenameDiagram(obj: ISemTalkDiagram, text: string) {\n    this.beginTransaction(\"\", \"RenameDiagram\");\n    if (obj.ObjectCaption === text) {\n      return;\n    }\n    let nsp = obj.ID2Namespace;\n    if (text.indexOf(\"#\") < 0 && nsp.length > 0) {\n      obj.RenameObject(nsp + \"#\" + text);\n    } else {\n      obj.RenameObject(text);\n    }\n    this.updateDiaglist();\n    this.endTransaction(\"\", \"RenameDiagram\");\n  }\n  public RenameObject(obj: ISemTalkObject, text: string, shape: mxCell | null) {\n    this.beginTransaction(\"\", \"RenameObject\");\n    const ob = this.base;\n    const currnsp = ob.CurrentNsp;\n    if (ob.IsAssociation(obj)) {\n      const ins = obj as ISemTalkAssociation;\n      const rcl = ins.ClassOf();\n      const scl = rcl.SystemClass();\n      // let lbl: labels.SemTalkLabel;\n      const src = ins.FromObject;\n      const dst = ins.ToObject;\n      if (ob.IsClass(src) && ob.IsClass(dst)) {\n        if (text.length > 0) {\n          let relt = ob.FindAssociationType(text);\n          if (relt === null) {\n            relt = ob.MakeAssociationType(SemTalkRelation.SemTalkProperty, text);\n          }\n          ins.SetClass(relt);\n          // ins.RenameObject(relt.ObjectName + \".\" + ins.ID);\n          if (shape) {\n            shape.style = relt.Style;\n            if (shape.style === \"\") {\n              shape.style = \"shape=loopRelationEdgeStyle;endArrow=classic;html=1;fillColor=#ffffff;strokeWidth=2;\";\n            }\n          }\n          // shape.style = \"edgeStyle=loopRelationEdgeStyle;shape=flexArrow;endArrow=classic;curved=0;html=1;fillColor=#ffffff;strokeWidth=2;\";\n          if (this.page) {\n            let diagtype = this.page.ClassOf();\n            if (diagtype.Root !== null) {\n              if (!(src as ISemTalkClass).IsParent(diagtype.Root)) {\n                (src as ISemTalkClass).AddSubclassOf(diagtype.Root);\n              }\n            }\n          }\n        } else {\n          let relt = ob.FindAssociationType(SemTalkBaseConstant.SLSubClassOf);\n          if (relt) {\n            ins.SetClass(relt);\n            ins.RenameObject(relt.ObjectName + \".\" + ins.ID);\n          }\n        }\n        this.UpdateLabel(ins);\n      } else {\n        if (scl !== null && scl.AllInstanceLabels().length === 1) {\n          let lbl = scl.AllInstanceLabels()[0];\n          const labelname = lbl.Text.substr(0, lbl.Text.indexOf(\"{\"));\n          if (labelname === ob.GetModelAttribute(Process_ElementName.SLInfoType)) {\n            this.EnsureBORelation(ins, text);\n            return;\n          }\n          const attrt = ob.FindAttributeType(labelname);\n          if (attrt !== null) {\n            if (obj.GetValue(labelname) !== text) {\n              obj.SetValue(labelname, text);\n              this.UpdateLabel(obj);\n            }\n          }\n        }\n      }\n      this.endTransaction(\"\", \"RenameObject\");\n      return;\n    }\n    if (this.base.IsInstance(obj)) {\n      if (obj.ObjectCaption === text) {\n        this.UpdateLabel(obj);\n        this.base.PostEvent(SemTalkNavigationEvent.gotoObject, obj);\n        return;\n      }\n      const ins = obj as ISemTalkInstance;\n      const icl = ins.ClassOf() as ISemTalkClass;\n      const scl = icl.SystemClass();\n      let oth = this.base.FindInstance(text);\n      if (oth !== null && scl !== null && !oth.IsInstance(scl)) {\n        oth = null;\n      }\n      if (text.indexOf(\".\") > text.indexOf(\"#\")) {\n        text = text.substring(0, text.indexOf(\".\"));\n      }\n      if (oth === null) {\n        if (scl !== null && scl.BottomUp) {\n          if (icl.ObjectName === scl.ObjectName) {\n            const nsp = scl.ObjectName.substring(0, 2);\n            const cname = nsp + \"#\" + text;\n            let cl = this.base.FindClass(cname);\n            if (cl === null) {\n              cl = this.base.MakeClass(cname);\n            }\n            if (cl !== null) {\n              if (!cl.IsParent(scl)) {\n                cl.AddSubclassOf(scl);\n              }\n              if (ins.ClassOf() !== cl) {\n                ins.SetClass(cl);\n              }\n            }\n            if (obj.ObjectName !== text + \".\" + obj.ID) {\n              obj.RenameObject(text + \".\" + obj.ID);\n              this.UpdateLabel(obj);\n            }\n            if (icl !== cl && icl !== scl && icl.Instances().length === 0) {\n              icl.Delete();\n            }\n          } else {\n            // const oldsyn = icl.FindSynonym(currnsp);\n            let oldsynname = \"\";\n            // if (oldsyn) oldsynname = oldsyn.Name;\n            for (let syn of icl.Synonyms()) {\n              if (syn.Name === icl.ID2Name && syn.Language === currnsp) {\n                oldsynname = syn.Name;\n              }\n            }\n            if (icl.ID2Name === oldsynname) {\n              const nsp = scl.ObjectName.substring(0, 2);\n              let newcla = nsp + \"#\" + text;\n              if (icl.Instances().length < 2 && icl.Composition() === null &&\n                ob.FindClass(newcla) === null) {\n                icl.RenameObject(newcla);\n              } else {\n                const cname = newcla;\n                let cl = this.base.FindClass(cname);\n                if (cl === null) {\n                  cl = this.base.MakeClass(cname);\n                }\n                if (cl !== null) {\n                  if (!cl.IsParent(scl)) {\n                    cl.AddSubclassOf(scl);\n                  }\n                  if (ins.ClassOf() !== cl) {\n                    ins.SetClass(cl);\n                  }\n                }\n                if (obj.ObjectName !== text + \".\" + obj.ID) {\n                  obj.RenameObject(text + \".\" + obj.ID);\n                  this.UpdateLabel(obj);\n                }\n                if (icl !== cl && icl !== scl && icl.Instances().length === 0) {\n                  icl.Delete();\n                }\n              }\n            } else {\n              let syn = icl.FindSynonym(currnsp);\n              let oldid2name = icl.ID2Name;\n              let oldname = icl.ObjectName;\n              // if (syn)\n              //     console.debug(oldname + \" \" + newname + \" \" + syn.Name);\n              if (syn && (!syn.Synonym || (syn.Name === oldname || syn.Name === oldid2name))) {\n                icl.DeleteSynonym(currnsp);\n                icl.MakeSynonym(text, currnsp);\n              } else {\n                icl.MakeSynonym(text, currnsp);\n              }\n              this.UpdateLabel(obj);\n            }\n          }\n        } else {\n          let lbl: ISemTalkLabel | null = null;\n          if (scl !== null) {\n            if (scl.AllInstanceLabels().length > 0) {\n              lbl = scl.AllInstanceLabels()[0];\n            }\n            else {\n              for (const scc of scl.AllSuperClasses()) {\n                if (lbl === null) {\n                  const slbls = (scc as ISemTalkSystemClass).AllInstanceLabels();\n                  if (slbls.length > 0) {\n                    lbl = slbls[0];\n                  }\n                }\n              }\n            }\n\n            if (lbl !== null) {\n              // console.debug(\"Label: \" + lbl);\n              let relname = lbl.Text;\n              if (lbl.Text.indexOf(\"{\") > -1) {\n                relname = lbl.Text.substr(0, lbl.Text.indexOf(\"{\"));\n              }\n              if (relname.indexOf(\" (\") > 0) {\n                relname = relname.substr(0, relname.indexOf(\" (\"));\n              }\n              const relt = this.base.FindAssociationType(relname);\n              // console.debug(slinfotype);\n              if (relt !== null) {\n                const olist = scl.AllLinkedObjects(relname);\n                if (olist.length > 0) {\n                  const slinfotype = this.base.GetModelAttribute(Process_ElementName.SLInfoType);\n                  const ocl = olist[0] as ISemTalkSystemClass;\n                  if (ocl.ObjectName === this.base.GetModelAttribute(Process_ElementName.SLInformation) && relname === slinfotype) {\n                    this.EnsureBORelation(obj as ISemTalkInstance, text);\n                  } else {\n                    const oname = text;\n                    let othc = this.base.FindInstance(oname);\n                    if (othc === null) {\n                      othc = this.base.MakeInstance(ocl, oname, SemTalkType.SemTalkInstance);\n                    }\n                    if (!othc.IsInstance(ocl)) {\n                      throw new Error(this.getResStrListener(\"STRERREXISTS\") + \": \" + oname);\n                    }\n                    for (const lnk of obj.Links(relt)) {\n                      if (lnk.ToObject.ObjectName !== othc.ObjectName) {\n                        obj.DeleteAssociation(relt, lnk.ToObject);\n                      }\n                    }\n                    if (!obj.HasDirectLink(relt, othc)) {\n                      obj.MakeAssociation(relt, othc);\n                    }\n\n                  }\n                  this.UpdateLabel(obj);\n                  console.assert(ocl !== null, \"Single Relation found\");\n                }\n                // tslint:disable-next-line:no-console\n                this.endTransaction(\"\", \"RenameObject\");\n                return;\n              }\n            }\n          }\n          if (obj.ObjectName !== text) {\n            const lang = GetLanguage(this.base.GetModelAttribute(ModelAttribute.currentnsp));\n            if (lang) {\n              let syn = obj.FindSynonym(lang);\n              let oldid2name = obj.ID2Name;\n              let oldname = obj.ObjectName;\n              // if (syn)\n              //     console.debug(oldname + \" \" + newname + \" \" + syn.Name);\n              if (syn && (!syn.Synonym || (syn.Name === oldname || syn.Name === oldid2name))) {\n                obj.DeleteSynonym(lang);\n                obj.MakeSynonym(text, lang);\n              } else {\n                obj.MakeSynonym(text, lang);\n              }\n              // eigentlich nur dann wenn obj.ObjectName === obj.ObjectCaption\n              obj.RenameObject(text);\n              this.UpdateLabel(obj);\n            }\n          }\n        }\n      } else {\n        if (obj.ObjectType !== oth.ObjectType) {\n          //  alert(\"There is a different object named: \" + label);\n        } else {\n          // Das ist doch falsch. Nur wenn es bottomUp ist, sollte nur das aktuelle Shape geändert werden\n          // Eigentlich müssen alles Shapes de\n          if (shape && obj.ID !== oth.ID && this.page) {\n            const shapeid = this.getMxId(shape);\n            this.DeleteNode(obj, shapeid);\n            obj = oth;\n            shape.objectid = oth.ID;\n            // shape.shapeid = this.getMxId(shape);\n            this.base.MakeNode(this.page, obj, this.getMxId(shape));\n          }\n        }\n      }\n    } else {\n      // const lang: string = this.base.GetModelAttribute(ModelAttribute.currentnsp);\n\n      let oldsynname = \"\";\n      // if (oldsyn) oldsynname = oldsyn.Name;\n      for (let syn1 of obj.Synonyms()) {\n        if (syn1.Name === obj.ID2Name && syn1.Language === currnsp) {\n          oldsynname = syn1.Name;\n        }\n      }\n\n\n      let syn = obj.FindSynonym(currnsp);\n      let oldid2name = obj.ID2Name;\n      let oldname = obj.ObjectName;\n      // if (syn)\n      //     console.debug(oldname + \" \" + newname + \" \" + syn.Name);\n      if (syn && (!syn.Synonym || (syn.Name === oldname || syn.Name === oldid2name))) {\n        obj.DeleteSynonym(currnsp);\n        obj.MakeSynonym(text, currnsp);\n      } else {\n        obj.MakeSynonym(text, currnsp);\n      }\n      if (obj.ID2Name === oldsynname || obj.ID2Name.indexOf(\".\") > 0) {\n        let nsp = obj.ID2Namespace;\n        let newname = text;\n        if (nsp.length > 0 && text.indexOf(\"#\") < 0) {\n          newname = nsp + \"#\" + text;\n        }\n        if (this.base.FindClass(newname) === null) {\n          obj.RenameObject(newname);\n        }\n      }\n    }\n    this.endTransaction(\"\", \"RenameObject\");\n    if (obj !== null) {\n      this.base.PostEvent(SemTalkNavigationEvent.gotoObject, obj);\n    }\n  }\n\n  public ChangeObject = (shape: mxCell, newobjs: ISemTalkObject[]) => {\n    if (newobjs.length > 1) return;\n    let newobj = newobjs[0];\n    this.beginTransaction(\"\", \"ChangeObject\");\n    const semtalk = this;\n    if (semtalk.noevents) { return; }\n    if (shape === null) { return; }\n    //const sc = this.visCellSystemClass(shape);\n    const oid = shape.objectid;\n    const bas = semtalk.base;\n    // var label = shape.value.attributes[\"label\"].value;\n    // let label: string = this.graph.getLabel(shape);\n    if (oid !== undefined && semtalk.page) {\n      let obj = bas.FindObjectByID(oid);\n      if (obj !== null) {\n        if (bas.IsInstance(obj) && (bas.IsClass(newobj) || bas.IsAssociationType(newobj))) {\n          // console.debug(\"NewClass: \" + obj.ObjectName);\n          let inst = obj as ISemTalkInstance;\n          inst.SetClass(newobj as ISemTalkClass);\n          if (bas.IsAssociation(obj)) {\n            shape.style = (newobj as ISemTalkAssociationType).Style;\n            if (shape.style === \"\") {\n              shape.style = \"shape=flexArrow;endArrow=classic;html=1;fillColor=#ffffff;strokeWidth=2;\";\n            }\n\n            // shape.style = \"edgeStyle=loopEdgeStyle;shape=flexArrow;endArrow=classic;html=1;fillColor=#ffffff;\";\n            if (obj.ObjectName === SemTalkBaseConstant.SLSubClassOf && this.page && this.page.ClassOf().Root !== null) {\n              // shape.style = \"shape=flexArrow;endArrow=classic;html=1;fillColor=#ffffff;strokeWidth=2;\";\n              let src = (obj as ISemTalkAssociation).FromObject;\n              let rt = this.page.ClassOf().Root;\n              if (rt && !(src as ISemTalkClass).IsParent(rt)) {\n                (src as ISemTalkClass).AddSubclassOf(rt);\n              }\n            }\n          }\n          if (this.base.FindObject(newobj.ObjectType, newobj.ObjectName + \".\" + String(inst.ID)) === null) {\n            let newname = newobj.ObjectName + \".\" + String(inst.ID);\n            if (inst.ObjectName !== newname) {\n              inst.RenameObject(newname);\n            }\n          }\n          semtalk.UpdateLabel(inst);\n          // console.debug(\"NewClass: \" + inst.ClassOf().ObjectName);\n        } else {\n          const shapeid = this.getMxId(shape);\n          let nd = semtalk.page.FindNodeOfShape(shapeid);\n          //  console.debug(newobj.ObjectName);\n\n          const noev = semtalk.noevents;\n          semtalk.noevents = true;\n          if (nd) nd.Delete();\n          semtalk.noevents = noev;\n\n          shape.objectid = newobj.ID;\n          // shape.shapeid = this.getMxId(shape);\n          bas.MakeNode(semtalk.page, newobj, this.getMxId(shape));\n          semtalk.MoveEdgesToShape(shape, obj, newobj);\n          if (bas.IsClass(obj)) {\n            if (obj.ID2Name === SemTalkMaster.MasterClass + \".\" + obj.ID) {\n              obj.Delete();\n            }\n          }\n          semtalk.UpdateLabel(newobj);\n        }\n      }\n    }\n    if (semtalk.tseditor) semtalk.tseditor.refresh();\n    this.endTransaction(\"\", \"ChangeObject\");\n  }\n  public GetShapeStyle = (key: string, shapeType: string): { style: string, isedge: boolean } => {\n    let shapeStyle = key;\n    let isedge: boolean = false;\n    //console.debug(\"Type \" + shapeType + \" \" + key);\n\n    switch (shapeType) {\n      case 'svg': {\n        shapeStyle = `shape=${key}`;\n        break;\n      }\n      case 'class': {\n        if (CLASS_SHAPES[key]) {\n          if (CLASS_SHAPES[key].type === 'edge') {\n            isedge = true;\n          }\n          shapeStyle = CLASS_SHAPES[key].style;\n        }\n        break;\n      }\n      case 'org': {\n        if (ORGCHART_SHAPES[key]) {\n          if (ORGCHART_SHAPES[key].type === 'edge') {\n            isedge = true;\n          }\n          shapeStyle = ORGCHART_SHAPES[key].style;\n        } else {\n          shapeStyle = ORGCHART_SHAPES[SemTalkMaster.MasterPosition].style;\n        }\n        break;\n      }\n\n      case 'generic': {\n        if (GENERIC_SHAPES[key]) {\n          if (GENERIC_SHAPES[key].type === 'edge') {\n            isedge = true;\n          }\n          shapeStyle = GENERIC_SHAPES[key].style;\n        }\n        break;\n      }\n      default: {\n        if (this.tseditor) {\n          return this.tseditor.getShapeStyle(key, shapeType);\n        }\n      }\n    }\n    return { style: shapeStyle, isedge: isedge };\n  }\n\n  // public InsertObject(newobj: ISemTalkObject, x: number, y: number): mxCell | null {\n  //   if (this.base.IsClass(newobj)) {\n  //     return this.InsertClass(newobj as ISemTalkClass,x,y)\n  //   } else {\n  //     return null;\n  //   }\n  // }\n  public InsertObject(newobj: ISemTalkObject, x: number, y: number): mxCell | null {\n    if (this.tseditor && this.page) {\n      // let mst: any = { style: \"shape=ellipse;whiteSpace=wrap;html=1;\", isedge: false, ShapeType: \"Eclipse\" };\n      let style: { style: string, isedge: boolean };\n      let key: SemTalkMaster = SemTalkMaster.MasterClass;\n      if (this.base.IsSystemClass(newobj)) {\n        style = this.GetShapeStyle(SemTalkMaster.MasterSystemClass, \"generic\");\n        key = SemTalkMaster.MasterSystemClass;\n      } else {\n        if (this.base.IsClass(newobj)) {\n          const pgclass = this.page.ClassOf();\n          if (pgclass.UMLShape) {\n            style = this.GetShapeStyle(SemTalkMaster.MasterUMLClass, \"class\");\n            key = SemTalkMaster.MasterUMLClass;\n          } else {\n            style = this.GetShapeStyle(SemTalkMaster.MasterClass, \"class\");\n          }\n        } else {\n          let sc = newobj.SystemClass();\n          if (sc) {\n            style = this.GetShapeStyle(sc.ObjectName, \"org\");\n          } else {\n            style = this.GetShapeStyle(SemTalkMaster.MasterInstance, \"generic\");\n          }\n        }\n      }\n      // if (this.base.IsInstance(newobj)) {\n      //   let sysc = newobj.SystemClass();\n      //   if (sysc)\n      //     style = this.GetShapeStyle(this.masterName(sysc.ObjectName),\"\");\n      // }\n\n      let noev = this.noevents;\n      this.noevents = true;\n      let shape = this.tseditor.createVertex(newobj.ObjectCaption, x, y, 80, 60, style.style);\n      this.noevents = noev;\n      shape.objectid = newobj.ID;\n      shape.shapeid = this.getMxId(shape);\n      shape.shapeName = key;\n      shape.shapeKey = key;\n      this.base.MakeNode(this.page, newobj, this.getMxId(shape));\n      return shape;\n    }\n    return null;\n  }\n  public initPage(_diag: ISemTalkDiagram) {\n  }\n  public insertSwimlane = (cell: mxCell): mxCell | null => {\n    if (this.page && this.tseditor) {\n      let sm = this.GetShapeStyle(SemTalkMaster.MasterSwimlane, \"general\");\n      // let parent = this.graph.getDefaultParent();\n      let swshape = (this.graph as mxGraph).insertVertex(cell, \"\", \"\", 100, 100, 600, 200, sm.style);\n      swshape.shapeName = Process_ElementName.Swimlane;\n      swshape.shapeKey = SemTalkMaster.MasterSwimlane;\n      this.visShapeAdded(swshape);\n      this.tseditor.refresh();\n      return swshape;\n    }\n    return null;\n  }\n  public toggleDirection(cell: mxCell) {\n    if (this.tseditor) {\n      // this.horizontal = !this.horizontal;\n      this.tseditor.toggleDirection(cell);\n    }\n  }\n  public ExpandObject(shape: any, newlinks: ISemTalkAssociation[]) {\n    if (this.tseditor) {\n      const oid = shape.objectid;\n      const bas = this.base;\n      // // let mst: string = \"shape=ellipse;whiteSpace=wrap;html=1;\";\n      // let mstyle = this.getShapeStyle(\"Eclipse\", \"general\");\n      // let style = mstyle.style;\n\n      let x = shape.geometry.x;\n      let y = shape.geometry.y;\n      let w = shape.geometry.width;\n      let h = shape.geometry.height;\n      x += w * 1.5;\n      let estyle = 'strokeWidth=2;';\n\n      if (oid !== undefined && this.page) {\n        let dt = this.page.ClassOf();\n        let obj = bas.FindObjectByID(oid);\n        if (obj !== null) {\n          for (let a of newlinks) {\n            estyle = a.ClassOf().Style;\n            if (a.FromObject === obj && dt.IsAllowed(a.ToObject)) {\n              // let newobj = a.ToObject;\n              let noev = this.noevents;\n              this.noevents = true;\n              let oshape = this.FindShape(a.ToObject);\n              if (oshape === null) {\n                oshape = this.InsertObject(a.ToObject, x, y);\n                y += h * 1.5;\n              }\n              let eshape = this.FindShape(a);\n              if (eshape === null) {\n                eshape = this.tseditor.insertEdge(shape, oshape, estyle);\n                eshape.objectid = a.ID;\n                eshape.shapeid = this.getMxId(eshape);\n                let nd = this.base.MakeAssociationNode(this.page, a, this.getMxId(eshape));\n                nd.FromShape = this.getMxId(eshape.source);\n                nd.OtherShape = this.getMxId(eshape.target);\n              }\n              this.noevents = noev;\n            } else {\n              if (a.ToObject === obj && dt.IsAllowed(a.FromObject)) {\n                // let newobj = a.FromObject;\n                let noev = this.noevents;\n                this.noevents = true;\n                let oshape = this.FindShape(a.FromObject);\n                if (oshape === null) {\n                  oshape = this.InsertObject(a.FromObject, x, y);\n                  y += h * 1.5;\n                }\n\n                let eshape = this.FindShape(a);\n                if (eshape === null) {\n                  eshape = this.tseditor.insertEdge(oshape, shape, estyle);\n                  eshape.objectid = a.ID;\n                  eshape.shapeid = this.getMxId(eshape);\n                  let nd = this.base.MakeAssociationNode(this.page, a, this.getMxId(eshape));\n                  nd.FromShape = this.getMxId(eshape.source);\n                  nd.OtherShape = this.getMxId(eshape.target);\n                }\n                this.noevents = noev;\n              }\n            }\n            this.UpdateLabel(a);\n          }\n        }\n        // this.saveGraph(\"\",\"ExpandObject\");\n      }\n    }\n  }\n  public ExpandSimilarClass(shape: any, newlinks: string[]) {\n    if (this.tseditor) {\n      const oid = shape.objectid;\n      const bas = this.base;\n      let x = shape.geometry.x;\n      let y = shape.geometry.y;\n      let w = shape.geometry.width;\n      let h = shape.geometry.height;\n      x += w * 1.5;\n\n      if (oid !== undefined && this.page) {\n        let obj = bas.FindObjectByID(oid);\n        if (obj !== null) {\n          for (let a of newlinks) {\n            let aclass = bas.FindClass(a);\n            if (aclass === null) {\n              let an: ISemTalkClass;\n              let sc = obj.SystemClass();\n              if (sc) {\n                an = sc.MakeSubClass(a);\n              } else {\n                an = bas.MakeClass(a);\n              }\n              if (an) {\n                aclass = an;\n              }\n            }\n            if (aclass) {\n              // let newobj = a.ToObject;\n              let noev = this.noevents;\n              this.noevents = true;\n              let oshape = this.FindShape(aclass);\n              if (oshape === null) {\n                oshape = this.InsertObject(aclass, x, y);\n                y += h * 1.5;\n              }\n              this.noevents = noev;\n              this.UpdateLabel(aclass);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  public MoveEdgesToShape(sel: mxCell, obj: ISemTalkObject, newobj: ISemTalkObject) {\n    const noev: boolean = this.noevents;\n    this.noevents = true;\n    const delrel: ISemTalkAssociation[] = [];\n    if (sel.edges !== null) {\n      for (const relshp of sel.edges) {\n        const relid = relshp.objectid;\n        let rel = this.base.FindInstanceByID(relid) as ISemTalkAssociation;\n        if (rel && rel.FromObject.ID === obj.ID) {\n          const oth = rel.ToObject;\n          const relcla = rel.ClassOf();\n          delrel.push(rel);\n          const newrel = newobj.MakeAssociation(relcla, oth);\n          if (newrel && this.page) {\n            const shapeid = this.getMxId(relshp);\n            let oldnd = this.page.FindNodeOfShape(shapeid);\n            if (oldnd) oldnd.Delete();\n            relshp.objectid = newrel.ID;\n            const nd = this.base.MakeAssociationNode(this.page, newrel, this.getMxId(relshp));\n            nd.FromShape = this.getMxId(relshp.source);\n            nd.OtherShape = this.getMxId(relshp.target);\n          }\n        }\n        if (rel && rel.ToObject.ID === obj.ID) {\n          const oth = rel.FromObject;\n          const relcla = rel.ClassOf();\n          delrel.push(rel);\n          const newrel = oth.MakeAssociation(relcla, newobj);\n          if (newrel && this.page) {\n            const shapeid = this.getMxId(relshp);\n            let oldnd = this.page.FindNodeOfShape(shapeid);\n            if (oldnd) oldnd.Delete();\n            relshp.objectid = newrel.ID;\n            const nd = this.base.MakeAssociationNode(this.page, newrel, this.getMxId(relshp));\n            nd.FromShape = this.getMxId(relshp.source);\n            nd.OtherShape = this.getMxId(relshp.target);\n          }\n        }\n      }\n      for (const r of delrel) {\n        r.Delete();\n      }\n    }\n\n    this.noevents = noev;\n  }\n  public visShapeExitedTextEdit(shape: any, label: string) {\n    if (this.noevents) { return; }\n    if (shape === null || shape === undefined) { return; }\n    this.beginTransaction(\"\", \"visShapeExitedTextEdit\");\n    const oid = shape.objectid;\n    // var label = shape.value.attributes[\"label\"].value;\n    // let label: string = this.graph.getLabel(shape);\n    if (oid !== undefined && label && label.length > 0) {\n      let obj = this.base.FindObjectByID(oid);\n      if (obj !== null) {\n        // if (this.tseditor) {\n        //   this.tseditor.beginUpdate();\n        // }\n        if (this.base.IsInstance(obj)) {\n          let ins = obj as ISemTalkInstance;\n          switch (ins.ClassOf().ObjectName) {\n            case this.base.GetModelAttribute(ModelAttribute.SLComment): {\n              const defof = this.base.GetModelAttribute(ModelAttribute.SLCommentOf);\n              for (let c of obj.LinkedObjects(defof, false, SemTalkRelation.SemTalkSystemRelation)) {\n                if (c.Comment !== label) {\n                  c.Comment = label;\n                }\n                return;\n              }\n              break;\n            }\n          }\n        }\n\n        this.RenameObject(obj, label, shape);\n        if (shape.shapeKey === SemTalkMaster.MasterSwimlane) {\n          this.UpdateSwimlaneContent(shape);\n        }\n        // if (this.tseditor) {\n        //   this.tseditor.endUpdate();\n        //   this.tseditor.refresh();\n        // }\n      }\n    } else {\n      if (label === undefined || label.length === 0) {\n        let obj = this.base.FindObjectByID(oid);\n        if (obj !== null) {\n          this.UpdateLabel(obj);\n          if (this.tseditor) this.tseditor.refresh();\n        }\n      }\n      // if (shape.IsEdge && shape.source !== null && shape.target !== null) {\n      //   alert(label);\n      // }\n    }\n    this.endTransaction(\"\", \"visShapeExitedTextEdit\");\n  }\n\n  public isValid = (srcid: number, dstid: number): boolean => {\n    if (this.page && this.page.ClassOf().Root === null) {\n      return true;\n    }\n    const src = this.base.FindInstanceByID(srcid);\n    const dst = this.base.FindInstanceByID(dstid);\n    // const ev = this.base.GetModelAttribute(Process_ElementName.SLEvent);\n    if (src !== null && dst !== null) {\n      const sc = src.ClassOf();\n      const dc = dst.ClassOf();\n      if (sc !== null && dc !== null) {\n        const ssy = sc.SystemClass();\n        const dsy = dc.SystemClass();\n        if (ssy !== null && dsy !== null) {\n          if (ssy.AllValidClassRelations(dsy).length > 0) {\n            return true;\n          }\n        }\n      }\n    } else {\n      const sc = this.base.FindObjectByID(srcid);\n      const dc = this.base.FindObjectByID(dstid);\n      if (sc !== null && dc !== null) {\n        const ssy = sc.SystemClass();\n        const dsy = dc.SystemClass();\n        if (ssy !== null && dsy !== null) {\n          let valid = (ssy.ID === dsy.ID);\n          if (!valid)\n            if (this.base.IsInstance(sc) &&\n              (sc as ISemTalkInstance).ClassOf().ObjectName ===\n              this.base.GetModelAttribute(ModelAttribute.SLComment)) {\n              valid = true;\n            }\n          return valid;\n        } else {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  public notSamePool = (source: mxCell, target: mxCell, toggle: boolean): boolean => {\n    let fnd: boolean = true;\n    // const model = this.graph.getModel();\n\n    const sparent = source.parent;\n    const tparent = target.parent;\n    fnd = (sparent.id !== tparent.id);\n\n    // if (sparent.id !== '1' && tparent.id !== '1' && sparent.id === tparent.id) {\n    //   fnd = false;\n    // }\n\n    // // const gsparent = sparent.parent;\n    // // const gtparent = tparent.parent;\n    // // if (fnd && gsparent.id !== '0' && gtparent.id !== '0' && gsparent.id === gtparent.id) {\n    // //   fnd = false;\n    // // }\n    // if (fnd && source.objectid && source.objectid) {\n    //   let ass = this.base.FindAssociationType(this.base.GetModelAttribute(SemTalkModellAttribute.SLUses));\n    //   if (ass) {\n    //     const src = this.base.FindInstanceByID(source.objectid);\n    //     const dst = this.base.FindInstanceByID(target.objectid);\n    //     if (src && dst) {\n    //       let sl = src.LinkedObjects(ass);\n    //       let dl = dst.LinkedObjects(ass);\n    //       if (sl.length === 0 && dl.length === 0) {\n    //         fnd = false;\n    //       } else {\n    //         if (sl.length > 0 && dl.length > 0) {\n    //           if (sl[0] === dl[0]) {\n    //             fnd = false;\n    //           }\n    //         }\n    //       }\n    //     }\n    //   }\n    // }\n    if (toggle) {\n      return !fnd;\n    } else {\n      return fnd;\n    }\n  }\n  public filterRelations = (rels: ISemTalkAssociationType[],\n    _source: any, _target: any, _ctrl: boolean,\n    _sy: ISemTalkSystemClass, _dsy: ISemTalkSystemClass,\n    _src: ISemTalkInstance, _dst: ISemTalkInstance): ISemTalkAssociationType[] => {\n    return rels;\n  }\n\n  public visConnectionAdded(evt: mxEventObject | undefined, link: mxCell, source: mxCell, target: mxCell): ISemTalkNode | null {\n    const validationonunserclasses: boolean = true;\n    if (this.noevents) { return null; }\n    // console.debug(evt);\n    this.beginTransaction(\"\", \"visConnectionAdded\");\n    let ctrl = false;\n    if (evt) {\n      let e = evt.properties[\"event\"];\n      ctrl = e.ctrlKey;\n    }\n\n    if (link.source !== null && link.target !== null) {\n      const src = this.base.FindInstanceByID(link.source.objectid);\n      const dst = this.base.FindInstanceByID(link.target.objectid);\n      // $.each(stvisiordfs.base.AllAssociationTypes(), function (ind, rel) {\n      // const fnd: boolean = false;\n      if (src !== null && dst !== null) {\n        // const sf = this.base.GetModelAttribute(ModelAttribute.SLSequenceFlow);\n        const sc = src.ClassOf();\n        const dc = dst.ClassOf();\n        if (sc !== null && dc !== null) {\n          let rels: ISemTalkAssociationType[] = [];\n          const sy = sc.SystemClass();\n          const dsy = dc.SystemClass();\n          if (validationonunserclasses) {\n            rels = sc.AllValidClassRelations(dc);\n          }\n          if (!validationonunserclasses || rels.length===0) {\n            if (sy !== null && dsy !== null) {\n              rels = sy.AllValidClassRelations(dsy);\n            }\n          }\n          if (sy && dsy) {\n            rels = this.filterRelations(rels, source, target,\n              ctrl, sy, dsy, src, dst);\n          }\n\n          let fnd = false;\n          for (const rel of rels) {\n            if (!fnd) {\n              let relobj: ISemTalkAssociation | null = null;\n              relobj = src.FindAssociation(rel, dst);\n              if (relobj === null) {\n                relobj = src.MakeAssociation(rel, dst);\n              }\n              fnd = true;\n              if (relobj !== null && this.page) {\n                link.objectid = relobj.ID;\n                // link.shapeid = \"mxSheet.\" + link.id;\n                const nd = this.base.MakeAssociationNode(this.page, relobj, this.getMxId(link), rel.ObjectName);\n                nd.FromShape = this.getMxId(link.source);\n                nd.OtherShape = this.getMxId(link.target);\n                this.UpdateLabel(relobj);\n                this.endTransaction(\"\", \"visConnectionAdded\");\n                if (this.tseditor) {\n                  this.tseditor.refresh();\n                }\n                return nd;\n              }\n            }\n          }\n        }\n      } else {\n        const ob = this.base;\n        const srccl = ob.FindObjectByID(source.objectid);\n        const dstcl = ob.FindObjectByID(target.objectid);\n        if (srccl !== null && dstcl !== null) {\n          let relobj: ISemTalkAssociation | null = null;\n          if (ob.IsClass(srccl) && ob.IsClass(dstcl)) {\n            for (let a of srccl.Associations()) {\n              if (a.ToObject === dstcl) {\n                relobj = a;\n                break;\n              }\n            }\n            if (relobj === null) {\n              if (ctrl || link[\"type\"] === \"Property\") {\n                relobj = (srccl as ISemTalkClass).MakeAssociation(SemTalkBaseConstant.SLConsistsOf, dstcl);\n              } else\n                relobj = (srccl as ISemTalkClass).AddSubclassOf(dstcl as ISemTalkClass);\n            }\n          } else {\n            if (ob.IsInstance(srccl) && (srccl as ISemTalkInstance).ClassOf().ObjectName ===\n              ob.GetModelAttribute(ModelAttribute.SLComment)) {\n              relobj = srccl.MakeAssociation(ob.GetModelAttribute(ModelAttribute.SLCommentOf),\n                dstcl);\n            }\n          }\n          if (relobj !== null && this.page) {\n            let rel = relobj.ClassOf();\n            link.objectid = relobj.ID;\n            const nd = ob.MakeAssociationNode(this.page, relobj, this.getMxId(link), rel.ObjectName);\n            nd.FromShape = this.getMxId(link.source);\n            nd.OtherShape = this.getMxId(link.target);\n            this.UpdateLabel(relobj);\n            this.endTransaction(\"\", \"visConnectionAdded\");\n            if (this.tseditor) {\n              this.tseditor.refresh();\n            }\n            return nd;\n          }\n        }\n      }\n      //  if (!fnd) {\n      // tslint:disable-next-line:no-console\n      // console.log(\"No valid relation: \" + link);\n      if (this.tseditor) {\n        this.tseditor.alert(\"No valid relation: \" + link.source.value + \" -> \" + link.target.value, MessageBarType.info);\n        (this.graph as mxGraph).removeCells([link], true);\n      }\n      // Updates!!!!!\n      //  }\n    }\n    this.endTransaction(\"\", \"visConnectionAdded\");\n    return null;\n  }\n  public visConnectionsDeleted(link: any): void {\n    if (this.noevents) { return; }\n    // if (link.source !== null && link.target !== null) {\n    const relobj = this.base.FindInstanceByID(link.objectid);\n    if (relobj !== null) {\n      relobj.Delete();\n    }\n    // }\n    return;\n  }\n  public visPageAdded(page: ISemTalkDiagram) {\n    if (this.noevents) { return; }\n    this.page = page;\n  }\n  public visPageDeleted(_page: ISemTalkDiagram): void {\n    if (this.noevents) { return; }\n  }\n  public visPageChanged(_page: ISemTalkDiagram): void {\n    if (this.noevents) { return; }\n  }\n\n  public loadDiag(id: number): ISemTalkDiagram | null {\n    if (this.page === undefined || this.page === null || (this.page !== null && this.page.ID !== id)) {\n      this.beginTransaction(\"\", \"loadDiag\");\n      this.page = this.base.FindDiagramByID(id);\n      if (this.tseditor) {\n        this.tseditor.beginUpdate();\n      }\n      if (this.page) {\n        this.initPage(this.page);\n        for (const nd of this.page.Contents()) {\n          this.UpdateLabel(nd.Model);\n        }\n      }\n      if (this.tseditor) {\n        this.tseditor.endUpdate();\n        this.tseditor.refresh();\n      }\n      this.endTransaction(\"\", \"loadDiag\");\n    }\n    return this.page;\n  }\n  public redraw() {\n    if (this.page !== undefined && this.page !== null) {\n      if (this.tseditor) {\n        this.tseditor.beginUpdate();\n      }\n      if (this.page) {\n        for (const nd of this.page.Contents()) {\n          this.UpdateLabel(nd.Model);\n          this.UpdateDependents(nd.Model);\n\n        }\n      }\n      if (this.tseditor) {\n        this.tseditor.endUpdate();\n        this.tseditor.refresh();\n      }\n    }\n  }\n  private eventlistener = (e: any): void => {\n    if (this.noevents) return;\n    let md: any;\n    let mtype: any;\n    try {\n      md = JSON.parse(e.data);\n      mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      // case \"loadSettings\":\n      //     if (md.settings !== undefined) {\n      //         global.loadsettings(md.settings);\n      //     }\n      //     break;\n      case SemTalkNavigationEvent.gotoDocument:\n        this.beginTransaction(\"\", SemTalkNavigationEvent.gotoDocument);\n        this.loadDiag(md.diagid);\n        this.endTransaction(\"\", SemTalkNavigationEvent.gotoDocument);\n        break;\n      case SemTalkNavigationEvent.gotoNode: {\n        const shpid = md.shapeid;\n        const shp = this.FindShapeByShapeID(shpid);\n        if (shp !== null) {\n          //   console.debug(shp);\n          this.graph.scrollCellToVisible(shp);\n          let g: mxGraph = this.graph as mxGraph;\n          if (!this.highlight) {\n            this.highlight = new mxCellHighlight(g, '#000000', 3);\n          }\n          this.highlight.highlight(g.view.getState(shp));\n\n          setTimeout(() => {\n            if (this.highlight) {\n              this.highlight.hide();\n            }\n          }, 1000);\n\n          // var h2 = new mxCellHighlight(graph, '#ff0000', 2);\n          // h2.highlight(graph.view.getState(cell2)));\n          // let sel = this.selectedShapes();\n          // let isselected = sel.find((s) => s.id === shp.id)\n          // if (isselected === undefined) {\n          //   sel.push(shp);\n          //   this.graph.setSelectionCells(sel);\n          // }\n        } else {\n          if (this.highlight) {\n            this.highlight.hide();\n          }\n\n        }\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnNodeCreated:\n        this.beginTransaction(\"\", SemTalkObjectBaseEvent.OnNodeCreated);\n        this.endTransaction(\"\", SemTalkObjectBaseEvent.OnNodeCreated);\n        break;\n      case SemTalkObjectBaseEvent.OnNodeDeleted: {\n        if (!this.noevents) {\n          this.beginTransaction(\"\", SemTalkObjectBaseEvent.OnNodeDeleted);\n          const shpid = md.arg1;\n          const shp = this.FindShapeByShapeID(shpid);\n          if (shp !== null) {\n            const noev = this.noevents;\n            this.noevents = true;\n            if (this.tseditor) this.tseditor.removeCells([shp], true);\n            this.noevents = noev;\n          }\n          this.endTransaction(\"\", SemTalkObjectBaseEvent.OnNodeDeleted);\n        }\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnClassChanged: {\n        if (md.arg0) {\n          this.UpdateByID(Number(md.objectid));\n        }\n        //  this.saveGraph(\"\");\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnCreated:\n        this.ensureSynonym(md.objectid);\n        break;\n      case SemTalkObjectBaseEvent.OnRefined: {\n        this.beginTransaction(\"\", SemTalkObjectBaseEvent.OnRefined);\n        this.UpdateLabelByID(Number(md.objectid));\n        if (this.tseditor) this.tseditor.refresh();\n        this.endTransaction(\"\", SemTalkObjectBaseEvent.OnRefined);\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnDetached: {\n        this.beginTransaction(\"\", SemTalkObjectBaseEvent.OnDetached);\n        this.UpdateLabelByID(Number(md.objectid));\n        if (this.tseditor) this.tseditor.refresh();\n        this.endTransaction(\"\", SemTalkObjectBaseEvent.OnDetached);\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnValueChanged: {\n        if (md.arg2 === SemTalkBaseConstant.SLMXGAttribute) return;\n        this.UpdateLabelByID(Number(md.objectid));\n        if (this.tseditor) this.tseditor.refresh();\n        //  this.saveGraph(\"\");\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnAttributeAdded: {\n        this.UpdateLabelByID(Number(md.objectid));\n        if (this.tseditor) this.tseditor.refresh();\n        //  this.saveGraph(\"\");\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnMethodAdded: {\n        this.UpdateLabelByID(Number(md.objectid));\n        if (this.tseditor) this.tseditor.refresh();\n        //  this.saveGraph(\"\");\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnStateAdded: {\n        this.UpdateLabelByID(Number(md.objectid));\n        if (this.tseditor) this.tseditor.refresh();\n        //  this.saveGraph(\"\");\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnRenamed: {\n        this.beginTransaction(\"\", SemTalkObjectBaseEvent.OnRenamed);\n        if (md.semtalktype !== undefined)\n          switch (md.semtalktype) {\n            case SemTalkType.SemTalkAssociation:\n            case SemTalkType.SemTalkInstance:\n            case SemTalkType.SemTalkAssociationType:\n            case SemTalkType.SemTalkMethodType:\n            case SemTalkType.SemTalkStateType:\n            case SemTalkType.SemTalkAttributeType:\n            case SemTalkType.SemTalkClass:\n              {\n                this.UpdateByID(Number(md.objectid));\n                break;\n              }\n            case SemTalkType.SemTalkDiagram:\n            default:\n            // console.debug(md);\n          }\n        this.endTransaction(\"\", SemTalkObjectBaseEvent.OnRenamed);\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnCommentChanged: {\n        this.beginTransaction(\"\", SemTalkObjectBaseEvent.OnCommentChanged);\n        const obj = this.base.FindObjectByID(md.objectid);\n        if (obj !== null) {\n          const defof = this.base.GetModelAttribute(ModelAttribute.SLCommentOf);\n          let bfnd = false;\n          for (let c of obj.InvLinkedObjects(defof, false, SemTalkRelation.SemTalkSystemRelation)) {\n            this.UpdateLabel(c);\n            bfnd = true;\n          }\n          if (bfnd && this.tseditor) this.tseditor.refresh();\n          // this.saveGraph(\"\");\n        }\n        this.endTransaction(\"\", SemTalkObjectBaseEvent.OnCommentChanged);\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnComposed: {\n        this.beginTransaction(\"\", SemTalkObjectBaseEvent.OnComposed);\n        this.UpdateByID(Number(md.objectid));\n        this.endTransaction(\"\", SemTalkObjectBaseEvent.OnComposed);\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnUnComposed: {\n        this.beginTransaction(\"\", SemTalkObjectBaseEvent.OnUnComposed);\n        this.UpdateByID(Number(md.objectid));\n        this.endTransaction(\"\", SemTalkObjectBaseEvent.OnUnComposed);\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnAssociationAdded: {\n        this.beginTransaction(\"\", SemTalkObjectBaseEvent.OnAssociationAdded);\n        this.UpdateByID(Number(md.objectid));\n        this.endTransaction(\"\", SemTalkObjectBaseEvent.OnAssociationAdded);\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnAssociationDeleted: {\n        this.beginTransaction(\"\", SemTalkObjectBaseEvent.OnAssociationDeleted);\n        let fromobj = md.arg1;\n        let toobj = md.arg2;\n        this.UpdateByID(Number(fromobj));\n        this.UpdateByID(Number(toobj));\n        this.endTransaction(\"\", SemTalkObjectBaseEvent.OnAssociationDeleted);\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnSynonymAdded: {\n        this.UpdateLabelByID(Number(md.objectid)); break;\n      }\n      case SemTalkObjectBaseEvent.OnSynonymDeleted: {\n        this.UpdateLabelByID(Number(md.objectid)); break;\n      }\n      case SemTalkObjectBaseEvent.OnSynonymRenamed: {\n        this.UpdateLabelByID(Number(md.objectid)); break;\n      }\n      case SemTalkObjectBaseEvent.OnUserNumberChanged: {\n        this.UpdateLabelByID(Number(md.objectid)); break;\n      }\n      case SemTalkObjectBaseEvent.OnSubClassCreated:\n        break;\n      case SemTalkObjectBaseEvent.OnSubClassDeleted:\n        break;\n      case SemTalkObjectBaseEvent.OnModelAttributeChanged:\n        if (md.arg0 === \"currentnsp\") {\n          let nv = md.arg2;\n          if (nv === SemTalkLanguage.German) {\n            this.base.SetModelAttribute(ModelAttribute.forder, SemTalkComposeOrder.NounVerb);\n          } else {\n            this.base.SetModelAttribute(ModelAttribute.forder, SemTalkComposeOrder.VerbNoun);\n          }\n          this.redraw();\n        }\n        break;\n    }\n  }\n  public getMessage(e: any) {\n    this.eventlistener(e);\n  }\n\n  private ensureSynonym(oid: number) {\n    const cla = this.base.FindClassByID(oid);\n    if (cla) {\n      let newname = cla.ObjectName;\n      let currnsp = this.base.CurrentNsp;\n      if (currnsp.length > 0 && (newname.indexOf(\".\") < 0 || newname.indexOf(\"#\") < 0)) {\n        let syn = newname;\n        if (syn.indexOf(\"#\") > 0) syn = syn.substr(syn.indexOf(\"#\") + 1);\n        cla.MakeSynonym(syn, currnsp);\n      }\n    }\n  }\n\n  public ensureCallBack(): void {\n    const hostPageMessage: any = {};\n    hostPageMessage.message = \"getHostSemTalkHomePage\";\n    // hostPageMessage.senderId = stnavigation.senderId;\n    const hostPageMessageString = JSON.stringify(hostPageMessage);\n    try {\n      window.parent.postMessage(hostPageMessageString, document.referrer);\n    } catch (ex) {\n      try {\n        window.parent.postMessage(hostPageMessageString, document.referrer);\n      } catch (ex1) { }\n    }\n  }\n\n  public getSPListName(sname: string): string {\n    let sbuf = this.base.GetModelAttribute(Process_ElementName.SLBuffer);\n    let shum = this.base.GetModelAttribute(Process_ElementName.SLResource);\n    let spos = this.base.GetModelAttribute(Process_ElementName.SLPosition);\n    let sorg = this.base.GetModelAttribute(Process_ElementName.SLOrgUnit);\n    let spers = this.base.GetModelAttribute(Process_ElementName.SLPerson);\n    let sinf = this.base.GetModelAttribute(Process_ElementName.SLInformation);\n    let sphys = this.base.GetModelAttribute(Process_ElementName.SLPhysResource);\n\n    if (sname === sbuf) return \"Buffers\";\n    if (sname === \"SystemToolApplication\") return \"Buffers\";\n    if (sname === shum) return \"HumanResources\";\n    if (sname === \"OrgChartElement\") return \"HumanResources\";\n    if (sname === \"Personentyp\") return \"HumanResources\";\n    if (sname === \"Position\") return \"HumanResources\";\n    if (sname === spos) return \"HumanResources\";\n    if (sname === spers) return \"HumanResources\";\n    if (sname === sorg) return \"HumanResources\";\n    if (sname === sphys) return \"PhysResources\";\n    if (sname === sinf) return \"Objects\";\n    if (sname === \"Method\") return \"Method\";\n    if (sname === \"State\") return \"State\";\n    if (sname === \"Attribute\") return \"AttributeType\";\n    return sname;\n  }\n  public currentTransaction(): string {\n    return this.transaction;\n  }\n  public beginTransaction(_xml: string, reason: string) {\n    if (this.IsAutoSave && this.transaction === \"\") {\n      if (reason === \"mxGraph\") {\n        return;\n      }\n      // console.debug(\"beginTransaction: \" + reason);\n      this.transaction = reason;\n    }\n  }\n\n  public endTransaction(mxgraphxml: string, reason: string) {\n    this.ismodified = true;\n    if (!document.title.endsWith(\" *\")) {\n      document.title += \" *\";\n    }\n\n    if (this.IsAutoSave && this.transaction === reason) {\n      if (this.tseditor && mxgraphxml === \"\") mxgraphxml = this.tseditor.getGraphXml();\n      this.autoSave(mxgraphxml);\n      this.transaction = \"\";\n    }\n  }\n  public autoSave(mxgraphxml: string) {\n    let pg = this.page;\n    if (pg !== null && pg !== undefined) {\n      const ob = this.base;\n      if (this.tseditor && mxgraphxml === \"\") mxgraphxml = this.tseditor.getGraphXml();\n      // console.debug(xml);\n      let encoded = VisioRDFS.encodelzutf8(mxgraphxml);\n      ob.SetModelAttribute(SemTalkBaseConstant.SLMXGPagePrefix + pg.ID, encoded);\n      pg.SetValue(SemTalkBaseConstant.SLMXGAttribute, SemTalkBaseConstant.SLMXGPagePrefix + pg.ID);\n      // this.setState({\n      //   xmlgraph: xml,\n      //   diag: pg\n      // });\n      const o2j = new OB2JSON();\n      let tmp = o2j.SaveJSON(ob);\n      tmp.transaction = \"AutoSaved\";\n      tmp.currentpage = pg.ID;\n      tmp.tempId = this.tempId;\n      tmp.readonly = this.readonly;\n      //  console.debug(tmp);\n      let s: string = \"\";\n      try {\n        s = JSON.stringify(tmp);\n      } catch (e) {\n        console.debug(e);\n        return;\n      }\n      let s0 = (window as any).localStorage.getItem(SemTalkCookie.autosaveSemTalk);\n      if (s === s0) {\n        // console.debug(\"no autosaving needed\");\n      } else {\n        //  console.debug(\"endUndoScope: \" + reason);\n        (window as any).localStorage.setItem(SemTalkCookie.autosaveSemTalk, s);\n        if (this.undoManger !== null)\n          this.undoManger.SaveUndo(s0);\n      }\n      //   gotoDocument(pg.ID);\n    }\n  }\n\n  public InsertObjects = (newobjs: ISemTalkClass[], x: number, y: number, expand: boolean) => {\n    let dx = x + 30;\n    let dy = y + 30;\n    let i = 1;\n    let cells: any = {};\n    for (let newobj of newobjs) {\n      let cell = this.InsertObject(newobj, dx, dy);\n      if (cell !== null) {\n        let s: string = newobj.ID + \"_\";\n        cells[s] = cell;\n        let geo = cell.geometry;\n        dx = dx + geo.width + 10;\n        i += 1;\n        if (i > 10) {\n          i = 1;\n          dx = x + 30;\n          dy = dy + geo.height + 10;\n        }\n      }\n    }\n    if (expand) {\n      let ob = this.base;\n      let sco = ob.FindAssociationType(SemTalkBaseConstant.SLSubClassOf);\n      for (let newobj of newobjs) {\n        let cell = cells[newobj.ID + \"_\"];\n        if (cell && sco && ob.IsClass(newobj)) {\n          let specs = (newobj as ISemTalkClass).Links(sco, SemTalkRelation.SemTalkSubClassOf);\n          let invspecs = (newobj as ISemTalkClass).InvLinks(sco, SemTalkRelation.SemTalkSubClassOf);\n          specs.push(...invspecs);\n          this.ExpandObject(cell, specs);\n        }\n      }\n    }\n  }\n  public ImportTermSet = (sysc: ISemTalkSystemClass, items: ITermSetItem[], x: number, y: number) => {\n    const bas = this.base;\n    //    const sysc = this.state.sysclass;\n    let htable: any = {};\n    let ctable: any = {};\n    let term: ISemTalkClass;\n    if (sysc !== undefined && sysc !== null) {\n      let tname = sysc.ObjectName.substr(0, 2) + \"#\" + \"Term\";\n      term = bas.MakeSystemClass(tname);\n      if (!term.IsParent(sysc)) {\n        term.AddSubclassOf(sysc);\n      }\n    } else {\n      let tname = \"Term\";\n      term = bas.MakeSystemClass(tname);\n    }\n    // term.MakeAttribute(\"TermID\", 0);\n    for (let sel1 of items) {\n      let t: ITermSetItem = sel1 as ITermSetItem;\n      // let oname = t.ObjectName;\n      let oname = t.ObjectName;\n      if (sysc !== undefined && sysc !== null) {\n        oname = sysc.ObjectName.substr(0, 2) + \"#\" + oname;\n      } else {\n        oname = term.ObjectName.substr(0, 2) + \"#\" + oname;\n      }\n      let obj = bas.FindClass(oname);\n      if (obj !== null) {\n        // if (obj.IsParent(sysc)) {\n        //   cb(this.props.semtalk, this.props.semtalk.shape, obj);\n        // } else {\n        //   alert(\"You cannot select:\" + oname);\n        // }\n      } else {\n        if (bas.IsBusinessClass(sysc)) {\n          let bc = bas.MakeBusinessClass(oname);\n          if (bc !== null) {\n            if (!bc.IsParent(term)) {\n              bc.AddSubclassOf(term);\n            }\n            obj = bc;\n          } else {\n            obj = term.MakeSubClass(oname);\n          }\n        } else {\n          obj = term.MakeSubClass(oname);\n        }\n      }\n      if (t.Term.descriptions.length > 0)\n        obj.Comment = t.Term.descriptions[0].description;\n      for (let l of t.Term.labels) {\n        let termlabel = l.name.replace('＂', \" \");\n        obj.MakeSynonym(termlabel, this.decodeLang(l.languageTag));\n      }\n      htable[t.ObjectName] = obj;\n      ctable[t.ObjectName] = t.Children;\n      // obj.SetValue(\"TermID\", t.ObjectName);\n    }\n    for (let id in htable) {\n      let obj = htable[id] as ISemTalkClass;\n      for (let child of ctable[id]) {\n        let cobj = htable[child.termid] as ISemTalkClass;\n        if (obj !== null && cobj !== undefined && !cobj.IsParent(obj)) {\n          cobj.AddSubclassOf(obj);\n        }\n      }\n      // console.debug(obj);\n    }\n    let newobjs: any[] = [];\n    for (let id in htable) {\n      let obj = htable[id] as ISemTalkClass;\n      newobjs.push(obj);\n    }\n    this.InsertObjects(newobjs, x, y, true);\n\n  }\n  public ImportTermSetTree = (syscname: string, items: any[], x: number, y: number) => {\n    const bas = this.base;\n    //    const sysc = this.state.sysclass;\n    let htable: any = {};\n    let ctable: any = {};\n    let term: ISemTalkClass;\n    // let sysc = bas.FindSystemClass(syscname);\n    // if (sysc !== undefined && sysc !== null) {\n    //   let tname = sysc.ObjectName.substr(0, 2) + \"#\" + \"Term\";\n    //   term = bas.MakeSystemClass(tname);\n    //   if (!term.IsParent(sysc)) {\n    //     term.AddSubclassOf(sysc);\n    //   }\n    // } else {\n    // let tname = \"Term\";\n    let tname = syscname;\n    term = bas.MakeSystemClass(tname);\n    // }\n    // term.MakeAttribute(\"TermID\", 0);\n    for (let sel1 of items) {\n      let t: any = sel1.data;\n      // let oname = t.ObjectName;\n      let oname = sel1.termid;\n      // oname = term.ObjectName.substr(0, 2) + \"#\" + oname;\n      // }\n      let obj = bas.FindClass(oname);\n      if (obj !== null) {\n        // if (obj.IsParent(sysc)) {\n        //   cb(this.props.semtalk, this.props.semtalk.shape, obj);\n        // } else {\n        //   alert(\"You cannot select:\" + oname);\n        // }\n      } else {\n        if (bas.IsBusinessClass(term)) {\n          let bc = bas.MakeBusinessClass(oname);\n          if (bc !== null) {\n            if (!bc.IsParent(term)) {\n              bc.AddSubclassOf(term);\n            }\n            obj = bc;\n          } else {\n            obj = term.MakeSubClass(oname);\n          }\n        } else {\n          obj = term.MakeSubClass(oname);\n        }\n      }\n      if (t.descriptions.length > 0)\n        obj.Comment = t.descriptions[0].description;\n      for (let l of t.labels) {\n        let termlabel = l.name.replace('＂', \" \");\n        obj.MakeSynonym(termlabel, this.decodeLang(l.languageTag));\n      }\n      htable[sel1.termid] = obj;\n      ctable[sel1.termid] = sel1.children;\n      // obj.SetValue(\"TermID\", t.ObjectName);\n    }\n    for (let id in htable) {\n      let obj = htable[id] as ISemTalkClass;\n      if (ctable[id]) {\n        for (let child of ctable[id]) {\n          let ct = child.data;\n          let cobj = htable[ct.id];\n          if (obj !== null && cobj !== undefined && !cobj.IsParent(obj)) {\n            cobj.AddSubclassOf(obj);\n          }\n        }\n      }\n      // console.debug(obj);\n    }\n    let newobjs: any[] = [];\n    for (let id in htable) {\n      let obj = htable[id] as ISemTalkClass;\n      newobjs.push(obj);\n    }\n    this.InsertObjects(newobjs, x, y, true);\n  }\n  private _languagedropdownOptions = [\n    { key: SemTalkLanguageCode.English, text: SemTalkLanguage.English },\n    { key: SemTalkLanguageCode.German, text: SemTalkLanguage.German },\n    { key: SemTalkLanguageCode.Japanese, text: SemTalkLanguage.Japanese },\n    { key: SemTalkLanguageCode.Spanish, text: SemTalkLanguage.Spanish },\n    { key: SemTalkLanguageCode.Russian, text: SemTalkLanguage.Russian },\n    { key: SemTalkLanguageCode.Simplified, text: SemTalkLanguage.Simplified },\n    { key: SemTalkLanguageCode.Traditional, text: SemTalkLanguage.Traditional },\n    { key: \"sc\", text: SemTalkLanguage.Simplified },\n    { key: \"tc\", text: SemTalkLanguage.Traditional },\n  ];\n\n  private decodeLang(s: string): SemTalkLanguage {\n    for (let lang of this._languagedropdownOptions) {\n      if (lang.key === s || s.startsWith(lang.key + \"-\")) {\n        return lang.text;\n      }\n    }\n    return SemTalkLanguage.English;\n  }\n  public IsUndo = (): boolean => {\n    if (this.tseditor && this.tseditor.isUndo()) return true;\n    if (this.undoManger === undefined || this.undoManger === null) return false;\n    return this.undoManger.IsUndo();\n  }\n  public IsRedo = (): boolean => {\n    if (this.tseditor && this.tseditor.isRedo()) return true;\n    if (this.undoManger === undefined || this.undoManger === null) return false;\n    let s1: string | null = this.undoManger.GetRedo();\n    if (s1 === null) return false;\n    return (s1.length > 0);\n  }\n  public clearUndo(): void {\n    if (this.tseditor) {\n      this.tseditor.clearUndo();\n    }\n  }\n\n  public quickShapes = (oid: number, stencil: SemTalkStencil): SemTalkStencil => {\n    const ob = this.base;\n    let targets: string[] = [];\n    const badlist = [SemTalkBaseConstant.SLComment, SemTalkBaseConstant.SLSwimlane,\n    ob.GetModelAttribute(Process_ElementName.SLDataObject)];\n    const src = ob.FindObjectByID(oid);\n    if (src) {\n      let sc: ISemTalkObject | null = src.SystemClass();\n      if (sc === null) sc = src;\n      if (sc && badlist.indexOf(sc.ObjectName) < 0) {\n        // switch (sc.ObjectName) {\n        //   default: {\n        const diag = this.page;\n        if (diag) {\n          let isclass = diag.ClassOf().IsClass;\n          let isuml = diag.ClassOf().UMLShape;\n          let isgeneric = diag.ClassOf().ObjectName === SemTalkBaseConstant.SLGeneric;\n          switch (src.ObjectType) {\n            case SemTalkType.SemTalkClass: {\n              if (isclass || isgeneric)\n                if (isuml) {\n                  targets.push(SemTalkMaster.MasterUMLClass);\n                } else {\n                  targets.push(SemTalkMaster.MasterClass);\n                }\n              if (isgeneric)\n                targets.push(SemTalkMaster.MasterInstance);\n              targets.push(SemTalkMaster.MasterSubClassOf);\n              targets.push(SemTalkMaster.MasterProperty);\n              break;\n            }\n          }\n          //   }\n          // }\n        }\n      }\n    }\n    let masters: any[] = [];\n    for (let key of targets)\n      for (let m of stencil) {\n        if (m.name === key)\n          masters.push(m);\n      }\n    return masters;\n  }\n  public selectedShapes(): mxCell[] {\n    if (this.tseditor) {\n      return this.tseditor.getSelectionCells();\n    } else return [];\n  }\n  public clearSelection(): void {\n    if (this.tseditor) {\n      this.tseditor.clearSelection();\n    }\n  }\n\n  public updateDiaglist(): void {\n    let lis: { text: string, key: number }[] = [];\n    for (const dt of this.base.AllDiagrams()) {\n      lis.push({ text: dt.ObjectCaption, key: dt.ID });\n    }\n    if (this.tseditor) {\n      this.tseditor.updateDiaglist(lis);\n    }\n  }\n  public static decode(s: any): any {\n    return base64.decode(s);\n  }\n  public static decodelzutf8(s: any): any {\n    let ss = \"\";\n    try {\n      // var b = Buffer.from(s, 'base64');\n      ss = lzutf8.decompress(s, { inputEncoding: \"Base64\" });\n    } catch {\n      try {\n        ss = base64.decode(s);\n      } catch {\n        ss = \"\";\n      }\n    }\n    return ss;\n  }\n  public static encode(s: any): any {\n    return base64.encode(s);\n  }\n  public static encodelzutf8(s: any): any {\n    let ss = lzutf8.compress(s, { outputEncoding: \"Base64\" });\n    return ss;\n  }\n  public initStencil = async (\n    _dtype: ISemTalkDiagramType, stencil: string, sprops: SharePointSettings, _showBPMN: boolean,\n    loadStencil: (template: string, url: string, spinterface: ISPExplorer) => Promise<SemTalkStencil>) => {\n    const stencilurl: string = sprops.site + \"/\" + sprops.templates + \"/\" + stencil + \"-shapes.ssx\";\n    let CUSTOMPROC_STENCIL = await loadStencil(stencil.replace(\".stx\", \"\") + \"-shapes.ssx\", stencilurl, this.explorer);\n    return CUSTOMPROC_STENCIL;\n  }\n  public initStencils = async (ob: IObjectBase, sem: IVisioRDFS,\n    guilanguage: SemTalkLanguageCode,\n    sprops: SharePointSettings, showBPMN: boolean,\n    loadStencil: (template: string, url: string, spinterface: ISPExplorer) => Promise<SemTalkStencil>) => {\n\n    let template = ob.GetModelAttribute(ModelAttribute.Template);\n    let slproc = ob.GetModelAttribute(Process_ElementName.SLProc);\n    if (template === \"semtalk.vst\") {\n      if (slproc === \"Business Process Diagram\") template = \"bpmn20-2016.vst\";\n      if (slproc === \"eEPC\") template = \"epc.vst\";\n      ob.SetModelAttribute(ModelAttribute.Template, template);\n    }\n    template = template.replace(\".vstx\", \"\");\n    template = template.replace(\".vst\", \"\");\n    if (!template.endsWith(\".stx\")) template += \".stx\";\n\n\n    let support_lib = sprops.site + \"/\" + sprops.support;\n\n    // let proc = ob.FindDiagramType(ob.GetModelAttribute(Process_ElementName.SLProc));\n\n    this.stencil_registry = {};\n    for (let dg of ob.AllDiagramTypes()) {\n      // if (dg.ObjectName===proc?.ObjectName) continue;\n      if (dg.ObjectName === SemTalkBaseConstant.SLGeneric) continue;\n\n      let stencil = await this.initStencil(dg, template, sprops, showBPMN, loadStencil);\n      this.stencil_registry[dg.ObjectName] = stencil;\n      for (let mst of stencil) {\n        if (mst[\"logo\"]) {\n          let l = mst[\"logo\"];\n          if (l.indexOf(\"/images\") === 0) {\n            let cdn = sprops.cdn;\n            let mtyp = mst[\"type\"];\n            if (l.indexOf(\".svg\") > -1 && mtyp !== \"general\" && mtyp !== \"svg\" && mtyp !== \"png\" && mtyp !== \"image\" &&\n              cdn.length > 0 && sprops.context) {\n              if (cdn === support_lib + \"/images/symbols/\")\n                cdn = \"https://semtalkportal45.azurewebsites.net/\";\n              let l0 = l.replace(\"/images\", cdn);\n              mst[\"logo\"] = l0;\n            } else {\n              mst[\"logo\"] = support_lib + l;\n            }\n          } else {\n            // let l1 = support_lib + \"/images/stencils/\";\n            // let l0 = mst[\"logo\"].replace(\"https://semtalkportal45.azurewebsites.net/stencils/\", l1);\n            // mst[\"logo\"] = l0;\n          }\n          let sc = ob.FindSystemClass(mst[\"name\"]);\n          if (sc) {\n            mst[\"label\"] = sc.ID2NameNspLan(Code2Language(guilanguage));\n          } else {\n            mst[\"label\"] = mst[\"name\"];\n          }\n        }\n      }\n\n      // if (proc) {\n      //   let PROC_STENCIL = await this.initStencil(proc, template, sprops, showBPMN, loadStencil);\n      //   this.stencil_registry[proc.ObjectName] = PROC_STENCIL;\n      //   if (PROC_STENCIL) {\n      //     for (let mst of PROC_STENCIL) {\n      //       if (mst[\"logo\"]) {\n      //         let l = mst[\"logo\"];\n      //         if (l.indexOf(\"/images\") === 0) {\n      //           let cdn = sprops.cdn;\n      //           let mtyp = mst[\"type\"];\n      //           if (l.indexOf(\".svg\") > -1 && mtyp !== \"general\" && mtyp !== \"svg\" && mtyp !== \"png\" && mtyp !== \"image\" &&\n      //             cdn.length > 0 && sprops.context) {\n      //             if (cdn === support_lib + \"/images/symbols/\")\n      //               cdn = \"https://semtalkportal45.azurewebsites.net/\";\n      //             let l0 = l.replace(\"/images\", cdn);\n      //             mst[\"logo\"] = l0;\n      //           } else {\n      //             mst[\"logo\"] = support_lib + l;\n      //           }\n      //         } else {\n      //           // let l1 = support_lib + \"/images/stencils/\";\n      //           // let l0 = mst[\"logo\"].replace(\"https://semtalkportal45.azurewebsites.net/stencils/\", l1);\n      //           // mst[\"logo\"] = l0;\n      //         }\n\n      //         let sc = ob.FindSystemClass(mst[\"name\"]);\n      //         if (sc) {\n      //           mst[\"label\"] = sc.ID2NameNspLan(Code2Language(guilanguage));\n      //         } else {\n      //           mst[\"label\"] = mst[\"name\"];\n      //         }\n      //       }\n      //     }\n      //   }\n      // }\n    }\n\n    let CLASS_STENCIL0: SemTalkStencil = [];\n    this.stencil_registry[Process_ElementName.SLClassModel] = CLASS_STENCIL0;\n    CLASS_STENCIL0.push(...CLASS_STENCIL);\n    for (let mst of CLASS_STENCIL0) {\n      if (mst[\"logo\"]) {\n        let l = mst[\"logo\"];\n        if (l.indexOf(\"/images\") === 0) {\n          let cdn = sprops.cdn;\n          let mtyp = mst[\"type\"];\n          if (l.indexOf(\".svg\") > -1 && mtyp !== \"general\" && mtyp !== \"svg\" && mtyp !== \"png\" && mtyp !== \"image\" &&\n            cdn.length > 0 && sprops.context) {\n            if (cdn === support_lib + \"/images/symbols/\")\n              cdn = \"https://semtalkportal45.azurewebsites.net/\";\n            let l0 = l.replace(\"/images\", cdn);\n            mst[\"logo\"] = l0;\n          } else {\n            mst[\"logo\"] = support_lib + l;\n          }\n        }\n        let sc = ob.FindSystemClass(mst[\"name\"]);\n        if (sc) {\n          mst[\"label\"] = sc.ID2NameNspLan(Code2Language(guilanguage));\n        } else {\n          if (sem && mst[\"label\"]) {\n            mst[\"label\"] = sem.getResStrListener(mst[\"label\"], guilanguage);\n          } else {\n          }\n        }\n      }\n    }\n    let UMLCLASS_STENCIL0: SemTalkStencil = [];\n    this.stencil_registry[Process_ElementName.SLObjectModel] = UMLCLASS_STENCIL0;\n    UMLCLASS_STENCIL0.push(...UMLCLASS_STENCIL);\n    for (let mst of UMLCLASS_STENCIL0) {\n      if (mst[\"logo\"]) {\n        let l = mst[\"logo\"];\n        if (l.indexOf(\"/images\") === 0) {\n          let cdn = sprops.cdn;\n          let mtyp = mst[\"type\"];\n          if (l.indexOf(\".svg\") > -1 && mtyp !== \"general\" && mtyp !== \"svg\" && mtyp !== \"png\" && mtyp !== \"image\" &&\n            cdn.length > 0 && sprops.context) {\n            if (cdn === support_lib + \"/images/symbols/\")\n              cdn = \"https://semtalkportal45.azurewebsites.net/\";\n            let l0 = l.replace(\"/images\", cdn);\n            mst[\"logo\"] = l0;\n          } else {\n            mst[\"logo\"] = support_lib + l;\n          }\n        }\n        let sc = ob.FindSystemClass(mst[\"name\"]);\n        if (sc) {\n          mst[\"label\"] = sc.ID2NameNspLan(Code2Language(guilanguage));\n        } else {\n          if (sem && mst[\"label\"]) {\n            mst[\"label\"] = sem.getResStrListener(mst[\"label\"], guilanguage);\n          } else {\n          }\n        }\n      }\n    }\n    let GENERIC_STENCIL0: SemTalkStencil = [];\n    GENERIC_STENCIL0.push(...GENERIC_STENCIL);\n    this.stencil_registry[SemTalkBaseConstant.SLGeneric] = GENERIC_STENCIL0;\n    for (let mst of GENERIC_STENCIL0) {\n      if (mst[\"logo\"]) {\n        let l = mst[\"logo\"];\n        if (l.indexOf(\"/images\") === 0) {\n          let cdn = sprops.cdn;\n          let mtyp = mst[\"type\"];\n          if (l.indexOf(\".svg\") > -1 && mtyp !== \"general\" && mtyp !== \"svg\" && mtyp !== \"png\" && mtyp !== \"image\" &&\n            cdn.length > 0 && sprops.context) {\n            if (cdn === support_lib + \"/images/symbols/\")\n              cdn = \"https://semtalkportal45.azurewebsites.net/\";\n            let l0 = l.replace(\"/images\", cdn);\n            mst[\"logo\"] = l0;\n          } else {\n            mst[\"logo\"] = support_lib + l;\n          }\n        } else {\n        }\n        let sc = ob.FindSystemClass(mst[\"name\"]);\n        if (sc) {\n          mst[\"label\"] = sc.ID2NameNspLan(Code2Language(guilanguage));\n        } else {\n          if (sem && mst[\"label\"]) {\n            mst[\"label\"] = sem.getResStrListener(mst[\"label\"], guilanguage);\n          } else {\n          }\n        }\n      }\n    }\n    return template;\n  }\n\n  public setStencil = (diag: ISemTalkDiagram): SemTalkStencil => {\n    let stencil: SemTalkStencil = [];\n    let dclass = diag.ClassOf();\n    let dclassname = dclass.ObjectName;\n    const ob = diag.ObjectBase;\n    switch (dclassname) {\n      case SemTalkBaseConstant.SLGeneric: {\n        stencil = this.stencil_registry[SemTalkBaseConstant.SLGeneric];\n        break;\n      }\n      case ob.GetModelAttribute(Process_ElementName.SLProc): {\n        stencil = this.stencil_registry[dclassname];\n        break;\n      }\n      // case cit_DiagramTypeName.Dialogmodell:\n      //   stencil = this.stencil_registry[dclassname];\n      //   break;\n      default: {\n        let isclass = dclass.IsClass;\n        if (isclass) {\n          if (dclass.UMLShape) {\n            stencil = this.stencil_registry[Process_ElementName.SLObjectModel];\n          } else {\n            stencil = this.stencil_registry[Process_ElementName.SLClassModel];\n          }\n          // return this.stencil;\n        } else {\n          stencil = this.stencil_registry[dclassname];\n        }\n      }\n    }\n    return stencil;\n  }\n  public renderUserTab = (_tab: string, _object: ISemTalkObject): any => {\n    return \"\";\n  }\n  public captionUserTab = (_tab: string): string => {\n    return \"\";\n  }\n\n  public deleteShapes = (): void => {\n    this.beginTransaction(\"\", \"deleteShapes\");\n    let sel: any = this.graph.getSelectionCells();\n    this.graph.removeCells(sel, true);\n    this.endTransaction(\"\", \"deleteShapes\");\n  }\n  public getLabel = (cell: mxCell, tmp: string): string => {\n    let ff0 = '\"Segoe UI WestEuropean\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif';\n    let ff = (window as any).localStorage.getItem(SemTalkCookie.font);\n    if (ff === 'undefined') ff = ff0;\n    if (!ff) ff = ff0;\n    let fontfamily = \";font-family:\" + ff;\n\n    if (cell.vertex && cell.objectid && cell.shapeName !== Process_ElementName.Swimlane) {\n      // let html = '<div style=\"width: ' + \"$Width\" + 'px; white-space:normal;\">' + \"$Group\" + '</div>';\n      let style: string = cell.style;\n      let align = \"\";\n      if (style.indexOf(\"align=left\") > 0) {\n        align = \";text-align:left\";\n      }\n\n      let html = '<div style=\"min-width: ' + \"$Width\" + 'px;white-space:normal; padding: 5px 5px 5px 5px' + align + fontfamily + '\">' + \"$Group\" + '</div>';\n      html = html.replace(\"$Width\", String(Number(cell.geometry.width) - 10));\n      let obj = this.visCellSystemClass(cell.objectid);\n\n      if (cell.shapeName === SemTalkMaster.MasterComment) {\n        html = '<div style=\"margin-left:15px;margin-top:15px;height:$Heightpx; width:$Widthpx; text-align:left; white-space:normal' + fontfamily + '\">' + \"$Group\" + '</div>';\n        html = html.replace(\"$Width\", String(Number(cell.geometry.width) - 10));\n        html = html.replace(\"$Height\", String(Number(cell.geometry.height)));\n      }\n      // if (obj) { } else {\n      //   return tmp;\n      // }\n      if (obj && obj.ShapeHTML.length > 0) {\n        html = obj.ShapeHTML;\n      }\n      let s: string = cell.style;\n      if (cell.shapeName === SemTalkMaster.MasterUMLClass && s.startsWith(\"shape=umlclass;\")) {\n        let cla = this.base.FindClassByID(cell.objectid);\n        if (cla) {\n          const claname = cla.ObjectCaption;\n          let alist: string = '';\n          let mlist: string = '';\n          let attr = cla.Attributes();\n          let rows = attr.length + 1;\n          let atable = '';\n          if (attr.length > 0) {\n            for (let a of attr) {\n              alist += '<tr><td>' + a.ClassOf().ObjectCaption + '</td></tr>';\n            }\n          }\n          let mtable = '';\n          if (this.base.IsBusinessClass(cla)) {\n            let methods = (cla as ISemTalkBusinessClass).Methods();\n            let states = (cla as ISemTalkBusinessClass).States();\n            if (states.length > 0) {\n              for (let a of states) {\n                alist += '<tr><td>' + a.ClassOf().ObjectCaption + '</td></tr>';\n              }\n            }\n            if (methods.length > 0) {\n              for (let m of methods) {\n                mlist += '<tr><td>' + m.ClassOf().ObjectCaption + '</td></tr>';\n              }\n            }\n            rows += methods.length + states.length;\n\n          }\n          if (alist.length > 0) {\n            atable = '<table style=\"width:100%;border-style:solid; border-width:1px; padding: 0px 0px 0px 0px\">' +\n              alist + '</table>';\n          }\n          if (mlist.length > 0) {\n            mtable = '<table style=\"width:100%;border-style:solid; border-width:1px; padding: 0px 0px 0px 0px\">' +\n              mlist + '</table>';\n          }\n          tmp = '<table align=\"top\" style=\"width:100%; border-style:solid; border-width:0px;\">' +\n            '<tr align=\"center\" style=\"vertical-align:top; padding: 10px 15px 10px 15px\"><td><b>' +\n            claname + '</b></td></tr>' +\n            '<tr align=\"left\"><td>' + atable + '</td></tr>' +\n            '<tr align=\"left\"><td>' + mtable + '</td></tr>' +\n            '</table>';\n          html = '<div style=\"height:$Heightpx; width:$Widthpx;white-space:normal; padding: 5px 5px 5px 5px' + fontfamily + '\">' + \"$Group\" + '</div>';\n\n          // if (cell.geometry.height < rows * 22) {\n          //   cell.geometry.height = rows * 22;\n          // }\n          console.debug(rows);\n\n          // html = html.replace(\"$Width\", \"80\");\n          // html = html.replace(\"$Height\", \"100\");\n          html = html.replace(\"$Width\", String(Number(cell.geometry.width)));\n          html = html.replace(\"$Height\", String(Number(cell.geometry.height)));\n        }\n\n      }\n      html = html.replace(\"$Group\", tmp);\n      return html;\n      //  return '<div style=\"width: ' + cell.geometry.width + 'px; white-space:normal;\">' + tmp + '</div>';\n    }\n    if (!cell.vertex && cell.objectid) {\n      return '<div style=\"width: ' + \"150\" + 'px; white-space:normal' + fontfamily + '\">' + tmp + '</div>';\n    }\n    return tmp;\n  }\n  private _ribbonKeys: { [keyEvent: string]: any } = {};\n  private _ribbon: SemTalkRibbon | null = null;\n  private _toolbar: SemTalkRibbon | null = null;\n  public getRibbon = (ribbon?: SemTalkRibbon, toolbar?: SemTalkRibbon): { \"ribbon\": SemTalkRibbon, \"toolbar\": SemTalkRibbon, \"keys\": { [keyEvent: string]: any } } => {\n    if (!this._ribbon) {\n      const getRibbonKeys = (r: SemTalkRibbon) => {\n        let funcKeys: { [keyEvent: string]: any } = {};\n        let parseMenuItem = (jitem: any): any => {\n          let nitem: any = {};\n          if (jitem[\"key\"]) {\n            let ev = jitem[\"keyEvent\"];\n            if (ev && ev.length > 0) {\n              funcKeys[ev] = jitem;\n            }\n            if (jitem[\"subMenuProps\"]) {\n              for (let sitem of jitem[\"subMenuProps\"][\"items\"]) {\n                parseMenuItem(sitem);\n              }\n            }\n          }\n          return nitem;\n        };\n        for (let jitem of r) {\n          parseMenuItem(jitem);\n        }\n        return funcKeys;\n      };\n      if (!ribbon) {\n        this._ribbon = require(\"./ribbon.json\");\n      } else {\n        this._ribbon = ribbon;\n      }\n      if (!toolbar) {\n        this._toolbar = require(\"./toolbar.json\");\n      } else {\n        this._toolbar = toolbar;\n      }\n      if (this._ribbon) {\n        this._ribbonKeys = getRibbonKeys(this._ribbon);\n      }\n    }\n    if (this._ribbon && this._toolbar) {\n      return { \"ribbon\": this._ribbon, \"toolbar\": this._toolbar, \"keys\": this._ribbonKeys };\n    } else {\n      return { \"ribbon\": [], \"toolbar\": [], \"keys\": this._ribbonKeys };\n    }\n  }\n  public AddonCommand = (args: any): void => {\n    if (args[\"command\"]) {\n      alert(args[\"command\"]);\n      args[\"callback\"].showSubTask(args[\"command\"]);\n    }\n  }\n  public renderSubTaskDialog = (addoncommand: string): any => {\n    return \"renderSubTaskDialog: \" + addoncommand;\n  }\n\n  public alert(s: string, mtype: MessageBarType) {\n    if (this.tseditor) {\n      this.tseditor.alert(s, mtype);\n    }\n  }\n\n  /*  public refreshPage(msgraphclient: MSGraphClient, context: any, site: string) {\n     if (this.page) {\n       if (this.tseditor) {\n         this.tseditor.beginUpdate();\n       }\n       let di = this.base.FindAssociationType(SemTalkBaseConstant.SLdisplays);\n       let inf = this.base.FindAssociationType(this.base.GetModelAttribute(SemTalkModellAttribute.SLInfoType));\n       for (let nd of this.page.Contents()) {\n         let fnd = false;\n         let obj = nd.Model;\n         if (obj.EditLink) {\n           this.refreshObject(obj, msgraphclient, context, site);\n         } else {\n           if (di) {\n             for (let ro of obj.LinkedObjects(di)) {\n               this.refreshObject(ro, msgraphclient, context, site);\n               fnd = true;\n             }\n           }\n           if (!fnd) {\n             if (inf) {\n               for (let info of obj.LinkedObjects(inf)) {\n                 this.refreshObject(info, msgraphclient, context, site);\n                 fnd = true;\n               }\n             }\n           }\n         }\n       }\n       if (this.tseditor) {\n         this.tseditor.endUpdate();\n       }\n       if (this.tseditor) {\n         this.tseditor.refresh();\n       }\n     }\n   }\n   public refreshObject(obj: ISemTalkObject, msgraphclient: MSGraphClient, context: any, site: string) {\n     if (obj.EditLink) {\n       if (obj.EditLink.indexOf(\"Web\") < 0) {\n         this.refreshGraphObject(msgraphclient, obj);\n       } else {\n         this.refreshRepositoryObject(context, site, obj);\n       }\n     }\n   }\n\n   public refreshGraphObject = async (msgraphclient: MSGraphClient, obj: ISemTalkObject) => {\n     if (obj.EditLink && obj.EditLink.indexOf(\"Web\") < 0) {\n       let res = await fetchGraph(obj.EditLink + \"/\" + obj.ObjectName, \"\", \"\", msgraphclient);\n       if (res) {\n         let upd = false;\n         if (res.description && obj.Comment !== res.description) {\n           obj.Comment = res.description;\n         }\n         let syn = obj.FindSynonym(this.base.CurrentNsp);\n         if (syn !== res.displayName) {\n           obj.MakeSynonym(res.displayName, this.base.CurrentNsp);\n           upd = true;\n         }\n         if (upd) this.UpdateByID(obj.ID);\n\n       }\n     }\n   }\n\n   public refreshRepositoryObject = async (context: any, site: string, obj: ISemTalkObject) => {\n     let sc = obj.SystemClass();\n     if (sc !== null) {\n       try {\n         let le = obj.EditLink;\n         if (le && le.indexOf(\"Items(\") > 0) {\n           le = le.substring(le.lastIndexOf(\"(\") + 1, le.lastIndexOf(\")\"));\n           let listname = this.getSPListName(sc.ObjectName);\n           let lany: any = await getListItem(context, site, listname, le);\n           let li: SPListItem = lany;\n           let upd = false;\n           if (li[\"Comment\"]) {\n             if (obj.Comment !== li[\"Comment\"]) {\n               obj.Comment = li[\"Comment\"];\n               upd = true;\n             }\n           }\n           let syn = obj.FindSynonym(this.base.CurrentNsp);\n           if (syn !== li[\"Title\"]) {\n             obj.MakeSynonym(li[\"Title\"], this.base.CurrentNsp);\n             upd = true;\n           }\n           if (upd) this.UpdateByID(obj.ID);\n         }\n       } catch (e) {\n         alert(e);\n       }\n     }\n   } */\n}\n","import React from \"react\";\r\nimport { IMongoOption, mgLogin_with_email_password, mglistDatabases } from '../../SemTalkMongoServer';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MessageBar, MessageBarType,\r\n  Stack, StackItem, Text, TextField, DefaultButton, PrimaryButton,\r\n  Dropdown, IDropdownOption\r\n} from 'office-ui-fabric-react';\r\nimport { VisioRDFS } from '../../application/semtalklistener/visiordfs';\r\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { SemTalkCookie } from \"../../ISemTalkOnline\";\r\n\r\n\r\nexport interface ILoginProps {\r\n  setToken: any;\r\n  setcurrToken: any;\r\n  mongo: IMongoOption;\r\n}\r\nexport interface ILoginState {\r\n  username: string | null;\r\n  password: string | null;\r\n  dbname: string;\r\n  repository: string;\r\n  success: boolean;\r\n  nosuccess: boolean;\r\n  errormsg: string;\r\n  options: IDropdownOption[];\r\n  repoptions: IDropdownOption[];\r\n}\r\nexport default class Login extends React.Component<ILoginProps, ILoginState> {\r\n  private res: IVisioRDFS;\r\n  constructor(props: ILoginProps) {\r\n    super(props);\r\n\r\n    let gl = (window as any).localStorage.getItem(SemTalkCookie.guilanguage);\r\n    if (!gl) gl = navigator.languages[1] || navigator.language;\r\n\r\n    this.res = new VisioRDFS(null, null);\r\n    this.res.init(null, gl);\r\n    this.state = {\r\n      username: null,\r\n      password: null,\r\n      dbname: this.props.mongo.dbname,\r\n      repository: this.props.mongo.repository,\r\n      success: true,\r\n      nosuccess: false,\r\n      errormsg: this.res.getResStr(\"STRLoginFailed\"),\r\n      options: [],\r\n      repoptions: []\r\n    };\r\n    this.initOptions(this.props.mongo.dbname, this.props.mongo.repository);\r\n  }\r\n\r\n  private async initOptions(dbname: string, repository: string) {\r\n    let dblist = await mglistDatabases(this.props.mongo, this.props.mongo.semmongoconnectiontoken, this.props.mongo.dbname, \"SDX\");\r\n    // console.debug(dblist);\r\n    let options = [{ key: \"semtalkonline\", text: \"Default\" }];\r\n    for (let db of dblist) {\r\n      if (db !== \"semtalkonline\") {\r\n        options.push({ key: db, text: db });\r\n      }\r\n    }\r\n    let repdblist = await mglistDatabases(this.props.mongo, this.props.mongo.semmongoconnectiontoken, this.props.mongo.dbname, \"Objects\");\r\n    let repoptions = [{ key: \"repository\", text: \"Default\" }];\r\n    for (let db of repdblist) {\r\n      if (db !== \"repository\") {\r\n        repoptions.push({ key: db, text: db });\r\n      }\r\n    }\r\n    this.setState({\r\n      dbname: dbname,\r\n      repository: repository,\r\n      options: options,\r\n      repoptions: repoptions\r\n    });\r\n  }\r\n  private handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    if (this.state.username && this.state.password) {\r\n      if (this.state.username.toLowerCase().toString().indexOf(\"@\") > 0 && this.state.username.toLowerCase().toString().indexOf(\".\") > 0) {\r\n        // let mongo = { usemongo: true,\r\n        //   semmongoserverurl: this.props.semmongoserverurl,\r\n        //   documents: \"SDX\",\r\n        //   templates: \"Templates\",\r\n        //   stencils: \"Stencils\",\r\n        //   semuserlogin: \"\",\r\n        //   semmongoconnectiontoken: this.props.semmongoconnectiontoken,\r\n        //   dbname: this.state.dbname\r\n        // };\r\n        try {\r\n          const res: any = await mgLogin_with_email_password(this.props.mongo,\r\n            this.state.dbname,\r\n            this.state.username,\r\n            this.state.password);\r\n          if (res.login_token !== undefined) {\r\n            if (res.login_token.toString().length > 0) {\r\n              (window as any).localStorage.setItem(SemTalkCookie.dbname, this.state.dbname);\r\n              (window as any).localStorage.setItem(SemTalkCookie.repository, this.state.repository);\r\n              this.props.setToken(res);\r\n              this.props.setcurrToken(res);\r\n            } else {\r\n              this.setState({ \"success\": false, \"nosuccess\": true, \"errormsg\": this.res.getResStr(\"STRLoginEmptyLoginToken\") });\r\n            }\r\n          } else {\r\n            this.setState({ \"success\": false, \"nosuccess\": true, \"errormsg\": this.res.getResStr(\"STRLoginFailed\") });\r\n          }\r\n        } catch (err) {\r\n          let msg: string = \"unknown\";\r\n          if (err && typeof err === \"object\") {\r\n            const e1: any = err;\r\n            msg = e1[\"message\"];\r\n          }\r\n          this.setState({ \"success\": false, \"nosuccess\": true, \"errormsg\": msg });\r\n        }\r\n      }\r\n      else {\r\n        this.setState({ \"success\": false, \"nosuccess\": true, \"errormsg\": this.res.getResStr(\"STRLoginUserIsNotEMail\") });\r\n      }\r\n    }\r\n  }\r\n\r\n  public render(): React.ReactElement {\r\n    let divHostStyle: any = {\r\n      // position: \"fixed\",\r\n      // height: \"100%\", //this.props.height,\r\n      // width: \"80%\", //this.props.width,\r\n      padding: \"20px\"\r\n    };\r\n    const stackTokens = { childrenGap: 10 };\r\n    return (\r\n      <div>\r\n        {this.res &&\r\n          <div>\r\n            <Stack style={divHostStyle} tokens={stackTokens}>\r\n              <StackItem>\r\n                <Text variant=\"xxLarge\">{this.res.getResStr(\"STRINTRO0\")}</Text>\r\n              </StackItem>\r\n              {/* <StackItem>\r\n                <Text variant=\"large\">{\"Please Log In or Sign up\"}</Text>\r\n              </StackItem> */}\r\n              {this.state.nosuccess && (\r\n                <MessageBar\r\n                  messageBarType={MessageBarType.error}\r\n                >\r\n                  {this.state.errormsg}\r\n                </MessageBar>\r\n              )}\r\n              <form onSubmit={this.handleSubmit}>\r\n                <Stack tokens={stackTokens}>\r\n                  <StackItem>\r\n                    <Dropdown\r\n                      placeholder={this.res.getResStr(\"STRSELECTDB\")}\r\n                      label={this.res.getResStr(\"STRSQLDATABASE\").replace(\":\", \"\")}\r\n                      selectedKey={this.state.dbname}\r\n                       onChange={(_e: any, v?: any) => {\r\n                        this.setState({ \"dbname\": v.key });\r\n                      }}\r\n                      options={this.state.options}\r\n                    />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <Dropdown\r\n                      placeholder={this.res.getResStr(\"STRSELECTREPO\")}\r\n                      label={this.res.getResStr(\"STRREPOSITORY\")}\r\n                      selectedKey={this.state.repository}\r\n                       onChange={(_e: any, v?: any) => {\r\n                        this.setState({ \"repository\": v.key });\r\n                      }}\r\n                      options={this.state.repoptions}\r\n                    />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <TextField type=\"text\" required label={this.res.getResStr(\"STRUSERID\")}\r\n                      onChange={(_e: any, v?: any) => this.setState({ \"username\": v })} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <TextField type=\"password\" required label={this.res.getResStr(\"STRDLGPWD\")}\r\n                      onChange={(_e: any, v?: any) => this.setState({ \"password\": v })} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <Stack tokens={stackTokens} horizontal>\r\n                      <PrimaryButton type=\"submit\">{this.res.getResStr(\"STRDLGBOPTLO\")}</PrimaryButton>\r\n                      <DefaultButton><Link to=\"/signup\" >{this.res.getResStr(\"STRREGISTER\")}</Link></DefaultButton>\r\n                      {/* <DefaultButton><Link to=\"/forgotpassword\" >{\"Forgot Password\"}</Link></DefaultButton> */}\r\n                      <DefaultButton><Link to=\"/options\">{this.res.getResStr(\"STRIMPOPTIONCAP\")}</Link></DefaultButton>\r\n                    </Stack>\r\n                  </StackItem>\r\n                </Stack>\r\n              </form>\r\n            </Stack>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable no-script-url */\nimport React from 'react';\nimport { List, Stack } from 'office-ui-fabric-react';\nimport styles from './sidebar.module.scss';\nimport { ITSEditor } from \"../ITSEditor\";\nimport {\n  ScrollablePane,\n  // IScrollablePaneStyles,\n  getTheme, mergeStyleSets\n} from 'office-ui-fabric-react';\nimport { Sticky, StickyPositionType } from 'office-ui-fabric-react';\nimport { SemTalkStencil } from '../application/semtalklistener/visiordfsinterface';\nimport { SemTalkCookie } from '../../components/ISemTalkOnline';\n\n// Should use: https://www.npmjs.com/package/@iconify/icons-bpmn !!!!!!!!!!!!\n\nexport interface ISideBarProps {\n  editor: ITSEditor;\n  stencil: SemTalkStencil;\n  height: number;\n}\nexport interface ISideBarState {\n  stencil: any[];\n  pairedstencil: { left: any, right: any }[];\n  editor: ITSEditor;\n}\nexport class Sidebar extends React.Component<ISideBarProps, ISideBarState> {\n  constructor(props: ISideBarProps) {\n    super(props);\n    console.debug(\"SideBar\");\n\n    this.props.editor.sidebar = this;\n    let p: { left: any, right: any }[] = [];\n    let left = true;\n    let row: any;\n    if (this.props.stencil) {\n      for (let mst of this.props.stencil) {\n        if (mst.hidden !== true) {\n          if (left) {\n            row = { left: mst };\n            left = false;\n          } else {\n            left = true;\n            row.right = mst;\n            p.push(row);\n          }\n        }\n        if (!left) {\n          p.push(row);\n        }\n      }\n    }\n\n    this.state = {\n      stencil: this.props.stencil,\n      pairedstencil: p,\n      editor: this.props.editor\n    };\n  }\n  public LoadStencil(stencil: any) {\n    let p: { left: any, right: any }[] = [];\n    let left = true;\n    let row: any;\n    for (let mst of stencil) {\n      if (mst.hidden !== true) {\n        if (left) {\n          row = { left: mst };\n          left = false;\n        } else {\n          left = true;\n          row.right = mst;\n          p.push(row);\n        }\n      }\n    }\n    if (!left) {\n      p.push(row);\n    }\n    this.setState({\n      pairedstencil: p,\n      stencil: stencil,\n    });\n\n  }\n  public componentDidMount() {\n    //  this.handleSidebarItems();\n    this.onChange();\n  }\n\n  public componentDidUpdate() {\n    this.handleSidebarItems();\n  }\n\n  private handleSidebarItems() {\n    const editor = this.state.editor;\n    // console.debug(\"handleSidebarItems1\");\n\n    if (editor && editor.initSidebar) {\n      const sidebarItems = document.querySelectorAll('.' + styles.customsidebarnode);\n      const len = sidebarItems.length;\n      let newSidebarItems: any[] = [];\n      for (let i = 0; i < len; i++) {\n        let item = sidebarItems[i];\n        if (!item.classList.contains('has-inited')) {\n          item.classList.add('has-inited');\n          newSidebarItems.push(item);\n        }\n      }\n      //   const newSidebarItems = sidebarItems.filter((item) => {\n      //   if (!item.classList.contains('has-inited')) {\n      //     item.classList.add('has-inited');\n      //     return true;\n      //   }\n      //   return false;\n      // });\n\n      editor.initSidebar(newSidebarItems);\n    }\n  }\n\n  public onChange = () => {\n    console.debug(\"handleSidebarItems\");\n    setTimeout(() => {\n      this.handleSidebarItems();\n    }, 1000);\n  }\n  /*  private _onRenderCell(shape: any, index: number | undefined): JSX.Element {\n     return (\n       <div>\n         <a\n           href=\"javascript:void(0);\"\n           key={`panel_a_${shape.key}`}\n           className={\"geItem \" + styles.customsidebarnode + \" common-panel-node\"}\n           data-shape-type={shape.type}\n           data-shape-name={shape.key}\n           data-shape-label={shape.name}\n           data-shape-width={shape.width}\n           data-shape-height={shape.height}\n         >\n           <div>\n             {shape.logo ? <img className={styles.sidebarnodeimage} src={shape.logo} alt={shape.name} /> : shape.key}\n             <div className={styles.sidebarnodelabel}>\n               {shape.name}\n             </div>\n           </div>\n         </a>\n       </div>\n     );\n   } */\n  //  href=\"javascript:void(0);\"\n\n  private theme = getTheme();\n  private classNames = mergeStyleSets({\n    wrapper: {\n      height: '50vh',\n      position: 'relative',\n      // height: \"80%\",\n      // maxHeight: 'inherit',\n    },\n    pane: {\n      maxWidth: 400,\n      border: '1px solid ' + this.theme.palette.neutralLight,\n    },\n    sticky: {\n      color: this.theme.palette.neutralDark,\n      padding: '5px 20px 5px 10px',\n      fontSize: '13px',\n      borderTop: '1px solid ' + this.theme.palette.black,\n      borderBottom: '1px solid ' + this.theme.palette.black,\n    },\n    textContent: {\n      padding: '15px 10px',\n    },\n  });\n  // private scrollablePaneStyles: Partial<IScrollablePaneStyles> = { root: this.classNames.pane };\n\n  private _onRenderRow(row: { left: any, right: any } | undefined, _index: number | undefined): JSX.Element {\n    return (\n      <Stack horizontal={true}>\n        {row && row.left &&\n          <div>\n            <a\n              href=\"#noref\"\n              key={`panel_a_${row.left.key}`}\n              className={\"geItem \" + styles.customsidebarnode + \" common-panel-node\"}\n              data-shape-type={row.left.type}\n              data-shape-name={row.left.key}\n              data-shape-subkey={row.left.subkey}\n              data-shape-label={row.left.name}\n              data-shape-width={row.left.width}\n              data-shape-height={row.left.height}\n            >\n              <div>\n                {row.left.logo ? <img className={styles.sidebarnodeimage} src={row.left.logo} alt={row.left.label} /> : row.left.key}\n                <div className={styles.sidebarnodelabel}>\n                  {row.left.label}\n                </div>\n              </div>\n            </a>\n          </div>\n        }\n        {row && row.right &&\n          <div>\n            <a\n              href=\"#noref\"\n              key={`panel_a_${row.right.key}`}\n              className={\"geItem \" + styles.customsidebarnode + \" common-panel-node\"}\n              data-shape-type={row.right.type}\n              data-shape-name={row.right.key}\n              data-shape-subkey={row.right.subkey}\n              data-shape-label={row.right.label}\n              data-shape-width={row.right.width}\n              data-shape-height={row.right.height}\n            >\n              <div>\n                {row.right.logo ? <img className={styles.sidebarnodeimage} src={row.right.logo} alt={row.right.label} /> : row.right.key}\n                <div className={styles.sidebarnodelabel}>\n                  {row.right.label}\n                </div>\n              </div>\n            </a>\n          </div>\n        }\n      </Stack >\n    );\n  }\n\n  // private contentAreas: any[] = this.state.pairedstencil.map(this._onRenderRow);\n\n  public render(): React.ReactElement<ISideBarProps> {\n    // let s: string = String(this.props.height);\n    // let divHostStyle = {\n    //   // height: s + \"px\"\n    //   height: \"80%\"\n    //   // width: \"100%\" //this.props.width\n    // };\n    let bg = (window as any).localStorage.getItem(SemTalkCookie.backgroundColor);\n    if (bg === 'undefined' || bg === null) {\n      bg = \"white\";\n    }\n    return (\n      <div className={\"J_Sidebar_Container \" + styles.sidebarcontainer}>\n\n        {/* <List items={this.state.SIDEBAR_BASIC_SHAPES}\n          onRenderCell={this._onRenderCell} /> */}\n        <div className={this.classNames.wrapper}>\n          <ScrollablePane\n          // scrollContainerFocus={true}\n          // scrollContainerAriaLabel=\"Sticky component example\"\n          // styles={this.scrollablePaneStyles}\n          >\n            {/* {...this.contentAreas} */}\n            <div style={{ backgroundColor: bg }}>\n              <Sticky stickyPosition={StickyPositionType.Both}>\n                <div role=\"heading\" aria-level={1} className={this.classNames.sticky}>\n                  Basic\n                </div>\n              </Sticky>\n              <List items={this.state.pairedstencil.slice(0, 3)}\n                onRenderCell={this._onRenderRow} />\n            </div>\n            <div style={{ backgroundColor: bg }}>\n              <Sticky stickyPosition={StickyPositionType.Both}>\n                <div role=\"heading\" aria-level={1} className={this.classNames.sticky}>\n                  Extended\n                </div>\n              </Sticky>\n              <List items={this.state.pairedstencil.slice(3)}\n                onRenderCell={this._onRenderRow} />\n            </div>\n          </ScrollablePane>\n        </div>\n        {/*       <List items={this.state.stencil}\n          onRenderCell={this._onRenderCell} />\n */}        {/*     <List items={this.state.SIDEBAR_SVG_SHAPES}\n      onRenderCell={this._onRenderCell} /> */\n /*  <List items={this.state.SIDEBAR_IMAGE_SHAPES}\n        onRenderCell={this._onRenderCell} />\n      <List items={this.state.SIDEBAR_CARD_SHAPES}\n        onRenderCell={this._onRenderCell} />\n */} </div>\n    );\n    /*       <div className={styles.sidebarcontainer}>\n            <Stack\n            // bordered={false}\n            // defaultActiveKey={['common', 'svg', 'picture', 'card']}\n            // onChange={() => {\n            //   this.onChange();\n            // }}\n            >\n              <Panel key=\"common\" headerText=\"basic\">\n                <Stack>\n                  {SIDEBAR_BASIC_SHAPES.map(shape => (\n                    <a\n                      href=\"javascript:void(0);\"\n                      key={`panel_a_${shape.key}`}\n                      className={styles.customsidebarnode}>\n                      data-shape-type=\"general\"\n                    data-shape-name={shape.key}\n                    data-shape-label={shape.name}\n                    data-shape-width={shape.width}\n                    data-shape-height={shape.height}\n                  >\n                      <Tooltip\n                      placement=\"top\"\n                      title={shape.name}\n                      key={`panel_${shape.key}`}\n                      className=\"tooltip\"\n                    >\n                      {shape.logo ? <img className={styles.sidebarnodeimage} src={shape.logo} alt=\"\" /> : shape.key}\n                      <span className={styles.sidebarnodelabel}>\n                        {shape.name}\n                      </span>\n                      </Tooltip>\n                    </a>\n                  ))}\n                </Stack>\n              </Panel>\n\n              <Panel headerText=\"svg shapes\" key=\"svg\">\n                <Stack>\n                  {SIDEBAR_SVG_SHAPES.map(shape => (\n                    <a\n                      href=\"javascript:void(0);\"\n                      key={`panel_a_${shape.key}`}\n                      className={styles.customsidebarnode}>\n                      data-shape-type=\"svg\"\n                    data-shape-name={shape.key}\n                    data-shape-label={shape.name}\n                    data-shape-width={shape.width}\n                    data-shape-height={shape.height}\n                  >\n                      <Tooltip\n                      placement=\"top\"\n                      title={shape.name}\n                      key={`panel_${shape.key}`}\n                      className=\"tooltip\"\n                    >\n                      <img className={styles.sidebarnodeimage} src={shape.logo} alt=\"\" />\n                      <span className={styles.sidebarnodelabel}>\n                        {shape.name}\n                      </span>\n                     </Tooltip>\n                    </a>\n                  ))}\n                </Stack>\n              </Panel>\n              <Panel headerText=\"images\" key=\"picture\">\n                <Stack>\n                  {IMAGE_SHAPES.map(shape => (\n                    <a\n                      onClick={(e) => {\n                        e.preventDefault();\n                        return false;\n                      }}\n                      key={`panel_a_${shape.key}`}\n                      href=\"a\"\n                      className={styles.customsidebarnode}>\n                      data-shape-type=\"image\"\n                    data-shape-width={shape.width}\n                    data-shape-height={shape.height}\n                    data-shape-name={shape.key}\n                    data-shape-label={shape.name}\n                    title={shape.name}\n                  >\n                       <Tooltip\n                      placement=\"top\"\n                      title={shape.name}\n                      key={`panel_${shape.key}`}\n                      className=\"tooltip\"\n                    >\n                      <img className={styles.sidebarnodeimage} src={shape.logo} alt=\"\" />\n                      <span className={styles.sidebarnodelabel}>\n                        {shape.name}\n                      </span>\n                     </Tooltip>\n                    </a>\n                  ))}\n                </Stack>\n              </Panel>\n\n              <Panel headerText=\"cards\" key=\"card\">\n                <Stack>\n                  {SIDEBAR_CARD_SHAPES.map(shape => (\n                    <a\n                      onClick={(e) => {\n                        e.preventDefault();\n                        return false;\n                      }}\n                      key={`panel_a_${shape.key}`}\n                      href=\"a\"\n                      className={styles.customsidebarnode}>\n                      data-shape-type=\"card\"\n                    data-shape-width={shape.width}\n                    data-shape-height={shape.height}\n                    data-shape-name={shape.key}\n                    data-shape-label={shape.name}\n                    title={shape.name}\n                  >\n                     <Tooltip\n                        placement=\"top\"\n                        title={shape.name}\n                        key={`panel_${shape.key}`}\n                        className=\"tooltip\"\n                      >\n                        <img className={styles.sidebarnodeimage} src={shape.logo} alt=\"\" />\n                        <span className={styles.sidebarnodelabel}>\n                          {shape.name}\n                        </span>\n                       </Tooltip>\n\n                    </a>\n                  ))}\n                </Stack>\n\n              </Panel>\n\n            </Stack>\n\n          </div>\n     */\n  }\n}\n\n// SideBar.propTypes = {\n//   editor: PropTypes.object,\n// };\n\n// // Specifies the default values for props:\n// SideBar.defaultProps = {\n//   editor: {},\n// };\n","import React from 'react';\nimport { ITSEditor } from \"../ITSEditor\";\nimport styles from './pages.module.scss';\nimport {\n  Dropdown, IDropdownOption\n} from 'office-ui-fabric-react';\n\n\nexport interface IPagesProps {\n  editor: ITSEditor;\n  diaglist: { text: string, key: number }[];\n  diagid: number;\n}\n\nexport interface IPagesState {\n  options: IDropdownOption[];\n  objectid: number;\n}\n\nexport class Pages extends React.Component<IPagesProps, IPagesState> {\n  constructor(props: IPagesProps) {\n    super(props);\n    console.debug(\"Pages\");\n    this.props.editor.pages = this;\n    this.state = {\n      objectid: this.props.diagid,\n      options: this.props.diaglist,\n   };\n  }\n  // public loadDiag(diaglist: {ObjectCaption: string, ID: number}[], diagid: number) {\n  //   let lis: IDropdownOption[] = [];\n  //   for (const dt of diaglist) {\n  //       let d: any;\n  //       d = { text: dt.ObjectCaption, key: dt.ID };\n  //       lis.push(d);\n  //     }\n  //   this.setState({ options: lis, objectid: diagid });\n  // }\n\n  private _onOptionChange = (_ev: any, option: any, _index?: number | undefined, _value?: string | undefined): void => {\n    if (option) {\n      let n: number = option.key as number;\n    //  this.setState({ objectid: n });\n    //  console.debug(\"pages: gotodocument\" + n);\n     this.props.editor.gotoPage(n);\n    }\n  }\n\n  public UNSAFE_componentWillReceiveProps = (nextProps: any) => {\n    this.setState({\n      objectid: nextProps.diagid,\n      options: nextProps.diaglist,\n    });\n  }\n\n  public render(): React.ReactElement<IPagesProps> {\n    return (\n      <div className={styles.semTalkPages}>\n        <Dropdown\n          onChange={this._onOptionChange}\n          options={this.state.options}\n          selectedKey={this.state.objectid}\n        />\n      </div>\n    );\n  }\n}\n","\n/* tslint:disable:noImplicitAny */\n/* eslint:disable:noImplicitAny */\nimport {\n  // mxGraph,\n  mxEvent,\n  // mxEdgeStyle,\n  mxConstants,\n  mxCell,\n  // mxGeometry,\n  // mxRubberband,\n  // mxDragSource,\n  // mxKeyHandler,\n  // mxCodec,\n  // mxClient,\n  // mxConnectionHandler,\n  mxUtils,\n  // mxImage,\n  mxImageExport,\n  // mxVertexHandler,\n  // mxPerimeter,\n  // mxUndoManager,\n  // mxClipboard,\n  mxConstraintHandler,\n  mxGraphHandler,\n  mxEdgeHandler,\n  // mxShape,\n  mxPolyline,\n  // mxConnectionConstraint,\n  // mxPoint,\n  mxCellState,\n  // mxAutoSaveManager,\n  mxRectangle,\n  // mxStencilRegistry,\n  // mxStencil,\n  // mxGraphModel,\n  // mxSwimlaneManager,\n  // mxStackLayout,\n  // mxLayoutManager,\n  // mxCellRenderer,\n  // mxActor,\n  // mxCylinder,\n  // mxCircleLayout,\n  // mxMorphing,\n  //  mxFastOrganicLayout\n\n} from \"mxgraph-js\";\nimport { TSEditor } from \"./tseditor\";\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\n\n// let keydownhandler: any[] = [];\nexport default {\n\n  // /**\n  //  * init graph\n  //  * @param {graph} config\n  //  */\n  // initGraph(config: any) {\n  //   const {\n  //     graph\n  //   } = config;\n\n  //   // keydownhandler = [];\n\n  //   // // Enables HTML labels\n  //   graph.setHtmlLabels(true);\n\n  //   // Enables panning with left mouse button\n  //   // graph.centerZoom = false;\n  //   // graph.panningHandler.useLeftButtonForPanning = true;\n  //   // graph.panningHandler.ignoreCell = true;\n  //   // graph.container.style.cursor = 'move';\n  //   // graph.setPanning(true);\n\n  //   // // Uncomment the following if you want the container\n  //   // // to fit the size of the graph\n  //   // graph.setResizeContainer(true);\n  //   // graph.fit();\n\n  //   // var style = graph.getStylesheet().getDefaultEdgeStyle();\n  //   // style[mxConstants.STYLE_EDGE] = mxEdgeStyle.ElbowConnector;\n\n  //   // let ce = graph.createCellEditor();\n  //   // ce.focusLost = function (cancel: any) {\n  //   //   console.debug(ce.editingCell);\n  //   //   mxCellEditor.prototype.focusLost();\n  //   // }\n  //   // graph.cellEditor = ce\n  //   // mxCellEditor.prototype.blurEnabled = true;\n\n  //   graph.gridSize = 10;\n  //   graph.setConnectable(true);\n  //   // graph.setPortsEnabled(false);\n  //   graph.connectionHandler.createTarget = false;\n  //   graph.setCellsCloneable(false);\n  //   graph.border = 80;\n  //   graph.getView().translate = new mxPoint(graph.border / 2, graph.border / 2);\n  //   graph.setResizeContainer(true);\n  //   // console.debug(graph);\n\n\n  //   // graph.setMultigraph(false);\n  //   // var keyHandler = new mxKeyHandler(graph);\n  //   // keyHandler.bindKey(46, (evt) => {\n  //   //   if (graph.isEnabled()) {\n  //   //     graph.removeCells();\n  //   //   }\n  //   // });\n  //   // keyHandler.bindKey(37, (evt) => {\n  //   //   console.debug(\"ArrowLeft\");\n  //   // });\n  //   // graph.container.setAttribute('tabindex', '-1');\n  //   // graph.container.focus();\n\n  //   // Enables rubberband selection\n  //   new mxRubberband(graph); //eslint-disable-line\n\n  //   //    // Truncates the label to the size of the vertex\n  //   // graph.getLabel = function (cell) {\n  //   //   var label = this.labelsVisible\n  //   //     ? this.convertValueToString(cell)\n  //   //     : \"\";\n  //   //   var geometry = this\n  //   //     .model\n  //   //     .getGeometry(cell);\n\n  //   //   if (!this.model.isCollapsed(cell) && geometry != null && (geometry.offset == null || (geometry.offset.x == 0 && geometry.offset.y == 0)) && this.model.isVertex(cell) && geometry.width >= 2) {\n  //   //     var style1 = this.getCellStyle(cell);\n  //   //     var fontSize = style1[mxConstants.STYLE_FONTSIZE] || mxConstants.DEFAULT_FONTSIZE;\n  //   //     var max = geometry.width / (fontSize * 0.625);\n\n  //   //     if (max < label.length) {\n  //   //       return label.substring(0, max) + \"...\";\n  //   //     }\n  //   //   }\n\n  //   //   return label;\n  //   // };\n\n  //   // // Enables wrapping for vertex labels\n  //   // graph.isWrapping = function (cell) {\n  //   //   return this\n  //   //     .model\n  //   //     .isCollapsed(cell);\n  //   // };\n\n  //   // // Enables clipping of vertex labels if no offset is defined\n  //   // graph.isLabelClipped = function (cell) {\n  //   //   var geometry = this\n  //   //     .model\n  //   //     .getGeometry(cell);\n\n  //   //   return (geometry != null && !geometry.relative && (geometry.offset == null || (geometry.offset.x == 0 && geometry.offset.y == 0)));\n  //   // };\n\n\n  // },\n\n\n\n  // initSidebar(config: any) {\n  //   const {\n  //     graph,\n  //     sidebarItems,\n  //     cellCreatedFunc,\n  //     callback\n  //   } = config;\n\n  //   // console.debug(\"initSidebar\");\n\n  //   sidebarItems\n  //     &&\n  //     sidebarItems.forEach((item: any) => {\n  //       const width = item.getAttribute('data-shape-width');\n  //       const height = item.getAttribute('data-shape-height');\n  //       const shapeType = item.getAttribute('data-shape-type');\n  //       const shapeName = item.getAttribute('data-shape-name');\n  //       const shapeSubkey = item.getAttribute('data-shape-subkey');\n  //       const shapeLabel = item.getAttribute('data-shape-label');\n  //       const shapeContent = item.getAttribute('data-shape-content');\n\n  //       let ss = callback.GetShapeStyle(shapeName, shapeType);\n  //       let isEdge = ss.isedge;\n  //       let shapeStyle = ss.style;\n\n  //       // let shapeStyle = shapeName;\n\n  //       // // console.debug(item);\n\n  //       // if (shapeType === 'svg') {\n  //       //   shapeStyle = `shape=${shapeName}`;\n  //       // } else if (shapeType === 'general' && GENERAL_SHAPES[shapeName]) {\n  //       //   if (GENERAL_SHAPES[shapeName].type === 'edge') {\n  //       //     isEdge = true;\n  //       //   }\n  //       //   shapeStyle = GENERAL_SHAPES[shapeName].style;\n  //       // } else if (shapeType === 'image') {\n  //       //   const shape = this.findItemFromArray(this.imageShapes, {\n  //       //     key: shapeName,\n  //       //   });\n  //       //   shapeStyle = `${shapeName}`;\n  //       //   if (shape) {\n  //       //     const img = shape.logo;\n  //       //     // shapeStyle = `shape=image;html=1;verticalLabelPosition=bottom;fontColor:#fff;verticalAlign=top;imageAspect=0;image=${img}`;\n  //       //     shapeStyle = `shape=image;html=1;whiteSpace=wrap;imageAspect=0;image=${img}`;\n\n  //       //   }\n  //       // } else if (shapeType === 'card') {\n  //       //   shapeStyle = `${shapeName}`;\n  //       // }\n\n  //       // let id = Date.now() + Math.floor((Math.random() * 1000) + 1);\n  //       //let id = null;\n  //       // console.debug(\"id: \" + id);\n  //       // id: `cell${id}`,\n\n  //       this.createDragableItem({\n  //         id: null,\n  //         node: item,\n  //         width,\n  //         height,\n  //         shapeName,\n  //         shapeSubkey,\n  //         shapeLabel,\n  //         shapeContent,\n  //         graph,\n  //         isEdge,\n  //         shapeStyle,\n  //         cellCreatedFunc,\n  //       });\n  //     });\n  // },\n\n  // createDragableItem(config: any) {\n  //   const {\n  //     graph,\n  //     node,\n  //     shapeName,\n  //     shapeSubkey,\n  //     shapeStyle,\n  //     shapeLabel,\n  //     // shapeContent,\n  //     id,\n  //     isEdge,\n  //     cellCreatedFunc,\n  //   } = config;\n\n  //   let {\n  //     width,\n  //     height\n  //   } = config;\n\n  //   // console.debug(config);\n\n  //   width = width * 1 || 130;\n  //   height = height * 1 || 90;\n\n  //   // Returns the graph under the mouse\n  //   const graphF = (evt: any) => {\n  //     const x1 = mxEvent.getClientX(evt); //eslint-disable-line\n  //     const y1 = mxEvent.getClientY(evt); //eslint-disable-line\n  //     const elt = document.elementFromPoint(x1, y1);\n\n  //     if (mxUtils.isAncestorNode(graph.container, elt)) { //eslint-disable-line\n  //       //eslint-disable-line\n  //       return graph;\n  //     }\n\n  //     return null;\n  //   };\n\n  //   // Inserts a cell at the given location\n  //   const funct = (graph2: any, evt: any, target: any, x2: number, y2: number) => {\n  //     try {\n  //       // is a edge\n  //       if (isEdge) {\n  //         const cell = new mxCell( //eslint-disable-line\n  //           '',\n  //           new mxGeometry(0, 0, width, height), //eslint-disable-line\n  //           shapeStyle\n  //         ); //eslint-disable-line\n  //         cell.geometry.setTerminalPoint(new mxPoint(0, height), true); //eslint-disable-line\n  //         cell.geometry.setTerminalPoint(new mxPoint(width, 0), false); //eslint-disable-line\n  //         // cell.geometry.points = [new mxPoint(width/2, height/2), new mxPoint(0, 0)];\n  //         cell.geometry.relative = true;\n  //         cell.edge = true;\n  //         cell.shapeKey = shapeName;\n  //         // cell.shapeName = shapeLabel;\n  //         cell.shapeName = shapeName;\n  //         cell.shapeSubkey = shapeSubkey;\n  //         cell.shapeLabel = shapeLabel;\n  //         cell.id = id;\n\n  //         const cells = graph2.importCells([cell], x2, y2 - evt.offsetY, target);\n\n  //         if (cells != null && cells.length > 0) {\n  //           graph2.scrollCellToVisible(cells[0]);\n  //           graph2.setSelectionCells(cells);\n  //         }\n\n  //         cellCreatedFunc && cellCreatedFunc(cell);\n  //       } else {\n  //         // let parent = graph2.getDefaultParent();\n\n  //         // let oth = graph.getCellAt(x2, y2, parent, true, false, getSwimlaneDropTarget);\n  //         // if (oth) {\n  //         //   parent = oth;\n  //         //   x2 -= oth.geometry.x;\n  //         //   y2 -= oth.geometry.y;\n  //         //   // foo\n  //         // }\n  //         // //  console.debug(oth);\n  //         // //  console.debug(parent);\n\n  //         let parent = target;\n  //         if (parent) {\n  //           x2 -= parent.geometry.x;\n  //           y2 -= parent.geometry.y;\n  //         } else {\n  //           parent = graph2.getDefaultParent();\n  //         }\n\n  //         if (shapeName === \"swimlane\") {\n  //           let vs = graph.getStylesheet().getCellStyle(mxConstants.SHAPE_SWIMLANE);\n  //           let isv = vs[mxConstants.STYLE_HORIZONTAL];\n  //           if (isv) {\n  //             let w = width;\n  //             width = height;\n  //             height = w;\n\n  //           }\n  //         }\n\n  //         if (parent) {\n  //           const cell = graph2.insertVertex(\n  //             parent,\n  //             id,\n  //             shapeLabel,\n  //             x2,\n  //             y2,\n  //             width,\n  //             height,\n  //             shapeStyle\n  //           );\n  //           // console.debug(cell);\n  //           cell.shapeKey = shapeName;\n  //           // cell.shapeName = shapeLabel;\n  //           cell.shapeName = shapeName;\n  //           cell.shapeSubkey = shapeSubkey;\n  //           cell.shapeLabel = shapeLabel;\n\n  //           cellCreatedFunc && cellCreatedFunc(cell);\n  //         } else {\n  //           console.log('graph.getDefaultParent() 为 null');\n  //         }\n  //       }\n  //     } catch (e) {\n  //       console.log(e);\n  //     }\n  //   };\n\n  //   // Disables built-in DnD in IE (this is needed for cross-frame DnD, see below)\n  //   if (mxClient.IS_IE) { //eslint-disable-line\n  //     //eslint-disable-line\n  //     mxEvent.addListener(node, 'dragstart', (evt: any) => { //eslint-disable-line\n  //       //eslint-disable-line\n  //       evt.returnValue = false;\n  //     });\n  //   }\n\n  //   // Creates the element that is being for the actual preview.\n  //   const dragElt = document.createElement('div');\n  //   dragElt.style.border = 'dashed black 1px';\n  //   dragElt.style.width = `${width}px`;\n  //   dragElt.style.height = `${height}px`;\n\n  //   // Drag source is configured to use dragElt for preview and as drag icon\n  //   // if scalePreview (last) argument is true. Dx and dy are null to force\n  //   // the use of the defaults. Note that dx and dy are only used for the\n  //   // drag icon but not for the preview.\n  //   // const ds = mxUtils.makeDraggable( //eslint-disable-line\n  //   //   //eslint-disable-line\n  //   //   node,\n  //   //   graphF,\n  //   //   funct,\n  //   //   dragElt,\n  //   //   null,\n  //   //   null,\n  //   //   graph.autoscroll,\n  //   //   true\n  //   // );\n  //   const getSwimlaneDropTarget = (_graph2: any, x: any, y: any,\n  //     _evt: any) => {\n  //     let cell = graph.getCellAt(x, y);\n  //     if (cell) {\n  //       // console.debug(cell);\n  //       if (cell.shapeKey === \"swimlane\") {\n  //         return cell;\n  //       } else {\n  //         return null;\n  //       }\n  //     }\n  //     return cell;\n  //   };\n\n  //   const ds = mxUtils.makeDraggable( //eslint-disable-line\n  //     //eslint-disable-line\n  //     node,\n  //     graphF,\n  //     funct,\n  //     dragElt,\n  //     null,\n  //     null,\n  //     graph.autoscroll,\n  //     true,\n  //     true,\n  //     getSwimlaneDropTarget\n  //   );\n  //   // Redirects feature to global switch. Note that this feature should only be used\n  //   // if the the x and y arguments are used in funct to insert the cell.\n  //   ds.isGuidesEnabled = () => graph.graphHandler.guidesEnabled;\n\n  //   // Restores original drag icon while outside of graph\n  //   ds.createDragElement = mxDragSource.prototype.createDragElement; //eslint-disable-line\n  // },\n\n  // undoListener(config: any) {\n  //   const {\n  //     graph,\n  //     callback\n  //   } = config;\n\n  //   // Undo/redo\n  //   const undoManager = new mxUndoManager(); //eslint-disable-line\n\n  //   graph.undoManager = undoManager;\n\n  //   const listener = (sender: any, evt: any) => {\n  //     undoManager.undoableEditHappened(evt.getProperty('edit'));\n  //   };\n  //   graph.getModel().addListener(mxEvent.UNDO, listener); //eslint-disable-line\n  //   graph.getView().addListener(mxEvent.UNDO, listener); //eslint-disable-line\n\n  //   let undoListenerFunc2 = this.undoListenerFunc.bind(this, undoManager, callback);\n  //   keydownhandler.push(undoListenerFunc2);\n\n  //   document.body.addEventListener('keydown', undoListenerFunc2);\n  // },\n\n  // undoListenerFunc(undoManager: any, callback: any, e: any) {\n  //   if (e.target !== e.currentTarget) {\n  //     return false;\n  //   }\n\n  //   const evtobj = window.event ? window.event : e;\n\n  //   if (evtobj.keyCode === 90 && (evtobj.ctrlKey || evtobj.metaKey)) {\n  //     undoManager.undo();\n\n  //     const {\n  //       history: histories\n  //     } = undoManager;\n\n  //     callback && callback(histories);\n\n  //     // undoManager.redo();\n  //   }\n  // },\n\n  // copyListener(config: any) {\n  //   const {\n  //     graph,\n  //     callback\n  //   } = config;\n\n  //   let copyListenerFunc2 = this.copyListenerFunc.bind(this, graph, callback);\n  //   keydownhandler.push(copyListenerFunc2);\n  //   document.body.addEventListener('keydown', copyListenerFunc2);\n  // },\n\n  // copyListenerFunc(graph: any, callback: any, e: any) {\n  //   if (e.target !== e.currentTarget) {\n  //     return false;\n  //   }\n\n  //   const evtobj = window.event ? window.event : e;\n  //   // command + c / ctrl + c\n  //   if (evtobj.keyCode === 67 && (evtobj.ctrlKey || evtobj.metaKey)) {\n  //     mxClipboard.copy(graph); //eslint-disable-line\n  //   } else if (evtobj.keyCode === 86 && (evtobj.ctrlKey || evtobj.metaKey)) { // command + v / ctrl + v\n  //     // cells 复制元素的集合\n  //     const cells = mxClipboard.paste(graph); // eslint-disable-line\n  //     callback && callback(cells, evtobj);\n  //   }\n  // },\n\n  // keyListener(config: any) {\n  //   const {\n  //     graph,\n  //     callback\n  //   } = config;\n\n  //   let keyListenerFunc2 = this.keyListenerFunc.bind(this, graph, callback);\n  //   keydownhandler.push(keyListenerFunc2);\n  //   document.body.addEventListener('keydown', keyListenerFunc2);\n  // },\n\n  // keyListenerFunc(_graph: any, callback: any, e: any) {\n  //   if (e.target !== e.currentTarget) {\n  //     return false;\n  //   }\n  //   const evtobj = window.event ? window.event : e;\n  //   callback && callback(evtobj);\n  // },\n\n  // deleteListener(config: any) {\n  //   const {\n  //     graph,\n  //     callback\n  //   } = config;\n\n  //   const {\n  //     removeCells\n  //   } = graph;\n  //   //  console.debug(\"deleteListener\");\n\n  //   graph.removeCells = function (cells: any) {\n  //     const result = removeCells.apply(this, [cells]);\n  //     callback && callback(cells);\n  //     return result;\n  //   };\n\n  //   let deleteListenerFunc2 = this.deleteListenerFunc.bind(this, graph);\n  //   keydownhandler.push(deleteListenerFunc2);\n\n  //   document.body.addEventListener('keydown', deleteListenerFunc2);\n  // },\n\n  // deleteListenerFunc(graph: any, e: any) {\n  //   // console.debug(\"deleteListenerFunc\");\n  //   if (\n  //     !(e.target === e.currentTarget || graph.container.contains(e.target))\n  //   ) {\n  //     if (e.code !== \"Delete\") {\n  //       return false;\n  //     }\n  //   }\n\n  //   const {\n  //     editingCell\n  //   } = graph.cellEditor;\n\n  //   const evtobj = window.event ? window.event : e;\n  //   if (evtobj.keyCode === 46 || evtobj.keyCode === 8) {\n  //     // 没有cell当前在编辑状态时才可删除\n  //     if (!editingCell) {\n  //       const cellsSelected = graph.getSelectionCells();\n  //       // cellsSelected && cellsSelected.length && graph.removeCells(cellsSelected);\n\n  //       const cellsSelectable: any[] = [];\n  //       cellsSelected\n  //         &&\n  //         cellsSelected.forEach((cell: any) => {\n  //           if (cell && !cell.disabled) {\n  //             cellsSelectable.push(cell);\n  //           }\n  //         });\n\n  //       cellsSelectable\n  //         &&\n  //         cellsSelectable.length &&\n  //         graph.removeCells(cellsSelectable);\n  //     }\n  //     // evtobj.consume();\n\n  //   }\n  // },\n\n  connectorHandler(graph: any, isvalidfn: any, callback: any) {\n    // const {\n    //   graph,\n    //   callback,\n    //   isconnectionpoints\n    // } = config;\n\n    graph.setConnectable(true);\n    mxGraphHandler.prototype.guidesEnabled = true; //eslint-disable-line\n    mxEdgeHandler.prototype.snapToTerminals = true;\n\n    // Disables automatic handling of ports. This disables the reset of the\n    // respective style in mxGraph.cellConnected. Note that this feature may\n    // be useful if floating and fixed connections are combined.\n    graph.setPortsEnabled(false);\n    // mxConstants.DEFAULT_HOTSPOT = 1;\n    // mxConnectionHandler.prototype.connectImage = new mxImage('images/green-dot.gif', 14, 14);\n\n    // Disables floating connections (only connections via ports allowed)\n    graph.connectionHandler.isConnectableCell = (_cell: any): boolean => { //eslint-disable-line\n      //eslint-disable-line\n      return true;\n    };\n    // validation function.Need to set id for each cell.\n    graph.connectionHandler.validateConnection = (source: any, target: any) => {\n      let isvalid: boolean = false;\n      if (source !== null && target !== null) {\n        if (source.shapeKey === \"Comment\") {\n          return null;\n        }\n        if (source.objectid !== target.objectid) {\n          isvalid = isvalidfn(source.objectid, target.objectid);\n          // console.debug(src);\n          // console.debug(cell);\n        }\n      }\n      if (isvalid) {\n        return null;\n      } else {\n        // return \"No valid relation found!\";\n        return true;\n      }\n    };\n    // graph.connectionHandler.isValidTarget = (celsl: any) => {\n    //   let isvalid: boolean = false;\n    //   let src: any = null;\n    //   if (this.state != null && this.model.isVertex(this.state.cell)) {\n    //     src = this.state.cell;\n    //   }\n    //   if (src == null) {\n    //     src = cell;\n    //     isvalid = false;\n    //   }\n    //   if (src !== null && cell !== null) {\n    //     if (src.objectid !== cell.objectid) {\n    //       isvalid = callback(src.objectid, cell.objectid);\n    //       // console.debug(src);\n    //       // console.debug(cell);\n    //       return isvalid;\n    //     }\n    //   }\n    //   return false;\n    // };\n    // graph.connectionHandler.isValidTarget = (cell: any) => {\n    //   let isvalid: boolean = false;\n    //   let src: any = null;\n    //   if (graph.state != null && graph.model.isVertex(graph.state.cell)) {\n    //     src = graph.state.cell;\n    //   }\n    //   if (src == null) {\n    //     src = cell;\n    //     isvalid = false;\n    //   }\n    //   if (src !== null && cell !== null) {\n    //     if (src.objectid !== cell.objectid) {\n    //       isvalid = callback(src.objectid, cell.objectid);\n    //       // console.debug(src);\n    //       // console.debug(cell);\n    //       return isvalid;\n    //     }\n    //   }\n    //   return false;\n    // };\n    // edge animation\n\n    // const selectCells = mxConnectionHandler.prototype.selectCells;\n\n    // graph.connectionHandler.selectCells = function (edge: any, target: any) {\n    //   var state = this.graph.view.getState(edge);\n\n    //   state.shape.node.getElementsByTagName('path')[0].removeAttribute('visibility');\n    //   state.shape.node.getElementsByTagName('path')[0].setAttribute('stroke-width', '6');\n    //   state.shape.node.getElementsByTagName('path')[0].setAttribute('stroke', 'lightGray');\n    //   state.shape.node.getElementsByTagName('path')[1].setAttribute('class', 'flow');\n\n    //   // return selectCells.apply(this, arguments);\n    //   return selectCells(edge, target);\n    // };\n\n    mxEdgeHandler.prototype.isConnectableCell = (cell: any) => { //eslint-disable-line\n      //eslint-disable-line\n      // if (cell !== null) {\n      //   console.debug(cell);\n      // }\n      return graph.connectionHandler.isConnectableCell(cell);\n    };\n\n    // Overridden to define per-shape connection points\n    mxGraph.prototype.getAllConnectionConstraints = ( //eslint-disable-line\n      terminal: any,\n      source: any //eslint-disable-line\n    ) => {\n\n      if (!callback.isConnectionPoints()) {\n        return [];\n      }\n      if (source) {\n        return [];\n      }\n      //eslint-disable-line\n      if (terminal && terminal.shape && terminal.shape.constraintsX) {\n        // console.debug(\"XXX\");\n        return terminal.shape.constraintsX;\n      }\n\n      // return null;\n\n      const {\n        cell\n      } = terminal;\n\n      // const {\n      //   pointType\n      // } = cell;\n\n      if (cell.disabled) {\n        return [];\n      }\n\n      // let points: mxConnectionConstraint[] = [];\n\n      // switch (pointType) {\n      //   case 'top':\n      //     points = [\n      //       new mxConnectionConstraint(new mxPoint(0.5, 0), true), //eslint-disable-line\n      //     ];\n      //     break;\n      //   case 'left':\n      //     points = [\n      //       new mxConnectionConstraint(new mxPoint(0, 0.5), true), //eslint-disable-line\n      //     ];\n      //     break;\n      //   case 'right':\n      //     points = [\n      //       new mxConnectionConstraint(new mxPoint(1, 0.5), true), //eslint-disable-line\n      //     ];\n      //     break;\n      //   case 'bottom':\n      //     points = [\n      //       new mxConnectionConstraint(new mxPoint(0.5, 1), true), //eslint-disable-line\n      //     ];\n      //     break;\n      //   case 'none':\n      //     points = [];\n      //     break;\n      //   default:\n      //     points = [\n      //       new mxConnectionConstraint(new mxPoint(0.5, 0.5), true), //eslint-disable-line\n      //      // new mxConnectionConstraint(new mxPoint(0.25, 0), true), //eslint-disable-line\n      //       new mxConnectionConstraint(new mxPoint(0.5, 0), true), //eslint-disable-line\n      //       // new mxConnectionConstraint(new mxPoint(0.75, 0), true), //eslint-disable-line\n      //       // new mxConnectionConstraint(new mxPoint(0, 0.25), true), //eslint-disable-line\n      //       new mxConnectionConstraint(new mxPoint(0, 0.5), true), //eslint-disable-line\n      //       // new mxConnectionConstraint(new mxPoint(0, 0.75), true), //eslint-disable-line\n      //       // new mxConnectionConstraint(new mxPoint(1, 0.25), true), //eslint-disable-line\n      //       new mxConnectionConstraint(new mxPoint(1, 0.5), true), //eslint-disable-line\n      //       // new mxConnectionConstraint(new mxPoint(1, 0.75), true), //eslint-disable-line\n      //       // new mxConnectionConstraint(new mxPoint(0.25, 1), true), //eslint-disable-line\n      //       new mxConnectionConstraint(new mxPoint(0.5, 1), true), //eslint-disable-line\n      //       // new mxConnectionConstraint(new mxPoint(0.75, 1), true), //eslint-disable-line\n      //     ];\n      //     break;\n      // }\n\n      // // return null;\n      // return points;\n\n    };\n\n    // Defines the default constraints for all shapes\n    // mxShape.prototype.constraints = [ //eslint-disable-line\n    //   //eslint-disable-line\n    //   new mxConnectionConstraint(new mxPoint(0.5, 0.5), true), //eslint-disable-line\n    //   // new mxConnectionConstraint(new mxPoint(0.25, 0), true),\n    //   new mxConnectionConstraint(new mxPoint(0.5, 0), true), //eslint-disable-line\n    //   // new mxConnectionConstraint(new mxPoint(0.75, 0), true),\n    //   // new mxConnectionConstraint(new mxPoint(0, 0.25), true),\n    //   new mxConnectionConstraint(new mxPoint(0, 0.5), true), //eslint-disable-line\n    //   // new mxConnectionConstraint(new mxPoint(0, 0.75), true),\n    //   // new mxConnectionConstraint(new mxPoint(1, 0.25), true),\n    //   new mxConnectionConstraint(new mxPoint(1, 0.5), true), //eslint-disable-line\n    //   // new mxConnectionConstraint(new mxPoint(1, 0.75), true),\n    //   // new mxConnectionConstraint(new mxPoint(0.25, 1), true),\n    //   new mxConnectionConstraint(new mxPoint(0.5, 1), true), //eslint-disable-line\n    //   // new mxConnectionConstraint(new mxPoint(0.75, 1), true)\n    // ];\n    // mxShape.prototype.constraints = null;  //eslint-disable-line\n\n    // Edges have no connection points\n    mxPolyline.prototype.constraints = null; //eslint-disable-line\n\n    // Enables connect preview for the default edge style\n    graph.connectionHandler.createEdgeState = () => {\n      const edge = graph.createEdge(null, null, null, null, null);\n\n      return new mxCellState(graph.view, edge, graph.getCellStyle(edge)); //eslint-disable-line\n    };\n\n    // Changes the default style for edges \"in-place\" and assigns\n    // an alternate edge style which is applied in mxGraph.flip\n    // when the user double clicks on the adjustment control point\n    // of the edge. The ElbowConnector edge style switches to TopToBottom\n    // if the horizontal style is true.\n    // const style = graph.getStylesheet().getDefaultEdgeStyle();\n    // style[mxConstants.STYLE_ROUNDED] = true; //eslint-disable-line\n    // style[mxConstants.STYLE_EDGE] = mxEdgeStyle.ElbowConnector; // 备选：orthogonalEdgeStyle\n    // style[mxConstants.STYLE_EDGE] = 'orthogonalEdgeStyle'; //eslint-disable-line\n    // style[mxConstants.STYLE_STROKEWIDTH] = 1;\n\n    // graph.alternateEdgeStyle = 'elbow=vertical';\n\n    // Snaps to fixed points\n    mxConstraintHandler.prototype.intersects = ( //eslint-disable-line\n      icon: any,\n      point: any,\n      source: any,\n      existingEdge: any\n    ) => {\n      //eslint-disable-line\n      return !source || existingEdge || mxUtils.intersects(icon.bounds, point); //eslint-disable-line\n    };\n  },\n\n  //  初始化 popmenu\n  initPopupMenu(graph: any, menuFunc: any) {\n    // const {\n    //   graph,\n    //   menuFunc\n    // } = config;\n\n    // Installs a popupmenu handler using local function (see below).\n    graph.popupMenuHandler.factoryMethod = (menu: any, cell: any, evt: any) =>\n      createPopupMenu(graph, menu, cell, evt); //eslint-disable-line\n\n    // Function to create the entries in the popupmenu\n    function createPopupMenu(graph1: any, menu: any, cell: any, evt: any) { //eslint-disable-line\n      menuFunc && menuFunc(graph1, menu, cell, evt);\n    }\n  },\n\n  // // handleDoubleClick(config: any) {\n  // //   const {\n  // //     graph,\n  // //     callback\n  // //   } = config;\n\n  // //   // Installs a handler for double click events in the graph\n  // //   // that shows an alert box\n  // //   graph.addListener(mxEvent.DOUBLE_CLICK, (_sender: any, evt: any) => { //eslint-disable-line\n  // //     //eslint-disable-line\n  // //     const cell = evt.getProperty('cell');\n\n  // //     callback && callback(cell);\n\n  // //     // evt.consume();\n  // //   });\n  // // },\n\n  // // handleClick(config: any) {\n  // //   const {\n  // //     graph,\n  // //     clickFunc\n  // //   } = config;\n\n  // //   graph.addListener(mxEvent.CLICK, (_sender: any, evt: any) => { //eslint-disable-line\n  // //     //eslint-disable-line\n  // //     if (graph.isEditing()) {\n  // //       graph.stopEditing(false);\n  // //     }\n  // //     const cell = evt.getProperty('cell');\n  // //     // if (cell != null) {\n  // //     // if(s.includes(cell.style)){\n\n  // //     // graph.setSelectionCell(cell.parent);\n  // //     // mxEvent.consume(evt);\n\n  // //     // }\n  // //     // }\n  // //     if (cell) {\n  // //       // if (!cell.isEdge()) {\n  // //       clickFunc && clickFunc(cell, evt);\n  // //       // }\n  // //     }\n\n  // //     // console.debug(evt);\n\n  // //     // // 如果没有点中 cell，清空 cell 选择\n  // //     // if (!cell) {\n  // //     //   sender.selectionModel.clear();\n  // //     // }\n\n  // //     // evt.consume();\n\n  // //     // const {\n  // //     //   cell\n  // //     // } = state;\n  // //     // const {\n  // //     //   disabled\n  // //     // } = cell;\n  // //   });\n  // // },\n\n  // // handleMove(config: any) {\n  // //   const { graph, callback } = config;\n  // //   graph.addListener(mxEvent.MOVE_CELLS, (_sender: any, evt: any) => {\n  // //     const cells = evt.getProperty('cells');\n  // //     const clone = evt.getProperty('clone');\n  // //     // console.log('move', evt, sender);\n  // //     callback && callback(cells, (clone === true));\n  // //     evt.consume();\n  // //   });\n  // // },\n  // // handleAddVertex(config) {\n  // //   const { graph, callback } = config;\n  // //   graph.addListener(mxEvent.AFTER_ADD_VERTEX, (sender, evt) => {\n  // //     const vertex = evt.getProperty('vertex');\n  // //     callback && callback(vertex);\n  // //     evt.consume();\n  // //   });\n  // // },\n\n  // // handleChange(config) {\n  // //   const {\n  // //     graph,\n  // //     callback\n  // //   } = config;\n\n  // //   graph.getSelectionModel().addListener(mxEvent.CHANGE, (sender, evt) => { //eslint-disable-line\n  // //     //eslint-disable-line\n  // //     console.log('change', sender, evt);\n\n  // //     callback && callback();\n  // //   });\n  // // },\n  // // handleCellsAdded(config) {\n  // //   const {\n  // //     graph,\n  // //     callback\n  // //   } = config;\n\n  // //   graph.addListener(mxEvent.ADD_CELLS, (sender, evt) => { //eslint-disable-line\n  // //     //eslint-disable-line\n  // //     console.log('add', sender, evt);\n\n  // //     callback && callback();\n  // //   });\n  // // },\n  // handleConnect(config: any) {\n  //   const {\n  //     graph,\n  //     callback\n  //   } = config;\n\n  //   graph.connectionHandler.addListener(mxEvent.CONNECT, (_sender: any, evt: any) => {\n  //     var edge = evt.getProperty('cell');\n  //     var source = graph.getModel().getTerminal(edge, true);\n  //     var target = graph.getModel().getTerminal(edge, false);\n\n  //     // var style = graph.getCellStyle(edge);\n  //     // var sourcePortId = style[mxConstants.STYLE_SOURCE_PORT];\n  //     // var targetPortId = style[mxConstants.STYLE_TARGET_PORT];\n\n  //     callback && callback(evt, edge, source, target);\n\n  //     //  mxLog.show();\n  //     //  mxLog.debug('connect', edge, source.id, target.id, sourcePortId, targetPortId);\n  //   });\n  // },\n\n  // handleDisconnect(config: any) {\n  //   const {\n  //     graph,\n  //     callback\n  //   } = config;\n\n  //   graph.connectionHandler.addListener(mxEvent.DISCONNECT, (_sender: any, evt: any) => {\n  //     var edge = evt.getProperty('cell');\n  //     var source = graph.getModel().getTerminal(edge, true);\n  //     var target = graph.getModel().getTerminal(edge, false);\n\n  //     // var style = graph.getCellStyle(edge);\n  //     // var sourcePortId = style[mxConstants.STYLE_SOURCE_PORT];\n  //     // var targetPortId = style[mxConstants.STYLE_TARGET_PORT];\n\n  //     callback && callback(edge, source, target);\n\n  //     //  mxLog.show();\n  //     //  mxLog.debug('connect', edge, source.id, target.id, sourcePortId, targetPortId);\n  //   });\n  // },\n\n\n  handleHover(config: any) {\n    const {\n      graph,\n      callback\n    } = config;\n\n    function findChildAt(shp: any, x: any, y: any) {\n      for (let i in shp.children) {\n        let c = shp.children[i];\n        if (c.geometry.x === x &&\n          c.geometry.y === y) {\n          return c;\n        }\n      }\n      return null;\n    }\n\n    function mxIconSet(this: any, state: any, quickshapes: any[], vertical: any): any {\n      this.images = [];\n      // console.debug(state);\n\n      let cell = state.cell;\n\n      // const graph = state.view.graph;\n      let dx = 1;\n      let dy = 0;\n      let cnt = 0;\n      let self = this;\n      for (let m of quickshapes) {\n        let tit = m.name;\n        let mst = m.key;\n        // var img0 = mxUtils.createImage(cdn + '/stencils/images/' + mst + '.png');\n        // var img0 = mxUtils.createImage(cdn + mst + '.png');\n        var img0 = mxUtils.createImage(m.logo);\n\n        img0.setAttribute('title', tit);\n        img0.style.position = 'absolute';\n        img0.style.cursor = 'pointer';\n        img0.style.width = '16px';\n        img0.style.height = '16px';\n\n        cnt += 1;\n        if (vertical) {\n          if (cnt > 3) {\n            dx = dx + 1;\n            dy = 0;\n            cnt = 0;\n          }\n          img0.style.left = (state.x + state.width + dx * 18) + 'px';\n          img0.style.top = (state.y + 18 * dy) + 'px';\n          dy += 1;\n        } else {\n          if (cnt > 3) {\n            dy = dy + 1;\n            dx = 0;\n            cnt = 0;\n          }\n          img0.style.left = (state.x + dx * 18) + 'px';\n          img0.style.top = (state.y + state.height + 18 * dy) + 'px';\n          dx += 1;\n        }\n        if (mst === \"Connector\" || mst === \"SubClassOf\" || mst === \"Property\") {\n          mxEvent.addGestureListeners(img0,\n            mxUtils.bind(this, (evt: any) => {\n              // var pt = mxUtils.convertPoint(graph.container,\n              //   mxEvent.getClientX(evt), mxEvent.getClientY(evt));\n              // graph.connectionHandler.start(this.state, pt.x, pt.y);\n              graph[\"connectionMaster\"] = mst;\n              graph.connectionHandler.start(state, state.x + state.width / 2, state.y + state.width / 2);\n              graph.isMouseDown = true;\n              graph.isMouseTrigger = mxEvent.isMouseEvent(evt);\n              mxEvent.consume(evt);\n              self.destroy();\n            })\n          );\n          // this.dragLeave(me1.getEvent(), this.currentState);\n        } else {\n          mxEvent.addGestureListeners(img0,\n            mxUtils.bind(this, (evt: any) => {\n              // var s = graph.gridSize;\n              // graph.setSelectionCells(graph.moveCells([state.cell], s, s, true));\n              const geo = cell.geometry;\n              let ss = callback.GetShapeStyle(m.key, m.type);\n              let shapeStyle = ss.style;\n              let ncell: any;\n              let x = geo.x + geo.width / 2 - m.width / 2;\n              let y = geo.y + geo.height * 1.5;\n              let par = cell.parent;\n              //  console.debug(par);\n              if (vertical) {\n                x = geo.x + geo.width * 1.5;\n                y = geo.y + geo.height / 2 - m.height / 2;\n                // let oth = graph.getCellAt(x - tr.x, y - tr.y, par, true, false);\n                let oth = findChildAt(par, x, y);\n                while (oth !== null && oth !== par) {\n                  y += geo.height * 1.5;\n                  oth = findChildAt(par, x, y);\n                  // oth = graph.getCellAt(x, y, par, true, false, undefined);\n                }\n              } else {\n                // let oth = graph.getCellAt(x, y, par, true, false, undefined);\n                let oth = findChildAt(par, x, y);\n                while (oth !== null && oth !== par) {\n                  x += geo.width * 1.5;\n                  oth = findChildAt(par, x, y);\n                  // oth = graph.getCellAt(x, y, par, true, false, undefined);\n                }\n              }\n              if (graph.isEditing()) {\n                graph.stopEditing(false);\n              }\n\n              ncell = graph.insertVertex(par, null, mst, x, y,\n                m.width, m.height, shapeStyle);\n              ncell.shapeKey = m.key;\n              ncell.shapeName = m.name;\n              // let ecell: any;\n              switch (m.name) {\n                case \"Instance\": {\n                  callback.makeInstance(cell, ncell);\n                  break;\n                }\n                case \"Class\": {\n                  callback.makeSubClass(cell, ncell);\n                  break;\n                }\n                case \"UMLClass\": {\n                  callback.makeSubClass(cell, ncell);\n                  break;\n                }\n                // case \"SystemClass\": {\n                //   callback.makeSubClass(cell, ncell);\n                //   break;\n                // }\n                default: {\n                  callback.shapeAdded(ncell);\n                  let ecell = graph.insertEdge(par, null, '', cell, ncell);\n                  graph.orderCells(true, [ecell]);\n                  callback.shapeConnectionAdded(null, ecell, cell, ncell);\n                  TSEditor.copyColorStyle(cell, ncell);\n                  TSEditor.copyColorStyle(cell, ecell);\n                }\n              }\n              // console.debug(cell);\n\n\n              graph.scrollCellToVisible(ncell);\n              graph.setSelectionCells([ncell]);\n\n              // 开启 label 可编辑状态\n              // state.view.graph.startEditingAtCell(state.cell);\n\n              // // 自动聚焦到 label 编辑文本\n              // state.shape.node.focus();\n              mxEvent.consume(evt);\n              graph.refresh();\n              self.destroy();\n            })\n          );\n        }\n\n        state.view.graph.container.appendChild(img0);\n        this.images.push(img0);\n      }\n    }\n    mxIconSet.prototype.destroy = function () {\n      if (this.images != null) {\n        for (let i = 0; i < this.images.length; i += 1) {\n          const img = this.images[i];\n          img.parentNode.removeChild(img);\n        }\n      }\n\n      this.images = null;\n    };\n\n    // Defines the tolerance before removing the icons\n    const iconTolerance = 40;\n\n    // Shows icons if the mouse is over a cell\n    graph.addMouseListener({\n      currentState: null,\n      currentIconSet: null,\n      //  currentIconSetCell: null,\n      mouseDown(_sender: any, me: any) {\n        // Hides icons on mouse down\n        if (this.currentState === null) {\n          this.dragLeave(me.getEvent(), this.currentState);\n          this.currentState = null;\n          //   if (this.currentIconSet != null) {\n          //     this.currentIconSet.destroy();\n          //     this.currentIconSet = null;\n          //   }\n          //  // callback.redrawLastShape();\n          // if (this.currentIconSetCell !== null) {\n          //   callback.shapeExitedTextEdit(this.currentIconSetCell, \"\");\n          //   this.currentIconSetCell = null;\n          // }\n\n        } else {\n          let state = this.currentState;\n          let cell = state.cell;\n          // if (this.currentIconSetCell && this.currentIconSetCell !== cell) {\n          //   if (this.currentIconSet != null) {\n          //     this.currentIconSet.destroy();\n          //     this.currentIconSet = null;\n          //     if (this.currentIconSetCell !== null) {\n          //       callback.shapeExitedTextEdit(this.currentIconSetCell, \"\");\n          //       this.currentIconSetCell = null;\n          //     }\n          //   }\n          // }\n          if (this.currentIconSet === null) {\n            let quickshapes: any[] = [];\n            if (callback && cell && cell.shapeName !== \"Swimlane\") {\n              quickshapes = callback.quickShapes(cell);\n            }\n            if (quickshapes.length > 0) {\n              //let vertical: boolean = (me.movementX > me.movementY);\n              let vs = graph.getStylesheet().getCellStyle(mxConstants.SHAPE_SWIMLANE);\n              let isv = vs[mxConstants.STYLE_HORIZONTAL];\n              if (me.evt.ctrlKey) {\n                isv = !isv;\n              }\n              let vertical: boolean = !isv;\n              // console.debug(\"X: \" + evt.movementX + \" Y: \" + evt.movementY);\n              this.currentIconSet = new (mxIconSet as any)(state, quickshapes, vertical); //eslint-disable-line\n              this.currentIconSetCell = cell;\n            }\n          }\n        }\n      },\n      mouseMove(_sender: any, me: any) {\n        let tmp;\n\n        if (\n          this.currentState != null &&\n          (me.getState() === this.currentState || me.getState() == null)\n        ) {\n          const tol = iconTolerance;\n          tmp = new mxRectangle( //eslint-disable-line\n            me.getGraphX() - tol, //eslint-disable-line\n            me.getGraphY() - tol,\n            2 * tol,\n            2 * tol\n          );\n\n          if (mxUtils.intersects(tmp, this.currentState)) { //eslint-disable-line\n            //eslint-disable-line\n            return;\n          }\n        }\n\n        tmp = graph.view.getState(me.getCell());\n\n        // Ignores everything but vertices\n        if (\n          graph.isMouseDown ||\n          (tmp != null && !graph.getModel().isVertex(tmp.cell))\n        ) {\n          tmp = null;\n        }\n\n        if (tmp !== this.currentState) {\n          //if (this.currentState != null) {\n          //this.dragLeave(me.getEvent(), this.currentState);\n          //}\n\n          this.currentState = tmp;\n\n          if (this.currentState != null) {\n            this.dragEnter(me.getEvent(), this.currentState);\n          }\n        }\n      },\n      mouseUp(_sender: any, _me: any) { }, //eslint-disable-line\n      dragEnter(evt: any, state: any) {\n        if (this.currentIconSet != null) {\n          this.currentIconSet.destroy();\n          this.currentIconSet = null;\n          if (this.currentIconSetCell !== null) {\n            callback.shapeExitedTextEdit(this.currentIconSetCell, \"\");\n            this.currentIconSetCell = null;\n          }\n        }\n\n        const {\n          cell\n        } = state;\n        const {\n          disabled\n        } = cell;\n\n        // // if (evt.ctrlKey && this.currentIconSet === null && !disabled) {\n        if (this.currentIconSet === null && !disabled) {\n          let quickshapes: any[] = [];\n          if (callback && state.cell) {\n            quickshapes = callback.quickShapes(state.cell);\n          }\n          if (quickshapes.length > 0) {\n            // let vertical: boolean = (evt.movementX > evt.movementY);\n            //let vertical: boolean = !evt.ctrlKey;\n            // console.debug(\"X: \" + evt.movementX + \" Y: \" + evt.movementY);\n            let vs = graph.getStylesheet().getCellStyle(mxConstants.SHAPE_SWIMLANE);\n            let isv = vs[mxConstants.STYLE_HORIZONTAL];\n            if (evt.ctrlKey) {\n              isv = !isv;\n            }\n            let vertical: boolean = !isv;\n            this.currentIconSet = new (mxIconSet as any)(state, quickshapes, vertical); //eslint-disable-line\n            // this.currentIconSetCell = cell;\n          }\n        }\n\n        // callback && callback(evt, state);\n      },\n      dragLeave(_evt: any, _state: any) { //eslint-disable-line\n        // eslint-disable-line\n        if (this.currentIconSet != null) {\n          this.currentIconSet.destroy();\n          this.currentIconSet = null;\n          this.currentIconSetCell = null;\n        }\n      },\n    });\n  },\n\n  // htmlLable(config: any) {\n  //   const {\n  //     graph\n  //   } = config;\n\n  //   // Enables HTML labels\n  //   graph.setHtmlLabels(true);\n\n  //   // Creates a user object that stores the state\n  //   // const doc = mxUtils.createXmlDocument(); //eslint-disable-line\n  //   // const obj = doc.createElement('UserObject');\n  //   // obj.setAttribute('label', 'Hello, World!');\n  //   // obj.setAttribute('checked', 'false');\n  // },\n\n  // initAutoSave(config: any) {\n  //   const {\n  //     graph,\n  //     callback\n  //   } = config;\n\n  //   const mgr = new mxAutoSaveManager(graph); //eslint-disable-line\n  //   mgr.autoSaveDelay = 0; // 自动保存延迟时间设为0\n  //   mgr.save = () => {\n  //     const xml = this.getGraphXml({\n  //       graph,\n  //     });\n\n  //     const formatedNode = this.formatXmlNode(xml);\n\n  //     if (!formatedNode) {\n  //       return false;\n  //     }\n  //     // console.debug(\"autoSave\");\n  //     const xmlStr = new XMLSerializer().serializeToString(formatedNode); //eslint-disable-line\n\n  //     graph.xmlStr = xmlStr;\n\n  //     callback && callback(xmlStr);\n  //     return undefined;\n  //   };\n  // },\n\n  // // check the xmlnode format to avoid error\n  // formatXmlNode(xmlNode: any) {\n  //   const rootEle = xmlNode && xmlNode.firstElementChild;\n\n  //   let hasRoot = true;\n  //   if (rootEle && rootEle.tagName === 'root') {\n  //     hasRoot = true;\n  //   }\n\n  //   let hasIdO = false;\n  //   if (rootEle && rootEle.firstElementChild && rootEle.firstElementChild.id === '0') {\n  //     hasIdO = true;\n  //   }\n  //   //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  //   if (!(hasRoot && hasIdO)) {\n  //     console.warn('xmlNode must have root node');\n  //     return false;\n  //   }\n\n  //   const elements: any[] = rootEle.children;\n\n  //   const idsArr: any[] = [];\n\n  //   elements && Array.from(elements).forEach((element) => {\n  //     const cellId: any = element && element.getAttribute('id');\n\n  //     if (idsArr.indexOf(cellId) === -1) {\n  //       idsArr.push(cellId);\n  //     } else {\n  //       console.warn('cell id is duplicated, delete the needless one', element);\n  //       rootEle.removeChild(element);\n  //     }\n\n  //     if (element && element.getAttribute('vertex') === '1' && element.getAttribute('edge') === '1') {\n  //       console.warn('cell\\'s property vertex and edge cannot both be 1, set property edge to 0', element);\n  //       element.setAttribute('edge', 0);\n  //     }\n  //   });\n\n  //   return xmlNode;\n  // },\n\n  // /**\n  //  * Returns the XML node that represents the current diagram.\n  //  */\n  // getGraphXml(config: any) {\n  //   let {\n  //     ignoreSelection\n  //   } = config;\n  //   const {\n  //     graph\n  //   } = config;\n\n  //   ignoreSelection = ignoreSelection != null ? ignoreSelection : true;\n  //   let node: any = null;\n\n  //   if (ignoreSelection) {\n  //     const enc = new mxCodec(mxUtils.createXmlDocument()); //eslint-disable-line\n  //     node = enc.encode(graph.getModel());\n  //   } else {\n  //     node = graph.encodeCells(\n  //       mxUtils.sortCells( //eslint-disable-line\n  //         graph.model.getTopmostCells(\n  //           //eslint-disable-line\n  //           graph.getSelectionCells()\n  //         )\n  //       )\n  //     );\n  //   }\n  //   if (node !== null) {\n  //     if (graph.view.translate.x !== 0 || graph.view.translate.y !== 0) {\n  //       node.setAttribute('dx', Math.round(graph.view.translate.x * 100) / 100);\n  //       node.setAttribute('dy', Math.round(graph.view.translate.y * 100) / 100);\n  //     }\n\n  //     node.setAttribute('grid', graph.isGridEnabled() ? '1' : '0');\n  //     node.setAttribute('gridSize', graph.gridSize);\n  //     node.setAttribute('guides', graph.graphHandler.guidesEnabled ? '1' : '0');\n  //     node.setAttribute(\n  //       'tooltips',\n  //       graph.tooltipHandler.isEnabled() ? '1' : '0'\n  //     );\n  //     node.setAttribute(\n  //       'connect',\n  //       graph.connectionHandler.isEnabled() ? '1' : '0'\n  //     );\n  //     node.setAttribute('arrows', graph.connectionArrowsEnabled ? '1' : '0');\n  //     node.setAttribute('fold', graph.foldingEnabled ? '1' : '0');\n  //     node.setAttribute('page', graph.pageVisible ? '1' : '0');\n  //     node.setAttribute('pageScale', graph.pageScale);\n  //     node.setAttribute('pageWidth', graph.pageFormat.width * 2);\n  //     node.setAttribute('pageHeight', graph.pageFormat.height * 4);\n\n  //     if (graph.background != null) {\n  //       node.setAttribute('background', graph.background);\n  //     }\n  //     let vs = graph.getStylesheet().getCellStyle(mxConstants.SHAPE_SWIMLANE);\n  //     let isv = vs[mxConstants.STYLE_HORIZONTAL];\n  //     if (isv === undefined) isv = false;\n  //     node.setAttribute('horizontal', isv);\n\n  //   }\n  //   return node;\n  // },\n\n  // // 从 xml 渲染 graph\n  // renderGraphFromXml(config: any): void {\n  //   const {\n  //     graph,\n  //     xml\n  //   } = config;\n\n  //   // console.debug(\"render\");\n  //   const xmlDocument = mxUtils.parseXml(xml); //eslint-disable-line\n\n  //   if (\n  //     xmlDocument.documentElement != null &&\n  //     xmlDocument.documentElement.nodeName === 'mxGraphModel'\n  //   ) {\n  //     const decoder = new mxCodec(xmlDocument); //eslint-disable-line\n  //     const node = xmlDocument.documentElement;\n\n  //     // const formatedNode = node;\n  //     const formatedNode = this.formatXmlNode(node);\n\n  //     if (!formatedNode) {\n  //       // return false;\n  //       return;\n  //     }\n\n  //     decoder.decode(formatedNode, graph.model);\n  //     // console.log(this, this.graphToXML(graph));\n  //     if (xmlDocument.documentElement[\"scale\"]) {\n  //       //  console.debug(xmlDocument.documentElement[\"scale\"] + \" => \" + graph.view.scale);\n  //     }\n  //     if (xmlDocument.documentElement.attributes[\"horizontal\"]) {\n  //       console.debug(\"horizontal => \" + xmlDocument.documentElement.attributes[\"horizontal\"].value);\n  //       graph[\"horizontal\"] = xmlDocument.documentElement.attributes[\"horizontal\"].value;\n  //     }\n  //   }\n  // },\n  // graphToXML(graph: any) {\n  //   var encoder = new mxCodec();\n  //   var result = encoder.encode(graph.getModel());\n  //   return mxUtils.getXml(result);\n  // },\n  // 自定义锚点\n  // initCustomPort(config: any) {\n  //   const {\n  //     pic\n  //   } = config;\n  //   // Replaces the port image\n  //   mxConstraintHandler.prototype.pointImage = new mxImage(pic, 10, 10); //eslint-disable-line\n  // },\n\n  /**\n   * 初始化缩放配置\n   */\n  // initZoomConfig(config: any) {\n  //   const {\n  //     graph\n  //   } = config;\n  //   graph.keepSelectionVisibleOnZoom = true;\n  //   graph.centerZoom = true;\n  // },\n\n  // // 缩放\n  // zoom(config: any) {\n  //   const {\n  //     graph,\n  //     type\n  //   } = config;\n\n  //   switch (type) {\n  //     case 0:\n  //       graph.zoomIn();\n  //       break;\n  //     case 1:\n  //       graph.zoomOut();\n  //       break;\n  //     case 2:\n  //       graph.fit();\n  //       break;\n  //     case 3:\n  //       graph.zoomActual();\n  //       break;\n  //     default:\n  //       break;\n  //   }\n\n  //   const cellsSelected = graph.getSelectionCells();\n  //   graph.scrollCellToVisible(cellsSelected, true);\n  //   graph.refresh();\n  // },\n\n\n  /**\n   * 节点重命名监听器\n   */\n  vertexRenameListener({\n    callback\n  }) {\n    mxCell.prototype.valueChangedCallback = callback; //eslint-disable-line\n\n    // 若没重写过 valueChanged 方法则重写\n    if (!mxCell.prototype.hasRewriteValueChanged) { //eslint-disable-line\n      //eslint-disable-line\n      mxCell.prototype.hasRewriteValueChanged = true; //eslint-disable-line\n\n      const {\n        valueChanged\n      } = mxCell.prototype; //eslint-disable-line\n      mxCell.prototype.valueChanged = function (newValue: any) { //eslint-disable-line\n        //eslint-disable-line\n        const {\n          valueChangedCallback\n        } = mxCell.prototype; //eslint-disable-line\n\n        valueChanged.apply(this, [newValue]);\n        valueChangedCallback && valueChangedCallback(this, newValue);\n      };\n    }\n  },\n  renameCell(newName: any, cell: any, graph: any) {\n    cell.value = newName;\n    graph.refresh(); // 重新渲染graph\n  },\n\n\n};\n\n\nmxImageExport.prototype.drawCellState = function (state: any, canvas: any) {\n  // Experimental feature\n  var link = this.getLinkForCellState(state, canvas);\n\n  if (link != null) {\n    canvas.setLink(link);\n  }\n\n  // Paints the shape and text\n  let cnt = canvas[\"root\"].children.length;\n  let cell = state.cell;\n  this.drawShape(state, canvas);\n  let cnt2 = canvas[\"root\"].children.length - 1;\n  if (cell && cell['shapeid'] && cell['objectid']) {\n    // if (cell.shapeKey === \"Task\"){\n    //   let i = canvas[\"root\"].children.length -1;\n    //   while (canvas[\"root\"].children[i].nodeName !== 'rect')\n    //   {\n    //     i--;\n    //   }\n    //   canvas[\"root\"].children[i].setAttribute('data-shapeid', cell['shapeid']);\n    //   canvas[\"root\"].children[i].setAttribute('data-objectid', cell['objectid']);\n    //   canvas[\"root\"].children[i].setAttribute('pointer-events', 'all');\n    // }\n    // else{\n    if (cnt !== cnt2){\n      let i: number = 0;\n      while (cnt + i < cnt2){\n        canvas[\"root\"].children[cnt+i].setAttribute('data-shapeid', cell['shapeid']);\n        canvas[\"root\"].children[cnt+i].setAttribute('data-objectid', cell['objectid']);\n        canvas[\"root\"].children[cnt+i].setAttribute('pointer-events', 'all');\n        canvas[\"root\"].children[cnt+i].setAttribute('geometry-x', cell['geometry'].x);\n        canvas[\"root\"].children[cnt+i].setAttribute('geometry-y', cell['geometry'].y);\n        canvas[\"root\"].children[cnt+i].setAttribute('geometry-height', cell['geometry'].height);\n        canvas[\"root\"].children[cnt+i].setAttribute('geometry-width', cell['geometry'].width);\n        try{\n          canvas[\"root\"].children[cnt+i].setAttribute('geometry-sl-x', cell.parent['geometry'].x);\n          canvas[\"root\"].children[cnt+i].setAttribute('geometry-sl-y', cell.parent['geometry'].y);\n        }catch{}\n        i++;\n      }\n    }else {\n      canvas[\"root\"].children[cnt2].setAttribute('data-shapeid', cell['shapeid']);\n      canvas[\"root\"].children[cnt2].setAttribute('data-objectid', cell['objectid']);\n      canvas[\"root\"].children[cnt2].setAttribute('pointer-events', 'all');\n      canvas[\"root\"].children[cnt2].setAttribute('geometry-x', cell['geometry'].x);\n      canvas[\"root\"].children[cnt2].setAttribute('geometry-y', cell['geometry'].y);\n      canvas[\"root\"].children[cnt2].setAttribute('geometry-height', cell['geometry'].height);\n      canvas[\"root\"].children[cnt2].setAttribute('geometry-width', cell['geometry'].width);\n      try{\n        canvas[\"root\"].children[cnt2].setAttribute('geometry-sl-x', cell.parent['geometry'].x);\n        canvas[\"root\"].children[cnt2].setAttribute('geometry-sl-y', cell.parent['geometry'].y);\n      }catch{}\n    }\n\n      // canvas[\"root\"].lastElementChild.setAttribute('data-shapeid', cell['shapeid']);\n      // canvas[\"root\"].lastElementChild.setAttribute('data-objectid', cell['objectid']);\n      // canvas[\"root\"].lastElementChild.setAttribute('pointer-events', 'all');\n    // }\n  }\n  this.drawText(state, canvas);\n  cnt2 = canvas[\"root\"].children.length - 1;\n  if (cell && cell['shapeid'] && cell['objectid']) {\n      canvas[\"root\"].children[cnt2].setAttribute('data-shapeid', cell['shapeid']);\n      canvas[\"root\"].children[cnt2].setAttribute('data-objectid', cell['objectid']);\n      canvas[\"root\"].children[cnt2].setAttribute('pointer-events', 'all');\n      canvas[\"root\"].children[cnt2].setAttribute('geometry-x', cell['geometry'].x);\n      canvas[\"root\"].children[cnt2].setAttribute('geometry-y', cell['geometry'].y);\n      canvas[\"root\"].children[cnt2].setAttribute('geometry-height', cell['geometry'].height);\n      canvas[\"root\"].children[cnt2].setAttribute('geometry-width', cell['geometry'].width);\n      try{\n        canvas[\"root\"].children[cnt2].setAttribute('geometry-sl-x', cell.parent['geometry'].x);\n        canvas[\"root\"].children[cnt2].setAttribute('geometry-sl-y', cell.parent['geometry'].y);\n      }catch{}\n    }\n  if (link != null) {\n    canvas.setLink(\"\");\n  }\n};\n","export const GENERAL_SHAPES: any = {\n  Rectangle: {\n    type: 'vertex',\n    style: 'rounded=0;whiteSpace=wrap;html=1;',\n  },\n  'Rounded Rectangle': {\n    type: 'vertex',\n    style: 'rounded=1;whiteSpace=wrap;html=1;',\n  },\n  Text: {\n    type: 'vertex',\n    style: 'text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;',\n  },\n  Eclipse: {\n    type: 'vertex',\n    style: 'shape=ellipse;whiteSpace=wrap;html=1;',\n  },\n  Square: {\n    type: 'vertex',\n    style: 'whiteSpace=wrap;html=1;aspect=fixed;',\n  },\n  Circle: {\n    type: 'vertex',\n    style: 'shape=ellipse;whiteSpace=wrap;html=1;aspect=fixed;',\n  },\n  Process: {\n    type: 'vertex',\n    style: 'shape=process;whiteSpace=wrap;html=1;backgroundOutline=1;',\n  },\n  Diamond: {\n    type: 'vertex',\n    style: 'shape=rhombus;whiteSpace=wrap;html=1;',\n  },\n  Parallelogram: {\n    type: 'vertex',\n    style: 'shape=parallelogram;perimeter=parallelogramPerimeter;whiteSpace=wrap;html=1;',\n  },\n  Triangle: {\n    type: 'vertex',\n    style: 'shape=triangle;whiteSpace=wrap;html=1;',\n  },\n  Cylinder: {\n    type: 'vertex',\n    style: 'shape=cylinder;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;',\n  },\n  Cloud: {\n    type: 'vertex',\n    style: 'shape=ellipse;shape=cloud;whiteSpace=wrap;html=1;',\n  },\n  Document: {\n    type: 'vertex',\n    style: 'shape=document;whiteSpace=wrap;html=1;boundedLbl=1;',\n  },\n  'Internal Storage': {\n    type: 'vertex',\n    style: 'shape=internalStorage;whiteSpace=wrap;html=1;backgroundOutline=1;',\n  },\n  Cube: {\n    type: 'vertex',\n    style: 'shape=cube;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;',\n  },\n  Step: {\n    type: 'vertex',\n    style: 'shape=step;perimeter=stepPerimeter;whiteSpace=wrap;html=1;fixedSize=1;',\n  },\n  Trapezoid: {\n    type: 'vertex',\n    style: 'shape=trapezoid;perimeter=trapezoidPerimeter;whiteSpace=wrap;html=1;',\n  },\n  Tape: {\n    type: 'vertex',\n    style: 'shape=tape;whiteSpace=wrap;html=1;',\n  },\n  Note: {\n    type: 'vertex',\n    style: 'shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;',\n  },\n  Card: {\n    type: 'vertex',\n    style: 'shape=card;whiteSpace=wrap;html=1;',\n  },\n  Callout: {\n    type: 'vertex',\n    style: 'shape=callout;whiteSpace=wrap;html=1;perimeter=calloutPerimeter;',\n  },\n  Actor: {\n    type: 'vertex',\n    style: 'shape=umlActor;verticalLabelPosition=bottom;labelBackgroundColor=#ffffff;verticalAlign=top;html=1;outlineConnect=0;',\n  },\n  Hexagon: {\n    type: 'vertex',\n    style: 'shape=hexagon;perimeter=hexagonPerimeter2;whiteSpace=wrap;html=1;',\n  },\n  Curve: {\n    type: 'edge',\n    style: 'edgeStyle=elbowEdgeStyle;curved=1;endArrow=classic;html=1;',\n  },\n  'Bidirectional Arrow': {\n    type: 'edge',\n    style: 'edgeStyle=loopEdgeStyle;shape=flexArrow;endArrow=classic;startArrow=classic;html=1;fillColor=#ffffff;',\n  },\n  Arrow: {\n    type: 'edge',\n    style: 'edgeStyle=loopEdgeStyle;shape=flexArrow;endArrow=classic;html=1;fillColor=#ffffff;',\n  },\n  Link: {\n    type: 'edge',\n    style: 'edgeStyle=loopEdgeStyle;shape=link;html=1;',\n  },\n  'Dashed Line': {\n    type: 'edge',\n    style: 'edgeStyle=loopEdgeStyle;endArrow=none;dashed=1;html=1;',\n  },\n  Line: {\n    type: 'edge',\n    style: 'edgeStyle=loopEdgeStyle;endArrow=none;html=1;',\n  },\n  'Bidirectional Connector': {\n    type: 'edge',\n    style: 'edgeStyle=loopEdgeStyle;endArrow=classic;html=1;',\n  },\n  'Directional Connector': {\n    type: 'edge',\n    style: 'edgeStyle=loopEdgeStyle;endArrow=classic;html=1;',\n  },\n};\n","/* eslint-disable no-useless-concat */\r\nimport React from 'react';\r\nimport {\r\n  Stack,\r\n  StackItem\r\n} from 'office-ui-fabric-react/lib/Stack';\r\n// import { SemTalkPages } from '../controls/stpages/SemTalkPages';\r\nimport { ISemTalkOnline } from '../ISemTalkOnline';\r\n\r\nimport { Sidebar } from './sidebar';\r\nimport { Pages } from './pages';\r\n// import { ScrollablePane, ScrollbarVisibility } from 'office-ui-fabric-react';\r\n\r\n// import { Toolbar } from './toolbar';\r\n/* eslint import/no-webpack-loader-syntax: off */\r\n/* eslint  no-undef: off */\r\n// import JSEditor from '../src/JSEditor';\r\n\r\nimport util from './tsutil';\r\n// import './tsutil_bpmn.ts';\r\nimport { ITSEditor, zoomoption } from '../ITSEditor';\r\nimport './css/common.css';\r\nimport './css/explorer.css';\r\n\r\n/* tslint:disable:noImplicitAny */\r\n/* eslint:disable:noImplicitAny */\r\n\r\nimport styles from './tseditor.module.scss';\r\n\r\nimport {\r\n  mxGraph,\r\n  mxConstants,\r\n  mxEdgeStyle,\r\n  mxLayoutManager,\r\n  mxGeometry,\r\n  mxRubberband,\r\n  mxDragSource,\r\n  mxKeyHandler,\r\n  mxCodec,\r\n  mxClient,\r\n  mxConnectionHandler,\r\n  mxUtils,\r\n  mxGraphModel,\r\n  mxCell,\r\n  mxShape,\r\n  mxToolbar,\r\n  mxEvent,\r\n  mxImage,\r\n  mxVertexHandler,\r\n  mxPerimeter,\r\n  mxUndoManager,\r\n  mxClipboard,\r\n  mxConstraintHandler,\r\n  mxGraphHandler,\r\n  mxEdgeHandler,\r\n  mxPolyline,\r\n  mxConnectionConstraint,\r\n  mxPoint,\r\n  mxCellState,\r\n  mxRectangle,\r\n  mxAutoSaveManager,\r\n  mxRectangleShape,\r\n  mxHexagon,\r\n  mxHexagonShape,\r\n  mxCylinder,\r\n  mxCellRenderer,\r\n  mxActor,\r\n  mxRhombus,\r\n  mxArrow,\r\n  mxDefaultKeyHandler,\r\n  mxDefaultPopupMenu,\r\n  mxDefaultToolbar,\r\n  mxEditor,\r\n  mxCellHighlight,\r\n  mxCellMarker,\r\n  mxCellTracker,\r\n  mxEdgeSegmentHandler,\r\n  mxElbowEdgeHandler,\r\n  mxHandle,\r\n  mxPanningHandler,\r\n  mxPopupMenuHandler,\r\n  mxSelectionCellsHandler,\r\n  mxTooltipHandler,\r\n  mxCellCodec,\r\n  mxChildChangeCodec,\r\n  mxCodecRegistry,\r\n  mxDefaultKeyHandlerCodec,\r\n  mxEditorCodec,\r\n  mxGenericChangeCodec,\r\n  mxGraphCodec,\r\n  mxDefaultPopupMenuCodec,\r\n  mxDefaultToolbarCodec,\r\n  mxGraphViewCodec,\r\n  mxModelCodec,\r\n  mxObjectCodec,\r\n  mxRootChangeCodec,\r\n  mxStylesheetCodec,\r\n  mxTerminalChangeCodec,\r\n  mxParallelEdgeLayout,\r\n  mxFastOrganicLayout,\r\n  mxCircleLayout,\r\n  mxCompactTreeLayout,\r\n  mxCompositeLayout,\r\n  mxEdgeLabelLayout,\r\n  mxGraphLayout,\r\n  mxPartitionLayout,\r\n  mxRadialTreeLayout,\r\n  mxStackLayout,\r\n  mxHierarchicalLayout,\r\n  mxSwimlaneLayout,\r\n  mxGraphAbstractHierarchyCell,\r\n  mxGraphHierarchyEdge,\r\n  mxGraphHierarchyModel,\r\n  mxGraphHierarchyNode,\r\n  mxSwimlaneModel,\r\n  mxCoordinateAssignment,\r\n  mxHierarchicalLayoutStage,\r\n  mxMedianHybridCrossingReduction,\r\n  mxMinimumCycleRemover,\r\n  mxSwimlaneOrdering,\r\n  mxCellPath,\r\n  mxArrowConnector,\r\n  mxCloud,\r\n  mxConnector,\r\n  mxDoubleEllipse,\r\n  mxEllipse,\r\n  mxImageShape,\r\n  mxLabel,\r\n  mxLine,\r\n  mxMarker,\r\n  mxStencil,\r\n  mxStencilRegistry,\r\n  mxSwimlane,\r\n  mxText,\r\n  mxTriangle,\r\n  mxAbstractCanvas2D,\r\n  mxAnimation,\r\n  mxDictionary,\r\n  mxDivResizer,\r\n  mxEffects,\r\n  mxEventObject,\r\n  mxEventSource,\r\n  mxForm,\r\n  mxGuide,\r\n  mxImageBundle,\r\n  mxImageExport,\r\n  mxLog,\r\n  mxMorphing,\r\n  mxMouseEvent,\r\n  mxObjectIdentity,\r\n  mxPanningManager,\r\n  mxPopupMenu,\r\n  mxResources,\r\n  mxSvgCanvas2D,\r\n  mxUndoableEdit,\r\n  // mxChildChange,\r\n  mxUrlConverter,\r\n  mxVmlCanvas2D,\r\n  mxWindow,\r\n  mxXmlCanvas2D,\r\n  mxXmlRequest,\r\n  mxCellEditor,\r\n  mxCellOverlay,\r\n  mxCellStatePreview,\r\n  mxGraphSelectionModel,\r\n  mxGraphView,\r\n  mxMultiplicity,\r\n  mxOutline,\r\n  mxPrintPreview,\r\n  mxStyleRegistry,\r\n  mxSwimlaneManager,\r\n  mxTemporaryCellStates,\r\n  // mxXmlUtils,\r\n  // mxGraphComponent,\r\n  // mxPngEncodeParam,\r\n  // mxPngImageEncoder\r\n} from \"mxgraph-js\";\r\n\r\nimport { GENERAL_SHAPES } from './general-shape';\r\nimport { MessageBarType } from 'office-ui-fabric-react';\r\n// import { SemTalkStencil } from '../application/semtalklistener/visiordfsinterface';\r\n\r\nexport interface ITSEditorProps {\r\n  site: string;\r\n  xmlgraph: string;\r\n  callback: ISemTalkOnline;\r\n  stencil: any;\r\n  // xmlshapes: HTMLCollection[];\r\n  // diag: ISemTalkDiagram;\r\n  // semtalk: IVisioRDFS;\r\n  // diaglist: { text: string, key: number }[];\r\n  diagcaption: string;\r\n  diagid: number;\r\n  width: number;\r\n  height: number;\r\n  ispanzoom: boolean;\r\n  isstencil: boolean;\r\n  isconnectionpoints: boolean;\r\n}\r\nexport interface ITSEditorState {\r\n  // editor: JSEditor | null;\r\n  // xmlgraph: string;\r\n  //  semtalk: IVisioRDFS | undefined;\r\n  //  diag: ISemTalkDiagram | null;\r\n  ispanzoom: boolean;\r\n  isstencil: boolean;\r\n  diaglist: { text: string, key: number }[];\r\n  // panzoomX: string;\r\n  // panzoomY: string;\r\n  horizontal: boolean;\r\n}\r\nfunction setVariables() {\r\n  // console.debug(window[\"mxGraphModel\"]);\r\n  window[\"mxGraph\" as any] = mxGraph;\r\n  window[\"mxParallelEdgeLayout\" as any] = mxParallelEdgeLayout;\r\n  window[\"mxConstants\" as any] = mxConstants;\r\n  window[\"mxEdgeStyle\" as any] = mxEdgeStyle;\r\n  window[\"mxLayoutManager\" as any] = mxLayoutManager;\r\n  window[\"mxRubberband\" as any] = mxRubberband;\r\n  window[\"mxDragSource\" as any] = mxDragSource;\r\n  window[\"mxGeometry\" as any] = mxGeometry;\r\n  window[\"mxKeyHandler\" as any] = mxKeyHandler;\r\n  window[\"mxCodec\" as any] = mxCodec;\r\n  window[\"mxClient\" as any] = mxClient;\r\n  window[\"mxConnectionHandler\" as any] = mxConnectionHandler;\r\n  window[\"mxUtils\" as any] = mxUtils;\r\n  window[\"mxGraphModel\" as any] = mxGraphModel;\r\n  window[\"mxCell\" as any] = mxCell;\r\n  window[\"mxShape\" as any] = mxShape;\r\n  window[\"mxToolbar\" as any] = mxToolbar;\r\n  window[\"mxEvent\" as any] = mxEvent;\r\n  window[\"mxImage\" as any] = mxImage;\r\n  window[\"mxFastOrganicLayout\" as any] = mxFastOrganicLayout;\r\n  window[\"mxVertexHandler\" as any] = mxVertexHandler;\r\n  window[\"mxPerimeter\" as any] = mxPerimeter;\r\n  window[\"mxUndoManager\" as any] = mxUndoManager;\r\n  window[\"mxClipboard\" as any] = mxClipboard;\r\n  window[\"mxConstraintHandler\" as any] = mxConstraintHandler;\r\n  window[\"mxGraphHandler\" as any] = mxGraphHandler;\r\n  window[\"mxEdgeHandler\" as any] = mxEdgeHandler;\r\n  window[\"mxPolyline\" as any] = mxPolyline;\r\n  window[\"mxConnectionConstraint\" as any] = mxConnectionConstraint;\r\n  window[\"mxPoint\" as any] = mxPoint;\r\n  window[\"mxCellState\" as any] = mxCellState;\r\n  window[\"mxRectangle\" as any] = mxRectangle;\r\n  window[\"mxAutoSaveManager\" as any] = mxAutoSaveManager;\r\n  window[\"mxRectangleShape\" as any] = mxRectangleShape;\r\n  window[\"mxHexagon\" as any] = mxHexagon;\r\n  window[\"mxHexagonShape\" as any] = mxHexagonShape;\r\n  window[\"mxCylinder\" as any] = mxCylinder;\r\n  window[\"mxCellRenderer\" as any] = mxCellRenderer;\r\n  window[\"mxActor\" as any] = mxActor;\r\n  window[\"mxRhombus\" as any] = mxRhombus;\r\n  window[\"mxArrow\" as any] = mxArrow;\r\n  window[\"mxDefaultKeyHandler\" as any] = mxDefaultKeyHandler;\r\n  window[\"mxDefaultPopupMenu\" as any] = mxDefaultPopupMenu;\r\n  window[\"mxDefaultToolbar\" as any] = mxDefaultToolbar;\r\n  window[\"mxEditor\" as any] = mxEditor;\r\n  window[\"mxCellHighlight\" as any] = mxCellHighlight;\r\n  window[\"mxCellMarker\" as any] = mxCellMarker;\r\n  window[\"mxCellTracker\" as any] = mxCellTracker;\r\n  window[\"mxEdgeSegmentHandler\" as any] = mxEdgeSegmentHandler;\r\n  window[\"mxElbowEdgeHandler\" as any] = mxElbowEdgeHandler;\r\n  window[\"mxHandle\" as any] = mxHandle;\r\n  window[\"mxPanningHandler\" as any] = mxPanningHandler;\r\n  window[\"mxPanningHandler\" as any] = mxPanningHandler;\r\n  window[\"mxPanningHandler\" as any] = mxPanningHandler;\r\n  window[\"mxChildChangeCodec\" as any] = mxChildChangeCodec;\r\n  window[\"mxPopupMenuHandler\" as any] = mxPopupMenuHandler;\r\n  window[\"mxSelectionCellsHandler\" as any] = mxSelectionCellsHandler;\r\n  window[\"mxTooltipHandler\" as any] = mxTooltipHandler;\r\n  window[\"mxCellCodec\" as any] = mxCellCodec;\r\n  window[\"mxCodecRegistry\" as any] = mxCodecRegistry;\r\n  window[\"mxDefaultKeyHandlerCodec\" as any] = mxDefaultKeyHandlerCodec;\r\n  window[\"mxEditorCodec\" as any] = mxEditorCodec;\r\n  window[\"mxGenericChangeCodec\"] = mxGenericChangeCodec;\r\n  window[\"mxGraphCodec\" as any] = mxGraphCodec;\r\n  window[\"mxDefaultPopupMenuCodec\" as any] = mxDefaultPopupMenuCodec;\r\n  window[\"mxDefaultToolbarCodec\" as any] = mxDefaultToolbarCodec;\r\n  window[\"mxGraphViewCodec\" as any] = mxGraphViewCodec;\r\n  window[\"mxModelCodec\" as any] = mxModelCodec;\r\n  window[\"mxObjectCodec\" as any] = mxObjectCodec;\r\n  window[\"mxRootChangeCodec\" as any] = mxRootChangeCodec;\r\n  window[\"mxStylesheetCodec\" as any] = mxStylesheetCodec;\r\n  window[\"mxTerminalChangeCodec\" as any] = mxTerminalChangeCodec;\r\n  window[\"mxCircleLayout\" as any] = mxCircleLayout;\r\n  window[\"mxCompactTreeLayout\" as any] = mxCompactTreeLayout;\r\n  window[\"mxCompositeLayout\" as any] = mxCompositeLayout;\r\n  window[\"mxEdgeLabelLayout\" as any] = mxEdgeLabelLayout;\r\n  window[\"mxGraphLayout\" as any] = mxGraphLayout;\r\n  window[\"mxPartitionLayout\" as any] = mxPartitionLayout;\r\n  window[\"mxRadialTreeLayout\" as any] = mxRadialTreeLayout;\r\n  window[\"mxStackLayout\" as any] = mxStackLayout;\r\n  window[\"mxHierarchicalLayout\" as any] = mxHierarchicalLayout;\r\n  window[\"mxSwimlaneLayout\" as any] = mxSwimlaneLayout;\r\n  window[\"mxGraphAbstractHierarchyCell\" as any] = mxGraphAbstractHierarchyCell;\r\n  window[\"mxGraphHierarchyEdge\" as any] = mxGraphHierarchyEdge;\r\n  window[\"mxGraphHierarchyModel\" as any] = mxGraphHierarchyModel;\r\n  window[\"mxGraphHierarchyNode\" as any] = mxGraphHierarchyNode;\r\n  window[\"mxSwimlaneModel\" as any] = mxSwimlaneModel;\r\n  window[\"mxCoordinateAssignment\" as any] = mxCoordinateAssignment;\r\n  window[\"mxHierarchicalLayoutStage\" as any] = mxHierarchicalLayoutStage;\r\n  window[\"mxMedianHybridCrossingReduction\" as any] = mxMedianHybridCrossingReduction;\r\n  window[\"mxMinimumCycleRemover\" as any] = mxMinimumCycleRemover;\r\n  window[\"mxSwimlaneOrdering\" as any] = mxSwimlaneOrdering;\r\n  window[\"mxCellPath\" as any] = mxCellPath;\r\n  window[\"mxArrowConnector\" as any] = mxArrowConnector;\r\n  window[\"mxCloud\" as any] = mxCloud;\r\n  window[\"mxConnector\" as any] = mxConnector;\r\n  window[\"mxDoubleEllipse\" as any] = mxDoubleEllipse;\r\n  window[\"mxEllipse\" as any] = mxEllipse;\r\n  window[\"mxImageShape\" as any] = mxImageShape;\r\n  window[\"mxLabel\" as any] = mxLabel;\r\n  window[\"mxLine\" as any] = mxLine;\r\n  window[\"mxMarker\" as any] = mxMarker;\r\n  window[\"mxStencil\" as any] = mxStencil;\r\n  window[\"mxStencilRegistry\" as any] = mxStencilRegistry;\r\n  window[\"mxSwimlane\" as any] = mxSwimlane;\r\n  window[\"mxText\" as any] = mxText;\r\n  window[\"mxTriangle\" as any] = mxTriangle;\r\n  window[\"mxAbstractCanvas2D\" as any] = mxAbstractCanvas2D;\r\n  window[\"mxAnimation\" as any] = mxAnimation;\r\n  window[\"mxDictionary\" as any] = mxDictionary;\r\n  window[\"mxDivResizer\" as any] = mxDivResizer;\r\n  window[\"mxEffects\" as any] = mxEffects;\r\n  window[\"mxEventObject\" as any] = mxEventObject;\r\n  window[\"mxEventSource\" as any] = mxEventSource;\r\n  window[\"mxForm\" as any] = mxForm;\r\n  window[\"mxGuide\" as any] = mxGuide;\r\n  window[\"mxImageBundle\" as any] = mxImageBundle;\r\n  window[\"mxImageExport\" as any] = mxImageExport;\r\n  window[\"mxLog\" as any] = mxLog;\r\n  window[\"mxMorphing\" as any] = mxMorphing;\r\n  window[\"mxMouseEvent\" as any] = mxMouseEvent;\r\n  window[\"mxObjectIdentity\" as any] = mxObjectIdentity;\r\n  window[\"mxPanningManager\" as any] = mxPanningManager;\r\n  window[\"mxPopupMenu\" as any] = mxPopupMenu;\r\n  window[\"mxResources\" as any] = mxResources;\r\n  window[\"mxSvgCanvas2D\" as any] = mxSvgCanvas2D;\r\n  window[\"mxUndoableEdit\" as any] = mxUndoableEdit;\r\n  window[\"mxUrlConverter\" as any] = mxUrlConverter;\r\n  window[\"mxVmlCanvas2D\" as any] = mxVmlCanvas2D;\r\n  window[\"mxArrow\" as any] = mxArrow;\r\n  window[\"mxArrow\" as any] = mxArrow;\r\n  window[\"mxWindow\" as any] = mxWindow;\r\n  window[\"mxXmlCanvas2D\" as any] = mxXmlCanvas2D;\r\n  window[\"mxXmlRequest\" as any] = mxXmlRequest;\r\n  window[\"mxCellEditor\" as any] = mxCellEditor;\r\n  window[\"mxCellOverlay\" as any] = mxCellOverlay;\r\n  window[\"mxCellStatePreview\" as any] = mxCellStatePreview;\r\n  window[\"mxGraphSelectionModel\" as any] = mxGraphSelectionModel;\r\n  window[\"mxGraphView\" as any] = mxGraphView;\r\n  window[\"mxMultiplicity\" as any] = mxMultiplicity;\r\n  window[\"mxOutline\" as any] = mxOutline;\r\n  window[\"mxPrintPreview\" as any] = mxPrintPreview;\r\n  window[\"mxStyleRegistry\" as any] = mxStyleRegistry;\r\n  window[\"mxSwimlaneManager\" as any] = mxSwimlaneManager;\r\n  window[\"mxTemporaryCellStates\" as any] = mxTemporaryCellStates;\r\n}\r\n\r\nexport class TSEditor extends React.Component<ITSEditorProps, ITSEditorState> implements ITSEditor {\r\n  // private editor: Editor;\r\n  // private mounted: boolean=false;\r\n  // private graphContainerClickCount: number=0;\r\n  // private empty: any;\r\n  public graph: mxGraph;\r\n  public sidebar: Sidebar;\r\n  public pages: Pages;\r\n  public containerEle: any;\r\n  public swimlanemanager: mxSwimlaneManager;\r\n  public stacklayout: mxStackLayout;\r\n  private droptarget: mxCell | null = null;\r\n  private imageShapes: HTMLCollection[] = [];\r\n  private keydownhandler: any[] = [];\r\n  // private undoManager: mxUndoManager;\r\n  // private outline: mxOutline;\r\n  private undoman: mxUndoManager = new mxUndoManager(); //eslint-disable-line\r\n\r\n\r\n  //public droptarget: any = null;\r\n\r\n  constructor(props: ITSEditorProps) {\r\n    super(props);\r\n\r\n    console.debug(\"TSEditor\");\r\n\r\n    this.state = {\r\n      // editor: null,\r\n      // xmlgraph: this.props.xmlgraph,\r\n      // diag: this.props.diag,\r\n      ispanzoom: this.props.ispanzoom,\r\n      isstencil: this.props.isstencil,\r\n      diaglist: [],\r\n      horizontal: false\r\n      //   semtalk: this.props.semtalk\r\n      // panzoomX: \"10px\",\r\n      // panzoomY: \"20px\"\r\n    };\r\n  }\r\n  // private mounted: boolean = false;\r\n  public componentDidMount() {\r\n    //const parser = new DOMParser();\r\n    // let svgShapes: any = parser.parseFromString(this.props.svgshapes, 'text/xml');\r\n    setVariables();\r\n\r\n    let div: any = document.getElementById('some-empty-div-on-the-page');\r\n    if (!div) return;\r\n    div.innerHTML = \"\";\r\n    const model: mxGraphModel = new mxGraphModel();\r\n    mxGraph.prototype[\"ordered\"] = false;\r\n    this.graph = new mxGraph(div, model);\r\n\r\n    // this.cellCreatedFunc = this.cellCreatedFunc;\r\n    // this.valueChangeFunc = this.valueChangeFunc;\r\n\r\n    mxEvent.disableContextMenu(div); // eslint-disable-line\r\n    mxVertexHandler.prototype.rotationEnabled = false; // eslint-disable-line\r\n    mxConstants.VERTEX_SELECTION_STROKEWIDTH = 3;\r\n    mxConstants.VERTEX_SELECTION_COLOR = '#000000';\r\n    mxConstants.VERTEX_SELECTION_DASHED = false;\r\n\r\n    this.containerEle = div;\r\n\r\n    //   let keyHandler = new mxKeyHandler(this.graph);\r\n    // //  \"e\"\r\n    //   keyHandler.bindKey(69, function(evt: any)\r\n    //   {\r\n    //     alert(\"xxx\");\r\n    //   });\r\n\r\n    // mxConstants.POINTS = 1;\r\n    // mxConstants.MILLIMETERS = 2;\r\n    // mxConstants.INCHES = 3;\r\n    // mxConstants.PIXELS_PER_MM = 3.937;\r\n    // mxConstants.PIXELS_PER_INCH = 100;\r\n\r\n    // mxConstants.SHADOW_OPACITY = 0.25;\r\n    // mxConstants.SHADOWCOLOR = '#000000';\r\n    // mxConstants.VML_SHADOWCOLOR = '#d0d0d0';\r\n    // mxGraph.prototype.pageBreakColor = '#c0c0c0';\r\n    // mxGraph.prototype.pageScale = 1;\r\n\r\n    this.initEditor(this.graph, this.props.stencil);\r\n    let width = this.props.width;\r\n    let height = this.props.height;\r\n    // this.graph.minimumGraphSize = { width: width, height: height };\r\n    // // this.graph.setAutoSizeCells(true);\r\n\r\n\r\n    let cb = this.props.callback;\r\n    let mod = this.graph.model;\r\n    this.graph.getLabel = function (cell: any) {\r\n      let tmp = mxGraph.prototype.getLabel.apply(this, arguments); // \"supercall\"\r\n      if (cb && cell.objectid) {\r\n        return cb.getLabel(cell, tmp);\r\n      }\r\n\r\n      if (mod.isEdge(cell)) {\r\n        return '<div style=\"width: 60px; white-space:normal;\">' + tmp + '</div>';\r\n      }\r\n      // if (this.model.isVertex(cell)) {\r\n      //   return '<div style=\"width: ' + cell.geometry.width + 'px; white-space:normal;\">' + tmp + '</div>';\r\n      // }\r\n\r\n      return tmp;\r\n    };\r\n\r\n    this.graph.isCellResizable = (cell: any) => {\r\n      let geo = cell.geometry;\r\n      // return geo === null || !geo.relative;\r\n      if (this.props.callback && cell.objectid) {\r\n        return this.props.callback.isCellResizable(cell);\r\n      } else {\r\n        return geo === null || geo === undefined || !geo.relative;\r\n      }\r\n    };\r\n\r\n    this.graph.isWrapping = (state: any) => {\r\n      if (this.props.callback && state.cell && state.cell.objectid) {\r\n        return this.props.callback.isWrapping(state.cell);\r\n      }\r\n      let isedge = mod.isEdge(state.cell);\r\n      return isedge;\r\n    };\r\n\r\n    // this.initCustomPort('https://gw.alicdn.com/tfs/TB1PqwZzzDpK1RjSZFrXXa78VXa-200-200.png');\r\n    // this.initCustomPort(this.props.site + '/Support/images/symbols/anchor.png');\r\n    //  this.initCustomPort(\".\" + '/Support/images/symbols/anchor.png');\r\n\r\n    // let xml = window.localStorage.getItem('autosaveXml');\r\n    // if (xml === null || xml.length === 0) {\r\n    //   xml = this.props.xmlgraph;\r\n    // }\r\n    let xml = this.props.xmlgraph;\r\n    this.resetEditor(xml, this.props.diagcaption, this.props.diagid, false, false);\r\n\r\n    let containerEle = document.getElementById('some-empty-div-on-the-page');\r\n    if (containerEle) {\r\n      this.graph.setResizeContainer(true);\r\n      let wi: number = this.graph.pageFormat.width;\r\n      let he: number = this.graph.pageFormat.height;\r\n      if (wi < width) wi = width;\r\n      if (he < height) he = height;\r\n      containerEle.style.width = wi + \"px\";\r\n      containerEle.style.height = he + \"px\";\r\n      // this.graph.fit();\r\n      this.graph.setResizeContainer(false);\r\n      // // containerEle.style.overflow = \"auto\";\r\n      containerEle.style.overflow = \"hidden\";\r\n      containerEle.style.width = width + \"px\";\r\n      containerEle.style.height = height + \"px\";\r\n      containerEle.style.maxWidth = width + \"px\";\r\n      containerEle.style.maxHeight = height + \"px\";\r\n    }\r\n\r\n    this.droptarget = null;\r\n    // this.graph.addListener(mxEvent.CLICK, (sender: any, evt: any) => {\r\n    //   let cell = evt.getProperty(\"cell\"); // cell may be null\r\n    //   if (cell) {\r\n    //     //le.log(cell);\r\n    //     if (cell.overlay) {\r\n    //       // console.log(\"overlay clicked:\" + cell);\r\n    //       this.graph.setSelectionCell(cell.parent);\r\n    //       evt.consume();\r\n    //     }\r\n    //     // } else {\r\n    //     //   if (this.graph.isEditing()) {\r\n    //     //     this.graph.stopEditing(false);\r\n    //     //   }\r\n    //   }\r\n    // });\r\n\r\n  }\r\n  public updateDiaglist = (diaglist: { text: string, key: number }[]): void => {\r\n    this.setState({ diaglist: diaglist });\r\n  }\r\n  public configShapes = (graph: mxGraph, stencil: HTMLCollection[]): void => {\r\n    const {\r\n      stylesheet\r\n    } = graph;\r\n    const vertexStyle = stylesheet.getDefaultVertexStyle();\r\n    vertexStyle[mxConstants.STYLE_STROKECOLOR] = '#B9BECC'; //eslint-disable-line\r\n    vertexStyle[mxConstants.STYLE_FILLCOLOR] = '#ffffff'; //eslint-disable-line\r\n    vertexStyle[mxConstants.STYLE_FONTCOLOR] = '#333'; //eslint-disable-line\r\n    this.imageShapes = stencil;\r\n\r\n\r\n    graph.setDropEnabled(true);\r\n\r\n    const imageStyle: any = {};\r\n    imageStyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_IMAGE; //eslint-disable-line\r\n    imageStyle[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter; //eslint-disable-line\r\n    // style[mxConstants.STYLE_IMAGE] = cardShapes[name];\r\n    imageStyle[mxConstants.STYLE_FONTCOLOR] = '#333'; //eslint-disable-line\r\n    graph.getStylesheet().putCellStyle('image', imageStyle);\r\n  }\r\n  public initEditor = (graph: mxGraph, stencil: HTMLCollection[]) => {\r\n\r\n    graph.gridSize = 30;\r\n\r\n    graph.setTooltips(true);\r\n    graph.setAllowDanglingEdges(false);\r\n    graph.setDisconnectOnMove(false);\r\n\r\n    // Disables the built-in context menu\r\n    mxEvent.disableContextMenu(this.containerEle); // eslint-disable-line\r\n    if (mxClient.IS_QUIRKS) {\r\n      document.body.style.overflow = 'hidden';\r\n      new mxDivResizer(this.containerEle);\r\n    }\r\n    this.initGraph(graph);\r\n    util.initPopupMenu(graph, this.menuFunc);\r\n    this.initZoomConfig(graph);\r\n\r\n    // config shapes\r\n    this.configShapes(graph, stencil);\r\n    this.undoListener(graph, this.undoFunc);\r\n    this.copyListener(graph, this.copyFunc);\r\n    this.keyListener(graph, this.keyFunc);\r\n    this.deleteListener(graph, this.deleteFunc);\r\n\r\n    // connector handler\r\n    util.connectorHandler(graph, this.isValid, this.props.callback);\r\n    // util.connectorHandler1({\r\n    //    graph,\r\n    //  });\r\n\r\n    this.handleDoubleClick(graph, this.doubleClickFunc);\r\n    this.handleClick(graph, this.clickFunc);\r\n    this.handleMove(graph, this.moveCellsFunc);\r\n\r\n    // util.handleAddVertex({\r\n    //   graph,\r\n    //   callback: this.addVertexFunc,\r\n    // });\r\n\r\n    util.handleHover({\r\n      graph,\r\n      // callback: this.hoverFunc,\r\n      callback: this.props.callback,\r\n    });\r\n\r\n    this.handleChange(graph, this.selectFunc);\r\n\r\n    // util.handleCellsAdded({\r\n    //   graph,\r\n    //   // callback: this.changeFunc,\r\n    //   callback: undefined,\r\n    // });\r\n    this.handleConnect(graph, this.connectFunc);\r\n    this.handleDisconnect(graph, this.disconnectFunc);\r\n    this.initAutoSave(graph, this.autoSaveFunc);\r\n\r\n    util.vertexRenameListener({\r\n      callback: this.valueChangeFunc,\r\n    }\r\n    );\r\n\r\n    let outline = document.getElementById('outlineContainer');\r\n    new mxOutline(graph, outline);\r\n    // console.debug(this.outline);\r\n\r\n  }\r\n  /**\r\n  * init graph\r\n  * @param {graph} config\r\n  */\r\n  private initGraph(graph: mxGraph) {\r\n    // // Enables HTML labels\r\n    graph.setHtmlLabels(true);\r\n    graph.gridSize = 10;\r\n    graph.setConnectable(true);\r\n    // graph.setPortsEnabled(false);\r\n    graph.connectionHandler.createTarget = false;\r\n    graph.setCellsCloneable(true);\r\n    // graph.setBackgroundImage();\r\n    graph.border = 80;\r\n    graph.getView().translate = new mxPoint(graph.border / 2, graph.border / 2);\r\n    graph.setResizeContainer(true);\r\n    // graph.container.setAttribute('tabindex', '-1');\r\n    // graph.container.focus();\r\n    new mxRubberband(graph);\r\n  }\r\n\r\n  public preview(xml: any, div: string) {\r\n    let outline = document.getElementById(div);\r\n    this.renderNewGraphFromXml(xml, outline);\r\n    // new mxOutline(graph, outline);\r\n  }\r\n\r\n  public initSidebar = (sidebarItems: any[]) => {\r\n    let graph = this.graph;\r\n\r\n    if (!graph) return;\r\n    // sidebarItems,\r\n    let cellCreatedFunc = this.cellCreatedFunc;\r\n    let callback = this.props.callback;\r\n\r\n    sidebarItems\r\n      &&\r\n      sidebarItems.forEach((item: any) => {\r\n        const width = item.getAttribute('data-shape-width');\r\n        const height = item.getAttribute('data-shape-height');\r\n        const shapeType = item.getAttribute('data-shape-type');\r\n        const shapeName = item.getAttribute('data-shape-name');\r\n        const shapeSubkey = item.getAttribute('data-shape-subkey');\r\n        const shapeLabel = item.getAttribute('data-shape-label');\r\n        const shapeContent = item.getAttribute('data-shape-content');\r\n\r\n        let ss = callback.GetShapeStyle(shapeName, shapeType);\r\n        let isEdge = ss.isedge;\r\n        let shapeStyle = ss.style;\r\n\r\n        this.createDragableItem({\r\n          id: null,\r\n          node: item,\r\n          width,\r\n          height,\r\n          shapeName,\r\n          shapeSubkey,\r\n          shapeLabel,\r\n          shapeContent,\r\n          graph,\r\n          isEdge,\r\n          shapeStyle,\r\n          cellCreatedFunc,\r\n        });\r\n      });\r\n  }\r\n  private createDragableItem(config: any) {\r\n    const {\r\n      graph,\r\n      node,\r\n      shapeName,\r\n      shapeSubkey,\r\n      shapeStyle,\r\n      shapeLabel,\r\n      // shapeContent,\r\n      id,\r\n      isEdge,\r\n      cellCreatedFunc,\r\n    } = config;\r\n\r\n    let {\r\n      width,\r\n      height\r\n    } = config;\r\n\r\n    // console.debug(config);\r\n\r\n    width = width * 1 || 130;\r\n    height = height * 1 || 90;\r\n\r\n    // Returns the graph under the mouse\r\n    const graphF = (evt: any) => {\r\n      const x1 = mxEvent.getClientX(evt); //eslint-disable-line\r\n      const y1 = mxEvent.getClientY(evt); //eslint-disable-line\r\n      const elt = document.elementFromPoint(x1, y1);\r\n\r\n      if (mxUtils.isAncestorNode(graph.container, elt)) { //eslint-disable-line\r\n        //eslint-disable-line\r\n        return graph;\r\n      }\r\n\r\n      return null;\r\n    };\r\n\r\n    // Inserts a cell at the given location\r\n    const funct = (graph2: any, evt: any, target: any, x2: number, y2: number) => {\r\n      try {\r\n        // is a edge\r\n        if (isEdge) {\r\n          const cell = new mxCell( //eslint-disable-line\r\n            '',\r\n            new mxGeometry(0, 0, width, height), //eslint-disable-line\r\n            shapeStyle\r\n          ); //eslint-disable-line\r\n          cell.geometry.setTerminalPoint(new mxPoint(0, height), true); //eslint-disable-line\r\n          cell.geometry.setTerminalPoint(new mxPoint(width, 0), false); //eslint-disable-line\r\n          // cell.geometry.points = [new mxPoint(width/2, height/2), new mxPoint(0, 0)];\r\n          cell.geometry.relative = true;\r\n          cell.edge = true;\r\n          cell.shapeKey = shapeName;\r\n          // cell.shapeName = shapeLabel;\r\n          cell.shapeName = shapeName;\r\n          cell.shapeSubkey = shapeSubkey;\r\n          cell.shapeLabel = shapeLabel;\r\n          cell.id = id;\r\n\r\n          const cells = graph2.importCells([cell], x2, y2 - evt.offsetY, target);\r\n\r\n          if (cells != null && cells.length > 0) {\r\n            graph2.scrollCellToVisible(cells[0]);\r\n            graph2.setSelectionCells(cells);\r\n          }\r\n\r\n          cellCreatedFunc && cellCreatedFunc(cell);\r\n        } else {\r\n          // let parent = graph2.getDefaultParent();\r\n\r\n          // let oth = graph.getCellAt(x2, y2, parent, true, false, getSwimlaneDropTarget);\r\n          // if (oth) {\r\n          //   parent = oth;\r\n          //   x2 -= oth.geometry.x;\r\n          //   y2 -= oth.geometry.y;\r\n          //   // foo\r\n          // }\r\n          // //  console.debug(oth);\r\n          // //  console.debug(parent);\r\n\r\n          let parent = target;\r\n          if (parent) {\r\n            x2 -= parent.geometry.x;\r\n            y2 -= parent.geometry.y;\r\n          } else {\r\n            parent = graph2.getDefaultParent();\r\n          }\r\n\r\n          if (shapeName === \"swimlane\") {\r\n            let vs = graph.getStylesheet().getCellStyle(mxConstants.SHAPE_SWIMLANE);\r\n            let isv = vs[mxConstants.STYLE_HORIZONTAL];\r\n            if (isv) {\r\n              let w = width;\r\n              width = height;\r\n              height = w;\r\n\r\n            }\r\n          }\r\n\r\n          if (parent) {\r\n            const cell = graph2.insertVertex(\r\n              parent,\r\n              id,\r\n              shapeLabel,\r\n              x2,\r\n              y2,\r\n              width,\r\n              height,\r\n              shapeStyle\r\n            );\r\n            // console.debug(cell);\r\n            cell.shapeKey = shapeName;\r\n            cell.shapeName = shapeLabel;\r\n            // cell.shapeName = shapeName;\r\n            cell.shapeSubkey = shapeSubkey;\r\n            cell.shapeLabel = shapeLabel;\r\n\r\n            cellCreatedFunc && cellCreatedFunc(cell);\r\n          } else {\r\n            console.log('graph.getDefaultParent() 为 null');\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n\r\n    // Disables built-in DnD in IE (this is needed for cross-frame DnD, see below)\r\n    if (mxClient.IS_IE) { //eslint-disable-line\r\n      //eslint-disable-line\r\n      mxEvent.addListener(node, 'dragstart', (evt: any) => { //eslint-disable-line\r\n        //eslint-disable-line\r\n        evt.returnValue = false;\r\n      });\r\n    }\r\n\r\n    // Creates the element that is being for the actual preview.\r\n    const dragElt = document.createElement('div');\r\n    dragElt.style.border = 'dashed black 1px';\r\n    dragElt.style.width = `${width}px`;\r\n    dragElt.style.height = `${height}px`;\r\n\r\n    // Drag source is configured to use dragElt for preview and as drag icon\r\n    // if scalePreview (last) argument is true. Dx and dy are null to force\r\n    // the use of the defaults. Note that dx and dy are only used for the\r\n    // drag icon but not for the preview.\r\n    // const ds = mxUtils.makeDraggable( //eslint-disable-line\r\n    //   //eslint-disable-line\r\n    //   node,\r\n    //   graphF,\r\n    //   funct,\r\n    //   dragElt,\r\n    //   null,\r\n    //   null,\r\n    //   graph.autoscroll,\r\n    //   true\r\n    // );\r\n    const getSwimlaneDropTarget = (_graph2: mxGraph, x: number, y: number,\r\n      _evt: any) => {\r\n      let cell: mxCell | null = graph.getCellAt(x, y);\r\n      if (cell) {\r\n        // console.debug(cell);\r\n        if (cell.shapeKey === \"group\" || cell.shapeKey === \"swimlane\") {\r\n          return cell;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n      return cell;\r\n    };\r\n\r\n    const ds = mxUtils.makeDraggable( //eslint-disable-line\r\n      //eslint-disable-line\r\n      node,\r\n      graphF,\r\n      funct,\r\n      dragElt,\r\n      null,\r\n      null,\r\n      graph.autoscroll,\r\n      true,\r\n      true,\r\n      getSwimlaneDropTarget\r\n    );\r\n    // Redirects feature to global switch. Note that this feature should only be used\r\n    // if the the x and y arguments are used in funct to insert the cell.\r\n    ds.isGuidesEnabled = () => graph.graphHandler.guidesEnabled;\r\n\r\n    // Restores original drag icon while outside of graph\r\n    ds.createDragElement = mxDragSource.prototype.createDragElement; //eslint-disable-line\r\n  }\r\n  public initCustomPort = (pic: any): void => {\r\n    mxConstraintHandler.prototype.pointImage = new mxImage(pic, 10, 10);\r\n  }\r\n  public zoom = (type: zoomoption): void => {\r\n    const graph = this.graph;\r\n    switch (type) {\r\n      case 0:\r\n        graph.zoomIn();\r\n        break;\r\n      case 1:\r\n        graph.zoomOut();\r\n        break;\r\n      case 2:\r\n        graph.fit(0);\r\n        break;\r\n      case 3:\r\n        graph.zoomActual();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const cellsSelected = graph.getSelectionCells();\r\n    if (cellsSelected.length > 0) {\r\n      graph.scrollCellToVisible(cellsSelected[0], true);\r\n    }\r\n    graph.refresh();\r\n  }\r\n  public resetView = (scale: number) => {\r\n    this.graph.view.scaleAndTranslate(scale, 0, 0);\r\n  }\r\n\r\n  /*   * Constructor: mxPrintPreview\r\n    *\r\n    * Constructs a new print preview for the given parameters.\r\n    *\r\n    * Parameters:\r\n    *\r\n    * graph - <mxGraph> to be previewed.\r\n    * scale - Optional scale of the output. Default is 1 / <mxGraph.pageScale>.\r\n    * pageFormat - <mxRectangle> that specifies the page format (in pixels).\r\n    * border - Border in pixels along each side of every page. Note that the\r\n    * actual print function in the browser will add another border for\r\n    * printing.\r\n    * This should match the page format of the printer. Default uses the\r\n    * <mxGraph.pageFormat> of the given graph.\r\n    * x0 - Optional left offset of the output. Default is 0.\r\n    * y0 - Optional top offset of the output. Default is 0.\r\n    * borderColor - Optional color of the page border. Default is no border.\r\n    * Note that a border is sometimes useful to highlight the printed page\r\n    * border in the print preview of the browser.\r\n    * title - Optional string that is used for the window title. Default\r\n    * is 'Printer-friendly version'.\r\n    * pageSelector - Optional boolean that specifies if the page selector\r\n    * should appear in the window with the print preview. Default is true.\r\n    */\r\n  public printPreview = (scale?: number, pageFormat?: any, border?: number, x0?: number, y0?: number, _borderColor?: any, title?: any, pageSelector?: any) => {\r\n    const graph = this.graph;\r\n    const preview = new mxPrintPreview(graph, 1);\r\n    preview.scale = (scale !== undefined) ? scale : 1 / graph.pageScale;\r\n    preview.border = (border !== undefined) ? border : 0;\r\n    preview.pageFormat = mxRectangle.fromRectangle((pageFormat !== undefined) ? pageFormat : graph.pageFormat);\r\n    preview.title = (title !== undefined) ? title : 'Printer-friendly version';\r\n    preview.x0 = (x0 !== undefined) ? x0 : 0;\r\n    preview.y0 = (y0 !== undefined) ? y0 : 0;\r\n    // preview.borderColor = borderColor;\r\n    preview.pageSelector = (pageSelector !== undefined) ? pageSelector : true;\r\n    preview.printOverlays = true;\r\n    preview.targetWindow = \"_blank\";\r\n\r\n    preview.open();\r\n\r\n    // var headerSize = 100;\r\n    // var footerSize = 100;\r\n    // // Removes header and footer from page height\r\n    // graph.pageFormat.height -= headerSize + footerSize;\r\n\r\n    // // Matches actual printer paper size and avoids blank pages\r\n    // var scale = 0.5;\r\n\r\n    // // Applies scale to page\r\n    // var pf = mxRectangle.fromRectangle(graph.pageFormat || mxConstants.PAGE_FORMAT_A4_PORTRAIT);\r\n    // pf.width = Math.round(pf.width * scale * graph.pageScale);\r\n    // pf.height = Math.round(pf.height * scale * graph.pageScale);\r\n\r\n    // // Finds top left corner of top left page\r\n    // var bounds = mxRectangle.fromRectangle(graph.getGraphBounds());\r\n    // bounds.x -= graph.view.translate.x * graph.view.scale;\r\n    // bounds.y -= graph.view.translate.y * graph.view.scale;\r\n\r\n    // var x0 = Math.floor(bounds.x / pf.width) * pf.width;\r\n    // var y0 = Math.floor(bounds.y / pf.height) * pf.height;\r\n\r\n    // var preview = new mxPrintPreview(graph, scale, pf, 0, -x0, -y0);\r\n    // preview.marginTop = headerSize * scale * graph.pageScale;\r\n    // preview.marginBottom = footerSize * scale * graph.pageScale;\r\n    // preview.autoOrigin = false;\r\n\r\n    // var oldRenderPage = preview.renderPage;\r\n    // preview.renderPage = function (w, h, x, y, content, pageNumber) {\r\n    //   var div = oldRenderPage.apply(this, arguments);\r\n\r\n    //   var header = document.createElement('div');\r\n    //   header.style.position = 'absolute';\r\n    //   header.style.boxSizing = 'border-box';\r\n    //   header.style.fontFamily = 'Arial,Helvetica';\r\n    //   header.style.height = (this.marginTop - 10) + 'px';\r\n    //   header.style.textAlign = 'center';\r\n    //   header.style.verticalAlign = 'middle';\r\n    //   header.style.marginTop = 'auto';\r\n    //   header.style.fontSize = '12px';\r\n    //   header.style.width = '100%';\r\n\r\n    //   // Vertical centering for text in header/footer\r\n    //   header.style.lineHeight = (this.marginTop - 10) + 'px';\r\n\r\n    //   var footer: any = header.cloneNode(true);\r\n\r\n    //   mxUtils.write(header, 'Page ' + pageNumber + ' - Header');\r\n    //   header.style.borderBottom = '1px solid gray';\r\n    //   header.style.top = '0px';\r\n\r\n    //   mxUtils.write(footer, 'Page ' + pageNumber + ' - Footer');\r\n    //   footer.style.borderTop = '1px solid gray';\r\n    //   footer.style.bottom = '0px';\r\n\r\n    //   div.firstChild.appendChild(footer);\r\n    //   div.firstChild.appendChild(header);\r\n\r\n    //   return div;\r\n    // };\r\n\r\n    // preview.open();\r\n  }\r\n  public togglePageBreaks = (): void => {\r\n    const graph = this.graph;\r\n    graph.pageBreaksVisible = !graph.pageBreaksVisible;\r\n    graph.sizeDidChange();\r\n  }\r\n  public togglePanZoom = (): void => {\r\n    this.setState({\r\n      ispanzoom: !this.state.ispanzoom\r\n    });\r\n  }\r\n\r\n  public toggleStencil = (): void => {\r\n    this.setState({\r\n      isstencil: !this.state.isstencil\r\n    });\r\n  }\r\n\r\n  public updateStyle = (cell: mxCell, key: string, value: string): void => {\r\n    // return util.updateStyle(this.graph, cell, key, value);\r\n    // updateStyle(graph: any, cell: any, key: any, value: any) {\r\n    const model = this.graph.getModel();\r\n    model.beginUpdate();\r\n    let newStyle = model.getStyle(cell);\r\n    newStyle = mxUtils.setStyle(newStyle, key, value); //eslint-disable-line\r\n    if (newStyle !== null)\r\n      model.setStyle(cell, newStyle);\r\n    model.endUpdate();\r\n    // },\r\n  }\r\n  public groupCells = (groupId: string, labelName: string): any => {\r\n    const cellsGrouped = this.graph.getSelectionCells();\r\n\r\n    const cell: mxCell = this.graph.groupCells(null);\r\n    cell.cellId = groupId + \".\" + cell.id;\r\n    cell.value = labelName;\r\n    cell.isGroupCell = true;\r\n    let geo = cell.geometry;\r\n    geo.width = geo.width + 30;\r\n    geo.height = geo.height + 30;\r\n\r\n\r\n    // cellsGrouped && cellsGrouped.forEach((item: any) => {\r\n    //   item.isGrouped = true;\r\n    // });\r\n\r\n    if (cellsGrouped) {\r\n      cell.shapeKey = \"group\";\r\n      for (let item of cellsGrouped) {\r\n        item.isGrouped = true;\r\n        let igeo = item.geometry;\r\n        igeo.x = igeo.x + 15;\r\n        igeo.y = igeo.y + 15;\r\n      }\r\n    }\r\n\r\n    this.updateStyle(cell, 'strokeColor', 'none');\r\n    this.updateStyle(cell, 'fillColor', 'none');\r\n    this.updateStyle(cell, 'dashed', \"1\");\r\n    this.updateStyle(cell, 'verticalLabelPosition', 'bottom');\r\n    this.updateStyle(cell, 'verticalAlign', 'top');\r\n\r\n    return {\r\n      groupCell: cell,\r\n      cellsGrouped\r\n    };\r\n  }\r\n  private handleUngroupCells = (cells: mxCell[]) => {\r\n    cells && cells.forEach((cell) => {\r\n      if (cell.isGroupCell) {\r\n        cell.isGroupCell = false;\r\n      }\r\n\r\n      cell.children && cell.children.forEach((child: any) => {\r\n        child.isGrouped = false;\r\n      });\r\n    });\r\n\r\n    return cells;\r\n  }\r\n  private handleConnect = (graph: mxGraph, callbackFunc: any) => {\r\n    graph.connectionHandler.addListener(mxEvent.CONNECT, (_sender: any, evt: any) => {\r\n      let edge: mxCell = evt.getProperty('cell');\r\n      let source: mxCell = graph.getModel().getTerminal(edge, true);\r\n      let target: mxCell = graph.getModel().getTerminal(edge, false);\r\n\r\n      // var style = graph.getCellStyle(edge);\r\n      // var sourcePortId = style[mxConstants.STYLE_SOURCE_PORT];\r\n      // var targetPortId = style[mxConstants.STYLE_TARGET_PORT];\r\n\r\n      callbackFunc && callbackFunc(evt, edge, source, target);\r\n\r\n      //  mxLog.show();\r\n      //  mxLog.debug('connect', edge, source.id, target.id, sourcePortId, targetPortId);\r\n    });\r\n  }\r\n\r\n  private handleDisconnect = (graph: mxGraph, callbackFunc: any) => {\r\n    graph.connectionHandler.addListener(mxEvent.DISCONNECT, (_sender: any, evt: any) => {\r\n      let edge: mxCell = evt.getProperty('cell');\r\n      let source: mxCell = graph.getModel().getTerminal(edge, true);\r\n      let target: mxCell = graph.getModel().getTerminal(edge, false);\r\n\r\n      // var style = graph.getCellStyle(edge);\r\n      // var sourcePortId = style[mxConstants.STYLE_SOURCE_PORT];\r\n      // var targetPortId = style[mxConstants.STYLE_TARGET_PORT];\r\n\r\n      callbackFunc && callbackFunc(edge, source, target);\r\n\r\n      //  mxLog.show();\r\n      //  mxLog.debug('connect', edge, source.id, target.id, sourcePortId, targetPortId);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ungroup cells\r\n   */\r\n  public ungroupCells = (cells: mxCell[]): mxCell[] => {\r\n    const tempCells = cells || this.graph.getSelectionCells();\r\n\r\n    const groupCells: any[] = [];\r\n\r\n    tempCells && tempCells.forEach((cell) => {\r\n      if (cell.isGroupCell) {\r\n        groupCells.push(cell);\r\n      }\r\n\r\n      cell.children && cell.children.forEach((child: any) => {\r\n        if (child.isGroupCell) {\r\n          groupCells.push(child);\r\n        }\r\n      });\r\n\r\n      const {\r\n        parent\r\n      } = cell;\r\n\r\n      if (parent && parent.isGroupCell) {\r\n        groupCells.push(parent);\r\n      }\r\n    });\r\n\r\n    this.handleUngroupCells(groupCells);\r\n\r\n    return this.graph.ungroupCells(groupCells);\r\n  }\r\n  // get all cells selected\r\n  public getSelectionCells = (): mxCell[] => {\r\n    return this.graph.getSelectionCells();\r\n  }\r\n\r\n  // /**\r\n  //  * render graph from xml\r\n  //  * @param {string} xml xml\r\n  //  */\r\n  // private renderGraphFromXml = (xml: any): void => {\r\n  //   return this.renderGraphFromXml1(graph, xml);\r\n  // }\r\n  /**\r\n   * get xml of the graph\r\n   */\r\n  public getGraphXml = (): string => {\r\n    const xml = this.getGraphXmlNode();\r\n    const xmlStr = new XMLSerializer().serializeToString(xml); // eslint-disable-line\r\n    return xmlStr;\r\n  }\r\n  /**\r\n   * create vertex\r\n   * @param {shapeLabel, x, y, width, height, shapeStyle} param0 shapeLabel, x, y, width, height, shapeStyle\r\n   */\r\n  public createVertex = (value: any, x: number, y: number, width: number, height: number, shapeStyle?: string): mxCell => {\r\n    let parent = this.graph.getDefaultParent();\r\n    if (this.droptarget) {\r\n      parent = this.droptarget;\r\n    }\r\n    const cell = this.graph.insertVertex(parent, \"\", value, x, y, width, height, shapeStyle);\r\n    return cell;\r\n  }\r\n\r\n  /**\r\n   * insert edge\r\n   * @param {*} v1 cell 1\r\n   * @param {*} v2 cell 2\r\n   */\r\n  public insertEdge = (v1: mxCell, v2: mxCell, style?: string): mxCell => {\r\n    let parent = this.graph.getDefaultParent();\r\n    if (this.droptarget) {\r\n      parent = this.droptarget;\r\n    }\r\n    let e = this.graph.insertEdge(parent, \"\", '', v1, v2, style);\r\n    this.graph.orderCells(true, [e]);\r\n    return e;\r\n  }\r\n\r\n  /**\r\n   * get cell by id\r\n   * @param {*} id id\r\n   */\r\n  public getCellById = (id: string): mxCell | undefined => {\r\n    for (let c of this.graph.model.cells) {\r\n      if (c.id === id) {\r\n        return c as mxCell;\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * get all cells\r\n   */\r\n  public getAllCells = (): mxCell[] => {\r\n    return this.graph.model.cells;\r\n  }\r\n\r\n  public getChildCells = (parent: mxCell, vertices?: boolean, edges?: boolean): mxCell[] => {\r\n    return this.graph.getChildCells(parent, vertices, edges);\r\n  }\r\n  public removeCells = (cells: mxCell[], includeEdges: boolean): void => {\r\n    this.graph.removeCells(cells, includeEdges);\r\n  }\r\n  public beginUpdate = () => {\r\n    const model = this.graph.getModel();\r\n    model.beginUpdate();\r\n  }\r\n  public endUpdate = () => {\r\n    const model = this.graph.getModel();\r\n    model.endUpdate();\r\n  }\r\n  public removeEventListeners = (): void => {\r\n    for (let li of this.keydownhandler) {\r\n      document.body.removeEventListener('keydown', li);\r\n    }\r\n\r\n    // document.body.removeEventListener('keydown', this.undoListenerFunc2);\r\n    // document.body.removeEventListener('keydown', this.copyListenerFunc2);\r\n    // document.body.removeEventListener('keydown', this.deleteListenerFunc2);\r\n  }\r\n  private initZoomConfig = (graph: mxGraph): void => {\r\n    graph.keepSelectionVisibleOnZoom = true;\r\n    graph.centerZoom = true;\r\n  }\r\n\r\n\r\n  /**\r\n   * rename a cell label\r\n   * @param {*} newName new name\r\n   * @param {*} cell a cell\r\n   */\r\n  public renameCell = (newName: string, cell: mxCell): void => {\r\n    cell.value = newName;\r\n    this.graph.refresh(); // 重新渲染graph\r\n  }\r\n  public toggleCollapse = (cell: mxCell) => {\r\n    const coll = cell.collapsed;\r\n    this.graph.foldCells(!coll, false, [cell]);\r\n    // this.refresh();\r\n  }\r\n  /**\r\n   * refresh the graph\r\n   */\r\n  public refresh = (): void => {\r\n    this.graph.refresh();\r\n  }\r\n\r\n  /**\r\n   * clear selection in the graph\r\n   */\r\n  public clearSelection = (): void => {\r\n    this.graph.clearSelection();\r\n  }\r\n\r\n  public startPanning = () => {\r\n    this.graph.panningHandler.useLeftButtonForPanning = true;\r\n    this.graph.panningHandler.ignoreCell = true;\r\n    this.graph.container.style.cursor = 'move';\r\n  }\r\n\r\n  public stopPanning = (): void => {\r\n    this.graph.panningHandler.useLeftButtonForPanning = false;\r\n    this.graph.panningHandler.ignoreCell = false;\r\n    this.graph.container.style.cursor = 'auto';\r\n  }\r\n\r\n  public connectionPoints = (): void => {\r\n    this.graph.container.style.cursor = 'crosshair';\r\n  }\r\n\r\n  public elbowCell = (cell: mxCell) => {\r\n    let s = cell.style;\r\n    if (s) {\r\n      if (s.indexOf(\"elbow=vertical\") > -1) {\r\n        this.updateStyle(cell, \"elbow\", \"horizontal\");\r\n      } else {\r\n        this.updateStyle(cell, \"elbow\", \"vertical\");\r\n      }\r\n    }\r\n  }\r\n  public clearUndo = (): void => {\r\n    this.undoman.clear();\r\n  }\r\n  public isUndo = (): boolean => {\r\n    return this.undoman.canUndo();\r\n  }\r\n  public isRedo = (): boolean => {\r\n    return this.undoman.canRedo();\r\n  }\r\n  public Undo = (): void => {\r\n    return this.undoman.undo();\r\n  }\r\n  public Redo = (): void => {\r\n    return this.undoman.redo();\r\n  }\r\n\r\n\r\n  public resetEditor = (xml: string, diagcaption: string, diagid: number, horizontal: boolean, bsetDirection: boolean) => {\r\n    if (xml !== null)\r\n      if (xml.length > 0) {\r\n        //  xml = this.patchEPC(xml);\r\n        xml = xml.replace(/\\s\\s+/g, '');\r\n        // editor.renderGraphFromXml(xml);\r\n        //  let x: string = '<mxGraphModel><root><Diagram href=\"http://www.jgraph.com/\" id=\"0\" label=\"' + ndiag.ObjectCaption + '\" diagid=\"' + ndiag.ID + '\"><mxCell id=\"2\" value=\"Hello World\" vertex=\"1\"><mxGeometry x=\"20\" y=\"20\" width=\"80\" height=\"30\" as=\"geometry\"/></mxCell></Diagram><Layer id=\"1\" label=\"Default Layer\"><mxCell parent=\"0\"></mxCell></Layer></root></mxGraphModel>';\r\n        // let x = '<mxGraphModel><mxCell id=\"0\"><mxCell id=\"1\" parent=\"0\"></mxCell><mxCell id=\"1\" parent=\"0\"></mxCell><Event href=\"\" id=\"2\" label=\"Journal entry required.2316\"><mxCell vertex=\"1\" parent=\"1\" shapeid=\"Sheet.22\" objectid=\"2316\" style=\"shape=image;html=1;whiteSpace=wrap;\"><mxGeometry x=\"414\" y=\"-1694\" width=\"110\" height=\"75\" as=\"geometry\"/></mxCell></Event></mxGraphModel>';\r\n        //  editor.renderGraphFromXml(x);\r\n        var doc2 = mxUtils.parseXml(xml);\r\n        // var x = doc2.documentElement.firstChild.outerHTML;\r\n        if (bsetDirection) {\r\n          doc2.documentElement.setAttribute('horizontal', horizontal);\r\n        }\r\n\r\n        let x = doc2.documentElement.outerHTML;\r\n        this.renderGraphFromXml(x);\r\n      } else {\r\n        // console.log(this.graph.getModel());\r\n        // let x: string = this.empty;\r\n        // x = x.replace('page=\"0\"', 'page=\"0\" diagid=\"' + ndiag.ID + '\"');\r\n        // let x: string = '<mxGraphModel><root><Diagram href=\"http://www.jgraph.com/\" id=\"0\" label=\"' + ndiag.ObjectCaption + '\" diagid=\"' + ndiag.ID + '\"><mxCell id=\"2\" value=\"Hello World\" vertex=\"1\"><mxGeometry x=\"20\" y=\"20\" width=\"80\" height=\"30\" as=\"geometry\"/></mxCell></Diagram><Layer id=\"1\" label=\"Default Layer\"><mxCell parent=\"0\"></mxCell></Layer></root></mxGraphModel>';\r\n        let x: string = '<mxGraphModel><root><Diagram href=\"http://www.jgraph.com/\" id=\"0\" label=\"' + diagcaption + '\" diagid=\"' + diagid + '\"></Diagram><Layer id=\"1\" label=\"Default Layer\"><mxCell parent=\"0\"></mxCell></Layer></root></mxGraphModel>';\r\n        //let x: string = \"<root><mxCell id='0'></mxCell><mxCell id='1' parent='0'/></mxCell></root>\";\r\n        this.renderGraphFromXml(x);\r\n      }\r\n    this.graph.orderCells(true, this.graph.getChildEdges(this.graph.getDefaultParent()));\r\n    // Changes the zoom on mouseWheel events\r\n    mxEvent.addMouseWheelListener((evt: any, up: any) => {\r\n      if (!mxEvent.isConsumed(evt) && mxEvent.isAltDown(evt)) {\r\n        if (up) {\r\n          this.graph.zoomIn();\r\n          //  editor.execute('zoomIn');\r\n        } else {\r\n          this.graph.zoomOut();\r\n          //  editor.execute('zoomOut');\r\n        }\r\n\r\n        mxEvent.consume(evt);\r\n      }\r\n    });\r\n\r\n    this.props.callback.setEditor(this);\r\n    this.clearUndo();\r\n  }\r\n  public componentWillUnmount() {\r\n\r\n    // remove event listeners when component will unmount\r\n    // if (this.state.editor !== null) {\r\n    //   this.state.editor.removeEventListeners();\r\n    // }\r\n    this.removeEventListeners();\r\n  }\r\n\r\n  /**\r\n   * double click event callback\r\n   */\r\n  public doubleClickFunc = (_cell: any) => {\r\n    // (this.props.callback as any).doubleClick(cell);\r\n    // console.log('double click', cell);\r\n  }\r\n\r\n  private cellCreatedFunc = (currentCell: any) => {\r\n    if (this.props.callback) {\r\n      this.props.callback.shapeAdded(currentCell);\r\n    }\r\n\r\n  }\r\n  private deleteFunc = (cells: any) => {\r\n    this.props.callback.shapeDeleted(cells);\r\n    // console.log('cells deleted: ', cells);\r\n  }\r\n  private isValid = (src: any, dst: any): boolean => {\r\n    return this.props.callback.isValid(src, dst);\r\n    // console.log('cells deleted: ', cells);\r\n  }\r\n\r\n  private valueChangeFunc = (cell: any, newValue: any) => {\r\n    this.props.callback.shapeExitedTextEdit(cell, newValue);\r\n    // console.log(`new value: ${newValue}`);\r\n  }\r\n\r\n  private autoSaveFunc = (mxgraphxml: string) => {\r\n    // (window as any).autosaveXml = xml;\r\n    // console.log(\"autoSaveFunc\");\r\n\r\n    // const oParser = new DOMParser(); // eslint-disable-line\r\n    // const oDOM = oParser.parseFromString(xml, 'application/xml');\r\n    // (window as any).autoSaveXmlDom = oDOM;\r\n\r\n    this.props.callback.beginTransaction(mxgraphxml, \"mxGraph\");\r\n    this.props.callback.endTransaction(mxgraphxml, \"mxGraph\");\r\n  }\r\n\r\n  // private selectedCell: mxCell;\r\n  private clickFunc = (_cell: mxCell, _evt: mxEventObject) => {\r\n    // this.selectedCell = cell;\r\n    // this.clearSelection();\r\n    // this.props.callback.shapeSelectionChanged(cell, evt);\r\n    // console.log('click', evt);\r\n  }\r\n  private selectFunc = (evtobj: mxEventObject) => {\r\n    // this.clearSelection();\r\n    let c: mxCell | undefined;\r\n    let a: mxCell[] = evtobj.properties[\"removed\"];\r\n    if (a) {\r\n      if (a.length > 0) {\r\n        c = a[0];\r\n      }\r\n    }\r\n    this.props.callback.shapeSelectionChanged(c, evtobj);\r\n    // }\r\n    // console.log('click', evt);\r\n  }\r\n  private moveCellsFunc = (cells: mxCell[], clone: boolean) => {\r\n    this.props.callback.shapeMoveCells(cells, clone);\r\n  }\r\n  // private addVertexFunc = (cell: any, evt: any) => {\r\n  //   this.props.callback.addVertex(cell, evt);\r\n  // }\r\n\r\n  private undoFunc = (histories: any) => {\r\n    console.log('undo', histories);\r\n  }\r\n\r\n  private copyFunc = (cells: mxCell[]) => {\r\n    this.props.callback.shapeCopyCells(cells);\r\n    // console.log('copy', cells);\r\n  }\r\n\r\n  private keyFunc = (evtobj: KeyboardEvent): void => {\r\n    const callback = this.props.callback;\r\n    if (evtobj.ctrlKey) {\r\n      if (callback && callback.hasKeyHandler(evtobj)) {\r\n        mxEvent.consume(evtobj);\r\n        callback.keyPressed(evtobj);\r\n        return;\r\n      }\r\n    }\r\n\r\n    const graph = this.graph;\r\n    switch (evtobj.code) {\r\n      case \"F1\": {\r\n        mxEvent.consume(evtobj);\r\n        this.props.callback.showHelp();\r\n        break;\r\n      }\r\n      case \"F2\": {\r\n        if (callback && callback.hasKeyHandler(evtobj)) {\r\n          mxEvent.consume(evtobj);\r\n          callback.keyPressed(evtobj);\r\n        }\r\n        break;\r\n      }\r\n      case \"MetaLeft\": {\r\n        mxEvent.consume(evtobj);\r\n        this.props.callback.showHelp();\r\n        break;\r\n      }\r\n      // case \"Digit1\": {\r\n      //   if (evtobj.ctrlKey) {\r\n      //     mxEvent.consume(evtobj);\r\n      //     this.stopPanning();\r\n      //   }\r\n      //   break;\r\n      // }\r\n      // case \"Digit2\": {\r\n      //   if (evtobj.ctrlKey) {\r\n      //     mxEvent.consume(evtobj);\r\n      //     this.startPanning();\r\n      //   }\r\n      //   break;\r\n      // }\r\n      // case \"KeyI\": {\r\n      //   if (evtobj.ctrlKey) {\r\n      //     mxEvent.consume(evtobj);\r\n      //     const cells = graph.getSelectionCells();\r\n      //     if (cells.length > 0) {\r\n      //       callback.selectCell(cells[0]);\r\n      //     }\r\n      //   }\r\n      //   break;\r\n      // }\r\n      // case \"KeyE\": {\r\n      //   if (evtobj.ctrlKey) {\r\n      //     mxEvent.consume(evtobj);\r\n      //     const cells = graph.getSelectionCells();\r\n      //     if (cells.length > 0) {\r\n      //       callback.editCell(cells[0]);\r\n      //     }\r\n      //   }\r\n      //   break;\r\n      // }\r\n      // case \"KeyC\": {\r\n      //   if (evtobj.ctrlKey) {\r\n      //     mxEvent.consume(evtobj);\r\n      //     mxClipboard.copy(graph); //eslint-disable-line\r\n      //   }\r\n      //   break;\r\n      // }\r\n      // case \"KeyF\": {\r\n      //   if (evtobj.ctrlKey) {\r\n      //     mxEvent.consume(evtobj);\r\n      //     const cells = graph.getSelectionCells();\r\n      //     if (cells.length > 0) {\r\n      //       callback.showShapeStyle(cells);\r\n      //     }\r\n      //   }\r\n      //   break;\r\n      // }\r\n      // case \"KeyR\": {\r\n      //   if (evtobj.ctrlKey) {\r\n      //     mxEvent.consume(evtobj);\r\n      //     const cells = graph.getSelectionCells();\r\n      //     if (cells.length > 0) {\r\n      //       callback.composeCell(cells[0]);\r\n      //     }\r\n      //   }\r\n      //   break;\r\n      // }\r\n      case \"KeyA\": {\r\n        if (evtobj.ctrlKey) {\r\n          mxEvent.consume(evtobj);\r\n          // graph.selectCells(true,false);\r\n          graph.selectAll(graph.getDefaultParent());\r\n        }\r\n        break;\r\n      }\r\n      case \"ArrowLeft\": {\r\n        const cellsSelected = graph.getSelectionCells();\r\n        if (evtobj.shiftKey) {\r\n          graph.moveCells(cellsSelected, 0 - graph.gridSize * 0.5, 0, false);\r\n        } else {\r\n          graph.moveCells(cellsSelected, 0 - graph.gridSize, 0, false);\r\n        }\r\n        break;\r\n      }\r\n      case \"ArrowRight\": {\r\n        const cellsSelected = graph.getSelectionCells();\r\n        if (evtobj.shiftKey) {\r\n          graph.moveCells(cellsSelected, graph.gridSize * 0.5, 0, false);\r\n        } else {\r\n          graph.moveCells(cellsSelected, graph.gridSize, 0, false);\r\n        } break;\r\n      }\r\n      case \"ArrowUp\": {\r\n        const cellsSelected = graph.getSelectionCells();\r\n        if (evtobj.shiftKey) {\r\n          graph.moveCells(cellsSelected, 0, 0 - graph.gridSize, false);\r\n        } else {\r\n          graph.moveCells(cellsSelected, 0, 0 - graph.gridSize * 0.5, false);\r\n        }\r\n        break;\r\n      }\r\n      case \"ArrowDown\": {\r\n        const cellsSelected = graph.getSelectionCells();\r\n        if (evtobj.shiftKey) {\r\n          graph.moveCells(cellsSelected, 0, graph.gridSize * 0.5, false);\r\n        } else {\r\n          graph.moveCells(cellsSelected, 0, graph.gridSize, false);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  // public updateDiagramData = (data: any) => {\r\n  //   console.log(`update diagram: ${data}`);\r\n\r\n  //   alert('diagram save success');\r\n  // }\r\n  private connectFunc = (event: mxEventObject, edge: mxCell, source: mxCell, target: mxCell) => {\r\n    let mst = this.graph[\"connectionMaster\"];\r\n    edge[\"type\"] = mst;\r\n    this.props.callback.shapeConnectionAdded(event, edge, source, target);\r\n    //  console.log('connect', edge);\r\n  }\r\n  private disconnectFunc = (edge: mxCell, _source: mxCell, _target: mxCell) => {\r\n    this.props.callback.shapeConnectionsDeleted(edge);\r\n    //  console.log('disconnect', edge);\r\n  }\r\n  private menuFunc = (graph: mxGraph, menu: mxPopupMenuHandler, cell: mxCell, evt: PointerEvent) => {\r\n    this.props.callback.shapeCreatePopupMenu(graph, menu, cell, evt, this);\r\n  }\r\n  // private animate: any = null;\r\n\r\n  public gotoPage = (diagid: number) => {\r\n    this.props.callback.gotoPage(diagid);\r\n  }\r\n\r\n\r\n\r\n  public doLayout = (node: any, layoutname: any, parent: any, animate: boolean, horizontal: boolean, invert: boolean) => {\r\n    let graph = this.graph;\r\n    // if (!parent) parent = graph.getDefaultParent();\r\n    parent = graph.getDefaultParent();\r\n\r\n    let layout = new mxGraphLayout(graph);\r\n    switch (layoutname) {\r\n      case \"mxCircleLayout\": { layout = new mxCircleLayout(graph); break; }\r\n      // case \"mxParallelEdgeLayout\": { layout = new mxParallelEdgeLayout(graph); break; }\r\n      case \"mxFastOrganicLayout\": { layout = new mxFastOrganicLayout(graph); break; }\r\n      case \"mxCompactTreeLayout\": {\r\n        layout = new mxCompactTreeLayout(graph, horizontal, invert);\r\n        layout.edgeRouting = false;\r\n        if (invert) layout.resetEdges = true;\r\n        break;\r\n      }\r\n      // case \"mxGraphLayout\": { layout = new mxGraphLayout(graph); break; }\r\n      case \"mxRadialTreeLayout\": {\r\n        layout = new mxRadialTreeLayout(graph);\r\n        break;\r\n      }\r\n      // case \"mxEdgeLabelLayout\": { layout = new mxEdgeLabelLayout(graph); break; }\r\n      case \"mxStackLayout\": { layout = new mxStackLayout(graph, horizontal, 10, 20); break; }\r\n      case \"mxPartitionLayout\": { layout = new mxPartitionLayout(graph, horizontal, 10, 20); break; }\r\n      //   case \"mxHierarchicalLayout\": { layout = new mxHierarchicalLayout(graph, horizontal); break; }\r\n      case \"mxSwimlaneLayout\": { layout = new mxSwimlaneLayout(graph, horizontal); break; }\r\n    }\r\n\r\n    //- mxParallelEdgeLayout,\r\n    //- mxFastOrganicLayout,\r\n    //- mxCircleLayout,\r\n    //- mxCompactTreeLayout,\r\n    // mxCompositeLayout,\r\n    // - mxEdgeLabelLayout,\r\n    // - mxGraphLayout,\r\n    // - mxPartitionLayout,\r\n    // - mxRadialTreeLayout,\r\n    // - mxStackLayout,\r\n    // mxHierarchicalLayout,\r\n    // mxSwimlaneLayout,\r\n    if (layout) {\r\n      graph.getModel().beginUpdate();\r\n      try {\r\n        // layout.forceConstant = 80;\r\n        // console.debug(parent);\r\n        if (node && layout.layout) {\r\n          layout.layout(parent);\r\n        } else {\r\n          layout.execute(parent);\r\n        }\r\n      }\r\n      catch (e) {\r\n        throw e;\r\n      }\r\n      finally {\r\n        if (animate) {\r\n          var morph = new mxMorphing(graph);\r\n          morph.addListener(mxEvent.DONE, () => {\r\n            graph.getModel().endUpdate();\r\n          });\r\n\r\n          morph.startAnimation();\r\n        }\r\n        else {\r\n          graph.getModel().endUpdate();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // public enableLayout() {\r\n  //   // Creates a layout algorithm to be used\r\n  //   // with the graph\r\n  //   //var layout = new mxFastOrganicLayout(this.graph);\r\n\r\n  //   // Moves stuff wider apart than usual\r\n  //   //layout.forceConstant = 80;\r\n\r\n  //   var animate = document.getElementById('animate');\r\n  //   if (animate) return;\r\n\r\n  //   var checkbox = document.createElement('input');\r\n  //   checkbox.setAttribute('type', 'checkbox');\r\n  //   checkbox.setAttribute('id', 'animate');\r\n  //   checkbox.setAttribute('checked', 'checked');\r\n  //   document.body.insertBefore(checkbox, null);\r\n\r\n\r\n  //   // Reference to the transition checkbox\r\n  //   //this.animate = checkbox;\r\n\r\n  //   // var b = document.createElement('input');\r\n  //   // b.setAttribute('type', 'button');\r\n  //   // b.value = 'Circle Layout';\r\n  //   // b.setAttribute(\"onclick\", this.circleLayout);\r\n  //   // document.body.insertBefore(b, null);\r\n\r\n  //   // Adds a button to execute the layout\r\n\r\n  //   document.body.insertBefore(mxUtils.button('Organic Layout', () => {\r\n  //     this.doLayout(null, \"mxFastOrganicLayout\", null, true, true, false);\r\n  //   }), null);\r\n  //   document.body.insertBefore(mxUtils.button('Compact Tree Layout', () => {\r\n  //     this.doLayout(null, \"mxCompactTreeLayout\", null, true, true, false);\r\n  //   }), null);\r\n  //   document.body.insertBefore(mxUtils.button('Hierarchical Layout', () => {\r\n  //     this.doLayout(null, \"mxHierarchicalLayout\", null, false, true, false);\r\n  //   }), null);\r\n\r\n  //   // mxParallelEdgeLayout,\r\n  //   // mxFastOrganicLayout,\r\n  //   // mxCircleLayout,\r\n  //   // mxCompactTreeLayout,\r\n  //   // mxCompositeLayout,\r\n  //   // mxEdgeLabelLayout,\r\n  //   // mxGraphLayout,\r\n  //   // mxPartitionLayout,\r\n  //   // mxRadialTreeLayout,\r\n  //   // mxStackLayout,\r\n  //   // mxHierarchicalLayout,\r\n  //   // mxSwimlaneLayout,\r\n\r\n  // }\r\n  public isHorizontal(): boolean {\r\n    return (this.graph[\"horizontal\"] === 'true');\r\n  }\r\n  public isPool = (cell: mxCell): boolean => {\r\n    var model2 = this.graph.getModel();\r\n    var parent1 = model2.getParent(cell);\r\n\r\n    return parent1 !== null && model2.getParent(parent1) === model2.getRoot();\r\n  }\r\n\r\n\r\n  public enableSwimlanes(ishorizontal: boolean, _enforce: boolean) {\r\n    let graph = this.graph;\r\n    let model = graph.getModel();\r\n\r\n    // const cdn = \"https://semtalkportal45.azurewebsites.net\";\r\n    // graph.collapsedImage = cdn + 'collapse.gif';\r\n    // graph.expandedImage = cdn + 'expand.gif';\r\n    graph.foldingEnabled = true;\r\n    graph.swimlaneNesting = false;\r\n\r\n    //style[mxConstants.STYLE_HORIZONTAL] = 0;\r\n\r\n    let vstyle = graph.getStylesheet().getCellStyle(mxConstants.SHAPE_SWIMLANE);\r\n    // let vstyle = mxUtils.clone(graph.getStylesheet().getDefaultVertexStyle());\r\n    // aka new graph\r\n    if (vstyle[mxConstants.STYLE_HORIZONTAL] === undefined) {\r\n      let v = ishorizontal;\r\n      if (graph[\"horizontal\"]) {\r\n        v = (graph[\"horizontal\"] === 'true');\r\n      }\r\n      vstyle[mxConstants.STYLE_HORIZONTAL] = v;\r\n    } else {\r\n      // return;\r\n    }\r\n\r\n    // vstyle[mxConstants.STYLE_HORIZONTAL] = ishorizontal;\r\n    let isvertical = !vstyle[mxConstants.STYLE_HORIZONTAL];\r\n    // let isvertical = v;\r\n    // vstyle[mxConstants.STYLE_HORIZONTAL] = false;\r\n\r\n    vstyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_SWIMLANE;\r\n    // vstyle[mxConstants.STYLE_VERTICAL_ALIGN] = 'middle';\r\n    // vstyle[mxConstants.STYLE_LABEL_BACKGROUNDCOLOR] = 'lightblue';\r\n    // vstyle[mxConstants.STYLE_FONTSIZE] = 11;\r\n    // vstyle[mxConstants.STYLE_STARTSIZE] = 22;\r\n    // if (ishorizontal) {\r\n    //   //Horizontal\r\n    //   vstyle[mxConstants.STYLE_HORIZONTAL] = false;\r\n    // }\r\n    // else {\r\n    //   //Vertical\r\n    //   vstyle[mxConstants.STYLE_HORIZONTAL] = true;\r\n    // }\r\n\r\n    vstyle[mxConstants.STYLE_VERTICAL_ALIGN] = 'middle';\r\n    // vstyle[mxConstants.STYLE_LABEL_BACKGROUNDCOLOR] = 'white';\r\n    vstyle[mxConstants.STYLE_FONTSIZE] = 11;\r\n    vstyle[mxConstants.STYLE_STARTSIZE] = 22;\r\n    // vstyle[mxConstants.STYLE_HORIZONTAL] = false;\r\n    vstyle[mxConstants.STYLE_FONTCOLOR] = 'black';\r\n    vstyle[mxConstants.STYLE_STROKECOLOR] = 'black';\r\n    // delete style[mxConstants.STYLE_FILLCOLOR];\r\n\r\n\r\n    // vstyle[mxConstants.STYLE_FONTCOLOR] = 'black';\r\n    // vstyle[mxConstants.STYLE_STROKECOLOR] = 'black';\r\n    //delete style[mxConstants.STYLE_FILLCOLOR];\r\n    graph.getStylesheet().putCellStyle(mxConstants.SHAPE_SWIMLANE, vstyle);\r\n\r\n    if (isvertical) {\r\n      graph.alternateEdgeStyle = 'elbow=horizontal';\r\n    } else {\r\n      graph.alternateEdgeStyle = 'elbow=vertical';\r\n    }\r\n    // Adds automatic layout and various switches if the\r\n    // graph is enabled\r\n    if (graph.isEnabled()) {\r\n      // Allows new connections but no dangling edges\r\n      graph.setConnectable(true);\r\n      graph.setAllowDanglingEdges(false);\r\n\r\n      graph.setDropEnabled(true);\r\n      graph.setSplitEnabled(true);\r\n\r\n      // Returns true for valid drop operations\r\n\r\n      // Dieses wird offenbar gar nicht ausgeführt..\r\n      graph.isValidDropTarget = (target: any, _cells: any, _evt: any) => {\r\n        this.droptarget = null;\r\n        if (target.container) {\r\n          this.droptarget = target;\r\n          return true;\r\n        }\r\n        if (target.shapeKey && (target.shapeKey === \"swimlane\" || target.shapeKey === \"group\")) {\r\n          this.droptarget = target;\r\n          return true;\r\n        }\r\n        // console.debug(target);\r\n        // if (this.isSplitEnabled() && this.isSplitTarget(target, cells, evt)) {\r\n        //   return true;\r\n        // }\r\n\r\n        //       var model1 = this.getModel();\r\n        //       var lane = false;\r\n        //       var pool = false;\r\n        //       var cell = false;\r\n\r\n        //       // Checks if any lanes or pools are selected\r\n        //       for (var i = 0; i < cells.length; i++) {\r\n        //         var tmp = model1.getParent(cells[i]);\r\n        //         lane = lane || this.isPool(tmp);\r\n        //         pool = pool || this.isPool(cells[i]);\r\n\r\n        //         cell = cell || !(lane || pool);\r\n        //       }\r\n        return false;\r\n        //       return !pool && cell !== lane && ((lane && this.isPool(target)) ||\r\n        //         (cell && this.isPool(model1.getParent(target))));\r\n      };\r\n\r\n      // Adds new method for identifying a pool\r\n      // Changes swimlane orientation while collapsed\r\n      graph.model.getStyle = function (cell: any) {\r\n        var style1 = mxGraphModel.prototype.getStyle.apply(this, arguments);\r\n\r\n        if (graph.isCellCollapsed(cell)) {\r\n          if (style1 !== null) {\r\n            style1 += ';';\r\n          }\r\n          else {\r\n            style1 = '';\r\n          }\r\n          let vs = graph.getStylesheet().getCellStyle(mxConstants.SHAPE_SWIMLANE);\r\n          let isv = vs[mxConstants.STYLE_HORIZONTAL];\r\n          if (!isv) {\r\n            style1 += 'horizontal=1;align=left;spacingLeft=14;';\r\n          } else {\r\n            style1 += 'horizontal=0;align=top;spacingLeft=14;';\r\n          }\r\n        }\r\n\r\n        return style1;\r\n      };\r\n\r\n      // Keeps widths on collapse/expand\r\n      let foldingHandler = (_sender: any, evt: any) => {\r\n        let cells = evt.getProperty('cells');\r\n        let vs = graph.getStylesheet().getCellStyle(mxConstants.SHAPE_SWIMLANE);\r\n        let isv = vs[mxConstants.STYLE_HORIZONTAL];\r\n\r\n        for (let i = 0; i < cells.length; i++) {\r\n          let cell = cells[i];\r\n          if (cell.shapeKey && cell.shapeKey === \"swimlane\") {\r\n            let geo = graph.model.getGeometry(cell);\r\n            if (geo.alternateBounds !== null) {\r\n              if (!isv) {\r\n                geo.width = geo.alternateBounds.width;\r\n              } else {\r\n                geo.height = geo.alternateBounds.height;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n      graph.addListener(mxEvent.FOLD_CELLS, foldingHandler);\r\n    }\r\n\r\n    // Applies size changes to siblings and parents\r\n    this.swimlanemanager = new mxSwimlaneManager(graph, isvertical, true, true);\r\n    // this.swimlanemanager = new mxSwimlaneManager(graph);\r\n\r\n    // Creates a stack depending on the orientation of the swimlane\r\n    this.stacklayout = new mxStackLayout(graph, !isvertical);\r\n\r\n    // Makes sure all children fit into the parent swimlane\r\n    this.stacklayout.resizeParent = true;\r\n\r\n    // Applies the size to children if parent size changes\r\n    this.stacklayout.fill = true;\r\n\r\n    // Only update the size of swimlanes\r\n    this.stacklayout.isVertexIgnored = (vertex: any) => {\r\n      return !graph.isSwimlane(vertex);\r\n    };\r\n\r\n    // Keeps the lanes and pools stacked\r\n    var layoutMgr = new mxLayoutManager(graph);\r\n\r\n    layoutMgr.getLayout = (cell: any) => {\r\n      if (!model.isEdge(cell) && graph.getModel().getChildCount(cell) > 0 &&\r\n        (model.getParent(cell) === model.getRoot() || this.isPool(cell))) {\r\n        this.stacklayout.fill = this.isPool(cell);\r\n        return this.stacklayout;\r\n      }\r\n      return null;\r\n    };\r\n\r\n    this.refresh();\r\n  }\r\n  public static setStyleAttribute = (s: string, aname: string, val: string): string => {\r\n    let laname = aname.toLowerCase();\r\n    let s2 = \"\";\r\n    let sl = s.split(\";\");\r\n    let fnd: boolean = false;\r\n    for (let kv of sl) {\r\n      if (kv.length > 0) {\r\n        if (kv.indexOf(\"=\") < 0) {\r\n          s2 = s2 + kv + \";\";\r\n        } else {\r\n          let p = kv.split(\"=\");\r\n          let k = p[0];\r\n          if (k.toLowerCase() === laname) {\r\n            if (val.length > 0) {\r\n              s2 = s2 + k + \"=\" + val + \";\";\r\n            }\r\n            fnd = true;\r\n          } else {\r\n            s2 = s2 + kv + \";\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (!fnd) {\r\n      s2 = s2 + aname + \"=\" + val + \";\";\r\n    }\r\n    return s2;\r\n  }\r\n  public static getStyleAttribute = (s: string, aname: string): string => {\r\n    let laname = aname.toLowerCase();\r\n    let sl = s.split(\";\");\r\n    for (let kv of sl) {\r\n      if (kv.length > 0) {\r\n        if (kv.indexOf(\"=\") < 0) {\r\n        } else {\r\n          let p = kv.split(\"=\");\r\n          let k = p[0];\r\n          if (k.toLowerCase() === laname) {\r\n            return p[1];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  public static copyColorStyle = (src: mxCell, trg: mxCell) => {\r\n    let s0: string = src.style;\r\n    if (s0.indexOf(\";custom=1\") > 0) {\r\n\r\n      let s: string = trg.style;\r\n      let fillcolor = TSEditor.getStyleAttribute(s0, \"fillColor\");\r\n      let fontcolor = TSEditor.getStyleAttribute(s0, \"fontColor\");\r\n      let strokecolor = TSEditor.getStyleAttribute(s0, \"strokeColor\");\r\n      let gradientcolor = TSEditor.getStyleAttribute(s0, \"gradientColor\");\r\n      // let fcolor = color;\r\n      // if (color !== \"white\") {\r\n      //   fcolor = color.replace(\"light\", \"\");\r\n      // } else {\r\n      //   fcolor = \"\";\r\n      // }\r\n      s = TSEditor.setStyleAttribute(s, \"fillColor\", fillcolor);\r\n      s = TSEditor.setStyleAttribute(s, \"gradientColor\", gradientcolor);\r\n      s = TSEditor.setStyleAttribute(s, \"fontColor\", fontcolor);\r\n      s = TSEditor.setStyleAttribute(s, \"strokeColor\", strokecolor);\r\n      s = s + \"custom=1;\";\r\n      trg.style = s;\r\n    }\r\n  }\r\n\r\n  public toggleDirection(shape: mxCell) {\r\n\r\n    this.props.callback.beginTransaction(\"\", \"toggleDirection\");\r\n\r\n    let graph = this.graph;\r\n    // let model = graph.getModel();\r\n\r\n    var vstyle = graph.getStylesheet().getCellStyle(mxConstants.SHAPE_SWIMLANE);\r\n    let ishorizontal = vstyle[mxConstants.STYLE_HORIZONTAL];\r\n    ishorizontal = !ishorizontal;\r\n    vstyle[mxConstants.STYLE_HORIZONTAL] = ishorizontal;\r\n    // let isvertical = !ishorizontal;\r\n\r\n    if (shape) {\r\n      let w = shape.geometry.width;\r\n      shape.geometry.width = shape.geometry.height;\r\n      shape.geometry.height = w;\r\n      shape.geometry.alternateBounds = null;\r\n    }\r\n    // if (isvertical) {\r\n    //   vstyle[mxConstants.STYLE_FILLCOLOR] = 'yellow';\r\n    //   vstyle[mxConstants.STYLE_LABEL_BACKGROUNDCOLOR] = 'yellow';\r\n    // } else {\r\n    //   vstyle[mxConstants.STYLE_FILLCOLOR] = 'green';\r\n    //   vstyle[mxConstants.STYLE_LABEL_BACKGROUNDCOLOR] = 'green';\r\n    // }\r\n    // vstyle[mxConstants.STYLE_FONTCOLOR] = 'black';\r\n    // vstyle[mxConstants.STYLE_STROKECOLOR] = 'black';\r\n    //delete style[mxConstants.STYLE_FILLCOLOR];\r\n    graph.getStylesheet().putCellStyle(mxConstants.SHAPE_SWIMLANE, vstyle);\r\n    if (ishorizontal) {\r\n      graph.alternateEdgeStyle = 'elbow=horizontal';\r\n    } else {\r\n      graph.alternateEdgeStyle = 'elbow=vertical';\r\n    }\r\n\r\n    // Applies size changes to siblings and parents\r\n    // this.swimlanemanager.setHorizontal(!isvertical);\r\n    // this.swimlanemanager = new mxSwimlaneManager(graph, !isvertical, true, true);\r\n    // this.swimlanemanager = new mxSwimlaneManager(graph, !ishorizontal);\r\n\r\n    // Creates a stack depending on the orientation of the swimlane\r\n    // this.stacklayout = new mxStackLayout(graph, isvertical);\r\n    // Makes sure all children fit into the parent swimlane\r\n    // this.stacklayout.resizeParent = true;\r\n\r\n    // Applies the size to children if parent size changes\r\n    // this.stacklayout.fill = true;\r\n\r\n    // Creates a stack depending on the orientation of the swimlane\r\n    this.stacklayout = new mxStackLayout(graph, ishorizontal);\r\n\r\n    // Makes sure all children fit into the parent swimlane\r\n    this.stacklayout.resizeParent = true;\r\n\r\n    // Applies the size to children if parent size changes\r\n    this.stacklayout.fill = true;\r\n\r\n    // Only update the size of swimlanes\r\n    this.stacklayout.isVertexIgnored = (vertex: any) => {\r\n      return !graph.isSwimlane(vertex);\r\n    };\r\n\r\n    // var layoutMgr = new mxLayoutManager(graph);\r\n    // layoutMgr.getLayout = (cell: any) => {\r\n    //   if (!model.isEdge(cell) && graph.getModel().getChildCount(cell) > 0 &&\r\n    //     (model.getParent(cell) === model.getRoot() || graph.isPool(cell))) {\r\n    //     this.stacklayout.fill = graph.isPool(cell);\r\n    //     return this.stacklayout;\r\n    //     // return null;\r\n    //   }\r\n    //   return null;\r\n    // };\r\n\r\n    graph.refresh();\r\n    // this.enableSwimlanes(!ishorizontal, false);\r\n    this.props.callback.endTransaction(\"\", \"toggleDirection\");\r\n  }\r\n\r\n  public alert(msg: string, mtype: MessageBarType): void {\r\n    if (this.props.callback) {\r\n      this.props.callback.alert(msg, mtype);\r\n    }\r\n  }\r\n\r\n  private findItemFromArray(arr: any, query: any) {\r\n    const key = Object.keys(query)[0];\r\n    const value = query[key];\r\n\r\n    let result;\r\n\r\n    arr && arr.forEach((item: any) => {\r\n      if (item && item[key] === value) {\r\n        result = item;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n  public getShapeStyle(shapeName: string, shapeType: string): { style: string, isedge: boolean } {\r\n    // return util.getShapeStyle(shapeName, shapeType);\r\n    // getShapeStyle(key: string, shapeType: string): { style: string, isedge: boolean } {\r\n    let key = shapeName;\r\n    let shapeStyle = key;\r\n    let isedge: boolean = false;\r\n    //console.debug(\"Type \" + shapeType + \" \" + key);\r\n\r\n    switch (shapeType) {\r\n      // case 'svg': {\r\n      //   shapeStyle = `shape=${key}`;\r\n      //   break;\r\n      // }\r\n      case 'general': {\r\n        if (GENERAL_SHAPES[key]) {\r\n          if (GENERAL_SHAPES[key].type === 'edge') {\r\n            isedge = true;\r\n          }\r\n          shapeStyle = GENERAL_SHAPES[key].style;\r\n        }\r\n        break;\r\n      }\r\n      case 'image': {\r\n        const shape: any = this.findItemFromArray(this.imageShapes, {\r\n          key: key,\r\n        });\r\n        shapeStyle = `${key}`;\r\n        if (shape) {\r\n          const img = shape.logo;\r\n          // shapeStyle = `shape=image;html=1;verticalLabelPosition=bottom;fontColor:#fff;verticalAlign=top;imageAspect=0;image=${img}`;\r\n          shapeStyle = `shape=image;html=1;whiteSpace=wrap;imageAspect=0;image=${img}`;\r\n        }\r\n        break;\r\n      }\r\n      case 'card': {\r\n        shapeStyle = `${key}`;\r\n        break;\r\n      }\r\n    }\r\n    return { style: shapeStyle, isedge: isedge };\r\n  }\r\n\r\n  public align(direction: string, cells: mxCell[] | undefined) {\r\n    if (!cells) {\r\n      cells = this.getSelectionCells();\r\n    }\r\n    switch (direction) {\r\n      case \"AlignHorizontalLeft\": { this.graph.alignCells(mxConstants.ALIGN_LEFT, cells); break; }\r\n      case \"AlignHorizontalCenter\": { this.graph.alignCells(mxConstants.ALIGN_CENTER, cells); break; }\r\n      case \"AlignHorizontalRight\": { this.graph.alignCells(mxConstants.ALIGN_RIGHT, cells); break; }\r\n      case \"AlignVerticalTop\": { this.graph.alignCells(mxConstants.ALIGN_TOP, cells); break; }\r\n      case \"AlignVerticalCenter\": { this.graph.alignCells(mxConstants.ALIGN_MIDDLE, cells); break; }\r\n      case \"AlignVerticalBottom\": { this.graph.alignCells(mxConstants.ALIGN_BOTTOM, cells); break; }\r\n    }\r\n  }\r\n  // public distribute(direction: string) {\r\n  //   switch (direction) {\r\n  //     case \"HorizontalDistributeCenter\": { this.graph.distributeCells(true); break; }\r\n  //     case \"VerticalDistributeCenter\": { this.graph.distributeCells(false); break; }\r\n  //   }\r\n  // }\r\n\r\n  public render() {\r\n    // let divOutlineStyle = {\r\n    //   top: this.state.panzoomY + \"px\",\r\n    //   left: this.state.panzoomX + \"px\"\r\n    //   // width: \"100%\" //this.props.width\r\n    //   //style={divOutlineStyle}\r\n    // };\r\n    // let showcombo = parent.state.cntpages > 1;\r\n    let diaglist = this.state.diaglist;\r\n    return (\r\n      <div>\r\n        <div className={\"editor-container \" + styles.editorcontainer}>\r\n          <div className={\"graph-inner-container \" + styles.graphinnercontainer}>\r\n            <div className={styles.row} >\r\n              <div className={styles.column} >\r\n              </div>\r\n            </div>\r\n            <div className={styles.row} >\r\n              <Stack horizontal >\r\n                <Stack>\r\n                  <StackItem>\r\n                    {diaglist.length > 1 &&\r\n                      <Pages editor={this} diaglist={diaglist} diagid={this.props.diagid}></Pages>\r\n                    }\r\n                  </StackItem>\r\n                  <StackItem hidden={!this.state.ispanzoom}>\r\n                    <div id=\"outlineContainer\" className={styles.outline}>\r\n                    </div>\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <div id=\"stencilContainer\" hidden={!this.state.isstencil}>\r\n                      <Sidebar key=\"sidebar\" editor={this} stencil={this.props.stencil}\r\n                        height={this.props.height} />\r\n                    </div>\r\n                  </StackItem>\r\n                </Stack>\r\n                <div id='some-empty-div-on-the-page' ref=\"divGraph\" className={\"graph-content \" + styles.graphcontent} key=\"graphcontent\" />\r\n              </Stack>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n\r\n  //   public xxx = (erXmlString) => {\r\n  //     let doc = mxXmlUtils.parseXml(erXmlString);\r\n  //     let codec = new mxCodec(doc);\r\n  //     codec.decode(doc.getDocumentElement(), this.graph.getModel());\r\n\r\n  //     let graphComponent = new mxGraphComponent(this.graph);\r\n  //     let image = mxCellRenderer.createBufferedImage(graphComponent.getGraph(), null, 1, , graphComponent.isAntiAlias(), null, graphComponent.getCanvas());\r\n  //     let param = mxPngEncodeParam.getDefaultEncodeParam(image);\r\n  //     param.setCompressedText( [\"mxGraphModel\", erXmlString ]);\r\n\r\n  //     FileOutputStream outputStream = new FileOutputStream(new File(filename));\r\n  //     mxPngImageEncoder encoder = new mxPngImageEncoder(outputStream, param);\r\n\r\n  //     if (image !== null) {\r\n  //         encoder.encode(image);\r\n  //         return image;\r\n  //     }\r\n  //     outputStream.close();\r\n  //     return null;\r\n  // }\r\n  //   }\r\n  // Exporting to SVG using EchoServlet\r\n  public exportSVG = (graph: mxGraph) => {\r\n    var background = '#ffffff';\r\n    var scale = 1;\r\n    var border = 1;\r\n\r\n    var imgExport = new mxImageExport();\r\n    var bounds = graph.getGraphBounds();\r\n    var vs = graph.view.scale;\r\n\r\n    // Prepares SVG document that holds the output\r\n    var svgDoc = mxUtils.createXmlDocument();\r\n    var root = (svgDoc.createElementNS !== null) ?\r\n      svgDoc.createElementNS(mxConstants.NS_SVG, 'svg') : svgDoc.createElement('svg');\r\n\r\n    if (background !== null) {\r\n      if (root.style !== null) {\r\n        root.style.backgroundColor = background;\r\n      }\r\n      else {\r\n        root.setAttribute('style', 'background-color:' + background);\r\n      }\r\n    }\r\n\r\n    if (svgDoc.createElementNS === null) {\r\n      root.setAttribute('xmlns', mxConstants.NS_SVG);\r\n      root.setAttribute('xmlns:xlink', mxConstants.NS_XLINK);\r\n    }\r\n    else {\r\n      // KNOWN: Ignored in IE9-11, adds namespace for each image element instead. No workaround.\r\n      root.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', mxConstants.NS_XLINK);\r\n    }\r\n\r\n    root.setAttribute('width', (Math.ceil(bounds.width * scale / vs) + 2 * border) + 'px');\r\n    root.setAttribute('height', (Math.ceil(bounds.height * scale / vs) + 2 * border) + 'px');\r\n    root.setAttribute('version', '1.1');\r\n\r\n    // Adds group for anti-aliasing via transform\r\n    var group = (svgDoc.createElementNS !== null) ?\r\n      svgDoc.createElementNS(mxConstants.NS_SVG, 'g') : svgDoc.createElement('g');\r\n    group.setAttribute('transform', 'translate(0.5,0.5)');\r\n    root.appendChild(group);\r\n    svgDoc.appendChild(root);\r\n\r\n    // Renders graph. Offset will be multiplied with state's scale when painting state.\r\n    var svgCanvas = new mxSvgCanvas2D(group);\r\n    svgCanvas.translate(Math.floor((border / scale - bounds.x) / vs), Math.floor((border / scale - bounds.y) / vs));\r\n    svgCanvas.scale(scale / vs);\r\n\r\n    // Displayed if a viewer does not support foreignObjects (which is needed to HTML output)\r\n    svgCanvas.foAltText = '[Not supported by viewer]';\r\n    imgExport.drawState(graph.getView().getState(graph.model.root), svgCanvas);\r\n\r\n    var xml = encodeURIComponent(mxUtils.getXml(root));\r\n    xml = mxUtils.getXml(root);\r\n    return xml;\r\n    //  new mxXmlRequest('/Echo', 'filename=export.svg&format=svg' + '&xml=' + xml).simulate(document, '_blank');\r\n\r\n    //  https://libraries.io/npm/svg2png\r\n    // var buf = Buffer.from(xml, 'utf8');\r\n  }\r\n  // public exportFile = (format: any) => {\r\n  //   let graph = this.graph;\r\n  //   var bg = '#ffffff';\r\n  //   var scale = 1;\r\n  //   var b = 1;\r\n\r\n  //   var imgExport = new mxImageExport();\r\n  //   var bounds = graph.getGraphBounds();\r\n  //   var vs = graph.view.scale;\r\n\r\n  //   // New image export\r\n  //   var xmlDoc = mxUtils.createXmlDocument();\r\n  //   var root = xmlDoc.createElement('output');\r\n  //   xmlDoc.appendChild(root);\r\n\r\n  //   // Renders graph. Offset will be multiplied with state's scale when painting state.\r\n  //   var xmlCanvas = new mxXmlCanvas2D(root);\r\n  //   xmlCanvas.translate(Math.floor((b / scale - bounds.x) / vs), Math.floor((b / scale - bounds.y) / vs));\r\n  //   xmlCanvas.scale(scale / vs);\r\n\r\n  //   imgExport.drawState(graph.getView().getState(graph.model.root), xmlCanvas);\r\n\r\n  //   // Puts request data together\r\n  //   var w = Math.ceil(bounds.width * scale / vs + 2 * b);\r\n  //   var h = Math.ceil(bounds.height * scale / vs + 2 * b);\r\n\r\n  //   var xml = mxUtils.getXml(root);\r\n\r\n  //   if (bg !== null) {\r\n  //     bg = '&bg=' + bg;\r\n  //   }\r\n\r\n  //   new mxXmlRequest('/Export', 'filename=export.' + format + '&format=' + format +\r\n  //     bg + '&w=' + w + '&h=' + h + '&xml=' + encodeURIComponent(xml)).simulate(document, '_blank');\r\n  // }\r\n\r\n  // public graphSVG = (graph: mxGraph): string => {\r\n  //   var scale = 1;\r\n  //   var b = 1;\r\n\r\n  //   var imgExport = new mxImageExport();\r\n  //   var bounds = graph.getGraphBounds();\r\n  //   var vs = graph.view.scale;\r\n\r\n  //   // New image export\r\n  //   var xmlDoc = mxUtils.createXmlDocument();\r\n  //   var root = xmlDoc.createElement('output');\r\n  //   xmlDoc.appendChild(root);\r\n\r\n  //   // Renders graph. Offset will be multiplied with state's scale when painting state.\r\n  //   var xmlCanvas = new mxXmlCanvas2D(root);\r\n  //   xmlCanvas.translate(Math.floor((b / scale - bounds.x) / vs), Math.floor((b / scale - bounds.y) / vs));\r\n  //   xmlCanvas.scale(scale / vs);\r\n\r\n  //   imgExport.drawState(graph.getView().getState(graph.model.root), xmlCanvas);\r\n\r\n  //   return mxUtils.getXml(root) as string;\r\n  // }\r\n\r\n  // public exportPNG = () => {\r\n  //   let graph= this.graph;\r\n  //   mxCodec codec = new mxCodec(doc);\r\n  //   codec.decode(doc.getDocumentElement(), graph.getModel());\r\n\r\n  //   mxGraphComponent graphComponent = new mxGraphComponent(graph);\r\n  //   BufferedImage image = mxCellRenderer.createBufferedImage(graphComponent.getGraph(), null, 1, Color.WHITE, graphComponent.isAntiAlias(), null, graphComponent.getCanvas());\r\n  //   mxPngEncodeParam param = mxPngEncodeParam.getDefaultEncodeParam(image);\r\n  //   param.setCompressedText(new string[] { \"mxGraphModel\", erXmlString });\r\n\r\n  //   FileOutputStream outputStream = new FileOutputStream(new File(filename));\r\n  //   mxPngImageEncoder encoder = new mxPngImageEncoder(outputStream, param);\r\n\r\n  //   if (image !== null) {\r\n  //       encoder.encode(image);\r\n  //       return image;\r\n  //   }\r\n  //   outputStream.close();\r\n  //   return null;\r\n  // }\r\n  public clearCellOverlays(shape: mxCell) {\r\n    let graph = this.graph;\r\n    try {\r\n      graph.clearCellOverlays(shape);\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n\r\n  public addOverlay(shp: mxCell, imgpath: string, valign: string, align: string, witdh: number, height: number,\r\n    dx: number, dy: number, tooltip: string, cursor?: string | null, handler?: () => void) {\r\n    let overlayTaskType = new mxCellOverlay(new mxImage(imgpath, witdh, height), tooltip);\r\n    overlayTaskType.verticalAlign = valign;\r\n    overlayTaskType.align = align;\r\n    overlayTaskType.offset = new mxPoint(dx, dy);\r\n    let overlay = this.graph.addCellOverlay(shp, overlayTaskType);\r\n    if (cursor) overlay.cursor = cursor;\r\n    if (handler) overlay.addListener(mxEvent.CLICK, (_sender: any, evt: any) => {\r\n      mxEvent.consume(evt);\r\n      handler();\r\n    });\r\n  }\r\n\r\n  private undoListener = (graph: mxGraph, callbackFunc: any) => {\r\n    // Undo/redo\r\n    // const undoManager = new mxUndoManager(); //eslint-disable-line\r\n\r\n    // this.undoManager = undoManager;\r\n\r\n    const listener = (_sender: any, evt: any) => {\r\n      this.undoman.undoableEditHappened(evt.getProperty('edit'));\r\n    };\r\n    graph.getModel().addListener(mxEvent.UNDO, listener); //eslint-disable-line\r\n    graph.getView().addListener(mxEvent.UNDO, listener); //eslint-disable-line\r\n\r\n    let undoListenerFunc = (undoManager1: mxUndoManager, callbackFunc1: any, e: any): boolean => {\r\n      if (e.target !== e.currentTarget) {\r\n        return false;\r\n      }\r\n\r\n      const evtobj = window.event ? window.event : e;\r\n\r\n      if (evtobj.keyCode === 90 && (evtobj.ctrlKey || evtobj.metaKey)) {\r\n        let history = undoManager1.history;\r\n        if (history.length < 1) {\r\n          return true;\r\n        }\r\n        let evt: any = history[history.length - 1];\r\n        for (let chg of evt.changes) {\r\n          switch (chg.constructor.name) {\r\n            case \"mxChildChange\": {\r\n              // this.props.callback.shapeDeleted([chg.child]);\r\n              break;\r\n            }\r\n            case \"mxGeometryChange\": {\r\n              undoManager1.undo();\r\n              break;\r\n            }\r\n            case \"mxTerminalChange\": {\r\n              break;\r\n            }\r\n            case \"mxValueChange\": {\r\n              // this.props.callback.shapeExitedTextEdit(chg.cell,chg.cell.value);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        // console.debug(evt.name);\r\n        callbackFunc1 && callbackFunc1(history);\r\n        // undoManager.redo();\r\n      }\r\n      return true;\r\n    };\r\n\r\n    let undoListenerFunc2 = undoListenerFunc.bind(this, this.undoman, callbackFunc);\r\n    this.keydownhandler.push(undoListenerFunc2);\r\n\r\n    document.body.addEventListener('keydown', undoListenerFunc2);\r\n  }\r\n\r\n  private copyListener = (graph: mxGraph, callbackFunc: any) => {\r\n    let copyListenerFunc = (graph1: mxGraph, callbackFunc1: any, e: KeyboardEvent): boolean => {\r\n      if (e.target !== e.currentTarget) {\r\n        return false;\r\n      }\r\n      // const evtobj: KeyboardEvent = window.event ? window.event : e;\r\n      const evtobj: KeyboardEvent = e;\r\n      // command + c / ctrl + c\r\n      if (evtobj.code === \"KeyC\" && (evtobj.ctrlKey || evtobj.metaKey)) {\r\n        // console.log(\"Copy..\");\r\n        mxClipboard.copy(graph1); //eslint-disable-line\r\n      } else if (evtobj.code === \"KeyV\" && (evtobj.ctrlKey || evtobj.metaKey)) { // command + v / ctrl + v\r\n        // cells 复制元素的集合\r\n        const cells = mxClipboard.paste(graph1); // eslint-disable-line\r\n        callbackFunc1 && callbackFunc1(cells, evtobj);\r\n      }\r\n      return true;\r\n    };\r\n    let copyListenerFunc2 = copyListenerFunc.bind(this, graph, callbackFunc);\r\n    this.keydownhandler.push(copyListenerFunc2);\r\n    document.body.addEventListener('keydown', copyListenerFunc2);\r\n  }\r\n  private keyListener = (graph: mxGraph, callbackFunc: any) => {\r\n    let keyListenerFunc = (_graph: mxGraph, callbackFunc1: any, e: KeyboardEvent) => {\r\n      if (e.target !== e.currentTarget) {\r\n        return false;\r\n      }\r\n      // const evtobj = window.event ? window.event : e;\r\n      const evtobj: KeyboardEvent = e;\r\n      callbackFunc1 && callbackFunc1(evtobj);\r\n      return true;\r\n    };\r\n\r\n    let keyListenerFunc2 = keyListenerFunc.bind(this, graph, callbackFunc);\r\n    this.keydownhandler.push(keyListenerFunc2);\r\n    document.body.addEventListener('keydown', keyListenerFunc2);\r\n  }\r\n  private deleteListener = (graph: mxGraph, callbackFunc: any) => {\r\n    let removeCells = graph.removeCells;\r\n    graph.removeCells = function (cells: any) {\r\n      const result = removeCells.apply(this, [cells, true]);\r\n      callbackFunc && callbackFunc(cells);\r\n      return result;\r\n    };\r\n    let deleteListenerFunc = (graph1: any, e: any) => {\r\n      // console.debug(\"deleteListenerFunc\");\r\n      if (\r\n        !(e.target === e.currentTarget || graph1.container.contains(e.target))\r\n      ) {\r\n        if (e.code !== \"Delete\") {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      const {\r\n        editingCell\r\n      } = graph1.cellEditor;\r\n\r\n      const evtobj = window.event ? window.event : e;\r\n      if (evtobj.keyCode === 46 || evtobj.keyCode === 8) {\r\n        // 没有cell当前在编辑状态时才可删除\r\n        if (!editingCell) {\r\n          const cellsSelected = graph.getSelectionCells();\r\n          // cellsSelected && cellsSelected.length && graph.removeCells(cellsSelected);\r\n\r\n          const cellsSelectable: any[] = [];\r\n          cellsSelected\r\n            &&\r\n            cellsSelected.forEach((cell: any) => {\r\n              if (cell && !cell.disabled) {\r\n                cellsSelectable.push(cell);\r\n              }\r\n            });\r\n\r\n          cellsSelectable\r\n            &&\r\n            cellsSelectable.length &&\r\n            graph1.removeCells(cellsSelectable, true);\r\n        }\r\n        // evtobj.consume();\r\n\r\n      }\r\n      return true;\r\n    };\r\n\r\n    let deleteListenerFunc2 = deleteListenerFunc.bind(this, graph);\r\n    this.keydownhandler.push(deleteListenerFunc2);\r\n\r\n    document.body.addEventListener('keydown', deleteListenerFunc2);\r\n    return true;\r\n  }\r\n\r\n  private handleClick = (graph: mxGraph, clickFunc: any) => {\r\n    graph.addListener(mxEvent.CLICK, (_sender: mxGraph, evt: mxEventObject) => { //eslint-disable-line\r\n      //eslint-disable-line\r\n      if (graph.isEditing()) {\r\n        graph.stopEditing(false);\r\n      }\r\n      const cell: mxCell = evt.getProperty('cell');\r\n      if (cell) {\r\n        clickFunc && clickFunc(cell, evt);\r\n      }\r\n    });\r\n  }\r\n  private handleDoubleClick = (graph: mxGraph, callbackFunc: any) => {\r\n    graph.addListener(mxEvent.DOUBLE_CLICK, (_sender: mxGraph, evt: mxEventObject) => {\r\n      const cell: mxCell | undefined = evt.getProperty('cell');\r\n      callbackFunc && callbackFunc(cell);\r\n    });\r\n  }\r\n  private handleMove = (graph: mxGraph, callbackFunc: any) => {\r\n    graph.addListener(mxEvent.MOVE_CELLS, (_sender: mxGraph, evt: mxEventObject) => {\r\n      const cells: mxCell[] = evt.getProperty('cells');\r\n      const clone = evt.getProperty('clone');\r\n      // console.log('move', evt, sender);\r\n      callbackFunc && callbackFunc(cells, (clone === true));\r\n      evt.consume();\r\n    });\r\n  }\r\n  private handleChange = (graph: mxGraph, callbackFunc: any) => {\r\n    graph.getSelectionModel().addListener(mxEvent.CHANGE, (_sender: mxGraph, evt: mxEventObject) => {\r\n      callbackFunc && callbackFunc(evt);\r\n    });\r\n  }\r\n\r\n\r\n  // private vertexRenameListener = (callbackFunc: any) => {\r\n  //   mxCell.prototype.valueChangedCallback = callbackFunc;\r\n  //   if (!mxCell.prototype.hasRewriteValueChanged) {\r\n  //     mxCell.prototype.hasRewriteValueChanged = true;\r\n  //     const {\r\n  //       valueChanged\r\n  //     } = mxCell.prototype;\r\n  //     mxCell.prototype.valueChanged = (newValue: any) => {\r\n  //       const {\r\n  //         valueChangedCallback\r\n  //       } = mxCell.prototype;\r\n  //       valueChanged.apply(this, [newValue]);\r\n  //       valueChangedCallback && valueChangedCallback(this, newValue);\r\n  //     };\r\n  //   }\r\n  // }\r\n  // private htmlLable = (graph: mxGraph) => {\r\n  //   graph.setHtmlLabels(true);\r\n  // }\r\n\r\n  private initAutoSave(graph: mxGraph, callbackFunc: any) {\r\n    const mgr = new mxAutoSaveManager(graph); //eslint-disable-line\r\n    mgr.autoSaveDelay = 0; // 自动保存延迟时间设为0\r\n    mgr.save = () => {\r\n      const xml = this.getGraphXmlNode();\r\n      const formatedNode = this.formatXmlNode(xml);\r\n      if (!formatedNode) {\r\n        return false;\r\n      }\r\n      const xmlStr = new XMLSerializer().serializeToString(formatedNode); //eslint-disable-line\r\n      // graph.xmlStr = xmlStr;\r\n      callbackFunc && callbackFunc(xmlStr);\r\n      return undefined;\r\n    };\r\n  }\r\n  // check the xmlnode format to avoid error\r\n  private formatXmlNode = (xmlNode: any) => {\r\n    const rootEle = xmlNode && xmlNode.firstElementChild;\r\n\r\n    let hasRoot = true;\r\n    if (rootEle && rootEle.tagName === 'root') {\r\n      hasRoot = true;\r\n    }\r\n\r\n    let hasIdO = false;\r\n    if (rootEle && rootEle.firstElementChild && rootEle.firstElementChild.id === '0') {\r\n      hasIdO = true;\r\n    }\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    if (!(hasRoot && hasIdO)) {\r\n      console.warn('xmlNode must have root node');\r\n      return false;\r\n    }\r\n\r\n    const elements: any[] = rootEle.children;\r\n\r\n    const idsArr: any[] = [];\r\n\r\n    elements && Array.from(elements).forEach((element) => {\r\n      const cellId: any = element && element.getAttribute('id');\r\n\r\n      if (idsArr.indexOf(cellId) === -1) {\r\n        idsArr.push(cellId);\r\n      } else {\r\n        console.warn('cell id is duplicated, delete the needless one', element);\r\n        rootEle.removeChild(element);\r\n      }\r\n\r\n      if (element && element.getAttribute('vertex') === '1' && element.getAttribute('edge') === '1') {\r\n        console.warn('cell\\'s property vertex and edge cannot both be 1, set property edge to 0', element);\r\n        element.setAttribute('edge', 0);\r\n      }\r\n    });\r\n\r\n    return xmlNode;\r\n  }\r\n  /**\r\n   * Returns the XML node that represents the current diagram.\r\n   */\r\n  private getGraphXmlNode = (ignoreSelection?: any) => {\r\n    ignoreSelection = ignoreSelection != null ? ignoreSelection : true;\r\n    let node: any = null;\r\n    const graph = this.graph;\r\n\r\n    if (ignoreSelection) {\r\n      const enc = new mxCodec(mxUtils.createXmlDocument()); //eslint-disable-line\r\n      node = enc.encode(this.graph.getModel());\r\n    } else {\r\n      let enc = this.graph[\"encodeCells\"];\r\n      if (enc) {\r\n        node = enc(\r\n          mxUtils.sortCells( //eslint-disable-line\r\n            this.graph.model.getTopmostCells(\r\n              //eslint-disable-line\r\n              graph.getSelectionCells()\r\n            )\r\n          )\r\n        );\r\n      }\r\n    }\r\n    if (node !== null) {\r\n      if (graph.view.translate.x !== 0 || graph.view.translate.y !== 0) {\r\n        node.setAttribute('dx', Math.round(graph.view.translate.x * 100) / 100);\r\n        node.setAttribute('dy', Math.round(graph.view.translate.y * 100) / 100);\r\n      }\r\n\r\n      node.setAttribute('grid', graph.isGridEnabled() ? '1' : '0');\r\n      node.setAttribute('gridSize', graph.gridSize);\r\n      node.setAttribute('guides', graph.graphHandler.guidesEnabled ? '1' : '0');\r\n      node.setAttribute(\r\n        'tooltips',\r\n        graph.tooltipHandler.isEnabled() ? '1' : '0'\r\n      );\r\n      node.setAttribute(\r\n        'connect',\r\n        graph.connectionHandler.isEnabled() ? '1' : '0'\r\n      );\r\n      node.setAttribute('arrows', graph[\"connectionArrowsEnabled\"] ? '1' : '0');\r\n      node.setAttribute('fold', graph.foldingEnabled ? '1' : '0');\r\n      node.setAttribute('page', graph.pageVisible ? '1' : '0');\r\n      node.setAttribute('pageScale', graph.pageScale);\r\n      node.setAttribute('pageWidth', graph.pageFormat.width * 2);\r\n      node.setAttribute('pageHeight', graph.pageFormat.height * 4);\r\n\r\n      if (graph[\"background\"] != null) {\r\n        node.setAttribute('background', graph[\"background\"]);\r\n      }\r\n      let vs = graph.getStylesheet().getCellStyle(mxConstants.SHAPE_SWIMLANE);\r\n      let isv = vs[mxConstants.STYLE_HORIZONTAL];\r\n      if (isv === undefined) isv = false;\r\n      node.setAttribute('horizontal', isv);\r\n\r\n    }\r\n    return node;\r\n  }\r\n  // 从 xml 渲染 graph\r\n  private renderGraphFromXml = (xml: string): void => {\r\n    // console.debug(\"render\");\r\n    const xmlDocument = mxUtils.parseXml(xml); //eslint-disable-line\r\n\r\n    if (\r\n      xmlDocument.documentElement != null &&\r\n      xmlDocument.documentElement.nodeName === 'mxGraphModel'\r\n    ) {\r\n      const decoder = new mxCodec(xmlDocument); //eslint-disable-line\r\n      const node = xmlDocument.documentElement;\r\n\r\n      // const formatedNode = node;\r\n      const formatedNode = this.formatXmlNode(node);\r\n\r\n      if (!formatedNode) {\r\n        // return false;\r\n        return;\r\n      }\r\n\r\n      decoder.decode(formatedNode, this.graph.model);\r\n      // console.log(this, this.graphToXML(graph));\r\n      if (xmlDocument.documentElement[\"scale\"]) {\r\n        //  console.debug(xmlDocument.documentElement[\"scale\"] + \" => \" + graph.view.scale);\r\n      }\r\n      if (xmlDocument.documentElement.attributes[\"horizontal\"]) {\r\n        // console.debug(\"horizontal => \" + xmlDocument.documentElement.attributes[\"horizontal\"].value);\r\n        this.graph[\"horizontal\"] = xmlDocument.documentElement.attributes[\"horizontal\"].value;\r\n      }\r\n    }\r\n  }\r\n  private renderNewGraphFromXml = (xml: string, div: any): mxGraph | undefined => {\r\n    // console.debug(\"render\");\r\n    const xmlDocument = mxUtils.parseXml(xml); //eslint-disable-line\r\n\r\n    if (\r\n      xmlDocument.documentElement != null &&\r\n      xmlDocument.documentElement.nodeName === 'mxGraphModel'\r\n    ) {\r\n      const decoder = new mxCodec(xmlDocument); //eslint-disable-line\r\n      const node = xmlDocument.documentElement;\r\n\r\n      // const formatedNode = node;\r\n      const formatedNode = this.formatXmlNode(node);\r\n\r\n      if (!formatedNode) {\r\n        // return false;\r\n        return;\r\n      }\r\n      const model: mxGraphModel = new mxGraphModel();\r\n      let graph = new mxGraph(div, model);\r\n      decoder.decode(formatedNode, graph.model);\r\n      return graph;\r\n    }\r\n    return;\r\n  }\r\n  // public destroyIconSet = (): void => {\r\n  //     if (this.images !== []) {\r\n  //       for (let i = 0; i < this.images.length; i += 1) {\r\n  //         const img = this.images[i];\r\n  //         img.parentNode.removeChild(img);\r\n  //       }\r\n  //     }\r\n  //     this.images = [];\r\n  //   };\r\n\r\n}\r\n","// import { fetchGraph } from '../explorer/spexplorer';\n// import { getListItem } from '../explorer/spexplorer';\n//import { SPListItem } from '@microsoft/sp-page-context';\n// import { MSGraphClient } from '@microsoft/sp-http';\n//import { any } from '@microsoft/sp-webpart-base';\n\nimport { IVisioRDFS } from './visiordfsinterface';\nimport {\n  ISemTalkObject, SemTalkBaseConstant\n} from '../tbase/Interface';\nimport { IMongoOption } from '../../SemTalkMongoServer';\nimport { alert } from '../semtalklistener/stglobal';\nimport { MessageBarType } from 'office-ui-fabric-react';\nimport {Process_ElementName} from './processInterface';\n\n\n\nexport function refreshPage(sem: IVisioRDFS, msgraphclient: any| undefined,\n  context: any | undefined, site: string, mongo: IMongoOption) {\n  if (sem.page) {\n    if (sem.tseditor) {\n      sem.tseditor.beginUpdate();\n    }\n\n    let di = sem.base.FindAssociationType(SemTalkBaseConstant.SLDisplays);\n    let inf = sem.base.FindAssociationType(sem.base.GetModelAttribute(Process_ElementName.SLInfoType));\n    for (let nd of sem.page.Contents()) {\n      let fnd = false;\n      let obj = nd.Model;\n      if (obj.EditLink) {\n        refreshObject(sem, obj, msgraphclient, context, site, mongo);\n      } else {\n        if (di) {\n          for (let ro of obj.LinkedObjects(di)) {\n            refreshObject(sem, ro, msgraphclient, context, site, mongo);\n            fnd = true;\n          }\n        }\n        if (!fnd) {\n          if (inf) {\n            for (let info of obj.LinkedObjects(inf)) {\n              refreshObject(sem, info, msgraphclient, context, site, mongo);\n              fnd = true;\n            }\n          }\n        }\n      }\n    }\n    if (sem.tseditor) {\n      sem.tseditor.endUpdate();\n    }\n    if (sem.tseditor) {\n      sem.tseditor.refresh();\n    }\n  }\n}\nexport function refreshObject(sem: IVisioRDFS, obj: ISemTalkObject, msgraphclient: any| undefined,\n  context: any | undefined, site: string, mongo: IMongoOption) {\n\n  if (obj.EditLink) {\n    if (obj.EditLink.indexOf(\"Web\") < 0) {\n      refreshGraphObject(sem, msgraphclient, obj);\n    } else {\n      if (obj.EditLink.startsWith(\"repository/\") && mongo.usemongo) {\n        refreshMongoRepositoryObject(sem, mongo,obj);\n      } else {\n        refreshSPRepositoryObject(sem, context, site, obj);\n      }\n    }\n  }\n}\n\nexport async function refreshGraphObject(sem: IVisioRDFS, msgraphclient: any | undefined, obj: ISemTalkObject) {\n  if (obj.EditLink && obj.EditLink.indexOf(\"Web\") < 0) {\n    let res;\n    if (msgraphclient) {\n      res = await sem.explorer.fetchGraph(obj.EditLink + \"/\" + obj.ObjectName, \"\", \"\", msgraphclient);\n    }\n    if (res) {\n      let upd = false;\n      if (res.description && obj.Comment !== res.description) {\n        obj.Comment = res.description;\n      }\n      let syn = obj.FindSynonym(sem.base.CurrentNsp);\n      if (syn !== res.displayName) {\n        obj.MakeSynonym(res.displayName, sem.base.CurrentNsp);\n        upd = true;\n      }\n      if (upd) sem.UpdateByID(obj.ID);\n\n    }\n  }\n}\n\nexport async function refreshMongoRepositoryObject(_sem: IVisioRDFS, _mongo: IMongoOption, obj: ISemTalkObject) {\n  let sc = obj.SystemClass();\n  if (sc !== null) {\n    try {\n      // let le = obj.EditLink;\n      // if (le && le.indexOf(\"Items(\") > 0) {\n      //   le = le.substring(le.lastIndexOf(\"(\") + 1, le.lastIndexOf(\")\"));\n      //   let listname = sem.getSPListName(sc.ObjectName);\n      //   let lany: any;\n      //   if (context) {\n      //     lany = await sem.explorer.getListItem(context, site, listname, le);\n      //     let li: SPListItem = lany;\n      //     let upd = false;\n      //     if (li[\"Comment\"]) {\n      //       if (obj.Comment !== li[\"Comment\"]) {\n      //         obj.Comment = li[\"Comment\"];\n      //         upd = true;\n      //       }\n      //     }\n      //     let syn = obj.FindSynonym(sem.base.CurrentNsp);\n      //     if (syn !== li[\"Title\"]) {\n      //       obj.MakeSynonym(li[\"Title\"], sem.base.CurrentNsp);\n      //       upd = true;\n      //     }\n      //     if (upd) sem.UpdateByID(obj.ID);\n      //   }\n      // }\n    } catch (err) {\n      let msg: string = \"unknown\";\n      if (err && typeof err === \"object\") {\n        const e: any = err;\n        msg = e[\"message\"];\n        alert(msg, MessageBarType.error);\n      }\n    }\n  }\n}\nexport async function refreshSPRepositoryObject(sem: IVisioRDFS, context: any | undefined, site: string, obj: ISemTalkObject) {\n  let sc = obj.SystemClass();\n  if (sc !== null) {\n    try {\n      let le = obj.EditLink;\n      if (le && le.indexOf(\"Items(\") > 0) {\n        le = le.substring(le.lastIndexOf(\"(\") + 1, le.lastIndexOf(\")\"));\n        let listname = sem.getSPListName(sc.ObjectName);\n        let lany: any;\n        if (context) {\n          lany = await sem.explorer.getListItem(context, site, listname, le);\n          let li: any = lany;\n          let upd = false;\n          if (li[\"Comment\"]) {\n            if (obj.Comment !== li[\"Comment\"]) {\n              obj.Comment = li[\"Comment\"];\n              upd = true;\n            }\n          }\n          let syn = obj.FindSynonym(sem.base.CurrentNsp);\n          if (syn !== li[\"Title\"]) {\n            obj.MakeSynonym(li[\"Title\"], sem.base.CurrentNsp);\n            upd = true;\n          }\n          if (upd) sem.UpdateByID(obj.ID);\n        }\n      }\n    } catch (err) {\n      let msg: string = \"unknown\";\n      if (err && typeof err === \"object\") {\n        const e: any = err;\n        msg = e[\"message\"];\n        alert(msg, MessageBarType.error);\n      }\n    }\n  }\n}\n","import * as React from 'react';\nimport styles from './SemTalkAttachments.module.scss';\nimport {\n  Selection, IColumn, DetailsList, DetailsListLayoutMode,\n  CheckboxVisibility, IDropdownOption, CommandBar, DefaultButton, Dropdown, TextField, Stack\n} from 'office-ui-fabric-react';\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\n\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { SelectionMode, ISelection } from 'office-ui-fabric-react/lib/utilities/selection/index';\n\nimport { IObjectBase, ISemTalkObject, ISemTalkAssociation, ISemTalkInstance, SemTalkBaseConstant } from \"../../application/tbase/Interface\";\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n// import { WebPartContext } from '@microsoft/sp-webpart-base';\n//import { SetContext } from '../../semtalkportal/restinterface';\nimport { Guid } from \"guid-typescript\";\n///import * as strings from 'SemTalkStrings';\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\n\n\nexport interface ISemTalkAttachmentTabProps {\n  title?: string;\n  description?: string;\n  semtalk: IVisioRDFS;\n  context?: any;\n  newitem: boolean;\n}\nexport interface ISemTalkAttachmentTabState {\n  objectid: number;\n  base: IObjectBase;\n  newitem: boolean;\n  sel: ISelection;\n  items: IAssociationTab[];\n}\ninterface IAssociationTab {\n  ID: number;\n  Object: ISemTalkObject;\n  Association: ISemTalkAssociation;\n  PropValue: string | undefined;\n  PropValueName: ISemTalkObject | null;\n  PropValueCaption: string | null;\n  _value: string;\n}\nexport class SemTalkAttachmentTab extends React.Component<ISemTalkAttachmentTabProps, ISemTalkAttachmentTabState> {\n  // private _selection: Selection;\n  private object: ISemTalkObject | null = null;\n  private languages: IDropdownOption[] = [];\n  private types: IDropdownOption[] = [];\n  public callback: Guid;\n\n  constructor(props: ISemTalkAttachmentTabProps) {\n    super(props);\n    this.callback = Guid.create();\n    console.debug(\"showAttachmentTab\");\n    this.state = {\n      objectid: -1,\n      items: [],\n      sel: new Selection({}),\n      newitem: this.props.newitem,\n      base: this.props.semtalk.base\n    };\n  }\n  private resetState = () => {\n    this.setState({\n      objectid: -1,\n      items: [],\n      newitem: false,\n      base: this.props.semtalk.base\n    });\n  }\n  private mounted: boolean = false;\n\n  public async componentDidMount() {\n    this.mounted = true;\n    let oid: number = getObject();\n    this.languages.push({ key: \"\", text: \"\" });\n    const langclass = this.props.semtalk.base.FindClass(SemTalkBaseConstant.SLLanguage);\n    if (langclass) {\n      for (let lang of langclass.Instances()) {\n        this.languages.push({ key: lang.ObjectName, text: lang.ObjectCaption });\n\n        let attclass = this.state.base.FindClass(SemTalkBaseConstant.SLAttachment);\n        if (attclass !== null) {\n          this.types.push({ key: attclass.ObjectName, text: attclass.ID2NameNsp() });\n          for (const att of attclass.SubClasses()) {\n            this.types.push({ key: att.ObjectName, text: att.ID2NameNsp() });\n          }\n        }\n        if (oid > 0) {\n          this.loadObject(oid);\n        }\n        this.setState({ newitem: false });\n        addCallBack(this);\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    this.mounted = false;\n    removeCallBack(this);\n    this.object = null;\n  }\n\n  private loadObject(id: number) {\n    this.object = this.state.base.FindObjectByID(id);\n    if (this.object != null) {\n      this.setState({ objectid: id, items: this.getItems(this.object) });\n    }\n  }\n\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    try {\n      md = JSON.parse(e.data);\n      var mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkNavigationEvent.gotoObject:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n          // this.forceUpdate();\n        }\n        break;\n      case SemTalkNavigationEvent.gotoNode:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n    }\n  }\n  private getItems(obj: ISemTalkObject): IAssociationTab[] {\n    let items: IAssociationTab[] = [];\n    for (let assoc of obj.Attachments()) {\n      let item: IAssociationTab = {\n        ID: items.length,\n        // PropName: assoc.ClassOf().ObjectName,\n        Object: obj,\n        Association: assoc,\n        // PropType: SemTalkType,\n        PropValue: assoc.ToObject.ObjectName,\n        PropValueName: assoc.ToObject,\n        PropValueCaption: assoc.ToObject.ID2NameNsp(),\n        // _label: assoc.ClassOf().ID2NameNsp(),\n        _value: assoc.ToObject.ID2NameNsp()\n      };\n      items.push(item);\n    }\n    return items;\n  }\n\n  private _columns: IColumn[] = [\n    {\n      key: 'Value',\n      name: this.props.semtalk.getResStrListener(\"STRDLHTMLOUTLIN\"),\n      fieldName: 'Value',\n      minWidth: 200,\n      isMultiline: false,\n      onRender: (item: IAssociationTab, _index?: number, _column?: IColumn) => {\n        //  let cap = item.PropValue;\n        let lbl = item.Association.GetValue(\"label\");\n        if (lbl === null) lbl = \"\";\n        let nsp = item.Association.GetValue(\"namespace\");\n        let lan = this.props.semtalk.base.FindInstance(nsp);\n        if (lan != null) {\n          nsp = lan.ObjectCaption;\n        }\n        let type = item.Association.GetValue(\"type\");\n        if (nsp != null  && nsp.length > 0) {\n          if (type != null && type !== SemTalkBaseConstant.SLAttachment) {\n            nsp = type + \" (\" + nsp + \")\";\n          }\n          lbl = lbl + \" (\" + nsp + \")\";\n        }\n        else {\n          if (type != null && type !== SemTalkBaseConstant.SLAttachment) {\n            let tcl = item.Association.ObjectBase.FindClass(type);\n            if (tcl != null)\n              lbl = lbl + \" \" + tcl.ObjectCaption;\n          }\n        }\n        let r: any;\n        if (lbl.length > 0) {\n          r = <TextField value={item.PropValue} readOnly={true} label={lbl} onChange={(_ev, _a) => { }}></TextField>;\n        } else {\n          r = <TextField value={item.PropValue} readOnly={true} label={\"Hyperlink\"} onChange={(_ev, _a) => { }}></TextField>;\n        }\n        // return <span>{cap}</span>;\n        return r;\n      }\n    }\n  ];\n\n  private attachment: string = SemTalkBaseConstant.SLAttachment;\n  private newitem = {\n    title: \"\",\n    oldtitle: \"\",\n    label: \"\",\n    language: \"\",\n    type: this.attachment\n  };\n\n  private commands = [\n    {\n      key: 'Add',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDNE\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Add'\n      },\n      onClick: (): void => {\n        this.newitem.label = \"\";\n        this.newitem.language = \"\";\n        this.newitem.title = \"\";\n        this.newitem.oldtitle = \"\";\n        this.newitem.type = this.attachment;\n        this.setState({ newitem: true });\n      }\n    },\n    {\n      key: 'Edit',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDED\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Edit'\n      },\n      onClick: () => { this.editItem(); }\n    },\n    {\n      key: 'Delete',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Delete'\n      },\n      onClick: (): void => {\n        let item = this.state.sel.getSelection()[0] as IAssociationTab;\n        if (item != null) {\n          if (this.object != null) {\n            if (item.PropValue !== undefined)\n              this.object.DeleteAttachment(item.PropValue);\n            this.setState({ newitem: false, items: this.getItems(this.object) });\n          }\n        }\n      }\n    },\n    {\n      key: 'Open',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDOP\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Attach'\n      },\n      onClick: (): void => {\n        let item = this.state.sel.getSelection()[0] as IAssociationTab;\n        if (item != null) {\n          if (item.PropValue !== undefined)\n            this._onItemInvoked(item);\n        }\n      }\n    }];\n  private _onItemInvoked(item: IAssociationTab): void {\n    if (item.PropValue !== undefined) {\n      const link: any = document.createElement('a');\n      link.href = item.PropValue;\n      link.setAttribute('target',\"_blank\");\n       document.body.appendChild(link);\n      link.click();\n      link.parentNode.removeChild(link);\n    }\n  }\n  private editItem = (): void => {\n    let item = this.state.sel.getSelection()[0] as IAssociationTab;\n    if (item != null) {\n      if (item.PropValue !== undefined) {\n        this.newitem.title = item.PropValue;\n        this.newitem.oldtitle = item.PropValue;\n      }\n      this.newitem.label = item.Association.GetValue(\"label\");\n      this.newitem.language = item.Association.GetValue(\"namespace\");\n      this.newitem.type = (item.Association.ToObject as ISemTalkInstance).ClassOf().ObjectName;\n      this.setState({ newitem: true });\n    }\n  }\n  private cancelnew = (): void => {\n    this.setState({ newitem: false });\n  }\n  private addnewitem = (): void => {\n    let t = this.newitem.title;\n    if (t.startsWith(\"www.\")) t = \"http://\" + t;\n    if (this.newitem.title.length > 0) {\n      if (this.object != null) {\n        if (this.newitem.oldtitle.length > 0 && this.newitem.oldtitle !== this.newitem.title) {\n          this.object.DeleteAttachment(this.newitem.oldtitle);\n        }\n        this.object.MakeAttachment(t, this.newitem.label, this.newitem.language, undefined, this.newitem.type);\n        this.setState({ newitem: false, items: this.getItems(this.object) });\n      }\n    } else {\n      this.setState({ newitem: false });\n    }\n  }\n  public render(): React.ReactElement<ISemTalkAttachmentTabProps> {\n    // let val: any[] = this.getItems();\n    let r: React.ReactElement<ISemTalkAttachmentTabProps>;\n    // let val: any[] = this.state.items;\n    // this._selection = new Selection({});\n    let item = this.newitem;\n    // <div className={styles.semTalkAttachment}><div className={styles.pivottab}></div></div>\n    const stackTokens = { childrenGap: 10 };\n    r = <Fabric>\n      <CommandBar\n        id=\"STButtons\"\n        items={this.commands}\n      ></CommandBar>\n      <div id=\"spfxSTAttachment\" className={styles.semTalkAttachment}><div className={styles.pivottab}></div></div>\n      {this.state.newitem &&\n        <div>\n          <Stack tokens={stackTokens}>\n            <TextField id=\"attachmentTitle\" defaultValue={item.title} label={this.props.semtalk.getResStrListener(\"STRDLGATTADDR\")} required onChange={(_ev, a) => {\n              if (a !== undefined)\n                item.title = a;\n            }}></TextField>\n            <TextField id=\"attachmentLabel3\" defaultValue={item.label} label={this.props.semtalk.getResStrListener(\"STRDLGATTLABEL\")} onChange={(_ev, a) => {\n              if (a !== undefined)\n                item.label = a;\n            }}></TextField>\n            <Dropdown\n              id=\"attachmentDropdown\"\n              label={this.props.semtalk.getResStrListener(\"STRDLGTABSYN\")}\n              options={this.languages}\n              defaultSelectedKey={item.language}\n              onChange={(_ev, a) => {\n                if (a !== undefined)\n                  item.language = a.key as string;\n              }}\n            />\n            {this.types.length > 1 &&\n              <Dropdown\n                id=\"attachmentDropdown2\"\n                label={this.props.semtalk.getResStrListener(\"STRDLGCLATTTYP\")}\n                defaultSelectedKey={item.type}\n                // selectedKey={this.newitem.type}\n                options={this.types}\n                onChange={(_ev, a) => {\n                  if (a !== undefined)\n                    item.type = a.key as string;\n                }}\n              />\n            }\n          </Stack>\n          <div className={styles.semTalkAttachment}><div className={styles.pivottab}></div></div>\n          <DefaultButton id=\"okButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDOK\")} onClick={this.addnewitem} />\n          <DefaultButton id=\"cancelButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\n        </div>\n      }\n      {!this.state.newitem &&\n        <div id=\"spfxSTAttachments\">\n          <DetailsList\n            items={this.state.items}\n            compact={true}\n            columns={this._columns}\n            selectionMode={SelectionMode.single}\n            layoutMode={DetailsListLayoutMode.justified}\n            selection={this.state.sel}\n            checkboxVisibility={CheckboxVisibility.hidden}\n            isHeaderVisible={false}\n            onItemInvoked={this._onItemInvoked}\n          />\n        </div>\n      }\n    </Fabric>;\n    return r;\n  }\n}","import * as React from 'react';\r\n//import styles from './SemTalkOpen.module.scss';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { IObjectBase } from \"../../application/tbase/Interface\";\r\nimport {\r\n  Selection, SelectionMode, ISelection, DetailsList, DetailsListLayoutMode, IColumn,\r\n  CheckboxVisibility, CommandBar, TextField, Stack, Checkbox\r\n} from 'office-ui-fabric-react';\r\n\r\n//import { any } from '@microsoft/sp-webpart-base';\r\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\r\n// import { getListData } from '../application/semtalklistener/spexplorer';\r\n// import { SPListItem } from '@microsoft/sp-page-context';\r\n// import { SPHttpClient } from '@microsoft/sp-http';\r\nimport { ISPExplorer } from '../../application/explorer/spexplorerinterface';\r\nimport { IMongoOption, mgGetMetaData } from '../../SemTalkMongoServer';\r\nimport { parseISO } from \"date-fns\";\r\nimport { format } from \"date-fns-tz\";\r\n// import { ISemTalkOnline } from '../../ISemTalkOnline';\r\n// import { SemTalkRefinementTab } from '../strefinements/SemTalkRefinements';\r\n\r\n\r\nexport interface ISemTalkOpenProps {\r\n  title: string;\r\n  isopen: boolean;\r\n  isnew: boolean;\r\n  issaveas: boolean;\r\n  isimport: boolean;\r\n  callback: any;\r\n  semtalk: IVisioRDFS;\r\n  context?: any;\r\n  site?: string;\r\n  library?: string;\r\n  templates?: string;\r\n  filename: string;\r\n  template?: string;\r\n  templist?: string;\r\n  spCheckInOut: boolean;\r\n  mongo: IMongoOption;\r\n}\r\nexport interface ISemTalkOpenState {\r\n  base: IObjectBase;\r\n  columns: IColumn[];\r\n  items: IListItem[];\r\n  selection: IListItem | null;\r\n  sel: ISelection;\r\n  filename: string;\r\n  spinterface: ISPExplorer;\r\n  istemplate: boolean;\r\n}\r\ninterface IListItem {\r\n  filename: string;\r\n  CheckOutUserId: number;\r\n  user: string;\r\n  modified: string;\r\n  modifiedby: string;\r\n}\r\nexport class SemTalkOpen extends React.Component<ISemTalkOpenProps, ISemTalkOpenState> {\r\n  constructor(props: ISemTalkOpenProps) {\r\n    super(props);\r\n    console.debug(\"showOpenFile\");\r\n    let fname = this.props.filename;\r\n    // if (this.props.issaveas) {\r\n    //   fname = fname.replace(\".stx\", \"\");\r\n    // }\r\n    fname = fname.replace(\".stx\", \"\");\r\n    fname = fname.replace(\".sdx\", \"\");\r\n\r\n    this.state = {\r\n      base: this.props.semtalk.base,\r\n      columns: this._columns,\r\n      items: [],\r\n      selection: null,\r\n      //  goto_context: this.props.goto_context\r\n      sel: new Selection({\r\n        onSelectionChanged: () => { this.selectitem(); }\r\n      }),\r\n      filename: fname,\r\n      spinterface: this.props.semtalk.explorer,\r\n      istemplate: false\r\n    };\r\n  }\r\n  public async componentDidMount() {\r\n    if (this.props.isopen)\r\n      this.commands[0].iconProps.iconName = \"OpenFile\";\r\n    await this.loadObject();\r\n    if (this.props.isnew && this.props.template) {\r\n      this.state.sel.setKeySelected(this.props.template, true, true);\r\n    }\r\n  }\r\n  public componentWillUnmount() {\r\n  }\r\n\r\n  private loadObject = async () => {\r\n    let items: IListItem[] = [];\r\n    let isnew: boolean = this.props.isnew;\r\n    if (this.props.mongo.usemongo) {\r\n      let lib = \"SDX\";\r\n      if (isnew) lib = \"Templates\";\r\n      let docs = await mgGetMetaData(this.props.mongo, this.props.mongo.dbname, lib);\r\n      docs.sort((a: any, b: any) => {\r\n        return a.name.localeCompare(b.name);\r\n      });\r\n      for (let s of docs) {\r\n        let m = \"\";\r\n        if (s[\"Modified\"]) {\r\n          m = s[\"Modified\"];\r\n        } else {\r\n          if (s[\"Created\"]) {\r\n            m = s[\"Created\"];\r\n          }\r\n        }\r\n        let mb = \"\";\r\n        if (s[\"ModifiedBy\"]) {\r\n          mb = s[\"ModifiedBy\"];\r\n        } else {\r\n          if (s[\"CreatedBy\"]) {\r\n            mb = s[\"CreatedBy\"];\r\n          }\r\n        }\r\n        let item = {\r\n          key: s[\"_id\"] as string,\r\n          filename: s[\"name\"] as string,\r\n          CheckOutUserId: 0,\r\n          user: s[\"CheckedOutUser\"],\r\n          modified: m,\r\n          modifiedby: mb\r\n        };\r\n        let fname: string = item.filename;\r\n        if ((!isnew && fname.indexOf(\".sdx\") > 0) ||\r\n          (isnew && fname.indexOf(\".stx\") > 0)) {\r\n          items.push(item);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!this.props.mongo.usemongo && this.props.context !== undefined && this.props.site !== undefined && this.props.library !== undefined) {\r\n      console.debug(\"Open \" + this.props.site);\r\n\r\n      let lib: string = this.props.library;\r\n      if (isnew && this.props.templates) {\r\n        lib = this.props.templates;\r\n      }\r\n\r\n      let ischeckout: boolean = this.props.spCheckInOut;\r\n      let checkedout_tokens: any[] = [];\r\n      if (!isnew && !ischeckout) {\r\n        let templist = this.props.templist;\r\n        if (templist && templist.length > 0) {\r\n          let query = \"$select=Title,Author/Title&$expand=Author/Id\";\r\n          let ti: any = await this.state.spinterface.getListData(this.props.context, this.props.site, templist, query);\r\n          checkedout_tokens = ti.value;\r\n        }\r\n      }\r\n      let lany: any = await this.state.spinterface.getListData(this.props.context, this.props.site, lib, \"$select=FileLeafRef,ID,CheckoutUserId\");\r\n      let lil: any[] = lany.value;\r\n      if (lil !== undefined) {\r\n        let spitems = lil;\r\n        let documents = spitems.map((s) => {\r\n          let m = \"\";\r\n          if (s[\"Modified\"]) {\r\n            m = s[\"Modified\"];\r\n          } else {\r\n            if (s[\"Created\"]) {\r\n              m = s[\"Created\"];\r\n            }\r\n          }\r\n          let mb = \"\";\r\n          if (s[\"ModifiedBy\"]) {\r\n            mb = s[\"ModifiedBy\"];\r\n          } else {\r\n            if (s[\"CreatedBy\"]) {\r\n              mb = s[\"CreatedBy\"];\r\n            }\r\n          }\r\n          return {\r\n            key: s[\"FileLeafRef\"] as string,\r\n            filename: s[\"FileLeafRef\"] as string,\r\n            CheckOutUserId: s[\"CheckoutUserId\"] as number,\r\n            user: \"\" as string,\r\n            modified: m,\r\n            modifiedby: mb,\r\n          };\r\n        });\r\n        for (let item of documents) {\r\n          item.user = \"\";\r\n          if (!isnew) {\r\n            if (ischeckout) {// true if Sp CheckOut is activated\r\n              item.user = await this.state.spinterface.getUserById(this.props.context, this.props.site, item.CheckOutUserId);\r\n            } else {\r\n              for (let checkoutToken of checkedout_tokens) {\r\n                if (item.filename === checkoutToken.Title) {\r\n                  item.user = checkoutToken.Author.Title;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          let fname: string = item.filename;\r\n          if ((!isnew && fname.indexOf(\".sdx\") > 0) ||\r\n            (isnew && fname.indexOf(\".stx\") > 0)) {\r\n            items.push(item);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (isnew && items.length === 0) {\r\n      items.push({ filename: \"bpmn20-2016.stx\", CheckOutUserId: 0, user: \"\", modified: \"\", modifiedby: \"\" });\r\n      items.push({ filename: \"cit_intelliForm_dialog.stx\", CheckOutUserId: 0, user: \"\", modified: \"\", modifiedby: \"\" });\r\n      items.push({ filename: \"epc.stx\", CheckOutUserId: 0, user: \"\", modified: \"\", modifiedby: \"\" });\r\n      items.push({ filename: \"semtalk.stx\", CheckOutUserId: 0, user: \"\", modified: \"\", modifiedby: \"\" });\r\n    }\r\n    this.setState({\r\n      items: items,\r\n    });\r\n  }\r\n  private commands = [\r\n    {\r\n      key: 'Cloud',\r\n      visible: false,\r\n      enabled: false,\r\n      name: \"Cloud\",\r\n      iconProps: {\r\n        iconName: 'Cloud'\r\n      },\r\n      onClick: (): void => {\r\n        \r\n        this.additem();\r\n      }\r\n    },\r\n    {\r\n      key: 'Browse',\r\n      name: \"Computer\",\r\n      iconProps: {\r\n        iconName: 'OpenFile'\r\n      },\r\n      onClick: (): void => {\r\n        this.localdocument();\r\n      }\r\n    }\r\n  ];\r\n\r\n  private checkInStyle = {\r\n    border: 'solid 5px green',\r\n    width: '5px',\r\n    height: '5px'\r\n  } as React.CSSProperties;\r\n\r\n  private checkOutStyle = {\r\n    border: 'solid 5px red',\r\n    width: '5px',\r\n    height: '5px'\r\n  } as React.CSSProperties;\r\n\r\n  private _onColumnClick = (_ev: React.MouseEvent<HTMLElement>, column: IColumn): void => {\r\n    const { columns, items } = this.state;\r\n    const newColumns: IColumn[] = columns.slice();\r\n    const currColumn: IColumn = newColumns.filter(currCol => column.key === currCol.key)[0];\r\n    for (let newCol of newColumns) {\r\n      if (newCol === currColumn) {\r\n        currColumn.isSortedDescending = !currColumn.isSortedDescending;\r\n        currColumn.isSorted = true;\r\n        // this.setState({\r\n        //   announcedMessage: `${currColumn.name} is sorted ${\r\n        //     currColumn.isSortedDescending ? 'descending' : 'ascending'\r\n        //   }`,\r\n        // });\r\n      } else {\r\n        newCol.isSorted = false;\r\n        newCol.isSortedDescending = true;\r\n      }\r\n    }\r\n    function _copyAndSort<T>(items1: T[], columnKey: string, isSortedDescending?: boolean): T[] {\r\n      const key = columnKey as keyof T;\r\n      return items1.slice(0).sort((a: T, b: T) => ((isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1));\r\n    }\r\n    const newItems = _copyAndSort(items, currColumn.fieldName!, currColumn.isSortedDescending);\r\n    this.setState({\r\n      columns: newColumns,\r\n      items: newItems,\r\n    });\r\n  }\r\n\r\n  private _columns: IColumn[] = [\r\n    {\r\n      key: 'CheckOutUserId',\r\n      name: \"\",\r\n      // isIconOnly: true,\r\n      fieldName: 'CheckOutUserId',\r\n      minWidth: 5,\r\n      maxWidth: 5,\r\n      onRender: (item: IListItem) => {\r\n\r\n        if (item.user !== \"\" && item.user !== undefined) {\r\n          return <span><div style={this.checkOutStyle} /></span>;\r\n        } else {\r\n          return <span><div style={this.checkInStyle} /></span>;\r\n        }\r\n\r\n      }\r\n    },\r\n    {\r\n      key: 'filename',\r\n      name: \"Name\",\r\n      fieldName: 'filename',\r\n      minWidth: 100,\r\n      // maxWidth: 180,\r\n      isResizable: true,\r\n      isMultiline: false,\r\n      isSorted: true,\r\n      isSortedDescending: false,\r\n      onColumnClick: this._onColumnClick,\r\n      onRender: (item: IListItem) => {\r\n        return <span>{item.filename.replace(\".stx\", \"\")}</span>;\r\n      }\r\n    },\r\n    {\r\n      key: 'modified',\r\n      name: \"Modified\",\r\n      fieldName: 'modified',\r\n      minWidth: 120,\r\n      // maxWidth: 180,\r\n      isResizable: true,\r\n      isMultiline: false,\r\n      onColumnClick: this._onColumnClick,\r\n      isSorted: false,\r\n      isSortedDescending: false,\r\n      onRender: (item: IListItem) => {\r\n        let pv = \"\";\r\n        if (item.modified) {\r\n          pv = format(parseISO(item.modified), \"dd-MM-yyyy kk:mm:ss\");\r\n        }\r\n        return <span>{pv}</span>;\r\n      }\r\n    },\r\n    {\r\n      key: 'modifiedby',\r\n      name: \"ModifiedBy\",\r\n      fieldName: 'modifiedby',\r\n      minWidth: 120,\r\n      // maxWidth: 180,\r\n      isResizable: true,\r\n      isMultiline: false,\r\n      onColumnClick: this._onColumnClick,\r\n      isSorted: false,\r\n      isSortedDescending: false,\r\n      onRender: (item: IListItem) => {\r\n        if (item.modifiedby !== null) {\r\n          return <span>{item.modifiedby}</span>;\r\n        } else {\r\n          return <span></span>;\r\n        }\r\n      }\r\n    },\r\n    {\r\n      key: 'user',\r\n      name: \"CheckOutUser\",\r\n      fieldName: 'user',\r\n      minWidth: 80,\r\n      onRender: (item: IListItem) => {\r\n\r\n        if (item.user !== null) {\r\n          return <span>{item.user}</span>;\r\n        } else {\r\n          return <span></span>;\r\n        }\r\n      }\r\n    }\r\n\r\n  ];\r\n  private _newcolumns: IColumn[] = [\r\n    {\r\n      key: 'Value',\r\n      name: \"Value\",\r\n      fieldName: 'Value',\r\n      minWidth: 100,\r\n      // maxWidth: 180,\r\n      isResizable: true,\r\n      isMultiline: false,\r\n      onRender: (item: IListItem) => {\r\n        return <span>{item.filename.replace(\".stx\", \"\")}</span>;\r\n      }\r\n    }];\r\n\r\n  // private _onSelectionChanged = (): void => {\r\n  //   console.debug(this._selection);\r\n  // }\r\n\r\n  // onSelectionChanged: () => this.setState({ selection: this._getSelectionObject() }),\r\n  //  private _getSelectionObject(): ISemTalkObject | null {\r\n  //     const selectionCount = this.state.sel.getSelectedCount();\r\n  //     switch (selectionCount) {\r\n  //       case 1:\r\n  //         return this.state.sel.getSelection()[0] as ISemTalkObject;\r\n  //     }\r\n  //     return null;\r\n  //   }\r\n  private _onItemInvoked = (_item: any): void => {\r\n    this.additemX();\r\n  }\r\n  private selectitem = (): void => {\r\n    let sel = this.state.sel.getSelection();\r\n    if (sel.length > 0) {\r\n      let item = this.state.sel.getSelection()[0] as IListItem;\r\n      //console.debug(item);\r\n      if (item !== null) {\r\n        this.setState({ selection: item, filename: item.filename });\r\n      }\r\n    }\r\n  }\r\n  private localdocument = () => {\r\n    if (this.props.isopen) {\r\n      this.props.callback.openlocalDocument();\r\n    }\r\n    if (this.props.issaveas) {\r\n      this.props.callback.savelocalDocument();\r\n    }\r\n  }\r\n  private additem = () => {\r\n    if (this.props.isopen) {\r\n      let curFileName: string = this.state.filename;\r\n      if (curFileName !== \"\") {\r\n       this.props.callback.openDocumentCallBack(curFileName);\r\n      }\r\n    }\r\n    if (this.props.isnew) {\r\n      let curFileName: string = this.state.filename;\r\n      if (curFileName === \"\") {\r\n        curFileName = \"bpmn20-2016.stx\";\r\n      }\r\n      this.props.callback.newDocumentCallBack(curFileName);\r\n    }\r\n    if (this.props.isimport) {\r\n      this.props.callback.mergeDocumentCallBack(this.state.filename);\r\n    }\r\n    if (this.props.issaveas) {\r\n      let ext = this.state.istemplate ? \".stx\" : \".sdx\";\r\n      this.props.callback.saveAsDocumentCallBack(this.state.filename, ext);\r\n    }\r\n  }\r\n  private additemX = () => {\r\n    let sel = this.state.sel.getSelection();\r\n    if (sel.length > 0) {\r\n      let item = this.state.sel.getSelection()[0] as IListItem;\r\n      //console.debug(item);\r\n      if (item !== null) {\r\n        if (this.props.isopen) {\r\n          this.props.callback.openDocumentCallBack(item.filename);\r\n        }\r\n        if (this.props.isnew) {\r\n          this.props.callback.newDocumentCallBack(item.filename);\r\n        }\r\n        if (this.props.isimport) {\r\n          this.props.callback.mergeDocumentCallBack(this.state.filename);\r\n        }\r\n        if (this.props.issaveas) {\r\n          let ext = this.state.istemplate ? \".stx\" : \".sdx\";\r\n          this.props.callback.saveAsDocumentCallBack(item.filename, ext);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  public render(): React.ReactElement<ISemTalkOpenProps> {\r\n    let r: React.ReactElement<ISemTalkOpenProps>;\r\n    let lbl = \"\";\r\n\r\n    r = <Fabric>\r\n      <CommandBar\r\n        items={this.commands}\r\n      ></CommandBar>\r\n      {!this.props.isnew && !this.props.isopen &&\r\n        <Stack horizontal tokens={{ childrenGap: 10 }}>\r\n          <TextField label={lbl} value={this.state.filename} readOnly={this.props.isopen} onChange={(_ev, a) => {\r\n            if (a !== undefined)\r\n              this.setState({ filename: a });\r\n          }} />\r\n          <Checkbox checked={this.state.istemplate}\r\n            label={this.props.semtalk.getResStr(\"STRNEWTEMPCAP\").replace(\":\", \"\")}\r\n            onChange={(_ev: any, isChecked: boolean | undefined) => {\r\n              if (isChecked !== undefined) {\r\n                this.setState({ istemplate: !this.state.istemplate });\r\n              }\r\n            }}>\r\n          </Checkbox>\r\n        </Stack>\r\n      }\r\n      {!this.props.isnew && this.state.items.length>0 &&\r\n        <DetailsList\r\n          items={this.state.items}\r\n          compact={false}\r\n          columns={this.state.columns}\r\n          selectionMode={SelectionMode.single}\r\n          layoutMode={DetailsListLayoutMode.justified}\r\n          selection={this.state.sel}\r\n          onItemInvoked={this._onItemInvoked}\r\n          checkboxVisibility={CheckboxVisibility.hidden}\r\n          isHeaderVisible={true}\r\n        />\r\n      }\r\n      {(this.props.isnew) &&\r\n        <DetailsList\r\n          items={this.state.items}\r\n          compact={false}\r\n          columns={this._newcolumns}\r\n          selectionMode={SelectionMode.single}\r\n          layoutMode={DetailsListLayoutMode.justified}\r\n          selection={this.state.sel}\r\n          onItemInvoked={this._onItemInvoked}\r\n          checkboxVisibility={CheckboxVisibility.hidden}\r\n          isHeaderVisible={false}\r\n        />\r\n      }\r\n    </Fabric>;\r\n    // console.debug(\"r: \", r.toString(), r);\r\n    return r;\r\n  }\r\n}\r\n","import * as React from 'react';\nimport styles from './SemTalkRefinements.module.scss';\nimport {\n  Selection, IColumn, DetailsList, DetailsListLayoutMode,\n  CheckboxVisibility, IDropdownOption, CommandBar,\n  DefaultButton, ComboBox, Dropdown, TextField, Stack,\n  IComboBox, IComboBoxOption\n} from 'office-ui-fabric-react';\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\n\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { SelectionMode, ISelection } from 'office-ui-fabric-react/lib/utilities/selection';\n\nimport { IObjectBase, ISemTalkObject, ISemTalkDiagram, ISemTalkInstance,\n  SemTalkBaseConstant } from \"../../application/tbase/Interface\";\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n//import { any } from '@microsoft/sp-webpart-base';\n//import { SetContext } from '../../semtalkportal/restinterface';\nimport { Guid } from \"guid-typescript\";\n///import * as strings from 'SemTalkStrings';\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\nimport { SemTalkOpen } from '../stfileopen/SemTalkOpen';\nimport { PanelType, Panel } from 'office-ui-fabric-react/lib/Panel';\nimport { IMongoOption } from '../../SemTalkMongoServer';\nimport { Process_ElementName } from '../../application/semtalklistener/processInterface';\n\n\nexport interface ISemTalkRefinementTabProps {\n  // title?: string;\n  // description?: string;\n  semtalk: IVisioRDFS;\n  context?: any;\n  site?: string;\n  library?: string;\n  templates?: string;\n  spCheckInOut: boolean;\n  mongo: IMongoOption;\n}\nexport interface ISemTalkRefinementTabState {\n  objectid: number;\n  base: IObjectBase;\n  newitem: boolean;\n  extitem: boolean;\n  sel: ISelection;\n  items: IRefinementTab[];\n  refinement: string;\n  refdiag: ISemTalkDiagram | null;\n  refinementtype: string;\n}\ninterface IRefinementTab {\n  ID: number;\n  Object: ISemTalkObject;\n  Refinement: ISemTalkDiagram | null;\n  PropValue: string | undefined;\n  PropValueName: ISemTalkObject | null;\n  PropValueCaption: string | null;\n  _value: string;\n}\nexport class SemTalkRefinementTab extends React.Component<ISemTalkRefinementTabProps, ISemTalkRefinementTabState> {\n  // private _selection: Selection;\n  private object: ISemTalkObject | null = null;\n  private diagrams: IDropdownOption[] = [];\n  private types: IDropdownOption[] = [];\n  public callback: Guid;\n\n  constructor(props: ISemTalkRefinementTabProps) {\n    super(props);\n    this.callback = Guid.create();\n    console.debug(\"showRefinementTab\");\n    let rt = this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLProc);\n    if (this.props.semtalk.page)\n      rt = this.props.semtalk.page.ClassOf().ObjectName;\n    this.state = {\n      objectid: -1,\n      items: [],\n      sel: new Selection({}),\n      newitem: false,\n      extitem: false,\n      base: this.props.semtalk.base,\n      refinement: \"\",\n      refinementtype: rt,\n      refdiag: null\n    };\n  }\n  private resetState = () => {\n    this.setState({\n      objectid: -1,\n      items: [],\n      newitem: false,\n      extitem: false,\n      base: this.props.semtalk.base\n    });\n  }\n  private mounted: boolean = false;\n\n  public async componentDidMount() {\n    this.mounted = true;\n    let oid: number = getObject();\n    this.diagrams.push({ key: \"\", text: \"\" });\n    for (const diag of this.state.base.AllDiagrams()) {\n      let text = diag.ObjectCaption;\n      this.diagrams.push({ key: diag.ObjectName, text: text });\n    }\n    for (const diagtype of this.state.base.AllDiagramTypes()) {\n      let text = diagtype.ObjectCaption;\n      this.types.push({ key: diagtype.ObjectName, text: text });\n    }\n\n    if (oid > 0) {\n      this.loadObject(oid);\n    }\n    this.setState({ newitem: false });\n    addCallBack(this);\n\n  }\n  public componentWillUnmount() {\n    this.mounted = false;\n    removeCallBack(this);\n    this.object = null;\n  }\n\n  private loadObject(id: number) {\n    this.object = this.state.base.FindObjectByID(id);\n    if (this.object !== null) {\n      let ref = \"\";\n      if (this.object.Refinement !== null) {\n        ref = this.object.Refinement.ObjectName;\n      } else {\n        if (this.object.ExtRefinement !== null) {\n          ref = this.object.ExtRefinement;\n        } else {\n          if (this.object.ObjectBase.IsInstance(this.object)) {\n            let ins = this.object as ISemTalkInstance;\n            ref = ins.ClassOf().ID2Name;\n          } else {\n            ref = this.object.ID2Name;\n          }\n        }\n      }\n      this.setState({ objectid: id, refinement: ref, items: this.getItems(this.object), refdiag: this.object.Refinement });\n    }\n  }\n\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    try {\n      md = JSON.parse(e.data);\n      var mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkNavigationEvent.gotoObject:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n          // this.forceUpdate();\n        }\n        break;\n      case SemTalkNavigationEvent.gotoNode:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n    }\n  }\n  private getItems(obj: ISemTalkObject): IRefinementTab[] {\n    let items: IRefinementTab[] = [];\n    let diag = obj.Refinement;\n    if (diag !== null) {\n      this.newitem.type = diag.ClassOf().ObjectName;\n      let item: IRefinementTab = {\n        ID: items.length,\n        // PropName: assoc.ClassOf().ObjectName,\n        Object: obj,\n        Refinement: diag,\n        // PropType: SemTalkType,\n        PropValue: diag.ObjectName,\n        PropValueName: diag,\n        PropValueCaption: diag.ObjectCaption,\n        // _label: assoc.ClassOf().ID2NameNsp(),\n        _value: diag.ID2NameNsp()\n      };\n      items.push(item);\n    }\n    let extdiag = obj.ExtRefinement;\n    if (extdiag !== null) {\n      let item: IRefinementTab = {\n        ID: items.length,\n        // PropName: assoc.ClassOf().ObjectName,\n        Object: obj,\n        Refinement: null,\n        // PropType: SemTalkType,\n        PropValue: extdiag,\n        PropValueName: null,\n        PropValueCaption: extdiag,\n        // _label: assoc.ClassOf().ID2NameNsp(),\n        _value: extdiag\n      };\n      items.push(item);\n    }\n    return items;\n  }\n\n  private _columns: IColumn[] = [\n    {\n      key: 'Value',\n      name: this.props.semtalk.getResStrListener(\"STRDLHTMLOUTLIN\"),\n      fieldName: 'Value',\n      minWidth: 200,\n      isMultiline: false,\n      onRender: (item: IRefinementTab, _index?: number, _column?: IColumn) => {\n        //  let cap = item.PropValue;\n        //   let lbl = item.Refinement.ObjectCaption;\n        let r: any;\n        if (item.Refinement !== null) {\n          r = <TextField value={item.PropValue} readOnly={true} label={this.props.semtalk.getResStrListener(\"STRDLGTABREF\")} onChange={(_ev, _a) => { }}></TextField>;\n        } else {\n          r = <TextField value={item.PropValue} readOnly={true} label={this.props.semtalk.getResStrListener(\"STRDLHTMLOUTEXT\")} onChange={(_ev, _a) => { }}></TextField>;\n        }\n        // return <span>{cap}</span>;\n        return r;\n      }\n    }\n  ];\n\n  private newitem = {\n    title: \"\",\n    oldtitle: \"\",\n    label: \"\",\n    language: \"\",\n    type: \"Refinement\"\n  };\n\n  private commands = [\n    {\n      key: 'Add',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDNE\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Add'\n      },\n      onClick: (): void => {\n        this.additem();\n      }\n    },\n    {\n      key: 'Extern',\n      name: this.props.semtalk.getResStrListener(\"STRDLHTMLEXTERNAL\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Add'\n      },\n      onClick: () => {\n        this.addextitem();\n      }\n    },\n    {\n      key: 'Delete',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Delete'\n      },\n      onClick: (): void => {\n        this.deleteitem();\n      }\n    },\n    // {\n    //   key: 'Open',\n    //   name: this.props.semtalk.getResStrListener(\"STRDLGCMDOP\"),\n    //   //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n    //   iconProps: {\n    //     iconName: 'Down'\n    //   },\n    //   onClick: (): void => {\n    //     this.openitem();\n    //   }\n    // }\n  ];\n\n  private additem = (): void => {\n    this.newitem.label = \"\";\n    this.newitem.language = \"\";\n    this.newitem.title = this.state.refinement;\n    this.newitem.oldtitle = \"\";\n    // this.newitem.type = \"Refinement\";\n    this.setState({ newitem: true });\n  }\n  private addextitem = (): void => {\n    // this.editItem();\n    this.newitem.label = \"\";\n    this.newitem.language = \"\";\n    this.newitem.title = \"\";\n    this.newitem.oldtitle = \"\";\n    //  this.newitem.type = \"Refinement\";\n    this.setState({ extitem: true });\n  }\n  // private openitem = (): void => {\n  //   let item = this.state.sel.getSelection()[0] as IRefinementTab;\n  //   if (item !== null) {\n  //     if (item.PropValue !== undefined)\n  //       window.open(item.PropValue);\n  //   }\n  // }\n\n  private deleteitem = (): void => {\n    let item = this.state.sel.getSelection()[0] as IRefinementTab;\n    if (item !== null && item !== undefined) {\n      if (this.object !== null) {\n        if (item.PropValue !== undefined)\n          this.object.Refinement = null;\n        this.setState({ newitem: false, extitem: false, items: this.getItems(this.object) });\n      }\n    }\n  }\n  private _onItemInvoked(item: IRefinementTab): void {\n    if (item.PropValue !== undefined)\n      window.open(item.PropValue);\n  }\n  // private editItem = (): void => {\n  //   let item = this.state.sel.getSelection()[0] as IRefinementTab;\n  //   if (item !== null) {\n  //     if (item.PropValue !== undefined) {\n  //       this.newitem.title = item.PropValue;\n  //       this.newitem.oldtitle = item.PropValue;\n  //     }\n  //     this.newitem.label = item.Refinement.GetValue(\"label\");\n  //     //  this.newitem.language = item.Refinement.GetValue(\"namespace\");\n  //     //  this.newitem.type = (item.Refinement.ToObject as ISemTalkInstance).ClassOf().ObjectName;\n  //     this.setState({ newitem: true });\n  //   }\n  // }\n  private cancelnew = (): void => {\n    this.setState({ newitem: false, extitem: false });\n  }\n  private addnewitem = (): void => {\n    // let t = this.newitem.title;\n    let ref = this.state.refinement;\n    if (ref.length > 0) {\n      if (this.object !== null) {\n        if (this.object && this.state.refdiag) {\n          this.object.Refinement = this.state.refdiag;\n        } else {\n          let diag = this.object.ObjectBase.FindDiagram(ref);\n          if (diag === null) {\n            let page = this.props.semtalk.page;\n            if (page) {\n              let ptype = page.ClassOf();\n              diag = ptype.MakeInstance(ref);\n            }\n          }\n          if (diag !== null) {\n            this.object.Refinement = diag;\n            diag.SetValue(SemTalkBaseConstant.SLMXGAttribute, \n              SemTalkBaseConstant.SLMXGPagePrefix + diag.ID);\n          }\n        }\n        //  this.object.Refinement=(t, this.newitem.label, this.newitem.language, undefined, this.newitem.type);\n        this.setState({ newitem: false, items: this.getItems(this.object) });\n      }\n    } else {\n      this.setState({ newitem: false });\n    }\n  }\n  public openDocumentCallBack = async (filename: string) => {\n    if (this.object !== null) {\n      this.object.ExtRefinement = filename;\n      this.setState({ extitem: false, items: this.getItems(this.object) });\n    }\n  }\n  private _closeFileDialog = (): void => {\n    this.setState({ extitem: false });\n  }\n  public render(): React.ReactElement<ISemTalkRefinementTabProps> {\n    // let val: any[] = this.getItems();\n    let r: React.ReactElement<ISemTalkRefinementTabProps>;\n    // let val: any[] = this.state.items;\n    // this._selection = new Selection({});\n    // let item = this.newitem;\n    // <div className={styles.semTalkRefinement}><div className={styles.pivottab}></div></div>\n    const stackTokens = { childrenGap: 10 };\n    r = <Fabric>\n        <CommandBar\n          items={this.commands} id=\"STButtons\"\n        ></CommandBar>\n        <div className={styles.semTalkRefinement} id=\"spfxSTRefinementsTest\"><div className={styles.pivottab}></div></div>\n        {this.state.newitem && !this.state.extitem &&\n          <div>\n            <Stack tokens={stackTokens}>\n              <ComboBox id=\"spfxSTRefinement\" text={this.state.refinement}\n                label={this.props.semtalk.getResStrListener(\"STRDLGNAM\")}\n                options={this.diagrams}\n                allowFreeform\n                //  autoComplete=\"on\"\n                onChange={(_event: React.FormEvent<IComboBox>, option?: IComboBoxOption, _index?: number, value?: string) => {\n                  if (option !== undefined) {\n                    let diag = this.props.semtalk.base.FindDiagram(option.text);\n                    this.setState({ refinement: option.text, refdiag: diag });\n                  } else {\n                    if (value !== undefined)\n                      this.setState({ refinement: value, refdiag: null });\n                  }\n                }}></ComboBox>\n              {this.types.length > 1 &&\n                <Dropdown id=\"spfxSTRefinementType\"\n                  label={this.props.semtalk.getResStrListener(\"STRDLGCLATTTYP\")}\n                  defaultSelectedKey={this.state.refinementtype}\n                  // selectedKey={this.newitem.type}\n                  options={this.types}\n                  onChange={(_ev, a) => {\n                    if (a !== undefined)\n                      this.setState({ refinementtype: a.key.toString() });\n                  }}\n                />\n              }\n            </Stack>\n            <div className={styles.semTalkRefinement}><div className={styles.pivottab}></div></div>\n            <DefaultButton id=\"spfxSTRefinementsOK\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDOK\")} onClick={this.addnewitem} />\n            <DefaultButton id=\"spfxSTRefinementsCA\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\n          </div>\n        }\n        {!this.state.newitem && !this.state.extitem &&\n          <div id=\"spfxSTRefinements\">\n            <DetailsList\n              items={this.state.items}\n              compact={true}\n              columns={this._columns}\n              selectionMode={SelectionMode.single}\n              layoutMode={DetailsListLayoutMode.justified}\n              selection={this.state.sel}\n              checkboxVisibility={CheckboxVisibility.hidden}\n              isHeaderVisible={false}\n              onItemInvoked={this._onItemInvoked}\n            />\n          </div>\n        }\n        {\n          this.state.extitem &&\n          <Panel isOpen={this.state.extitem}\n            onDismiss={() => this._closeFileDialog()}\n            isBlocking={true}\n            // headerText={this.state.semtalk.getResStrListener(\"STRDLHTMLPROPS\")}\n            type={PanelType.medium}\n            headerText={this.props.semtalk.getResStrListener(\"STRDLHTMLOUTEXT\")}\n          >\n            {/* {this.props.context && this.props.site && this.props.library && this.props.templates && */}\n              <SemTalkOpen context={this.props.context}\n                semtalk={this.props.semtalk}\n                callback={this}\n                site={this.props.site}\n                library={this.props.library}\n                templates={this.props.templates}\n                isopen={true}\n                isnew={false}\n                isimport={false}\n                issaveas={false}\n                title={this.props.semtalk.getResStrListener(\"STRDLGCMDOK\")}\n                filename={\"\"}\n                template={\"\"}\n                spCheckInOut={this.props.spCheckInOut}\n                mongo={this.props.mongo}\n              />\n            {/* } */}\n          </Panel>\n        }\n    </Fabric>;\n    return r;\n  }\n}\n","import * as React from 'react';\r\nimport styles from './SemTalkGeneral.module.scss';\r\nimport {\r\n  TextField, Stack, Dropdown, IDropdownOption,\r\n  ComboBox, IComboBox, IComboBoxOption, Label\r\n} from 'office-ui-fabric-react'; //IStackStyles\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport {\r\n  IObjectBase, ISemTalkObject, ISemTalkInstance,\r\n  ISemTalkSystemClass, ISemTalkBusinessClass, ISemTalkDiagram,\r\n  SemTalkBaseConstant, SemTalkType, ModelAttribute, SemTalkRelation\r\n} from \"../../application/tbase/Interface\";\r\n\r\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\n//import { any } from '@microsoft/sp-webpart-base';\r\n//import { SetContext } from '../../semtalkportal/restinterface';\r\nimport { Guid } from \"guid-typescript\";\r\n// import * as strings from 'SemTalkStrings';\r\nimport { IVisioRDFS, SemTalkNavigationEvent, SemTalkStencil } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { SemTalkAttachmentTab } from '../stattachments/SemTalkAttachments';\r\nimport { SemTalkRefinementTab } from '../strefinements/SemTalkRefinements';\r\n// import EPC_SHAPES from '../tseditor/shape-config/epc-jti-shapes';\r\nimport { IMongoOption } from '../../SemTalkMongoServer';\r\nimport { Process_ElementName } from '../../application/semtalklistener/processInterface';\r\n\r\n\r\nexport interface ISemTalkGeneralTabProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  context?: any;\r\n  site?: string;\r\n  library?: string;\r\n  templates?: string;\r\n  stencil?: SemTalkStencil;\r\n  spCheckInOut: boolean;\r\n  mongo: IMongoOption;\r\n}\r\nexport interface ISemTalkGeneralTabState {\r\n  objectid: number;\r\n  hasError: boolean;\r\n  base: IObjectBase;\r\n  classname: string;\r\n  classes: IDropdownOption[];\r\n  sysclasses: IDropdownOption[];\r\n  isdataobject: boolean;\r\n  isusernumber: boolean;\r\n  systemclass: ISemTalkSystemClass | null;\r\n  logourl: string;\r\n  objectname: string;\r\n  objectnamespace: string;\r\n  comment: string;\r\n  usernumber: string;\r\n  infotype: string;\r\n  ishyperlinksvisible: boolean;\r\n  isclassvisible: boolean;\r\n  isnamespacevisible: boolean;\r\n  isrefinementvisible: boolean;\r\n}\r\nexport class SemTalkGeneralTab extends React.Component<ISemTalkGeneralTabProps, ISemTalkGeneralTabState> {\r\n  private object: ISemTalkObject | null = null;\r\n  public callback: Guid;\r\n  private isinst: boolean = false;\r\n\r\n\r\n  constructor(props: ISemTalkGeneralTabProps) {\r\n    super(props);\r\n    console.debug(\"showGeneralTab\");\r\n    this.callback = Guid.create();\r\n    this.state = {\r\n      objectid: -1,\r\n      hasError: false,\r\n      base: this.props.semtalk.base,\r\n      classname: \"\",\r\n      comment: \"\",\r\n      classes: [],\r\n      sysclasses: [],\r\n      isdataobject: false,\r\n      isusernumber: false,\r\n      systemclass: null,\r\n      logourl: \"\",\r\n      objectname: \"\",\r\n      objectnamespace: \"\",\r\n      usernumber: \"\",\r\n      infotype: \"\",\r\n      ishyperlinksvisible: true,\r\n      isclassvisible: false,\r\n      isnamespacevisible: false,\r\n      isrefinementvisible: false\r\n    };\r\n  }\r\n  private mounted: boolean = false;\r\n\r\n  private resetState = () => {\r\n    this.setState({\r\n      objectid: -1,\r\n      hasError: false,\r\n      base: this.props.semtalk.base,\r\n      classname: \"\",\r\n      classes: [],\r\n      sysclasses: [],\r\n      isdataobject: false,\r\n      isusernumber: false,\r\n      systemclass: null,\r\n      logourl: \"\",\r\n      objectname: \"\",\r\n      objectnamespace: \"\",\r\n      comment: \"\",\r\n      usernumber: \"\",\r\n      infotype: \"\",\r\n      ishyperlinksvisible: true,\r\n      isclassvisible: false,\r\n      isnamespacevisible: false,\r\n      isrefinementvisible: false\r\n    });\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    // if (this.props.context && this.props.filter) {\r\n    //   SetContext(this.props.context, this.props.filter, this.props.token, this.props.service);\r\n    // }\r\n    this.mounted = true;\r\n    let oid: number = getObject();\r\n    if (oid > 0) {\r\n      this.loadObject(oid);\r\n    }\r\n    addCallBack(this);\r\n  }\r\n  public saveObject() {\r\n    if (this.object && !this.state.isdataobject && this.isinst) {\r\n      let inst = this.object as ISemTalkInstance;\r\n      if (inst.ClassOf().ObjectName !== this.state.classname) {\r\n        let cla = this.object.ObjectBase.FindClass(this.state.classname);\r\n        if (cla !== null) {\r\n          inst.SetClass(cla);\r\n        }\r\n      }\r\n    }\r\n    if (this.object && !this.state.isdataobject &&\r\n      (this.object.ObjectCaption !== this.state.objectname ||\r\n        this.object?.ID2Namespace !== this.state.objectnamespace)) {\r\n      // let oldnsp = this.object.ID2Namespace;\r\n      // if (oldnsp.length > 0) {\r\n      //   oldnsp = oldnsp + \"#\";\r\n      // }\r\n      let nsp = this.state.objectnamespace;\r\n      if (nsp.length > 0) {\r\n        nsp = nsp + \"#\";\r\n      }\r\n\r\n      if (this.object.ObjectBase.FindObject(this.object.ObjectType, nsp + this.state.objectname) !== null) {\r\n        alert(this.props.semtalk.getResStrListener(\"STRERREXISTS\") + nsp + this.state.objectname + \"'\");\r\n      } else {\r\n        if (this.object.ObjectBase.IsDiagram(this.object)) {\r\n          this.props.semtalk.RenameDiagram(this.object, nsp + this.state.objectname);\r\n        } else {\r\n          this.props.semtalk.RenameObject(this.object, nsp + this.state.objectname, null);\r\n        }\r\n      }\r\n    }\r\n    if (this.object && this.state.isdataobject && this.isinst && this.state.infotype.length > 0) {\r\n      this.props.semtalk.EnsureBORelation(this.object as ISemTalkInstance, this.state.infotype);\r\n    }\r\n\r\n  }\r\n  public componentWillUnmount() {\r\n    this.saveObject();\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n    this.object = null;\r\n  }\r\n\r\n  private loadObject(id: number) {\r\n    let tb = this.state.base;\r\n    this.isinst = false;\r\n    const newobject = tb.FindObjectByID(id);\r\n    if (newobject !== null) {\r\n      const obj = newobject;\r\n      if (obj.ObjectType === SemTalkType.SemTalkInstance &&\r\n        (obj as ISemTalkInstance).ClassOf().ObjectName === tb.GetModelAttribute(ModelAttribute.SLComment)) {\r\n        const defof = tb.GetModelAttribute(ModelAttribute.SLCommentOf);\r\n        for (let c of obj.LinkedObjects(defof, false, SemTalkRelation.SemTalkSystemRelation)) {\r\n          this.saveObject();\r\n          this.resetState();\r\n          this.loadObject(c.ID);\r\n          return;\r\n        }\r\n      }\r\n      this.object = newobject;\r\n      let isdo = false;\r\n      let isun = false;\r\n      // let logourl: string = \"\";\r\n      let infotype = \"\";\r\n      let usernumber = \"\";\r\n      let cname = \"\";\r\n      let clist: IDropdownOption[] = [];\r\n      let sclist: IDropdownOption[] = [];\r\n      let isclassvisible = true;\r\n      let isdiagram = false;\r\n      let scl = this.object.SystemClass();\r\n      if (scl) {\r\n        let res = tb.FindSystemClass(tb.GetModelAttribute(Process_ElementName.SLResource));\r\n        if (res && scl.IsParent(res))\r\n          scl = res;\r\n      }\r\n\r\n      let isrefinementvisible = true;\r\n      let ishyperlinksvisible = false;\r\n      let isnamespacevisible = false;\r\n      if (scl) {\r\n        isrefinementvisible = scl.Refineable;\r\n        if (scl.InstDialog) ishyperlinksvisible = scl.InstDialog.CheckAttachments;\r\n      }\r\n      if (tb.IsInstance(this.object)) {\r\n        this.isinst = true;\r\n        let cl = (this.object as ISemTalkInstance).ClassOf();\r\n        cname = cl.ObjectName;\r\n        let dataobject = tb.FindSystemClass(tb.GetModelAttribute(Process_ElementName.SLDataObject));\r\n        if (dataobject !== null) {\r\n          isdo = (this.object as ISemTalkInstance).IsInstance(dataobject);\r\n          if (isdo) {\r\n            let infos = this.object.LinkedObjects(tb.GetModelAttribute(Process_ElementName.SLInfoType));\r\n            if (infos.length > 0) {\r\n              infotype = (infos[0] as ISemTalkBusinessClass).ObjectCaption;\r\n            }\r\n          }\r\n        }\r\n        if (scl) {\r\n          isun = (scl.FindAttribute(SemTalkBaseConstant.SLUserNumber) !== null);\r\n          if (!isun) {\r\n            for (let su of scl.SuperClasses()) {\r\n              if (!isun) {\r\n                isun = (su.FindAttribute(SemTalkBaseConstant.SLUserNumber) !== null);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (isun) {\r\n          usernumber = this.object.GetValue(SemTalkBaseConstant.SLUserNumber);\r\n        }\r\n        let isoo = false;\r\n        if (scl !== null) {\r\n          isoo = scl.OnceOnly;\r\n          if (scl.InstDialog !== null) {\r\n            ishyperlinksvisible = scl.InstDialog.CheckAttachments;\r\n            isclassvisible = scl.InstDialog.CheckClass;\r\n            isnamespacevisible = scl.InstDialog.CheckNamespace;\r\n          }\r\n        }\r\n        if (!isoo && !isdo) {\r\n          isdiagram = tb.IsDiagram(this.object);\r\n          if (isdiagram && (this.object as ISemTalkDiagram).Contents.length === 0) {\r\n            for (const atype of tb.AllDiagramTypes()) {\r\n              sclist.push({ key: atype.ObjectName, text: atype.ObjectCaption });\r\n            }\r\n          }\r\n        }\r\n        if (scl && !isdiagram && !isoo && !isdo) {\r\n          sclist.push({ key: scl.ObjectName, text: scl.ObjectCaption });\r\n          for (const atype of scl.AllSubClasses()) {\r\n            sclist.push({ key: atype.ObjectName, text: atype.ObjectCaption });\r\n          }\r\n        }\r\n        if (isdo) {\r\n          let inf = tb.FindSystemClass(tb.GetModelAttribute(Process_ElementName.SLInformation));\r\n          if (inf !== null)\r\n            for (const atype of inf.AllSubClasses()) {\r\n              clist.push({ key: atype.ObjectName, text: atype.ObjectCaption });\r\n            }\r\n        }\r\n        if (scl === null) {\r\n          for (const atype of tb.AllClasses()) {\r\n            let ishidden = false;\r\n            if (this.state.base.IsSystemClass(atype)) {\r\n              ishidden = (atype as ISemTalkSystemClass).Hide;\r\n            }\r\n            if (!ishidden)\r\n              sclist.push({ key: atype.ObjectName, text: atype.ObjectCaption });\r\n          }\r\n        }\r\n      }\r\n      // let hl = false;\r\n      // if (scl) hl=scl.InstDialog?.CheckAttachments;\r\n      this.setState({\r\n        objectid: id,\r\n        systemclass: scl,\r\n        isdataobject: isdo,\r\n        isusernumber: isun,\r\n        classes: clist,\r\n        sysclasses: sclist,\r\n        // logourl: logourl,\r\n        classname: cname,\r\n        objectname: this.object.ObjectCaption,\r\n        objectnamespace: this.object.ID2Namespace,\r\n        comment: this.object.Comment,\r\n        infotype: infotype,\r\n        usernumber: usernumber,\r\n        ishyperlinksvisible: ishyperlinksvisible,\r\n        isclassvisible: isclassvisible,\r\n        isrefinementvisible: isrefinementvisible,\r\n        isnamespacevisible: isnamespacevisible\r\n      });\r\n    } else {\r\n      this.object = null;\r\n    }\r\n  }\r\n\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoObject:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.saveObject();\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.saveObject();\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  public componentDidCatch(_error: any, _info: any) {\r\n    this.setState({ hasError: true });\r\n  }\r\n  // public getSnapshotBeforeUpdate(prevProps: any, prevState: any) {\r\n\r\n  // }\r\n  private onCommentChange = (_ev: any, newText: string | undefined): void => {\r\n    if (this.object && newText !== undefined) {\r\n      this.object.Comment = newText;\r\n      this.setState({ comment: newText });\r\n    }\r\n  }\r\n  private onNameChange = (_ev: any, newText: string | undefined): void => {\r\n    if (this.object && newText) {\r\n      this.setState({ objectname: newText });\r\n    }\r\n  }\r\n  private onNamespaceChange = (_ev: any, newText: string | undefined): void => {\r\n    if (this.object && newText !== undefined) {\r\n      this.setState({ objectnamespace: newText });\r\n    }\r\n  }\r\n  private onUserNumberChange = (_ev: any, newText: string | undefined): void => {\r\n    if (this.object && newText !== undefined) {\r\n      this.setState({ usernumber: newText });\r\n      this.object.SetValue(SemTalkBaseConstant.SLUserNumber, newText);\r\n    }\r\n  }\r\n\r\n  public render(): React.ReactElement<ISemTalkGeneralTabProps> {\r\n    // let val: any[] = this.getItems();\r\n    let r: React.ReactElement<ISemTalkGeneralTabProps>;\r\n    let isreadonly: boolean = false;\r\n    //  let slabel = \"\";\r\n    if (this.object) {\r\n      // let sc = this.object.SystemClass();\r\n      // if (sc !== null) {\r\n      //   slabel = sc.ObjectCaption;\r\n      // } else {\r\n      //   slabel = this.object.ObjectBase.SemTalkTypeName(this.object.ObjectType);\r\n      // }\r\n      if (this.object.ObjectBase.IsInstance(this.object)) {\r\n        isreadonly = (this.object as ISemTalkInstance).ClassOf().Composition() !== null;\r\n      }\r\n      if (!isreadonly) {\r\n        if (this.object.ObjectBase.IsAssociation(this.object)) {\r\n          isreadonly = true;\r\n        }\r\n\r\n      }\r\n    }\r\n    // }\r\n    //   r = <Fabric>\r\n    //  <div className={styles.semTalkProp}>\r\n    //   <div className={styles.container}>\r\n    //     {this.props.title && <div className={styles.row}>\r\n    //       <div className={styles.column}>\r\n    //         <div className={styles.title}>{this.props.title}</div>\r\n    //       </div>\r\n    //     </div>\r\n    //     }\r\n    //     {this.object && <div className={styles.row}>\r\n    //       <div className={styles.column}>\r\n    r = <Fabric>\r\n      <div className={styles.semTalkGeneral} id=\"stGeneralTest\"><div className={styles.pivottab}></div></div>\r\n      {this.object &&\r\n        <Stack>\r\n          {/* <Stack horizontal>\r\n            <Text variant={'xLarge'}>{slabel}</Text>\r\n            {this.state.logourl.length > 0 &&\r\n              <Separator>\r\n                <Image className={styles.imagetab} src={this.state.logourl} alt=\"\" width={25} height={25}></Image>\r\n              </Separator>\r\n            }\r\n          </Stack> */}\r\n          {!this.state.isdataobject &&\r\n            <TextField id=\"stTextfield\" label={this.props.semtalk.getResStrListener(\"STRNAME\")} required={!isreadonly} disabled={isreadonly} value={this.state.objectname} onChange={this.onNameChange} />\r\n          }\r\n          {this.state.isnamespacevisible &&\r\n            <TextField id=\"stNamespace\" label={this.props.semtalk.getResStr(\"STRNAMESPACE\")} disabled={isreadonly} value={this.state.objectnamespace} onChange={this.onNamespaceChange} />\r\n          }\r\n          {this.state.isdataobject &&\r\n            <ComboBox id=\"stCombobox\" text={this.state.infotype} label={this.props.semtalk.getResStrListener(\"STRNAME\")}\r\n              options={this.state.classes}\r\n              allowFreeform\r\n              //  autoComplete=\"on\"\r\n              onChange={(_event: React.FormEvent<IComboBox>, option?: IComboBoxOption, _index?: number, value?: string) => {\r\n                if (option !== undefined) {\r\n                  this.setState({ infotype: option.text });\r\n                } else {\r\n                  if (value !== undefined)\r\n                    this.setState({ infotype: value });\r\n                }\r\n              }}></ComboBox>\r\n          }\r\n          {this.state.isusernumber &&\r\n            <TextField id=\"stIndexField\" label={this.props.semtalk.getResStrListener(\"STRBONNUM\")} defaultValue={this.state.usernumber} onChange={this.onUserNumberChange} />\r\n          }\r\n          {this.isinst && this.state.isclassvisible && this.state.sysclasses.length > 1 &&\r\n            <Dropdown\r\n              id=\"stDropdown\"\r\n              label={this.props.semtalk.getResStrListener(\"STRDLHTMLOUTCLA\")}\r\n              defaultSelectedKey={this.state.classname}\r\n              options={this.state.sysclasses}\r\n              onChange={(_ev, a) => {\r\n                if (a !== undefined)\r\n                  this.setState({ classname: a.key as string });\r\n              }}\r\n            />\r\n          }\r\n          <TextField id=\"stCommentField\" label={this.props.semtalk.getResStrListener(\"STRCOMMENT\") + \" \"} value={this.state.comment}\r\n            multiline rows={5} autoAdjustHeight onChange={this.onCommentChange} />\r\n        </Stack>\r\n      }\r\n      <div className={styles.semTalkGeneral}><div className={styles.pivottab}></div></div>\r\n      {this.state.isrefinementvisible &&\r\n        <div>\r\n          <Label id=\"stRefinementLabel\">{this.props.semtalk.getResStrListener(\"STRDLGTABREF\")}</Label>\r\n          <div id=\"stRefinement\">\r\n            <SemTalkRefinementTab semtalk={this.props.semtalk}\r\n              context={this.props.context}\r\n              site={this.props.site}\r\n              library={this.props.library}\r\n              templates={this.props.templates}\r\n              spCheckInOut={this.props.spCheckInOut}\r\n              mongo={this.props.mongo}\r\n            >\r\n            </SemTalkRefinementTab>\r\n          </div>\r\n        </div>\r\n      }\r\n      {this.state.ishyperlinksvisible &&\r\n        <div>\r\n          <Label id=\"stHyperlinkLabel\">{this.props.semtalk.getResStrListener(\"STRDLGFINDATTACH\")}</Label>\r\n          <div id=\"stAttachment\">\r\n            <SemTalkAttachmentTab semtalk={this.props.semtalk} newitem={false}></SemTalkAttachmentTab>\r\n          </div>\r\n        </div>\r\n      }\r\n    </Fabric>;\r\n    return r;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport styles from './SemTalkInheritance.module.scss';\r\nimport {\r\n  Selection, ISelection, IColumn, DetailsList, DetailsListLayoutMode, ComboBox, IComboBox, IComboBoxOption,\r\n  CheckboxVisibility, IDropdownOption, CommandBar, DefaultButton, TextField, Checkbox\r\n} from 'office-ui-fabric-react';\r\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\r\n\r\nimport { ISemTalkClass } from \"../../application/tbase/Interface\";\r\nimport { getObject, addCallBack, removeCallBack, gotoObject } from '../../application/semtalklistener/stglobal';\r\n//import { any } from '@microsoft/sp-webpart-base';\r\n//import { SetContext } from '../../semtalkportal/restinterface';\r\nimport { Guid } from \"guid-typescript\";\r\n///import * as strings from 'SemTalkStrings';\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\r\n\r\nexport interface ISemTalkInheritanceTabProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  // context?: any;\r\n  goodlist?: string[];\r\n  badlist?: string[];\r\n}\r\nexport interface ISemTalkInheritanceTabState {\r\n  objectid: number;\r\n  // base: IObjectBase;\r\n  newitem: boolean;\r\n  items: IInheritanceTab[];\r\n  newitemtitle: string;\r\n  newitemclass: string | null;\r\n  sel: ISelection;\r\n  issuper: boolean;\r\n}\r\ninterface IInheritanceTab {\r\n  ID: number;\r\n  Object: ISemTalkClass;\r\n  Class: ISemTalkClass;\r\n  PropName: string;\r\n  issuper: boolean;\r\n  PropValue: string;\r\n  // _value: string;\r\n}\r\nexport class SemTalkInheritanceTab extends React.Component<ISemTalkInheritanceTabProps, ISemTalkInheritanceTabState> {\r\n  // private _selection: Selection;\r\n  private object: ISemTalkClass | null = null;\r\n  private classes: IDropdownOption[] = [];\r\n  public callback: Guid;\r\n\r\n  constructor(props: ISemTalkInheritanceTabProps) {\r\n    super(props);\r\n    this.callback = Guid.create();\r\n    console.debug(\"showInheritanceTab\");\r\n    this.state = {\r\n      objectid: -1,\r\n      items: [],\r\n      sel: new Selection({}),\r\n      newitem: true,\r\n      // base: this.props.semtalk.base,\r\n      newitemtitle: \"\",\r\n      newitemclass: null,\r\n      issuper: true\r\n    };\r\n  }\r\n  private resetState = () => {\r\n    this.setState({\r\n      objectid: -1,\r\n      items: [],\r\n      newitem: false,\r\n      // base: this.props.semtalk.base,\r\n      newitemtitle: \"\",\r\n      newitemclass: null,\r\n      issuper: true\r\n    });\r\n  }\r\n  private mounted: boolean = false;\r\n\r\n  public async componentDidMount() {\r\n    this.mounted = true;\r\n    let oid: number = getObject();\r\n\r\n    if (oid > 0) {\r\n      this.loadObject(oid);\r\n    }\r\n    this.setState({ newitem: false });\r\n    addCallBack(this);\r\n\r\n  }\r\n  public componentWillUnmount() {\r\n    this.mounted = false;\r\n    removeCallBack(this);\r\n    this.object = null;\r\n  }\r\n\r\n  private loadObject(id: number) {\r\n    let base = this.props.semtalk.base;\r\n    let obj = base.FindObjectByID(id);\r\n    if (!base.IsClass(obj)) {\r\n      return;\r\n    } else {\r\n      this.object = obj as ISemTalkClass;\r\n    }\r\n    if (this.object !== null) {\r\n      this.setState({ objectid: id, items: this.getItems(this.object) });\r\n    }\r\n  }\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoObject:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  private getItems(obj: ISemTalkClass): any[] {\r\n    let items: IInheritanceTab[] = [];\r\n\r\n    let gl: string[] | undefined = this.props.goodlist;\r\n    if (gl === undefined) gl = [];\r\n    let bl: string[] = [];\r\n    if (this.props.badlist !== undefined) bl = this.props.badlist;\r\n\r\n    this.classes = [];\r\n    const sysc = obj.SystemClass();\r\n    if (sysc !== null) { //object has system class\r\n      for (const sc of sysc.AllSubClasses()) { // push all subclasses \r\n        if (sc.ObjectName !== obj.ObjectName)\r\n          this.classes.push({ key: sc.ObjectName, text: sc.ObjectCaption });\r\n      }\r\n    } else { // no system class\r\n      for (const sc of obj.ObjectBase.AllClasses()) { // push all classes\r\n        if (sc.ObjectName !== obj.ObjectName)\r\n          this.classes.push({ key: sc.ObjectName, text: sc.ObjectCaption });\r\n      }\r\n    }\r\n    for (let su of obj.SuperClasses()) {\r\n      let item: IInheritanceTab = {\r\n        ID: items.length,\r\n        PropName: su.ObjectName,\r\n        PropValue: su.ID2NameNsp(),\r\n        Object: obj,\r\n        Class: su,\r\n        issuper: true\r\n      };\r\n      if (gl !== undefined && gl.length > 0) { // push item in good list\r\n        if (gl.indexOf(item.PropName) > -1) {\r\n          items.push(item);\r\n        }\r\n      } else { // no goodlist\r\n        if (bl !== undefined && bl.length > 0) { // push bad list\r\n          if (bl.indexOf(item.PropName) < 0) {\r\n            items.push(item);\r\n          }\r\n        } else { // no list\r\n          items.push(item);\r\n        }\r\n      }\r\n    }\r\n    for (let su of obj.SubClasses()) {\r\n      let item: IInheritanceTab = {\r\n        ID: items.length,\r\n        PropName: su.ObjectName,\r\n        PropValue: su.ID2NameNsp(),\r\n        Object: obj,\r\n        Class: su,\r\n        issuper: false\r\n      };\r\n      if (gl !== undefined && gl.length > 0) {\r\n        if (gl.indexOf(item.PropName) > -1) {\r\n          items.push(item);\r\n        }\r\n      } else {\r\n        if (bl !== undefined && bl.length > 0) {\r\n          if (bl.indexOf(item.PropName) < 0) {\r\n            items.push(item);\r\n          }\r\n        } else {\r\n          items.push(item);\r\n        }\r\n      }\r\n    }\r\n    return items;\r\n  }\r\n  private _columns: IColumn[] = [\r\n    {\r\n      key: 'Value',\r\n      name: 'Value',\r\n      fieldName: 'Value',\r\n      minWidth: 200,\r\n      isMultiline: false,\r\n      onRender: (item: IInheritanceTab, _index?: number, _column?: IColumn) => {\r\n        let r: any;\r\n        if (item.issuper)\r\n          r = <TextField value={item.PropValue} readOnly={true} label={this.props.semtalk.getResStrListener(\"STRDLGCLSUPERCL\")}></TextField>;\r\n        else\r\n          r = <TextField value={item.PropValue} readOnly={true} label={this.props.semtalk.getResStrListener(\"STRDLHTMLOUTSUB\")}></TextField>;\r\n        return r;\r\n      }\r\n    }\r\n  ];\r\n  private editItem = (): void => {\r\n    let item = this.state.sel.getSelection()[0] as IInheritanceTab;\r\n    if (item !== null) {\r\n      this.setState({\r\n        newitem: true,\r\n        newitemtitle: item.PropValue,\r\n        newitemclass: item.Class.ObjectName,\r\n        issuper: item.issuper\r\n      });\r\n    }\r\n  }\r\n  private commands = [\r\n    {\r\n      key: 'Add',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDNE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Add'\r\n      },\r\n      onClick: (): void => {\r\n        this.setState({\r\n          newitem: true,\r\n          newitemtitle: \"\",\r\n          newitemclass: null,\r\n          issuper: true\r\n        });\r\n      }\r\n    },\r\n    {\r\n      key: 'Edit',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDED\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Edit'\r\n      },\r\n      onClick: this.editItem\r\n    },\r\n    {\r\n      key: 'Delete',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Delete'\r\n      },\r\n      onClick: (): void => {\r\n        let item = this.state.sel.getSelection()[0] as IInheritanceTab;\r\n        if (item !== undefined) {\r\n          if (this.object !== null) {\r\n            if (item.Class !== undefined) {\r\n              if (item.issuper) {\r\n                let syscl = this.object.SystemClass();\r\n                if (syscl && syscl.ID === item.Class.ID) {\r\n                  alert(\"You cannot remove the SystemClass!!\");\r\n                  return;\r\n                }\r\n                item.Object.DeleteSubclassOf(item.Class);\r\n              }\r\n              else\r\n                item.Class.DeleteSubclassOf(item.Object);\r\n            }\r\n            this.setState({ newitem: false, items: this.getItems(this.object) });\r\n          }\r\n        }\r\n      }\r\n    },\r\n    {\r\n      key: 'Browse',\r\n      name: this.props.semtalk.getResStrListener(\"STRBROWSE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Diamond'\r\n      },\r\n      onClick: (): void => {\r\n        if (this.state.newitem) return;\r\n        let item = this.state.sel.getSelection()[0] as IInheritanceTab;\r\n        if (item !== undefined) {\r\n          if (this.object !== null) {\r\n            let objectid = 0;\r\n            if (item.issuper) {\r\n              objectid = item.Class.ID;\r\n            } else {\r\n              objectid = item.Class.ID;\r\n            }\r\n            gotoObject(objectid);\r\n          }\r\n        }\r\n      }\r\n    }];\r\n\r\n  private cancelnew = (): void => {\r\n    this.setState({ newitem: false });\r\n  }\r\n  private addnewitem = (): void => {\r\n    let t = this.state.newitemtitle;\r\n    if (this.state.newitemtitle.length > 0) {\r\n      if (this.object !== null) {\r\n        let base = this.props.semtalk.base;\r\n        let tc: ISemTalkClass | null;\r\n        if (this.state.newitemclass !== null) {\r\n          tc = base.FindClass(this.state.newitemclass);\r\n        } else {\r\n          tc = base.FindClass(t);\r\n        }\r\n        if (tc === null) {\r\n          const sysc = this.object.SystemClass();\r\n          if (sysc !== null) {\r\n            if (base.IsBusinessClass(this.object)) {\r\n              tc = base.MakeBusinessClass(t);\r\n            } else {\r\n              tc = base.MakeClass(t);\r\n            }\r\n            if (!tc.IsParent(sysc)) {\r\n              tc.AddSubclassOf(sysc);\r\n            }\r\n          }\r\n        }\r\n        if (tc !== null && tc.ObjectName !== this.object.ObjectName) {\r\n          if (this.state.issuper) {\r\n            if (!tc.IsParent(this.object))\r\n              this.object.AddSubclassOf(tc);\r\n          } else {\r\n            if (!this.object.IsParent(tc))\r\n              tc.AddSubclassOf(this.object);\r\n          }\r\n        }\r\n        this.setState({\r\n          newitem: false,\r\n          newitemtitle: \"\",\r\n          items: this.getItems(this.object)\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        newitem: false,\r\n        newitemtitle: \"\",\r\n      });\r\n    }\r\n  }\r\n  public render(): React.ReactElement<ISemTalkInheritanceTabProps> {\r\n    // let val: any[] = this.getItems();\r\n    let r: React.ReactElement<ISemTalkInheritanceTabProps>;\r\n    // let val: any[] = this.state.items;\r\n    // this._selection = new Selection({\r\n    // });\r\n    r = <Fabric>\r\n      <div id='stInheritance' className={styles.semTalkInheritance}><div className={styles.pivottab}></div></div>\r\n      <CommandBar id='stButtons'\r\n        items={this.commands}\r\n      ></CommandBar>\r\n      <div className={styles.semTalkInheritance}><div className={styles.pivottab}></div></div>\r\n      {this.state.newitem &&\r\n        <div>\r\n          <ComboBox id='stCombobox' text={this.state.newitemtitle} label={this.props.semtalk.getResStrListener(\"STRDLGCLSUPERCL\")}\r\n            options={this.classes} allowFreeform\r\n            required={true}\r\n            //  autoComplete=\"on\"\r\n            onChange={(event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\r\n              if (option !== undefined) {\r\n                this.setState({ newitemclass: option.key as string, newitemtitle: option.text });\r\n              } else {\r\n                if (value !== undefined)\r\n                  this.setState({ newitemtitle: value });\r\n              }\r\n            }}></ComboBox>\r\n          <Checkbox id='stCheckbox' checked={this.state.issuper} label={this.props.semtalk.getResStrListener(\"STRDLGCLSUPERCL\")}\r\n            onChange={(ev: any, checked: boolean | undefined) => {\r\n              if (checked !== undefined) this.setState({ issuper: checked });\r\n            }}></Checkbox>\r\n          <div className={styles.semTalkInheritance}><div className={styles.pivottab}></div></div>\r\n          <DefaultButton id='okButton' text={this.props.semtalk.getResStrListener(\"STRDLGCMDOK\")} onClick={this.addnewitem} />\r\n          <DefaultButton id='cancelButton' text={this.props.semtalk.getResStrListener(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\r\n        </div>\r\n      }\r\n      {!this.state.newitem &&\r\n        <div id=\"stInheritanceList\">\r\n          <DetailsList\r\n            items={this.state.items}\r\n            compact={true}\r\n            columns={this._columns}\r\n            selectionMode={SelectionMode.single}\r\n            layoutMode={DetailsListLayoutMode.justified}\r\n            selection={this.state.sel}\r\n            checkboxVisibility={CheckboxVisibility.hidden}\r\n            isHeaderVisible={false}\r\n          />\r\n        </div>\r\n      }\r\n    </Fabric>;\r\n    return r;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport styles from './SemTalkInstances.module.scss';\r\nimport {\r\n  Selection, ISelection, IColumn, DetailsList, DetailsListLayoutMode, ComboBox, IComboBox, IComboBoxOption,\r\n  CheckboxVisibility, IDropdownOption, CommandBar, DefaultButton, TextField\r\n} from 'office-ui-fabric-react';\r\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\r\n\r\nimport { ISemTalkClass, ISemTalkInstance } from \"../../application/tbase/Interface\";\r\nimport { getObject, addCallBack, removeCallBack, gotoObject } from '../../application/semtalklistener/stglobal';\r\n// import { WebPartContext } from '@microsoft/sp-webpart-base';\r\n//import { SetContext } from '../../semtalkportal/restinterface';\r\nimport { Guid } from \"guid-typescript\";\r\n///import * as strings from 'SemTalkStrings';\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\r\n\r\nexport interface ISemTalkInstancesTabProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  // context?: WebPartContext;\r\n  goodlist?: string[];\r\n  badlist?: string[];\r\n}\r\nexport interface ISemTalkInstancesTabState {\r\n  objectid: number;\r\n  // base: IObjectBase;\r\n  newitem: boolean;\r\n  items: IInstancesTab[];\r\n  newitemtitle: string;\r\n  newitemclass: string | null;\r\n  sel: ISelection;\r\n}\r\ninterface IInstancesTab {\r\n  ID: number;\r\n  Object: ISemTalkClass;\r\n  Instance: ISemTalkInstance;\r\n  PropName: string;\r\n  PropValue: string;\r\n  // _value: string;\r\n  issuper: boolean;\r\n}\r\nexport class SemTalkInstancesTab extends React.Component<ISemTalkInstancesTabProps, ISemTalkInstancesTabState> {\r\n  // private _selection: Selection;\r\n  private object: ISemTalkClass | null = null;\r\n  private instances: IDropdownOption[] = [];\r\n  public callback: Guid;\r\n\r\n  constructor(props: ISemTalkInstancesTabProps) {\r\n    super(props);\r\n    this.callback = Guid.create();\r\n    console.debug(\"showInstancesTab\");\r\n    this.state = {\r\n      objectid: -1,\r\n      items: [],\r\n      sel: new Selection({}),\r\n      newitem: true,\r\n      // base: this.props.semtalk.base,\r\n      newitemtitle: \"\",\r\n      newitemclass: null\r\n    };\r\n  }\r\n  private resetState = () => {\r\n    this.setState({\r\n      objectid: -1,\r\n      items: [],\r\n      newitem: false,\r\n      // base: this.props.semtalk.base,\r\n      newitemtitle: \"\",\r\n      newitemclass: null\r\n    });\r\n  }\r\n  private mounted: boolean = false;\r\n\r\n  public async componentDidMount() {\r\n    this.mounted = true;\r\n    let oid: number = getObject();\r\n\r\n    if (oid > 0) {\r\n      this.loadObject(oid);\r\n    }\r\n    this.setState({ newitem: false });\r\n    addCallBack(this);\r\n\r\n  }\r\n  public componentWillUnmount() {\r\n    this.mounted = false;\r\n    removeCallBack(this);\r\n    this.object = null;\r\n  }\r\n\r\n  private loadObject(id: number) {\r\n    const base = this.props.semtalk.base;\r\n    let obj = base.FindObjectByID(id);\r\n    if (!base.IsClass(obj)) {\r\n      return;\r\n    } else {\r\n      this.object = obj as ISemTalkClass;\r\n    }\r\n    if (this.object !== null) {\r\n      this.setState({ objectid: id, items: this.getItems(this.object) });\r\n    }\r\n  }\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoObject:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  private getItems(obj: ISemTalkClass): any[] {\r\n    let items: IInstancesTab[] = [];\r\n\r\n    let gl: string[] | undefined = this.props.goodlist;\r\n    if (gl === undefined) gl = [];\r\n    let bl: string[] = [];\r\n    if (this.props.badlist !== undefined) bl = this.props.badlist;\r\n    this.instances = [];\r\n    const sysc = obj.SystemClass();\r\n    if (sysc !== null)\r\n      for (const sc of sysc.AllInstances()) {\r\n        this.instances.push({ key: sc.ObjectName, text: sc.ObjectCaption });\r\n      }\r\n    for (let su of obj.AllInstances()) {\r\n      let item: IInstancesTab = {\r\n        ID: items.length,\r\n        PropName: su.ObjectName,\r\n        PropValue: su.ID2NameNsp(),\r\n        Object: obj,\r\n        Instance: su,\r\n        issuper: (su.ClassOf().ID === obj.ID)\r\n      };\r\n      if (gl !== undefined && gl.length > 0) {\r\n        if (gl.indexOf(item.PropName) > -1) {\r\n          items.push(item);\r\n        }\r\n      } else {\r\n        if (bl !== undefined && bl.length > 0) {\r\n          if (bl.indexOf(item.PropName) < 0) {\r\n            items.push(item);\r\n          }\r\n        } else {\r\n          items.push(item);\r\n        }\r\n      }\r\n    }\r\n    return items;\r\n  }\r\n  private _columns: IColumn[] = [\r\n    {\r\n      key: 'Value',\r\n      name: 'Value',\r\n      fieldName: 'Value',\r\n      minWidth: 200,\r\n      isMultiline: false,\r\n      onRender: (item: IInstancesTab, _index?: number, column?: IColumn) => {\r\n        let r: any;\r\n        if (item.issuper)\r\n          r = <TextField value={item.PropValue} readOnly={true} label={this.props.semtalk.getResStrListener(\"STRDLHTMLOUTINS\")}></TextField>;\r\n        else\r\n          r = <TextField value={item.PropValue} readOnly={true} label={this.props.semtalk.getResStrListener(\"STRDLHTMLOUTINS\") + \" (\" + item.Instance.ClassOf().ID2NameNsp() + \")\"}></TextField>;\r\n        return r;\r\n      }\r\n    }\r\n  ];\r\n  // private editItem = (): void => {\r\n  //   let item = this.state.sel.getSelection()[0] as IInstancesTab;\r\n  //   if (item !== null) {\r\n  //     this.setState({\r\n  //       newitem: true,\r\n  //       newitemtitle: item.PropValue,\r\n  //       newitemclass: item.Instance.ObjectName,\r\n  //       issuper: item.issuper\r\n  //     });\r\n  //   }\r\n  // }\r\n  private commands = [\r\n    {\r\n      key: 'Add',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDNE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Add'\r\n      },\r\n      onClick: (): void => {\r\n        this.setState({\r\n          newitem: true,\r\n          newitemtitle: \"\",\r\n          newitemclass: null\r\n        });\r\n      }\r\n    },\r\n    {\r\n      key: 'Delete',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Delete'\r\n      },\r\n      onClick: (): void => {\r\n        this.deleteItem();\r\n      }\r\n    },\r\n    {\r\n      key: 'Browse',\r\n      name: this.props.semtalk.getResStrListener(\"STRBROWSE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Diamond'\r\n      },\r\n      onClick: (): void => {\r\n        this.browseItem();\r\n      }\r\n    }];\r\n\r\n  private cancelnew = (): void => {\r\n    this.setState({ newitem: false });\r\n  }\r\n  private browseItem = (): void => {\r\n    if (this.state.newitem) return;\r\n    let item = this.state.sel.getSelection()[0] as IInstancesTab;\r\n    if (item !== null) {\r\n      if (this.object !== null) {\r\n        let objectid = 0;\r\n        if (item.issuper) {\r\n          objectid = item.Instance.ID;\r\n        } else {\r\n          objectid = item.Instance.ID;\r\n        }\r\n        gotoObject(objectid);\r\n      }\r\n    }\r\n  }\r\n  private deleteItem = (): void => {\r\n    let item = this.state.sel.getSelection()[0] as IInstancesTab;\r\n    if (item !== null) {\r\n      if (this.object !== null) {\r\n        if (item.Instance !== undefined) {\r\n          item.Instance.Delete();\r\n        }\r\n        this.setState({ newitem: false, items: this.getItems(this.object) });\r\n      }\r\n    }\r\n  }\r\n  private addnewitem = (): void => {\r\n    let t = this.state.newitemtitle;\r\n    if (this.state.newitemtitle.length > 0) {\r\n      if (this.object != null) {\r\n        const base = this.props.semtalk.base;\r\n        let tc = base.FindInstance(t);\r\n        if (tc === null) {\r\n          tc = this.object.MakeInstance(t);\r\n        }\r\n        this.setState({\r\n          newitem: false,\r\n          newitemtitle: \"\",\r\n          items: this.getItems(this.object)\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        newitem: false,\r\n        newitemtitle: \"\",\r\n      });\r\n    }\r\n  }\r\n  public render(): React.ReactElement<ISemTalkInstancesTabProps> {\r\n    // let val: any[] = this.getItems();\r\n    let r: React.ReactElement<ISemTalkInstancesTabProps>;\r\n    // let val: any[] = this.state.items;\r\n    // this._selection = new Selection({\r\n    // });\r\n    r = <Fabric>\r\n      <div id=\"stInstancesTest\" className={styles.semTalkInheritance}><div className={styles.pivottab}></div></div>\r\n      <CommandBar id=\"stButtons\"\r\n        items={this.commands}\r\n      ></CommandBar>\r\n      <div className={styles.semTalkInheritance}><div className={styles.pivottab}></div></div>\r\n      {this.state.newitem &&\r\n        <div>\r\n          <ComboBox id=\"stInstances\" text={this.state.newitemtitle} label={this.props.semtalk.getResStrListener(\"STRDLGBROWSEINS\")}\r\n            options={this.instances}\r\n            required={true}\r\n            allowFreeform={true}\r\n            //  autoComplete=\"on\"\r\n            onChange={(event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\r\n              if (option !== undefined) {\r\n                this.setState({ newitemclass: option.key as string, newitemtitle: option.text });\r\n              } else {\r\n                if (value !== undefined)\r\n                  this.setState({ newitemtitle: value });\r\n              }\r\n            }}></ComboBox>\r\n          {/* <Checkbox checked={this.state.issuper} label={this.props.semtalk.getResStrListener(\"STRDLGCLSUPERCL\")}\r\n            onChange={(ev, isChecked: boolean) => {\r\n              this.setState({ issuper: isChecked });\r\n            }}></Checkbox>; */}\r\n          <div className={styles.semTalkInheritance}><div className={styles.pivottab}></div></div>\r\n          <DefaultButton id=\"okButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDOK\")} onClick={this.addnewitem} />\r\n          <DefaultButton id=\"cancelButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\r\n        </div>\r\n      }\r\n      {!this.state.newitem &&\r\n        <DetailsList\r\n          items={this.state.items}\r\n          compact={true}\r\n          columns={this._columns}\r\n          selectionMode={SelectionMode.single}\r\n          layoutMode={DetailsListLayoutMode.justified}\r\n          selection={this.state.sel}\r\n          checkboxVisibility={CheckboxVisibility.hidden}\r\n          isHeaderVisible={false}\r\n        />\r\n      }\r\n    </Fabric>;\r\n    return r;\r\n  }\r\n}","import * as React from 'react';\r\nimport styles from './RteColorPicker.module.scss';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { ISwatchColorPickerGroupState, ISwatchColorPickerGroupProps, ISwatchColor } from './SwatchColorPickerGroup.types';\r\nimport { FocusZone, FocusZoneDirection, FocusZoneTabbableElements } from 'office-ui-fabric-react/lib/FocusZone';\r\nimport { ActionButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { chunk } from 'lodash';\r\n\r\nexport default class SwatchColorPickerGroup extends React.Component<ISwatchColorPickerGroupProps, ISwatchColorPickerGroupState> {\r\n  public render(): React.ReactElement<ISwatchColorPickerGroupProps> {\r\n    const colorRows = chunk(this.props.groupColors, 5);\r\n    return (\r\n      <div>\r\n        <Label htmlFor={this.props.groupText}\r\n               className={styles.pickerLabel}>{this.props.groupText}</Label>\r\n        <div key={this.props.groupText}>\r\n          <FocusZone direction={FocusZoneDirection.horizontal}\r\n                     handleTabKey={FocusZoneTabbableElements.all}\r\n                     isCircularNavigation={true}\r\n                     className={styles.focusedContainer}>\r\n            <table className={styles.tableRoot}>\r\n              <tbody>\r\n                {\r\n                  colorRows.map((cr: ISwatchColor[], rowIndex: number) => {\r\n                    return (\r\n                      <tr role=\"row\">\r\n                        {\r\n                          cr.map((gc: ISwatchColor, index: number) => {\r\n                            return (\r\n                              <td role=\"presentation\" className={styles.tableCell}>\r\n                                <ActionButton className={styles.colorCell}\r\n                                              role=\"gridCell\"\r\n                                              title={gc.label}\r\n                                              aria-label={gc.label}\r\n                                              aria-selected={this.props.selectedColor === gc.color}\r\n                                              data-index={index}\r\n                                              data-is-focusable={true}\r\n                                              id={`${this.props.groupText}-${gc.id}-${index}`}\r\n                                              onClick={() => this.handleColorChanged(gc.color)}>\r\n                                  <svg className={`${styles.svg} ${this.props.selectedColor!.toUpperCase() === gc.color.toUpperCase() ? styles.selected : \"\"}`}\r\n                                      viewBox=\"0 0 20 20\"\r\n                                      fill={gc.color} focusable=\"false\">\r\n                                    <rect width=\"100%\" height=\"100%\"></rect>\r\n                                  </svg>\r\n                                </ActionButton>\r\n                              </td>\r\n                            );\r\n                          })\r\n                        }\r\n                      </tr>\r\n                    );\r\n                  })\r\n                }\r\n\r\n              </tbody>\r\n            </table>\r\n          </FocusZone>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private handleColorChanged(color: string) {\r\n    this.props.onColorChanged(color);\r\n  }\r\n}\r\n","interface Window {\n  __themeState__: any;\n}\n\ndeclare var window: Window;\n\nexport class ThemeColorHelper {\n  /**\n   * Extracts the color from a theme string\n   * @param value The theme string (e.g.: \"[theme:neutralDark, default: #212121]\")\n   */\n  public static GetThemeColor(value: string): string {\n    try {\n      if (value.indexOf('theme:') > 0) {\n        // This value has a theme substitution\n        const themeParts: string[] = value.replace('[', '').replace(']', '').replace('\"', '').split(',');\n       // let defaultValue: string | undefined= undefined;\n        let defaultValue: string= \"#212121\";\n        let themeValue: string | undefined = undefined;\n\n        // Break the theme string into it's components\n        themeParts.forEach(themePart => {\n          if (themePart.indexOf('theme:') >= 0) {\n            themeValue = themePart.replace('theme:', '');\n          } else if (themePart.indexOf('default:') >= 0) {\n            defaultValue = themePart.replace('default:', '').replace('\"', '').trim();\n          }\n        });\n\n        // If there is a theme value, try to read from environment\n        if (themeValue !== undefined) {\n          try {\n            // This should definitely be easier to do in SPFx!\n\n            // tslint:disable-next-line\n            const themeStateVariable: any = window.__themeState__;\n            if (themeStateVariable === undefined) {\n              return defaultValue;\n            }\n            const themeState: {} = themeStateVariable.theme;\n\n            if (themeState === undefined) {\n              return defaultValue;\n            }\n\n            for (const varName in themeState) {\n              if (!themeState.hasOwnProperty(varName)) {\n                continue;\n              }\n\n              // Cheesy cleanup of variables to remove extra quotes\n              if (varName === themeValue) {\n                return themeState[varName].replace('\"', '').trim();\n              }\n            }\n          } catch (error) {\n            // do nothing\n          }\n\n          return defaultValue;\n        }\n      }\n    } catch (error) {\n\n    }\n\n    return value;\n  }\n}\n","import * as React from 'react';\n// import * as strings from 'ControlStrings';\nimport styles from './RteColorPicker.module.scss';\nimport SwatchColorPickerGroup from './SwatchColorPickerGroup';\nimport { IRteColorPickerProps, IRteColorPickerState } from './RteColorPicker.types';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { TooltipHost } from 'office-ui-fabric-react/lib/Tooltip';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Callout } from 'office-ui-fabric-react/lib/Callout';\nimport { ISwatchColor } from './SwatchColorPickerGroup.types';\nimport { ThemeColorHelper } from '../../common/utilities/ThemeColorHelper';\n\nexport default class RteColorPicker extends React.Component<IRteColorPickerProps, IRteColorPickerState> {\n  private wrapperRef: any = undefined;\n\n  constructor(props: IRteColorPickerProps) {\n    super(props);\n\n    this.state = {\n      isCalloutVisible: false\n    };\n  }\n\n  /**\n   * Default React render method\n   */\n  public render(): React.ReactElement<IRteColorPickerProps> {\n    const { buttonLabel, defaultButtonLabel, fillThemeColor, id, previewColor } = this.props;\n    return (\n      <div>\n        <div ref={(ref) => this.wrapperRef = ref}>\n          <TooltipHost content={buttonLabel}\n                       id={id}\n                       calloutProps={{ gapSpace: 0 }}>\n            <DefaultButton className={styles.colorPickerButton}\n                           aria-describedby={id}\n                           onClick={() => this.handleColorChanged(previewColor)}>\n              {/* Added border to white */}\n              <svg className={`${styles.previewSvg} ${(previewColor === \"rgba(0, 0, 0, 0)\" || previewColor === \"#ffffff\") ? styles.border : \"\"}`}\n                   fill={previewColor}\n                   viewBox=\"0 0 20 20\">\n                <rect className={styles.previewRectangle}\n                      width=\"100%\"\n                      height=\"100%\"></rect>\n              </svg>\n              <div className={styles.buttonLabel}>{buttonLabel}</div>\n              <Icon iconName=\"CaretDownSolid8\" className={styles.previewIcon} />\n            </DefaultButton>\n          </TooltipHost>\n        </div>\n        <Callout isBeakVisible={false}\n                 directionalHint={4}\n                 className={styles.pickerCallout}\n                 setInitialFocus={true}\n                 gapSpace={0}\n                 role={\"alertdialog\"}\n                 hidden={!this.state.isCalloutVisible}\n                 target={this.wrapperRef}\n                 onDismiss={() => this.setState({ isCalloutVisible: false })}>\n          <TooltipHost content={defaultButtonLabel}\n                       id={`${id}DefaultButton`}\n                       calloutProps={{ gapSpace: 0 }}>\n            <DefaultButton className={styles.colorPickerButton}\n                           aria-describedby={`${id}DefaultButton`}\n                           onClick={this.handleSwitchToDefault}>\n              <svg className={`${styles.previewSvg} ${styles.defaultSvg} ${fillThemeColor ? styles.fillThemeColor : styles.fillDefaultColor} ${fillThemeColor ? \"\" : styles.border}`}\n                   viewBox=\"0 0 20 20\">\n                <rect className={styles.previewRectangle}\n                      width=\"100%\"\n                      height=\"100%\"></rect>\n              </svg>\n              <div className={styles.buttonLabel}>{defaultButtonLabel}</div>\n            </DefaultButton>\n          </TooltipHost>\n            {\n              this.props.colorPickerGroups.map(cpg => {\n                return (this.getSwatchColorPickerGroup(cpg));\n              })\n            }\n        </Callout>\n      </div>\n    );\n  }\n\n  /**\n   * Handle switch to default\n   */\n  private handleSwitchToDefault = () => {\n    this.setState({ isCalloutVisible: !this.state.isCalloutVisible });\n    this.props.switchToDefaultColor();\n  }\n\n  /**\n   * Handle color change\n   */\n  private handleColorChanged = (color: string) => {\n    this.setState({ isCalloutVisible: !this.state.isCalloutVisible });\n    this.props.onColorChanged(color);\n  }\n\n  /**\n   * Get swatch color picker group\n   */\n  private getSwatchColorPickerGroup = (pickerGroup: string) => {\n    let groupName: string | undefined = undefined;\n    switch (pickerGroup) {\n      case \"themeColors\":\n        groupName = \"strings.ThemeColorsGroupName\";\n        break;\n      case \"highlightColors\":\n        groupName = \"strings.HighlightColorsGroupName\";\n        break;\n      case \"standardColors\":\n        groupName = \"strings.StandardColorsGroupName\";\n        break;\n      case \"customColors\":\n        groupName = \"strings.CustomColorsGroupName\";\n        break;\n      default:\n        groupName = \"strings.HighlightColorsGroupName\";\n        break;\n    }\n\n    let groupColors: ISwatchColor[] = [];\n    switch (pickerGroup) {\n      case \"themeColors\":\n        groupColors = [\n          {\n            color: ThemeColorHelper.GetThemeColor(styles.ThemeColorDarker),\n            id: \"#1c561c\",\n            label: \"strings.ThemeColorDarker\"\n          }, {\n            color: ThemeColorHelper.GetThemeColor(styles.ThemeColorDark),\n            id: \"#267426\",\n            label: \"strings.ThemeColorDark\"\n          }, {\n            color: ThemeColorHelper.GetThemeColor(styles.ThemeColorDarkAlt),\n            id: \"#2d8a2d\",\n            label: \"strings.ThemeColorDarkAlt\"\n          }, {\n            color: ThemeColorHelper.GetThemeColor(styles.ThemeColorPrimary),\n            id: \"#339933\",\n            label: \"strings.ThemeColorPrimary\"\n          }, {\n            color: ThemeColorHelper.GetThemeColor(styles.ThemeColorSecondary),\n            id: \"#44a544\",\n            label: \"strings.ThemeColorSecondary\"\n          }, {\n            color: ThemeColorHelper.GetThemeColor(styles.ThemeColorTertiary),\n            id: \"#a6a6a6\",\n            label: \"strings.ThemeColorTertiary\"\n          }, {\n            color: ThemeColorHelper.GetThemeColor(styles.ThemeColorNeutralSecondary),\n            id: \"#666666\",\n            label: \"strings.ThemeColorNeutralSecondary\"\n          }, {\n            color: ThemeColorHelper.GetThemeColor(styles.ThemeColorNeutralPrimaryAlt),\n            id: \"#3c3c3c\",\n            label: \"strings.ThemeColorNeutralPrimaryAlt\"\n          }, {\n            color: ThemeColorHelper.GetThemeColor(styles.ThemeColorNeutralPrimary),\n            id: \"#333333\",\n            label: \"strings.ThemeColorNeutralPrimary\"\n          }, {\n            color: ThemeColorHelper.GetThemeColor(styles.ThemeColorNeutralDark),\n            id: \"#212121\",\n            label: \"strings.ThemeColorNeutralDark\"\n          }\n        ];\n        break;\n      case \"highlightColors\":\n        groupColors = [\n          {\n            color: \"#FFFF00\",\n            id: \"#FFFF00\",\n            label: \"strings.HighlightColorYellow\"\n          },\n          {\n            color: \"#00FF00\",\n            id: \"#00FF00\",\n            label: \"strings.HighlightColorGreen\"\n          },\n          {\n            color: \"#00FFFF\",\n            id: \"#00FFFF\",\n            label: \"strings.HighlightColorAqua\"\n          },\n          {\n            color: \"#FF00FF\",\n            id: \"#FF00FF\",\n            label: \"strings.HighlightColorMagenta\"\n          },\n          {\n            color: \"#0000FF\",\n            id: \"#0000FF\",\n            label: \"strings.HighlightColorBlue\"\n          },\n          {\n            color: \"#FF0000\",\n            id: \"#FF0000\",\n            label: \"strings.HighlightColorRed\"\n          },\n          {\n            color: \"#000080\",\n            id: \"#000080\",\n            label: \"strings.HighlightColorDarkblue\"\n          },\n          {\n            color: \"#008080\",\n            id: \"#008080\",\n            label: \"strings.HighlightColorTeal\"\n          },\n          {\n            color: \"#008000\",\n            id: \"#008000\",\n            label: \"strings.HighlightColorDarkgreen\"\n          },\n          {\n            color: \"#800080\",\n            id: \"#800080\",\n            label: \"strings.HighlightColorPurple\"\n          },\n          {\n            color: \"#800000\",\n            id: \"#800000\",\n            label: \"strings.HighlightColorMaroon\"\n          },\n          {\n            color: \"#808000\",\n            id: \"#808000\",\n            label: \"strings.HighlightColorGold\"\n          },\n          {\n            color: \"#808080\",\n            id: \"#808080\",\n            label: \"strings.HighlightColorDarkgrey\"\n          },\n          {\n            color: \"#C0C0C0\",\n            id: \"#C0C0C0\",\n            label: \"strings.HighlightColorGrey\"\n          },\n          {\n            color: \"#000000\",\n            id: \"#000000\",\n            label: \"strings.HighlightColorBlack\"\n          }\n        ];\n        break;\n      case 'customColors':\n        if (this.props.customColors)\n          groupColors = this.props.customColors;\n        break;\n      default:\n        groupColors = [\n          {\n            color: \"#a80000\",\n            id: \"#a80000\",\n            label: \"strings.StandardColorDarkred\"\n          },\n          {\n            color: \"#e81123\",\n            id: \"#e81123\",\n            label: \"strings.StandardColorRed\"\n          },\n          {\n            color: \"#ffb900\",\n            id: \"#ffb900\",\n            label: \"strings.StandardColorOrange\"\n          },\n          {\n            color: \"#fff100\",\n            id: \"#fff100\",\n            label: \"strings.StandardColorYellow\"\n          },\n          {\n            color: \"#bad80a\",\n            id: \"#bad80a\",\n            label: \"strings.StandardColorLightgreen\"\n          },\n          {\n            color:\n              \"#107c10\",\n            id:\n              \"#107c10\",\n            label:\n              \"strings.StandardColorGreen\"\n          },\n          {\n            color: \"#00bcf2\",\n            id: \"#00bcf2\",\n            label: \"strings.StandardColorLightblue\"\n          },\n          {\n            color: \"#0078d4\",\n            id: \"#0078d4\",\n            label: \"strings.StandardColorBlue\"\n          },\n          {\n            color: \"#002050\",\n            id: \"#002050\",\n            label: \"strings.StandardColorDarkblue\"\n          },\n          {\n            color: \"#5c2d91\",\n            id: \"#5c2d91\",\n            label: \"strings.StandardColorPurple\"\n          }\n        ];\n        break;\n    }\n\n    return (\n       <SwatchColorPickerGroup key={pickerGroup}\n                              groupText={groupName}\n                              onColorChanged={this.handleColorChanged}\n                              groupColors={groupColors}\n                              selectedColor={this.props.selectedColor} />\n    );\n  }\n}\n\n\n\n","import * as React from 'react';\n// import * as strings from 'ControlStrings';\nimport styles from './RichTextPropertyPane.module.scss';\nimport RteColorPicker from './RteColorPicker';\nimport { IRichTextPropertyPaneProps, IRichTextPropertyPaneState } from './RichTextPropertyPane.types';\nimport { IconButton } from 'office-ui-fabric-react/lib/Button';\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\nimport { TooltipHost } from 'office-ui-fabric-react/lib/Tooltip';\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { ThemeColorHelper } from '../../common/utilities/ThemeColorHelper';\n\nexport default class RichTextPropertyPane extends React.Component<IRichTextPropertyPaneProps, IRichTextPropertyPaneState> {\n\n  constructor(props: IRichTextPropertyPaneProps) {\n    super(props);\n\n    this.state = {\n      formats: {}\n    };\n  }\n\n  /**\n   * componentDidUpdate lifecycle hook\n   *\n   * @param prevProps\n   * @param prevState\n   */\n  public componentDidUpdate(prevProps: IRichTextPropertyPaneProps, prevState: IRichTextPropertyPaneState): void {\n    // if we're just opening, sync the format choices with the current selection\n    if (!prevProps.isOpen && this.props.isOpen) {\n      const quill = this.props.editor;\n      if (quill === undefined) {\n        return;\n      }\n\n      const range = quill.getSelection();\n      this.onChangeSelection(range, undefined, undefined);\n    }\n  }\n\n  /**\n   * Default React render method\n   */\n  public render(): React.ReactElement<IRichTextPropertyPaneProps> {\n    return (\n      <Panel className={styles.richTextPropertyPane}\n        isBlocking={false}\n        isOpen={this.props.isOpen}\n        type={PanelType.smallFixedFar}\n        onDismiss={this.props.onClose}\n        closeButtonAriaLabel={\"strings.CloseButton\"}\n        onRenderNavigation={this.handleRenderNavigation}\n        focusTrapZoneProps={{\n          forceFocusInsideTrap: false,\n          isClickableOutsideFocusTrap: true\n        }}>\n        <div>\n          <div>\n            <div>\n              <div className={styles.propertyPaneGroupContent}>\n                {this.renderActionsGroup()}\n                {this.renderFontStylesGroup()}\n                {this.renderFontSizesGroup()}\n                {this.renderInlineStylesGroup()}\n                {this.renderColorStylesGroup()}\n              </div>\n            </div>\n            <div className={styles.propertyPaneGroupContent}>\n              <div className={styles.propertyPaneGroupHeaderNoAccordion}>{\"strings.ParagraphSectionTitle\"}</div>\n              {this.renderAlignmentStylesGroup()}\n              {this.renderListStylesGroup()}\n            </div>\n            <div className={styles.propertyPaneGroupContent}>\n              <div className={styles.propertyPaneGroupHeaderNoAccordion}>{\"strings.HyperlinkSectionTitle\"}</div>\n              {this.renderHyperlinkStylesGroup()}\n            </div>\n          </div>\n        </div>\n      </Panel>\n    );\n  }\n\n  /**\n   * On selection changed event handler\n   */\n  public onChangeSelection = (range: any, oldRange?: any, source?: any) => {\n    const quill = this.props.editor;\n    if (quill === undefined || range === undefined) {\n      return;\n    }\n\n    if (range) {\n      const formats = quill.getFormat(range);\n      this.setState({\n        formats\n      });\n    }\n  }\n\n  /**\n   * Render the actions group\n   */\n  private renderActionsGroup = (): JSX.Element => {\n    return (\n      <div className={styles.propertyPaneGroupField}>\n        <div className=\"ms-CustomFieldHost\">\n          <div className={styles.controlsInOneRow}>\n            <TooltipHost content={\"strings.UndoTitle\"}\n              id=\"undo-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton onClick={this.handleUndo}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"undo-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'Undo',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n\n            <TooltipHost content={\"strings.RedoTitle\"}\n              id=\"redo-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton onClick={this.handleRedo}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"redo-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'Redo',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n\n            <TooltipHost content={\"strings.ClearFormattingTitle\"}\n              id=\"clearFormatting-button-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton onClick={this.handleClearFormatting}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"clearFormatting-button-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'ClearFormatting',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render font styles group\n   */\n  private renderFontStylesGroup = (): JSX.Element => {\n    const selectedHeader = this.state.formats!.header ? this.state.formats!.header : 0;\n\n    return (\n      <div className={styles.propertyPaneGroupField}>\n        <Dropdown label={\"strings.FontStyleTitle\"}\n          ariaLabel={\"strings.FontStyleTitle\"}\n          defaultSelectedKey={0}\n          selectedKey={selectedHeader}\n          options={[\n            { key: 0, text: \"strings.HeaderNormalText\" },\n            { key: 2, text: \"strings.HeaderH2\" },\n            { key: 3, text: \"strings.HeaderH3\" },\n            { key: 4, text: \"strings.HeaderH4\" },\n            { key: 7, text: \"strings.HeaderBlockQuote\" }\n          ]}\n          onChanged={this.onChangeHeading}\n        />\n      </div>\n    );\n  }\n\n  /**\n   * Render font size group\n   */\n  private renderFontSizesGroup = (): JSX.Element => {\n    // get the selected header\n    const selectedSize = this.state.formats!.size ? this.state.formats!.size : 'large';\n\n    return (\n      <div className={styles.propertyPaneGroupField}>\n        <Dropdown label={\"strings.FontSizeTitle\"}\n          ariaLabel={\"strings.FontSizeTitle\"}\n          defaultSelectedKey={'large'}\n          selectedKey={selectedSize}\n          options={[\n            { key: 'small', text: '12' },\n            { key: 'medium', text: '14' },\n            { key: 'mediumplus', text: '15' },\n            { key: 'large', text: '17' },\n            { key: 'xlarge', text: '21' },\n            { key: 'xlargeplus', text: '24' },\n            { key: 'xxlarge', text: '28' },\n            { key: 'xxxlarge', text: '32' },\n            { key: 'xxlargeplus', text: '36' },\n            { key: 'super', text: '42' },\n          ]}\n          onChanged={this.onChangeSize}\n        />\n      </div>\n    );\n  }\n\n  /**\n   * Render inline styles group\n   */\n  private renderInlineStylesGroup = (): JSX.Element => {\n    return (\n      <div className={styles.propertyPaneGroupField}>\n        <div className=\"ms-CustomFieldHost\">\n          <div className={styles.controlsInOneRow}>\n            <TooltipHost content={\"strings.BoldTitle\"}\n              id=\"bold-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton checked={this.state.formats!.bold}\n                onClick={() => this.applyFormat('bold', !this.state.formats!.bold)}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"bold-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'Bold',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n\n            <TooltipHost content={\"strings.ItalicTitle\"}\n              id=\"italic-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton checked={this.state.formats!.italic}\n                onClick={() => this.applyFormat('italic', !this.state.formats!.italic)}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"italic-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'Italic',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n\n            <TooltipHost content={\"strings.UnderlineTitle\"}\n              id=\"underline-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton checked={this.state.formats!.underline}\n                onClick={() => this.applyFormat('underline', !this.state.formats!.underline)}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"underline-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'Underline',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n\n            <TooltipHost content={\"strings.StrikethroughTitle\"}\n              id=\"strikethrough-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton checked={this.state.formats!.strike}\n                onClick={() => this.applyFormat('strike', !this.state.formats!.strike)}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"strikethrough-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'Strikethrough',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n\n            <TooltipHost content={\"strings.SuperscriptTitle\"}\n              id=\"superscript-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton checked={this.state.formats!.script === 'super'}\n                onClick={() => this.applyFormat('script', this.state.formats!.script === 'super' ? '' : 'super')}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"superscript-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'Superscript',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n\n            <TooltipHost content={\"strings.SubscriptTitle\"}\n              id=\"subscript-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton checked={this.state.formats!.script === 'sub'}\n                onClick={() => this.applyFormat('script', this.state.formats!.script === 'sub' ? '' : 'sub')}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"subscript-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'Subscript',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render color styles group\n   */\n  private renderColorStylesGroup = (): JSX.Element => {\n    const color: string = this.state.formats.color || ThemeColorHelper.GetThemeColor(styles.NeutralPrimary);\n    const backgroundColor: string = this.state.formats.background || \"rgba(0, 0, 0, 0)\";\n\n    /**\n     * Add custom colors if passed as a property\n     */\n    let fontColorGroups = [\"themeColors\", \"standardColors\"];\n    if (this.props.customColors) fontColorGroups.push('customColors');\n\n    return (\n      <div className={styles.propertyPaneGroupField}>\n        <div className=\"ms-CustomFieldHost\">\n          <div className={styles.controlsInOneRow}>\n            <RteColorPicker colorPickerGroups={fontColorGroups} // changed to variable\n              customColors={this.props.customColors}\n              buttonLabel={\"strings.FontColorLabel\"}\n              id=\"fontColor-propertyPaneButton\"\n              defaultButtonLabel={\"strings.AutomaticFontColor\"}\n              fillThemeColor={true}\n              previewColor={color}\n              selectedColor={color}\n              onColorChanged={this.handleFillColorChanged}\n              switchToDefaultColor={() => this.handleFillColorChanged(undefined)} />\n\n            <RteColorPicker buttonLabel={\"strings.HighlightColorLabel\"}\n              colorPickerGroups={[\n                \"highlightColors\"\n              ]}\n              fillThemeColor={false}\n              onColorChanged={this.handleHighlightColorChanged}\n              switchToDefaultColor={() => this.handleHighlightColorChanged(undefined)}\n              previewColor={backgroundColor}\n              defaultButtonLabel={\"strings.NoColorHighlightColor\"}\n              selectedColor={backgroundColor}\n              id=\"highlightColor-propertyPaneButton\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render alignment style groups\n   */\n  private renderAlignmentStylesGroup = (): JSX.Element => {\n    return (\n      <div className={styles.propertyPaneGroupField}>\n        <div className=\"ms-CustomFieldHost\">\n          <div className={styles.controlsInOneRow}>\n            <TooltipHost content={\"strings.AlignLeft\"}\n              id=\"left-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton checked={this.state.formats!.align === undefined}\n                onClick={() => this.applyFormat('align', undefined)}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"left-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'AlignLeft',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n\n            <TooltipHost content={\"strings.AlignCenter\"}\n              id=\"center-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton checked={this.state.formats!.align === 'center'}\n                onClick={() => this.applyFormat('align', 'center')}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"center-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'AlignCenter',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n\n            <TooltipHost content={\"strings.AlignRight\"}\n              id=\"right-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton checked={this.state.formats!.align === 'right'}\n                onClick={() => this.applyFormat('align', 'right')}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"right-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'AlignRight',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n\n            <TooltipHost content={\"strings.AlignJustify\"}\n              id=\"justify-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton checked={this.state.formats!.align === 'justify'}\n                onClick={() => this.applyFormat('align', 'justify')}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"justify-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'AlignJustify',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n\n            <TooltipHost content={\"strings.IncreaseIndentTitle\"}\n              id=\"increaseindent-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton\n                onClick={() => this.onChangeIndent(1)}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"increaseindent-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'IncreaseIndentLegacy',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n\n            <TooltipHost content={\"strings.DecreaseIndentTitle\"}\n              id=\"decreaseindent-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton\n                onClick={() => this.onChangeIndent(-1)}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"decreaseindent-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'DecreaseIndentLegacy',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render list styles group\n   */\n  private renderListStylesGroup = (): JSX.Element => {\n    return <div className={styles.propertyPaneGroupField}>\n      <div className=\"ms-CustomFieldHost\">\n        <div className={styles.controlsInOneRow}>\n          <TooltipHost content={\"strings.ListBullet\"}\n            id=\"bullet-propertyPaneButton\"\n            calloutProps={{ gapSpace: 0 }}>\n            <IconButton checked={this.state.formats!.list === 'bullet'}\n              onClick={() => this.applyFormat('list', 'bullet')}\n              className={styles.propertyPaneButton}\n              aria-describedby=\"bullet-propertyPaneButton\"\n              iconProps={{\n                iconName: 'BulletedList',\n                style: {\n                  fontSize: '20px'\n                }\n              }} />\n          </TooltipHost>\n\n          <TooltipHost content={\"strings.ListNumbered\"}\n            id=\"ordered-propertyPaneButton\"\n            calloutProps={{ gapSpace: 0 }}>\n            <IconButton checked={this.state.formats!.list === 'ordered'}\n              onClick={() => this.applyFormat('list', 'ordered')}\n              className={styles.propertyPaneButton}\n              aria-describedby=\"ordered-propertyPaneButton\"\n              iconProps={{\n                iconName: 'NumberedList',\n                style: {\n                  fontSize: '20px'\n                }\n              }} />\n          </TooltipHost>\n        </div>\n      </div>\n    </div>;\n  }\n\n  /**\n   * Render hyperlink styles group\n   */\n  private renderHyperlinkStylesGroup = (): JSX.Element => {\n    return (\n      <div className={styles.propertyPaneGroupField}>\n        <div className=\"ms-CustomFieldHost\">\n          <div className={styles.controlsInOneRow}>\n            <TooltipHost content={\"strings.LinkTitle\"}\n              id=\"link-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton checked={this.state.formats!.link !== undefined}\n                onClick={() => this.props.onLink()}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"link-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'Link',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n\n            <TooltipHost content={\"strings.RemoveLinkLabel\"}\n              id=\"unlink-propertyPaneButton\"\n              calloutProps={{ gapSpace: 0 }}>\n              <IconButton disabled={this.state.formats!.link === undefined}\n                onClick={() => this.applyFormat('link', false)}\n                className={styles.propertyPaneButton}\n                aria-describedby=\"unlink-propertyPaneButton\"\n                iconProps={{\n                  iconName: 'RemoveLink',\n                  style: {\n                    fontSize: '20px'\n                  }\n                }} />\n            </TooltipHost>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Handle fill color change\n   */\n  private handleFillColorChanged = (color: string | undefined) => {\n    if (color)\n      this.applyFormat('color', color);\n  }\n\n  /**\n   * Handle the hightlight color change\n   */\n  private handleHighlightColorChanged = (color: string | undefined) => {\n    if (color)\n      this.applyFormat('background', color);\n  }\n\n  /**\n   * On heading change\n   */\n  private onChangeHeading = (item: IDropdownOption): void => {\n    const newHeadingValue = item.key === 0 ? '' : item.key.toString();\n    this.applyFormat(\"header\", newHeadingValue);\n  }\n\n  /**\n   * On indentation change.\n   */\n  private onChangeIndent = (direction: 1 | -1) => {\n    const quill = this.props.editor;\n    if (quill) {\n      const sel = quill.getSelection();\n      if (sel) {\n        const current = +(quill.getFormat(sel).indent || 0);\n        this.applyFormat(\"indent\", current + direction);\n      }\n    }\n  }\n\n  /**\n   * On size change\n   */\n  private onChangeSize = (item: IDropdownOption): void => {\n    const newSizeValue = item.key === 0 ? '' : item.key.toString();\n    this.applyFormat(\"size\", newSizeValue);\n  }\n\n  /**\n   * Apply the new format\n   *\n   * @param name\n   * @param value\n   */\n  private applyFormat(name: string, value: any) {\n    const quill = this.props.editor;\n    if (quill) {\n      quill.format(name, value);\n      setTimeout(() => {\n        this.onChangeSelection(quill.getSelection());\n      }, 100);\n    }\n  }\n\n  /**\n   * Handle the undo action\n   */\n  private handleUndo = (): void => {\n    const quill = this.props.editor;\n    if (quill) {\n      quill.getModule(\"history\")!.undo();\n      setTimeout(() => {\n        this.onChangeSelection(quill.getSelection());\n      }, 100);\n    }\n  }\n\n  /**\n   * Handle the clear formatting action\n   */\n  private handleClearFormatting = (): void => {\n    const quill = this.props.editor;\n    if (quill) {\n      var range = quill.getSelection();\n      if (range) {\n        if (range.length > 0) {\n          quill.removeFormat(range.index, range.length);\n          setTimeout(() => {\n            this.onChangeSelection(quill.getSelection());\n          }, 100);\n        }\n      }\n    }\n  }\n  /**\n   * Handle the redo action\n   */\n  private handleRedo = (): void => {\n    const quill = this.props.editor;\n    if (quill) {\n      quill!.getModule(\"history\")!.redo();\n      setTimeout(() => {\n        this.onChangeSelection(quill.getSelection());\n      }, 100);\n    }\n  }\n  /**\n   * Navigation render\n   */\n  private handleRenderNavigation = (): JSX.Element => {\n    return (\n      <div className={styles.formattingPaneTitle} aria-hidden=\"true\">{\"strings.FormattingPaneTitle\"}\n        <IconButton onClick={() => this.props.onClose()}\n          className={styles.propertyPaneClose}\n          iconProps={{\n            iconName: 'Cancel'\n          }}\n          title={\"strings.CloseButton\"}\n          ariaLabel={\"strings.CloseButton\"} />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n// import * as strings from 'ControlStrings';\nimport 'react-quill/dist/quill.snow.css';\nimport RichTextPropertyPane from './RichTextPropertyPane';\nimport ReactQuill, { Quill } from 'react-quill';\nimport styles from './RichText.module.scss';\nimport { IRichTextProps, IRichTextState } from './RichText.types';\nimport { IconButton } from 'office-ui-fabric-react/lib/Button';\n// import { Guid } from '@microsoft/sp-core-library';\nimport { Guid } from 'guid-typescript';\nimport { TooltipHost } from 'office-ui-fabric-react/lib/Tooltip';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { elementContains } from 'office-ui-fabric-react/lib/Utilities';\n// import * as telemetry from '../../common/telemetry';\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\nimport isEqual from 'lodash/isEqual';\n\nconst TOOLBARPADDING: number = 28;\n/**\n * Creates a rich text editing control that mimics the out-of-the-box\n * SharePoint Rich Text control.\n * NOTE:\n * Quill.js has a few quirks that we can't work around\n * - Block quotes only work on single lines. This is a frequently-requested feature with Quill that isn't available yet.\n * - Tables aren't supported yet. I'll gladly add table formatting support if users request it.\n */\n\ninitializeIcons();\n\nexport class RichText extends React.Component<IRichTextProps, IRichTextState> {\n  private _quillElem: ReactQuill | undefined = undefined;\n  private _wrapperRef: HTMLDivElement | null = null;\n  private _propertyPaneRef: RichTextPropertyPane | undefined = undefined;\n  private _toolbarId: string | undefined = undefined;\n\n  private ddStyleOpts = [{\n    key: 0,\n    text: \"strings.HeaderNormalText\",\n    data: {}\n  }, {\n    key: 2,\n    text: \"strings.HeaderH2\",\n    data:\n      { className: styles.toolbarButtonH2 }\n  }, {\n    key: 3,\n    text: \"strings.HeaderH3\",\n    data:\n      { className: styles.toolbarButtonH3 }\n  }, {\n    key: 4,\n    text: \"strings.HeaderH4\",\n    data:\n      { className: styles.toolbarButtonH4 }\n  }, {\n    key: 7,\n    text: \"strings.HeaderBlockQuote\",\n    data:\n      { className: styles.toolbarButtonBlockQuote }\n  }];\n\n  private ddAlignOpts = [{\n    key: 'left',\n    text: \"strings.AlignLeft\",\n    data: { icon: 'AlignLeft' }\n  }, {\n    key: 'center',\n    text: \"strings.AlignCenter\",\n    data: { icon: 'AlignCenter' }\n  }, {\n    key: 'right',\n    text: \"strings.AlignRight\",\n    data: { icon: 'AlignRight' }\n  }];\n\n  private ddListOpts = [{\n    key: 'bullet',\n    text: \"strings.ListBullet\",\n    data: { icon: 'BulletedList' }\n  }, {\n    key: 'ordered',\n    text: \"strings.ListNumbered\",\n    data: { icon: 'NumberedList' }\n  }];\n\n  /**\n   * Sets default properties\n   */\n  public static defaultProps: Partial<IRichTextProps> = {\n    isEditMode: true,\n    styleOptions: {\n      showStyles: true,\n      showBold: true,\n      showItalic: true,\n      showUnderline: true,\n      showAlign: true,\n      showList: true,\n      showLink: true,\n      showImage: true,\n      showMore: true\n    }\n  };\n\n  constructor(props: IRichTextProps) {\n    super(props);\n    // telemetry.track('ReactRichText', {\n    //   className: !!props.className\n    // });\n\n    this.state = {\n      text: this.props.value,\n      editing: false,\n      morePaneVisible: false,\n      hideDialog: true,\n      hideImageDialog: true,\n      formats: {},\n      insertUrl: undefined,\n      insertUrlText: undefined,\n      insertImageUrl: undefined,\n      selectedText: undefined,\n      selectedUrl: undefined,\n      wrapperTop: 0\n    };\n\n    // Get a unique toolbar id\n    this._toolbarId = \"toolbar_\" + Guid.create().toString();\n  }\n\n  /**\n   * Attaches to mouse down events to determine if we clicked outside\n   */\n  public componentDidMount() {\n    // If we're in edit mode, attach the mouse down event\n    if (this.props.isEditMode) {\n      document.addEventListener('click', this.handleClickOutside);\n      document.addEventListener('focus', this.handleClickOutside);\n\n      if (this._wrapperRef && this._wrapperRef.parentElement) {\n        const clientRect: ClientRect = this._wrapperRef.getBoundingClientRect();\n        const parentClientRect: ClientRect = this._wrapperRef.parentElement.getBoundingClientRect();\n        const toolbarTop: number = clientRect.top - parentClientRect.top - TOOLBARPADDING;\n\n        this.setState({\n          wrapperTop: toolbarTop\n        });\n      }\n    }\n  }\n\n  /**\n   * Removes the mouse down event\n   */\n  public componentWillUnmount() {\n    // If we were in edit mode, remove the mouse down handler\n    if (this.props.isEditMode) {\n      document.removeEventListener('click', this.handleClickOutside);\n      document.removeEventListener('focus', this.handleClickOutside);\n    }\n  }\n\n  /**\n   * If we're switching from non-edit mode to edit mode, attach mouse down event\n   * If we're going from edit mode to non-edit mode, remove mouse down event\n   * @param prevProps\n   * @param _prevState\n   */\n  public componentDidUpdate(prevProps: IRichTextProps, _prevState: IRichTextState): void {\n    // If we're going from non-edit to edit mode\n    if (this.props.isEditMode && !prevProps.isEditMode) {\n      document.addEventListener('click', this.handleClickOutside);\n      document.addEventListener('focus', this.handleClickOutside);\n    }\n\n    // If we're going from edit mode to non-edit mode\n    if (!this.props.isEditMode && prevProps.isEditMode) {\n      document.removeEventListener('click', this.handleClickOutside);\n      document.removeEventListener('focus', this.handleClickOutside);\n    }\n  }\n\n  /**\n   * shouldComponentUpdate lifecycle hook\n   *\n   * @param nextProps\n   * @param nextState\n   */\n  public shouldComponentUpdate(nextProps: IRichTextProps, nextState: IRichTextState): boolean {\n    // Checks if the value coming in is the same\n    if (isEqual(nextState, this.state) && isEqual(nextProps, this.props)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: IRichTextProps) {\n    if (nextProps.value !== this.props.value && nextProps.value !== this.state.text) {\n      this.setState({\n        text: nextProps.value\n      });\n    }\n  }\n\n  /**\n   * Returns a handle to the Quill editor\n   */\n  public getEditor = (): Quill | undefined => {\n    try {\n      return this._quillElem!.getEditor();\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  /**\n   * Render style option\n   *\n   * @param option\n   */\n  private onRenderStyleOption(option: IDropdownOption | undefined): JSX.Element {\n    return (\n      <TooltipHost content={option!.text}\n        id={`${option!.text}-toolbarButton`}\n        calloutProps={{ gapSpace: 0 }}>\n        <div className={`${styles.toolbarDropDownOption} ${option!.data!.className ? option!.data!.className : \"\"}`}\n          aria-describedby={`${option!.text}-toolbarButton`}>\n          <span>{option!.text}</span>\n        </div>\n      </TooltipHost>\n    );\n  }\n\n  /**\n   * Render the title of the style dropdown\n   *\n   * @param options\n   */\n  private onRenderStyleTitle(options: any): JSX.Element {\n    const option = options[0];\n\n    return (\n      <TooltipHost content={option.text}\n        id={`${option.text}-dropDownTitle`}\n        calloutProps={{ gapSpace: 0 }}>\n        <div className={styles.toolbarSubmenuDisplayButton}\n          aria-describedby={`${option.text}-dropDownTitle`}>\n          <span>{option.text}</span>\n        </div>\n      </TooltipHost>\n    );\n  }\n\n  /**\n   * Render align option\n   *\n   * @param option\n   */\n  private onRenderAlignOption(option: IDropdownOption | undefined): JSX.Element {\n    return (\n      <TooltipHost content={option!.text}\n        id={`${option!.text}-toolbarButton`}\n        calloutProps={{ gapSpace: 0 }}>\n        <div className={`${styles.toolbarDropDownOption} ${option!.data!.className ? option!.data!.className : \"\"}`}\n          aria-describedby={`${option!.text}-toolbarButton`}>\n          <Icon className={styles.toolbarDropDownIcon}\n            iconName={option!.data.icon}\n            aria-hidden=\"true\" />\n        </div>\n      </TooltipHost>\n    );\n  }\n\n  /**\n   * Render the list dropdown title\n   *\n   * @param options\n   */\n  private onRenderListTitle(options: IDropdownOption[] | undefined): JSX.Element {\n    const option = options![0];\n\n    return (\n      <TooltipHost content={option.text}\n        id={`${option.text}-dropDownTitle`}\n        calloutProps={{ gapSpace: 0 }}>\n        <div className={styles.toolbarSubmenuDisplayButton}\n          aria-describedby={`${option.text}-dropDownTitle`}>\n          <Icon className={styles.toolbarDropDownTitleIcon}\n            iconName={option.data.icon}\n            aria-hidden=\"true\" />\n        </div>\n      </TooltipHost>\n    );\n  }\n\n  /**\n   * Render the title of the align dropdown\n   *\n   * @param options\n   */\n  private onRenderAlignTitle(options: IDropdownOption[] | undefined): JSX.Element {\n    const option = options![0];\n    return (\n      <TooltipHost content={option.text}\n        id={`${option.text}-dropDownTitle`}\n        calloutProps={{ gapSpace: 0 }}>\n        <div className={styles.toolbarSubmenuDisplayButton}\n          aria-describedby={`${option.text}-dropDownTitle`}>\n          <Icon className={styles.toolbarDropDownTitleIcon}\n            iconName={option.data.icon}\n            aria-hidden=\"true\" />\n        </div>\n      </TooltipHost>\n    );\n  }\n\n  /**\n   * Render list dropdown option\n   *\n   * @param option\n   */\n  private onRenderListOption(option: any): JSX.Element {\n    return (\n      <TooltipHost content={option.text}\n        id={`${option.text}-toolbarButton`}\n        calloutProps={{ gapSpace: 0 }}>\n        <div className={`${styles.toolbarDropDownOption} ${option.data!.className ? option.data!.className : \"\"}`}\n          aria-describedby={`${option.text}-toolbarButton`}>\n          <Icon className={styles.toolbarDropDownIcon}\n            iconName={option.data.icon}\n            aria-hidden=\"true\" />\n        </div>\n      </TooltipHost>\n    );\n  }\n\n  /**\n   * Render the list dropdown placeholder\n   */\n  private onRenderListPlaceholder(): JSX.Element {\n    return (\n      <TooltipHost content={\"Placeholder\"}\n        id={`Placeholder-dropDownTitle`}\n        calloutProps={{ gapSpace: 0 }}>\n        <div className={styles.toolbarSubmenuDisplayButton}\n          aria-describedby={`Placeholder-dropDownTitle`}>\n          <Icon className={styles.toolbarDropDownTitleIcon}\n            iconName={'BulletedList'}\n            aria-hidden=\"true\" />\n        </div>\n      </TooltipHost>\n    );\n  }\n\n  /**\n   * Renders the \"Insert Link\" dialog\n   */\n  private renderLinkDialog = (): JSX.Element => {\n    return (\n      <Dialog hidden={this.state.hideDialog}\n        onDismiss={this.closeDialog}\n        dialogContentProps={{\n          type: DialogType.normal,\n          title: \"strings.InsertLinkTitle\",\n        }}\n        modalProps={{\n          className: styles.insertLinkDialog,\n          isBlocking: true,\n          containerClassName: 'ms-dialogMainOverride'\n        }}>\n        <TextField label={\"strings.AddressFieldLabel\"}\n          value={this.state.insertUrl !== undefined ? this.state.insertUrl : \"https://\"}\n          onChange={(_e, newValue?: string) => {\n            this.setState({\n              insertUrl: newValue\n            });\n          }} />\n\n        <TextField label={\"strings.TextToDisplayLabel\"}\n          value={this.state.insertUrlText}\n          onChange={(_e, newValue?: string) => {\n            if (newValue !== this.state.insertUrl) {\n              this.setState({\n                insertUrlText: newValue\n              });\n            }\n          }} />\n\n        <DialogFooter className={styles.actions}>\n          <div className={`ms-Dialog-actionsRight ${styles.actionsRight}`}>\n            {\n              this.state.selectedUrl && (\n                <Link className={`${styles.action} ${styles.unlinkButton}`} onClick={this.handleRemoveLink}>{\"strings.RemoveLinkLabel\"}</Link>\n              )\n            }\n            <PrimaryButton className={styles.action} onClick={this.handleCreateLink} text={\"strings.SaveButtonLabel\"} disabled={this.checkLinkUrl()} />\n            <DefaultButton className={styles.action} onClick={this.closeDialog} text={\"strings.CancelButtonLabel\"} />\n          </div>\n        </DialogFooter>\n      </Dialog>\n    );\n  }\n\n  /**\n  * Renders the \"Insert Image\" dialog\n   */\n  private renderImageDialog = (): JSX.Element => {\n    return (\n      <Dialog hidden={this.state.hideImageDialog}\n        onDismiss={this.closeImageDialog}\n        dialogContentProps={{\n          type: DialogType.normal,\n          title: \"strings.InsertImageTitle\",\n        }}\n        modalProps={{\n          className: styles.insertLinkDialog,\n          isBlocking: true,\n          containerClassName: 'ms-dialogMainOverride'\n        }}>\n        <TextField label={\"strings.AddressFieldLabel\"}\n          value={this.state.insertImageUrl !== undefined ? this.state.insertImageUrl : \"\"}\n          onChange={(_e, newValue?: string) => {\n            this.setState({\n              insertImageUrl: newValue\n            });\n          }} />\n\n        <DialogFooter className={styles.actions}>\n          <div className={`ms-Dialog-actionsRight ${styles.actionsRight}`}>\n            <PrimaryButton className={styles.action} onClick={this.handleInsertImage} text={\"strings.SaveButtonLabel\"} disabled={this.checkImageLinkUrl()} />\n            <DefaultButton className={styles.action} onClick={this.closeImageDialog} text={\"strings.CancelButtonLabel\"} />\n          </div>\n        </DialogFooter>\n      </Dialog>\n    );\n  }\n\n  /**\n   * Renders the Rich Text Editor\n   */\n  public render(): React.ReactElement<IRichTextProps> {\n    const { text } = this.state;\n    const { isEditMode } = this.props;\n    let txt: string = \"\";\n    if (text) txt = text;\n    // If we're not in edit mode, display read-only version of the html\n    if (!isEditMode) {\n      return (\n        <div className={`ql-editor ${styles.richtext} ${this.props.className || ''}`}\n          dangerouslySetInnerHTML={{ __html: txt }}>\n        </div>\n      );\n    }\n\n    // Okay, we're in edit mode.\n    // const { styleOptions: { showStyles, showBold, showItalic,\n    //   showUnderline, showAlign, showList,\n    //   showLink, showMore, showImage } } = this.props;\n\n     const showStyles= this.props.styleOptions?.showStyles;\n     const showBold= this.props.styleOptions?.showBold;\n     const showItalic= this.props.styleOptions?.showItalic;\n     const showUnderline= this.props.styleOptions?.showUnderline;\n     const showAlign= this.props.styleOptions?.showAlign;\n     const showList= this.props.styleOptions?.showList;\n     const showLink= this.props.styleOptions?.showLink;\n     const showMore= this.props.styleOptions?.showMore;\n     const showImage= this.props.styleOptions?.showImage;\n     // , showBold, showItalic,\n    //   showUnderline, showAlign, showList,\n    //   showLink, showMore, showImage } } = this.props;\n\n      const { placeholder} = this.props;\n\n    // Get a unique id for the toolbar\n    const modules = {\n      toolbar: {\n        container: \"#\" + this._toolbarId,\n        handlers: [\n          \"link\" // disable the link handler so we can add our own\n        ]\n      },\n      clipboard: {\n        matchVisual: false // prevents weird bug that inserts blank lines when loading stored text\n      }\n    };\n\n    // Remove fonts and set Segoe UI as the main font\n    let font = Quill.import('formats/font');\n    font.whitelist = ['Segoe UI'];\n    Quill.register(font, true);\n\n    // Set headers and add blockquote capability\n    let header = Quill.import('formats/header');\n    header.tagName = [\n      'H1',\n      'H2',\n      'H3',\n      'H4',\n      'H5',\n      'H6',\n      'blockquote'];\n    Quill.register(header, true);\n\n    // Add the SharePoint font sizes\n    let SizeClass = Quill.import('formats/size');\n    SizeClass.whitelist = [\n      'small',\n      'medium',\n      'mediumplus',\n      'large',\n      'xlarge',\n      'xlargeplus',\n      'xxlarge',\n      'xxxlarge',\n      'xxlargeplus',\n      'super'];\n    Quill.register(SizeClass, true);\n\n    return (\n      <div ref={(ref) => this._wrapperRef = ref} className={`${styles.richtext && this.state.editing ? 'ql-active' : ''} ${this.props.className}`}>\n        <div id={this._toolbarId} style={{ top: this.state.wrapperTop }}>\n          {\n            showStyles && (\n              <Dropdown\n                id=\"DropDownStyles\"\n                className={`${styles.headerDropDown} ${styles.toolbarDropDown}`}\n                onRenderCaretDown={() => <Icon className={styles.toolbarSubmenuCaret} iconName=\"CaretDownSolid8\" />}\n                selectedKey={this.state.formats.header || 0}\n                options={this.ddStyleOpts}\n                onChanged={this.onChangeHeading}\n                onRenderOption={this.onRenderStyleOption}\n                onRenderTitle={this.onRenderStyleTitle}\n              />\n            )\n          }\n          {\n            showBold && (\n              <TooltipHost content={\"strings.BoldTitle\"}\n                id=\"bold-richtextbutton\"\n                calloutProps={{ gapSpace: 0 }}>\n                <IconButton iconProps={{ iconName: 'Bold' }}\n                  aria-describedby=\"bold-richtextbutton\"\n                  checked={this.state.formats.bold}\n                  onClick={this.onChangeBold} />\n              </TooltipHost>\n            )\n          }\n          {\n            showItalic && (\n              <TooltipHost content={\"strings.ItalicTitle\"}\n                id=\"italic-richtextbutton\"\n                calloutProps={{ gapSpace: 0 }}>\n                <IconButton iconProps={{ iconName: 'Italic' }}\n                  aria-describedby=\"italic-richtextbutton\"\n                  checked={this.state.formats.italic}\n                  onClick={this.onChangeItalic} />\n              </TooltipHost>\n            )\n          }\n          {\n            showUnderline && (\n              <TooltipHost content={\"strings.UnderlineTitle\"}\n                id=\"underline-richtextbutton\"\n                calloutProps={{ gapSpace: 0 }}>\n                <IconButton iconProps={{ iconName: 'Underline' }}\n                  aria-describedby=\"underline-richtextbutton\"\n                  checked={this.state.formats.underline}\n                  onClick={this.onChangeUnderline} />\n              </TooltipHost>\n            )\n          }\n          {\n            showAlign && (\n              <Dropdown className={`${styles.toolbarDropDown}`}\n                id=\"DropDownAlign\"\n                onRenderCaretDown={() => <Icon className={styles.toolbarSubmenuCaret} iconName=\"CaretDownSolid8\" />}\n                selectedKey={this.state.formats.align || 'left'}\n                options={this.ddAlignOpts}\n                onChanged={this.onChangeAlign}\n                onRenderOption={this.onRenderAlignOption}\n                onRenderTitle={this.onRenderAlignTitle}\n              />\n            )\n          }\n          {\n            showList && (\n              <Dropdown className={styles.toolbarDropDown}\n                id=\"DropDownLists\"\n                onRenderCaretDown={() => <Icon className={styles.toolbarSubmenuCaret} iconName=\"CaretDownSolid8\" />}\n                selectedKey={this.state.formats.list}\n                options={this.ddListOpts}\n                // this option is not available yet\n                notifyOnReselect={true} // allows re-selecting selected item to turn it off\n                onChanged={this.onChangeList}\n                onRenderOption={this.onRenderListOption}\n                onRenderTitle={this.onRenderListTitle}\n                onRenderPlaceHolder={this.onRenderListPlaceholder}\n              />\n            )\n          }\n          {\n            showLink && (\n              <TooltipHost content={\"strings.LinkTitle\"}\n                id=\"link-richtextbutton\"\n                calloutProps={{ gapSpace: 0 }}>\n                <IconButton checked={this.state.formats!.link !== undefined}\n                  onClick={this.showInsertLinkDialog}\n                  aria-describedby=\"link-richtextbutton\"\n                  iconProps={{\n                    iconName: 'Link'\n                  }} />\n              </TooltipHost>\n            )\n          }\n          {\n            showImage && (\n              <TooltipHost content={\"strings.ImageTitle\"}\n                id=\"image-richtextbutton\"\n                calloutProps={{ gapSpace: 0 }}>\n                <IconButton checked={this.state.formats!.link !== undefined}\n                  onClick={this.showInsertImageDialog}\n                  aria-describedby=\"image-richtextbutton\"\n                  iconProps={{\n                    iconName: 'PictureFill'\n                  }} />\n              </TooltipHost>\n            )\n          }\n          {\n            showMore && (\n              <TooltipHost content={\"strings.MoreTitle\"}\n                id=\"more-richtextbutton\"\n                calloutProps={{ gapSpace: 0 }}>\n                <IconButton iconProps={{ iconName: 'More' }}\n                  aria-describedby=\"more-richtextbutton\"\n                  onClick={this.handleShowMore} />\n              </TooltipHost>\n            )\n          }\n        </div>\n\n        <ReactQuill ref={this.linkQuill}\n          placeholder={placeholder}\n          modules={modules}\n          value={text || ''} //property value causes issues, defaultValue does not\n          onChange={this.handleChange}\n          onChangeSelection={this.handleChangeSelection}\n          onFocus={this.handleOnFocus} />\n\n        <RichTextPropertyPane ref={this.linkPropertyPane}\n          editor={this.getEditor()}\n          isOpen={this.state.morePaneVisible}\n          onClose={this.handleClosePanel}\n          onLink={this.showInsertLinkDialog}\n          customColors={this.props.customColors} />\n\n        {\n          this.renderLinkDialog()\n        }\n        {\n          this.renderImageDialog()\n        }\n\n      </div>\n    );\n  }\n\n  /**\n   * Style trigger events\n   */\n  private onChangeBold = (): void => {\n    const newBoldValue = !this.state.formats.bold;\n    this.applyFormat(\"bold\", newBoldValue);\n  }\n\n  private onChangeItalic = (): void => {\n    const newValue = !this.state.formats.italic;\n    this.applyFormat(\"italic\", newValue);\n  }\n\n  private onChangeUnderline = (): void => {\n    const newValue = !this.state.formats.underline;\n    this.applyFormat(\"underline\", newValue);\n  }\n  private onChangeHeading = (item: IDropdownOption): void => {\n    const newHeadingValue = item.key === 0 ? '' : item.key.toString();\n    this.applyFormat(\"header\", newHeadingValue);\n  }\n\n  private onChangeAlign = (item: IDropdownOption): void => {\n    const newAlignValue = item.key === 'left' ? false : item.key.toString();\n    this.applyFormat(\"align\", newAlignValue);\n  }\n\n  private onChangeList = (item: IDropdownOption): void => {\n    // if we're already in list mode, toggle off\n    const key = item.key;\n    const newAlignValue = (key === 'bullet' && this.state.formats.list === 'bullet') || (key === 'numbered' && this.state.formats.list === 'numbered') ? false : key;\n    console.log(newAlignValue);\n    this.applyFormat(\"list\", newAlignValue);\n  }\n\n  /**\n   * Displays the insert link dialog\n   */\n  private showInsertLinkDialog = () => {\n    const quill = this.getEditor();\n    const { text } = this.state;\n    if (quill && text) {\n      const range = quill.getSelection();\n\n      let linkText = this.state.selectedText;\n      if (this.state.selectedUrl !== undefined && this.state.selectedText === \"\") {\n        const urlStartIndex = text.indexOf(this.state.selectedUrl);\n        const startTextIndex = text.indexOf(\">\", urlStartIndex) + 1;\n        const endTextIndex = text.indexOf(\"<\", startTextIndex);\n        const realLength = endTextIndex - startTextIndex;\n        linkText = text.substr(startTextIndex, realLength);\n\n        //Find where the link text starts and select that\n        const editorText = quill.getText();\n        const linkStart = editorText.indexOf(linkText);\n        if (range) {\n          range.index = linkStart;\n          range.length = linkText.length;\n          this.setState({\n            hideDialog: false,\n            insertUrlText: linkText,\n            insertUrl: this.state.selectedUrl,\n            selectedRange: range\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * Hides the insert link dialog\n   */\n  private closeDialog = () => {\n    this.setState({ hideDialog: true });\n  }\n\n  /**\n   * Displays the insert link dialog\n   */\n  private showInsertImageDialog = () => {\n    const quill = this.getEditor();\n    if (quill) {\n      const range = quill.getSelection();\n\n      this.setState({\n        hideImageDialog: false,\n        selectedRange: range\n      });\n    }\n  }\n\n  /**\n   * Hides the insert image dialog\n   */\n  private closeImageDialog = () => {\n    this.setState({\n      hideImageDialog: true,\n      insertImageUrl: undefined,\n    });\n  }\n\n  /**\n   * When user enters the richtext editor, displays the border\n   */\n  private handleOnFocus = (_range: any, _source: any, _editor: any) => {\n    if (!this.state.editing) {\n      this.setState({ editing: true });\n    }\n  }\n\n  /**\n   * Called when user removes the link\n   */\n  private handleRemoveLink = () => {\n    const quill = this.getEditor();\n    if (quill) {\n      quill.format('link', false);\n    }\n    this.closeDialog();\n  }\n\n  /**\n   * Called when user creates a new link\n   */\n  private handleCreateLink = () => {\n    const quill = this.getEditor();\n    const range = this.state.selectedRange;\n    const cursorPosition: number = range!.index;\n    if (quill) {\n      if (range.length > 0) {\n        quill.deleteText(range.index, range.length);\n      }\n\n      if (cursorPosition > -1) {\n        const textToInsert: string | undefined = (this.state.insertUrlText !== undefined && this.state.insertUrlText !== \"\") ? this.state.insertUrlText : this.state.insertUrl;\n        const urlToInsert: string | undefined = this.state.insertUrl;\n        if (textToInsert) {\n          quill.insertText(cursorPosition, textToInsert);\n          quill.setSelection(cursorPosition, textToInsert.length);\n          quill.formatText(cursorPosition, textToInsert.length, 'link', urlToInsert);\n        }\n      }\n\n      this.setState({\n        hideDialog: true,\n        insertUrl: undefined,\n        insertUrlText: undefined\n      });\n    }\n  }\n\n  /**\n   * Called when user insert an image\n   */\n  private handleInsertImage = () => {\n    const { insertImageUrl, selectedRange } = this.state;\n    try {\n      const quill = this.getEditor();\n      const cursorPosition: number = selectedRange!.index;\n      if (quill) {\n        quill.insertEmbed(cursorPosition, 'image', insertImageUrl, \"user\");\n      }\n      this.setState({\n        insertImageUrl: undefined,\n        hideImageDialog: true,\n      });\n    } catch {\n      //Close the image dialog if something went wrong\n      this.setState({\n        insertImageUrl: undefined,\n        hideImageDialog: true,\n      });\n    }\n  }\n\n  /**\n   * Disable Save-button if hyperlink is undefined or empty\n   * This prevents the user of adding an empty hyperlink\n   */\n  private checkLinkUrl = () => {\n    if (this.state.insertUrl !== undefined && this.state.insertUrl !== \"\") {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Disable Save-button if hyperlink for the imported image is undefined or empty\n   * This prevents the user of adding an empty image\n   */\n  private checkImageLinkUrl = () => {\n    if (this.state.insertImageUrl !== undefined && this.state.insertImageUrl !== \"\") {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Applies a format to the selection\n   * @param name format name\n   * @param value format value, or false to unset format\n   */\n  private applyFormat(name: string, value: any) {\n    const quill = this.getEditor();\n    if (quill) {\n      quill.format(name, value);\n\n      // We use a timeout to ensure that format has been applied and buttons are updated\n      setTimeout(() => {\n        this.handleChangeSelection(quill.getSelection(), undefined, undefined);\n      }, 100);\n    }\n  }\n\n  /**\n   * Called when richtext selection changes\n   */\n  private handleChangeSelection = (range: any, oldRange: any, source: any) => {\n    const quill = this.getEditor();\n    try {\n      if (quill) {\n        // Get the selected text\n        const selectedText = quill.getText(range);\n\n        // Get the current format\n        const formats = quill.getFormat(range);\n\n        // Get the currently selected url\n        const selectedUrl = formats.link ? formats.link : undefined;\n\n        this.setState({\n          selectedText: selectedText,\n          selectedUrl: selectedUrl,\n          formats: formats\n        });\n\n        if (this._propertyPaneRef && this.state.morePaneVisible) {\n          this._propertyPaneRef.onChangeSelection(range, oldRange, source);\n        }\n      }\n    } catch (error) {\n\n    }\n  }\n\n  /**\n   * Called when user clicks on the close icon\n   */\n  private handleClosePanel = (): void => {\n    this.closePanel();\n  }\n\n  /**\n   * Closes the panel\n   */\n  private closePanel = (): void => {\n    this.setState({ morePaneVisible: false });\n  }\n\n  /**\n   * Called when user clicks on the more button\n   */\n  private handleShowMore = () => {\n    const quill = this.getEditor();\n      if (quill) {\n  this.setState({\n      morePaneVisible: !this.state.morePaneVisible\n    }, () => {\n      quill.focus();\n    });\n  }\n  }\n\n  /**\n   * Called when user changes the text of the editor\n   */\n  private handleChange = (value: string) => {\n    const { onChange } = this.props;\n\n    const newState: any = {};\n\n    const quill = this.getEditor();\n    if (quill) {\n      const range = quill.getSelection();\n      if (range) {\n        const formats = quill.getFormat(range);\n\n        if (!isEqual(formats, this.state.formats)) {\n          console.log(`current format: ${formats.list}`);\n          newState.formats = formats;\n        }\n      }\n\n    }\n\n    // do we need to pass this to a handler?\n    if (onChange) {\n      // yes, get the changed text from the handler\n      let newText: string = onChange(value);\n      newState.text = newText;\n    } else {\n      // no, write the text to the state\n      newState.text = value;\n    }\n\n    this.setState({\n      ...newState\n    });\n  }\n\n  /**\n   * Keeps track of whether we clicked outside the element\n   */\n  private handleClickOutside = (event: any) => {\n    let outside: boolean = !elementContains(this._wrapperRef, event.target);\n\n    // Did we click outside?\n    if (outside) {\n      // If we are currently editing, stop editing\n      // -- unless we're using the property pane or the dialog\n      if (this.state.editing) {\n        this.setState({\n          editing: false\n        });\n      }\n    } else {\n      // We clicked inside\n      if (!this.state.editing) {\n        // if we aren't currently editing, start editing\n        this.setState({ editing: true });\n      }\n    }\n  }\n\n  /**\n   * Links to the quill reference\n   */\n  private linkQuill = (e: any) => {\n    this._quillElem = e;\n  }\n\n  /**\n   * Links to the property pane element\n   */\n  private linkPropertyPane = (e: any) => {\n    this._propertyPaneRef = e;\n  }\n}\n","import * as React from 'react';\nimport styles from './SemTalkAttributes.module.scss';\nimport {\n  Selection, ISelection, IColumn, DetailsList, DetailsListLayoutMode,\n  CheckboxVisibility, CommandBar, TextField, DefaultButton, Label,\n  Dropdown, IDropdownOption, Checkbox,\n  ComboBox, IComboBoxOption, IComboBox,// MaskedTextField,\n  DatePicker, Stack\n} from 'office-ui-fabric-react';\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\n\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\n\nimport {\n  IObjectBase, ISemTalkObject,\n  ISemTalkNode, SemTalkType, ISemTalkAttribute, SemTalkValueType, ISemTalkInstance,\n  SemTalkBaseConstant\n} from \"../../application/tbase/Interface\";\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n// import { WebPartContext } from '@microsoft/sp-webpart-base';\n//import { SetContext } from '../../semtalkportal/restinterface';\nimport { Guid } from \"guid-typescript\";\n// import * as strings from 'SemTalkStrings';\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\n// import { TimePicker } from 'react-time-picker';\nimport { RichText } from \"../richText\";\n// import { RichTextEditor } from \"react-rte/lib/RichTextEditor\";\n// import { DateTimePicker, DateConvention, TimeConvention } from '@pnp/spfx-controls-react/lib/dateTimePicker';\n\nexport interface ISemTalkAttributesTabProps {\n  title?: string;\n  description?: string;\n  semtalk: IVisioRDFS;\n  context?: any;\n  gotonodes?: boolean;\n  goodlist?: string[];\n  badlist?: string[];\n  showtype?: boolean;\n  shownodes?: boolean;\n  showproperties?: boolean;\n  shownav?: boolean;\n  navigateproperties?: boolean;\n  hidebpmn?: string[];\n  hidesimulation?: string[];\n  showgroups: boolean;\n}\nexport interface ISemTalkAttributesTabState {\n  objectid: number;\n  items: IAttributesTab[];\n  hasError: boolean;\n  isact: boolean;\n  isres: boolean;\n  isclass: boolean;\n  base: IObjectBase;\n  newitem: boolean;\n  sel: ISelection;\n  singleitem: boolean;\n  newattr: string;\n  newitemtype: SemTalkValueType;\n  required: boolean;\n  allowfreeform: boolean;\n\n}\ninterface IAttributesTab {\n  ID: number;\n  Object: ISemTalkObject;\n  Owner: ISemTalkObject;\n  Attribute: ISemTalkAttribute;\n  PropName: string;\n  PropType: SemTalkType;\n  PropValue: any | undefined;\n  PropValueName: ISemTalkObject | null;\n  PropValueCaption: string | null;\n  _label: string;\n  _value: string;\n  Node?: ISemTalkNode;\n  ischecked: boolean;\n}\nexport class SemTalkAttributesTab extends React.Component<ISemTalkAttributesTabProps, ISemTalkAttributesTabState> {\n  // private _selection: Selection;\n  private object: ISemTalkObject | null = null;\n  // private objecttypecaption: string = \"\";\n  public callback: Guid;\n  //public me = this;\n  private attrtypes: IDropdownOption[] = [];\n\n  constructor(props: ISemTalkAttributesTabProps) {\n    super(props);\n    console.debug(\"showAttributesTab\");\n    // _gotonodes = this.props.gotonodes;\n    this.callback = Guid.create();\n    this.state = {\n      // filter: this.props.filter,\n      objectid: -1,\n      items: [],\n      hasError: false,\n      isact: false,\n      isres: false,\n      isclass: false,\n      base: this.props.semtalk.base,\n      newitem: false,\n      sel: new Selection({}),\n      singleitem: false,\n      newattr: \"\",\n      newitemtype: SemTalkValueType.Symbol,\n      //  goto_context: this.props.goto_context\n      required: false,\n      allowfreeform: true,\n    };\n  }\n  private resetState = () => {\n    this.setState({\n      // filter: this.props.filter,\n      objectid: -1,\n      items: [],\n      hasError: false,\n      isact: false,\n      isres: false,\n      isclass: false,\n      base: this.props.semtalk.base,\n      newitem: false,\n      singleitem: false,\n      newitemtype: SemTalkValueType.Symbol,\n      //  goto_context: this.props.goto_context\n      required: false,\n      allowfreeform: true,\n    });\n  }\n  private mounted: boolean = false;\n\n  public async componentDidMount() {\n    // if (this.props.context && this.props.filter) {\n    //   SetContext(this.props.context, this.props.filter, this.props.token, this.props.service);\n    // }\n    // this.act = await MetaModel(\"SLActivity\");\n    // this.res = await MetaModel(\"SLResource\");\n    this.mounted = true;\n    let oid: number = getObject();\n    if (oid > 0) {\n      this.loadObject(oid);\n    }\n    addCallBack(this);\n  }\n  public componentWillUnmount() {\n    removeCallBack(this);\n    this.mounted = false;\n    this.object = null;\n  }\n\n  private loadObject = (id: number) => {\n    this.object = this.state.base.FindObjectByID(id);\n    if (this.object !== null) {\n      const isclass = this.state.base.IsClass(this.object);\n      const items = this.getItems(this.object, isclass);\n      this.setState({ objectid: id, items: items, isclass: isclass });\n    } else {\n      this.resetState();\n    }\n  }\n\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    try {\n      md = JSON.parse(e.data);\n      var mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkNavigationEvent.gotoObject:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n          // this.forceUpdate();\n        }\n        break;\n      case SemTalkNavigationEvent.gotoNode:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n    }\n  }\n\n  private getItems = (obj: ISemTalkObject, isclass: boolean): any[] => {\n    let items: IAttributesTab[] = [];\n\n    if (this.props.showproperties === undefined || this.props.showproperties) {\n      let gl: string[] | undefined = this.props.goodlist;\n      if (gl === undefined) gl = [];\n      let bl: string[] = [];\n      if (this.props.badlist !== undefined) bl = this.props.badlist;\n\n      let bpmnl: string[] | undefined = this.props.hidebpmn;\n      let siml: string[] | undefined = this.props.hidesimulation;\n      if (bpmnl !== undefined) {\n        bl.push(...bpmnl);\n      }\n      if (siml !== undefined) {\n        bl.push(...siml);\n      }\n      bl.push(SemTalkBaseConstant.SLComment);\n      // bl.push(\"Kommentar\");\n      bl.push(SemTalkBaseConstant.SLUserNumber);\n      bl.push(\"OT\");\n      bl.push(\"ST\");\n      bl.push(\"AT\");\n      bl.push(\"CT\");\n      bl.push(\"MT\");\n      bl.push(SemTalkBaseConstant.SLMXGAttribute);\n\n      this.attrtypes = [];\n      for (const atype of this.state.base.AllAttributeTypes().sort((x, y) => x.ObjectCaption.localeCompare(y.ObjectCaption))) {\n        this.attrtypes.push({ key: atype.ObjectName, text: atype.ObjectCaption });\n      }\n      const allattr = obj.AllAttributes();\n      for (let attr of allattr) {\n        let hide: boolean = false;\n        if (!isclass) {\n          if (!this.props.showgroups) {\n            const aname = attr.ClassOf().ObjectName;\n            const oattr = attr.Owner.FindAttribute(aname);\n            if (oattr)\n              hide = (oattr.Group !== \"\");\n          }\n        }\n        if (!hide) {\n          let lbl = attr.ClassOf().ID2NameNsp();\n          if (attr.Owner.ObjectName !== obj.ObjectName) {\n            lbl = lbl + \" (\" + attr.Owner.ObjectCaption + \")\";\n          }\n          if (attr.Group !== \"\") {\n            lbl = lbl + \" [\" + attr.Group + \"]\";\n          }\n          let item: IAttributesTab = {\n            ID: items.length,\n            PropName: attr.ClassOf().ObjectName,\n            Object: obj,\n            Owner: attr.Owner,\n            Attribute: attr,\n            PropType: SemTalkType.SemTalkAttribute,\n            PropValue: attr.Value,\n            _label: lbl,\n            _value: attr.Value,\n            PropValueName: null,\n            PropValueCaption: null,\n            ischecked: (attr.Value === \"True\")\n          };\n          if (gl !== undefined && gl.length > 0) {\n            if (gl.indexOf(item.PropName) > -1) {\n              items.push(item);\n            }\n          } else {\n            if (bl !== undefined && bl.length > 0) {\n              if (bl.indexOf(item.PropName) < 0) {\n                items.push(item);\n              }\n            } else {\n              items.push(item);\n            }\n          }\n        }\n      }\n    }\n\n    return items;\n  }\n  public componentDidCatch(_error: any, _info: any) {\n    this.setState({ hasError: true });\n  }\n\n  private _columns: IColumn[] = [\n    {\n      key: 'Value',\n      name: \"Value\",\n      fieldName: 'Value',\n      minWidth: 200,\n      // maxWidth: 180,\n      isResizable: true,\n      isMultiline: true,\n      onRender: (item: IAttributesTab, _index?: number, _column?: IColumn) => {\n        // let cap = item.PropValue;\n        let attr = item.Attribute;\n        if (item.Object.ObjectBase.IsInstance(item.Object)) {\n          const cla = (item.Object as ISemTalkInstance).ClassOf();\n          const inherited_attr = cla.GetAttributeOwner(item.PropName);\n          if (inherited_attr !== null) {\n            attr = inherited_attr;\n          }\n        }\n        // return <span>{cap}</span>;\n        let r: any;\n        switch (attr.ValueType) {\n          case SemTalkValueType.Boolean: {\n            r = <Checkbox id=\"checkbox\" checked={item.ischecked} label={item._label} onChange={(_ev, isChecked: boolean | undefined) => {\n              if (isChecked !== undefined) {\n                if (isChecked) {\n                  item.PropValue = \"True\";\n                  item.ischecked = true;\n                  item.Object.SetValue(item.PropName, \"True\");\n                  if (this.object) {\n                    const items = this.getItems(this.object, this.state.isclass);\n                    this.setState({ items: items });\n                  }\n                } else {\n                  item.PropValue = \"False\";\n                  item.ischecked = false;\n                  item.Object.SetValue(item.PropName, \"False\");\n                  if (this.object) {\n                    const items = this.getItems(this.object, this.state.isclass);\n                    this.setState({ items: items });\n                  }\n                }\n              }\n            }\n            }></Checkbox >;\n            break;\n          }\n          case SemTalkValueType.Date: {\n            let d: Date | undefined;\n            if (item.PropValue !== undefined && item.PropValue !== null) {\n              d = new Date(item.PropValue);\n              if (d.toString() === \"Invalid Date\")\n                d = undefined;\n            }\n            r = <DatePicker id=\"datepicker\"\n              label={item._label}\n              // className={controlClass.control}\n              // firstDayOfWeek={firstDayOfWeek}\n              // strings={DayPickerStrings}\n              value={d}\n              placeholder=\"Select a date...\"\n              ariaLabel=\"Select a date\"\n              onSelectDate={(date: Date | null | undefined) => {\n                if (date !== undefined && date !== null) {\n                  item.PropValue = date.toDateString();\n                  item.Object.SetValue(item.PropName, date.toDateString());\n                } else {\n                  item.PropValue = undefined;\n                  item.Object.SetValue(item.PropName, null);\n                }\n              }}\n            />;\n            break;\n          }\n          case SemTalkValueType.Duration: {\n\n            let timerTime = Number(item.PropValue);\n            //  console.debug(item.PropValue + \" \" + Number(item.PropValue));\n            timerTime = Number(item.PropValue);\n\n            // let days = Math.floor(timerTime / 48400);\n            // let hours = Math.floor(timerTime % 48400 / 3600);\n            // let minutes = Math.floor(timerTime % 48400 % 3600 / 60);\n            // let seconds = Math.floor(timerTime % 48400 % 3600 % 60);\n\n            let days = 0;\n            let hours = Math.floor(timerTime / 3600);\n            let minutes = Math.floor(timerTime % 3600 / 60);\n            let seconds = Math.floor(timerTime % 3600 % 60);\n            r =\n              <div>\n                <Label>{item._label}</Label>\n                <TextField id=\"timertime\" type=\"time\"></TextField>\n                <Stack horizontal>\n                  {/*                   <TextField type=\"number\" width=\"80px\" max-width=\"80px\" min={0} max={10000} label={this.props.semtalk.getResStrListener(\"STRBONSIMCAPDAYS\")} defaultValue={days.toString()} required={attr.Required} onChange={(ev, a) => {\n                      if (a) {\n                        days = Number(a);\n                        timerTime = seconds + minutes * 60 + hours * 3600 + days * 48400;\n                        item.PropValue=timerTime;\n                        item.Object.SetValue(item.PropName, timerTime);\n                      }\n                    }}></TextField>\n                    <span>{\"   \"}</span>\n   */}                  <TextField id=\"timerTF1\" type=\"number\" width=\"80px\" max-width=\"80px\" min={0} max={10000} label={this.props.semtalk.getResStrListener(\"STRBONSIMCAPHOUR\")} defaultValue={hours.toString()} required={attr.Required} onChange={(_ev, a) => {\n                    if (a) {\n                      hours = Number(a);\n                      timerTime = seconds + minutes * 60 + hours * 3600 + days * 48400;\n                      item.PropValue = timerTime;\n                      item.Object.SetValue(item.PropName, timerTime);\n                    }\n\n                  }}></TextField>\n                  <span>{\"   \"}</span>\n                  <TextField id=\"timerTF2\" type=\"number\" width=\"80px\" max-width=\"80px\" min={0} max={10000} label={this.props.semtalk.getResStrListener(\"STRBONSIMCAPMINU\")} defaultValue={minutes.toString()} required={attr.Required} onChange={(_ev, a) => {\n                    if (a) {\n                      minutes = Number(a);\n                      timerTime = seconds + minutes * 60 + hours * 3600 + days * 48400;\n                      item.PropValue = timerTime;\n                      item.Object.SetValue(item.PropName, timerTime);\n                    }\n\n                  }}></TextField>\n                  <span>{\"   \"}</span>\n                  <TextField id=\"timerTF3\" type=\"number\" width=\"80px\"\n                    max-width=\"80px\" min={0} max={10000} label={this.props.semtalk.getResStrListener(\"STRBONSIMCAPSECO\")} defaultValue={seconds.toString()} required={attr.Required} onChange={(_ev, a) => {\n                      if (a) {\n                        seconds = Number(a);\n                        timerTime = seconds + minutes * 60 + hours * 3600 + days * 48400;\n                        item.PropValue = timerTime;\n                        item.Object.SetValue(item.PropName, timerTime);\n                      }\n                    }}></TextField>\n                </Stack></div>;\n            break;\n          }\n          case SemTalkValueType.Float:\n          case SemTalkValueType.Integer: {\n            let min = 0;\n            let max = 10000000000;\n            if (item.Attribute.Min) min = item.Attribute.Min;\n            if (item.Attribute.Max) max = item.Attribute.Max;\n            r = <TextField id=\"numberTF\" type=\"number\" min={min} max={max} defaultValue={item.PropValue} label={item._label} required={attr.Required} onChange={(_ev, a) => {\n              item.PropValue = a;\n              item.Object.SetValue(item.PropName, Number(a));\n            }}></TextField>;\n            // r = <SpinButton value={item.PropValue} min={attr.Min} max={attr.Max}\n            //   label={item._label} labelPosition={0}\n            //   onValidate={(value: string): string => {\n            //     let val = Number(value);\n            //     if (val > attr.Max) {\n            //       item.Object.SetValue(item.PropName, attr.Max);\n            //       return String(attr.Max);\n            //     }\n            //     if (val < attr.Min) {\n            //       item.Object.SetValue(item.PropName, attr.Min);\n            //       return String(attr.Min);\n            //     }\n            //     item.Object.SetValue(item.PropName, val);\n            //     return String(val);\n            //   }}\n            //   onIncrement={(value: string) => {\n            //     let val = Number(value);\n            //     if (val + 1 > attr.Max) {\n            //       return value;\n            //     } else {\n            //       val = val + 1;\n            //       item.Object.SetValue(item.PropName, val);\n            //       return String(val);\n            //     }\n            //   }}\n            //   onDecrement={(value: string) => {\n            //     let val = Number(value);\n            //     if (val - 1 < attr.Min) {\n            //       return value;\n            //     } else {\n            //       val = val - 1;\n            //       item.Object.SetValue(item.PropName, val);\n            //       return String(val);\n            //     }\n            //   }}\n            // ></SpinButton>;\n            break;\n          }\n          // case SemTalkValueType.Duration: {\n          //   r = <MaskedTextField mask=\"999d 99h 99m\" defaultValue={item.PropValue} label={item._label} required={attr.Required} onChange={(ev, a) => {\n          //     item.PropValue = a;\n          //     item.Object.SetValue(item.PropName, a);\n          //   }}></MaskedTextField>;\n          //   break;\n          // }\n          case SemTalkValueType.Color: {\n            r = <TextField id=\"colorTF\" type=\"color\" defaultValue={item.PropValue} width=\"50\" label={item._label} required={attr.Required} onChange={(_ev, a) => {\n              item.PropValue = a;\n              item.Object.SetValue(item.PropName, a);\n            }}></TextField>;\n            break;\n          }\n          case SemTalkValueType.File: {\n            r = <TextField id=\"fileTF\" type=\"file\" defaultValue={item.PropValue} label={item._label} required={attr.Required} onChange={(_ev, a) => {\n              item.PropValue = a;\n              item.Object.SetValue(item.PropName, a);\n            }}></TextField>;\n            break;\n          }\n          case SemTalkValueType.URL: {\n            r = <TextField id=\"urlTF\" type=\"url\" defaultValue={item.PropValue} label={item._label} required={attr.Required} onChange={(_ev, a) => {\n              item.PropValue = a;\n              item.Object.SetValue(item.PropName, a);\n            }}></TextField>;\n            break;\n          }\n          case SemTalkValueType.Email: {\n            r = <TextField id=\"emailTF\" type=\"email\" defaultValue={item.PropValue} label={item._label} required={attr.Required} onChange={(_ev, a) => {\n              item.PropValue = a;\n              item.Object.SetValue(item.PropName, a);\n            }}></TextField>;\n            break;\n          }\n          case SemTalkValueType.Password: {\n            r = <TextField id=\"passwordTF\" type=\"password\" defaultValue={item.PropValue} label={item._label} required={attr.Required} onChange={(_ev, a) => {\n              item.PropValue = a;\n              item.Object.SetValue(item.PropName, a);\n            }}></TextField>;\n            break;\n          }\n          // case SemTalkValueType.Tel: {\n          //   // mask=\"/^[0-9\\+]{1,}[0-9\\-]{3,15}$/\"\n          //   r = <MaskedTextField type=\"tel\" defaultValue={item.PropValue} label={item._label}\n          //     required={attr.Required} mask=\"[0-9]*{1,}[0-9\\-]{3,15}$/\" onChange={(ev, a) => {\n          //     item.PropValue = a;\n          //     item.Object.SetValue(item.PropName, a);\n          //   }}></MaskedTextField>;\n          //   break;\n          // }\n          default:\n            let iscombo = (attr.Options.length > 0);\n            if (iscombo) {\n              let options: IComboBoxOption[] = [];\n              for (const o of attr.Options)\n                options.push({ \"key\": o, \"text\": o });\n              r = <ComboBox id=\"stCombobox\" text={item.PropValue} label={item._label}\n                options={options}\n                allowFreeform={attr.AllowFreeForm} required={attr.Required}\n                //  autoComplete=\"on\"\n                onChange={(_event: React.FormEvent<IComboBox>, option?: IComboBoxOption, _index1?: number, value?: string) => {\n                  if (option !== undefined) {\n                    item.PropValue = option.text;\n                    item.Object.SetValue(item.PropName, option.text);\n                  } else {\n                    item.PropValue = value;\n                    item.Object.SetValue(item.PropName, value);\n                  }\n                  this.setState({ newitem: false, items: this.getItems(item.Object, this.state.isclass) });\n                }}></ComboBox>;\n\n            } else {\n              r = <TextField id=\"defaultTF\" defaultValue={item.PropValue} label={item._label} required={attr.Required} onChange={(_ev, a) => {\n                item.PropValue = a;\n                item.Object.SetValue(item.PropName, a);\n              }}></TextField>;\n            }\n        }\n        return r;\n      }\n    }\n  ];\n  private editoritem = {\n    //    title: \"\",\n    type: SemTalkValueType.Symbol,\n    value: \"\",\n    largevalue: \"\",\n    label: \"\",\n    options: \"\",\n    min: 0,\n    max: 100,\n    required: false,\n    allowfreeform: true,\n    group: \"\",\n    weight: 0\n  };\n  private types: IDropdownOption[] = [\n    { key: SemTalkValueType.Symbol, text: 'String' },\n    // { key: SemTalkValueType.File, text: 'File' },\n    { key: SemTalkValueType.Date, text: 'Date' },\n    { key: SemTalkValueType.Duration, text: 'Duration' },\n    { key: SemTalkValueType.Float, text: 'Float' },\n    { key: SemTalkValueType.Integer, text: 'Integer' },\n    { key: SemTalkValueType.Boolean, text: 'Boolean' },\n    { key: SemTalkValueType.Color, text: 'Color' },\n    { key: SemTalkValueType.Email, text: 'Email' },\n    { key: SemTalkValueType.Password, text: 'Password' },\n    { key: SemTalkValueType.URL, text: 'URL' },\n    { key: SemTalkValueType.Tel, text: 'Tel' },\n    { key: SemTalkValueType.Script, text: 'Script' },\n  ];\n  private cancelnew = (): void => {\n    this.setState({ newitem: false });\n  }\n\n  private newItem = () => {\n    if (this.state.singleitem) return;\n    //  this.editoritem.title = \"\";\n    this.editoritem.value = \"\";\n    this.editoritem.type = SemTalkValueType.Symbol;\n    this.editoritem.required = false;\n    this.editoritem.allowfreeform = true;\n    this.editoritem.group = \"\";\n    this.editoritem.weight = 0;\n    // console.debug(this.newitem);\n    this.setState({\n      newitem: !this.state.newitem, newattr: \"\", newitemtype: this.editoritem.type,\n      required: this.editoritem.required,\n      allowfreeform: this.editoritem.allowfreeform\n    });\n  }\n  private editValue = (): void => {\n    if (this.state.newitem) return;\n    if (this.state.sel.getSelection().length === 0) return;\n    if (!this.state.singleitem) {\n      let item = this.state.sel.getSelection()[0] as IAttributesTab;\n      if (item !== undefined) {\n        //  this.editoritem.title = item.PropName;\n        this.editoritem.label = item._label; // 576-587\n        if (item.PropValue !== undefined)\n          this.editoritem.largevalue = item.PropValue;\n        this.setState({ singleitem: !this.state.singleitem, newattr: item.PropName });\n      }\n    } else {\n      if (this.object !== null) {\n        let item = this.state.sel.getSelection()[0] as IAttributesTab;\n        if (item !== null) {\n          let lv = this.editoritem.largevalue;\n          if (lv.substr(0, 3) === \"<p>\") lv = lv.substr(3);\n          if (lv.substr(lv.length - 4) === \"</p>\") lv = lv.substr(0, lv.length - 4);\n          this.editoritem.value = lv;\n          this.object.SetValue(item.PropName, lv);\n          this.setState({ singleitem: !this.state.singleitem, items: this.getItems(this.object, this.state.isclass) });\n        }\n      }\n    }\n  }\n  private editItem = (): void => {\n    if (this.state.singleitem) return;\n\n    if (this.state.newitem) {\n      this.setState({ newitem: false, newattr: \"\" }); //595-596\n      return;\n    }\n    if (this.state.sel.getSelection().length === 0) return;\n    let item = this.state.sel.getSelection()[0] as IAttributesTab;\n    if (item !== undefined) {\n      //  this.editoritem.title = item.PropName;\n      if (item.PropValue !== undefined)\n        this.editoritem.value = item.PropValue;\n      if (item.Attribute.Min !== null)\n        this.editoritem.min = item.Attribute.Min; // 604\n      if (item.Attribute.Max !== null)\n        this.editoritem.max = item.Attribute.Max;\n      this.editoritem.type = item.Attribute.ValueType;\n      this.editoritem.required = item.Attribute.Required;\n      this.editoritem.allowfreeform = item.Attribute.AllowFreeForm;\n      this.editoritem.group = item.Attribute.Group;\n      this.editoritem.weight = item.Attribute.Weight;\n\n      let options = item.Attribute.Options;\n      let v = \"\";\n      for (const vv of options) {\n        v = v + vv + \"; \"; // 616\n      }\n      if (v.length > 0) { v = v.substr(0, v.length - 2); }\n      if (v !== \"\") { this.editoritem.options = v; }\n      // console.debug(this.newitem);\n      this.setState({\n        newitem: true, newattr: item.PropName,\n        newitemtype: this.editoritem.type,\n        required: this.editoritem.required,\n        allowfreeform: this.editoritem.allowfreeform\n      });\n    }\n  }\n  private deleteItem = (): void => {\n    if (this.state.singleitem || this.state.newitem) return;\n    if (this.state.sel.getSelection().length === 0) return;\n    let item = this.state.sel.getSelection()[0] as IAttributesTab;\n    if (item !== undefined) {\n      if (this.object !== null) {\n        this.object.DeleteAttribute(item.PropName);\n        this.setState({ newitem: false, items: this.getItems(this.object, this.state.isclass) });\n      }\n    }\n  }\n  private addnewitem = (): void => {\n    if (this.state.newattr.length > 0) {\n      if (this.object !== null) {\n        let att = this.object.MakeAttribute(this.state.newattr, this.editoritem.value);\n        if (att !== null) {\n          att.ValueType = this.editoritem.type;\n          if (this.editoritem.min !== 0) att.Min = this.editoritem.min;\n          if (this.editoritem.max !== 0) att.Max = this.editoritem.max;\n          att.Required = this.editoritem.required;\n          att.Group = this.editoritem.group;\n          att.Weight = this.editoritem.weight;\n          //if (this.newitem.options !== undefined) {\n          if (this.editoritem.options.length > 0) {\n            att.Options = this.editoritem.options.split(\"; \"); // 652\n          } else {\n            att.Options = [];\n          }\n          //}\n          this.setState({\n            newitem: false, items: this.getItems(this.object, this.state.isclass)\n          });\n        }\n      } else {\n        this.setState({ newitem: false }); // 662\n      }\n    }\n  }\n  private commands = [\n    {\n      key: 'Add',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDNE\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Add'\n      },\n      onClick: this.newItem\n    },\n    {\n      key: 'Edit',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDED\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: { iconName: 'Edit' },\n      onClick: this.editItem,\n    },\n    {\n      key: 'EditValue',\n      name: this.props.semtalk.getResStrListener(\"STRDLGTABVAL\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: { iconName: 'Page' },\n      onClick: this.editValue,\n    },\n    {\n      key: 'Delete',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\n      iconProps: { iconName: 'Delete' },\n      onClick: this.deleteItem\n    }];\n  private selectType = (a: IDropdownOption) => {\n    this.editoritem.type = a.key as SemTalkValueType; // 697-698\n    this.setState({ newitemtype: this.editoritem.type });\n  }\n  public render(): React.ReactElement<ISemTalkAttributesTabProps> {\n    // let val: any[] = this.getItems();\n    // let val: any[] = this.state.items;\n    // this.me._selection = new Selection({});\n    const stackTokens = { childrenGap: 10 };\n    let r: React.ReactElement<ISemTalkAttributesTabProps>;\n    r = <Fabric>\n      <div id=\"STAttributesTest\" className={styles.semTalkAttr}><div className={styles.pivottab}></div></div>\n      <CommandBar id=\"STbuttons\"\n        items={this.commands}\n      ></CommandBar>\n      <div className={styles.semTalkAttr}><div className={styles.pivottab}></div></div>\n      {this.state.newitem && !this.state.singleitem &&\n        <div>\n          <Stack tokens={stackTokens}>\n            <ComboBox id=\"attribute\" text={this.state.newattr} label={this.props.semtalk.getResStrListener(\"STRBONATTR1\")}\n              options={this.attrtypes} // Attribute\n              allowFreeform\n              //  autoComplete=\"on\"\n              onChange={(_event: React.FormEvent<IComboBox>, option?: IComboBoxOption, _index?: number, value?: string) => {\n                if (option !== undefined) {\n                  this.setState({ newattr: option.text });\n                } else {\n                  if (value !== undefined)\n                    this.setState({ newattr: value });\n                }\n              }}>\n            </ComboBox>\n            <TextField id=\"valueField\" defaultValue={this.editoritem.value} // value:\n              label={this.props.semtalk.getResStrListener(\"STRDLGEAVALUE\")}\n              multiline={this.state.newitemtype === SemTalkValueType.Symbol}\n              onChange={(_ev, a) => {\n                if (a !== undefined)\n                  this.editoritem.value = a;\n              }}></TextField>\n\n            {this.state.isclass && <Dropdown id=\"datatype\" // data type\n              label={this.props.semtalk.getResStrListener(\"STRDLGEATYPE\")}\n              defaultSelectedKey={this.editoritem.type}\n              // selectedKey={this.newitem.type}\n              options={this.types}\n              onChange={(_ev, a) => {\n                if (a !== undefined) // 742-804\n                  this.selectType(a);\n              }}\n            />}\n            {this.state.isclass && (this.state.newitemtype === SemTalkValueType.Integer || this.state.newitemtype === SemTalkValueType.Float) &&\n              <Stack horizontal={true} tokens={stackTokens}>\n                <TextField id=\"minField\" type=\"number\" defaultValue={String(this.editoritem.min)} label={this.props.semtalk.getResStrListener(\"STRDLGOWLMIN\")} onChange={(_ev, a) => {\n                  if (a !== undefined)\n                    this.editoritem.min = Number(a);\n                  else\n                    this.editoritem.min = 0;\n                }}></TextField>\n                <TextField id=\"maxField\" type=\"number\" defaultValue={String(this.editoritem.max)} label={this.props.semtalk.getResStrListener(\"STRDLGOWLMAX\")} onChange={(_ev, a) => {\n                  if (a !== undefined)\n                    this.editoritem.max = Number(a);\n                  else\n                    this.editoritem.max = 0;\n                }}></TextField>\n              </Stack>\n            }\n            {this.state.isclass && this.state.newitemtype === SemTalkValueType.Symbol && <TextField id=\"valueField3\" defaultValue={this.editoritem.options} label={this.props.semtalk.getResStrListener(\"STRDLGEACMDOPT\")} onChange={(_ev, a) => {\n              if (a !== undefined) // value\n                this.editoritem.options = a;\n            }}></TextField>}\n            {this.state.isclass && <Checkbox id=\"checkbox1\" checked={this.state.required} label={this.props.semtalk.getResStrListener(\"STRDLGREQUIREDATTR\")}\n              onChange={(_ev: any, isChecked: boolean | undefined) => { // required checkbox\n                if (isChecked !== undefined) {\n                  this.editoritem.required = isChecked;\n                  this.setState({ required: isChecked });\n                }\n              }}></Checkbox>}\n            {this.state.isclass && this.state.newitemtype === SemTalkValueType.Symbol && <Checkbox id=\"checkbox2\" checked={this.state.allowfreeform} label={this.props.semtalk.getResStrListener(\"STRDLGALLOWFREEFORMATTR\")}\n              onChange={(_ev: any, isChecked: boolean | undefined) => { // free form checkbox\n                if (isChecked !== undefined) {\n                  this.editoritem.allowfreeform = isChecked;\n                  this.setState({ allowfreeform: isChecked });\n                }\n              }}></Checkbox>}\n            {this.state.isclass && <TextField id=\"groupField\" defaultValue={this.editoritem.group} label={this.props.semtalk.getResStrListener(\"STRDLGCLLAYOUTATTRGRP\")} onChange={(_ev, a) => {\n              if (a !== undefined) // group\n                this.editoritem.group = a;\n            }}></TextField>}\n            {this.state.isclass && <TextField id=\"weightField\" type=\"number\" min=\"0\" max=\"10000\" defaultValue={String(this.editoritem.weight)} label={this.props.semtalk.getResStrListener(\"STRDLGCLLAYOUTWEIGHT\")} onChange={(_ev, a) => {\n              if (a !== undefined) // weight\n                this.editoritem.weight = Number(a);\n            }}></TextField>}\n          </Stack>\n          <div>\n            <div className={styles.semTalkAttr}><div className={styles.pivottab}></div></div>\n            <DefaultButton id=\"okButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDOK\")} onClick={this.addnewitem} />\n            <DefaultButton id=\"cancelButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\n          </div>\n        </div>\n      }\n      {/* {this.state.singleitem &&\n        <TextField defaultValue={this.editoritem.largevalue} label={this.editoritem.label}\n          multiline={true} autoAdjustHeight rows={30} onChange={(ev, a) => {\n            if (a !== undefined)\n              this.editoritem.largevalue = a;\n          }}></TextField>\n      } */}\n      {this.state.singleitem &&\n        <RichText value={this.editoritem.largevalue}\n          onChange={(a) => {\n            if (a !== undefined)\n              this.editoritem.largevalue = a;\n            return a;\n          }}></RichText>\n      }\n      {!this.state.newitem && !this.state.singleitem &&\n        <div id=\"attributeList\">\n          <DetailsList\n            items={this.state.items}\n            compact={true}\n            columns={this._columns}\n            selectionMode={SelectionMode.single}\n            layoutMode={DetailsListLayoutMode.justified}\n            selection={this.state.sel}\n            checkboxVisibility={CheckboxVisibility.hidden}\n            isHeaderVisible={false}\n          />\n        </div>\n      }\n    </Fabric>;\n    return r;\n  }\n\n}\n","import { ITreeItem } from './ITreeItem';\nimport { TreeItemActionsDisplayMode } from './ITreeItemActions';\n\n/**\n * Selection mode of tree item\n */\nexport enum TreeViewSelectionMode {\n  Single = 0,\n  Multiple = 1,\n  None = 2\n}\n\nexport enum SelectChildrenMode {\n  None = 0,\n  Select = 1 << 0, // 0001\n  Unselect = 1 << 1,     // 0010\n  Mount = 1 << 2,    // 0100\n  Update = 1 << 3,   // 1000\n  All = ~(~0 << 4)   // 1111\n}\n\n/**\n * TreeView properties interface\n */\nexport interface ITreeViewProps {\n  /**\n   * The items to render.\n   */\n  items: ITreeItem[];\n  /**\n   * Default expand / collapse behavior.\n   * By default this is set to false.\n   */\n  defaultExpanded: boolean;\n  /**\n   * Specifies the item selection mode.\n   * By default this is set to Single.\n   */\n  selectionMode: TreeViewSelectionMode;\n  /**\n   * @deprecated Use selectChildrenMode instead.\n   * Specifies if the childrens should be selected when parent is selected.\n   * By default this is set to false.\n   */\n  selectChildrenIfParentSelected: boolean;\n    /**\n   * Specifies if the childrens should be selected when parent is selected. Flagged enum, so values can be combined eg. SelectChildrenMode.Select | SelectChildrenMode.Unselect\n   * By default this is set to None.\n   */\n  selectChildrenMode: SelectChildrenMode;\n  /**\n  * Specifies if the checkboxes should be displayed for selection.\n  */\n  showCheckboxes: boolean;\n  /**\n   * Display mode of the tree item actions.\n   */\n  treeItemActionsDisplayMode: TreeItemActionsDisplayMode;\n  /**\n   * Keys of items selected by default\n   */\n  defaultSelectedKeys: string[];\n\n  /**\n  * Specifies if the tree view is expanded to display selected nodes.\n  */\n  expandToSelected: boolean;\n\n  /**\n   * Callback function called after a item is expanded / collapsed.\n   * @argument item The expanded / collapsed item.\n   * @argument isExpanded The status of item (expanded / collapsed).\n   */\n  onExpandCollapse: (item: ITreeItem, isExpanded: boolean) => void;\n  /**\n   * Callback function called after an item is selected.\n   * @argument items The selected items.\n   */\n  onSelect: (items: ITreeItem[]) => void;\n  /**\n   * Customize how items are rendered.\n   * @argument item The tree item.\n   */\n  onRenderItem: undefined | ((item: ITreeItem) => JSX.Element);\n   /**\n   * Default expand / collapse behavior for the child nodes.\n   * By default this is set to true.\n   */\n  defaultExpandedChildren: boolean;\n}\n","import * as React from 'react';\r\nimport styles from './SemTalkGenericAttributes.module.scss';\r\nimport {\r\n  Selection, IColumn, DetailsList, DetailsListLayoutMode,\r\n  CheckboxVisibility, CommandBar, TextField,\r\n  // IDropdownOption, \r\n  Checkbox, Label,\r\n  ComboBox, IComboBoxOption, IComboBox,// MaskedTextField,\r\n  DatePicker, Stack\r\n} from 'office-ui-fabric-react';\r\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { SelectionMode, ISelection } from 'office-ui-fabric-react/lib/utilities/selection';\r\n\r\n// import { VisioRDFS } from '../application/semtalklistener/visiordfs';\r\nimport {\r\n  IObjectBase, ISemTalkObject,\r\n  ISemTalkNode, SemTalkType, ISemTalkAttribute, SemTalkValueType, ISemTalkInstance, ISemTalkGenericAttributeTabSpec\r\n} from \"../../application/tbase/Interface\";\r\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\n// import { WebPartContext } from '@microsoft/sp-webpart-base';\r\n//import { SetContext } from '../../semtalkportal/restinterface';\r\nimport { Guid } from \"guid-typescript\";\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { RichText } from \"../richText\";\r\n\r\nexport interface ISemTalkGenericAttributesTabProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  context?: any;\r\n  gotonodes?: boolean;\r\n  goodlist?: string[];\r\n  badlist?: string[];\r\n  tabspec: ISemTalkGenericAttributeTabSpec;\r\n}\r\nexport interface ISemTalkGenericAttributesTabState {\r\n  items: IGenericAttributesTab[];\r\n  // base: IObjectBase;\r\n  // sel: ISelection;\r\n  singleitem: boolean;\r\n  // newitemtype: SemTalkValueType;\r\n  // required: boolean;\r\n  // allowfreeform: boolean;\r\n}\r\ninterface IGenericAttributesTab {\r\n  ID: number;\r\n  Object: ISemTalkInstance;\r\n  Owner: ISemTalkObject;\r\n  Attribute: ISemTalkAttribute;\r\n  PropName: string;\r\n  PropType: SemTalkType;\r\n  PropValue: any | undefined;\r\n  PropValueName: ISemTalkObject | null;\r\n  PropValueCaption: string | null;\r\n  _label: string;\r\n  _value: string;\r\n  Node?: ISemTalkNode;\r\n  PropWeight: number;\r\n}\r\nexport class SemTalkGenericAttributesTab extends React.Component<ISemTalkGenericAttributesTabProps, ISemTalkGenericAttributesTabState> {\r\n  private _selection: ISelection;\r\n  private object: ISemTalkInstance | null = null;\r\n  // private objecttypecaption: string = \"\";\r\n  public callback: Guid;\r\n  private ob: IObjectBase;\r\n  private objectid: number;\r\n  //public me = this;\r\n  // private attrtypes: IDropdownOption[] = [];\r\n\r\n  constructor(props: ISemTalkGenericAttributesTabProps) {\r\n    super(props);\r\n    console.debug(\"showGenericAttributesTab\");\r\n    // _gotonodes = this.props.gotonodes;\r\n    this.callback = Guid.create();\r\n    this._selection = new Selection();\r\n    this.ob = this.props.semtalk.base;\r\n    this.objectid = -1;\r\n\r\n    this.state = {\r\n      // filter: this.props.filter,\r\n      items: [],\r\n      // sel: new Selection({}),\r\n      singleitem: false,\r\n      // newitemtype: SemTalkValueType.Symbol,\r\n      // required: false,\r\n      // allowfreeform: true,\r\n    };\r\n  }\r\n  private resetState = () => {\r\n    this.ob = this.props.semtalk.base;\r\n    this.objectid = -1;\r\n    this.setState({\r\n      items: [],\r\n      singleitem: false,\r\n    });\r\n  }\r\n  private mounted: boolean = false;\r\n\r\n  public async componentDidMount() {\r\n    this.mounted = true;\r\n    let oid: number = getObject();\r\n    if (oid > 0) {\r\n      this.loadObject(oid);\r\n    }\r\n    addCallBack(this);\r\n  }\r\n  public componentWillUnmount() {\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n    this.object = null;\r\n  }\r\n\r\n  private loadObject = (id: number) => {\r\n    this.object = this.ob.FindInstanceByID(id);\r\n    if (this.object !== null) {\r\n      const items = this.getItems(this.object);\r\n      this.objectid = id;\r\n      this.setState({ items: items });\r\n    } else {\r\n      this.resetState();\r\n    }\r\n  }\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoObject:\r\n        if (md.objectid !== this.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n          // this.forceUpdate();\r\n        }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode:\r\n        if (md.objectid !== this.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private getItems = (obj: ISemTalkInstance): any[] => {\r\n    let items: IGenericAttributesTab[] = [];\r\n\r\n    let gl: string[] | undefined = this.props.goodlist;\r\n    if (gl === undefined) gl = [];\r\n    let bl: string[] = [];\r\n    if (this.props.badlist !== undefined) bl = this.props.badlist;\r\n\r\n    // this.attrtypes = [];\r\n    // for (const atype of this.state.base.AllAttributeTypes().sort((x, y) => x.ObjectCaption.localeCompare(y.ObjectCaption))) {\r\n    //   this.attrtypes.push({ key: atype.ObjectName, text: atype.ObjectCaption });\r\n    // }\r\n    const allattr = obj.AllAttributes();\r\n    for (let attr of allattr) {\r\n      const aname = attr.ClassOf().ObjectName;\r\n      let grp = attr.Group;\r\n      let wei = attr.Weight;\r\n      if (grp === \"\" && attr.Owner === obj) {\r\n        let oattr = obj.ClassOf().GetAttributeOwner(aname);\r\n        if (oattr) {\r\n          grp = oattr.Group;\r\n          wei = oattr.Weight;\r\n          // console.debug(oattr);\r\n        }\r\n      }\r\n      // const oattr = (attr.Owner.SystemClass() as ISemTalkSystemClass).FindAttribute(aname);\r\n      let hide: boolean = false;\r\n      // let weight = 0;\r\n      if (grp !== \"\") {\r\n        // weight = attr.Weight;\r\n        if (this.props.tabspec.Group.length > 0) {\r\n          hide = (grp !== this.props.tabspec.Group);\r\n        }\r\n        if (!hide && this.props.tabspec.Attributes.length > 0 &&\r\n          !this.props.tabspec.Attributes.includes(aname)) {\r\n          hide = true;\r\n        }\r\n      } else {\r\n        hide = true;\r\n      }\r\n      if (!hide) {\r\n        let lbl = attr.ClassOf().ID2NameNsp();\r\n        // if (grp !== \"\") {\r\n        //   lbl = lbl + \" [\" + grp + \"]\";\r\n        // }\r\n        let item: IGenericAttributesTab = {\r\n          ID: items.length,\r\n          PropName: attr.ClassOf().ObjectName,\r\n          Object: obj,\r\n          Owner: attr.Owner,\r\n          Attribute: attr,\r\n          PropType: SemTalkType.SemTalkAttribute,\r\n          PropValue: attr.Value,\r\n          PropWeight: wei,\r\n          _label: lbl,\r\n          _value: attr.Value,\r\n          PropValueName: null,\r\n          PropValueCaption: null\r\n        };\r\n        if (gl !== undefined && gl.length > 0) {\r\n          if (gl.indexOf(item.PropName) > -1) {\r\n            items.push(item);\r\n          }\r\n        } else {\r\n          if (bl !== undefined && bl.length > 0) {\r\n            if (bl.indexOf(item.PropName) < 0) {\r\n              items.push(item);\r\n            }\r\n          } else {\r\n            items.push(item);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    items = items.sort((x, y) => x.PropWeight - y.PropWeight);\r\n    return items;\r\n  }\r\n\r\n  private _columns: IColumn[] = [\r\n    {\r\n      key: 'Value',\r\n      name: \"Value\",\r\n      fieldName: 'Value',\r\n      minWidth: 200,\r\n      // maxWidth: 180,\r\n      isResizable: true,\r\n      isMultiline: true,\r\n      onRender: (item: IGenericAttributesTab, _index?: number, _column?: IColumn) => {\r\n        let cap = item.PropValue;\r\n        let attr = item.Attribute;\r\n        if (item.Object.ObjectBase.IsInstance(item.Object)) {\r\n          const cla = (item.Object as ISemTalkInstance).ClassOf();\r\n          const inherited_attr = cla.GetAttributeOwner(item.PropName);\r\n          if (inherited_attr !== null) {\r\n            attr = inherited_attr;\r\n          }\r\n        }\r\n        // let oldweight = attr.Weight;\r\n        // return <span>{cap}</span>;\r\n        let r: any;\r\n        switch (attr.ValueType) {\r\n          case SemTalkValueType.Boolean: {\r\n            r = <Checkbox checked={cap === \"True\"} label={item._label} onChange={(_ev: any, isChecked: boolean | undefined) => {\r\n              if (isChecked !== undefined)\r\n                if (isChecked) {\r\n                  item.PropValue = \"True\";\r\n                  item.Object.SetValue(item.PropName, \"True\");\r\n                } else {\r\n                  item.PropValue = \"False\";\r\n                  item.Object.SetValue(item.PropName, \"False\");\r\n                }\r\n            }}></Checkbox>;\r\n            break;\r\n          }\r\n          case SemTalkValueType.Date: {\r\n            let d: Date | undefined;\r\n            if (item.PropValue !== undefined && item.PropValue !== null) {\r\n              d = new Date(item.PropValue);\r\n              if (d.toString() === \"Invalid Date\")\r\n                d = undefined;\r\n            }\r\n            r = <DatePicker\r\n              label={item._label}\r\n              // className={controlClass.control}\r\n              // firstDayOfWeek={firstDayOfWeek}\r\n              // strings={DayPickerStrings}\r\n              value={d}\r\n              placeholder=\"Select a date...\"\r\n              ariaLabel=\"Select a date\"\r\n              onSelectDate={(date: Date | null | undefined) => {\r\n                if (date !== undefined && date !== null) {\r\n                  item.PropValue = date.toDateString();\r\n                  item.Object.SetValue(item.PropName, date.toDateString());\r\n                } else {\r\n                  item.PropValue = undefined;\r\n                  item.Object.SetValue(item.PropName, null);\r\n                }\r\n              }}\r\n            />;\r\n            break;\r\n          }\r\n          case SemTalkValueType.Duration: {\r\n\r\n            let timerTime = Number(item.PropValue);\r\n            //  console.debug(item.PropValue + \" \" + Number(item.PropValue));\r\n            timerTime = Number(item.PropValue);\r\n\r\n            // let days = Math.floor(timerTime / 48400);\r\n            // let hours = Math.floor(timerTime % 48400 / 3600);\r\n            // let minutes = Math.floor(timerTime % 48400 % 3600 / 60);\r\n            // let seconds = Math.floor(timerTime % 48400 % 3600 % 60);\r\n\r\n            let days = 0;\r\n            let hours = Math.floor(timerTime / 3600);\r\n            let minutes = Math.floor(timerTime % 3600 / 60);\r\n            let seconds = Math.floor(timerTime % 3600 % 60);\r\n            r =\r\n              <div>\r\n                <Label>{item._label}</Label>\r\n                <Stack horizontal tokens={{ childrenGap: 10 }}>\r\n                  {/*                   <TextField type=\"number\" width=\"80px\" max-width=\"80px\" min={0} max={10000} label={this.props.semtalk.getResStrListener(\"STRBONSIMCAPDAYS\")} defaultValue={days.toString()} required={attr.Required} onChange={(ev, a) => {\r\n                    if (a) {\r\n                      days = Number(a);\r\n                      timerTime = seconds + minutes * 60 + hours * 3600 + days * 48400;\r\n                      item.PropValue=timerTime;\r\n                      item.Object.SetValue(item.PropName, timerTime);\r\n                    }\r\n                  }}></TextField>\r\n                  <span>{\"   \"}</span>\r\n */}                  <TextField type=\"number\" width=\"80px\" max-width=\"80px\" min={0} max={10000} label={this.props.semtalk.getResStrListener(\"STRBONSIMCAPHOUR\")} defaultValue={hours.toString()} required={attr.Required} onChange={(_ev, a) => {\r\n                    if (a) {\r\n                      hours = Number(a);\r\n                      timerTime = seconds + minutes * 60 + hours * 3600 + days * 48400;\r\n                      item.PropValue = timerTime;\r\n                      item.Object.SetValue(item.PropName, timerTime);\r\n                    }\r\n\r\n                  }}></TextField>\r\n                  <span>{\"   \"}</span>\r\n                  <TextField type=\"number\" width=\"80px\" max-width=\"80px\" min={0} max={10000} label={this.props.semtalk.getResStrListener(\"STRBONSIMCAPMINU\")} defaultValue={minutes.toString()} required={attr.Required} onChange={(_ev, a) => {\r\n                    if (a) {\r\n                      minutes = Number(a);\r\n                      timerTime = seconds + minutes * 60 + hours * 3600 + days * 48400;\r\n                      item.PropValue = timerTime;\r\n                      item.Object.SetValue(item.PropName, timerTime);\r\n                    }\r\n\r\n                  }}></TextField>\r\n                  <span>{\"   \"}</span>\r\n                  <TextField type=\"number\" width=\"80px\" max-width=\"80px\" min={0} max={10000} label={this.props.semtalk.getResStrListener(\"STRBONSIMCAPSECO\")} defaultValue={seconds.toString()} required={attr.Required} onChange={(_ev, a) => {\r\n                    if (a) {\r\n                      seconds = Number(a);\r\n                      timerTime = seconds + minutes * 60 + hours * 3600 + days * 48400;\r\n                      item.PropValue = timerTime;\r\n                      item.Object.SetValue(item.PropName, timerTime);\r\n                    }\r\n                  }}></TextField>\r\n                </Stack></div>;\r\n            break;\r\n          }\r\n          case SemTalkValueType.Float:\r\n          case SemTalkValueType.Integer: {\r\n            let min = 0;\r\n            let max = 10000000000;\r\n            if (item.Attribute.Min) min = item.Attribute.Min;\r\n            if (item.Attribute.Max) max = item.Attribute.Max;\r\n            r = <TextField type=\"number\" min={min} max={max} defaultValue={item.PropValue} label={item._label} required={attr.Required} onChange={(_ev, a) => {\r\n              item.PropValue = a;\r\n              item.Object.SetValue(item.PropName, Number(a));\r\n            }}></TextField>;\r\n            break;\r\n          }\r\n          // case SemTalkValueType.Duration: {\r\n          //   r = <MaskedTextField mask=\"999d 99h 99m\" defaultValue={item.PropValue} label={item._label} required={attr.Required} onChange={(ev, a) => {\r\n          //     item.PropValue = a;\r\n          //     item.Object.SetValue(item.PropName, a);\r\n          //   }}></MaskedTextField>;\r\n          //   break;\r\n          // }\r\n          case SemTalkValueType.Color: {\r\n            r = <TextField type=\"color\" defaultValue={item.PropValue} width=\"50\" label={item._label} required={attr.Required} onChange={(_ev, a) => {\r\n              item.PropValue = a;\r\n              item.Object.SetValue(item.PropName, a);\r\n            }}></TextField>;\r\n            break;\r\n          }\r\n          case SemTalkValueType.File: {\r\n            r = <TextField type=\"file\" defaultValue={item.PropValue} label={item._label} required={attr.Required} onChange={(_ev, a) => {\r\n              item.PropValue = a;\r\n              item.Object.SetValue(item.PropName, a);\r\n            }}></TextField>;\r\n            break;\r\n          }\r\n          case SemTalkValueType.URL: {\r\n            r = <TextField type=\"url\" defaultValue={item.PropValue} label={item._label} required={attr.Required} onChange={(_ev, a) => {\r\n              item.PropValue = a;\r\n              item.Object.SetValue(item.PropName, a);\r\n            }}></TextField>;\r\n            break;\r\n          }\r\n          case SemTalkValueType.Email: {\r\n            r = <TextField type=\"email\" defaultValue={item.PropValue} label={item._label} required={attr.Required} onChange={(_ev, a) => {\r\n              item.PropValue = a;\r\n              item.Object.SetValue(item.PropName, a);\r\n            }}></TextField>;\r\n            break;\r\n          }\r\n          case SemTalkValueType.Password: {\r\n            r = <TextField type=\"password\" defaultValue={item.PropValue} label={item._label} required={attr.Required} onChange={(_ev, a) => {\r\n              item.PropValue = a;\r\n              item.Object.SetValue(item.PropName, a);\r\n            }}></TextField>;\r\n            break;\r\n          }\r\n          // case SemTalkValueType.Tel: {\r\n          //   // mask=\"/^[0-9\\+]{1,}[0-9\\-]{3,15}$/\"\r\n          //   r = <MaskedTextField type=\"tel\" defaultValue={item.PropValue} label={item._label}\r\n          //     required={attr.Required} mask=\"[0-9]*{1,}[0-9\\-]{3,15}$/\" onChange={(ev, a) => {\r\n          //     item.PropValue = a;\r\n          //     item.Object.SetValue(item.PropName, a);\r\n          //   }}></MaskedTextField>;\r\n          //   break;\r\n          // }\r\n          default:\r\n            let iscombo = (attr.Options.length > 0);\r\n            if (iscombo) {\r\n              let options: IComboBoxOption[] = [];\r\n              for (const o of attr.Options) {\r\n                const obj = this.ob.FindInstance(o);\r\n                if (obj) {\r\n                  options.push({ \"key\": o, \"text\": (obj as ISemTalkInstance).ID2NameNsp() });\r\n                } else {\r\n                  options.push({ \"key\": o, \"text\": o });\r\n                }\r\n              }\r\n              r = <ComboBox text={item.PropValue} label={item._label}\r\n                options={options}\r\n                allowFreeform={attr.AllowFreeForm} required={attr.Required}\r\n                //  autoComplete=\"on\"\r\n                onChange={(_event: React.FormEvent<IComboBox>, option?: IComboBoxOption, _index1?: number, value?: string) => {\r\n                  if (option !== undefined) {\r\n                    item.PropValue = option.text;\r\n                    item.Object.SetValue(item.PropName, option.text);\r\n                  } else {\r\n                    item.PropValue = value;\r\n                    item.Object.SetValue(item.PropName, value);\r\n                  }\r\n                  this.setState({ items: this.getItems(item.Object) });\r\n                }}></ComboBox>;\r\n\r\n            } else {\r\n              r = <TextField defaultValue={item.PropValue} label={item._label} required={attr.Required} onChange={(_ev, a) => {\r\n                item.PropValue = a;\r\n                item.Object.SetValue(item.PropName, a);\r\n              }}></TextField>;\r\n            }\r\n        }\r\n        // let attr1 = item.Object.FindAttribute(item.PropName);\r\n        // if (attr1 !== null && attr1.Weight !== oldweight) {\r\n        //   attr1.Weight = oldweight;\r\n        //   this.setState({ items: this.getItems(item.Object) });\r\n        // }\r\n        return r;\r\n      }\r\n    }\r\n  ];\r\n  private editoritem = {\r\n    value: \"\",\r\n    largevalue: \"\",\r\n    label: \"\",\r\n  };\r\n  private editValue = (): void => {\r\n    if (!this.state.singleitem) {\r\n      let item = this._selection.getSelection()[0] as IGenericAttributesTab;\r\n      if (item !== null && item !== undefined) {\r\n        //  this.editoritem.title = item.PropName;\r\n        this.editoritem.label = item._label;\r\n        if (item.PropValue !== undefined)\r\n          this.editoritem.largevalue = item.PropValue;\r\n        this.setState({ singleitem: !this.state.singleitem });\r\n      }\r\n    } else {\r\n      if (this.object !== null) {\r\n        let item = this._selection.getSelection()[0] as IGenericAttributesTab;\r\n        if (item !== null && item !== undefined) {\r\n          let lv = this.editoritem.largevalue;\r\n          if (lv.substr(0, 3) === \"<p>\") lv = lv.substr(3);\r\n          if (lv.substr(lv.length - 4) === \"</p>\") lv = lv.substr(0, lv.length - 4);\r\n          this.editoritem.value = lv;\r\n          this.object.SetValue(item.PropName, lv);\r\n          this.setState({ singleitem: !this.state.singleitem, items: this.getItems(this.object) });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private deleteItem = (): void => {\r\n    if (this.state.singleitem) return;\r\n    let item = this._selection.getSelection()[0] as IGenericAttributesTab;\r\n    if (item !== null && item !== undefined) {\r\n      if (this.object !== null) {\r\n        this.object.DeleteAttribute(item.PropName);\r\n        this.setState({ items: this.getItems(this.object) });\r\n      }\r\n    }\r\n  }\r\n\r\n  private commands = [\r\n    {\r\n      key: 'EditValue',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGTABVAL\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: { iconName: 'Page' },\r\n      onClick: this.editValue,\r\n    },\r\n    {\r\n      key: 'Delete',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\r\n      iconProps: { iconName: 'Delete' },\r\n      onClick: this.deleteItem\r\n    }];\r\n\r\n  public render(): React.ReactElement<ISemTalkGenericAttributesTabProps> {\r\n    // let val: any[] = this.state.items;\r\n    let r: React.ReactElement<ISemTalkGenericAttributesTabProps>;\r\n    r = <Fabric>\r\n      <div className={styles.semTalkAttr}><div className={styles.pivottab}></div></div>\r\n      <CommandBar\r\n        items={this.commands}\r\n      ></CommandBar>\r\n      <div className={styles.semTalkAttr}><div className={styles.pivottab}></div></div>\r\n      {this.state.singleitem &&\r\n        <RichText value={this.editoritem.largevalue}\r\n          onChange={(a) => {\r\n            if (a !== undefined)\r\n              this.editoritem.largevalue = a;\r\n            return a;\r\n          }}></RichText>\r\n      }\r\n      {!this.state.singleitem &&\r\n        <DetailsList\r\n          items={this.state.items}\r\n          compact={true}\r\n          columns={this._columns}\r\n          selectionMode={SelectionMode.single}\r\n          layoutMode={DetailsListLayoutMode.justified}\r\n          selection={this._selection}\r\n          checkboxVisibility={CheckboxVisibility.hidden}\r\n          isHeaderVisible={false}\r\n        />\r\n      }\r\n    </Fabric>;\r\n    return r;\r\n  }\r\n\r\n}\r\n","import * as React from 'react';\nimport styles from './SemTalkMethods.module.scss';\nimport {\n  Selection, ISelection, IColumn, DetailsList, DetailsListLayoutMode, ComboBox, IComboBox, IComboBoxOption,\n  CheckboxVisibility, IDropdownOption, CommandBar, DefaultButton, TextField\n} from 'office-ui-fabric-react';\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\n\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\n\nimport { IObjectBase, \n  ISemTalkBusinessClass, \n  ISemTalkMethod, \n  ISemTalkObject,\n  SemTalkBaseConstant } from \"../../application/tbase/Interface\";\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n//import { any } from '@microsoft/sp-webpart-base';\n//import { SetContext } from '../../semtalkportal/restinterface';\nimport { Guid } from \"guid-typescript\";\n///import * as strings from 'SemTalkStrings';\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\n\n\nexport interface ISemTalkMethodTabProps {\n  title?: string;\n  description?: string;\n  semtalk: IVisioRDFS;\n  context?: any;\n  goodlist?: string[];\n  badlist?: string[];\n\n}\nexport interface ISemTalkMethodTabState {\n  objectid: number;\n  base: IObjectBase;\n  newitem: boolean;\n  items: IMethodTab[];\n  newitemtitle: string;\n  sel: ISelection;\n}\ninterface IMethodTab {\n  ID: number;\n  Object: ISemTalkBusinessClass;\n  Owner: ISemTalkObject;\n  Method: ISemTalkMethod;\n  PropName: string;\n  // PropValue: string;\n  // _value: string;\n  _label: string;\n}\nexport class SemTalkMethodsTab extends React.Component<ISemTalkMethodTabProps, ISemTalkMethodTabState> {\n  // private _selection: Selection;\n  private object: ISemTalkBusinessClass | null = null;\n  private methodtypes: IDropdownOption[] = [];\n  public callback: Guid;\n\n  constructor(props: ISemTalkMethodTabProps) {\n    super(props);\n    this.callback = Guid.create();\n    console.debug(\"showMethodTab\");\n    this.state = {\n      objectid: -1,\n      items: [],\n      sel: new Selection({}),\n      newitem: true,\n      base: this.props.semtalk.base,\n      newitemtitle: \"\"\n    };\n  }\n  private resetState = () => {\n    this.setState({\n      objectid: -1,\n      items: [],\n      newitem: false,\n      base: this.props.semtalk.base,\n      newitemtitle: \"\"\n    });\n  }\n  private mounted: boolean = false;\n\n  public async componentDidMount() {\n    this.mounted = true;\n    let oid: number = getObject();\n\n    if (oid > 0) {\n      this.loadObject(oid);\n    }\n    this.setState({ newitem: false });\n    addCallBack(this);\n\n  }\n  public componentWillUnmount() {\n    this.mounted = false;\n    removeCallBack(this);\n    this.object = null;\n  }\n\n  private loadObject(id: number) {\n    let obj = this.state.base.FindObjectByID(id);\n    if (!this.state.base.IsBusinessClass(obj)) {\n      return;\n    } else {\n      this.object = obj as ISemTalkBusinessClass;\n    }\n    if (this.object !== null) {\n      this.setState({ objectid: id, items: this.getItems(this.object) });\n    }\n  }\n\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    try {\n      md = JSON.parse(e.data);\n      var mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkNavigationEvent.gotoObject:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n      case SemTalkNavigationEvent.gotoNode:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n    }\n  }\n  private getItems(obj: ISemTalkBusinessClass): any[] {\n    let items: IMethodTab[] = [];\n\n    let gl: string[] | undefined = this.props.goodlist;\n    if (gl === undefined) gl = [];\n    let bl: string[] = [];\n    if (this.props.badlist !== undefined) bl = this.props.badlist;\n\n    bl.push(SemTalkBaseConstant.SLHas);\n\n    this.methodtypes = [];\n    for (const meth of this.state.base.AllMethodTypes()) {\n      this.methodtypes.push({ key: meth.ObjectName, text: meth.ObjectCaption });\n    }\n\n    for (let attr of obj.AllMethods()) {\n      let lbl = this.props.semtalk.getResStrListener(\"STRDLGEDMETHCAPTION\");\n      if (attr.Owner.ObjectName !== obj.ObjectName) {\n        lbl = lbl + \" (\" + attr.Owner.ObjectCaption + \")\";\n      }\n      let item: IMethodTab = {\n        ID: items.length,\n        PropName: attr.ClassOf().ObjectName,\n        Object: obj,\n        Owner: attr.Owner,\n        Method: attr,\n        // PropType: SemTalkType.SemTalkMethodType,\n        // PropValue: attr.Value,\n        _label: lbl\n        // _value: attr.Value,\n        // PropValueName: null,\n        // PropValueCaption: null\n      };\n      if (gl !== undefined && gl.length > 0) {\n        if (gl.indexOf(item.PropName) > -1) {\n          items.push(item);\n        }\n      } else {\n        if (bl !== undefined && bl.length > 0) {\n          if (bl.indexOf(item.PropName) < 0) {\n            items.push(item);\n          }\n        } else {\n          items.push(item);\n        }\n      }\n    }\n    return items;\n  }\n  private _columns: IColumn[] = [\n    {\n      key: 'Value',\n      name: 'Value',\n      fieldName: 'Value',\n      minWidth: 200,\n      isMultiline: false,\n      onRender: (item: IMethodTab, _index?: number, column?: IColumn) => {\n        let r: any;\n        r = <TextField value={item.PropName} readOnly={true} label={item._label}></TextField>;\n        return r;\n      }\n    }\n  ];\n  private editItem = (): void => {\n    let item = this.state.sel.getSelection()[0] as IMethodTab;\n    if (item !== null) {\n      this.setState({\n        newitem: true,\n        newitemtitle: item.PropName,\n      });\n    }\n  }\n  private commands = [\n    {\n      key: 'Add',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDNE\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Add'\n      },\n      onClick: (): void => {\n        this.setState({\n          newitem: true,\n          newitemtitle: \"\"\n        });\n      }\n    },\n    {\n      key: 'Edit',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDED\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Edit'\n      },\n      onClick: this.editItem\n    },\n    {\n      key: 'Delete',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Delete'\n      },\n      onClick: (): void => {\n        let item = this.state.sel.getSelection()[0] as IMethodTab;\n        if (item !== null) {\n          if (this.object !== null) {\n            if (item.Method !== undefined)\n              item.Object.DeleteMethod(item.PropName);\n            this.setState({ newitem: false, items: this.getItems(this.object) });\n          }\n        }\n      }\n    }];\n\n  private cancelnew = (): void => {\n    this.setState({ newitem: false });\n  }\n  private addnewitem = (): void => {\n    let t = this.state.newitemtitle;\n    if (this.state.newitemtitle.length > 0) {\n      if (this.object !== null) {\n        this.object.MakeMethod(t);\n        this.setState({\n          newitem: false,\n          newitemtitle: \"\",\n          items: this.getItems(this.object)\n        });\n      }\n    } else {\n      this.setState({\n        newitem: false,\n        newitemtitle: \"\",\n      });\n    }\n  }\n  public render(): React.ReactElement<ISemTalkMethodTabProps> {\n    // let val: any[] = this.getItems();\n    let r: React.ReactElement<ISemTalkMethodTabProps>;\n    // let val: any[] = this.state.items;\n    // this._selection = new Selection({\n    // });\n    r = <Fabric>\n      <div className={styles.semTalkMethod}><div className={styles.pivottab}></div></div>\n      <CommandBar\n        items={this.commands}\n      ></CommandBar>\n      <div className={styles.semTalkMethod}><div className={styles.pivottab}></div></div>\n      {this.state.newitem &&\n        <div>\n          <ComboBox text={this.state.newitemtitle} label={this.props.semtalk.getResStrListener(\"STRDLGEDMETHCAPTION\")}\n            options={this.methodtypes}\n            allowFreeform required={true}\n            //  autoComplete=\"on\"\n            onChange={(event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\n              if (option !== undefined) {\n                this.setState({ newitemtitle: option.text });\n              } else {\n                if (value !== undefined)\n                  this.setState({ newitemtitle: value });\n              }\n            }}></ComboBox>\n          {/* <TextField value={this.state.newitemtitle} label={this.props.semtalk.getResStrListener(\"STRDLGNAM\")} required onChange={(ev, a) => {\n            if (a !== undefined)\n              this.setState({ newitemtitle: a });\n          }}></TextField> */}\n          {/* <Dropdown\n            label={this.props.semtalk.getResStrListener(\"STRDLGEDMETHCAPTION\")}\n            options={this.methodtypes}\n            required\n            defaultSelectedKey={this.state.newitemlanguage}\n            onChange={(ev, a) => {\n              if (a !== undefined)\n                this.setState({ newitemlanguage: a.key as string });\n            }}\n          /> */}\n          <div className={styles.semTalkMethod}><div className={styles.pivottab}></div></div>\n          <DefaultButton text={this.props.semtalk.getResStrListener(\"STRDLGCMDOK\")} onClick={this.addnewitem} />\n          <DefaultButton text={this.props.semtalk.getResStrListener(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\n        </div>\n      }\n      {!this.state.newitem &&\n        <DetailsList\n          items={this.state.items}\n          compact={true}\n          columns={this._columns}\n          selectionMode={SelectionMode.single}\n          layoutMode={DetailsListLayoutMode.justified}\n          selection={this.state.sel}\n          checkboxVisibility={CheckboxVisibility.hidden}\n          isHeaderVisible={false}\n        />\n      }\n    </Fabric>;\n    return r;\n  }\n}\n","import * as React from 'react';\r\nimport styles from './SemTalkStates.module.scss';\r\nimport {\r\n  Selection, ISelection, IColumn, DetailsList, DetailsListLayoutMode, ComboBox, IComboBox, IComboBoxOption,\r\n  CheckboxVisibility, IDropdownOption, CommandBar, DefaultButton, TextField\r\n} from 'office-ui-fabric-react';\r\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\r\n\r\nimport { IObjectBase, ISemTalkBusinessClass, ISemTalkState, ISemTalkObject } from \"../../application/tbase/Interface\";\r\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\n//import { any } from '@microsoft/sp-webpart-base';\r\n//import { SetContext } from '../../semtalkportal/restinterface';\r\nimport { Guid } from \"guid-typescript\";\r\n///import * as strings from 'SemTalkStrings';\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\r\n\r\n\r\nexport interface ISemTalkStateTabProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  context?: any;\r\n  goodlist?: string[];\r\n  badlist?: string[];\r\n\r\n}\r\nexport interface ISemTalkStateTabState {\r\n  objectid: number;\r\n  base: IObjectBase;\r\n  newitem: boolean;\r\n  items: IStateTab[];\r\n  newitemtitle: string;\r\n  sel: ISelection;\r\n}\r\ninterface IStateTab {\r\n  ID: number;\r\n  Object: ISemTalkBusinessClass;\r\n  Owner: ISemTalkObject;\r\n  State: ISemTalkState;\r\n  PropName: string;\r\n  // PropValue: string;\r\n  // _value: string;\r\n  _label: string;\r\n}\r\nexport class SemTalkStatesTab extends React.Component<ISemTalkStateTabProps, ISemTalkStateTabState> {\r\n  // private _selection: Selection;\r\n  private object: ISemTalkBusinessClass | null = null;\r\n  private statetypes: IDropdownOption[] = [];\r\n  public callback: Guid;\r\n\r\n  constructor(props: ISemTalkStateTabProps) {\r\n    super(props);\r\n    this.callback = Guid.create();\r\n    console.debug(\"showStateTab\");\r\n    this.state = {\r\n      objectid: -1,\r\n      items: [],\r\n      sel: new Selection({}),\r\n      newitem: true,\r\n      base: this.props.semtalk.base,\r\n      newitemtitle: \"\"\r\n    };\r\n  }\r\n  private resetState = () => {\r\n    this.setState({\r\n      objectid: -1,\r\n      items: [],\r\n      newitem: false,\r\n      base: this.props.semtalk.base,\r\n      newitemtitle: \"\"\r\n    });\r\n  }\r\n  private mounted: boolean = false;\r\n\r\n  public async componentDidMount() {\r\n    this.mounted = true;\r\n    let oid: number = getObject();\r\n\r\n    if (oid > 0) {\r\n      this.loadObject(oid);\r\n    }\r\n    this.setState({ newitem: false });\r\n    addCallBack(this);\r\n\r\n  }\r\n  public componentWillUnmount() {\r\n    this.mounted = false;\r\n    removeCallBack(this);\r\n    this.object = null;\r\n  }\r\n\r\n  private loadObject(id: number) {\r\n    let obj = this.state.base.FindObjectByID(id);\r\n    if (!this.state.base.IsBusinessClass(obj)) {\r\n      return;\r\n    } else {\r\n      this.object = obj as ISemTalkBusinessClass;\r\n    }\r\n    if (this.object !== null) {\r\n      this.setState({ objectid: id, items: this.getItems(this.object) });\r\n    }\r\n  }\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoObject:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  private getItems(obj: ISemTalkBusinessClass): any[] {\r\n    let items: IStateTab[] = [];\r\n\r\n    let gl: string[] | undefined = this.props.goodlist;\r\n    if (gl === undefined) gl = [];\r\n    let bl: string[] = [];\r\n    if (this.props.badlist !== undefined) bl = this.props.badlist;\r\n\r\n    this.statetypes = [];\r\n    for (const meth of this.state.base.AllStateTypes()) {\r\n      this.statetypes.push({ key: meth.ObjectName, text: meth.ObjectCaption });\r\n    }\r\n\r\n    for (let attr of obj.AllStates()) {\r\n      let lbl = this.props.semtalk.getResStrListener(\"STRBONSTATE\");\r\n      if (attr.Owner.ObjectName !== obj.ObjectName) {\r\n        lbl = lbl + \" (\" + attr.Owner.ObjectCaption + \")\";\r\n      }\r\n      let item: IStateTab = {\r\n        ID: items.length,\r\n        PropName: attr.ClassOf().ObjectName,\r\n        Object: obj,\r\n        Owner: attr.Owner,\r\n        State: attr,\r\n        // PropType: SemTalkType.SemTalkStateType,\r\n        // PropValue: attr.Value,\r\n        _label: lbl,\r\n        // _value: attr.Value,\r\n        // PropValueName: null,\r\n        // PropValueCaption: null\r\n      };\r\n      if (gl !== undefined && gl.length > 0) {\r\n        if (gl.indexOf(item.PropName) > -1) {\r\n          items.push(item);\r\n        }\r\n      } else {\r\n        if (bl !== undefined && bl.length > 0) {\r\n          if (bl.indexOf(item.PropName) < 0) {\r\n            items.push(item);\r\n          }\r\n        } else {\r\n          items.push(item);\r\n        }\r\n      }\r\n    }\r\n    return items;\r\n  }\r\n  private _columns: IColumn[] = [\r\n    {\r\n      key: 'Value',\r\n      name: 'Value',\r\n      fieldName: 'Value',\r\n      minWidth: 200,\r\n      isMultiline: false,\r\n      onRender: (item: IStateTab, _index?: number, column?: IColumn) => {\r\n        let r: any;\r\n        r = <TextField value={item.PropName} readOnly={true} label={item._label}></TextField>;\r\n        return r;\r\n      }\r\n    }\r\n  ];\r\n  private editItem = (): void => {\r\n    let item = this.state.sel.getSelection()[0] as IStateTab;\r\n    if (item !== null) {\r\n      this.setState({\r\n        newitem: true,\r\n        newitemtitle: item.PropName,\r\n      });\r\n    }\r\n  }\r\n  private commands = [\r\n    {\r\n      key: 'Add',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDNE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Add'\r\n      },\r\n      onClick: (): void => {\r\n        this.setState({\r\n          newitem: true,\r\n          newitemtitle: \"\"\r\n        });\r\n      }\r\n    },\r\n    {\r\n      key: 'Edit',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDED\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Edit'\r\n      },\r\n      onClick: this.editItem\r\n    },\r\n    {\r\n      key: 'Delete',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Delete'\r\n      },\r\n      onClick: (): void => {\r\n        let item = this.state.sel.getSelection()[0] as IStateTab;\r\n        if (item !== null) {\r\n          if (this.object !== null) {\r\n            if (item.State !== undefined)\r\n              item.Object.DeleteState(item.PropName);\r\n            this.setState({ newitem: false, items: this.getItems(this.object) });\r\n          }\r\n        }\r\n      }\r\n    }];\r\n\r\n  private cancelnew = (): void => {\r\n    this.setState({ newitem: false });\r\n  }\r\n  private addnewitem = (): void => {\r\n    let t = this.state.newitemtitle;\r\n    if (this.state.newitemtitle.length > 0) {\r\n      if (this.object !== null) {\r\n        this.object.MakeState(t);\r\n        this.setState({\r\n          newitem: false,\r\n          newitemtitle: \"\",\r\n          items: this.getItems(this.object)\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        newitem: false,\r\n        newitemtitle: \"\",\r\n      });\r\n    }\r\n  }\r\n  public render(): React.ReactElement<ISemTalkStateTabProps> {\r\n    // let val: any[] = this.getItems();\r\n    let r: React.ReactElement<ISemTalkStateTabProps>;\r\n    // let val: any[] = this.state.items;\r\n    // this._selection = new Selection({\r\n    // });\r\n    r = <Fabric>\r\n      <div className={styles.semTalkState}><div className={styles.pivottab}></div></div>\r\n      <CommandBar\r\n        items={this.commands}\r\n      ></CommandBar>\r\n      <div className={styles.semTalkState}><div className={styles.pivottab}></div></div>\r\n      {this.state.newitem &&\r\n        <div>\r\n          <ComboBox text={this.state.newitemtitle} label={this.props.semtalk.getResStrListener(\"STRBONSTATE\")}\r\n            options={this.statetypes}\r\n            allowFreeform required={true}\r\n            //  autoComplete=\"on\"\r\n            onChange={(event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\r\n              if (option !== undefined) {\r\n                this.setState({ newitemtitle: option.text });\r\n              } else {\r\n                if (value !== undefined)\r\n                  this.setState({ newitemtitle: value });\r\n              }\r\n            }}></ComboBox>\r\n          {/* <TextField value={this.state.newitemtitle} label={this.props.semtalk.getResStrListener(\"STRDLGNAM\")} required onChange={(ev, a) => {\r\n            if (a !== undefined)\r\n              this.setState({ newitemtitle: a });\r\n          }}></TextField> */}\r\n          {/* <Dropdown\r\n            label={this.props.semtalk.getResStrListener(\"STRDLGEDMETHCAPTION\")}\r\n            options={this.methodtypes}\r\n            required\r\n            defaultSelectedKey={this.state.newitemlanguage}\r\n            onChange={(ev, a) => {\r\n              if (a !== undefined)\r\n                this.setState({ newitemlanguage: a.key as string });\r\n            }}\r\n          /> */}\r\n          <div className={styles.semTalkState}><div className={styles.pivottab}></div></div>\r\n          <DefaultButton text={this.props.semtalk.getResStrListener(\"STRDLGCMDOK\")} onClick={this.addnewitem} />\r\n          <DefaultButton text={this.props.semtalk.getResStrListener(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\r\n        </div>\r\n      }\r\n      {!this.state.newitem &&\r\n        <DetailsList\r\n          items={this.state.items}\r\n          compact={true}\r\n          columns={this._columns}\r\n          selectionMode={SelectionMode.single}\r\n          layoutMode={DetailsListLayoutMode.justified}\r\n          selection={this.state.sel}\r\n          checkboxVisibility={CheckboxVisibility.hidden}\r\n          isHeaderVisible={false}\r\n        />\r\n      }\r\n    </Fabric>;\r\n    return r;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport styles from './SemTalkAssociations.module.scss';\r\nimport {\r\n  Selection, ISelection, IColumn, DetailsList, DetailsListLayoutMode, TextField,\r\n  CheckboxVisibility, IDropdownOption, CommandBar, DefaultButton, Dropdown\r\n} from 'office-ui-fabric-react';\r\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\r\n\r\nimport {\r\n  IObjectBase, ISemTalkObject, ISemTalkAssociation, SemTalkType, ISemTalkInstance,\r\n  ISemTalkClass, ISemTalkAssociationType, ISemTalkSystemClass,\r\n  SemTalkBaseConstant\r\n} from \"../../application/tbase/Interface\";\r\nimport { getObject, addCallBack, removeCallBack, gotoObject } from '../../application/semtalklistener/stglobal';\r\n//import { any } from '@microsoft/sp-webpart-base';\r\n//import { SetContext } from '../../semtalkportal/restinterface';\r\nimport { Guid } from \"guid-typescript\";\r\n// import * as strings from 'SemTalkStrings';\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { Process_ElementName } from '../../application/semtalklistener/processInterface';\r\nimport { BPMN_ElementName } from '../../application/semtalklistener/subtask/bpmn/bpmninterface';\r\n\r\n\r\nexport interface ISemTalkAssociationsTabProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  context?: any;\r\n  goodlist?: string[];\r\n  badlist?: string[];\r\n  hidebpmn?: string[];\r\n  hidesimulation?: string[];\r\n}\r\nexport interface ISemTalkAssociationsTabState {\r\n  objectid: number;\r\n  base: IObjectBase;\r\n  newitem: boolean;\r\n  sel: ISelection;\r\n  items: IAssociationTab[];\r\n  others: IDropdownOption[];\r\n}\r\ninterface IAssociationTab {\r\n  ID: number;\r\n  Object: ISemTalkObject;\r\n  PropName: string;\r\n  PropType: SemTalkType;\r\n  Association: ISemTalkAssociation;\r\n  PropValue: string | undefined;\r\n  PropValueName: ISemTalkObject | null;\r\n  PropValueCaption: string | null;\r\n  _label: string;\r\n  _value: string;\r\n  _isinv: boolean;\r\n}\r\ninterface IAssocDropDownOption extends IDropdownOption {\r\n  inv: boolean;\r\n}\r\nexport class SemTalkAssociationsTab extends React.Component<ISemTalkAssociationsTabProps, ISemTalkAssociationsTabState> {\r\n  // private _selection: Selection;\r\n  private object: ISemTalkObject | null = null;\r\n  private assoctypes: IAssocDropDownOption[] = [];\r\n  private types: IDropdownOption[] = [];\r\n  public callback: Guid;\r\n\r\n  constructor(props: ISemTalkAssociationsTabProps) {\r\n    super(props);\r\n    this.callback = Guid.create();\r\n    console.debug(\"showAssociationsTab\");\r\n    this.state = {\r\n      objectid: -1,\r\n      items: [],\r\n      sel: new Selection({}),\r\n      others: [],\r\n      newitem: false,\r\n      base: this.props.semtalk.base\r\n    };\r\n  }\r\n  private resetState = () => {\r\n    this.setState({\r\n      objectid: -1,\r\n      items: [],\r\n      others: [],\r\n      newitem: false,\r\n      base: this.props.semtalk.base\r\n    });\r\n  }\r\n  private mounted: boolean = false;\r\n  public async componentDidMount() {\r\n    this.mounted = true;\r\n    let oid: number = getObject();\r\n\r\n    this.types = [];\r\n    this.types.push({ key: \"Instance\", text: this.props.semtalk.getResStr(\"STRINSTANCE\") });\r\n    this.types.push({ key: \"Class\", text: this.props.semtalk.getResStr(\"STRClass\") });\r\n  \r\n    if (oid > 0) {\r\n      this.loadObject(oid);\r\n    }\r\n    this.setState({ newitem: false });\r\n    addCallBack(this);\r\n  }\r\n  public componentWillUnmount() {\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n    this.object = null;\r\n  }\r\n\r\n  private loadObject = (id: number) => {\r\n    this.object = this.state.base.FindObjectByID(id);\r\n    this.assoctypes = [];\r\n    let items: IAssociationTab[] = [];\r\n    if (this.object !== null) {\r\n      items = this.getItems(this.object);\r\n      let cl: ISemTalkClass;\r\n      if (this.object.ObjectBase.IsInstance(this.object)) {\r\n        cl = (this.object as ISemTalkInstance).ClassOf();\r\n        for (const atype of cl.AllAssociationTypes()) {\r\n          this.assoctypes.push({ key: atype.ObjectName, text: atype.ObjectCaption, inv: false });\r\n        }\r\n        for (const atype of cl.AllInvAssociationTypes()) {\r\n          this.assoctypes.push({ key: atype.ObjectName, text: atype.ObjectCaption, inv: true });\r\n        }\r\n      } else {\r\n        cl = this.object as ISemTalkClass;\r\n        let scl = cl.SystemClass();\r\n        if (scl !== null)\r\n          cl = scl;\r\n        for (const atype of cl.AllAssociationTypes()) {\r\n          this.assoctypes.push({ key: atype.ObjectName, text: atype.ObjectCaption, inv: false });\r\n        }\r\n        for (const atype of cl.AllInvAssociationTypes()) {\r\n          this.assoctypes.push({ key: atype.ObjectName, text: atype.ObjectCaption, inv: true });\r\n        }\r\n      }\r\n      this.setState({\r\n        objectid: id, items: items,\r\n        others: [],\r\n        newitem: false,\r\n        base: this.props.semtalk.base\r\n      });\r\n    } else {\r\n      this.resetState();\r\n    }\r\n  }\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoObject:\r\n        if (md.objectid !== this.state.objectid) {\r\n         // this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode:\r\n        if (md.objectid !== this.state.objectid) {\r\n        //  this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  private getItems = (obj: ISemTalkObject): IAssociationTab[] => {\r\n    let gl: string[] | undefined = this.props.goodlist;\r\n    if (gl === undefined) gl = [];\r\n    let bl: string[] = [];\r\n    if (this.props.badlist !== undefined) bl = this.props.badlist;\r\n\r\n    let bpmnl: string[] | undefined = this.props.hidebpmn;\r\n    let siml: string[] | undefined = this.props.hidesimulation;\r\n    if (bpmnl !== undefined) {\r\n      bl.push(...bpmnl);\r\n    }\r\n    if (siml !== undefined) {\r\n      bl.push(...siml);\r\n    }\r\n    bl.push(SemTalkBaseConstant.SLComment);\r\n    bl.push(\"Kommentar\");\r\n    bl.push(SemTalkBaseConstant.SLhasAttachment);\r\n    bl.push(SemTalkBaseConstant.SLSubClassOf);\r\n\r\n    let ob = obj.ObjectBase;\r\n    let assocs: ISemTalkAssociation[] = [];\r\n    let invassocs: ISemTalkAssociation[] = [];\r\n\r\n    if (ob.IsInstance(obj)) {\r\n      assocs = obj.Associations();\r\n      invassocs = obj.InvAssociations();\r\n      bl.push(ob.GetModelAttribute(Process_ElementName.SLInfoType));\r\n      let crtl = ob.FindAssociationType(ob.GetModelAttribute(Process_ElementName.SLControl));\r\n      if (crtl !== null) {\r\n        bl.push(ob.GetModelAttribute(Process_ElementName.SLControl));\r\n        let ctls = crtl.AllSubClasses().map(s => s.ObjectName);\r\n        bl.push(...ctls);\r\n      }\r\n      bl.push(ob.GetModelAttribute(BPMN_ElementName.SLSequenceFlow));\r\n      bl.push(ob.GetModelAttribute(Process_ElementName.SLMessageFlow));\r\n    } else {\r\n      if (ob.IsSystemClass(obj) || obj.SystemClass() === null) {\r\n        assocs = (obj as ISemTalkClass).AllAssociations();\r\n        invassocs = (obj as ISemTalkClass).AllInvAssociations();\r\n      } else {\r\n        let sc = obj.SystemClass() as ISemTalkSystemClass;\r\n        for (let a of (obj as ISemTalkClass).AllAssociations()) {\r\n          if (a.FromObject === sc) {\r\n            break;\r\n          } else {\r\n            assocs.push(a);\r\n          }\r\n        }\r\n        for (let a of (obj as ISemTalkClass).AllInvAssociations()) {\r\n          if (a.ToObject === sc) {\r\n            break;\r\n          } else {\r\n            invassocs.push(a);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let items: IAssociationTab[] = [];\r\n\r\n    for (let assoc of assocs) {\r\n      let lbl = \"> \" + assoc.ClassOf().ID2NameNsp();\r\n      if (assoc.FromObject !== obj) {\r\n        lbl = lbl + \" (\" + assoc.FromObject.ID2NameNsp() + \")\";\r\n      }\r\n      let item: IAssociationTab = {\r\n        ID: items.length,\r\n        PropName: assoc.ClassOf().ObjectName,\r\n        Object: obj,\r\n        Association: assoc,\r\n        PropType: SemTalkType.SemTalkAssociation,\r\n        PropValue: assoc.ToObject.ObjectName,\r\n        PropValueName: assoc.ToObject,\r\n        PropValueCaption: assoc.ToObject.ID2NameNsp(),\r\n        _label: lbl,\r\n        _value: assoc.ToObject.ID2NameNsp(),\r\n        _isinv: false\r\n      };\r\n      if (gl !== undefined && gl.length > 0) {\r\n        if (gl.indexOf(item.PropName) > -1) {\r\n          items.push(item);\r\n        }\r\n      } else {\r\n        if (bl !== undefined && bl.length > 0) {\r\n          if (bl.indexOf(item.PropName) < 0) {\r\n            items.push(item);\r\n          }\r\n        } else {\r\n          items.push(item);\r\n        }\r\n      }\r\n    }\r\n    for (let assoc of invassocs) {\r\n      let lbl = \"< \" + assoc.ClassOf().ID2NameNsp();\r\n      if (assoc.ToObject !== obj) {\r\n        lbl = lbl + \" (\" + assoc.FromObject.ID2NameNsp() + \")\";\r\n      }\r\n      let item: IAssociationTab = {\r\n        ID: items.length,\r\n        PropName: assoc.ClassOf().ObjectName,\r\n        Object: obj,\r\n        Association: assoc,\r\n        PropType: SemTalkType.SemTalkAssociation,\r\n        PropValue: assoc.FromObject.ObjectName,\r\n        PropValueName: assoc.FromObject,\r\n        PropValueCaption: assoc.FromObject.ID2NameNsp(),\r\n        _label: lbl,\r\n        _value: assoc.FromObject.ID2NameNsp(),\r\n        _isinv: true\r\n      };\r\n      if (gl !== undefined && gl.length > 0) {\r\n        if (gl.indexOf(item.PropName) > -1) {\r\n          items.push(item);\r\n        }\r\n      } else {\r\n        if (bl !== undefined && bl.length > 0) {\r\n          if (bl.indexOf(item.PropName) < 0) {\r\n            items.push(item);\r\n          }\r\n        } else {\r\n          items.push(item);\r\n        }\r\n      }\r\n    }\r\n    return items;\r\n  }\r\n\r\n  private _columns: IColumn[] = [\r\n    // {\r\n    //   key: 'Label',\r\n    //   name: strings.Label,\r\n    //   fieldName: 'Label',\r\n    //   minWidth: 50,\r\n    //   // maxWidth: 50,\r\n    //   isResizable: true,\r\n    //   isMultiline: true,\r\n    //   onRender: item => (\r\n    //     <div>{item._label}</div>\r\n    //   )\r\n    // },\r\n    {\r\n      key: 'Value',\r\n      name: \"Value\",\r\n      fieldName: 'Value',\r\n      minWidth: 200,\r\n      // maxWidth: 180,\r\n      // isResizable: true,\r\n      // isMultiline: true,\r\n      onRender: (item: IAssociationTab, _index?: number, _column?: IColumn) => {\r\n        let r: any;\r\n        r = <TextField value={item._value} readOnly={true} label={item._label}></TextField>;\r\n        return r;\r\n        //    return item._value;\r\n      }\r\n    }\r\n  ];\r\n\r\n  private commands = [\r\n    {\r\n      key: 'Add',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDNE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Add'\r\n      },\r\n      onClick: (): void => {\r\n        this.setState({ newitem: !this.state.newitem });\r\n      }\r\n    },\r\n    {\r\n      key: 'Edit',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDED\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Edit'\r\n      },\r\n      onClick: (): void => {\r\n        this.editItem();\r\n      }\r\n    },\r\n    {\r\n      key: 'Delete',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Delete'\r\n      },\r\n      onClick: (): void => {\r\n        this.deleteItem();\r\n      }\r\n    },\r\n    {\r\n      key: 'Browse',\r\n      name: this.props.semtalk.getResStrListener(\"STRBROWSE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Diamond'\r\n      },\r\n      onClick: (): void => {\r\n        this.browseItem();\r\n      }\r\n    }];\r\n  private newitem = {\r\n    other: -1,\r\n    type: \"Instance\",\r\n    association: \"\",\r\n    inv: false\r\n    //  type: \"\"\r\n  };\r\n  private editItem = (): void => {\r\n    if (this.state.newitem) {\r\n      this.setState({ newitem: false });\r\n    } else {\r\n      let item = this.state.sel.getSelection()[0] as IAssociationTab;\r\n      if (item !== null) {\r\n        this.newitem.association = item.PropName;\r\n        if (item._isinv) {\r\n          this.computeInvOthers(this.newitem.association);\r\n          this.newitem.other = item.Association.FromObject.ID;\r\n        } else {\r\n          this.computeOthers(this.newitem.association);\r\n          this.newitem.other = item.Association.ToObject.ID;\r\n        }\r\n        if (item.PropValue !== undefined)\r\n          this.setState({ newitem: true });\r\n      }\r\n    }\r\n  }\r\n  private browseItem = (): void => {\r\n    if (this.state.newitem) return;\r\n    let item = this.state.sel.getSelection()[0] as IAssociationTab;\r\n    if (item !== null) {\r\n      if (this.object !== null) {\r\n        let objectid = 0;\r\n        if (item._isinv) {\r\n          objectid = item.Association.FromObject.ID;\r\n        } else {\r\n          objectid = item.Association.ToObject.ID;\r\n        }\r\n        gotoObject(objectid);\r\n      }\r\n    }\r\n  }\r\n  private deleteItem = (): void => {\r\n    if (this.state.newitem) return;\r\n    let item = this.state.sel.getSelection()[0] as IAssociationTab;\r\n    if (item !== null) {\r\n      if (this.object !== null) {\r\n        if (item.Association !== undefined)\r\n          item.Association.Delete();\r\n        this.setState({ newitem: false, items: this.getItems(this.object) });\r\n      }\r\n    }\r\n  }\r\n  private computeOthers(assoc: string) {\r\n    this.newitem.inv = false;\r\n    let cl: ISemTalkClass;\r\n    if (this.object !== null) {\r\n      let oclasses: ISemTalkObject[] = [];\r\n      const ob = this.object.ObjectBase;\r\n      const at = ob.FindAssociationType(assoc) as ISemTalkAssociationType;\r\n      let others: IDropdownOption[] = [];\r\n      if (ob.IsInstance(this.object)) {\r\n        cl = (this.object as ISemTalkInstance).ClassOf();\r\n        oclasses = cl.GetRelationOtherBases(at);\r\n        for (let c of oclasses)\r\n          for (let i of (c as ISemTalkClass).AllInstances())\r\n            others.push({ key: i.ID, text: i.ObjectCaption });\r\n      } else {\r\n        if (ob.IsSystemClass(this.object)) {\r\n          oclasses = ob.AllSystemClasses();\r\n        } else {\r\n          cl = (this.object as ISemTalkClass);\r\n          let scl = cl.SystemClass();\r\n          if (scl !== null) {\r\n            oclasses = scl.AllSubClasses();\r\n          } else {\r\n            oclasses = ob.AllClasses();\r\n          }\r\n        }\r\n        // oclasses = cl.GetRelationOtherBases(at);\r\n        for (let i of oclasses)\r\n          // for (let i of (c as ISemTalkClass).AllSubClasses())\r\n          others.push({ key: i.ID, text: i.ObjectCaption });\r\n      }\r\n      others = others.sort((x, y) => x.text.localeCompare(y.text));\r\n      this.setState({ others: others });\r\n    }\r\n  }\r\n  private computeInvOthers = (assoc: string) => {\r\n    this.newitem.inv = true;\r\n    let cl: ISemTalkClass;\r\n    if (this.object !== null) {\r\n      let oclasses: ISemTalkObject[] = [];\r\n      const ob = this.object.ObjectBase;\r\n      const at = ob.FindAssociationType(assoc) as ISemTalkAssociationType;\r\n      if (ob.IsInstance(this.object)) {\r\n        cl = (this.object as ISemTalkInstance).ClassOf();\r\n      } else {\r\n        cl = (this.object as ISemTalkClass);\r\n        let scl = cl.SystemClass();\r\n        if (scl !== null)\r\n          cl = scl;\r\n      }\r\n      oclasses = cl.GetInvRelationOtherBases(at);\r\n      let others: IDropdownOption[] = [];\r\n      for (let c of oclasses)\r\n        for (let i of (c as ISemTalkClass).AllInstances())\r\n          others.push({ key: i.ID, text: i.ObjectCaption });\r\n      others = others.sort((x, y) => x.text.localeCompare(y.text));\r\n      this.setState({ others: others });\r\n    }\r\n  }\r\n  private cancelnew = (): void => {\r\n    this.setState({ newitem: false });\r\n  }\r\n  private addnewitem = (): void => {\r\n    if (this.newitem.other > 0 && this.object !== null) {\r\n      let oth: any = this.state.base.FindObjectByID(this.newitem.other);\r\n      if (!this.newitem.inv) {\r\n        this.object.MakeAssociation(this.newitem.association, oth as ISemTalkObject);\r\n      } else {\r\n        (oth as ISemTalkObject).MakeAssociation(this.newitem.association, this.object);\r\n      }\r\n      this.setState({ newitem: false, items: this.getItems(this.object) });\r\n    } else {\r\n      this.setState({ newitem: false });\r\n    }\r\n  }\r\n  private selectRelation = (a: IAssocDropDownOption) => {\r\n    this.newitem.association = a.key as string;\r\n    if (a.inv) {\r\n      this.computeInvOthers(this.newitem.association);\r\n    } else {\r\n      this.computeOthers(this.newitem.association);\r\n    }\r\n  }\r\n  public render(): React.ReactElement<ISemTalkAssociationsTabProps> {\r\n    // let val: any[] = this.getItems();\r\n    let r: React.ReactElement<ISemTalkAssociationsTabProps>;\r\n   // let val: any[] = this.state.items;\r\n    // this._selection = new Selection({\r\n    // });\r\n    r = <Fabric>\r\n      <div id=\"stAssociationsTest\" className={styles.semTalkAssociations}><div className={styles.pivottab}></div></div>\r\n      <CommandBar id=\"STbuttons\"\r\n        items={this.commands}\r\n      ></CommandBar>\r\n      <div className={styles.semTalkAssociations}><div className={styles.pivottab}></div></div>\r\n      {this.state.newitem && this.assoctypes.length > 0 &&\r\n        <div>\r\n          <Dropdown\r\n            id=\"assoDropdown\"\r\n            required\r\n            label={this.props.semtalk.getResStrListener(\"STRDLGNASAAS\")}\r\n            options={this.assoctypes}\r\n            selectedKey={this.newitem.association}\r\n            onChange={(_ev, a) => {\r\n              if (a !== undefined)\r\n                this.selectRelation(a as IAssocDropDownOption);\r\n            }}\r\n          />\r\n          <Dropdown\r\n            id=\"typeDropdown\"\r\n            label={this.props.semtalk.getResStrListener(\"STRDLGNASTYP\")}\r\n            defaultSelectedKey=\"Instance\"\r\n            options={this.types}\r\n            onChange={(_ev, a) => {\r\n              if (a !== undefined) {\r\n                this.newitem.type = a.key.toString();\r\n              }\r\n            }}\r\n          />\r\n          <Dropdown\r\n            id=\"objectDropdown\"\r\n            required\r\n            label={this.props.semtalk.getResStrListener(\"STROBJSING\")}\r\n            options={this.state.others}\r\n            defaultSelectedKey={this.newitem.other}\r\n            onChange={(_ev, a) => {\r\n              if (a !== undefined) //should add an condition for a == undefined\r\n                this.newitem.other = a.key as number; // other of string type cannot be chosen --> other = undefined, program breaks here\r\n            }}\r\n          />\r\n          <div className={styles.semTalkAssociations}><div className={styles.pivottab}></div></div>\r\n          <DefaultButton id=\"okButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDOK\")} onClick={this.addnewitem} />\r\n          <DefaultButton id=\"cancelButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\r\n        </div>\r\n      }\r\n      {!this.state.newitem &&\r\n        <DetailsList\r\n          items={this.state.items}\r\n          compact={true}\r\n          columns={this._columns}\r\n          selectionMode={SelectionMode.single}\r\n          layoutMode={DetailsListLayoutMode.justified}\r\n          selection={this.state.sel}\r\n          checkboxVisibility={CheckboxVisibility.hidden}\r\n          isHeaderVisible={false}\r\n        />\r\n      }\r\n    </Fabric>;\r\n    return r;\r\n  }}\r\n","import * as React from 'react';\r\nimport {\r\n  Selection, ISelection, DetailsList, DetailsListLayoutMode, IColumn,\r\n  CheckboxVisibility,\r\n  ComboBox, IComboBox, IComboBoxOption, IDropdownOption\r\n} from 'office-ui-fabric-react';\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\r\nimport {\r\n  ISemTalkObject, ISemTalkClass, ISemTalkInstance,\r\n  ISemTalkSystemClass, ISemTalkAssociation, ISemTalkAssociationType,\r\n  SemTalkType, SemTalkRelation, ISemTalkBusinessClass, SemTalkBaseConstant, SemTalkLanguage\r\n} from \"../../application/tbase/Interface\";\r\n\r\nimport { addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\nimport { Guid } from \"guid-typescript\";\r\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\r\nimport {\r\n  IMongoOption, mgGetItemNames,\r\n  mgGetItem\r\n} from '../../SemTalkMongoServer';\r\nimport { Process_ElementName } from '../../application/semtalklistener/processInterface';\r\nimport { GetLanguage } from '../../application/tbase/langtools';\r\nimport { SemTalkCookie } from \"../../ISemTalkOnline\";\r\n\r\nexport interface ISemTalkSelectProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  graphClient?: any;\r\n  context?: any;\r\n  site?: string;\r\n  sharepointrepository?: string;\r\n  listTitle?: string;\r\n  query?: string;\r\n  columns?: string[];\r\n  isexport: boolean;\r\n  callback: (semtalk: IVisioRDFS, shape: any,\r\n    obj: ISemTalkObject[], expand: boolean) => void;\r\n  systemclass: ISemTalkSystemClass | null;\r\n  isclasses: boolean;\r\n  focus: number | null;\r\n  mongo: IMongoOption;\r\n}\r\n\r\nexport interface ISemTalkSelectState {\r\n  objectid: number;\r\n  items: IExternalObject[];\r\n  objectname: string;\r\n  isbusinessclasses: boolean;\r\n  showextern: boolean;\r\n  showgraph: boolean;\r\n  isexpand: boolean;\r\n  autoComplete: boolean;\r\n}\r\ninterface IExternalObject {\r\n  Object: ISemTalkObject | null;\r\n  ObjectName: string;\r\n  ObjectCaption: string;\r\n  ObjectClass: string | null;\r\n  ObjectDescription: string | null;\r\n  EditLink: string | null;\r\n  ReferenceType: string;\r\n  SPItem: any | null;\r\n  MGItem: any | null;\r\n}\r\nexport class SemTalkSelect extends React.Component<ISemTalkSelectProps, ISemTalkSelectState> {\r\n  private object: ISemTalkObject | null = null;\r\n  public callback: Guid;\r\n  private _allitems: IExternalObject[] = [];\r\n  private _sel: ISelection = new Selection({\r\n    onSelectionChanged: () => { this.selectitem(); }\r\n  });\r\n  private _sysclass: ISemTalkSystemClass | null = null;\r\n  private _languages: string[] = [SemTalkLanguage.German,\r\n  SemTalkLanguage.English, SemTalkLanguage.Spanish, SemTalkLanguage.Russian,\r\n  SemTalkLanguage.Simplified, SemTalkLanguage.Traditional];\r\n  private objects: IDropdownOption[] = [];\r\n\r\n  constructor(props: ISemTalkSelectProps) {\r\n    super(props);\r\n    console.debug(\"showSelect\");\r\n    this.callback = Guid.create();\r\n    let isbusinessclasses = false;\r\n    let inf = this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLInformation);\r\n    if (this.props.systemclass) {\r\n      isbusinessclasses = this.props.systemclass.ObjectName === inf;\r\n    }\r\n    const langclass = this.props.semtalk.base.FindClass(SemTalkBaseConstant.SLLanguage);\r\n    if (langclass) {\r\n      this._languages = langclass.Instances().map((l) => l.ObjectName);\r\n    }\r\n    let ac = (window as any).localStorage.getItem(SemTalkCookie.autoComplete);\r\n    if (!ac) { ac = (ac !== 'false'); }\r\n\r\n    this.state = {\r\n      objectid: -1,\r\n      items: [],\r\n      objectname: \"\",\r\n      isbusinessclasses: isbusinessclasses,\r\n      showextern: true,\r\n      showgraph: true,\r\n      isexpand: true,\r\n      autoComplete: (ac !== 'false')\r\n    };\r\n  }\r\n  \r\n  private mounted: boolean = false;\r\n\r\n  public async componentDidMount() {\r\n    // let oid: number = getObject();\r\n    if (this.props.focus && this.props.focus > 0) {\r\n      let oid: number = this.props.focus;\r\n      this.loadObject(oid, this.state.showextern, this.state.showgraph);\r\n    } else {\r\n      this.loadObject(-1, this.state.showextern, this.state.showgraph);\r\n    }\r\n    this.mounted = true;\r\n    addCallBack(this);\r\n  }\r\n  public componentWillUnmount() {\r\n    // if (this.object && this.state.selection && this.props.semtalk.shape) {\r\n    //   this.props.semtalk.ChangeObject(this.props.semtalk.shape, this.state.selection);\r\n    //   }\r\n    // this.object = null;\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n  }\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n    }\r\n  }\r\n  // private sp2mg = async (sc: ISemTalkSystemClass) => {\r\n  //   let ilist: any = this.localObjects(sc);\r\n  //   if (this.props.context !== undefined && this.props.site !== undefined) {\r\n  //     let spinterface = this.props.semtalk.explorer;\r\n  //     let lany: any = await spinterface.getListData(this.props.context, this.props.site, this.props.semtalk.getSPListName(sc.ObjectName), \"*\");\r\n  //     let lil: any[] = lany.value;\r\n  //     if (lil !== undefined) {\r\n  //       let spitems = lil;\r\n  //       for (let s of spitems) {\r\n  //         ilist[s[\"Title\"]] = { \"name\": s[\"Title\"] };\r\n  //       }\r\n  //     }\r\n  //   }\r\n\r\n  //   let lib = this.props.semtalk.getSPListName(sc.ObjectName);\r\n  //   // await mgDeleteItem(url, lib, \"*\");\r\n  //   let docs: string[] = await mgGetItemNames(this.props.mongo, this.props.mongo.repository, lib);\r\n  //   for (let x of docs) {\r\n  //     const y: any = x;\r\n  //     delete ilist[y[\"name\"]];\r\n  //   }\r\n  //   let slist: any[] = [];\r\n  //   for (let x in ilist) {\r\n  //     slist.push(ilist[x]);\r\n\r\n  //   }\r\n  //   let itemsx = await mgInsertItems(this.props.mongo, this.props.mongo.repository, lib, slist);\r\n  //   console.debug(itemsx.length);\r\n  // }\r\n  // private localObjects = (sc: ISemTalkSystemClass): any => {\r\n  //   let items: any = {};\r\n  //   const base = this.props.semtalk.base;\r\n  //   let isbusinessclasses = this.state.isbusinessclasses;\r\n  //   if (sc) {\r\n  //     //  if (sc !== this.state.sysclass || showextern !== this.state.showextern || showsharepoint !== this.state.showgraph) {\r\n  //     if (true) {\r\n  //       let inf = base.GetModelAttribute(Process_ElementName.SLInformation);\r\n  //       if (!isbusinessclasses) {\r\n  //         isbusinessclasses = sc.ObjectName === inf;\r\n  //       }\r\n  //       if (sc.OnceOnly || this.props.isclasses || this.state.isbusinessclasses) {\r\n  //         for (let s of sc.AllSubClasses()) {\r\n  //           items[s.ObjectName] = { \"name\": s.ObjectName };\r\n  //         }\r\n  //       } else {\r\n  //         if (base.IsAssociationType(sc)) {\r\n  //           for (let s of base.AllAssociationTypes()) {\r\n  //             items[s.ObjectName] = { \"name\": s.ObjectName };\r\n  //           }\r\n  //         } else {\r\n  //           for (let s of sc.AllInstances()) {\r\n  //             if (s.ObjectName !== s.ObjectCaption) {\r\n  //               items[s.ObjectName] = { \"name\": s.ObjectName };\r\n  //             }\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   return items;\r\n  // }\r\n  private async loadObject(id: number, showextern: boolean, groupsandlistsasresources: boolean) {\r\n    let objectname = \"\";\r\n    let sc: ISemTalkSystemClass | null = null;\r\n    if (this.props.systemclass !== null) {\r\n      sc = this.props.systemclass;\r\n    }\r\n    const base = this.props.semtalk.base;\r\n    if (sc === null) {\r\n      this.object = base.FindObjectByID(id);\r\n      if (this.object !== null) {\r\n        objectname = this.object.ObjectCaption;\r\n        if (base.IsClass(this.object)) {\r\n          sc = (this.object as ISemTalkClass).SystemClass();\r\n        } else {\r\n          sc = (this.object as ISemTalkInstance).ClassOf().SystemClass();\r\n        }\r\n      }\r\n    }\r\n    let items: IExternalObject[] = this._allitems;\r\n    // let classes: ISemTalkSystemClass[] = [];\r\n    let isbusinessclasses = this.state.isbusinessclasses;\r\n    if (sc) {\r\n      //  if (sc !== this.state.sysclass || showextern !== this.state.showextern || showsharepoint !== this.state.showgraph) {\r\n      if (true) {\r\n        let inf = base.GetModelAttribute(Process_ElementName.SLInformation);\r\n        if (!isbusinessclasses) {\r\n          isbusinessclasses = sc.ObjectName === inf;\r\n        }\r\n\r\n        if (sc.OnceOnly || this.props.isclasses || this.state.isbusinessclasses) {\r\n          items = sc.AllSubClasses().map((s) => {\r\n            return {\r\n              Object: s, ObjectCaption: s.ObjectCaption,\r\n              ObjectName: s.ObjectName, ObjectDescription: null,\r\n              ObjectClass: null,\r\n              EditLink: null,\r\n              ReferenceType: \"Local\",\r\n              SPItem: null, MGItem: null\r\n            };\r\n          });\r\n        } else {\r\n          if (base.IsAssociationType(sc)) {\r\n            let rels: ISemTalkAssociationType[] = [];\r\n            const rel = this.object as ISemTalkAssociation;\r\n            if (rel.FromObject.ObjectType === SemTalkType.SemTalkInstance &&\r\n              rel.ToObject.ObjectType === SemTalkType.SemTalkInstance) {\r\n              const fromcla = rel.FromObject.SystemClass();\r\n              const tocla = rel.ToObject.SystemClass();\r\n              if (fromcla && tocla) {\r\n                rels = fromcla.AllValidClassRelations(tocla);\r\n              } else {\r\n                rels = base.AllAssociationTypes();\r\n              }\r\n            } else {\r\n              rels = base.AllAssociationTypes();\r\n            }\r\n            items = rels.map((s) => {\r\n              return {\r\n                Object: s, ObjectCaption: s.ObjectCaption,\r\n                ObjectName: s.ObjectName, ObjectDescription: null, EditLink: null,\r\n                ObjectClass: null,\r\n                SPItem: null, MGItem: null,\r\n                ReferenceType: \"Local\"\r\n              };\r\n            });\r\n          } else {\r\n            items = sc.AllInstances().map((s) => {\r\n              return {\r\n                Object: s, ObjectCaption: s.ObjectCaption,\r\n                ObjectClass: s.ClassOf().ID2Name,\r\n                ObjectName: s.ObjectName, ObjectDescription: null, EditLink: null,\r\n                ReferenceType: \"Local\",\r\n                SPItem: null, MGItem: null\r\n              };\r\n            });\r\n          }\r\n        }\r\n        if (!this.props.mongo.usemongo) {\r\n          if (showextern && this.props.context !== undefined && this.props.site !== undefined) {\r\n            let spinterface = this.props.semtalk.explorer;\r\n            let lany: any = await spinterface.getListData(this.props.context, this.props.site, this.props.semtalk.getSPListName(sc.ObjectName), \"*\");\r\n            let lil: any[] = lany.value;\r\n            if (lil !== undefined) {\r\n              let spitems = lil;\r\n              for (let s of spitems) {\r\n                if (items.findIndex((t: IExternalObject) => t.ObjectCaption === s[\"Title\"]) < 0) {\r\n                  // let nid: string = String(s[\"@odata.id\"]);\r\n                  let des: string | null = null;\r\n                  if (s[\"Comment\"]) des = s[\"Comment\"];\r\n                  let cla: string | null = null;\r\n                  if (s[\"Class\"]) cla = s[\"Class\"];\r\n                  const item = {\r\n                    Object: null, ObjectCaption: s[\"Title\"] as string, ObjectName: s[\"Title\"],\r\n                    ObjectDescription: des,\r\n                    ObjectClass: cla,\r\n                    EditLink: s[\"@odata.editLink\"],\r\n                    ReferenceType: \"Element\",\r\n                    SPItem: s, MGItem: null\r\n                  };\r\n                  items.push(item);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (this.props.mongo.usemongo) {\r\n          if (showextern && this.props.mongo.semmongoserverurl !== undefined) {\r\n            let lib = this.props.semtalk.getSPListName(sc.ObjectName);\r\n            // let docs = await mgGetItemNames(this.props.mongo, this.props.mongo.repository, lib);\r\n            let docs: any[] = [];\r\n            let x = sessionStorage.getItem(\"mgGetItemNames_\" + lib);\r\n            if (x) {\r\n              docs = JSON.parse(x);\r\n            } else {\r\n              docs = await mgGetItemNames(this.props.mongo, this.props.mongo.repository, lib);\r\n              sessionStorage.setItem(\"mgGetItemNames_\" + lib, JSON.stringify(docs));\r\n            }\r\n            for (let s1 of docs) {\r\n              const s: any = s1;\r\n              if (items.findIndex((t: IExternalObject) => t.ObjectCaption === s[\"name\"]) < 0) {\r\n                let nid: string = s[\"_id\"] as string;\r\n                let des: string | null = null;\r\n                if (s[\"Comment\"]) des = s[\"Comment\"];\r\n                let cla: string | null = null;\r\n                if (s[\"Class\"]) cla = s[\"Class\"];\r\n                let item = {\r\n                  Object: null, ObjectCaption: s[\"name\"] as string, ObjectName: s[\"name\"],\r\n                  ObjectDescription: des,\r\n                  ObjectClass: cla,\r\n                  EditLink: this.props.mongo.repository + \"/\" + lib + \"/\" + nid,\r\n                  ReferenceType: \"Mongo\",\r\n                  SPItem: null, MGItem: s\r\n                };\r\n                items.push(item);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (this.props.graphClient !== undefined && groupsandlistsasresources) {\r\n          let ob = this.props.semtalk.base;\r\n          let spinterface = this.props.semtalk.explorer;\r\n          switch (sc.ObjectName) {\r\n            case ob.GetModelAttribute(Process_ElementName.SLResource): {\r\n              let editLink = \"groups\";\r\n              let res = await spinterface.fetchGraph(editLink, \"\", \"\", this.props.graphClient);\r\n              if (res.value) {\r\n                let nitems = this.loadGraphItems(res.value, editLink, \"Group\");\r\n                items.push(...nitems);\r\n              }\r\n              break;\r\n            }\r\n            case ob.GetModelAttribute(Process_ElementName.SLBuffer): {\r\n              let editLink = \"groups/1e504f68-4a10-42e2-aa15-d0861940a356/sites/root/lists\";\r\n              let res = await spinterface.fetchGraph(editLink, \"\", \"\", this.props.graphClient);\r\n              if (res.value) {\r\n                let nitems = this.loadGraphLists(res.value, editLink, \"List\");\r\n                items.push(...nitems);\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (this.props.graphClient !== undefined && this.props.sharepointrepository) {\r\n          let spinterface = this.props.semtalk.explorer;\r\n          let listname = this.props.semtalk.getSPListName(sc.ObjectName);\r\n          let query = this.props.sharepointrepository + \"lists/\" + listname + \"/items?expand=fields\";\r\n          let resl = await spinterface.fetchGraphItems(this.props.graphClient, query);\r\n          let nitems = this.loadGraphListItems(resl, \"Element\");\r\n          items.push(...nitems);\r\n        }\r\n        // classes = sc.AllSystemSubClasses();\r\n      }\r\n    } else {\r\n      items = base.AllClasses().map((s) => {\r\n        return {\r\n          Object: s, ObjectCaption: s.ObjectCaption,\r\n          ObjectName: s.ObjectName,\r\n          ObjectDescription: null,\r\n          ObjectClass: null,\r\n          EditLink: null,\r\n          ReferenceType: \"Local\",\r\n          SPItem: null, MGItem: null\r\n        };\r\n      });\r\n    }\r\n    this._allitems = items.sort((a, b) => a.ObjectCaption.localeCompare(b.ObjectCaption));\r\n    this.objects = this._allitems.map((x: IExternalObject): IDropdownOption => { return { key: x.ObjectName, text: x.ObjectCaption }; });\r\n    // this._classes = classes;\r\n    this._sysclass = sc;\r\n    this.setState({\r\n      objectid: id,\r\n      items: this._allitems,\r\n      // classes: classes,\r\n      isbusinessclasses: isbusinessclasses,\r\n      // sysclass: sc,\r\n      objectname: objectname\r\n    });\r\n  }\r\n  private loadGraphListItems = (lil: any[], reftype: string) => {\r\n    let nitems: IExternalObject[] = [];\r\n    if (lil !== undefined) {\r\n      let spitems = lil;\r\n      for (let s of spitems) {\r\n        let fields: any = s[\"fields\"];\r\n        let item = {\r\n          Object: null, ObjectCaption: fields[\"Title\"] as string, ObjectName: String(s.eTag),\r\n          ObjectDescription: fields[\"Comment\"] as string,\r\n          ObjectClass: null,\r\n          EditLink: s[\"fields@odata.context\"],\r\n          ReferenceType: reftype,\r\n          SPItem: fields, MGItem: null\r\n        };\r\n        nitems.push(item);\r\n      }\r\n    }\r\n    return nitems;\r\n  }\r\n  private loadGraphItems = (lil: any[], editLink: string, reftype: string) => {\r\n    let nitems: IExternalObject[] = [];\r\n    if (lil !== undefined) {\r\n      let spitems = lil;\r\n      for (let item of spitems.map((s) => {\r\n        return {\r\n          Object: null, ObjectCaption: s[\"displayName\"] as string, ObjectName: String(s.id),\r\n          ObjectDescription: s[\"description\"] as string,\r\n          ObjectClass: null,\r\n          EditLink: editLink,\r\n          ReferenceType: reftype,\r\n          SPItem: s, MGItem: null\r\n        };\r\n      })) {\r\n        nitems.push(item);\r\n      }\r\n    }\r\n    return nitems;\r\n  }\r\n  private loadGraphLists = (lil: any[], editLink: string, reftype: string) => {\r\n    let nitems: IExternalObject[] = [];\r\n    if (lil !== undefined) {\r\n      let spitems = lil;\r\n      for (let item of spitems) {\r\n        if (item.list.hidden !== true) {\r\n          let s = {\r\n            Object: null, ObjectCaption: item[\"displayName\"] as string,\r\n            ObjectName: String(item.id),\r\n            ObjectDescription: item[\"description\"] as string,\r\n            ObjectClass: null,\r\n            EditLink: editLink,\r\n            ReferenceType: reftype,\r\n            SPItem: item, MGItem: null\r\n          };\r\n          nitems.push(s);\r\n        }\r\n      }\r\n      // nitems = nitems.sort((a, b) => a.ObjectCaption.localeCompare(b.ObjectCaption));\r\n      // this.setState({ items: nitems });\r\n    }\r\n    // let citems = this.state.items;\r\n    // citems.push(...nitems);\r\n    return nitems;\r\n  }\r\n\r\n  private _columns: IColumn[] = [\r\n    {\r\n      key: 'Type',\r\n      name: \"Type\",\r\n      fieldName: 'Type',\r\n      minWidth: 50,\r\n      maxWidth: 100,\r\n      isResizable: true,\r\n      isMultiline: false,\r\n      onRender: (item: IExternalObject, _index?: number, _column?: IColumn) => {\r\n        return <span>{item.ReferenceType}</span>;\r\n      }\r\n    },\r\n    {\r\n      key: 'Value',\r\n      name: this.props.semtalk.getResStrListener(\"STRNAME\"),\r\n      fieldName: 'Value',\r\n      minWidth: 100,\r\n      // maxWidth: 180,\r\n      isResizable: true,\r\n      isMultiline: false,\r\n      onRender: (item: IExternalObject, _index?: number, _column?: IColumn) => {\r\n        return <span>{item.ObjectCaption}</span>;\r\n      }\r\n    }\r\n  ];\r\n\r\n  private selectitem = (): void => {\r\n    let sel = this._sel.getSelection();\r\n    if (sel.length > 0) {\r\n      let item = this._sel.getSelection()[0] as IExternalObject;\r\n      if (item !== null) {\r\n        // this._selection = item.Object;\r\n        this.additem(item.ObjectName);\r\n        this.setState({ objectname: item.ObjectCaption });\r\n      }\r\n    }\r\n  }\r\n  private additem = (oname: string): void => {\r\n    if (oname.length === 0) return;\r\n    const bas = this.props.semtalk.base;\r\n    const cb = this.props.callback;\r\n    // if (this._selection !== null && this._selection !== undefined) {\r\n    //   cb(this.props.semtalk, this.props.semtalk.currentShape(), [this._selection], false);\r\n    // } else {\r\n    // let oname = this.state.objectname;\r\n    // let cap = this.state.objectname;\r\n    //  let des: string | null=null;\r\n    let externalitem: IExternalObject | null = null;\r\n    // for (let sel1 of this._sel.getSelection()) {\r\n    //   externalitem = sel1 as ISelectTab;\r\n    //   oname = externalitem.ObjectName;\r\n    //   //  cap = item.ObjectCaption;\r\n    //   //   des=t.ObjectDescription;\r\n    // }\r\n    let e = this.state.items.find((x: IExternalObject) => x.ObjectName === oname);\r\n    if (e) externalitem = e;\r\n    if (oname.length > 0) {\r\n      const sysc = this._sysclass;\r\n      let shp = this.props.semtalk.currentShape();\r\n      if (shp && (shp[\"edge\"] === true || bas.IsAssociation(this.object))) {\r\n        let rt = bas.FindAssociationType(oname);\r\n        if (!rt) {\r\n          rt = bas.MakeAssociationType(SemTalkRelation.SemTalkProperty, oname);\r\n        }\r\n        cb(this.props.semtalk, shp, [rt], false);\r\n        return;\r\n      }\r\n      if (sysc !== undefined && sysc !== null) {\r\n        if (!this.props.isclasses) {\r\n          let obj = bas.FindInstance(oname);\r\n          if (obj !== null) {\r\n            if (obj.IsInstance(sysc)) {\r\n              if (shp) {\r\n                cb(this.props.semtalk, shp, [obj], false);\r\n              }\r\n            } else {\r\n              alert(\"You cannot select:\" + oname);\r\n            }\r\n          } else {\r\n            if (this.object) {\r\n              if (this.object.ObjectName === sysc.ObjectName + \".\" + this.object.ID) {\r\n                obj = (this.object as ISemTalkInstance);\r\n                obj.RenameObject(oname);\r\n              } else {\r\n                obj = sysc.MakeInstance(oname);\r\n              }\r\n            } else {\r\n              obj = sysc.MakeInstance(oname);\r\n            }\r\n            if (obj) {\r\n              if (externalitem) {\r\n                this.selectExtern(externalitem, obj, sysc);\r\n              } else {\r\n                cb(this.props.semtalk, shp, [obj], false);\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          oname = sysc.ObjectName.substr(0, 2) + \"#\" + oname;\r\n          let obj = bas.FindClass(oname);\r\n          if (obj !== null) {\r\n            if (obj.IsParent(sysc)) {\r\n              if (externalitem) {\r\n                this.selectExtern(externalitem, obj, sysc);\r\n              } else {\r\n                cb(this.props.semtalk, shp, [obj], false);\r\n              }\r\n            } else {\r\n              alert(\"You cannot select:\" + oname);\r\n            }\r\n          } else {\r\n            if (this.state.isbusinessclasses) {\r\n              let bc = bas.MakeBusinessClass(oname);\r\n              if (bc !== null) {\r\n                if (!bc.IsParent(sysc)) {\r\n                  bc.AddSubclassOf(sysc);\r\n                }\r\n                obj = bc;\r\n              } else {\r\n                obj = sysc.MakeSubClass(oname);\r\n              }\r\n            } else {\r\n              obj = sysc.MakeSubClass(oname);\r\n            }\r\n            if (obj) {\r\n              if (externalitem) {\r\n                this.selectExtern(externalitem, obj, sysc);\r\n              } else {\r\n                cb(this.props.semtalk, this.props.semtalk.currentShape(), [obj], false);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // }\r\n  }\r\n  private _onItemInvoked = (item: IExternalObject): void => {\r\n    this.additemX(item);\r\n\r\n    // if (item.Object !== null) {\r\n    //   this.state.callback(this.props.semtalk, this.props.semtalk.shape, item.Object, this.state.isexpand);\r\n    // }\r\n    this.selectitem();\r\n  }\r\n\r\n  private copyExtern = async (item: IExternalObject, obj: ISemTalkObject, sysc: ISemTalkSystemClass) => {\r\n    if (item.ObjectDescription) obj.Comment = item.ObjectDescription;\r\n    if (item.EditLink) obj.EditLink = item.EditLink;\r\n    let fnd = false;\r\n    if (item.MGItem) {\r\n      let lib = this.props.semtalk.getSPListName(sysc.ObjectName);\r\n      const mgitem: any = await mgGetItem(this.props.mongo, this.props.mongo.repository, lib, item.MGItem[\"name\"]);\r\n      if (mgitem[\"Comment\"]) {\r\n        obj.Comment = mgitem[\"Comment\"];\r\n      }\r\n      if (mgitem[\"Class\"] && obj.ObjectBase.IsInstance(obj)) {\r\n        let cname = mgitem[\"Class\"];\r\n        let cla = obj.ObjectBase.FindClass(cname);\r\n        if (!cla) {\r\n          cla = sysc.MakeSubClass(cname);\r\n        }\r\n        if (cla && cla.IsParent(sysc)) {\r\n          (obj as ISemTalkInstance).SetClass(cla);\r\n        }\r\n      }\r\n      for (const l of this._languages) {\r\n        if (mgitem[l]) {\r\n          if (l === this.props.semtalk.base.CurrentNsp) fnd = true;\r\n          let ls = GetLanguage(l);\r\n          if (ls) obj.MakeSynonym(mgitem[l], ls);\r\n        }\r\n      }\r\n      for (const a of sysc.AllAttributes().map(x => x.ClassOf().ObjectName)) {\r\n        if (mgitem[a]) {\r\n          obj.SetValue(a, mgitem[a]);\r\n        }\r\n      }\r\n      if (obj.ObjectBase.IsBusinessClass(obj)) {\r\n        let oobj: ISemTalkBusinessClass = obj as ISemTalkBusinessClass;\r\n        if (\"Attribute\" in mgitem) {\r\n          let l: string[] = [];\r\n          const v = mgitem[\"Attribute\"];\r\n          if (Array.isArray(v)) {\r\n            l = v;\r\n          } else {\r\n            l = [v];\r\n          }\r\n          for (let attr of l) {\r\n            oobj.MakeAttribute(attr, null);\r\n          }\r\n        }\r\n        if (\"States\" in mgitem) {\r\n          let l: string[] = [];\r\n          const v = mgitem[\"States\"];\r\n          if (Array.isArray(v)) {\r\n            l = v;\r\n          } else {\r\n            l = [v];\r\n          }\r\n          for (let sta of l) {\r\n            oobj.MakeState(sta);\r\n          }\r\n        }\r\n        if (\"Method\" in mgitem) {\r\n          let l: string[] = [];\r\n          const v = mgitem[\"Method\"];\r\n          if (Array.isArray(v)) {\r\n            l = v;\r\n          } else {\r\n            l = [v];\r\n          }\r\n          for (let meth of l) {\r\n            oobj.MakeMethod(meth);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (item.SPItem) {\r\n      const spitem: any = item.SPItem;\r\n      if (spitem[\"Comment\"]) {\r\n        obj.Comment = spitem[\"Comment\"];\r\n      }\r\n      if (spitem[\"Class\"] && obj.ObjectBase.IsInstance(obj)) {\r\n        let cname = spitem[\"Class\"];\r\n        let cla = obj.ObjectBase.FindClass(cname);\r\n        if (!cla) {\r\n          cla = sysc.MakeSubClass(cname);\r\n        }\r\n        if (cla && cla.IsParent(sysc)) {\r\n          (obj as ISemTalkInstance).SetClass(cla);\r\n        }\r\n      }\r\n      for (const l of this._languages) {\r\n        if (spitem[l]) {\r\n          if (l === this.props.semtalk.base.CurrentNsp) fnd = true;\r\n          let ls = GetLanguage(l);\r\n          if (ls) obj.MakeSynonym(spitem[l], ls);\r\n        }\r\n      }\r\n      for (const a of sysc.AllAttributes().map(x => x.ClassOf().ObjectName)) {\r\n        if (spitem[a]) {\r\n          obj.SetValue(a, spitem[a]);\r\n        }\r\n      }\r\n    }\r\n    if (!fnd) {\r\n      obj.MakeSynonym(item.ObjectCaption, this.props.semtalk.base.CurrentNsp);\r\n    }\r\n  }\r\n  private selectExtern = (item: IExternalObject, obj: ISemTalkObject, sysc: ISemTalkSystemClass): void => {\r\n    this.copyExtern(item, obj, sysc);\r\n    const cb = this.props.callback;\r\n    cb(this.props.semtalk, this.props.semtalk.currentShape(), [obj], this.state.isexpand);\r\n  }\r\n  private additemX = (item: IExternalObject): void => {\r\n    const cb = this.props.callback;\r\n    if (item.Object !== null) {\r\n      cb(this.props.semtalk, this.props.semtalk.currentShape(), [item.Object], this.state.isexpand);\r\n    } else {\r\n      const bas = this.props.semtalk.base;\r\n      let oname = item.ObjectName;\r\n      // let oname = item.ObjectCaption;\r\n      if (oname.length > 0) {\r\n        const sysc = this._sysclass;\r\n        if (sysc !== undefined && sysc !== null) {\r\n          if (!this.props.isclasses) {\r\n            let obj = bas.FindInstance(oname);\r\n            if (obj !== null) {\r\n              if (obj.IsInstance(sysc)) {\r\n                this.selectExtern(item, obj, sysc);\r\n              } else {\r\n                alert(\"You cannot select:\" + oname);\r\n              }\r\n            } else {\r\n              if (this.object) {\r\n                if (this.object.ObjectName === sysc.ObjectName + \".\" + this.object.ID) {\r\n                  obj = (this.object as ISemTalkInstance);\r\n                  obj.RenameObject(oname);\r\n                } else {\r\n                  obj = sysc.MakeInstance(oname);\r\n                }\r\n              } else {\r\n                obj = sysc.MakeInstance(oname);\r\n              }\r\n              this.selectExtern(item, obj, sysc);\r\n            }\r\n          } else {\r\n            oname = sysc.ObjectName.substr(0, 2) + \"#\" + oname;\r\n            let obj = bas.FindClass(oname);\r\n            if (obj !== null) {\r\n              if (obj.IsParent(sysc)) {\r\n                this.selectExtern(item, obj, sysc);\r\n              } else {\r\n                alert(\"You cannot select:\" + oname);\r\n              }\r\n            } else {\r\n              if (this.state.isbusinessclasses) {\r\n                let bc = bas.MakeBusinessClass(oname);\r\n                if (bc !== null) {\r\n                  if (!bc.IsParent(sysc)) {\r\n                    bc.AddSubclassOf(sysc);\r\n                  }\r\n                  obj = bc;\r\n                } else {\r\n                  obj = sysc.MakeSubClass(oname);\r\n                }\r\n              } else {\r\n                obj = sysc.MakeSubClass(oname);\r\n              }\r\n              this.selectExtern(item, obj, sysc);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public render(): React.ReactElement<ISemTalkSelectProps> {\r\n    let selmode = SelectionMode.single;\r\n    let vismode = CheckboxVisibility.hidden;\r\n\r\n    let r: React.ReactElement<ISemTalkSelectProps>;\r\n    let lbl = \"\";\r\n    if (this._sysclass !== undefined && this._sysclass !== null) {\r\n      lbl = this._sysclass.ID2NameNsp();\r\n    } else {\r\n      this.props.semtalk.getResStrListener(\"STRNAME\");\r\n    }\r\n    r = <Fabric>\r\n      <ComboBox text={this.state.objectname} label={lbl}\r\n        options={this.objects} required={true}\r\n        allowFreeform\r\n        autoComplete={this.state.autoComplete ? 'on' : 'off'}\r\n        //  autoComplete=\"on\"\r\n        onChange={(_event: React.FormEvent<IComboBox>, option?: IComboBoxOption, _index?: number, value?: string) => {\r\n          if (option !== undefined) {\r\n            this.additem(String(option.key));\r\n            this.setState({\r\n              // newobject: option.text,\r\n              objectname: option.text,\r\n              items: this._onFilter(option.text)\r\n            });\r\n          } else {\r\n            if (value !== undefined) {\r\n              this.additem(value);\r\n              this.setState({\r\n                // newobject: value,\r\n                objectname: value,\r\n                items: this._onFilter(value)\r\n              });\r\n            } else {\r\n              this.setState({ items: this._onFilter(value) });\r\n            }\r\n          }\r\n        }}>\r\n      </ComboBox>\r\n\r\n      <DetailsList\r\n        items={this.state.items}\r\n        compact={false}\r\n        columns={this._columns}\r\n        selectionMode={selmode}\r\n        layoutMode={DetailsListLayoutMode.justified}\r\n        selection={this._sel}\r\n        onItemInvoked={this._onItemInvoked}\r\n        checkboxVisibility={vismode}\r\n        isHeaderVisible={true}\r\n      />\r\n    </Fabric>;\r\n    // console.debug(\"r: \", r.toString(), r);\r\n    return r;\r\n  }\r\n  private _onFilter = (text: any): IExternalObject[] => {\r\n    let fitems = this._allitems;\r\n    if (text) {\r\n      // const tl = text.toLowerCase();\r\n      fitems = this._allitems.filter((i: IExternalObject) => {\r\n        // return (i.ObjectCaption.toLowerCase().indexOf(tl) > -1);\r\n        return (i.ObjectCaption.startsWith(text));\r\n      });\r\n    }\r\n    return fitems;\r\n  }\r\n}","import * as React from 'react';\r\nimport styles from './SemTalkGenericAssociations.module.scss';\r\nimport {\r\n  Selection, ISelection, IColumn, DetailsList, DetailsListLayoutMode, TextField,\r\n  CheckboxVisibility, IDropdownOption, CommandBar, DefaultButton, ComboBox, IComboBoxOption, IComboBox\r\n} from 'office-ui-fabric-react';\r\nimport { PanelType, Panel } from 'office-ui-fabric-react/lib/Panel';\r\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\r\n\r\nimport {\r\n  IObjectBase, ISemTalkObject, ISemTalkAssociation, SemTalkType, ISemTalkGenericTabSpec, ISemTalkSystemClass\r\n} from \"../../application/tbase/Interface\";\r\nimport { getObject, addCallBack, removeCallBack, gotoObject } from '../../application/semtalklistener/stglobal';\r\n//import { any } from '@microsoft/sp-webpart-base';\r\n//import { SetContext } from '../../semtalkportal/restinterface';\r\nimport { Guid } from \"guid-typescript\";\r\n// import * as strings from 'SemTalkStrings';\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { SemTalkSelect } from '../stselect/SemTalkSelect';\r\n//import { MSGraphClient } from '@microsoft/sp-http';\r\nimport { IMongoOption } from '../../SemTalkMongoServer';\r\nimport { Process_ElementName } from '../../application/semtalklistener/processInterface';\r\n\r\n\r\nexport interface ISemTalkGenericAssociationsTabProps {\r\n  semtalk: IVisioRDFS;\r\n  graphClient?: any;\r\n  site: string;\r\n  context?: any;\r\n  goodlist?: string[];\r\n  badlist?: string[];\r\n  tabspec: ISemTalkGenericTabSpec;\r\n  mongo: IMongoOption;\r\n}\r\nexport interface ISemTalkGenericAssociationsTabState {\r\n  objectid: number;\r\n  base: IObjectBase;\r\n  newitem: boolean;\r\n  sel: ISelection;\r\n  items: IGenericAssociationTab[];\r\n  others: IDropdownOption[];\r\n  newitemtitle: string;\r\n  newitemclass: string | null;\r\n  hideSelectDialog: boolean;\r\n  targetclass: ISemTalkSystemClass | null;\r\n  allowfreeform: boolean;\r\n}\r\ninterface IGenericAssociationTab {\r\n  ID: number;\r\n  Object: ISemTalkObject;\r\n  PropName: string;\r\n  PropType: SemTalkType;\r\n  Association: ISemTalkAssociation;\r\n  PropValue: string | undefined;\r\n  PropValueName: ISemTalkObject | null;\r\n  PropValueCaption: string | null;\r\n  _label: string;\r\n  _value: string;\r\n  _isinv: boolean;\r\n}\r\ninterface IGenericAssocDropDownOption extends IDropdownOption {\r\n}\r\nexport class SemTalkGenericAssociationsTab extends React.Component<ISemTalkGenericAssociationsTabProps, ISemTalkGenericAssociationsTabState> {\r\n  private object: ISemTalkObject | null = null;\r\n  public callback: Guid;\r\n\r\n  constructor(props: ISemTalkGenericAssociationsTabProps) {\r\n    super(props);\r\n    this.callback = Guid.create();\r\n    console.debug(\"showGenericAssociationsTab\");\r\n    this.state = {\r\n      objectid: -1,\r\n      items: [],\r\n      sel: new Selection({}),\r\n      others: [],\r\n      newitem: false,\r\n      base: this.props.semtalk.base,\r\n      newitemtitle: \"\",\r\n      newitemclass: null,\r\n      hideSelectDialog: true,\r\n      targetclass: null,\r\n      allowfreeform: false\r\n    };\r\n  }\r\n  private resetState = () => {\r\n    this.setState({\r\n      objectid: -1,\r\n      items: [],\r\n      others: [],\r\n      newitem: false,\r\n      base: this.props.semtalk.base,\r\n      newitemtitle: \"\",\r\n      newitemclass: null,\r\n      targetclass: null,\r\n      allowfreeform: false\r\n    });\r\n  }\r\n  private mounted: boolean = false;\r\n  public async componentDidMount() {\r\n    this.mounted = true;\r\n    let oid: number = getObject();\r\n    if (oid > 0) {\r\n      this.loadObject(oid);\r\n    }\r\n    this.setState({ newitem: false });\r\n    addCallBack(this);\r\n  }\r\n  public componentWillUnmount() {\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n    this.object = null;\r\n  }\r\n\r\n  private loadObject = (id: number) => {\r\n    this.object = this.state.base.FindObjectByID(id);\r\n    let items: IGenericAssociationTab[] = [];\r\n    let others: IGenericAssocDropDownOption[] = [];\r\n    let toobj: ISemTalkSystemClass | null = null;\r\n    let allowfreeform: boolean = false;\r\n    let relcl = this.state.base.FindAssociationType(this.props.tabspec.Relname);\r\n    if (this.object !== null && relcl !== null) {\r\n      allowfreeform = relcl.AllowFreeForm;\r\n      items = this.getItems(this.object);\r\n      let toobjname = this.props.tabspec.Toobj;\r\n      let cl = this.state.base.FindClass(toobjname);\r\n      if (cl !== null) {\r\n        toobj = cl.SystemClass();\r\n        if (toobj !== null) {\r\n          if (!this.props.tabspec.IsInst) {\r\n            for (const oth of toobj.AllSubClasses()) {\r\n              others.push({ key: oth.ObjectName, text: oth.ObjectCaption });\r\n            }\r\n          } else {\r\n            for (const oth of toobj.AllInstances()) {\r\n              others.push({ key: oth.ObjectName, text: oth.ObjectCaption });\r\n            }\r\n          }\r\n        } else {\r\n\r\n        }\r\n      }\r\n    }\r\n    if (this.object !== null) {\r\n      this.setState({\r\n        objectid: id, items: items,\r\n        others: others,\r\n        targetclass: toobj,\r\n        allowfreeform: allowfreeform\r\n      });\r\n    }\r\n  }\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoObject:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  private getItems(obj: ISemTalkObject): IGenericAssociationTab[] {\r\n    let gl: string[] | undefined = this.props.goodlist;\r\n    if (gl === undefined) gl = [];\r\n    let bl: string[] = [];\r\n    if (this.props.badlist !== undefined) bl = this.props.badlist;\r\n\r\n    let items: IGenericAssociationTab[] = [];\r\n    if (!this.props.tabspec.IsInv)\r\n      for (let assoc of obj.Links(this.props.tabspec.Relname)) {\r\n        let item: IGenericAssociationTab = {\r\n          ID: items.length,\r\n          PropName: assoc.ClassOf().ObjectName,\r\n          Object: obj,\r\n          Association: assoc,\r\n          PropType: SemTalkType.SemTalkAssociation,\r\n          PropValue: assoc.ToObject.ObjectName,\r\n          PropValueName: assoc.ToObject,\r\n          PropValueCaption: assoc.ToObject.ID2NameNsp(),\r\n          _label: assoc.ClassOf().ID2NameNsp(),\r\n          _value: assoc.ToObject.ID2NameNsp(),\r\n          _isinv: false\r\n        };\r\n        if (gl !== undefined && gl.length > 0) {\r\n          if (gl.indexOf(item.PropName) > -1) {\r\n            items.push(item);\r\n          }\r\n        } else {\r\n          if (bl !== undefined && bl.length > 0) {\r\n            if (bl.indexOf(item.PropName) < 0) {\r\n              items.push(item);\r\n            }\r\n          } else {\r\n            items.push(item);\r\n          }\r\n        }\r\n      }\r\n    if (this.props.tabspec.IsInv)\r\n      for (let assoc of obj.InvLinks(this.props.tabspec.Relname)) {\r\n        let item: IGenericAssociationTab = {\r\n          ID: items.length,\r\n          PropName: this.props.tabspec.Relname,\r\n          Object: obj,\r\n          Association: assoc,\r\n          PropType: SemTalkType.SemTalkAssociation,\r\n          PropValue: assoc.FromObject.ObjectName,\r\n          PropValueName: assoc.FromObject,\r\n          PropValueCaption: assoc.FromObject.ID2NameNsp(),\r\n          _label: assoc.ClassOf().ID2NameNsp(),\r\n          _value: assoc.FromObject.ID2NameNsp(),\r\n          _isinv: true\r\n        };\r\n        if (gl !== undefined && gl.length > 0) {\r\n          if (gl.indexOf(item.PropName) > -1) {\r\n            items.push(item);\r\n          }\r\n        } else {\r\n          if (bl !== undefined && bl.length > 0) {\r\n            if (bl.indexOf(item.PropName) < 0) {\r\n              items.push(item);\r\n            }\r\n          } else {\r\n            items.push(item);\r\n          }\r\n        }\r\n      }\r\n    return items;\r\n  }\r\n\r\n  private _columns: IColumn[] = [\r\n    {\r\n      key: 'Value',\r\n      name: \"Value\",\r\n      fieldName: 'Value',\r\n      minWidth: 200,\r\n      // maxWidth: 180,\r\n      // isResizable: true,\r\n      // isMultiline: true,\r\n      onRender: (item: IGenericAssociationTab, _index?: number, _column?: IColumn) => {\r\n        let r: any;\r\n        r = <TextField value={item._value} readOnly={true} label={item._label}></TextField>;\r\n        return r;\r\n        //    return item._value;\r\n      }\r\n    }\r\n  ];\r\n\r\n  private commands = [\r\n    {\r\n      key: 'Add',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDNE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Add'\r\n      },\r\n      onClick: (): void => {\r\n        this.setState({\r\n          newitem: true,\r\n        });\r\n      }\r\n    },\r\n    {\r\n      key: 'selectObject',\r\n      text: this.props.semtalk.getResStrListener(\"STRSELECTSL\"),\r\n      iconProps: { iconName: 'Filter' },\r\n      onClick: (): void => {\r\n        this.selectitem();\r\n      },\r\n    },\r\n    {\r\n      key: 'Delete',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Delete'\r\n      },\r\n      onClick: (): void => {\r\n        this.deleteItem();\r\n      }\r\n    },\r\n    {\r\n      key: 'Browse',\r\n      name: this.props.semtalk.getResStrListener(\"STRBROWSE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Diamond'\r\n      },\r\n      onClick: (): void => {\r\n        this.browseItem();\r\n      }\r\n    }];\r\n\r\n  private browseItem = (): void => {\r\n    if (this.state.newitem) return;\r\n    let item = this.state.sel.getSelection()[0] as IGenericAssociationTab;\r\n    if (item !== null) {\r\n      if (this.object !== null) {\r\n        let objectid = 0;\r\n        if (item._isinv) {\r\n          objectid = item.Association.FromObject.ID;\r\n        } else {\r\n          objectid = item.Association.ToObject.ID;\r\n        }\r\n        gotoObject(objectid);\r\n      }\r\n    }\r\n  }\r\n  private deleteItem = (): void => {\r\n    if (this.state.newitem) return;\r\n    let item = this.state.sel.getSelection()[0] as IGenericAssociationTab;\r\n    if (item !== null) {\r\n      if (this.object !== null) {\r\n        if (item.Association !== undefined)\r\n          item.Association.Delete();\r\n        this.setState({ newitem: false, items: this.getItems(this.object) });\r\n      }\r\n    }\r\n  }\r\n\r\n  private cancelnew = (): void => {\r\n    this.setState({ newitem: false });\r\n  }\r\n  private addnewitem = (): void => {\r\n    let t = this.state.newitemtitle;\r\n    if (this.state.newitemtitle.length > 0) {\r\n      if (this.object !== null) {\r\n        const bas = this.state.base;\r\n        let toobjname = this.props.tabspec.Toobj;\r\n        let toobj = bas.FindClass(toobjname);\r\n        let oth: ISemTalkObject | null = null;\r\n        if (toobj !== null) {\r\n          if (!this.props.tabspec.IsInst) {\r\n            t = toobjname.substr(0, 2) + \"#\" + t;\r\n            oth = bas.FindClass(t);\r\n            if (oth !== null) {\r\n              if (toobjname === bas.GetModelAttribute(Process_ElementName.SLInformation)) {\r\n                let bc = bas.MakeBusinessClass(t);\r\n                if (bc !== null) {\r\n                  if (!bc.IsParent(toobj)) {\r\n                    bc.AddSubclassOf(toobj);\r\n                  }\r\n                  oth = bc;\r\n                } else {\r\n                  oth = toobj.MakeSubClass(t);\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            oth = bas.FindInstance(t);\r\n            if (oth === null) {\r\n              oth = toobj.MakeInstance(t);\r\n            }\r\n          }\r\n          if (oth) {\r\n            if (!this.props.tabspec.IsInv) {\r\n              this.object.MakeAssociation(this.props.tabspec.Relname, oth as ISemTalkObject);\r\n            } else {\r\n              (oth as ISemTalkObject).MakeAssociation(this.props.tabspec.Relname, this.object);\r\n            }\r\n          }\r\n          this.setState({\r\n            newitem: false,\r\n            newitemtitle: \"\",\r\n            items: this.getItems(this.object)\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          newitem: false,\r\n          newitemtitle: \"\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  private _closeSelectDialog = (): void => {\r\n    this.setState({ hideSelectDialog: true });\r\n  }\r\n  private _SelectObject = (_semtalk: any, _shape: any, objs: ISemTalkObject[], _expand: boolean): void => {\r\n    if (this.object !== null && objs.length > 0) {\r\n      let obj = objs[0];\r\n      if (!this.props.tabspec.IsInv) {\r\n        this.object.MakeAssociation(this.props.tabspec.Relname, obj);\r\n      } else {\r\n        obj.MakeAssociation(this.props.tabspec.Relname, this.object);\r\n      }\r\n      this.setState({\r\n        items: this.getItems(this.object),\r\n        hideSelectDialog: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        hideSelectDialog: true\r\n      });\r\n    }\r\n  }\r\n  private selectitem = () => {\r\n    this.setState({ hideSelectDialog: false });\r\n  }\r\n  public render(): React.ReactElement<ISemTalkGenericAssociationsTabProps> {\r\n    // let val: any[] = this.getItems();\r\n    let r: React.ReactElement<ISemTalkGenericAssociationsTabProps>;\r\n    // let val: any[] = this.state.items;\r\n    // this._selection = new Selection({\r\n    // });\r\n    r = <Fabric>\r\n      <div className={styles.semTalkGenericAssociations}><div className={styles.pivottab}></div></div>\r\n      <CommandBar\r\n        items={this.commands}\r\n      ></CommandBar>\r\n      <div className={styles.semTalkGenericAssociations}><div className={styles.pivottab}></div></div>\r\n      {this.state.newitem &&\r\n        <div>\r\n          <ComboBox text={this.state.newitemtitle} label={this.props.semtalk.getResStrListener(\"STROBJSING\")}\r\n            options={this.state.others}\r\n            required={true}\r\n            allowFreeform={this.state.allowfreeform}\r\n            //  autoComplete=\"on\"\r\n            onChange={(_event: React.FormEvent<IComboBox>, option?: IComboBoxOption, _index?: number, value?: string) => {\r\n              if (option !== undefined) {\r\n                this.setState({ newitemclass: option.key as string, newitemtitle: option.text });\r\n              } else {\r\n                if (value !== undefined)\r\n                  this.setState({ newitemtitle: value });\r\n              }\r\n            }}></ComboBox>\r\n          <div className={styles.semTalkGenericAssociations}><div className={styles.pivottab}></div></div>\r\n          <DefaultButton text={this.props.semtalk.getResStrListener(\"STRDLGCMDOK\")} onClick={this.addnewitem} />\r\n          {/* <DefaultButton text={this.props.semtalk.getResStrListener(\"STRSELECTSL\")} onClick={this.selectitem} /> */}\r\n          <DefaultButton text={this.props.semtalk.getResStrListener(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\r\n        </div>\r\n      }\r\n      {!this.state.newitem &&\r\n        <DetailsList\r\n          items={this.state.items}\r\n          compact={true}\r\n          columns={this._columns}\r\n          selectionMode={SelectionMode.single}\r\n          layoutMode={DetailsListLayoutMode.justified}\r\n          selection={this.state.sel}\r\n          checkboxVisibility={CheckboxVisibility.hidden}\r\n          isHeaderVisible={false}\r\n        />\r\n      }\r\n      {\r\n        this.props.semtalk &&\r\n        <Panel\r\n          isOpen={!this.state.hideSelectDialog}\r\n          onDismiss={this._closeSelectDialog}\r\n          isBlocking={false}\r\n          headerText={this.props.semtalk.getResStrListener(\"STRSELECTSL\")}\r\n          type={PanelType.smallFixedFar}>\r\n          <SemTalkSelect context={this.props.context} semtalk={this.props.semtalk} graphClient={this.props.graphClient}\r\n            callback={this._SelectObject} systemclass={this.state.targetclass}\r\n            site={this.props.site}\r\n            isexport={false} isclasses={!this.props.tabspec.IsInst} focus={0}\r\n            mongo={this.props.mongo} />\r\n        </Panel>\r\n      }\r\n    </Fabric>;\r\n    return r;\r\n  }\r\n}\r\n","import * as React from 'react';\nimport styles from './SemTalkSynonyms.module.scss';\nimport {\n  Selection, ISelection, IColumn, DetailsList, DetailsListLayoutMode,\n  CheckboxVisibility, IDropdownOption, CommandBar, DefaultButton,\n  Dropdown, TextField, Checkbox, Stack\n} from 'office-ui-fabric-react';\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\n\nimport { IObjectBase, ISemTalkObject, ISemTalkSynonym, SemTalkBaseConstant } from \"../../application/tbase/Interface\";\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n// import { WebPartContext } from '@microsoft/sp-webpart-base';\n//import { SetContext } from '../../semtalkportal/restinterface';\nimport { Guid } from \"guid-typescript\";\n///import * as strings from 'SemTalkStrings';\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\nimport { GetLanguage } from '../../application/tbase/langtools';\n\n\nexport interface ISemTalkSynonymTabProps {\n  title?: string;\n  description?: string;\n  semtalk: IVisioRDFS;\n  context?: any;\n}\nexport interface ISemTalkSynonymTabState {\n  objectid: number;\n  base: IObjectBase;\n  newitem: boolean;\n  items: ISynonymTab[];\n  newitemtitle: string;\n  newitemlanguage: string;\n  newiteminv: boolean;\n  newitemsyn: boolean;\n  sel: ISelection;\n  isassoctype: boolean;\n}\ninterface ISynonymTab {\n  ID: number;\n  Object: ISemTalkObject;\n  Synonym: ISemTalkSynonym;\n  PropName: string;\n  PropValue: string;\n  _value: string;\n  isinv: boolean;\n  issyn: boolean;\n}\nexport class SemTalkSynonymsTab extends React.Component<ISemTalkSynonymTabProps, ISemTalkSynonymTabState> {\n  // private _selection: Selection;\n  private object: ISemTalkObject | null = null;\n  private languages: IDropdownOption[] = [];\n  public callback: Guid;\n\n  constructor(props: ISemTalkSynonymTabProps) {\n    super(props);\n    this.callback = Guid.create();\n    console.debug(\"showSynonymTab\");\n    this.state = {\n      objectid: -1,\n      items: [],\n      sel: new Selection({}),\n      newitem: true,\n      base: this.props.semtalk.base,\n      newitemtitle: \"\",\n      newitemlanguage: \"\",\n      newiteminv: false,\n      newitemsyn: false,\n      isassoctype: false\n    };\n  }\n  private resetState = () => {\n    this.setState({\n      objectid: -1,\n      items: [],\n      newitem: false,\n      base: this.props.semtalk.base,\n      newitemtitle: \"\",\n      newitemlanguage: \"\",\n      newiteminv: false,\n      newitemsyn: false,\n      isassoctype: false\n    });\n  }\n  private mounted: boolean = false;\n\n  public async componentDidMount() {\n    this.mounted = true;\n    let oid: number = getObject();\n    const langclass = this.props.semtalk.base.FindClass(SemTalkBaseConstant.SLLanguage);\n    if (langclass) {\n      for (let lang of langclass.Instances()) {\n        this.languages.push({ key: lang.ObjectName, text: lang.ObjectCaption });\n      }\n      /*for (const lang of this.state.base.AllLanguages()) {\n        let text = lang;\n        let lan = this.props.semtalk.base.FindInstance(lang);\n        if (lan != null) {\n          text = lan.ObjectCaption;\n        }\n        this.languages.push({ key: lang, text: text });\n      }*/\n\n      if (oid > 0) {\n        this.loadObject(oid);\n      }\n      this.setState({ newitem: false });\n      addCallBack(this);\n    }\n  }\n  public componentWillUnmount() {\n    this.mounted = false;\n    removeCallBack(this);\n    this.object = null;\n  }\n\n  private loadObject(id: number) {\n    this.object = this.state.base.FindObjectByID(id);\n    let isassoc = this.state.base.IsAssociationType(this.object);\n    if (this.object != null) {\n      this.setState({ objectid: id, isassoctype: isassoc, items: this.getItems(this.object) });\n    }\n  }\n\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    try {\n      md = JSON.parse(e.data);\n      var mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkNavigationEvent.gotoObject:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n      case SemTalkNavigationEvent.gotoNode:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n    }\n  }\n  private getItems(obj: ISemTalkObject): ISynonymTab[] {\n    let items: ISynonymTab[] = [];\n    for (let syn of obj.Synonyms()) {\n      let item: ISynonymTab = {\n        ID: items.length,\n        PropName: syn.Language,\n        Object: obj,\n        Synonym: syn,\n        PropValue: syn.Name,\n        // _label: assoc.ClassOf().ID2NameNsp(),\n        _value: syn.Name,\n        isinv: syn.Inverse,\n        issyn: syn.Synonym\n      };\n      items.push(item);\n    }\n    for (let syn of obj.AltSynonyms()) {\n      let item: ISynonymTab = {\n        ID: items.length,\n        PropName: syn.Language,\n        Object: obj,\n        Synonym: syn,\n        PropValue: syn.Name,\n        // _label: assoc.ClassOf().ID2NameNsp(),\n        _value: syn.Name,\n        isinv: syn.Inverse,\n        issyn: syn.Synonym\n      };\n      items.push(item);\n    }\n    return items;\n  }\n\n  private _columns: IColumn[] = [\n    {\n      key: 'Value',\n      name: this.props.semtalk.getResStrListener(\"STRDLHTMLOUTLIN\"),\n      fieldName: 'Value',\n      minWidth: 200,\n      isMultiline: false,\n      onRender: (item: ISynonymTab, _index?: number, _column?: IColumn) => {\n        //  let cap = item.PropValue;\n        let lbl = item.PropName;\n        if (lbl === null) lbl = \"\";\n        let lan = this.props.semtalk.base.FindInstance(lbl);\n        if (lan != null) {\n          lbl = lan.ObjectCaption;\n        }\n        let r: any;\n        if (lbl.length > 0) {\n          if (item.isinv) {\n            lbl = lbl + \" [inv]\";\n          }\n          if (item.issyn) {\n            lbl = lbl + \" +\";\n          }\n          r = <TextField id=\"inverseTextField\" key={item._value} readOnly={true} defaultValue={item.PropValue} label={lbl}\n            onChange={(_ev, _a) => {\n              // if (a != undefined) {\n              //   item.PropValue = a;\n              //   item.Synonym.Name = a;\n              // }\n            }}></TextField>;\n        } else {\n          r = <TextField id=\"inverseTextField2\" key={item._value} readOnly={true} value={item.PropValue} label={\"Synonym\"}\n            onChange={(_ev, _a) => {\n              // if (a != undefined) {\n              //   item.PropValue = a;\n              //   item.Synonym.Name = a;\n              // }\n            }}></TextField>;\n        }\n        // return <span>{cap}</span>;\n        return r;\n      }\n    }\n  ];\n  private editItem = (): void => {\n    let item = this.state.sel.getSelection()[0] as ISynonymTab;\n    if (item != null) {\n      this.setState({\n        newitem: true,\n        newitemtitle: item.PropValue,\n        newitemlanguage: item.PropName,\n        newiteminv: item.isinv,\n        newitemsyn: item.issyn\n      });\n    }\n  }\n  private addItem = (): void => {\n    this.setState({\n      newitem: true,\n      newitemtitle: \"\",\n      newitemlanguage: \"\",\n      newiteminv: false,\n      newitemsyn: true\n    });\n  }\n  private deleteItem = (): void => {\n    let item = this.state.sel.getSelection()[0] as ISynonymTab;\n    this.state.sel.setItems([], true);\n    if (item != null) {\n      if (this.object != null) {\n        if (item.Synonym !== undefined) {\n          if (!item.Synonym.Synonym) {\n            item.Synonym.Owner.DeleteSynonym(item.PropName);\n          } else {\n            let l = GetLanguage(item.Synonym.Language);\n            if (l) item.Synonym.Owner.DeleteAltSynonym(item.Synonym.Name, l);\n          }\n        }\n        this.setState({ newitem: false, items: this.getItems(this.object) });\n      }\n    }\n  }\n  private commands = [\n    {\n      key: 'Add',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDNE\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Add'\n      },\n      onClick: (): void => {\n        this.addItem();\n      }\n    },\n    {\n      key: 'Edit',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDED\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Edit'\n      },\n      onClick: this.editItem\n    },\n    {\n      key: 'Delete',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Delete'\n      },\n      onClick: (): void => {\n        this.deleteItem();\n      }\n    }];\n\n  private cancelnew = (): void => {\n    this.setState({ newitem: false });\n  }\n\n  private addnewitem = (): void => {\n    let t = this.state.newitemtitle;\n    if (this.state.newitemtitle.length > 0 && this.state.newitemlanguage.length > 0) {\n      if (this.object != null) {\n        if (!this.state.newitemsyn) {\n          if (!this.checkSynExist()) { // if no synonym of this lang was made\n            let l = GetLanguage(this.state.newitemlanguage);\n            if (l) this.object.MakeSynonym(t, l, this.state.newiteminv);\n          } else { // if synonym of this lang already exists\n            let l = GetLanguage(this.state.newitemlanguage);\n            if (l) this.object.MakeAltSynonym(t, l);\n          }\n        } else {\n          let l = GetLanguage(this.state.newitemlanguage);\n          if (l) this.object.MakeAltSynonym(t, l);\n        }\n        // s.Synonym= this.state.newitemsyn;\n        this.setState({\n          newitem: false,\n          newitemtitle: \"\",\n          newitemlanguage: \"\",\n          newiteminv: false,\n          newitemsyn: false,\n          items: this.getItems(this.object)\n        });\n      } else {\n        this.setState({\n          newitem: false,\n          newitemtitle: \"\",\n          newitemlanguage: \"\",\n          newiteminv: false,\n          newitemsyn: false,\n        });\n      }\n    }\n  }\n\n  private checkSynExist = (): boolean => {\n    if (this.object != null) {\n      for (let i = 0; i < this.object.AllSynonyms().length; i++) {\n        const synList = this.object.AllSynonyms();\n        const synLang = synList[i].Language;\n        if (this.state.newitemlanguage === synLang) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n\n\n  public render(): React.ReactElement<ISemTalkSynonymTabProps> {\n    // let val: any[] = this.getItems();\n    let r: React.ReactElement<ISemTalkSynonymTabProps>;\n    // let val: any[] = this.state.items;\n    // this._selection = new Selection({\n    // });\n    const stackTokens = { childrenGap: 10 };\n    r = <Fabric>\n      <div className={styles.semTalkSynonym} id=\"STSynonyms\"><div className={styles.pivottab}></div></div>\n      <CommandBar\n        items={this.commands} id=\"STButtons\"\n      ></CommandBar>\n      <div className={styles.semTalkSynonym} ><div className={styles.pivottab}></div></div>\n      {this.state.newitem &&\n        <div>\n          <Stack tokens={stackTokens} id=\"STsynonymForm\">\n            <TextField id=\"STSynonymName\" value={this.state.newitemtitle} label={this.props.semtalk.getResStrListener(\"STRDLGNAM\")} required onChange={(_ev, a) => {\n              if (a !== undefined)\n                this.setState({ newitemtitle: a });\n            }}></TextField>\n            <Dropdown\n              id=\"STSynonymDropdown\"\n              label={this.props.semtalk.getResStrListener(\"STRDLGTABSYN\")}\n              options={this.languages}\n              required\n              defaultSelectedKey={this.state.newitemlanguage}\n              onChange={(_ev, a) => {\n                if (a !== undefined)\n                  this.setState({ newitemlanguage: a.key as string });\n              }}\n            />\n            {this.state.isassoctype &&\n              <Checkbox\n                id=\"STSynonymCheckbox\" checked={this.state.newiteminv} label={this.props.semtalk.getResStrListener(\"STRDLGRELTYPEINVN\")}\n                onChange={(_ev: any, isChecked: boolean | undefined) => {\n                  if (isChecked !== undefined)\n                    this.setState({ newiteminv: isChecked });\n                }}></Checkbox>\n            }\n            <Checkbox id=\"STSynonymCheckbox2\" checked={this.state.newitemsyn} label={this.props.semtalk.getResStrListener(\"STRDLHTMLOUTSYN\")}\n              onChange={(_ev: any, isChecked: boolean | undefined) => {\n                if (isChecked !== undefined)\n                  this.setState({ newitemsyn: isChecked });\n              }}></Checkbox>\n          </Stack>\n          <div className={styles.semTalkSynonym}><div className={styles.pivottab}></div></div>\n          <DefaultButton id=\"okButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDOK\")} onClick={this.addnewitem} />\n          <DefaultButton id=\"cancelButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\n        </div>\n      }\n      {!this.state.newitem &&\n        <div id=\"spfxSTSynonymList\">\n          <DetailsList\n            items={this.state.items}\n            compact={true}\n            columns={this._columns}\n            selectionMode={SelectionMode.single}\n            layoutMode={DetailsListLayoutMode.justified}\n            selection={this.state.sel}\n            checkboxVisibility={CheckboxVisibility.hidden}\n            isHeaderVisible={false}\n          />\n        </div>\n      }\n    </Fabric>;\n    return r;\n  }\n}","import * as React from 'react';\r\nimport styles from './SemTalkAudit.module.scss';\r\nimport {\r\n  TextField, Stack,\r\n} from 'office-ui-fabric-react'; //IStackStyles\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { IObjectBase, ISemTalkObject } from \"../../application/tbase/Interface\";\r\nimport {  getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\n// import { any } from '@microsoft/sp-webpart-base';\r\nimport { Guid } from \"guid-typescript\";\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\r\n\r\n\r\nexport interface ISemTalkAuditTabProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  context?: any;\r\n}\r\nexport interface ISemTalkAuditTabState {\r\n  objectid: number;\r\n  hasError: boolean;\r\n  base: IObjectBase;\r\n}\r\nexport class SemTalkAuditTab extends React.Component<ISemTalkAuditTabProps, ISemTalkAuditTabState> {\r\n  private object: ISemTalkObject | null = null;\r\n  public callback: Guid;\r\n  private objectname: string = \"\";\r\n  constructor(props: ISemTalkAuditTabProps) {\r\n    super(props);\r\n    console.debug(\"showAuditTab\");\r\n    this.callback = Guid.create();\r\n    this.state = {\r\n      objectid: -1,\r\n      hasError: false,\r\n      base: this.props.semtalk.base,\r\n    };\r\n  }\r\n  private resetState = () => {\r\n    this.setState({\r\n      objectid: -1,\r\n      hasError: false,\r\n      base: this.props.semtalk.base,\r\n    });\r\n  }\r\n  private mounted: boolean = false;\r\n\r\n  public async componentDidMount() {\r\n    this.mounted = true;\r\n    let oid: number = getObject();\r\n    if (oid > 0) {\r\n      this.loadObject(oid);\r\n    }\r\n    addCallBack(this);\r\n   }\r\n  public componentWillUnmount() {\r\n    if (this.object && this.object.ObjectCaption !== this.objectname) {\r\n      this.props.semtalk.RenameObject(this.object, this.objectname, null);\r\n    }\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n    this.object = null;\r\n  }\r\n\r\n  private loadObject(id: number) {\r\n    this.object = this.state.base.FindObjectByID(id);\r\n    if (this.object !== null) {\r\n      this.objectname = this.object.ObjectCaption;\r\n      this.setState({ objectid: id });\r\n    }\r\n  }\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoObject:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n          // this.forceUpdate();\r\n        }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n          // this.forceUpdate();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  public componentDidCatch(_error: any, _info: any) {\r\n    this.setState({ hasError: true });\r\n  }\r\n  public render(): React.ReactElement<ISemTalkAuditTabProps> {\r\n    // let val: any[] = this.getItems();\r\n    let r: React.ReactElement<ISemTalkAuditTabProps>;\r\n    const stackTokens = { childrenGap: 10 };\r\n    r = <Fabric>\r\n      <div className={styles.semTalkAudit} id=\"spfxSTAuditTest\"><div className={styles.pivottab}></div></div>\r\n      {this.object &&\r\n        <Stack tokens={stackTokens}>\r\n          <TextField id=\"spfxSTAuditCreatedBy\" label={this.props.semtalk.getResStrListener(\"STRDLGAUDIT1\")} readOnly value={this.object.CreatedBy} />\r\n          <TextField id=\"spfxSTAuditCreated\" label={this.props.semtalk.getResStrListener(\"STRDLGAUDIT2\")} readOnly value={this.object.Created} />\r\n          <TextField id=\"auditLastChangedBy\" label={this.props.semtalk.getResStrListener(\"STRDLGAUDIT3\")} readOnly value={this.object.ChangedBy} />\r\n          <TextField id=\"auditLastChange\" label={this.props.semtalk.getResStrListener(\"STRDLGAUDIT4\")} readOnly value={this.object.Changed} />\r\n        </Stack>\r\n      }\r\n    </Fabric>;\r\n    return r;\r\n  }\r\n}\r\n","import * as React from 'react';\r\n// import styles from './SemTalkUserTab.module.scss';\r\n// import {\r\n//   TextField, Stack,\r\n// } from 'office-ui-fabric-react'; //IStackStyles\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { IObjectBase, ISemTalkObject } from \"../../application/tbase/Interface\";\r\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\n// import { any } from '@microsoft/sp-webpart-base';\r\nimport { Guid } from \"guid-typescript\";\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\r\n\r\n\r\nexport interface ISemTalkUserTabProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  context?: any;\r\n  tabname: string;\r\n}\r\nexport interface ISemTalkUserTabState {\r\n  objectid: number;\r\n  hasError: boolean;\r\n  base: IObjectBase;\r\n}\r\nexport class SemTalkUserTab extends React.Component<ISemTalkUserTabProps, ISemTalkUserTabState> {\r\n  private object: ISemTalkObject | null = null;\r\n  public callback: Guid;\r\n  private objectname: string = \"\";\r\n  constructor(props: ISemTalkUserTabProps) {\r\n    super(props);\r\n    console.debug(\"showUserTab\");\r\n    this.callback = Guid.create();\r\n    this.state = {\r\n      objectid: -1,\r\n      hasError: false,\r\n      base: this.props.semtalk.base,\r\n    };\r\n  }\r\n  private resetState = () => {\r\n    this.setState({\r\n      objectid: -1,\r\n      hasError: false,\r\n      base: this.props.semtalk.base,\r\n    });\r\n  }\r\n  private mounted: boolean = false;\r\n\r\n  public async componentDidMount() {\r\n    this.mounted = true;\r\n    let oid: number = getObject();\r\n    if (oid > 0) {\r\n      this.loadObject(oid);\r\n    }\r\n    addCallBack(this);\r\n  }\r\n  public componentWillUnmount() {\r\n    if (this.object && this.object.ObjectCaption !== this.objectname) {\r\n      this.props.semtalk.RenameObject(this.object, this.objectname, null);\r\n    }\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n    this.object = null;\r\n  }\r\n\r\n  private loadObject(id: number) {\r\n    this.object = this.state.base.FindObjectByID(id);\r\n    if (this.object !== null) {\r\n      this.objectname = this.object.ObjectCaption;\r\n      this.setState({ objectid: id });\r\n    }\r\n  }\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoObject:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n          // this.forceUpdate();\r\n        }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n          // this.forceUpdate();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  public componentDidCatch(_error: any, _info: any) {\r\n    this.setState({ hasError: true });\r\n  }\r\n  public render(): React.ReactElement<ISemTalkUserTabProps> {\r\n    // let val: any[] = this.getItems();\r\n    if (this.object) {\r\n      return this.props.semtalk.renderUserTab(this.props.tabname, this.object);\r\n    } else {\r\n      return <Fabric></Fabric>;\r\n    }\r\n  }\r\n}\r\n","import * as React from 'react';\n// import styles from './SemTalkDiagram.module.scss';\nimport {\n  Link, Selection, IColumn, DetailsList, DetailsListLayoutMode, CheckboxVisibility\n} from 'office-ui-fabric-react';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\n\n//import { Links, PropertyTable, FindDiagramByID, DiagramTable, NodeTable, NodeNames } from '../../semtalkportal/dbase';\nimport { getDiagram, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n// import { getDiagram } from '../../semtalkportal/stgoto';\n// import { any } from '@microsoft/sp-webpart-base';\n// import { SetContext } from '../../semtalkportal/restinterface';\nimport { Guid } from \"guid-typescript\";\n// import * as strings from 'SemTalkStrings';\n// import { ItemActionStat } from '@microsoft/microsoft-graph-types';\nimport {\n  ISemTalkNode, SemTalkType, ISemTalkDiagram } from \"../../application/tbase/Interface\";\n  import { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\n\nexport interface ISemTalkDiagramTabProps {\n  semtalk: IVisioRDFS;\n  context?: any;\n  // filter: string;\n  // token: string;\n  // service: string;\n  gotonodes?: boolean;\n  goodlist?: string[];\n  badlist?: string[];\n\n}\nexport interface ISemTalkDiagramTabState {\n  objectid: number;\n}\ninterface IPropertyTable {\n  ID: number;\n  Object: ISemTalkDiagram;\n  PropName: string;\n  PropType: SemTalkType;\n  PropValue: string | undefined;\n  PropValueName: ISemTalkDiagram | null;\n  PropValueCaption: string | null;\n  _label: string;\n  _value: string;\n  Node?: ISemTalkNode;\n}\n\nexport class SemTalkDiagramTab extends React.Component<ISemTalkDiagramTabProps, ISemTalkDiagramTabState> {\n  //  private _list: List;\n  private _selection: Selection;\n  private proptable: IPropertyTable[] = [];\n  //private object: ISemTalkDiagram | null = null;\n  public callback: Guid;\n\n  constructor(props: ISemTalkDiagramTabProps) {\n    super(props);\n    console.log(\"showDiagramTab\");\n    this.callback = Guid.create();\n    this.state = {\n      objectid: -1\n    };\n  }\n\n  private _columns: IColumn[] = [\n\n    {\n      key: 'Label',\n      name: 'Label',\n      fieldName: \"Label\",\n      minWidth: 50,\n      // maxWidth: 50,\n      isResizable: true,\n      isMultiline: true,\n      onRender: item => (\n        <div>{item._label}</div>\n      )\n    },\n    {\n      key: 'Value',\n      name: \"Value\",\n      fieldName: 'Value',\n      minWidth: 100,\n      // maxWidth: 180,\n      isResizable: true,\n      isMultiline: true,\n      onRender: item => (\n        <Link key={item} onClick={() => this._clickany(item)}>\n          {item._value}\n        </Link>\n      )\n    }\n  ];\n\n  private mounted: boolean = false;\n  public componentDidMount() {\n    // if (this.props.context && this.props.filter) {\n    //   SetContext(this.props.context, this.props.filter, this.props.token, this.props.service);\n    // }\n    addCallBack(this);\n    this.mounted = true;\n    let pg: number = getDiagram();\n    if (pg > 0) {\n      this.loadDiag(pg);\n    }\n  }\n  public componentWillUnmount() {\n    removeCallBack(this);\n    this.mounted = false;\n  }\n  private loadDiag(_id: number) {\n    // Links(id)\n    //   .then((p: PropertyTable[]) => {\n    //     this.proptable = p;\n    //     return id;\n    //   })\n    //   .then((id2: number) => {\n    //     return FindDiagramByID(id2);\n    //   })\n    //   .then((obj: DiagramTable) => {\n    //     this.object = obj;\n    //     this.setState({ objectid: id });\n    //   });\n  }\n   public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n\n  private eventListener = (e: any) => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    try {\n      md = JSON.parse(e.data);\n      var mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkNavigationEvent.gotoDocument:\n        this.loadDiag(md.diagid);\n        break;\n      case SemTalkNavigationEvent.gotoObject:\n        break;\n      case SemTalkNavigationEvent.gotoNode:\n        if (this.props.gotonodes) {\n          if (this.state.objectid !== md.diagid) {\n            this.loadDiag(md.diagid);\n          }\n        }\n        break;\n    }\n  }\n\n  public async componentDidUpdate(_prevProps: ISemTalkDiagramTabProps) {\n  }\n  public render(): React.ReactElement<ISemTalkDiagramTabProps> {\n    this._selection = new Selection({\n    });\n    let items: any[] = [];\n    // this.proptable.forEach(p => {\n    //     let nam = p.PropName;\n    //     if (nam === \"Refinement\" || nam === \"Verfeinerung\" || nam === \"Go Up\" || nam === \"Aufwärts\") {\n    //         items.push(p);\n    //     }\n    // });\n    let pt: IPropertyTable[] = this.proptable;\n    pt.forEach((item: IPropertyTable) => {\n      let gl: string[] | undefined = this.props.goodlist;\n      let bl: string[] | undefined = this.props.badlist;\n      if (gl !== undefined && gl.length > 0) {\n        if (gl.indexOf(item.PropName) > -1) {\n          items.push(item);\n        }\n      } else {\n        if (bl !== undefined && bl.length > 0) {\n          if (bl.indexOf(item.PropName) < 0) {\n            items.push(item);\n          }\n        } else {\n          items.push(item);\n        }\n      }\n    });\n\n    items = items.map((item: any) => {\n      item._value = this.valueCaption(item);\n      item._label = this.labelCaption(item);\n      item._item = item;\n      return item;\n    });\n    return (\n      <Fabric>\n         <DetailsList\n          items={items}\n          compact={true}\n          columns={this._columns}\n          selectionMode={SelectionMode.single}\n          layoutMode={DetailsListLayoutMode.justified}\n          selection={this._selection}\n          checkboxVisibility={CheckboxVisibility.hidden}\n          isHeaderVisible={false}\n        />\n      </Fabric>\n\n    );\n  }\n\n  private labelCaption(prp: any): string {\n    if (prp.NodePage !== undefined) {\n      return \"Diagram\";\n    } else {\n      return prp.PropName;\n    }\n  }\n  private valueCaption(prp: any): string {\n    if (prp.NodePage !== undefined) {\n      return prp.DiagramName;\n    } else {\n      let val: any = prp.PropValue;\n      let cap = prp.PropValueCaption;\n      if (val === null) {\n        val = \"\";\n      }\n      if (prp.PropValueName !== null && prp.PropValueName !== \"0\") {\n        val = prp.PropValueName;\n      }\n      if (cap === \"\") {\n        cap = val;\n      }\n      if (cap === null) {\n        cap = val;\n      }\n      if (cap.indexOf(\"/\") > 0 && cap.indexOf(\"http\") === 0) {\n        cap = cap.substr(cap.lastIndexOf(\"/\") + 1);\n      }\n      if (cap.indexOf(\"#\") > 0) {\n        cap = cap.substring(cap.indexOf(\"#\") + 1);\n      }\n      return cap;\n    }\n  }\n  private _clickValue(prp: IPropertyTable): any {\n    // let id: number = parseInt(e.target.nodeValue);\n    let val: any = prp.PropValue;\n    // let typ = prp.PropType;\n    // let nam = prp.PropName;\n    if (val === null) {\n      val = \"\";\n    }\n    if (prp.PropValueName !== null) {\n      val = prp.PropValueName;\n    }\n  }\n  private _clickNode(_nd: ISemTalkNode): any {\n  //  if (this.props.navigateproperties) gotoNode(nd.ID, nd.Model.ID, nd.Diagram.ID, nd.ShapeID);\n  }\n  private _clickany(p: any): any {\n    if (p.NodePage !== undefined) {\n      this._clickNode(p);\n    } else {\n      this._clickValue(p);\n    }\n  }\n}\n","/* eslint-disable no-lone-blocks */\r\nimport * as React from 'react';\r\nimport styles from './SemTalkPivot.module.scss';\r\n\r\n// import { escape } from '@microsoft/sp-lodash-subset';\r\nimport {\r\n  Fabric,\r\n  Pivot,\r\n  PivotItem,\r\n  IPivotItemProps, Text, Separator, Image, Stack\r\n} from 'office-ui-fabric-react';\r\n\r\n// import { SemTalkPropertyTable } from '../stproperty/SemTalkProperty';\r\nimport { SemTalkGeneralTab } from '../stgeneral/SemTalkGeneral';\r\nimport { SemTalkInheritanceTab } from '../stinheritance/SemTalkInheritance';\r\nimport { SemTalkInstancesTab } from '../stinstances/SemTalkInstances';\r\n// import { SemTalkDialogTab } from '../stdialog/SemTalkDialog';\r\n// import { SemTalkLabelsTab } from '../stlabels/SemTalkLabels';\r\nimport { SemTalkAttributesTab } from '../stattributes/SemTalkAttributes';\r\nimport { SemTalkGenericAttributesTab } from '../stgenericattributes/SemTalkGenericAttributes';\r\nimport { SemTalkMethodsTab } from '../stmethods/SemTalkMethods';\r\nimport { SemTalkStatesTab } from '../ststates/SemTalkStates';\r\nimport { SemTalkAssociationsTab } from '../stassociations/SemTalkAssociations';\r\nimport { SemTalkGenericAssociationsTab } from '../stgenericassociations/SemTalkGenericAssociations';\r\n// import { SemTalkSystemClassTab } from '../stsystemclass/SemTalkSystemClass';\r\n// import { SemTalkAssociationTypeTab } from '../stassociationtype/SemTalkAssociationType';\r\n// import { SemTalkAttributeTypeTab } from '../stattributetype/SemTalkAttributeType';\r\nimport { SemTalkSynonymsTab } from '../stsynonyms/SemTalkSynonyms';\r\nimport { SemTalkAuditTab } from '../staudit/SemTalkAudit';\r\nimport { SemTalkUserTab } from '../stusertab/SemTalkUserTab';\r\nimport { SemTalkDiagramTab } from '../stdiagram/SemTalkDiagram';\r\n// import { SemTalkDiagramTypeTab } from '../stdiagramtype/SemTalkDiagramType';\r\n\r\n//import { addCallBack, removeCallBack } from '../../semtalkportal/stglobal';\r\n//import { MSGraphClient } from '@microsoft/sp-http';\r\n\r\n\r\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\n//import { any } from '@microsoft/sp-webpart-base';\r\n//import { SetContext } from '../../semtalkportal/restinterface';\r\nimport { Guid } from \"guid-typescript\";\r\n// import * as strings from 'SemTalkStrings';\r\nimport { IVisioRDFS, SemTalkNavigationEvent, SemTalkStencil } from '../../application/semtalklistener/visiordfsinterface';\r\nimport {\r\n  ISemTalkObject, ISemTalkTabSpec, ISemTalkGenericAttributeTabSpec,\r\n  SemTalkType, ISemTalkGenericTabSpec,\r\n  SemTalkBaseConstant\r\n} from '../../application/tbase/Interface';\r\nimport { IMongoOption } from '../../SemTalkMongoServer';\r\n\r\n\r\nexport interface ISemTalkPivotProps {\r\n  semtalk: IVisioRDFS;\r\n  graphClient?: any;\r\n  context?: any;\r\n  site: string;\r\n  library: string;\r\n  templates: string;\r\n  showGeneral?: boolean;\r\n  showAttributes: boolean;\r\n  showInheritance?: boolean;\r\n  showInstances?: boolean;\r\n  // showSystemClass?: boolean;\r\n  // showAssociationType?: boolean;\r\n  // showAttributeType?: boolean;\r\n  // showDiagramType?: boolean;\r\n  showAssocs: boolean;\r\n  showMethods?: boolean;\r\n  showStates?: boolean;\r\n  showSynonyms: boolean;\r\n  showAudit: boolean;\r\n  showProps?: boolean;\r\n  showtype?: boolean;\r\n  shownodes?: boolean;\r\n  showproperties?: boolean;\r\n  showdiagproperties?: boolean;\r\n  shownav?: boolean;\r\n  hidebpmn?: string[];\r\n  hidesimulation?: string[];\r\n  badlist: string[];\r\n  goodlist: string[];\r\n  navigateproperties: boolean;\r\n  stencil: SemTalkStencil;\r\n  spCheckInOut: boolean;\r\n  mongo: IMongoOption;\r\n  showSimulation: boolean;\r\n  showBPMN: boolean;\r\n}\r\nexport interface ISemTalkPivotState {\r\n  redraw: boolean;\r\n  goto_context?: any;\r\n  // semtalktype: SemTalkType;\r\n  isclass: boolean;\r\n  isinstance: boolean;\r\n  isbusinessclass: boolean;\r\n  isdiagram: boolean;\r\n  issystemclass: boolean;\r\n  isassociationtype: boolean;\r\n  isattributetype: boolean;\r\n  ismethodtype: boolean;\r\n  isstatetype: boolean;\r\n  isdiagramtype: boolean;\r\n  isassociation: boolean;\r\n  isactivity: boolean;\r\n  tabspecs: ISemTalkTabSpec[];\r\n  showAttributes: boolean;\r\n  showAssocs: boolean;\r\n  showSynonyms: boolean;\r\n  showAudit: boolean;\r\n  logourl: string;\r\n  showSimulation: boolean;\r\n  showBPMN: boolean;\r\n}\r\nexport class SemTalkPivot extends React.Component<ISemTalkPivotProps, ISemTalkPivotState> {\r\n  public callback: Guid;\r\n  private object: ISemTalkObject | null = null;\r\n  constructor(props: ISemTalkPivotProps) {\r\n    super(props);\r\n    console.log(\"showPivot\");\r\n    this.callback = Guid.create();\r\n    this.state = {\r\n      // goto_context: this.props.goto_context,\r\n      redraw: false,\r\n      //   semtalktype: SemTalkType.SemTalkInstance,\r\n      isclass: false,\r\n      isinstance: false,\r\n      isbusinessclass: false,\r\n      isdiagram: false,\r\n      issystemclass: false,\r\n      isassociationtype: false,\r\n      isattributetype: false,\r\n      ismethodtype: false,\r\n      isstatetype: false,\r\n      isdiagramtype: false,\r\n      isassociation: false,\r\n      isactivity: false,\r\n      tabspecs: [],\r\n      showAttributes: this.props.showAttributes,\r\n      showAssocs: this.props.showAssocs,\r\n      showSynonyms: this.props.showSynonyms,\r\n      showAudit: this.props.showAudit,\r\n      logourl: \"\",\r\n      showSimulation: this.props.showSimulation,\r\n      showBPMN: this.props.showBPMN\r\n    };\r\n  }\r\n  private mounted: boolean = false;\r\n  public componentDidMount() {\r\n    this.mounted = true;\r\n    let oid: number = getObject();\r\n    if (oid > 0) {\r\n      this.setType(oid);\r\n    }\r\n    addCallBack(this);\r\n    this.mounted = true;\r\n  }\r\n  public componentWillUnmount() {\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n  }\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n  private setType(oid: number) {\r\n    const ob = this.props.semtalk.base;\r\n    const obj = ob.FindObjectByID(oid);\r\n    let isbusinessclass = false;\r\n    let isclass = false;\r\n    let issystemclass = false;\r\n    let isassociationtype = false;\r\n    let isattributetype = false;\r\n    let ismethodtype = false;\r\n    let isstatetype = false;\r\n    let isassociation = false;\r\n    let isinstance = false;\r\n    let isdiagramtype = false;\r\n    let isdiagram = false;\r\n    let tabspecs: ISemTalkTabSpec[] = [];\r\n    let showAttributes = this.state.showAttributes;\r\n    let showAssocs = this.state.showAssocs;\r\n    let showSynonyms = this.state.showSynonyms;\r\n    let showAudit = this.state.showAudit;\r\n\r\n    if (obj !== null) { // && this.state.semtalktype !== obj.ObjectType\r\n      const sysc = obj.SystemClass();\r\n      this.object = obj;\r\n      if (ob.IsClass(obj)) {\r\n        isclass = true;\r\n        isbusinessclass = ob.IsBusinessClass(obj);\r\n        if (!isbusinessclass) {\r\n          issystemclass = ob.IsSystemClass(obj);\r\n          if (issystemclass) {\r\n            isassociationtype = ob.IsAssociationType(obj);\r\n            if (!isassociationtype) {\r\n              isdiagramtype = ob.IsDiagramType(obj);\r\n            }\r\n          }\r\n          else {\r\n            isattributetype = ob.IsAttributeType(obj);\r\n            if (!isattributetype) {\r\n              ismethodtype = ob.IsMethodType(obj);\r\n              if (!ismethodtype) {\r\n                isstatetype = ob.IsStateType(obj);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        isinstance = true;\r\n        isassociation = this.props.semtalk.base.IsAssociation(obj);\r\n        if (!isassociation) {\r\n          isdiagram = this.props.semtalk.base.IsDiagram(obj);\r\n        }\r\n        if (sysc) {\r\n          tabspecs = sysc.TabSpecs();\r\n          if (sysc.InstDialog) {\r\n            showAttributes = sysc.InstDialog.CheckAttributes;\r\n            showAssocs = sysc.InstDialog.CheckAssociations;\r\n            showSynonyms = sysc.InstDialog.CheckSynonyms;\r\n            showAudit = sysc.InstDialog.CheckAudit;\r\n          }\r\n        }\r\n      }\r\n      let logourl: string = \"\";\r\n      if (sysc) {\r\n        for (let mst of this.props.semtalk.masters) {\r\n          if (mst[\"name\"] === sysc.ObjectName) {\r\n            logourl = mst[\"logo\"];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      this.setState({\r\n        //  semtalktype: obj.ObjectType,\r\n        isclass: isclass,\r\n        isinstance: isinstance,\r\n        isbusinessclass: isbusinessclass,\r\n        issystemclass: issystemclass,\r\n        isassociationtype: isassociationtype,\r\n        isattributetype: isattributetype,\r\n        ismethodtype: ismethodtype,\r\n        isstatetype: isstatetype,\r\n        isassociation: isassociation,\r\n        isdiagram: isdiagram,\r\n        isdiagramtype: isdiagramtype,\r\n        tabspecs: tabspecs,\r\n        showAttributes: showAttributes,\r\n        showAssocs: showAssocs,\r\n        showSynonyms: showSynonyms,\r\n        showAudit: showAudit,\r\n        logourl: logourl,\r\n\r\n      });\r\n    }\r\n  }\r\n  private eventListener = (e: any) => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoDocument:\r\n        break;\r\n      case SemTalkNavigationEvent.gotoObject: {\r\n        this.setType(md.objectid);\r\n      }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode: {\r\n        this.setType(md.objectid);\r\n      }\r\n        break;\r\n    }\r\n  }\r\n  public render(): React.ReactElement<ISemTalkPivotProps> {\r\n    let pivotArray: React.ReactElement<IPivotItemProps>[] = [];\r\n    // console.debug(\"RenderPivot: \", this.props.context);\r\n\r\n    if (this.props.showGeneral) {\r\n      pivotArray.push(\r\n        <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRDLGTABGEN\")} key=\"General\">\r\n          <SemTalkGeneralTab context={this.props.context}\r\n            semtalk={this.props.semtalk}\r\n            site={this.props.site}\r\n            library={this.props.library}\r\n            templates={this.props.templates}\r\n            stencil={this.props.stencil}\r\n            spCheckInOut={this.props.spCheckInOut}\r\n            mongo={this.props.mongo}\r\n          >\r\n          </SemTalkGeneralTab>\r\n        </PivotItem>\r\n      );\r\n    }\r\n    // if (this.props.showSystemClass && this.state.issystemclass\r\n    //   && !this.state.isassociationtype\r\n    //   && !this.state.isattributetype\r\n    //   && !this.state.isdiagramtype\r\n    //   ) {\r\n    //   pivotArray.push(\r\n    //     <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRBONDETAILS\")} key=\"SystemClass\">\r\n    //       <SemTalkSystemClassTab context={this.props.context}\r\n    //         semtalk={this.props.semtalk}\r\n    //       >\r\n    //       </SemTalkSystemClassTab>\r\n    //     </PivotItem>\r\n    //   );\r\n    // }\r\n    // if (this.props.showAssociationType && this.state.isassociationtype) {\r\n    //   pivotArray.push(\r\n    //     <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRBONDETAILS\")} key=\"AssociationType\">\r\n    //       <SemTalkAssociationTypeTab context={this.props.context}\r\n    //         semtalk={this.props.semtalk}\r\n    //       >\r\n    //       </SemTalkAssociationTypeTab>\r\n    //     </PivotItem>\r\n    //   );\r\n    // }\r\n    // if (this.props.showAttributeType && this.state.isattributetype) {\r\n    //   pivotArray.push(\r\n    //     <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRBONDETAILS\")} key=\"AttributeType\">\r\n    //       <SemTalkAttributeTypeTab context={this.props.context}\r\n    //         semtalk={this.props.semtalk}\r\n    //       >\r\n    //       </SemTalkAttributeTypeTab>\r\n    //     </PivotItem>\r\n    //   );\r\n    // }\r\n    // if (this.props.showDiagramType && this.state.isdiagramtype) {\r\n    //   pivotArray.push(\r\n    //     <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRBONDETAILS\")} key=\"DiagramType\">\r\n    //       <SemTalkDiagramTypeTab context={this.props.context}\r\n    //         semtalk={this.props.semtalk}\r\n    //       >\r\n    //       </SemTalkDiagramTypeTab>\r\n    //     </PivotItem>\r\n    //   );\r\n    //}\r\n    if (this.props.showInheritance && this.state.isclass &&\r\n      !this.state.isattributetype && !this.state.ismethodtype && !this.state.isstatetype) {\r\n\r\n      pivotArray.push(\r\n        <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRDLGINHERITANCE\")} key=\"Inheritance\">\r\n          <SemTalkInheritanceTab\r\n            semtalk={this.props.semtalk}\r\n          >\r\n          </SemTalkInheritanceTab>\r\n        </PivotItem>\r\n      );\r\n    }\r\n    if (this.props.showInstances && this.state.isclass &&\r\n      !this.state.isattributetype && !this.state.ismethodtype && !this.state.isstatetype) {\r\n\r\n      pivotArray.push(\r\n        <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRDLGBROWSEINS\")} key=\"Instances\">\r\n          <SemTalkInstancesTab\r\n            semtalk={this.props.semtalk}\r\n          >\r\n          </SemTalkInstancesTab>\r\n        </PivotItem>\r\n      );\r\n    }\r\n    if (this.props.showdiagproperties && this.state.isdiagram) {\r\n      pivotArray.push(\r\n        <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRDLHTMLOUTDIA\")} key=\"Diagram\">\r\n          <SemTalkDiagramTab context={this.props.context}\r\n            semtalk={this.props.semtalk}>\r\n          </SemTalkDiagramTab>\r\n        </PivotItem>\r\n      );\r\n    }\r\n    if (this.state.showAttributes &&\r\n      !this.state.isattributetype && !this.state.ismethodtype && !this.state.isstatetype) {\r\n      pivotArray.push(\r\n        <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRDLGTABATT\")} key=\"Attributes\">\r\n          <SemTalkAttributesTab context={this.props.context}\r\n            semtalk={this.props.semtalk} showgroups={false}\r\n          >\r\n          </SemTalkAttributesTab>\r\n        </PivotItem>\r\n      );\r\n    }\r\n    if (this.props.showAttributes &&\r\n      this.state.isinstance) {\r\n      for (let ts of this.state.tabspecs) {\r\n        if (ts.Visible) {\r\n          if (ts.ObjectType === SemTalkType.SemTalkGenericAttributeTabSpec) {\r\n            const ats = ts as ISemTalkGenericAttributeTabSpec;\r\n            if (ats.Group === \"BPMN\" && !this.props.showBPMN) {\r\n              continue;\r\n            }\r\n            if (ats.Group === \"Simulation\" && !this.props.showSimulation) {\r\n              continue;\r\n            }\r\n            let txt = ats.Text;\r\n            let obj: ISemTalkObject | null = this.props.semtalk.base.FindSystemClass(txt);\r\n            if (!obj) {\r\n              obj = this.props.semtalk.base.FindInstance(txt);\r\n            }\r\n            if (obj !== null) {\r\n              txt = obj.ID2NameNsp();\r\n            }\r\n            pivotArray.push(\r\n              <PivotItem headerText={txt} key={ats.Text}>\r\n                <SemTalkGenericAttributesTab context={this.props.context}\r\n                  semtalk={this.props.semtalk} tabspec={ats}\r\n                >\r\n                </SemTalkGenericAttributesTab>\r\n              </PivotItem>\r\n            );\r\n          }\r\n          if (ts.ObjectType === SemTalkType.SemTalkGenericTabSpec) {\r\n            const ats = ts as ISemTalkGenericTabSpec;\r\n            let txt = ats.Text;\r\n            let obj: ISemTalkObject | null = this.props.semtalk.base.FindSystemClass(txt);\r\n            if (!obj) {\r\n              obj = this.props.semtalk.base.FindInstance(txt);\r\n            }\r\n            if (obj !== null) {\r\n              txt = obj.ID2NameNsp();\r\n            }\r\n            pivotArray.push(\r\n              <PivotItem headerText={txt} key={ats.Text}>\r\n                <SemTalkGenericAssociationsTab context={this.props.context} graphClient={this.props.graphClient}\r\n                  semtalk={this.props.semtalk} tabspec={ats} site={this.props.site}\r\n                  mongo={this.props.mongo}\r\n                >\r\n                </SemTalkGenericAssociationsTab>\r\n              </PivotItem>\r\n            );\r\n          }\r\n          if (ts.ObjectType === SemTalkType.SemTalkTabSpec) {\r\n            const ats = ts as ISemTalkTabSpec;\r\n            let cap = this.props.semtalk.captionUserTab(ats.Text);\r\n            let tabname: string = ats.Text;\r\n            if (ats.Visible && cap.length > 0) {\r\n              pivotArray.push(\r\n                <PivotItem headerText={cap} key={ats.Text}>\r\n                  <SemTalkUserTab context={this.props.context}\r\n                    tabname={tabname}\r\n                    semtalk={this.props.semtalk}>\r\n                  </SemTalkUserTab>\r\n                </PivotItem>\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // if (this.state.issystemclass) {\r\n    //   pivotArray.push(\r\n    //     <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRDIALOG\")} key=\"Dialog\">\r\n    //       <SemTalkDialogTab context={this.props.context}\r\n    //         semtalk={this.props.semtalk}\r\n    //       >\r\n    //       </SemTalkDialogTab>\r\n    //     </PivotItem>\r\n    //   );\r\n    // }\r\n    // if (this.state.issystemclass) {\r\n    //   pivotArray.push(\r\n    //     <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRDLGATTLABEL\").replace(\":\",\"\")} key=\"Labels\">\r\n    //       <SemTalkLabelsTab context={this.props.context}\r\n    //         semtalk={this.props.semtalk}\r\n    //       >\r\n    //       </SemTalkLabelsTab>\r\n    //     </PivotItem>\r\n    //   );\r\n    // }\r\n    if (this.props.showMethods && this.state.isbusinessclass) {\r\n      pivotArray.push(\r\n        <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRDLGTABMET\")} key=\"Methods\">\r\n          <SemTalkMethodsTab context={this.props.context}\r\n            semtalk={this.props.semtalk}\r\n          >\r\n          </SemTalkMethodsTab>\r\n        </PivotItem>\r\n      );\r\n    }\r\n    if (this.props.showStates && this.state.isbusinessclass) {\r\n      pivotArray.push(\r\n        <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRDLGTABSTA\")} key=\"States\">\r\n          <SemTalkStatesTab context={this.props.context}\r\n            semtalk={this.props.semtalk}\r\n          >\r\n          </SemTalkStatesTab>\r\n        </PivotItem>\r\n      );\r\n    }\r\n    if (this.state.showAssocs &&\r\n      !this.state.isattributetype && !this.state.ismethodtype && !this.state.isstatetype) {\r\n      pivotArray.push(\r\n        <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRDLGTABASS\")} key=\"Assocs\">\r\n          <SemTalkAssociationsTab context={this.props.context}\r\n            semtalk={this.props.semtalk}>\r\n          </SemTalkAssociationsTab>\r\n        </PivotItem>\r\n      );\r\n    }\r\n    if (this.state.showSynonyms) {\r\n      pivotArray.push(\r\n        <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRDLGTABSYN\")} key=\"Synonyms\">\r\n          <SemTalkSynonymsTab context={this.props.context}\r\n            semtalk={this.props.semtalk}\r\n          >\r\n          </SemTalkSynonymsTab>\r\n        </PivotItem>\r\n      );\r\n    }\r\n    if (this.state.showAudit) {\r\n      pivotArray.push(\r\n        <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRDLGTABAUD\")} key=\"Audit\">\r\n          <SemTalkAuditTab context={this.props.context}\r\n            semtalk={this.props.semtalk}>\r\n          </SemTalkAuditTab>\r\n        </PivotItem>\r\n      );\r\n    }\r\n    /*    if (this.props.showProps) {\r\n         pivotArray.push(\r\n           <PivotItem linkText={strings.PropsLabel} key=\"Props\">\r\n               <SemTalkPropertyTable context={this.props.context}\r\n                 goodlist={this.props.goodlist} badlist={this.props.badlist}\r\n                 semtalk={this.props.semtalk}\r\n                 // filter={this.props.filter} token={this.props.token} service={this.props.service}\r\n                 showtype={this.props.showtype}\r\n                 shownodes={this.props.shownodes}\r\n                 showproperties={this.props.showproperties}\r\n                 shownav={this.props.shownav}\r\n                 hidebpmn={this.props.hidebpmn}\r\n                 navigateproperties={this.props.navigateproperties}\r\n                 hidesimulation={this.props.hidesimulation}\r\n                 // hidebpmn={[\"ActivityType\", \"AdHocOrdering\", \"adoc\", \"adhoc\", \"BoundaryType\", \"BpmnScript\", \"Collapsed\", \"Compensation\", \"SubProcessType\", \"Transaction\"]}\r\n                 // hidesimulation={[\"Syncing\", \"Waiting\", \"Amount\"]}\r\n                 //goto_context= {getContext()}\r\n                 //gotonodes={this.props.gotonodes}\r\n                 >\r\n               </SemTalkPropertyTable>\r\n           </PivotItem>\r\n         );\r\n       } */\r\n    let slabel = \"\";\r\n    if (this.object) {\r\n      let sc = this.object.SystemClass();\r\n      if (sc !== null) {\r\n        slabel = sc.ObjectCaption;\r\n        switch (slabel) {\r\n          case SemTalkBaseConstant.SLSubClassOf: {\r\n            slabel = slabel.replace(SemTalkBaseConstant.SLSubClassOf, this.props.semtalk.getResStrListener(\"STRDLGCLSUPERCL\").replace(\":\", \"\"));\r\n            break;\r\n          }\r\n          case SemTalkBaseConstant.SLClass: {\r\n            slabel = this.props.semtalk.getResStr(\"STRClass\");\r\n            break;\r\n          }\r\n          case SemTalkBaseConstant.SLInstance: {\r\n            slabel = this.props.semtalk.getResStr(\"STRINSTANCE\");\r\n            break;\r\n          }\r\n          default: {\r\n            // slabel = this.object.ObjectBase.SemTalkTypeName(this.object.ObjectType);\r\n          }\r\n        }\r\n      } else {\r\n        switch (this.object.ObjectType) {\r\n          case SemTalkType.SemTalkSpecialization: {\r\n            slabel = slabel.replace(SemTalkBaseConstant.SLSubClassOf, this.props.semtalk.getResStrListener(\"STRDLGCLSUPERCL\").replace(\":\", \"\"));\r\n            break;\r\n          }\r\n          case SemTalkType.SemTalkClass: {\r\n            slabel = this.props.semtalk.getResStr(\"STRClass\");\r\n            break;\r\n          }\r\n          case SemTalkType.SemTalkInstance: {\r\n            slabel = this.props.semtalk.getResStr(\"STRINSTANCE\");\r\n            break;\r\n          }\r\n          default: {\r\n            slabel = this.object.ObjectBase.SemTalkTypeName(this.object.ObjectType);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fabric>\r\n        <Stack horizontal>\r\n          <Text variant={'xLarge'}>{slabel}</Text>\r\n          {this.state.logourl.length > 0 &&\r\n            <Separator>\r\n              <div className={styles.semTalkPivot}>\r\n                <Image className={styles.imagetab} src={this.state.logourl} alt=\"\" width={25} height={25}></Image>\r\n              </div>\r\n            </Separator>\r\n          }\r\n        </Stack>\r\n        {pivotArray.length > 0 &&\r\n          <Pivot className={styles.semTalkPivot}>\r\n            {pivotArray}\r\n          </Pivot>\r\n        }\r\n      </Fabric>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\nimport styles from './SemTalkTabSpecs.module.scss';\nimport {\n  Selection, IColumn, DetailsList, DetailsListLayoutMode, Dropdown, IDropdownOption,\n  CheckboxVisibility, CommandBar, DefaultButton, TextField, Stack, Checkbox, ChoiceGroup, IChoiceGroupOption,\n} from 'office-ui-fabric-react';\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\n\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { SelectionMode, ISelection } from 'office-ui-fabric-react/lib/utilities/selection/index';\n\nimport {\n  IObjectBase, ISemTalkObject, ISemTalkTabSpec, ISemTalkGenericAttributeTabSpec, ISemTalkInstance,\n  ISemTalkSystemClass, SemTalkType, ISemTalkGenericTabSpec, ISemTalkClass, ISemTalkAssociationType, ISemTalkAttributeType\n\n} from \"../../application/tbase/Interface\";\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n//import { any } from '@microsoft/sp-webpart-base';\n//import { SetContext } from '../../semtalkportal/restinterface';\nimport { Guid } from \"guid-typescript\";\n///import * as strings from 'SemTalkStrings';\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\n\n\nexport interface ISemTalkTabSpecsTabProps {\n  title?: string;\n  description?: string;\n  semtalk: IVisioRDFS;\n  context?: any;\n}\nexport interface ISemTalkTabSpecsTabState {\n  objectid: number;\n  base: IObjectBase;\n  newitem: boolean;\n  sel: ISelection;\n  items: ITabSpecTab[];\n  label: string;\n  isattr: boolean;\n  isgroup: boolean;\n  isinv: boolean;\n  isunique: boolean;\n  isinst: boolean;\n  isvisible: boolean;\n  PropValue: string;\n  RangeValue: string;\n  RelationValue: string;\n  others: IDropdownOption[];\n  attrs: string[];\n  assoctypes: IAssocDropDownOption[];\n  invassoctypes: IAssocDropDownOption[];\n  attrtypes: ITabSpecAttributeTab[];\n\n}\ninterface ITabSpecTab {\n  ID: number;\n  Object: ISemTalkSystemClass;\n  TabSpec: ISemTalkTabSpec;\n  PropValue: string | undefined;\n  PropValueName: ISemTalkObject | null;\n  PropValueCaption: string;\n  _value: string;\n  isattr: boolean;\n  isgroup: boolean;\n  isinv: boolean;\n  isinst: boolean;\n  isvisible: boolean;\n  isunique: boolean;\n  RangeValue: string;\n  RelationValue: string;\n  attrs: string[];\n}\ninterface ITabSpecAttributeTab {\n  Attribute: ISemTalkAttributeType;\n  isvisible: boolean;\n  key: string | number;\n}\ninterface IAssocDropDownOption extends IDropdownOption {\n  //  inv: boolean;\n}\nexport class SemTalkTabSpecsTab extends React.Component<ISemTalkTabSpecsTabProps, ISemTalkTabSpecsTabState> {\n  // private _selection: Selection;\n  private object: ISemTalkSystemClass | null = null;\n  // private languages: IDropdownOption[] = [];\n  // private assoctypes: IAssocDropDownOption[] = [];\n  // private attrtypes: ITabSpecAttributeTab[] = [];\n  public callback: Guid;\n\n  private _selectionAttr: Selection;\n\n  constructor(props: ISemTalkTabSpecsTabProps) {\n    super(props);\n    this.callback = Guid.create();\n    console.debug(\"showTabSpecsTab\");\n    this._selectionAttr = new Selection({\n      onSelectionChanged: () => { this._getSelectionDetails(); }\n    });\n    this.state = {\n      objectid: -1,\n      items: [],\n      sel: new Selection({}),\n      newitem: true,\n      base: this.props.semtalk.base,\n      label: \"\",\n      isattr: true,\n      isgroup: true,\n      isinv: false,\n      isinst: true,\n      isvisible: true,\n      isunique: false,\n      PropValue: \"\",\n      RelationValue: \"\",\n      RangeValue: \"\",\n      others: [],\n      attrs: [],\n      assoctypes: [],\n      invassoctypes: [],\n      attrtypes: []\n    };\n  }\n  private resetState = () => {\n    this.setState({\n      objectid: -1,\n      items: [],\n      newitem: false,\n      base: this.props.semtalk.base,\n      label: \"\",\n      isattr: true,\n      isgroup: true,\n      isinv: false,\n      isinst: true,\n      isvisible: true,\n      PropValue: \"\",\n      RelationValue: \"\",\n      RangeValue: \"\",\n      others: [],\n      attrs: []\n    });\n  }\n  private mounted: boolean = false;\n\n  public async componentDidMount() {\n    this.mounted = true;\n\n    let oid: number = getObject();\n    if (oid > 0) {\n      this.loadObject(oid);\n    }\n    this.setState({ newitem: false });\n    addCallBack(this);\n\n  }\n  public componentWillUnmount() {\n    this.mounted = false;\n    removeCallBack(this);\n    this.object = null;\n  }\n\n  private loadObject(id: number) {\n    let assoctypes: IAssocDropDownOption[] = [];\n    let invassoctypes: IAssocDropDownOption[] = [];\n    let attrtypes: ITabSpecAttributeTab[] = [];\n\n    let sc: ISemTalkSystemClass | null = null;\n    const obj = this.state.base.FindObjectByID(id);\n    if (obj !== null && this.state.base.IsInstance(obj)) {\n      let ins: ISemTalkInstance = obj as ISemTalkInstance;\n      sc = ins.ClassOf().SystemClass();\n    } else {\n      if (obj !== null) {\n        sc = obj.SystemClass();\n      }\n    }\n    if (sc !== null && this.state.base.IsSystemClass(sc)) {\n      this.object = sc as ISemTalkSystemClass;\n      if (this.object !== null) {\n        let cl: ISemTalkClass;\n        cl = this.object as ISemTalkClass;\n        let scl = cl.SystemClass();\n        if (scl !== null)\n          cl = scl;\n        for (const atype of cl.AllAssociationTypes()) {\n          assoctypes.push({ key: atype.ObjectName, text: atype.ObjectCaption });\n        }\n        for (const atype of cl.AllInvAssociationTypes()) {\n          invassoctypes.push({ key: atype.ObjectName, text: atype.InvName });\n        }\n        attrtypes = [];\n        for (const atype of cl.AllAttributeTypes().sort((x, y) => x.ObjectCaption.localeCompare(y.ObjectCaption))) {\n          attrtypes.push({ Attribute: atype, isvisible: false, key: atype.ObjectName });\n        }\n        // this.attrtypes = attrtypes;\n      }\n      this.setState({\n        assoctypes: assoctypes, invassoctypes: invassoctypes, attrtypes: attrtypes,\n        objectid: id, items: this.getItems(this.object)\n      });\n    }\n  }\n\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    try {\n      md = JSON.parse(e.data);\n      var mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkNavigationEvent.gotoObject:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n          // this.forceUpdate();\n        }\n        break;\n      case SemTalkNavigationEvent.gotoNode:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n    }\n  }\n  private getItems(obj: ISemTalkSystemClass): ITabSpecTab[] {\n    let items: ITabSpecTab[] = [];\n    for (let ts of obj.TabSpecs()) {\n      let txt = ts.Text;\n      let capobj: ISemTalkObject | null = this.state.base.FindAssociationType(ts.Text);\n      if (capobj === null) capobj = this.state.base.FindClass(ts.Text);\n      if (capobj === null) capobj = this.state.base.FindInstance(ts.Text);\n      if (capobj !== null) txt = capobj.ID2NameNsp();\n      let isattr: boolean = false;\n      let isgroup: boolean = false;\n      let isinv: boolean = false;\n      let isinst: boolean = true;\n      let isgeneric: boolean = false;\n      let isvisible: boolean = ts.Visible;\n      let isunique: boolean = false;\n      let relname: string = \"\";\n      let toobj: string = \"\";\n      let attrs: string[] = [];\n\n      let pv = \"\";\n      if (ts.ObjectType === SemTalkType.SemTalkGenericAttributeTabSpec) {\n        const ats = ts as ISemTalkGenericAttributeTabSpec;\n        isattr = true;\n        isgroup = false;\n        isgeneric = true;\n        pv = ats.Group;\n        attrs = ats.Attributes;\n        isgroup = (attrs.length === 0);\n      } else {\n        if (ts.ObjectType === SemTalkType.SemTalkGenericTabSpec) {\n          const ats = ts as ISemTalkGenericTabSpec;\n          isattr = false;\n          isgroup = false;\n          isinv = ats.IsInv;\n          isinst = ats.IsInst;\n          isgeneric = true;\n          isunique = ats.IsUni;\n          pv = ats.Relname;\n          relname = ats.Relname;\n          toobj = ats.Toobj;\n        }\n      }\n      if (isgeneric) {\n        let item: ITabSpecTab = {\n          ID: items.length,\n          // PropName: assoc.ClassOf().ObjectName,\n          isattr: isattr,\n          isgroup: isgroup,\n          isinv: isinv,\n          isinst: isinst,\n          isunique: isunique,\n          Object: obj,\n          TabSpec: ts,\n          // PropType: SemTalkType,\n          PropValue: pv,\n          PropValueName: obj,\n          PropValueCaption: txt,\n          // _label: assoc.ClassOf().ID2NameNsp(),\n          _value: txt,\n          isvisible: isvisible,\n          RelationValue: relname,\n          RangeValue: toobj,\n          attrs: attrs,\n        };\n        items.push(item);\n      }\n      if (ts.ObjectType === SemTalkType.SemTalkTabSpec) {\n        let utxt = this.props.semtalk.captionUserTab(ts.Text);\n        if (utxt.length > 0) {\n          let item1: ITabSpecTab = {\n            ID: items.length,\n            // PropName: assoc.ClassOf().ObjectName,\n            isattr: isattr,\n            isgroup: isgroup,\n            isinv: isinv,\n            isinst: isinst,\n            isunique: isunique,\n            Object: obj,\n            TabSpec: ts,\n            // PropType: SemTalkType,\n            PropValue: pv,\n            PropValueName: obj,\n            PropValueCaption: utxt,\n            // _label: assoc.ClassOf().ID2NameNsp(),\n            _value: utxt,\n            isvisible: isvisible,\n            RelationValue: relname,\n            RangeValue: toobj,\n            attrs: attrs,\n          };\n          items.push(item1);\n        }\n      }\n    }\n    return items;\n  }\n\n  private _columns: IColumn[] = [\n    {\n      key: 'Name',\n      name: this.props.semtalk.getResStrListener(\"STRDLHTMLTABS\"),\n      fieldName: 'Name',\n      minWidth: 100,\n      isMultiline: false,\n      onRender: (item: ITabSpecTab, _index?: number, _column?: IColumn) => {\n        //  let cap = item.PropValue;\n        let lbl = item.PropValueCaption;\n        let r: any;\n        //  r = <TextField value={item.PropValue} readOnly={true} label={lbl} onChange={(ev, a) => { }}></TextField>;\n        r = <span id=\"specsName\">{lbl}</span>;\n        return r;\n      }\n    },\n    {\n      key: 'Value',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDEV\"),\n      fieldName: 'Value',\n      minWidth: 300,\n      isMultiline: false,\n      onRender: (item: ITabSpecTab, _index?: number, _column?: IColumn) => {\n        //  let cap = item.PropValue;\n        // let lbl = item.PropValueCaption;\n        let r: any;\n        if (item.TabSpec.ObjectType === SemTalkType.SemTalkTabSpec) {\n          return <div></div>;\n        }\n        let pv = item.PropValue;\n        if (pv === undefined) pv = \"\";\n        if (pv.length === 0 && item.attrs.length > 0) {\n          pv = this.getAttributes(item.attrs);\n        }\n        r = <TextField id=\"valueField\" value={pv} readOnly={true} onChange={(_ev, _a) => { }}></TextField>;\n        //  r = <span>{lbl}</span>;\n        return r;\n      }\n    },\n    {\n      key: 'Visible',\n      name: this.props.semtalk.getResStrListener(\"STRDLGVISIBLE\"),\n      fieldName: 'Visible',\n      minWidth: 50,\n      isMultiline: false,\n      onRender: (item: ITabSpecTab, _index?: number, _column?: IColumn) => {\n        //  let cap = item.PropValue;\n        // let lbl = this.props.semtalk.getResStrListener(\"STRDLGVISIBLE\");\n        let r: any;\n        // id=\"visibleCheckbox\" \n        r = <Checkbox checked={item.isvisible} onChange={(_ev: any, a: boolean | undefined) => {\n          if (a !== undefined) {\n            item.TabSpec.Visible = a;\n            item.isvisible = a;\n            this.setState({ items: this.getItems(item.Object) });\n          }\n        }}></Checkbox>;\n        return r;\n      }\n    }\n  ];\n\n  private _columns_attr: IColumn[] = [\n    {\n      key: 'Name',\n      name: this.props.semtalk.getResStrListener(\"STRBONATTR1\"),\n      fieldName: 'Name',\n      minWidth: 100,\n      isMultiline: false,\n      onRender: (item: ITabSpecAttributeTab, _index?: number, _column?: IColumn) => {\n        return <span>{item.Attribute.ObjectCaption}</span>;\n      }\n    }\n  ];\n  private _getSelectionDetails = () => {\n    let alist: string[] = [];\n    let sel = this._selectionAttr.getSelection();\n    for (const i in sel) {\n      let att = sel[i] as ITabSpecAttributeTab;\n      alist.push(att.Attribute.ObjectName);\n    }\n    this.setState({ PropValue: this.getAttributes(alist), attrs: alist });\n  }\n  private getAttributes = (alist: string[]): string => {\n    let s = \"\";\n    for (const a of alist) {\n      s = s + \"; \" + a;\n    }\n    if (s.length > 0) s = s.substring(2);\n    return s;\n  }\n\n  private commands = [\n    {\n      key: 'Add',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDNE\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Add'\n      },\n      onClick: (): void => { this.newItem(); }\n    },\n    {\n      key: 'Edit',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDED\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Edit'\n      },\n      onClick: () => { this.editItem(); }\n    },\n    {\n      key: 'Delete',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Delete'\n      },\n      onClick: (): void => {\n        let item = this.state.sel.getSelection()[0] as ITabSpecTab;\n        if (item !== null) {\n          if (item.TabSpec.ObjectType === SemTalkType.SemTalkTabSpec) return;\n          item.TabSpec.Delete();\n          if (this.object) {\n            this.setState({ items: this.getItems(this.object) });\n          }\n        }\n      }\n    }];\n  // private _onItemInvoked(item: ITabSpecTab): void {\n  //   if (item.PropValue !== undefined)\n  //     window.open(item.PropValue);\n  // }\n  private newItem = (): void => {\n    this._selectionAttr = new Selection({\n      onSelectionChanged: () => { this._getSelectionDetails(); }\n    });\n    this.setState({\n      label: \"\",\n      isattr: true,\n      isgroup: true,\n      isinv: false,\n      isinst: true,\n      isvisible: true,\n      isunique: false,\n      PropValue: \"\",\n      RangeValue: \"\",\n      RelationValue: \"\",\n      newitem: true,\n      attrs: []\n    });\n  }\n\n  private editItem = (): void => {\n    let item = this.state.sel.getSelection()[0] as ITabSpecTab;\n    if (item !== null) {\n      if (item.TabSpec.ObjectType === SemTalkType.SemTalkTabSpec) return;\n      let pv = item.PropValue;\n      if (pv === undefined) {\n        pv = \"\";\n      }\n      let isinv = item.isinv;\n      let others: IDropdownOption[] = [];\n      if (!item.isattr) {\n        if (isinv) {\n          others = this.computeInvOthers(item.RelationValue);\n        } else {\n          others = this.computeOthers(item.RelationValue);\n        }\n      }\n      // this._selectionAttr = new Selection({\n      //   onSelectionChanged: () => { this._getSelectionDetails(); }\n      // });\n      // this._selectionAttr.setAllSelected(false);\n      this._selectionAttr.setItems(this.state.attrtypes);\n      let i = 0;\n      for (const aoption of this.state.attrtypes) {\n        const a = aoption.Attribute.ObjectName;\n        this._selectionAttr.setIndexSelected(i, item.attrs.includes(a), true);\n        i = i + 1;\n      }\n      this.setState({\n        label: item.TabSpec.Text,\n        isattr: item.isattr,\n        isgroup: item.isgroup,\n        isinv: item.isinv,\n        isinst: item.isinst,\n        isvisible: item.isvisible,\n        isunique: item.isunique,\n        PropValue: pv,\n        RelationValue: item.RelationValue,\n        newitem: true,\n        others: others,\n        RangeValue: item.RangeValue,\n        attrs: item.attrs\n      });\n\n      // this.setState({\n      //   RangeValue: item.RangeValue\n      // });\n    }\n  }\n  private cancelnew = (): void => {\n    this.setState({ newitem: false });\n  }\n  private addnewitem = (): void => {\n    // if (t.startsWith(\"www.\")) t = \"http://\" + t;\n    if (this.object !== null && this.state.label.length > 0) {\n      //     if (this.newitem.oldtitle.length > 0 && this.newitem.oldtitle !== this.newitem.title) {\n      //       this.object.DeleteAttachment(this.newitem.oldtitle);\n      //     }\n      if (this.state.isattr) {\n        if (this.state.isgroup) {\n          this.object.TabSpecDefinitions().MakeGenericAttributeTabSpec(this.state.label, this.state.PropValue, [], false);\n        } else {\n          this.object.TabSpecDefinitions().MakeGenericAttributeTabSpec(this.state.label, \"\", this.state.attrs, false);\n        }\n      } else {\n        if (this.state.RelationValue.length > 0) {\n          this.object.TabSpecDefinitions().MakeGenericTabSpec(this.state.label, this.state.RelationValue, this.state.RangeValue,\n            this.state.isinst, this.state.isinv, this.state.isunique, false);\n        } else {\n          this.setState({ newitem: false });\n        }\n      }\n      this.setState({ newitem: false, attrs: [], items: this.getItems(this.object) });\n    }\n  }\n  private typeoptions: IChoiceGroupOption[] = [\n    { key: \"A\", text: this.props.semtalk.getResStrListener(\"STRDLGTABATT\") },\n    { key: \"B\", text: this.props.semtalk.getResStrListener(\"STRDLGTABASS\") },\n  ];\n  private _onTypeChange = (_ev: any, option: any): void => {\n    this.setState({ isattr: option.key === \"A\" });\n  }\n  private computeOthers(assoc: string): IDropdownOption[] {\n    let others: IDropdownOption[] = [];\n    let cl: ISemTalkClass;\n    if (this.object !== null) {\n      let oclasses: ISemTalkObject[] = [];\n      const ob = this.object.ObjectBase;\n      const at = ob.FindAssociationType(assoc) as ISemTalkAssociationType;\n      // if (ob.IsInstance(this.object)) {\n      //   cl = (this.object as ISemTalkInstance).ClassOf();\n      // } else {\n      cl = (this.object as ISemTalkClass);\n      let scl = cl.SystemClass();\n      if (scl !== null)\n        cl = scl;\n      //}\n      oclasses = cl.GetRelationOtherBases(at);\n      for (let c of oclasses)\n        others.push({ key: c.ObjectName, text: c.ObjectCaption });\n      others = others.sort((x, y) => x.text.localeCompare(y.text));\n      // this.setState({ others: others });\n    }\n    return others;\n  }\n  private computeInvOthers = (assoc: string): IDropdownOption[] => {\n    let others: IDropdownOption[] = [];\n    let cl: ISemTalkClass;\n    if (this.object !== null) {\n      let oclasses: ISemTalkObject[] = [];\n      const ob = this.object.ObjectBase;\n      const at = ob.FindAssociationType(assoc) as ISemTalkAssociationType;\n      // if (ob.IsInstance(this.object)) {\n      //   cl = (this.object as ISemTalkInstance).ClassOf();\n      // } else {\n      cl = (this.object as ISemTalkClass);\n      let scl = cl.SystemClass();\n      if (scl !== null)\n        cl = scl;\n      //}\n      oclasses = cl.GetInvRelationOtherBases(at);\n      for (let c of oclasses)\n        others.push({ key: c.ObjectName, text: c.ObjectCaption });\n      others = others.sort((x, y) => x.text.localeCompare(y.text));\n      // this.setState({ others: others });\n    }\n    return others;\n  }\n  public render(): React.ReactElement<ISemTalkTabSpecsTabProps> {\n    // let val: any[] = this.getItems();\n    let r: React.ReactElement<ISemTalkTabSpecsTabProps>;\n    // let val: any[] = this.state.items;\n    // this._selection = new Selection({});\n    let startoption = \"A\";\n    if (!this.state.isattr) {\n      startoption = \"B\";\n    }\n\n    // <div className={styles.semTalkAttachment}><div className={styles.pivottab}></div></div>\n    const stackTokens = { childrenGap: 10 };\n    r = <Fabric>\n      <div id=\"stTabSpecsTest\" className={styles.semTalkTabSpec}><div className={styles.pivottab}></div></div>\n      <CommandBar id=\"stButtons\"\n        items={this.commands}\n      ></CommandBar>\n      <div className={styles.semTalkTabSpec}><div className={styles.pivottab}></div></div>\n      {this.state.newitem &&\n        <div>\n          <Stack tokens={stackTokens}>\n            <TextField id=\"nameField\" value={this.state.label} label={this.props.semtalk.getResStrListener(\"STRBONPECAPNAME\")} required onChange={(_ev, a) => {\n              if (a !== undefined)\n                this.setState({ label: a });\n            }}>\n            </TextField>\n            <ChoiceGroup id=\"choices\" defaultSelectedKey={startoption} options={this.typeoptions} onChange={this._onTypeChange}\n              required={true} />\n            {this.state.isattr &&\n              <Checkbox id=\"groupCheckbox\" checked={this.state.isgroup} disabled={!this.state.isattr}\n                label={this.props.semtalk.getResStrListener(\"STRDLGCLLAYOUTATTRGRP\")}\n                onChange={(_ev, a: boolean | undefined) => {\n                  if (a !== undefined)\n                    this.setState({ isgroup: a });\n                }}>\n              </Checkbox>\n            }\n            {!this.state.isattr &&\n              <Checkbox id=\"instanceCB\" checked={this.state.isinst} disabled={this.state.isattr}\n                label={this.props.semtalk.getResStrListener(\"STRDLGBROWSEINS\")}\n                onChange={(_ev, a: boolean | undefined) => {\n                  if (a !== undefined)\n                    this.setState({ isinst: a });\n                }}>\n              </Checkbox>\n            }\n            {!this.state.isattr &&\n              <Checkbox id=\"inverseCB\" checked={this.state.isinv} disabled={this.state.isattr}\n                label={this.props.semtalk.getResStrListener(\"STRDLGINVERSE\")}\n                onChange={(_ev, a: boolean | undefined) => {\n                  if (a !== undefined)\n                    this.setState({ isinv: a });\n                }}>\n              </Checkbox>\n            }\n            {!this.state.isattr &&\n              <Checkbox id=\"uniqueCB\" checked={this.state.isunique} disabled={this.state.isattr}\n                label={this.props.semtalk.getResStrListener(\"STRDLGRELTYPEUNIQUE\")}\n                onChange={(_ev, a: boolean | undefined) => {\n                  if (a !== undefined)\n                    this.setState({ isunique: a });\n                }}>\n              </Checkbox>\n            }\n            {this.state.isattr && this.state.isgroup &&\n              <TextField id=\"valueField2\" defaultValue={this.state.PropValue} disabled={!this.state.isattr}\n                label={this.props.semtalk.getResStrListener(\"STRDLGCMDEV\")}\n                required onChange={(_ev, a) => {\n                  if (a !== undefined)\n                    this.setState({ PropValue: a });\n                }}></TextField>\n            }\n            {this.state.isattr && !this.state.isgroup &&\n              <MarqueeSelection id=\"attributeList\" selection={this._selectionAttr}>\n                <DetailsList\n                  items={this.state.attrtypes}\n                  compact={true}\n                  columns={this._columns_attr}\n                  selectionMode={SelectionMode.multiple}\n                  layoutMode={DetailsListLayoutMode.justified}\n                  setKey=\"set\"\n                  selection={this._selectionAttr}\n                  selectionPreservedOnEmptyClick={true}\n                  checkboxVisibility={CheckboxVisibility.always}\n                  isHeaderVisible={true}\n                // onItemInvoked={this._onItemInvoked}\n                />\n              </MarqueeSelection>\n            }\n            {!this.state.isattr && !this.state.isinv &&\n              <Dropdown id=\"associateAsDropdown\"\n                label={this.props.semtalk.getResStrListener(\"STRDLGNASAAS\")}\n                selectedKey={this.state.RelationValue}\n                // selectedKey={this.newitem.type}\n                options={this.state.assoctypes}\n                onChange={(_ev, a) => {\n                  if (a !== undefined) {\n                    let ad = (a as IAssocDropDownOption);\n                    let others: IDropdownOption[] = [];\n                    others = this.computeOthers(ad.key as string);\n                    let v = \"\";\n                    if (others.length > 0)\n                      v = others[0].key as string;\n                    this.setState({ RelationValue: a.key as string, others: others, RangeValue: v });\n                  }\n                }}\n              />\n            }\n            {!this.state.isattr && this.state.isinv &&\n              <Dropdown id=\"associateAsDropdown2\"\n                label={this.props.semtalk.getResStrListener(\"STRDLGNASAAS\")}\n                selectedKey={this.state.RelationValue}\n                // selectedKey={this.newitem.type}\n                options={this.state.invassoctypes}\n                onChange={(_ev, a) => {\n                  if (a !== undefined) {\n                    let ad = (a as IAssocDropDownOption);\n                    let others: IDropdownOption[] = [];\n                    others = this.computeInvOthers(ad.key as string);\n                    let v = \"\";\n                    if (others.length > 0)\n                      v = others[0].key as string;\n                    this.setState({ RelationValue: a.key as string, others: others, RangeValue: v });\n                  }\n                }}\n              />\n            }\n            {!this.state.isattr &&\n              <Dropdown id=\"rangeDropdown\"\n                label={this.props.semtalk.getResStrListener(\"STRDLGRELTYPERANGE\")}\n                selectedKey={this.state.RangeValue}\n                // selectedKey={this.newitem.type}\n                options={this.state.others}\n                onChange={(_ev, a) => {\n                  if (a !== undefined) {\n                    let oth = this.state.base.FindClass(a.key as string);\n                    if (oth !== null) {\n                      this.setState({ RangeValue: oth.ObjectName });\n                    }\n                  }\n                }}\n              />\n            }\n          </Stack>\n          <div className={styles.semTalkTabSpec}><div className={styles.pivottab}></div></div>\n          <DefaultButton id=\"okButton\" disabled={this.state.label.length === 0} text={this.props.semtalk.getResStrListener(\"STRDLGCMDOK\")} onClick={this.addnewitem} />\n          <DefaultButton id=\"cancelButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\n        </div>\n      }\n      {!this.state.newitem &&\n        <div id=\"spfxSTTabSpecs\">\n          <DetailsList\n            items={this.state.items}\n            compact={true}\n            columns={this._columns}\n            selectionMode={SelectionMode.single}\n            layoutMode={DetailsListLayoutMode.justified}\n            selection={this.state.sel}\n            checkboxVisibility={CheckboxVisibility.hidden}\n            isHeaderVisible={true}\n          // onItemInvoked={this._onItemInvoked}\n          />\n        </div>\n      }\n    </Fabric>;\n    return r;\n  }\n}","/* eslint-disable react/no-direct-mutation-state */\r\nimport * as React from 'react';\r\nimport styles from './SemTalkDialog.module.scss';\r\nimport {\r\n  Stack, Checkbox,\r\n} from 'office-ui-fabric-react'; //IStackStyles\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { ISemTalkInstance, IObjectBase, ISemTalkSystemClass, ISemTalkInstDialog } from \"../../application/tbase/Interface\";\r\n\r\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\n//import { any } from '@microsoft/sp-webpart-base';\r\n//import { SetContext } from '../../semtalkportal/restinterface';\r\nimport { Guid } from \"guid-typescript\";\r\n// import * as strings from 'SemTalkStrings';\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { SemTalkTabSpecsTab } from '../sttabspecs/SemTalkTabSpecs';\r\n\r\n\r\nexport interface ISemTalkDialogTabProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  context?: any;\r\n}\r\nexport interface ISemTalkDialogTabState {\r\n  objectid: number;\r\n  base: IObjectBase;\r\n  dialog: ISemTalkInstDialog | null;\r\n  checkattributes: boolean;\r\n  checkassociations: boolean;\r\n  checksynonyms: boolean;\r\n  checkhyperlinks: boolean;\r\n  checkaudit: boolean;\r\n  checkclass: boolean;\r\n  checknamespace: boolean;\r\n}\r\nexport class SemTalkDialogTab extends React.Component<ISemTalkDialogTabProps, ISemTalkDialogTabState> {\r\n  private object: ISemTalkSystemClass | null = null;\r\n  public callback: Guid;\r\n  private objectname: string = \"\";\r\n  constructor(props: ISemTalkDialogTabProps) {\r\n    super(props);\r\n    console.debug(\"showDialogTab\");\r\n    this.callback = Guid.create();\r\n    this.state = {\r\n      objectid: -1,\r\n      base: this.props.semtalk.base,\r\n      dialog: null,\r\n      checkattributes: true,\r\n      checkassociations: true,\r\n      checksynonyms: true,\r\n      checkhyperlinks: true,\r\n      checkaudit: true,\r\n      checkclass: false,\r\n      checknamespace: false\r\n    };\r\n  }\r\n  private resetState = () => {\r\n    this.setState({\r\n      objectid: -1,\r\n      base: this.props.semtalk.base,\r\n      dialog: null,\r\n      checkattributes: true,\r\n      checkassociations: true,\r\n      checksynonyms: true,\r\n      checkaudit: true,\r\n      checkclass: false,\r\n      checknamespace: false\r\n    });\r\n  }\r\n  private mounted: boolean = false;\r\n\r\n  public async componentDidMount() {\r\n    // if (this.props.context && this.props.filter) {\r\n    //   SetContext(this.props.context, this.props.filter, this.props.token, this.props.service);\r\n    // }\r\n    this.mounted = true;\r\n    let oid: number = getObject();\r\n    if (oid > 0) {\r\n      this.loadObject(oid);\r\n    }\r\n    addCallBack(this);\r\n  }\r\n  public componentWillUnmount() {\r\n    if (this.object && this.object.ObjectCaption !== this.objectname) {\r\n      this.props.semtalk.RenameObject(this.object, this.objectname, null);\r\n    }\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n    this.object = null;\r\n  }\r\n\r\n  private loadObject(id: number) {\r\n    // const sc = this.state.base.FindObjectByID(id);\r\n    let sc: ISemTalkSystemClass | null = null;\r\n    const obj = this.state.base.FindObjectByID(id);\r\n    if (obj !== null && this.state.base.IsInstance(obj)) {\r\n      let ins: ISemTalkInstance = obj as ISemTalkInstance;\r\n      sc = ins.ClassOf().SystemClass();\r\n    } else {\r\n      if (obj !== null) {\r\n        sc = obj.SystemClass();\r\n      }\r\n    }\r\n    if (sc !== null && this.state.base.IsSystemClass(sc)) {\r\n\r\n      this.object = sc as ISemTalkSystemClass;\r\n\r\n      this.objectname = this.object.ObjectCaption;\r\n      let dialog = this.object.InstDialog;\r\n      if (dialog === null) {\r\n        dialog = this.object.InitInstDialog();\r\n      }\r\n      if (dialog !== null) {\r\n        this.setState({\r\n          objectid: id, dialog: dialog,\r\n          checkattributes: dialog.CheckAttributes,\r\n          checkassociations: dialog.CheckAssociations,\r\n          checksynonyms: dialog.CheckSynonyms,\r\n          checkhyperlinks: dialog.CheckAttachments,\r\n          checkaudit: dialog.CheckAudit,\r\n          checkclass: dialog.CheckClass,\r\n          checknamespace: dialog.CheckNamespace\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoObject:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n          // this.forceUpdate();\r\n        }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n          // this.forceUpdate();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  public render(): React.ReactElement<ISemTalkDialogTabProps> {\r\n    // let val: any[] = this.getItems();\r\n    let r: React.ReactElement<ISemTalkDialogTabProps>;\r\n    const stackTokens = { childrenGap: 10 };\r\n    r = <Fabric>\r\n      <div id=\"stDialogTest\" className={styles.semTalkDialog}><div className={styles.pivottab}></div></div>\r\n      {this.object &&\r\n        <Stack tokens={stackTokens}>\r\n          <Checkbox id=\"checkboxCla\" label={this.props.semtalk.getResStrListener(\"STRDLHTMLOUTCLA\")} checked={this.state.checkclass}\r\n            onChange={(_ev: any, isChecked: boolean | undefined) => {\r\n              if (isChecked !== undefined) {\r\n                if (this.state.dialog) this.state.dialog.CheckClass = isChecked;\r\n                this.setState({ checkclass: isChecked });\r\n              }\r\n            }}></Checkbox>\r\n          <Checkbox id=\"checkboxNsp\" label={this.props.semtalk.getResStr(\"STRNAMESPACE\")} checked={this.state.checknamespace}\r\n            onChange={(_ev: any, isChecked: boolean | undefined) => {\r\n              if (isChecked !== undefined) {\r\n                if (this.state.dialog) this.state.dialog.CheckNamespace = isChecked;\r\n                this.setState({ checknamespace: isChecked });\r\n              }\r\n            }}></Checkbox>\r\n          <Checkbox id=\"checkboxAttr\" label={this.props.semtalk.getResStrListener(\"STRDLGTABATT\")} checked={this.state.checkattributes}\r\n            onChange={(_ev: any, isChecked: boolean | undefined) => {\r\n              if (isChecked !== undefined) {\r\n                if (this.state.dialog) this.state.dialog.CheckAttributes = isChecked;\r\n                this.setState({ checkattributes: isChecked });\r\n              }\r\n            }}></Checkbox>\r\n          <Checkbox id=\"checkboxAsso\" label={this.props.semtalk.getResStrListener(\"STRDLGTABASS\")} checked={this.state.checkassociations}\r\n            onChange={(_ev: any, isChecked: boolean | undefined) => {\r\n              if (isChecked !== undefined) {\r\n                if (this.state.dialog) this.state.dialog.CheckAssociations = isChecked;\r\n                this.setState({ checkassociations: isChecked });\r\n              }\r\n            }}></Checkbox>\r\n          <Checkbox id=\"checkboxHyp\" label={this.props.semtalk.getResStrListener(\"STRDLGFINDATTACH\")} checked={this.state.checkhyperlinks}\r\n            onChange={(_ev: any, isChecked: boolean | undefined) => {\r\n              if (isChecked !== undefined) {\r\n                if (this.state.dialog) this.state.dialog.CheckAttachments = isChecked;\r\n                this.setState({ checkhyperlinks: isChecked });\r\n              }\r\n            }}></Checkbox>\r\n          <Checkbox id=\"checkboxSyn\" label={this.props.semtalk.getResStrListener(\"STRDLGTABSYN\")} checked={this.state.checksynonyms}\r\n            onChange={(_ev: any, isChecked: boolean | undefined) => {\r\n              if (isChecked !== undefined) {\r\n                if (this.state.dialog) this.state.dialog.CheckSynonyms = isChecked;\r\n                this.setState({ checksynonyms: isChecked });\r\n              }\r\n            }}></Checkbox>\r\n          <Checkbox id=\"checkboxAud\" label={this.props.semtalk.getResStrListener(\"STRDLGTABAUD\")} checked={this.state.checkaudit}\r\n            onChange={(_ev: any, isChecked: boolean | undefined) => {\r\n              if (isChecked !== undefined) {\r\n                if (this.state.dialog) this.state.dialog.CheckAudit = isChecked;\r\n                this.setState({ checkaudit: isChecked });\r\n              }\r\n            }}></Checkbox>\r\n        </Stack>\r\n      }\r\n      {this.object &&\r\n        <SemTalkTabSpecsTab semtalk={this.props.semtalk}></SemTalkTabSpecsTab>\r\n      }\r\n    </Fabric>;\r\n    return r;\r\n  }\r\n}","import * as React from 'react';\nimport styles from './SemTalkLabels.module.scss';\nimport {\n  Selection, IColumn, DetailsList, DetailsListLayoutMode, IDropdownOption, Dropdown, Checkbox,\n  CheckboxVisibility, CommandBar, DefaultButton, Stack, ChoiceGroup, IChoiceGroupOption, TextField,\n  ComboBox, IComboBoxOption, IComboBox\n} from 'office-ui-fabric-react';\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\n\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { SelectionMode, ISelection } from 'office-ui-fabric-react/lib/utilities/selection/index';\n\nimport {\n  IObjectBase, ISemTalkLabel,\n  ISemTalkSystemClass, ISemTalkAssociationType, ISemTalkNamedThing, ISemTalkInstance\n} from \"../../application/tbase/Interface\";\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n//import { any } from '@microsoft/sp-webpart-base';\n//import { SetContext } from '../../semtalkportal/restinterface';\nimport { Guid } from \"guid-typescript\";\n///import * as strings from 'SemTalkStrings';\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\n// import { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\n\n\nexport interface ISemTalkLabelsTabProps {\n  title?: string;\n  description?: string;\n  semtalk: IVisioRDFS;\n  context?: any;\n}\nexport interface ISemTalkLabelsTabState {\n  objectid: number;\n  base: IObjectBase;\n  newitem: boolean;\n  sel: ISelection;\n  label: ISemTalkLabel | null;\n  items: ISemTalkLabel[];\n  attrs: string[];\n  assocs: ISemTalkAssociationType[];\n  isattr: boolean;\n  isdefault: boolean;\n  PropValue: string;\n  PropMaster: string;\n  PropShape: string;\n  //  RelationValue: string;\n  ShowLabel: boolean;\n  ShowAname: boolean;\n  // ShowCAname: boolean;\n}\n\n// interface IAttributeLabel {\n//   Attribute: ISemTalkAttributeType;\n//   isvisible: boolean;\n//   key: string | number;\n// }\ninterface IAssocDropDownOption extends IDropdownOption {\n  inv: boolean;\n}\nexport class SemTalkLabelsTab extends React.Component<ISemTalkLabelsTabProps, ISemTalkLabelsTabState> {\n  // private _selection: Selection;\n  private object: ISemTalkSystemClass | null = null;\n  // private languages: IDropdownOption[] = [];\n  private assoctypes: IAssocDropDownOption[] = [];\n  // private attrtypes: IAttributeLabel[] = [];\n  public callback: Guid;\n  private typeoptions: IChoiceGroupOption[] = [\n    { key: \"C\", text: this.props.semtalk.getResStrListener(\"STRDLGEXPDEF\") },\n    { key: \"A\", text: this.props.semtalk.getResStrListener(\"STRDLGTABATT\") },\n    { key: \"B\", text: this.props.semtalk.getResStrListener(\"STRDLGTABASS\") },\n  ];\n  private defaultoptions: IDropdownOption[] = [];\n  private attroptions: IDropdownOption[] = [];\n  // private _selectionMaster: Selection;\n  private masters: IComboBoxOption[];\n  private shapes: IComboBoxOption[];\n\n  constructor(props: ISemTalkLabelsTabProps) {\n    super(props);\n    this.callback = Guid.create();\n    console.debug(\"showLabelsTab\");\n    // this._selectionMaster = new Selection({\n    //   onSelectionChanged: () => { this._getSelectionDetails(); }\n    // });\n    this.state = {\n      objectid: -1,\n      items: [],\n      sel: new Selection({\n        onSelectionChanged: () => { this.selectitem(); }\n      }),\n      newitem: false,\n      base: this.props.semtalk.base,\n      label: null,\n      attrs: [],\n      assocs: [],\n      isattr: false,\n      isdefault: true,\n      PropValue: \"\",\n      PropMaster: \"\",\n      PropShape: \"\",\n      // RelationValue: \"\",\n      ShowLabel: true,\n      ShowAname: false,\n    };\n  }\n  private selectitem = (): void => {\n    let sel = this.state.sel.getSelection();\n    if (sel.length > 0) {\n      let item = this.state.sel.getSelection()[0] as ISemTalkLabel;\n      // console.debug(item);\n      if (item !== null) {\n        this.setState({ label: item });\n      }\n    }\n  }\n  private resetState = () => {\n    this.setState({\n      objectid: -1,\n      items: [],\n      newitem: false,\n      isattr: false,\n      isdefault: true,\n      base: this.props.semtalk.base,\n      label: null,\n      attrs: [],\n      assocs: [],\n      PropValue: \"\",\n      PropMaster: \"\",\n      PropShape: \"\",\n      ShowLabel: true,\n      ShowAname: false,\n    });\n  }\n  private mounted: boolean = false;\n\n  public async componentDidMount() {\n    this.mounted = true;\n\n    let oid: number = getObject();\n    if (oid > 0) {\n      this.loadObject(oid);\n    }\n    this.setState({ newitem: false });\n    addCallBack(this);\n\n  }\n  public componentWillUnmount() {\n    this.mounted = false;\n    removeCallBack(this);\n    this.object = null;\n  }\n\n  private loadObject(id: number) {\n    this.assoctypes = [];\n    //  let attrtypes: IAttributeLabel[] = [];\n    let assoctypes: IAssocDropDownOption[] = [];\n    let defaultoptions: IDropdownOption[] = [];\n    let attroptions: IDropdownOption[] = [];\n    let masters: IComboBoxOption[] = [];\n    let shapes: IComboBoxOption[] = [];\n\n    let sc: ISemTalkSystemClass | null = null;\n    const obj = this.state.base.FindObjectByID(id);\n    if (obj !== null && this.state.base.IsInstance(obj)) {\n      let ins: ISemTalkInstance = obj as ISemTalkInstance;\n      sc = ins.ClassOf().SystemClass();\n    } else {\n      if (obj !== null) {\n        sc = obj.SystemClass();\n      }\n    }\n    if (sc !== null && this.state.base.IsSystemClass(sc)) {\n\n      this.object = sc as ISemTalkSystemClass;\n      let cl: ISemTalkSystemClass = sc as ISemTalkSystemClass;\n      for (const atype of cl.AllAssociationTypes()) {\n        assoctypes.push({ key: atype.ObjectName, text: atype.ObjectCaption, inv: false });\n      }\n      for (const atype of cl.AllInvAssociationTypes()) {\n        assoctypes.push({ key: atype.ObjectName, text: atype.ObjectCaption, inv: true });\n      }\n      assoctypes = assoctypes.sort((a, b) => a.text.localeCompare(b.text));\n      this.assoctypes = assoctypes;\n\n      // attrtypes = [];\n      // for (const atype of cl.AllAttributeTypes().sort((x, y) => x.ObjectCaption.localeCompare(y.ObjectCaption))) {\n      //   attrtypes.push({ Attribute: atype, isvisible: false, key: atype.ObjectName });\n      // }\n      // this.attrtypes = attrtypes;\n      for (const o of cl.BuiltinInstLabels()) {\n        defaultoptions.push({ key: o, text: this.layoutName(o) });\n      }\n      this.defaultoptions = defaultoptions;\n\n      for (const o of cl.AllAttributeTypes().sort((x, y) => x.ObjectCaption.localeCompare(y.ObjectCaption))) {\n        attroptions.push({ key: o.ObjectName, text: o.ObjectCaption });\n      }\n      attroptions = attroptions.sort((a, b) => a.text.localeCompare(b.text));\n      this.attroptions = attroptions;\n\n      masters.push({ key: \"\", text: \"\" });\n      if (this.props.semtalk.masters) {\n        for (const m of this.props.semtalk.masters) {\n          masters.push({ key: m.name, text: m.name });\n        }\n        masters = masters.sort((a, b) => a.text.localeCompare(b.text));\n        this.masters = masters;\n      }\n        shapes.push({ key: \"Group\", text: \"Group\" });\n      for (let i = 0; i < 11; i++) {\n        shapes.push({ key: String(i), text: String(i) });\n      }\n      this.shapes = shapes;\n\n      this.setState({\n        objectid: id,\n        items: this.getItems(this.object)\n      });\n    }\n  }\n\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    try {\n      md = JSON.parse(e.data);\n      var mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkNavigationEvent.gotoObject:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n          // this.forceUpdate();\n        }\n        break;\n      case SemTalkNavigationEvent.gotoNode:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n    }\n  }\n  private getItems(obj: ISemTalkSystemClass): ISemTalkLabel[] {\n    let items: ISemTalkLabel[] = [];\n    for (let ts of obj.AllInstanceLabels()) {\n      items.push(ts);\n    }\n    return items;\n  }\n\n  private _columns: IColumn[] = [\n    {\n      key: 'Master',\n      name: this.props.semtalk.getResStrListener(\"STRDLGMASTER\"),\n      fieldName: 'Master',\n      minWidth: 200,\n      isMultiline: false,\n      onRender: (item: ISemTalkLabel, _index?: number, column?: IColumn) => {\n        // let lbl: string = item.Master;\n        let r: any;\n        // r = <span>{lbl}</span>;\n        r = <ComboBox id=\"masterCombobox2\" text={item.Master}\n          options={this.masters}\n          allowFreeform\n          onChange={(event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\n            if (option !== undefined) {\n              item.Master = option.text;\n            } else {\n              if (value !== undefined) {\n                item.Master = value;\n              }\n            }\n            if (this.object !== null)\n              this.setState({ newitem: false, items: this.getItems(this.object) });\n          }}>\n        </ComboBox>;\n        return r;\n      }\n    },\n    {\n      key: 'Name',\n      name: this.props.semtalk.getResStrListener(\"STRDLGATTLABEL\").replace(\":\", \"\"),\n      fieldName: 'Name',\n      minWidth: 200,\n      isMultiline: false,\n      onRender: (item: ISemTalkLabel, _index?: number, column?: IColumn) => {\n        let lx: string = item.Text;\n        // let lpos: string = \" Group\";\n        let idx = lx.indexOf(\"{\");\n        if (idx > -1) {\n          // lpos = lx.substr(idx + 1);\n          lx = lx.substr(0, idx);\n        }\n        if (lx.indexOf(\"(\") > -1) {\n          lx = lx.substr(0, lx.indexOf(\"(\") - 1);\n        }\n        //  let cap = item.PropValue;\n        let lbl = lx;\n        let r: any;\n        r = <TextField id=\"labelName\" value={this.layoutName(lbl)} readOnly={true}></TextField>;\n        // r = <span>{this.layoutName(lbl)}</span>;\n        return r;\n      }\n    },\n    {\n      key: 'Value',\n      name: this.props.semtalk.getResStrListener(\"STRDLGLSHAPES\"),\n      fieldName: 'Value',\n      minWidth: 100,\n      isMultiline: false,\n      onRender: (item: ISemTalkLabel, _index?: number, column?: IColumn) => {\n        let lx: string = item.Text;\n        let lpos: string = \" Group\";\n        let idx = lx.indexOf(\"{\");\n        if (idx > -1) {\n          lpos = lx.substr(idx + 2);\n          lx = lx.substr(0, idx);\n        }\n        if (lx.indexOf(\"(\") > -1) {\n          lx = lx.substr(0, lx.indexOf(\"(\") - 1);\n        }\n        let r: any;\n        // r = <TextField value={lpos} readOnly={true} onChange={(ev, a) => { }}></TextField>;\n        r = <ComboBox id=\"shapesCombobox2\" text={lpos}\n          options={this.shapes}\n          allowFreeform\n          onChange={(event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\n            if (option !== undefined) {\n              item.Text = lx + \"{ \" + option.text;\n            } else {\n              if (value !== undefined) {\n                item.Text = lx + \"{ \" + value;\n              }\n            }\n            if (this.object !== null)\n              this.setState({ newitem: false, items: this.getItems(this.object) });\n          }}>\n        </ComboBox>;\n        return r;\n      }\n    }\n  ];\n\n  private commands = [\n    {\n      key: 'Add',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDNE\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Add'\n      },\n      onClick: (): void => { this.newItem(); }\n    },\n    {\n      key: 'Edit',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDED\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Edit'\n      },\n      onClick: () => { this.editItem(); }\n    },\n    {\n      key: 'Delete',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Delete'\n      },\n      onClick: () => { this.deleteLabel(); }\n    }];\n  private deleteLabel = () => {\n    let item = this.state.label;\n    // let item = this.state.sel.getSelection()[0] as ISemTalkLabel;\n    if (item !== null) {\n      item.Delete();\n      if (this.object) {\n        this.setState({ label: null, items: this.getItems(this.object) });\n      }\n    }\n  }\n  private newItem = (): void => {\n    this.setState({\n      PropMaster: \"\",\n      isattr: false,\n      isdefault: true,\n      PropValue: \"Name\",\n      PropShape: \"Group\",\n      newitem: true,\n    });\n  }\n\n  private editItem = (): void => {\n    let item = this.state.label;\n    if (item !== null) {\n      let lx: string = item.Text;\n      let lpos: string = \" Group\";\n      let idx = lx.indexOf(\"{\");\n      if (idx > -1) {\n        lpos = lx.substr(idx + 2);\n        lx = lx.substr(0, idx);\n      }\n      if (lx.indexOf(\"(\") > -1) {\n        lx = lx.substr(0, lx.indexOf(\"(\") - 1);\n      }\n      let isattr = (this.state.base.FindAttributeType(lx) !== null);\n      let isdefault = !isattr && (this.state.base.FindAssociationType(lx) === null);\n      this.setState({\n        newitem: true,\n        isattr: isattr,\n        isdefault: isdefault,\n        PropMaster: item.Master,\n        PropValue: lx,\n        PropShape: lpos,\n      });\n    }\n  }\n  private cancelnew = (): void => {\n    this.setState({ newitem: false });\n  }\n  private addnewitem = (): void => {\n    let item = this.state.label;\n    if (item !== null) {\n      item.Delete();\n    }\n    if (this.object !== null) {\n      let txt = this.state.PropValue + \"{ \" + this.state.PropShape;\n      this.object.MakeLabel(txt, this.state.PropMaster);\n      this.setState({ label: null, newitem: false, attrs: [], items: this.getItems(this.object) });\n    }\n  }\n\n  private _onTypeChange = (ev: any, option: any): void => {\n    this.setState({ isattr: (option.key === \"A\"), isdefault: (option.key === \"C\") });\n  }\n\n  private layoutName = (s: string): string => {\n    let r = s;\n    switch (s) {\n      case \"Name\": { r = this.props.semtalk.getResStrListener(\"STRDLGNAM\"); break; } // \"Name\"\n      case \"Class\": { r = this.props.semtalk.getResStrListener(\"STRDLGDIAGDCLASS\"); break; } // \"Klasse\"\n      case \"SuperClass\": { r = this.props.semtalk.getResStrListener(\"STRDLGEXPSUP\"); break; } // \"Oberklasse\"\n      case \"SubClass\": { r = this.props.semtalk.getResStrListener(\"STRDLGEXPSUB\"); break; } // \"Unterklasse\"\n      case \"FullName\": { r = this.props.semtalk.getResStrListener(\"STRDLGLNNSP\"); break; } // \"\"Name mit Namespace\"\n      case \"Synonyms\": { r = this.props.semtalk.getResStrListener(\"Synonyms\"); break; } // \"Synonyme\"\n      case \"Attributes\": { r = this.props.semtalk.getResStrListener(\"STRDLGTABATT\"); break; } // \"Attribute\"\n      case \"Methods\": { r = this.props.semtalk.getResStrListener(\"STRDLGTABMET\"); break; } // \"Methoden\"\n      case \"States\": { r = this.props.semtalk.getResStrListener(\"STRDLGTABSTA\"); break; } // \"Zustände\"\n      case \"Comment\": { r = this.props.semtalk.getResStrListener(\"STRDLGCOM\"); break; } // \"Kommentar\"\n      case \"Links\": { r = this.props.semtalk.getResStrListener(\"STRDLGLIN\"); break; } // \"Dokumente\"\n      case \"PostCondition\": { r = this.props.semtalk.getResStrListener(\"STRDLGLPOST\"); break; } // \"Nachbedingung\"\n      case \"UserNumberAtFront\": { r = this.props.semtalk.getResStrListener(\"STRDLGUNUMBERATFRONT\"); break; } // \"Nachbedingung\"\n      case \"NameAndUserNumber\": { r = this.props.semtalk.getResStrListener(\"STRNAMEANDUSERNUMBER\"); break; } // \"Nachbedingung\"\n      case \"UserNumberAndName\": { r = this.props.semtalk.getResStrListener(\"STRUSERNUMBERANDNAME\"); break; } // \"Nachbedingung\"\n      default: {\n        let obj: ISemTalkNamedThing | null = this.state.base.FindAttributeType(s);\n        if (obj !== null) r = obj.ID2NameNsp();\n        if (obj === null) obj = this.state.base.FindAssociationType(s);\n        if (obj !== null) r = obj.ID2NameNsp();\n      }\n    }\n    return r.replace(\":\", \"\");\n  }\n\n  public render(): React.ReactElement<ISemTalkLabelsTabProps> {\n    let startoption = \"A\";\n    if (!this.state.isattr) {\n      if (!this.state.isdefault) {\n        startoption = \"B\";\n      } else {\n        startoption = \"C\";\n      }\n    }\n\n    let r: React.ReactElement<ISemTalkLabelsTabProps>;\n    const stackTokens = { childrenGap: 10 };\n    r = <Fabric>\n      <div id=\"stLabelsTest\" className={styles.semTalkLabel}><div className={styles.pivottab}></div></div>\n      <Stack tokens={stackTokens}>\n        <Checkbox id=\"checkbox1\" label={this.props.semtalk.getResStrListener(\"STRDLGCLLAYOUTSHOWLBL\")} checked={this.state.ShowLabel}\n          onChange={(ev: any, isChecked: boolean | undefined) => {\n            if (this.object && isChecked !== undefined) {\n              this.object.ShowLabel = isChecked;\n              this.setState({ ShowLabel: isChecked });\n            }\n          }}></Checkbox>\n        <Checkbox id=\"checkbox2\" label={this.props.semtalk.getResStrListener(\"STRDLGLCLSA\")} checked={this.state.ShowAname}\n          onChange={(ev: any, isChecked: boolean | undefined) => {\n            if (this.object && isChecked !== undefined) {\n              this.object.ShowAname = isChecked;\n              this.setState({ ShowAname: isChecked });\n            }\n          }}></Checkbox>\n      </Stack>\n      <div className={styles.semTalkLabel}><div className={styles.pivottab}></div></div>\n      <CommandBar id=\"STButtons\"\n        items={this.commands}\n      ></CommandBar>\n      <div className={styles.semTalkLabel}><div className={styles.pivottab}></div></div>\n      {this.state.newitem &&\n        <div>\n          <Stack tokens={stackTokens}>\n            <ComboBox id=\"masterCombobox\" text={this.state.PropMaster}\n              options={this.masters}\n              allowFreeform\n              label={this.props.semtalk.getResStrListener(\"STRDLGMASTER\")}\n              onChange={(event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\n                let mst: string = \"\";\n                if (option !== undefined) {\n                  mst = option.text;\n                } else {\n                  if (value !== undefined) {\n                    mst = value;\n                  }\n                }\n                if (this.object !== null)\n                  this.setState({ PropMaster: mst });\n              }}>\n            </ComboBox>\n            <ChoiceGroup id=\"choices\" defaultSelectedKey={startoption} options={this.typeoptions} onChange={this._onTypeChange}\n              required={true} />\n            {this.state.isattr &&\n              <Dropdown id=\"attriDropdown\"\n                label={this.props.semtalk.getResStrListener(\"STRDLGTABATT\")}\n                selectedKey={this.state.PropValue}\n                required\n                // selectedKey={this.newitem.type}\n                options={this.attroptions}\n                onChange={(ev, a) => {\n                  if (a !== undefined) {\n                    this.setState({ PropValue: a.key as string });\n                  }\n                }}\n              />\n            }\n            {this.state.isdefault &&\n              <Dropdown id=\"defaultDropdown\"\n                label={this.props.semtalk.getResStrListener(\"STRDLGEXPDEF\")}\n                selectedKey={this.state.PropValue}\n                required\n                // selectedKey={this.newitem.type}\n                options={this.defaultoptions}\n                onChange={(ev, a) => {\n                  if (a !== undefined) {\n                    this.setState({ PropValue: a.key as string });\n                  }\n                }}\n              />\n            }\n            {!this.state.isattr && !this.state.isdefault &&\n              <Dropdown id=\"assoDropdown\"\n                label={this.props.semtalk.getResStrListener(\"STRDLGASSOCAPTION\")}\n                selectedKey={this.state.PropValue}\n                // selectedKey={this.newitem.type}\n                required\n                options={this.assoctypes}\n                onChange={(ev, a) => {\n                  if (a !== undefined) {\n                    this.setState({ PropValue: a.key as string });\n                  }\n                }}\n              />\n            }\n            <ComboBox id=\"shapesCombobox\" text={this.state.PropShape}\n              options={this.shapes}\n              allowFreeform\n              label={this.props.semtalk.getResStrListener(\"STRDLGLSHAPES\")}\n              onChange={(event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\n                let shp: string = \"\";\n                if (option !== undefined) {\n                  shp = option.text;\n                } else {\n                  if (value !== undefined) {\n                    shp = value;\n                  }\n                }\n                if (this.object !== null)\n                  this.setState({ PropShape: shp });\n              }}>\n            </ComboBox>\n          </Stack>\n          <div className={styles.semTalkLabel}><div className={styles.pivottab}></div></div>\n          <DefaultButton id=\"okButton\" disabled={this.state.PropValue.length === 0} text={this.props.semtalk.getResStrListener(\"STRDLGCMDOK\")} onClick={this.addnewitem} />\n          <DefaultButton id=\"cancelButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\n        </div>\n      }\n      {!this.state.newitem &&\n        <div id=\"labelList\">\n          <DetailsList\n            items={this.state.items}\n            compact={true}\n            columns={this._columns}\n            selectionMode={SelectionMode.single}\n            layoutMode={DetailsListLayoutMode.justified}\n            selection={this.state.sel}\n            checkboxVisibility={CheckboxVisibility.hidden}\n            isHeaderVisible={true}\n          />\n        </div>\n      }\n    </Fabric>;\n    return r;\n  }\n}","/* eslint-disable no-useless-concat */\nimport * as React from 'react';\nimport styles from './SemTalkStyle.module.scss';\nimport {\n  TextField, Stack\n} from 'office-ui-fabric-react'; //IStackStyles\n\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { IObjectBase, ISemTalkSystemClass } from \"../../application/tbase/Interface\";\n\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n//import { any } from '@microsoft/sp-webpart-base';\n//import { SetContext } from '../../semtalkportal/restinterface';\nimport { Guid } from \"guid-typescript\";\n// import * as strings from 'SemTalkStrings';\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\n\n\nexport interface ISemTalkStyleTabProps {\n  title?: string;\n  description?: string;\n  semtalk: IVisioRDFS;\n  context?: any;\n}\nexport interface ISemTalkStyleTabState {\n  objectid: number;\n  base: IObjectBase;\n  style: string;\n  html: string;\n}\nexport class SemTalkStyleTab extends React.Component<ISemTalkStyleTabProps, ISemTalkStyleTabState> {\n  private object: ISemTalkSystemClass | null = null;\n  public callback: Guid;\n  // private objectname: string = \"\";\n  constructor(props: ISemTalkStyleTabProps) {\n    super(props);\n    console.debug(\"showStyleTab\");\n    this.callback = Guid.create();\n    this.state = {\n      objectid: -1,\n      base: this.props.semtalk.base,\n      style: \"\",\n      html: \"\",\n    };\n  }\n  private resetState = () => {\n    this.setState({\n      objectid: -1,\n      base: this.props.semtalk.base,\n      style: \"\",\n      html: \"\",\n    });\n  }\n  private mounted: boolean = false;\n\n  public async componentDidMount() {\n    // if (this.props.context && this.props.filter) {\n    //   SetContext(this.props.context, this.props.filter, this.props.token, this.props.service);\n    // }\n    this.mounted = true;\n    let oid: number = getObject();\n    if (oid > 0) {\n      this.loadObject(oid);\n    }\n    addCallBack(this);\n  }\n  public componentWillUnmount() {\n    // if (this.object && this.object.ObjectCaption !== this.objectname) {\n    //   this.props.semtalk.RenameObject(this.object, this.objectname, null);\n    // }\n    removeCallBack(this);\n    this.mounted = false;\n    this.object = null;\n  }\n\n  private loadObject(id: number) {\n    let obj = this.state.base.FindObjectByID(id);\n    if (obj && !this.state.base.IsSystemClass(obj)) {\n      obj = obj.SystemClass();\n    }\n\n    if (this.state.base.IsSystemClass(obj)) {\n      this.object = obj as ISemTalkSystemClass;\n      // this.objectname = this.object.ObjectCaption;\n      let html = this.object.ShapeHTML;\n      if (html.length === 0) {\n        html = '<div style=\"width: ' + \"$Width\" + 'px; white-space:normal;\">' + \"$Group\" + '</div>';\n      }\n      this.setState({\n        objectid: id, style: this.object.Style,\n        html: html\n      });\n    }\n  }\n\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    try {\n      md = JSON.parse(e.data);\n      var mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkNavigationEvent.gotoObject:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n          // this.forceUpdate();\n        }\n        break;\n      case SemTalkNavigationEvent.gotoNode:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n          // this.forceUpdate();\n        }\n        break;\n    }\n  }\n  public render(): React.ReactElement<ISemTalkStyleTabProps> {\n    // let val: any[] = this.getItems();\n    let r: React.ReactElement<ISemTalkStyleTabProps>;\n    const stackTokens = { childrenGap: 10 };\n    r = <Fabric>\n      <div id=\"stStyleTest\" className={styles.semTalkStyle}><div className={styles.pivottab}></div></div>\n      {this.object &&\n        <Stack tokens={stackTokens}>\n          <TextField id=\"styleField\" label={this.props.semtalk.getResStr(\"STRSTYLE\")}\n            multiline rows={5}\n            value={this.state.style}\n            onChange={(_ev, a) => {\n              if (this.object && a !== undefined) {\n                this.object.Style = a;\n                this.setState({ style: a });\n              }\n            }} />\n          <TextField id=\"htmlField\" label={\"HTML\"}\n            multiline rows={5}\n            value={this.state.html}\n            onChange={(_ev, a) => {\n              if (this.object && a !== undefined) {\n                this.object.ShapeHTML = a;\n                this.setState({ html: a });\n              }\n            }} />\n        </Stack>\n      }\n    </Fabric>;\n    return r;\n  }\n}\n","/* eslint-disable react/no-direct-mutation-state */\r\nimport * as React from 'react';\r\nimport styles from './SemTalkSystemClass.module.scss';\r\nimport {\r\n  Checkbox, Stack, TextField\r\n} from 'office-ui-fabric-react';\r\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\n\r\nimport { IObjectBase, ISemTalkSystemClass, ISemTalkInstance } from \"../../application/tbase/Interface\";\r\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\n//import { any } from '@microsoft/sp-webpart-base';\r\n//import { SetContext } from '../../semtalkportal/restinterface';\r\nimport { Guid } from \"guid-typescript\";\r\n///import * as strings from 'SemTalkStrings';\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\r\n\r\nexport interface ISemTalkSystemClassTabProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  context?: any;\r\n  goodlist?: string[];\r\n  badlist?: string[];\r\n}\r\nexport interface ISemTalkSystemClassTabState {\r\n  objectid: number;\r\n  base: IObjectBase;\r\n  object: ISemTalkSystemClass | null;\r\n  Hide: boolean;\r\n  OnceOnly: boolean;\r\n  BottomUp: boolean;\r\n  Composeable: boolean;\r\n  Refineable: boolean;\r\n  HyperlinksEnabled: boolean;\r\n  RefinementOfClass: boolean;\r\n  //  HideInClassDiagram: boolean;\r\n  ContentType: string;\r\n  SharepointGoodlist: string;\r\n}\r\nexport class SemTalkSystemClassTab extends React.Component<ISemTalkSystemClassTabProps, ISemTalkSystemClassTabState> {\r\n  // private _selection: Selection;\r\n  public callback: Guid;\r\n\r\n  constructor(props: ISemTalkSystemClassTabProps) {\r\n    super(props);\r\n    this.callback = Guid.create();\r\n    console.debug(\"showSystemClassTab\");\r\n    let b = this.props.semtalk.base;\r\n    this.state = {\r\n      objectid: -1,\r\n      base: b,\r\n      object: null,\r\n      Hide: false,\r\n      OnceOnly: false,\r\n      BottomUp: false,\r\n      Composeable: false,\r\n      Refineable: false,\r\n      HyperlinksEnabled: false,\r\n      RefinementOfClass: false,\r\n      // HideInClassDiagram: false,\r\n      ContentType: \"\",\r\n      SharepointGoodlist: \"\"\r\n    };\r\n  }\r\n\r\n  private resetState = () => {\r\n    this.setState({\r\n      objectid: -1,\r\n      object: null,\r\n      Hide: false,\r\n      OnceOnly: false,\r\n      BottomUp: false,\r\n      Composeable: false,\r\n      Refineable: false,\r\n      HyperlinksEnabled: false,\r\n      RefinementOfClass: false,\r\n      //  HideInClassDiagram: false,\r\n      ContentType: \"\",\r\n      SharepointGoodlist: \"\"\r\n    });\r\n  }\r\n  private mounted: boolean = false;\r\n\r\n  public async componentDidMount() {\r\n    this.mounted = true;\r\n    let oid: number = getObject();\r\n\r\n    if (oid > 0) {\r\n      this.loadObject(oid);\r\n    }\r\n    addCallBack(this);\r\n  }\r\n  public componentWillUnmount() {\r\n    this.mounted = false;\r\n    removeCallBack(this);\r\n  }\r\n\r\n  private loadObject(id: number) {\r\n    const ob = this.props.semtalk.base;\r\n    let obj = this.state.base.FindObjectByID(id);\r\n    let sc: ISemTalkSystemClass | null = null;\r\n    if (obj !== null && ob.IsInstance(obj)) {\r\n      let ins: ISemTalkInstance = obj as ISemTalkInstance;\r\n      sc = ins.ClassOf().SystemClass();\r\n    } else {\r\n      if (obj !== null) {\r\n        sc = obj.SystemClass();\r\n      }\r\n    }\r\n    obj = sc;\r\n\r\n    // if (!this.state.base.IsSystemClass(obj)) {\r\n    //   return;\r\n    // }\r\n    if (obj !== null) {\r\n      const scl: ISemTalkSystemClass = obj as ISemTalkSystemClass;\r\n      this.setState({\r\n        objectid: id, object: scl,\r\n        Hide: scl.Hide,\r\n        OnceOnly: scl.OnceOnly,\r\n        BottomUp: scl.BottomUp,\r\n        Composeable: scl.Composeable,\r\n        Refineable: scl.Refineable,\r\n        HyperlinksEnabled: (scl.InstDialog) ? scl.InstDialog.CheckAttachments : false,\r\n        RefinementOfClass: scl.RefinementOfClass,\r\n        //  HideInClassDiagram: scl.Hide,\r\n        ContentType: \"\",\r\n        SharepointGoodlist: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoObject:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  public render(): React.ReactElement<ISemTalkSystemClassTabProps> {\r\n    // let val: any[] = this.getItems();\r\n    let r: React.ReactElement<ISemTalkSystemClassTabProps>;\r\n    // this._selection = new Selection({\r\n    // });\r\n    // const dropdownStyles: Partial<IDropdownStyles> = {\r\n    //   dropdown: { width: 150 },\r\n    // };\r\n    const stackTokens = { childrenGap: 10 };\r\n    r = <Fabric>\r\n      {/* <div className={styles.semTalkSystemClass}><div className={styles.pivottab}></div></div> */}\r\n      <div id=\"stSystemClassTest\"></div>\r\n      {this.state.object &&\r\n        <Stack tokens={stackTokens}>\r\n          {/* <div className={styles.semTalkSystemClass}><div className={styles.pivottab}></div></div> */}\r\n          {this.state.object &&\r\n            <div>\r\n              <Stack tokens={stackTokens}>\r\n                <div className={styles.semTalkSystemClass}><div className={styles.pivottab}></div></div>\r\n                <Checkbox id=\"checkbox1\" checked={this.state.OnceOnly} label={this.props.semtalk.getResStr(\"STRONCEONLY\")}\r\n                  onChange={(ev: any, isChecked: boolean | undefined) => {\r\n                    if (isChecked !== undefined) {\r\n                      if (this.state.object) this.state.object.OnceOnly = isChecked;\r\n                      this.setState({ OnceOnly: isChecked });\r\n                    }\r\n                  }}></Checkbox>\r\n                <Checkbox id=\"checkbox2\" checked={this.state.BottomUp} label={this.props.semtalk.getResStr(\"STRBOTTOMUP\")}\r\n                  onChange={(ev: any, isChecked: boolean | undefined) => {\r\n                    if (isChecked !== undefined) {\r\n                      if (this.state.object) this.state.object.BottomUp = isChecked;\r\n                      this.setState({ BottomUp: isChecked });\r\n                    }\r\n                  }}></Checkbox>\r\n                <Checkbox id=\"checkbox3\" checked={this.state.Composeable} label={this.props.semtalk.getResStr(\"STRCOMPOSEABLE\")}\r\n                  onChange={(ev: any, isChecked: boolean | undefined) => {\r\n                    if (isChecked !== undefined) {\r\n                      if (this.state.object) this.state.object.Composeable = isChecked;\r\n                      this.setState({ Composeable: isChecked });\r\n                    }\r\n                  }}></Checkbox>\r\n                <Checkbox id=\"checkbox4\" checked={this.state.Refineable} label={this.props.semtalk.getResStr(\"STRREFINABLE\")}\r\n                  onChange={(ev: any, isChecked: boolean | undefined) => {\r\n                    if (isChecked !== undefined) {\r\n                      if (this.state.object) this.state.object.Refineable = isChecked;\r\n                      this.setState({ Refineable: isChecked });\r\n                    }\r\n                  }}></Checkbox>\r\n                <Checkbox id=\"checkbox5\" checked={this.state.HyperlinksEnabled} label={this.props.semtalk.getResStr(\"STRHYPERLINKS\")}\r\n                  onChange={(ev: any, isChecked: boolean | undefined) => {\r\n                    if (isChecked !== undefined) {\r\n                      if (this.state.object && this.state.object.InstDialog) this.state.object.InstDialog.CheckAttachments = isChecked;\r\n                      this.setState({ HyperlinksEnabled: isChecked });\r\n                    }\r\n                  }}></Checkbox>\r\n                <Checkbox id=\"checkbox6\" checked={this.state.Hide} label={this.props.semtalk.getResStrListener(\"STRDLGHIDE\")}\r\n                  onChange={(ev: any, isChecked: boolean | undefined) => {\r\n                    if (isChecked !== undefined) {\r\n                      if (this.state.object) this.state.object.Hide = isChecked;\r\n                      this.setState({ Hide: isChecked });\r\n                    }\r\n                  }}></Checkbox>\r\n                <TextField id=\"linkField\" label={this.props.semtalk.getResStrListener(\"STRLINKTOLIST\")} value={this.state.object.SharepointGoodlist} />\r\n\r\n              </Stack>\r\n            </div>\r\n          }\r\n\r\n        </Stack>\r\n      }\r\n    </Fabric >;\r\n    return r;\r\n  }\r\n}","import * as React from 'react';\nimport styles from './SemTalkAssociationType.module.scss';\nimport {\n  IDropdownOption, Checkbox, Dropdown, Stack,\n  IDropdownStyles, IChoiceGroupOption, ChoiceGroup,\n  TextField\n} from 'office-ui-fabric-react';\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\n\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\n\nimport { IObjectBase, ISemTalkAssociationType, SemTalkConnectionPoint, SemTalkType } from \"../../application/tbase/Interface\";\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n//import { any } from '@microsoft/sp-webpart-base';\n//import { SetContext } from '../../semtalkportal/restinterface';\nimport { Guid } from \"guid-typescript\";\n///import * as strings from 'SemTalkStrings';\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\n\nexport interface ISemTalkAssociationTypeTabProps {\n  title?: string;\n  description?: string;\n  semtalk: IVisioRDFS;\n  context?: any;\n  goodlist?: string[];\n  badlist?: string[];\n}\nexport interface ISemTalkAssociationTypeTabState {\n  objectid: number;\n  base: IObjectBase;\n  object: ISemTalkAssociationType | null;\n  Symmetric: boolean;\n  Transitiv: boolean;\n  Cyclic: boolean;\n  UniqueModel: boolean;\n  Unique: boolean;\n  Aggregate: boolean;\n  Composition: boolean;\n  IsContainer: boolean;\n  Expandable: boolean;\n  AllowFreeForm: boolean;\n  fromcon: SemTalkConnectionPoint;\n  tocon: SemTalkConnectionPoint;\n  fromtype: SemTalkType;\n  totype: SemTalkType;\n  AType: string;\n  invname: string;\n}\nexport class SemTalkAssociationTypeTab extends React.Component<ISemTalkAssociationTypeTabProps, ISemTalkAssociationTypeTabState> {\n  // private _selection: Selection;\n  private connections: IDropdownOption[] = [];\n  private types: IDropdownOption[] = [];\n  public callback: Guid;\n  private umloptions: IChoiceGroupOption[];\n\n  constructor(props: ISemTalkAssociationTypeTabProps) {\n    super(props);\n    this.callback = Guid.create();\n    console.debug(\"showAssociationTypeTab\");\n    let b = this.props.semtalk.base;\n    this.connections.push({ key: SemTalkConnectionPoint.North, text: b.SemTalkConnectionPointName(SemTalkConnectionPoint.North) });\n    this.connections.push({ key: SemTalkConnectionPoint.East, text: b.SemTalkConnectionPointName(SemTalkConnectionPoint.East) });\n    this.connections.push({ key: SemTalkConnectionPoint.South, text: b.SemTalkConnectionPointName(SemTalkConnectionPoint.South) });\n    this.connections.push({ key: SemTalkConnectionPoint.West, text: b.SemTalkConnectionPointName(SemTalkConnectionPoint.West) });\n    this.types.push({ key: SemTalkType.SemTalkInstance, text: b.SemTalkTypeName(SemTalkType.SemTalkInstance) });\n    this.types.push({ key: SemTalkType.SemTalkClass, text: b.SemTalkTypeName(SemTalkType.SemTalkClass) });\n    this.umloptions = [\n      { key: 'A', text: this.props.semtalk.getResStrListener(\"STRDLGASSOCAPTION\") },\n      { key: 'B', text: this.props.semtalk.getResStrListener(\"STRDLGRELTYPEAGGRE\") },\n      { key: 'C', text: \"Composition\" },\n    ];\n    this.state = {\n      objectid: -1,\n      base: b,\n      object: null,\n      Symmetric: false,\n      Transitiv: false,\n      Cyclic: false,\n      UniqueModel: false,\n      Unique: false,\n      Aggregate: false,\n      Composition: false,\n      IsContainer: false,\n      Expandable: true,\n      AllowFreeForm: false,\n      fromcon: SemTalkConnectionPoint.South,\n      tocon: SemTalkConnectionPoint.North,\n      fromtype: SemTalkType.SemTalkInstance,\n      totype: SemTalkType.SemTalkInstance,\n      AType: \"A\",\n      invname: \"\"\n    };\n  }\n  private _onUMLChange = (_ev: any, option: IChoiceGroupOption | undefined) => {\n    if (option !== undefined) {\n      let obj = this.state.object;\n      switch (option.key) {\n        case \"A\": {\n          if (obj) obj.IsCompositionAssociation = false;\n          if (obj) obj.IsAggregation = false;\n          this.setState({ Composition: false, Aggregate: false });\n          break;\n        }\n        case \"B\": {\n          if (obj) obj.IsCompositionAssociation = false;\n          if (obj) obj.IsAggregation = true;\n          this.setState({\n            Composition: false, Aggregate: true,\n            Cyclic: true, Symmetric: false\n          });\n          break;\n        }\n        case \"C\": {\n          if (obj) obj.IsCompositionAssociation = true;\n          if (obj) obj.IsAggregation = false;\n          this.setState({ Composition: true, Aggregate: false });\n          break;\n        }\n      }\n    }\n  }\n  private resetState = () => {\n    this.setState({\n      objectid: -1,\n      object: null,\n      Symmetric: false,\n      Transitiv: false,\n      Cyclic: false,\n      UniqueModel: false,\n      Unique: false,\n      Aggregate: false,\n      Composition: false,\n      IsContainer: false,\n      fromcon: SemTalkConnectionPoint.South,\n      tocon: SemTalkConnectionPoint.North,\n      fromtype: SemTalkType.SemTalkInstance,\n      totype: SemTalkType.SemTalkInstance,\n      AType: \"A\",\n      invname: \"\"\n    });\n  }\n  private mounted: boolean = false;\n\n  public async componentDidMount() {\n    this.mounted = true;\n    let oid: number = getObject();\n\n    if (oid > 0) {\n      this.loadObject(oid);\n    }\n    addCallBack(this);\n  }\n  public componentWillUnmount() {\n    this.mounted = false;\n    removeCallBack(this);\n  }\n\n  private loadObject(id: number) {\n    let obj = this.state.base.FindObjectByID(id);\n    if (!this.state.base.IsAssociationType(obj)) {\n      return;\n    }\n    if (obj !== null) {\n      const ass: ISemTalkAssociationType = obj as ISemTalkAssociationType;\n      let atype = \"A\";\n      if (ass.IsAggregation) atype = \"B\";\n      if (ass.IsCompositionAssociation) atype = \"C\";\n      this.setState({\n        objectid: id, object: ass,\n        Symmetric: ass.Symmetric,\n        Transitiv: ass.Transitiv,\n        Cyclic: ass.Cyclic,\n        UniqueModel: ass.UniqueModel,\n        Unique: ass.Unique,\n        Aggregate: ass.IsAggregation,\n        Composition: ass.IsCompositionAssociation,\n        IsContainer: ass.IsContainer,\n        fromcon: ass.FromConnection,\n        tocon: ass.ToConnection,\n        fromtype: ass.FromType,\n        totype: ass.ToType,\n        invname: ass.InvName,\n        AType: atype\n      });\n    }\n  }\n\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    try {\n      md = JSON.parse(e.data);\n      var mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkNavigationEvent.gotoObject:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n      case SemTalkNavigationEvent.gotoNode:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n    }\n  }\n  public render(): React.ReactElement<ISemTalkAssociationTypeTabProps> {\n    // let val: any[] = this.getItems();\n    let r: React.ReactElement<ISemTalkAssociationTypeTabProps>;\n    // this._selection = new Selection({\n    // });\n    const dropdownStyles: Partial<IDropdownStyles> = {\n      dropdown: { width: 150 },\n    };\n    const stackTokens = { childrenGap: 10 };\n    let obj = this.state.object;\n    r = <Fabric>\n      <div id=\"stAssociationTypeTest\" className={styles.semTalkAssociationType}><div className={styles.pivottab}></div></div>\n      {obj &&\n        <Stack>\n          <TextField id=\"invNameField\" value={this.state.invname} label={this.props.semtalk.getResStrListener(\"STRDLGRELTYPEINVN\")} onChange={(_ev, a) => {\n            if (a !== undefined && obj) {\n              obj.InvName = a;\n              this.setState({ invname: a });\n            }\n          }}></TextField>\n          <div className={styles.semTalkAssociationType}><div className={styles.pivottab}></div></div>\n          <Stack tokens={stackTokens} horizontal={true}>\n            <Dropdown id=\"fromTypeDropdown\" label={\"From Type\"}\n              options={this.types} styles={dropdownStyles}\n              defaultSelectedKey={this.state.fromtype}\n              onChange={(_ev, a) => {\n                if (a !== undefined && obj) {\n                  obj.FromType = Number(a.key);\n                  this.setState({ fromtype: Number(a.key) });\n                }\n              }}></Dropdown>\n            <Dropdown id=\"toTypeDropdown\" label={\"To Type\"}\n              options={this.types} styles={dropdownStyles}\n              defaultSelectedKey={this.state.totype}\n              onChange={(_ev, a) => {\n                if (a !== undefined && obj) {\n                  obj.ToType = Number(a.key);\n                  this.setState({ totype: Number(a.key) });\n                }\n              }}></Dropdown>\n          </Stack>\n\n          <Stack tokens={stackTokens} horizontal={true}>\n            <Dropdown id=\"fromConnector\" label={\"From Connector\"}\n              options={this.connections} styles={dropdownStyles}\n              defaultSelectedKey={this.state.fromcon}\n              onChange={(_ev, a) => {\n                if (a !== undefined && obj) {\n                  obj.FromConnection = Number(a.key);\n                  this.setState({ fromcon: Number(a.key) });\n                }\n              }}></Dropdown>\n            <Dropdown id=\"toConnector\" label={\"To Connector\"}\n              options={this.connections} styles={dropdownStyles}\n              defaultSelectedKey={this.state.tocon}\n              onChange={(_ev, a) => {\n                if (a !== undefined && obj) {\n                  obj.ToConnection = Number(a.key);\n                  this.setState({ tocon: Number(a.key) });\n                }\n              }}></Dropdown>\n          </Stack>\n          <div className={styles.semTalkAssociationType}><div className={styles.pivottab}></div></div>\n          {obj &&\n            <Stack tokens={stackTokens}>\n              <ChoiceGroup id=\"umlTypeChoices\" defaultSelectedKey={this.state.AType} options={this.umloptions} onChange={this._onUMLChange} label=\"UML Type\" required={true} />\n              <div className={styles.semTalkAssociationType}><div className={styles.pivottab}></div></div>\n              <Checkbox id=\"symmetricCheckbox\" checked={this.state.Symmetric} label={this.props.semtalk.getResStrListener(\"STRDLGRELTYPESYMET\")}\n                onChange={(_ev: any, isChecked: boolean | undefined) => {\n                  if (isChecked !== undefined) {\n                    if (obj) obj.Symmetric = isChecked;\n                    this.setState({ Symmetric: isChecked });\n                  }\n                }}></Checkbox>\n              <Checkbox id=\"transitiveCheckbox\" checked={this.state.Transitiv} label={this.props.semtalk.getResStrListener(\"STRDLGRELTYPETRANS\")}\n                onChange={(_ev: any, isChecked: boolean | undefined) => {\n                  if (isChecked !== undefined) {\n                    if (obj) obj.Transitiv = isChecked;\n                    this.setState({ Transitiv: isChecked });\n                  }\n                }}></Checkbox>\n              <Checkbox id=\"treeCheckbox\" checked={this.state.Cyclic} label={this.props.semtalk.getResStrListener(\"STRDLGRELTYPECYCLE\")}\n                onChange={(_ev: any, isChecked: boolean | undefined) => {\n                  if (isChecked !== undefined) {\n                    if (obj) obj.Cyclic = isChecked;\n                    this.setState({ Cyclic: isChecked });\n                  }\n                }}></Checkbox>\n              <Checkbox id=\"multipleCheckbox\" checked={this.state.UniqueModel} label={this.props.semtalk.getResStrListener(\"STRDLGRELTYPEMULTI\")}\n                onChange={(_ev: any, isChecked: boolean | undefined) => {\n                  if (isChecked !== undefined) {\n                    if (obj) obj.UniqueModel = isChecked;\n                    this.setState({ UniqueModel: isChecked });\n                  }\n                }}></Checkbox>\n              <Checkbox id=\"uniqueCheckbox\" checked={this.state.Unique} label={this.props.semtalk.getResStrListener(\"STRDLGRELTYPEUNIQUE\")}\n                onChange={(_ev: any, isChecked: boolean | undefined) => {\n                  if (isChecked !== undefined) {\n                    if (obj) obj.Unique = isChecked;\n                    this.setState({ Unique: isChecked });\n                  }\n                }}></Checkbox>\n              <Checkbox id=\"containerCheckbox\" checked={this.state.IsContainer} label={this.props.semtalk.getResStrListener(\"STRDLGRELTYPECONT\")}\n                onChange={(_ev: any, isChecked: boolean | undefined) => {\n                  if (isChecked !== undefined) {\n                    if (obj) obj.IsContainer = isChecked;\n                    this.setState({ IsContainer: isChecked });\n                  }\n                }}></Checkbox>\n              <Checkbox id=\"expandCheckbox\" checked={this.state.Expandable} label={this.props.semtalk.getResStrListener(\"STRDLGEXPCAPTION\")}\n                onChange={(_ev: any, isChecked: boolean | undefined) => {\n                  if (isChecked !== undefined) {\n                    if (obj) obj.Expandable = isChecked;\n                    this.setState({ Expandable: isChecked });\n                  }\n                }}></Checkbox>\n              <Checkbox id=\"freeFormCheckbox\" checked={this.state.AllowFreeForm} label={this.props.semtalk.getResStrListener(\"STRDLGALLOWFREEFORMATTR\")}\n                onChange={(_ev: any, isChecked: boolean | undefined) => {\n                  if (isChecked !== undefined) {\n                    if (obj) obj.AllowFreeForm = isChecked;\n                    this.setState({ AllowFreeForm: isChecked });\n                  }\n                }}></Checkbox>\n              {/*             <Checkbox checked={this.state.Aggregate} label={this.props.semtalk.getResStrListener(\"STRDLGRELTYPEAGGRE\")}\n                onChange={(ev: React.FormEvent<HTMLElement>, isChecked: boolean) => {\n                  if (obj) obj.IsAggregation = isChecked;\n                  if (obj) obj.IsCompositionAssociation = false;\n                  this.setState({ Aggregate: isChecked, Composition: false });\n                }}></Checkbox>\n              <Checkbox checked={this.state.Composition} label={this.props.semtalk.getResStrListener(\"STRDLGRELTYPEAGGRE\")}\n                onChange={(ev: React.FormEvent<HTMLElement>, isChecked: boolean) => {\n                  if (obj) obj.IsCompositionAssociation = isChecked;\n                  if (obj) obj.IsAggregation = false;\n                  this.setState({ Composition: isChecked, Aggregate: false });\n                }}></Checkbox> */}\n            </Stack>\n          }\n        </Stack>\n      }\n    </Fabric>;\n    return r;\n  }\n}","/* eslint-disable react/no-direct-mutation-state */\nimport * as React from 'react';\nimport styles from './SemTalkAttributeType.module.scss';\nimport {\n  IDropdownOption, Checkbox, Dropdown, Stack,\n  TextField\n} from 'office-ui-fabric-react';\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\n\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\n\nimport { IObjectBase, ISemTalkAttributeType, SemTalkValueType } from \"../../application/tbase/Interface\";\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n// import { any } from '@microsoft/sp-webpart-base';\n//import { SetContext } from '../../semtalkportal/restinterface';\nimport { Guid } from \"guid-typescript\";\n///import * as strings from 'SemTalkStrings';\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\n\nexport interface ISemTalkAttributeTypeTabProps {\n  title?: string;\n  description?: string;\n  semtalk: IVisioRDFS;\n  context?: any;\n  goodlist?: string[];\n  badlist?: string[];\n}\nexport interface ISemTalkAttributeTypeTabState {\n  objectid: number;\n  base: IObjectBase;\n  object: ISemTalkAttributeType | null;\n  Value: any;\n  Values: string[];\n  Options: string;\n  ValueType: SemTalkValueType;\n  IsList: boolean;\n  Min: number | null;\n  Max: number | null;\n  SyncVisio: boolean;\n  Raise: boolean;\n  required: boolean;\n  allowfreeform: boolean;\n  group: string;\n  weight: number;\n}\nexport class SemTalkAttributeTypeTab extends React.Component<ISemTalkAttributeTypeTabProps, ISemTalkAttributeTypeTabState> {\n  // private _selection: Selection;\n  public callback: Guid;\n\n  constructor(props: ISemTalkAttributeTypeTabProps) {\n    super(props);\n    this.callback = Guid.create();\n    console.debug(\"showAttributeTypeTab\");\n    let b = this.props.semtalk.base;\n    this.state = {\n      objectid: -1,\n      base: b,\n      object: null,\n      Value: \"\",\n      Values: [],\n      Options: \"\",\n      ValueType: SemTalkValueType.Symbol,\n      IsList: false,\n      Min: 0,\n      Max: 100,\n      SyncVisio: false,\n      Raise: true,\n      required: false,\n      allowfreeform: true,\n      group: \"\",\n      weight: 0\n    };\n  }\n\n  private resetState = () => {\n    this.setState({\n      objectid: -1,\n      object: null,\n      Value: \"\",\n      Values: [],\n      Options: \"\",\n      ValueType: SemTalkValueType.Symbol,\n      IsList: false,\n      Min: 0,\n      Max: 100,\n      SyncVisio: false,\n      Raise: true,\n      required: false,\n      allowfreeform: true,\n      group: \"\",\n      weight: 0\n    });\n  }\n  private mounted: boolean = false;\n\n  public async componentDidMount() {\n    this.mounted = true;\n    let oid: number = getObject();\n\n    if (oid > 0) {\n      this.loadObject(oid);\n    }\n    addCallBack(this);\n  }\n  public componentWillUnmount() {\n    this.mounted = false;\n    removeCallBack(this);\n  }\n\n  private loadObject(id: number) {\n    let obj = this.state.base.FindObjectByID(id);\n    if (!this.state.base.IsAttributeType(obj)) {\n      return;\n    }\n    if (obj !== null) {\n      const att: ISemTalkAttributeType = obj as ISemTalkAttributeType;\n      let opt = \"\";\n      for (const vv of att.Options) {\n        opt = opt + vv + \"; \";\n      }\n      let v = att.Value;\n      if (v === undefined) {\n        v = \"\";\n      }\n      if (opt.length > 0) { opt = opt.substr(0, opt.length - 2); }\n      console.log(\"Load \" + v);\n      this.setState({\n        objectid: id, object: att,\n        Value: v,\n        Values: att.Values,\n        Options: opt,\n        ValueType: att.ValueType,\n        IsList: att.IsList,\n        Min: att.Min,\n        Max: att.Max,\n        SyncVisio: att.SyncVisio,\n        Raise: att.Raise,\n        required: att.Required,\n        allowfreeform: att.AllowFreeForm,\n        group: att.Group,\n        weight: att.Weight\n      });\n    }\n  }\n\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    try {\n      md = JSON.parse(e.data);\n      var mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkNavigationEvent.gotoObject:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n      case SemTalkNavigationEvent.gotoNode:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n    }\n  }\n  private types: IDropdownOption[] = [\n    { key: SemTalkValueType.Symbol, text: 'String' },\n    // { key: SemTalkValueType.File, text: 'File' },\n    { key: SemTalkValueType.Date, text: 'Date' },\n    { key: SemTalkValueType.Duration, text: 'Duration' },\n    { key: SemTalkValueType.Float, text: 'Float' },\n    { key: SemTalkValueType.Integer, text: 'Integer' },\n    { key: SemTalkValueType.Boolean, text: 'Boolean' },\n    { key: SemTalkValueType.Color, text: 'Color' },\n    { key: SemTalkValueType.Email, text: 'Email' },\n    { key: SemTalkValueType.Password, text: 'Password' },\n    { key: SemTalkValueType.URL, text: 'URL' },\n    { key: SemTalkValueType.Tel, text: 'Tel' },\n    { key: SemTalkValueType.Script, text: 'Script' },\n  ];\n  private selectType = (a: IDropdownOption) => {\n    if (this.state.object) {\n      this.state.object.ValueType = a.key as SemTalkValueType;\n      this.setState({ ValueType: this.state.object.ValueType });\n    }\n  }\n  public render(): React.ReactElement<ISemTalkAttributeTypeTabProps> {\n    // let val: any[] = this.getItems();\n    let r: React.ReactElement<ISemTalkAttributeTypeTabProps>;\n    // this._selection = new Selection({\n    // });\n    const stackTokens = { childrenGap: 10 };\n    r = <Fabric>\n      <div id=\"stAttributeTypeTest\" className={styles.semTalkAttributeType}><div className={styles.pivottab}></div></div>\n      {this.state.object &&\n        <Stack tokens={stackTokens}>\n          <TextField id=\"valueField\" value={String(this.state.Value)}\n            label={this.props.semtalk.getResStrListener(\"STRDLGEAVALUE\")}\n            multiline={this.state.ValueType === SemTalkValueType.Symbol}\n            onChange={(_ev, a) => {\n              if (a !== undefined && this.state.object) {\n                this.state.object.Value = a;\n                this.setState({ Value: a });\n              }\n            }}></TextField>\n\n          <Dropdown id=\"typeDropdown\"\n            label={this.props.semtalk.getResStrListener(\"STRDLGEATYPE\")}\n            selectedKey={this.state.ValueType}\n            // selectedKey={this.newitem.type}\n            options={this.types}\n            onChange={(_ev, a) => {\n              if (a !== undefined)\n                this.selectType(a);\n            }}\n          />\n          {(this.state.ValueType === SemTalkValueType.Integer || this.state.ValueType === SemTalkValueType.Float) &&\n            <Stack horizontal={true} tokens={stackTokens}>\n              <TextField id=\"minField\" type=\"number\" value={String(this.state.Min)} label={this.props.semtalk.getResStrListener(\"STRDLGOWLMIN\")} onChange={(_ev, a) => {\n                if (this.state.object) {\n                  if (a !== undefined) {\n                    this.state.object.Min = Number(a);\n                    this.setState({ Min: Number(a) });\n                  }\n                  else\n                    this.state.object.Min = 0;\n                }\n              }}></TextField>\n              <TextField id=\"maxField\" type=\"number\" value={String(this.state.Max)} label={this.props.semtalk.getResStrListener(\"STRDLGOWLMAX\")} onChange={(_ev, a) => {\n                if (this.state.object) {\n                  if (a !== undefined) {\n                    this.state.object.Max = Number(a);\n                    this.setState({ Max: Number(a) });\n                  }\n                  else\n                    this.state.object.Min = 0;\n                }\n              }}></TextField>\n            </Stack>\n          }\n          {this.state.ValueType === SemTalkValueType.Symbol && <TextField value={this.state.Options} label={this.props.semtalk.getResStrListener(\"STRDLGEACMDOPT\")} onChange={(_ev, a) => {\n            if (this.state.object) {\n              if (a !== undefined) {\n                if (a.length > 0) {\n                  this.state.object.Options = a.split(\"; \");\n                } else {\n                  this.state.object.Options = [];\n                }\n                this.setState({ Options: a });\n              }\n            }\n          }}></TextField>}\n          <Checkbox id=\"requiredCheckbox\" checked={this.state.required} label={this.props.semtalk.getResStrListener(\"STRDLGREQUIREDATTR\")}\n            onChange={(_ev: any, isChecked: boolean | undefined) => {\n              if (this.state.object && isChecked !== undefined) {\n                this.state.object.Required = isChecked;\n                this.setState({ required: isChecked });\n              }\n            }}></Checkbox>\n          {this.state.ValueType === SemTalkValueType.Symbol && <Checkbox checked={this.state.allowfreeform} label={this.props.semtalk.getResStrListener(\"STRDLGALLOWFREEFORMATTR\")}\n            onChange={(_ev: any, isChecked: boolean | undefined) => {\n              if (this.state.object && isChecked !== undefined) {\n                this.state.object.AllowFreeForm = isChecked;\n                this.setState({ allowfreeform: isChecked });\n              }\n            }}></Checkbox>}\n          <TextField id=\"groupField\" value={this.state.group} label={this.props.semtalk.getResStrListener(\"STRDLGCLLAYOUTATTRGRP\")} onChange={(_ev, a) => {\n            if (this.state.object) {\n              if (a !== undefined) {\n                this.state.object.Group = a;\n                this.setState({ group: a });\n              }\n            }\n          }}></TextField>\n          <TextField id=\"weightField\" type=\"number\" min=\"0\" max=\"10000\" value={String(this.state.weight)} label={this.props.semtalk.getResStrListener(\"STRDLGCLLAYOUTWEIGHT\")} onChange={(_ev, a) => {\n            if (this.state.object) {\n              if (a !== undefined) {\n                this.state.object.Weight = Number(a);\n                this.setState({ weight: Number(a) });\n              }\n            }\n          }}></TextField>\n        </Stack>\n      }\n    </Fabric>;\n    return r;\n  }\n}","/* eslint-disable react/no-direct-mutation-state */\nimport * as React from 'react';\nimport styles from './SemTalkDiagramType.module.scss';\nimport {\n  IDropdownOption, Checkbox, Dropdown, Stack, TextField\n} from 'office-ui-fabric-react';\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\n\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\n\nimport { IObjectBase, ISemTalkDiagramType, ISemTalkSystemClass } from \"../../application/tbase/Interface\";\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n//import { any } from '@microsoft/sp-webpart-base';\n//import { SetContext } from '../../semtalkportal/restinterface';\nimport { Guid } from \"guid-typescript\";\n///import * as strings from 'SemTalkStrings';\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\n\nexport interface ISemTalkDiagramTypeTabProps {\n  title?: string;\n  description?: string;\n  semtalk: IVisioRDFS;\n  context?: any;\n  goodlist?: string[];\n  badlist?: string[];\n}\nexport interface ISemTalkDiagramTypeTabState {\n  objectid: number;\n  base: IObjectBase;\n  object: ISemTalkDiagramType | null;\n  IsClass: boolean;\n  Root: string;\n  InstanceRoot: string;\n  NewSLRoot: string;\n  UseInheritanceRelations: boolean;\n  UseAllRelationsOfSubclasses: boolean;\n  Auto: boolean;\n  Stencil: string;\n  Prefix: string;\n  UMLShape: boolean;\n\n}\ninterface ISystemClassDropDownOption extends IDropdownOption {\n  SystemClass: ISemTalkSystemClass | null;\n}\nexport class SemTalkDiagramTypeTab extends React.Component<ISemTalkDiagramTypeTabProps, ISemTalkDiagramTypeTabState> {\n  // private _selection: Selection;\n  public callback: Guid;\n  private sysclasses: ISystemClassDropDownOption[] = [];\n\n  constructor(props: ISemTalkDiagramTypeTabProps) {\n    super(props);\n    this.callback = Guid.create();\n    console.debug(\"showDiagramTypeTab\");\n    let b = this.props.semtalk.base;\n    this.state = {\n      objectid: -1,\n      base: b,\n      object: null,\n      IsClass: true,\n      Root: \"\",\n      InstanceRoot: \"\",\n      NewSLRoot: \"\",\n      UseInheritanceRelations: true,\n      UseAllRelationsOfSubclasses: true,\n      Auto: true,\n      Stencil: \"\",\n      Prefix: \"\",\n      UMLShape: true,\n    };\n  }\n\n  private resetState = () => {\n    this.setState({\n      objectid: -1,\n      object: null,\n      IsClass: true,\n      Root: \"\",\n      InstanceRoot: \"\",\n      NewSLRoot: \"\",\n      UseInheritanceRelations: true,\n      UseAllRelationsOfSubclasses: true,\n      Auto: true,\n      Stencil: \"\",\n      Prefix: \"\",\n      UMLShape: true,\n    });\n  }\n  private mounted: boolean = false;\n\n  public async componentDidMount() {\n    this.mounted = true;\n    let oid: number = getObject();\n    let sysclasses: ISystemClassDropDownOption[] = [{ key: \"\", text: \"\", SystemClass: null }];\n    for (let s of this.state.base.AllSystemClasses()) {\n      sysclasses.push({ key: s.ObjectName, text: s.ObjectCaption, SystemClass: s });\n    }\n    sysclasses.sort((x, y) => x.text.localeCompare(y.text));\n    this.sysclasses = sysclasses;\n\n    if (oid > 0) {\n      this.loadObject(oid);\n    }\n    addCallBack(this);\n  }\n  public componentWillUnmount() {\n    this.mounted = false;\n    removeCallBack(this);\n  }\n\n  private loadObject(id: number) {\n    let obj = this.state.base.FindObjectByID(id);\n    if (!this.state.base.IsDiagramType(obj)) {\n      return;\n    }\n    if (obj !== null) {\n      const dt: ISemTalkDiagramType = obj as ISemTalkDiagramType;\n      let rootname = \"\";\n      if (dt.Root !== null) rootname = dt.Root.ObjectName;\n      let instrootname = \"\";\n      if (dt.InstanceRoot !== null) instrootname = dt.InstanceRoot.ObjectName;\n      let slrootname = \"\";\n      if (dt.NewSLRoot !== null) slrootname = dt.NewSLRoot.ObjectName;\n      let stencil = \"\";\n      if (dt.Stencil !== null) stencil = dt.Stencil;\n      let prefix = \"\";\n      if (dt.Prefix !== null) prefix = dt.Prefix;\n      this.setState({\n        objectid: id, object: dt,\n        IsClass: dt.IsClass,\n        Root: rootname,\n        InstanceRoot: instrootname,\n        NewSLRoot: slrootname,\n        UseInheritanceRelations: dt.UseInheritanceRelations,\n        UseAllRelationsOfSubclasses: dt.UseAllRelationsOfSubclasses,\n        Auto: dt.Auto,\n        Stencil: stencil,\n        Prefix: prefix,\n        UMLShape: true,\n      });\n    }\n  }\n\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    try {\n      md = JSON.parse(e.data);\n      var mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkNavigationEvent.gotoObject:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n      case SemTalkNavigationEvent.gotoNode:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n    }\n  }\n\n  public render(): React.ReactElement<ISemTalkDiagramTypeTabProps> {\n    // let val: any[] = this.getItems();\n    let r: React.ReactElement<ISemTalkDiagramTypeTabProps>;\n    // this._selection = new Selection({\n    // });\n    const stackTokens = { childrenGap: 10 };\n    r = <Fabric>\n      <div id=\"stDiagramTypeTest\" className={styles.semTalkDiagramType}><div className={styles.pivottab}></div></div>\n      {this.state.object &&\n        <Stack tokens={stackTokens}>\n\n\n          <Dropdown id=\"rootClassDD\"\n            label={this.props.semtalk.getResStrListener(\"STRBONROOT\")}\n            selectedKey={this.state.Root}\n            // selectedKey={this.newitem.type}\n            options={this.sysclasses}\n            onChange={(ev, a: any) => {\n              if (a !== undefined && this.state.object)\n                this.state.object.Root = a.SystemClass;\n              this.setState({ Root: a.key as string });\n            }}\n          />\n          <Checkbox id=\"classesCB\" checked={this.state.IsClass} label={this.props.semtalk.getResStrListener(\"STRDLGFINDCLASS\")}\n            onChange={(ev: any, isChecked: boolean | undefined) => {\n              if (this.state.object && isChecked !== undefined) {\n                this.state.object.IsClass = isChecked;\n                this.setState({ IsClass: isChecked });\n              }\n            }}></Checkbox>\n          <Dropdown id=\"instancesDD\" disabled={!this.state.IsClass}\n            label={this.props.semtalk.getResStrListener(\"STRDLGINSERTINST\")}\n            selectedKey={this.state.InstanceRoot}\n            // selectedKey={this.newitem.type}\n            options={this.sysclasses}\n            onChange={(ev: any, a: any) => {\n              if (a !== undefined && this.state.object)\n                this.state.object.InstanceRoot = a.SystemClass;\n              this.setState({ InstanceRoot: a.key as string });\n            }}\n          />\n          <Dropdown id=\"newSwimLaneField\" disabled={this.state.IsClass}\n            label={this.props.semtalk.getResStrListener(\"STRDLGNEWSWIMLANES\")}\n            selectedKey={this.state.NewSLRoot}\n            // selectedKey={this.newitem.type}\n            options={this.sysclasses}\n            onChange={(ev, a: any) => {\n              if (a !== undefined && this.state.object)\n                this.state.object.NewSLRoot = a.SystemClass;\n              this.setState({ NewSLRoot: a.key as string });\n            }}\n          />\n          <Checkbox id=\"inheritanceCB\" disabled={!this.state.IsClass} checked={this.state.UseInheritanceRelations} label={this.props.semtalk.getResStrListener(\"STRDLGINHERITANCE\")}\n            onChange={(ev: any, isChecked: boolean | undefined) => {\n              if (this.state.object && isChecked !== undefined) {\n                this.state.object.UseInheritanceRelations = isChecked;\n                this.setState({ UseInheritanceRelations: isChecked });\n              }\n            }}></Checkbox>\n          <Checkbox id=\"metamodelCB\" disabled={!this.state.IsClass} checked={this.state.UseAllRelationsOfSubclasses} label={this.props.semtalk.getResStrListener(\"STRDLGMMRELATIONS\")}\n            onChange={(ev: any, isChecked: boolean | undefined) => {\n              if (this.state.object && isChecked !== undefined) {\n                this.state.object.UseAllRelationsOfSubclasses = isChecked;\n                this.setState({ UseAllRelationsOfSubclasses: isChecked });\n              }\n            }}></Checkbox>\n          <Checkbox id=\"autoSelCB\" disabled={!this.state.IsClass} checked={this.state.Auto} label={this.props.semtalk.getResStrListener(\"STRDLGAUTO\")}\n            onChange={(ev: any, isChecked: boolean | undefined) => {\n              if (this.state.object && isChecked !== undefined) {\n                this.state.object.Auto = isChecked;\n                this.setState({ Auto: isChecked });\n              }\n            }}></Checkbox>\n          <Checkbox id=\"umlClassCB\" disabled={!this.state.IsClass} checked={this.state.UMLShape} label={this.props.semtalk.getResStrListener(\"STRUMLSHAPE\")}\n            onChange={(ev: any, isChecked: boolean | undefined) => {\n              if (this.state.object && isChecked !== undefined) {\n                this.state.object.UMLShape = isChecked;\n                this.setState({ UMLShape: isChecked });\n              }\n            }}></Checkbox>\n          <TextField id=\"stencilField\" label={this.props.semtalk.getResStrListener(\"STRSTENCIL\")}\n            value={this.state.Stencil} onChange={(ev, a) => {\n              if (a !== undefined && this.state.object) {\n                this.state.object.Stencil = a;\n                this.setState({ Stencil: a });\n              }\n            }}></TextField>\n          <TextField id=\"prefixField\" disabled={!this.state.IsClass} label={this.props.semtalk.getResStrListener(\"STRDLGPREFIX\")}\n            value={this.state.Prefix} onChange={(ev, a) => {\n              if (a !== undefined && this.state.object) {\n                this.state.object.Prefix = a;\n                this.setState({ Prefix: a });\n              }\n            }}></TextField>\n        </Stack>\n      }\n    </Fabric>;\n    return r;\n  }\n}\n","/* eslint-disable no-lone-blocks */\nimport * as React from 'react';\nimport styles from './SemTalkCustomize.module.scss';\n\n// import { escape } from '@microsoft/sp-lodash-subset';\nimport {\n  Fabric,\n  Pivot,\n  PivotItem,\n  IPivotItemProps, Text, Separator, Image, Stack\n} from 'office-ui-fabric-react';\n\n// import { SemTalkPropertyTable } from '../stproperty/SemTalkProperty';\nimport { SemTalkDialogTab } from '../stdialog/SemTalkDialog';\nimport { SemTalkLabelsTab } from '../stlabels/SemTalkLabels';\nimport { SemTalkStyleTab } from '../ststyle/SemTalkStyle';\nimport { SemTalkSystemClassTab } from '../stsystemclass/SemTalkSystemClass';\nimport { SemTalkAssociationTypeTab } from '../stassociationtype/SemTalkAssociationType';\nimport { SemTalkAttributeTypeTab } from '../stattributetype/SemTalkAttributeType';\nimport { SemTalkDiagramTypeTab } from '../stdiagramtype/SemTalkDiagramType';\n\n//import { addCallBack, removeCallBack } from '../../semtalkportal/stglobal';\n//import { MSGraphClient } from '@microsoft/sp-http';\n\n\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n// import { any } from '@microsoft/sp-webpart-base';\n//import { SetContext } from '../../semtalkportal/restinterface';\nimport { Guid } from \"guid-typescript\";\n// import * as strings from 'SemTalkStrings';\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\nimport {\n  ISemTalkObject, ISemTalkSystemClass, ISemTalkInstance, ISemTalkClass\n} from \"../../application/tbase/Interface\";\n\nexport interface ISemTalkCustomizeProps {\n  semtalk: IVisioRDFS;\n\n  context?: any;\n  site: string;\n  showSystemClass?: boolean;\n  showAssociationType?: boolean;\n  showAttributeType?: boolean;\n  showDiagramType?: boolean;\n\n}\nexport interface ISemTalkCustomizeState {\n  goto_context?: any;\n  isclass: boolean;\n  isinstance: boolean;\n  isbusinessclass: boolean;\n  isdiagram: boolean;\n  issystemclass: boolean;\n  isassociationtype: boolean;\n  isattributetype: boolean;\n  ismethodtype: boolean;\n  isstatetype: boolean;\n  isdiagramtype: boolean;\n  isassociation: boolean;\n  isactivity: boolean;\n  logourl: string;\n}\nexport class SemTalkCustomize extends React.Component<ISemTalkCustomizeProps, ISemTalkCustomizeState> {\n  public callback: Guid;\n  private object: ISemTalkObject | null = null;\n  constructor(props: ISemTalkCustomizeProps) {\n    super(props);\n    console.log(\"showCustomize\");\n    this.callback = Guid.create();\n    this.state = {\n      // goto_context: this.props.goto_context,\n      // redraw: false,\n      //   semtalktype: SemTalkType.SemTalkInstance,\n      isclass: false,\n      isinstance: false,\n      isbusinessclass: false,\n      isdiagram: false,\n      issystemclass: false,\n      isassociationtype: false,\n      isattributetype: false,\n      ismethodtype: false,\n      isstatetype: false,\n      isdiagramtype: false,\n      isassociation: false,\n      isactivity: false,\n      logourl: \"\",\n    };\n  }\n  private mounted: boolean = false;\n  public componentDidMount() {\n    this.mounted = true;\n    let oid: number = getObject();\n    if (oid > 0) {\n      this.setType(oid);\n    }\n    addCallBack(this);\n    this.mounted = true;\n  }\n  public componentWillUnmount() {\n    removeCallBack(this);\n    this.mounted = false;\n  }\n\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n  private setType(oid: number) {\n    const ob = this.props.semtalk.base;\n    // const obj = ob.FindObjectByID(oid);\n    let isbusinessclass = false;\n    let isclass = false;\n    let issystemclass = false;\n    let isassociationtype = false;\n    let isattributetype = false;\n    let ismethodtype = false;\n    let isstatetype = false;\n    let isassociation = false;\n    let isinstance = false;\n    let isdiagramtype = false;\n    let isdiagram = false;\n    // let tabspecs: ISemTalkTabSpec[] = [];\n    // let showAttributes = this.state.showAttributes;\n    // let showAssocs = this.state.showAssocs;\n    // let showSynonyms = this.state.showSynonyms;\n    // let showAudit = this.state.showAudit;\n\n    let sc: ISemTalkSystemClass | null = null;\n    let obj = ob.FindObjectByID(oid);\n    if (obj !== null && ob.IsInstance(obj)) {\n      let ins: ISemTalkInstance = obj as ISemTalkInstance;\n      sc = ins.ClassOf().SystemClass();\n    } else {\n      if (obj !== null) {\n        let cl = obj as ISemTalkClass;\n        sc = cl.SystemClass();\n      }\n    }\n    if (sc !== null) {\n      obj = sc;\n    }\n\n    if (obj !== null) { // && this.state.semtalktype !== obj.ObjectType\n      this.object = obj;\n      if (ob.IsClass(obj)) {\n        isclass = true;\n        isbusinessclass = ob.IsBusinessClass(obj);\n        if (!isbusinessclass) {\n          issystemclass = ob.IsSystemClass(obj);\n          if (issystemclass) {\n            isassociationtype = ob.IsAssociationType(obj);\n            if (!isassociationtype) {\n              isdiagramtype = ob.IsDiagramType(obj);\n            }\n          }\n          else {\n            isattributetype = ob.IsAttributeType(obj);\n            if (!isattributetype) {\n              ismethodtype = ob.IsMethodType(obj);\n              if (!ismethodtype) {\n                isstatetype = ob.IsStateType(obj);\n              }\n            }\n          }\n        }\n      } else {\n        isinstance = true;\n        isassociation = this.props.semtalk.base.IsAssociation(obj);\n        if (!isassociation) {\n          isdiagram = this.props.semtalk.base.IsDiagram(obj);\n        }\n      }\n      let logourl: string = \"\";\n      if (this.props.semtalk.masters) { // for the sake of testing\n        for (let mst of this.props.semtalk.masters) {\n          if (sc !== null && mst[\"name\"] === sc.ObjectName) {\n            logourl = mst[\"logo\"];\n            break;\n          }\n        }\n      }\n      this.setState({\n        //  semtalktype: obj.ObjectType,\n        isclass: isclass,\n        isinstance: isinstance,\n        isbusinessclass: isbusinessclass,\n        issystemclass: issystemclass,\n        isassociationtype: isassociationtype,\n        isattributetype: isattributetype,\n        ismethodtype: ismethodtype,\n        isstatetype: isstatetype,\n        isassociation: isassociation,\n        isdiagram: isdiagram,\n        isdiagramtype: isdiagramtype,\n        logourl: logourl,\n      });\n    }\n  }\n  private eventListener = (e: any) => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    try {\n      md = JSON.parse(e.data);\n      var mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkNavigationEvent.gotoDocument:\n        break;\n      case SemTalkNavigationEvent.gotoObject: {\n        this.setType(md.objectid);\n      }\n        break;\n      case SemTalkNavigationEvent.gotoNode: {\n        this.setType(md.objectid);\n      }\n        break;\n    }\n  }\n  public render(): React.ReactElement<ISemTalkCustomizeProps> {\n    let pivotArray: React.ReactElement<IPivotItemProps>[] = [];\n    // console.debug(\"RenderCustomize: \", this.props.context);\n\n    if (this.state.issystemclass) {\n      pivotArray.push(\n        <PivotItem id=\"pivot4dialog\" headerText={this.props.semtalk.getResStrListener(\"STRDIALOG\")} key=\"Dialog\">\n          <SemTalkDialogTab context={this.props.context}\n            semtalk={this.props.semtalk}\n          >\n          </SemTalkDialogTab>\n        </PivotItem>\n      );\n    }\n    if (this.state.issystemclass) {\n      pivotArray.push(\n        <PivotItem id=\"pivot4labels\" headerText={this.props.semtalk.getResStrListener(\"STRDLGATTLABEL\").replace(\":\", \"\")} key=\"Labels\">\n          <SemTalkLabelsTab context={this.props.context}\n            semtalk={this.props.semtalk}\n          >\n          </SemTalkLabelsTab>\n        </PivotItem>\n      );\n    }\n    if (this.props.showSystemClass && this.state.issystemclass\n      && !this.state.isassociationtype\n      && !this.state.isattributetype\n      && !this.state.isdiagramtype\n    ) {\n      pivotArray.push(\n        <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRBONDETAILS\")} key=\"SystemClass\">\n          <SemTalkSystemClassTab context={this.props.context}\n            semtalk={this.props.semtalk}\n          >\n          </SemTalkSystemClassTab>\n        </PivotItem>\n      );\n    }\n    if (this.props.showAssociationType && this.state.isassociationtype) {\n      pivotArray.push(\n        <PivotItem headerText={this.props.semtalk.getResStrListener(\"STRBONDETAILS\")} key=\"AssociationType\">\n          <SemTalkAssociationTypeTab context={this.props.context}\n            semtalk={this.props.semtalk}\n          >\n          </SemTalkAssociationTypeTab>\n        </PivotItem>\n      );\n    }\n    if (this.props.showAttributeType && this.state.isattributetype) {\n      pivotArray.push(\n        <PivotItem id=\"pivot4attriType\" headerText={this.props.semtalk.getResStrListener(\"STRBONDETAILS\")} key=\"AttributeType\">\n          <SemTalkAttributeTypeTab context={this.props.context}\n            semtalk={this.props.semtalk}\n          >\n          </SemTalkAttributeTypeTab>\n        </PivotItem>\n      );\n    }\n    if (this.props.showDiagramType && this.state.isdiagramtype) {\n      pivotArray.push(\n        <PivotItem id=\"pivot4diagType\" headerText={this.props.semtalk.getResStrListener(\"STRBONDETAILS\")} key=\"DiagramType\">\n          <SemTalkDiagramTypeTab context={this.props.context}\n            semtalk={this.props.semtalk}\n          >\n          </SemTalkDiagramTypeTab>\n        </PivotItem>\n      );\n    }\n    let slabel = \"\";\n    if (this.object) {\n      let sc = this.object.SystemClass();\n      if (sc !== null) {\n        slabel = sc.ObjectCaption;\n      } else {\n        slabel = this.object.ObjectBase.SemTalkTypeName(this.object.ObjectType);\n      }\n    }\n    if (this.state.issystemclass) {\n      pivotArray.push(\n        <PivotItem id=\"pivot4style\" headerText={this.props.semtalk.getResStr(\"STRSTYLE\")} key=\"styles\">\n          <SemTalkStyleTab context={this.props.context}\n            semtalk={this.props.semtalk}\n          >\n          </SemTalkStyleTab>\n        </PivotItem>\n      );\n    }\n    return (\n      <div id=\"customizeTest\">\n        <Fabric>\n          <Stack horizontal>\n            <Text id=\"labelText\" variant={'xLarge'}>{slabel}</Text>\n            {this.state.logourl.length > 0 &&\n              <Separator>\n                <div id=\"separator4Customize\" className={styles.semTalkCustomize}>\n                  <Image className={styles.imagetab} src={this.state.logourl} alt=\"\" width={25} height={25}></Image>\n                </div>\n              </Separator>\n            }\n          </Stack>\n          {pivotArray.length > 0 &&\n            <Pivot id=\"pivot4Customize\" className={styles.semTalkCustomize}>\n              {pivotArray}\n            </Pivot>\n          }\n        </Fabric>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\r\nimport {\r\n  Selection, ISelection, DetailsList, DetailsListLayoutMode, IColumn,\r\n  CheckboxVisibility,\r\n  CommandBar,\r\n  TextField, Toggle, Stack\r\n} from 'office-ui-fabric-react';\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\r\nimport {\r\n  ISemTalkObject, ISemTalkClass, ISemTalkInstance, ISemTalkSystemClass,\r\n  ISemTalkAssociation, ISemTalkAssociationType, SemTalkType,\r\n  ISemTalkBusinessClass, SemTalkBaseConstant, SemTalkLanguage\r\n} from \"../../application/tbase/Interface\";\r\n\r\nimport { addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\nimport { Guid } from \"guid-typescript\";\r\nimport { IVisioRDFS, SemTalkNavigationEvent, SemTalkUIConstant } from '../../application/semtalklistener/visiordfsinterface';\r\nimport {\r\n  IMongoOption, mgGetItemNames,\r\n  mgGetItem\r\n} from '../../SemTalkMongoServer';\r\nimport { Process_ElementName } from '../../application/semtalklistener/processInterface';\r\nimport { GetLanguage } from '../../application/tbase/langtools';\r\nimport { BPMN_ElementName } from '../../application/semtalklistener/subtask/bpmn/bpmninterface';\r\n\r\nconst bl = [SemTalkBaseConstant.SLAttachment, SemTalkBaseConstant.SLDocumentInfo,\r\nBPMN_ElementName.FlowChartElement, SemTalkUIConstant.SemTalkUserTab,\r\n  \"Legend Shape\", \"SAP\", Process_ElementName.SLOfftime,\r\n  \"Funktionsband\", \"Functional band\", SemTalkBaseConstant.SLSwimlane,\r\nSemTalkBaseConstant.SLComment, SemTalkUIConstant.SLHidden, SemTalkBaseConstant.SLLanguage];\r\n\r\n\r\nexport interface ISemTalkInsertProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  graphClient?: any;\r\n  context?: any;\r\n  site?: string;\r\n  sharepointrepository?: string;\r\n  listTitle?: string;\r\n  query?: string;\r\n  columns?: string[];\r\n  isexport: boolean;\r\n  callback: (semtalk: IVisioRDFS, shape: any,\r\n    obj: ISemTalkObject[], expand: boolean) => void;\r\n  systemclass: ISemTalkSystemClass | null;\r\n  isclasses: boolean;\r\n  focus: number | null;\r\n  isinsert: boolean;\r\n  mongo: IMongoOption;\r\n}\r\n\r\nexport interface ISemTalkInsertState {\r\n  objectid: number;\r\n  items: IExternalObject[];\r\n  objectname: string;\r\n  isbusinessclasses: boolean;\r\n  showextern: boolean;\r\n  showgraph: boolean;\r\n  isexpand: boolean;\r\n}\r\ninterface IExternalObject {\r\n  Object: ISemTalkObject | null;\r\n  ObjectName: string;\r\n  ObjectClass: string | null;\r\n  ObjectCaption: string;\r\n  ObjectDescription: string | null;\r\n  EditLink: string | null;\r\n  ReferenceType: string;\r\n  SPItem: any | null;\r\n  MGItem: any | null;\r\n}\r\n\r\nexport class SemTalkInsert extends React.Component<ISemTalkInsertProps, ISemTalkInsertState> {\r\n  private object: ISemTalkObject | null = null;\r\n  public callback: Guid;\r\n  private _allitems: IExternalObject[] = [];\r\n  private _sel: ISelection = new Selection({\r\n    onSelectionChanged: () => { this.selectitem(); }\r\n  });\r\n  private _sysclass: ISemTalkSystemClass | null = null;\r\n  private _selection: ISemTalkObject | null;\r\n  private _languages: string[] = [SemTalkLanguage.German,\r\n  SemTalkLanguage.English, SemTalkLanguage.Spanish, SemTalkLanguage.Russian,\r\n  SemTalkLanguage.Simplified, SemTalkLanguage.Traditional];\r\n\r\n  constructor(props: ISemTalkInsertProps) {\r\n    super(props);\r\n    console.debug(\"showInsert\");\r\n    this.callback = Guid.create();\r\n    let isbusinessclasses = false;\r\n    let inf = this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLInformation);\r\n    if (this.props.systemclass) {\r\n      isbusinessclasses = this.props.systemclass.ObjectName === inf;\r\n    }\r\n    const langclass = this.props.semtalk.base.FindClass(SemTalkBaseConstant.SLLanguage);\r\n    if (langclass) {\r\n      this._languages = langclass.Instances().map((l) => l.ObjectName);\r\n    }\r\n    this.state = {\r\n      objectid: -1,\r\n      items: [],\r\n      objectname: \"\",\r\n      isbusinessclasses: isbusinessclasses,\r\n      showextern: true,\r\n      showgraph: false,\r\n      isexpand: true,\r\n    };\r\n  }\r\n  private resetState = () => {\r\n    this.setState({\r\n      objectid: -1,\r\n      objectname: \"\",\r\n    });\r\n  }\r\n\r\n  private mounted: boolean = false;\r\n\r\n  public async componentDidMount() {\r\n    if (this.props.focus && this.props.focus > 0) {\r\n      let oid: number = this.props.focus;\r\n      this.loadObject(oid, this.state.showextern, this.state.showgraph);\r\n    } else {\r\n      this.loadObject(-1, this.state.showextern, this.state.showgraph);\r\n    }\r\n    this.mounted = true;\r\n    addCallBack(this);\r\n  }\r\n  public componentWillUnmount() {\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n  }\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoObject:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid, this.state.showextern, this.state.showgraph);\r\n        }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid, this.state.showextern, this.state.showgraph);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  // private async loadObject(id: number, showextern: boolean, showsharepoint: boolean) {\r\n  //   let objectname = \"\";\r\n  //   let sc: ISemTalkSystemClass | null = null;\r\n  //   if (this.props.systemclass !== null) {\r\n  //     sc = this.props.systemclass;\r\n  //   }\r\n  //   const base = this.props.semtalk.base;\r\n  //   if (sc === null) {\r\n  //     this.object = base.FindObjectByID(id);\r\n  //     if (this.object !== null) {\r\n  //       objectname = this.object.ObjectCaption;\r\n  //       if (base.IsClass(this.object)) {\r\n  //         sc = (this.object as ISemTalkClass).SystemClass();\r\n  //       } else {\r\n  //         sc = (this.object as ISemTalkInstance).ClassOf().SystemClass();\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   let items: IInsertTab[] = this._allitems;\r\n  //   let isbusinessclasses = this.state.isbusinessclasses;\r\n  //   if (sc) {\r\n  //     if (true) {\r\n  //       let inf = base.GetModelAttribute(Process_ElementName.SLInformation);\r\n  //       if (!isbusinessclasses) {\r\n  //         isbusinessclasses = sc.ObjectName === inf;\r\n  //       }\r\n\r\n  //       if (sc.OnceOnly || this.props.isclasses || this.state.isbusinessclasses) {\r\n  //         items = sc.AllSubClasses().map((s) => {\r\n  //           return {\r\n  //             Object: s, ObjectCaption: s.ObjectCaption,\r\n  //             ObjectName: s.ObjectName, ObjectDescription: null, EditLink: null,\r\n  //             SPItem: null, MGItem: null\r\n  //           };\r\n  //         });\r\n  //       } else {\r\n  //         if (base.IsAssociationType(sc)) {\r\n  //           let rels: ISemTalkAssociationType[] = [];\r\n  //           const rel = this.object as ISemTalkAssociation;\r\n  //           if (rel.FromObject.ObjectType === SemTalkType.SemTalkInstance &&\r\n  //             rel.ToObject.ObjectType === SemTalkType.SemTalkInstance) {\r\n  //             const fromcla = rel.FromObject.SystemClass();\r\n  //             const tocla = rel.ToObject.SystemClass();\r\n  //             if (fromcla && tocla) {\r\n  //               rels = fromcla.AllValidClassRelations(tocla);\r\n  //             } else {\r\n  //               rels = base.AllAssociationTypes();\r\n  //             }\r\n  //           } else {\r\n  //             rels = base.AllAssociationTypes();\r\n  //           }\r\n  //           items = rels.map((s) => {\r\n  //             return {\r\n  //               Object: s, ObjectCaption: s.ObjectCaption,\r\n  //               ObjectName: s.ObjectName, ObjectDescription: null, EditLink: null,\r\n  //               SPItem: null, MGItem: null\r\n\r\n  //             };\r\n  //           });\r\n  //         } else {\r\n  //           items = sc.AllInstances().map((s) => {\r\n  //             return {\r\n  //               Object: s, ObjectCaption: s.ObjectCaption,\r\n  //               ObjectName: s.ObjectName, ObjectDescription: null, EditLink: null,\r\n  //               SPItem: null, MGItem: null\r\n  //             };\r\n  //           });\r\n  //         }\r\n  //       }\r\n  //       if (!this.props.mongo.usemongo) {\r\n  //         if (showextern && this.props.context !== undefined && this.props.site !== undefined) {\r\n  //           let spinterface = this.props.semtalk.explorer;\r\n  //           let lany: any = await spinterface.getListData(this.props.context, this.props.site, this.props.semtalk.getSPListName(sc.ObjectName), \"*\");\r\n  //           let lil: any[] = lany.value;\r\n  //           if (lil !== undefined) {\r\n  //             let spitems = lil;\r\n  //             for (let s of spitems) {\r\n  //               if (items.findIndex((t: IInsertTab) => t.ObjectCaption === s[\"Title\"]) < 0) {\r\n  //                 // let nid: string = String(s[\"@odata.id\"]);\r\n  //                 let des: string | null = null;\r\n  //                 if (s[\"Comment\"]) des = s[\"Comment\"];\r\n  //                 const item = {\r\n  //                   Object: null, ObjectCaption: s[\"Title\"] as string, ObjectName: s[\"Title\"],\r\n  //                   ObjectDescription: des, EditLink: s[\"@odata.editLink\"],\r\n  //                   SPItem: s, MGItem: null\r\n  //                 };\r\n  //                 items.push(item);\r\n  //               }\r\n  //             }\r\n  //           }\r\n  //         }\r\n  //       } else {\r\n  //         if (showextern && this.props.mongo.semmongoserverurl !== undefined) {\r\n  //           let lib = this.props.semtalk.getSPListName(sc.ObjectName);\r\n  //           let docs = await mgGetItemNames(this.props.mongo, this.props.mongo.repository, lib);\r\n  //           for (let s1 of docs) {\r\n  //             const s: any = s1;\r\n  //             if (items.findIndex((t: IInsertTab) => t.ObjectCaption === s[\"name\"]) < 0) {\r\n  //               let nid: string = s[\"_id\"] as string;\r\n  //               let des: string | null = null;\r\n  //               if (s[\"Comment\"]) des = s[\"Comment\"];\r\n  //               let item = {\r\n  //                 Object: null, ObjectCaption: s[\"name\"] as string, ObjectName: s[\"name\"],\r\n  //                 ObjectDescription: des, EditLink: this.props.mongo.repository + \"/\" + lib + \"/\" + nid,\r\n  //                 SPItem: null, MGItem: s\r\n  //               };\r\n  //               items.push(item);\r\n  //             }\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //       if (this.props.graphClient !== undefined && showsharepoint) {\r\n  //         let ob = this.props.semtalk.base;\r\n  //         let spinterface = this.props.semtalk.explorer;\r\n  //         switch (sc.ObjectName) {\r\n  //           case ob.GetModelAttribute(Process_ElementName.SLResource): {\r\n  //             let editLink = \"groups\";\r\n  //             let res = await spinterface.fetchGraph(editLink, \"\", \"\", this.props.graphClient);\r\n  //             if (res.value) {\r\n  //               let nitems = this.loadGraphItems(res.value, editLink);\r\n  //               items.push(...nitems);\r\n  //             }\r\n  //             break;\r\n  //           }\r\n  //           case ob.GetModelAttribute(Process_ElementName.SLBuffer): {\r\n  //             let editLink = \"groups/1e504f68-4a10-42e2-aa15-d0861940a356/sites/root/lists\";\r\n  //             let res = await spinterface.fetchGraph(editLink, \"\", \"\", this.props.graphClient);\r\n  //             if (res.value) {\r\n  //               let nitems = this.loadGraphLists(res.value, editLink);\r\n  //               items.push(...nitems);\r\n  //             }\r\n  //             break;\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //       // classes = sc.AllSystemSubClasses();\r\n  //     }\r\n  //   } else {\r\n  //     items = base.AllClasses().map((s) => {\r\n  //       return {\r\n  //         Object: s, ObjectCaption: s.ObjectCaption,\r\n  //         ObjectName: s.ObjectName, ObjectDescription: null, EditLink: null,\r\n  //         SPItem: null, MGItem: null\r\n  //       };\r\n  //     });\r\n  //   }\r\n  //   items = items.filter(x => bl.indexOf(x.ObjectName) < 0);\r\n  //   this._allitems = items.sort((a, b) => a.ObjectCaption.localeCompare(b.ObjectCaption));\r\n  //   // this._classes = classes;\r\n  //   this._sysclass = sc;\r\n  //   this.setState({\r\n  //     objectid: id,\r\n  //     items: this._allitems,\r\n  //     isbusinessclasses: isbusinessclasses,\r\n  //     objectname: objectname\r\n  //   });\r\n  // }\r\n  // private loadGraphItems = (lil: any[], editLink: string) => {\r\n  //   let nitems: IInsertTab[] = [];\r\n  //   if (lil !== undefined) {\r\n  //     let spitems = lil;\r\n  //     for (let item of spitems.map((s) => {\r\n  //       return {\r\n  //         Object: null, ObjectCaption: s[\"displayName\"] as string, ObjectName: String(s.id),\r\n  //         ObjectDescription: s[\"description\"] as string, EditLink: editLink,\r\n  //         SPItem: s, MGItem: null\r\n  //       };\r\n  //     })) {\r\n  //       nitems.push(item);\r\n  //     }\r\n  //   }\r\n  //   return nitems;\r\n  // }\r\n  // private loadGraphLists = (lil: any[], editLink: string) => {\r\n  //   let nitems: IInsertTab[] = [];\r\n  //   if (lil !== undefined) {\r\n  //     let spitems = lil;\r\n  //     for (let item of spitems) {\r\n  //       if (item.list.hidden !== true) {\r\n  //         let s = {\r\n  //           Object: null, ObjectCaption: item[\"displayName\"] as string, ObjectName: String(item.id),\r\n  //           ObjectDescription: item[\"description\"] as string, EditLink: editLink,\r\n  //           SPItem: item, MGItem: null\r\n  //         };\r\n  //         nitems.push(s);\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   return nitems;\r\n  // }\r\n  private async loadObject(id: number, showextern: boolean, groupsandlistsasresources: boolean) {\r\n    let objectname = \"\";\r\n    let sc: ISemTalkSystemClass | null = null;\r\n    if (this.props.systemclass !== null) {\r\n      sc = this.props.systemclass;\r\n    }\r\n    const base = this.props.semtalk.base;\r\n    if (sc === null) {\r\n      this.object = base.FindObjectByID(id);\r\n      if (this.object !== null) {\r\n        objectname = this.object.ObjectCaption;\r\n        if (base.IsClass(this.object)) {\r\n          sc = (this.object as ISemTalkClass).SystemClass();\r\n        } else {\r\n          sc = (this.object as ISemTalkInstance).ClassOf().SystemClass();\r\n        }\r\n      }\r\n    }\r\n    let items: IExternalObject[] = this._allitems;\r\n    // let classes: ISemTalkSystemClass[] = [];\r\n    let isbusinessclasses = this.state.isbusinessclasses;\r\n    if (sc) {\r\n      //  if (sc !== this.state.sysclass || showextern !== this.state.showextern || showsharepoint !== this.state.showgraph) {\r\n      if (true) {\r\n        let inf = base.GetModelAttribute(Process_ElementName.SLInformation);\r\n        if (!isbusinessclasses) {\r\n          isbusinessclasses = sc.ObjectName === inf;\r\n        }\r\n\r\n        if (sc.OnceOnly || this.props.isclasses || this.state.isbusinessclasses) {\r\n          items = sc.AllSubClasses().map((s) => {\r\n            return {\r\n              Object: s, ObjectCaption: s.ObjectCaption,\r\n              ObjectName: s.ObjectName, ObjectDescription: null,\r\n              ObjectClass: null,\r\n              EditLink: null,\r\n              ReferenceType: \"Local\",\r\n              SPItem: null, MGItem: null\r\n            };\r\n          });\r\n        } else {\r\n          if (base.IsAssociationType(sc)) {\r\n            let rels: ISemTalkAssociationType[] = [];\r\n            const rel = this.object as ISemTalkAssociation;\r\n            if (rel.FromObject.ObjectType === SemTalkType.SemTalkInstance &&\r\n              rel.ToObject.ObjectType === SemTalkType.SemTalkInstance) {\r\n              const fromcla = rel.FromObject.SystemClass();\r\n              const tocla = rel.ToObject.SystemClass();\r\n              if (fromcla && tocla) {\r\n                rels = fromcla.AllValidClassRelations(tocla);\r\n              } else {\r\n                rels = base.AllAssociationTypes();\r\n              }\r\n            } else {\r\n              rels = base.AllAssociationTypes();\r\n            }\r\n            items = rels.map((s) => {\r\n              return {\r\n                Object: s, ObjectCaption: s.ObjectCaption,\r\n                ObjectName: s.ObjectName, ObjectDescription: null, EditLink: null,\r\n                ObjectClass: null,\r\n                SPItem: null, MGItem: null,\r\n                ReferenceType: \"Local\"\r\n              };\r\n            });\r\n          } else {\r\n            items = sc.AllInstances().map((s) => {\r\n              return {\r\n                Object: s, ObjectCaption: s.ObjectCaption,\r\n                ObjectClass: s.ClassOf().ID2Name,\r\n                ObjectName: s.ObjectName, ObjectDescription: null, EditLink: null,\r\n                ReferenceType: \"Local\",\r\n                SPItem: null, MGItem: null\r\n              };\r\n            });\r\n          }\r\n        }\r\n        if (!this.props.mongo.usemongo) {\r\n          if (showextern && this.props.context !== undefined && this.props.site !== undefined) {\r\n            let spinterface = this.props.semtalk.explorer;\r\n            let lany: any = await spinterface.getListData(this.props.context, this.props.site, this.props.semtalk.getSPListName(sc.ObjectName), \"*\");\r\n            let lil: any[] = lany.value;\r\n            if (lil !== undefined) {\r\n              let spitems = lil;\r\n              for (let s of spitems) {\r\n                if (items.findIndex((t: IExternalObject) => t.ObjectCaption === s[\"Title\"]) < 0) {\r\n                  // let nid: string = String(s[\"@odata.id\"]);\r\n                  let des: string | null = null;\r\n                  if (s[\"Comment\"]) des = s[\"Comment\"];\r\n                  let cla: string | null = null;\r\n                  if (s[\"Class\"]) cla = s[\"Class\"];\r\n                  const item = {\r\n                    Object: null, ObjectCaption: s[\"Title\"] as string, ObjectName: s[\"Title\"],\r\n                    ObjectDescription: des,\r\n                    ObjectClass: cla,\r\n                    EditLink: s[\"@odata.editLink\"],\r\n                    ReferenceType: \"Element\",\r\n                    SPItem: s, MGItem: null\r\n                  };\r\n                  items.push(item);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (this.props.mongo.usemongo) {\r\n          if (showextern && this.props.mongo.semmongoserverurl !== undefined) {\r\n            let lib = this.props.semtalk.getSPListName(sc.ObjectName);\r\n            // let docs = await mgGetItemNames(this.props.mongo, this.props.mongo.repository, lib);\r\n            let docs: any[] = [];\r\n            let x = sessionStorage.getItem(\"mgGetItemNames_\" + lib);\r\n            if (x) {\r\n              docs = JSON.parse(x);\r\n            } else {\r\n              docs = await mgGetItemNames(this.props.mongo, this.props.mongo.repository, lib);\r\n              sessionStorage.setItem(\"mgGetItemNames_\" + lib, JSON.stringify(docs));\r\n            }\r\n            for (let s1 of docs) {\r\n              const s: any = s1;\r\n              if (items.findIndex((t: IExternalObject) => t.ObjectCaption === s[\"name\"]) < 0) {\r\n                let nid: string = s[\"_id\"] as string;\r\n                let des: string | null = null;\r\n                if (s[\"Comment\"]) des = s[\"Comment\"];\r\n                let cla: string | null = null;\r\n                if (s[\"Class\"]) cla = s[\"Class\"];\r\n                let item = {\r\n                  Object: null, ObjectCaption: s[\"name\"] as string, ObjectName: s[\"name\"],\r\n                  ObjectDescription: des,\r\n                  ObjectClass: cla,\r\n                  EditLink: this.props.mongo.repository + \"/\" + lib + \"/\" + nid,\r\n                  ReferenceType: \"Mongo\",\r\n                  SPItem: null, MGItem: s\r\n                };\r\n                items.push(item);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (this.props.graphClient !== undefined && groupsandlistsasresources) {\r\n          let ob = this.props.semtalk.base;\r\n          let spinterface = this.props.semtalk.explorer;\r\n          switch (sc.ObjectName) {\r\n            case ob.GetModelAttribute(Process_ElementName.SLResource): {\r\n              let editLink = \"groups\";\r\n              let res = await spinterface.fetchGraph(editLink, \"\", \"\", this.props.graphClient);\r\n              if (res.value) {\r\n                let nitems = this.loadGraphItems(res.value, editLink,\"Group\");\r\n                items.push(...nitems);\r\n              }\r\n              break;\r\n            }\r\n            case ob.GetModelAttribute(Process_ElementName.SLBuffer): {\r\n              let editLink = \"groups/1e504f68-4a10-42e2-aa15-d0861940a356/sites/root/lists\";\r\n              let res = await spinterface.fetchGraph(editLink, \"\", \"\", this.props.graphClient);\r\n              if (res.value) {\r\n                let nitems = this.loadGraphLists(res.value, editLink, \"List\");\r\n                items.push(...nitems);\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (this.props.graphClient !== undefined && this.props.sharepointrepository) {\r\n          let spinterface = this.props.semtalk.explorer;\r\n          let listname = this.props.semtalk.getSPListName(sc.ObjectName);\r\n          let query = this.props.sharepointrepository + \"lists/\" + listname + \"/items?expand=fields\";\r\n          let resl = await spinterface.fetchGraphItems(this.props.graphClient, query);\r\n          let nitems = this.loadGraphListItems(resl,\"Element\");\r\n          items.push(...nitems);\r\n        }\r\n        // classes = sc.AllSystemSubClasses();\r\n      }\r\n    } else {\r\n      items = base.AllClasses().map((s) => {\r\n        return {\r\n          Object: s, ObjectCaption: s.ObjectCaption,\r\n          ObjectName: s.ObjectName,\r\n          ObjectDescription: null,\r\n          ObjectClass: null,\r\n          EditLink: null,\r\n          ReferenceType: \"Local\",\r\n          SPItem: null, MGItem: null\r\n        };\r\n      });\r\n    }\r\n    items = items.filter(x => bl.indexOf(x.ObjectName) < 0);\r\n    this._allitems = items.sort((a, b) => a.ObjectCaption.localeCompare(b.ObjectCaption));\r\n    // this.objects = this._allitems.map((x: IExternalObject): IDropdownOption => { return { key: x.ObjectName, text: x.ObjectCaption }; });\r\n    // this._classes = classes;\r\n    this._sysclass = sc;\r\n    this.setState({\r\n      objectid: id,\r\n      items: this._allitems,\r\n      // classes: classes,\r\n      isbusinessclasses: isbusinessclasses,\r\n      // sysclass: sc,\r\n      objectname: objectname\r\n    });\r\n  }\r\n  private loadGraphListItems = (lil: any[], reftype: string) => {\r\n    let nitems: IExternalObject[] = [];\r\n    if (lil !== undefined) {\r\n      let spitems = lil;\r\n      for (let s of spitems) {\r\n        let fields: any = s[\"fields\"];\r\n        let cla: any = fields[\"Class\"];\r\n        if (!cla) cla = null;\r\n        let item = {\r\n          Object: null, ObjectCaption: fields[\"Title\"] as string, ObjectName: String(s.eTag),\r\n          ObjectDescription: fields[\"Comment\"] as string,\r\n          ObjectClass: cla,\r\n          EditLink: s[\"fields@odata.context\"],\r\n          ReferenceType: reftype,\r\n          SPItem: fields, MGItem: null\r\n        };\r\n        nitems.push(item);\r\n      }\r\n    }\r\n    return nitems;\r\n  }\r\n  private loadGraphItems = (lil: any[], editLink: string, reftype: string) => {\r\n    let nitems: IExternalObject[] = [];\r\n    if (lil !== undefined) {\r\n      let spitems = lil;\r\n      for (let item of spitems.map((s) => {\r\n        return {\r\n          Object: null, ObjectCaption: s[\"displayName\"] as string, ObjectName: String(s.id),\r\n          ObjectDescription: s[\"description\"] as string,\r\n          ObjectClass: null,\r\n          EditLink: editLink,\r\n          ReferenceType: reftype,\r\n          SPItem: s, MGItem: null\r\n        };\r\n      })) {\r\n        nitems.push(item);\r\n      }\r\n    }\r\n    return nitems;\r\n  }\r\n  private loadGraphLists = (lil: any[], editLink: string, reftype: string) => {\r\n    let nitems: IExternalObject[] = [];\r\n    if (lil !== undefined) {\r\n      let spitems = lil;\r\n      for (let item of spitems) {\r\n        if (item.list.hidden !== true) {\r\n          let s = {\r\n            Object: null, ObjectCaption: item[\"displayName\"] as string,\r\n            ObjectName: String(item.id),\r\n            ObjectDescription: item[\"description\"] as string,\r\n            ObjectClass: null,\r\n            EditLink: editLink,\r\n            ReferenceType: reftype,\r\n            SPItem: item, MGItem: null\r\n          };\r\n          nitems.push(s);\r\n        }\r\n      }\r\n      // nitems = nitems.sort((a, b) => a.ObjectCaption.localeCompare(b.ObjectCaption));\r\n      // this.setState({ items: nitems });\r\n    }\r\n    // let citems = this.state.items;\r\n    // citems.push(...nitems);\r\n    return nitems;\r\n  }\r\n  private _columns: IColumn[] = [\r\n    {\r\n      key: 'Type',\r\n      name: \"Type\",\r\n      fieldName: 'Type',\r\n      minWidth: 50,\r\n      maxWidth: 100,\r\n      isResizable: true,\r\n      isMultiline: false,\r\n      onRender: (item: IExternalObject, _index?: number, _column?: IColumn) => {\r\n        return <span>{item.ReferenceType}</span>;\r\n      }\r\n    },   \r\n    {\r\n      key: 'Value',\r\n      name: this.props.semtalk.getResStrListener(\"STRNAME\"),\r\n      fieldName: 'Value',\r\n      minWidth: 100,\r\n      // maxWidth: 180,\r\n      isResizable: true,\r\n      isMultiline: false,\r\n      onRender: (item: IExternalObject, _index?: number, _column?: IColumn) => {\r\n        return <span>{item.ObjectCaption}</span>;\r\n      }\r\n    }\r\n  ];\r\n  private selectitem = (): void => {\r\n    let sel = this._sel.getSelection();\r\n    if (sel.length > 0) {\r\n      let item = this._sel.getSelection()[0] as IExternalObject;\r\n      if (item !== null) {\r\n        this._selection = item.Object;\r\n        this.setState({ objectname: item.ObjectCaption });\r\n      }\r\n    }\r\n  }\r\n  private additem = (): void => {\r\n    const bas = this.props.semtalk.base;\r\n    const cb = this.props.callback;\r\n    if (this.props.isinsert) {\r\n      let objects: ISemTalkObject[] = [];\r\n      for (let sel1 of this._sel.getSelection()) {\r\n        let item: IExternalObject = sel1 as IExternalObject;\r\n        let oname = item.ObjectName;\r\n        const sysc = this._sysclass;\r\n        if (sysc !== undefined && sysc !== null) {\r\n          if (!this.props.isclasses) {\r\n            let obj = bas.FindInstance(oname);\r\n            if (obj !== null) {\r\n              if (obj.IsInstance(sysc)) {\r\n                this.selectExtern(item, obj, sysc);\r\n              } else {\r\n                alert(\"You cannot select:\" + oname);\r\n              }\r\n            } else {\r\n              let cla: ISemTalkClass = sysc;\r\n              if (item.ObjectClass) {\r\n                let c = bas.FindClass(item.ObjectClass);\r\n                if (c) cla = c;\r\n              }\r\n              obj = cla.MakeInstance(oname);\r\n              if (obj) this.selectExtern(item, obj, sysc);\r\n            }\r\n          } else {\r\n            if (oname.indexOf(\"#\") < 0) {\r\n              oname = sysc.ObjectName.substr(0, 2) + \"#\" + oname;\r\n            }\r\n            let obj = bas.FindClass(oname);\r\n            if (obj !== null) {\r\n              if (obj.IsParent(sysc)) {\r\n                objects.push(obj);\r\n                // cb(this.props.semtalk, this.props.semtalk.shape, obj);\r\n              } else {\r\n                alert(\"You cannot select:\" + oname);\r\n              }\r\n            } else {\r\n              if (this.state.isbusinessclasses) {\r\n                let bc = bas.MakeBusinessClass(oname);\r\n                if (bc !== null) {\r\n                  if (!bc.IsParent(sysc)) {\r\n                    bc.AddSubclassOf(sysc);\r\n                  }\r\n                  obj = bc;\r\n                } else {\r\n                  obj = sysc.MakeSubClass(oname);\r\n                }\r\n              } else {\r\n                obj = sysc.MakeSubClass(oname);\r\n              }\r\n              // !!!\r\n              if (obj) {\r\n                this.copyExtern(item, obj, sysc);\r\n                objects.push(obj);\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          if (item.Object) {\r\n            objects.push(item.Object);\r\n          }\r\n        }\r\n      }\r\n      // cb== InsertObjects bekommteine Liste\r\n      cb(this.props.semtalk, this.props.semtalk.currentShape(), objects, this.state.isexpand);\r\n    } else {\r\n      if (this._selection !== null && this._selection !== undefined) {\r\n        cb(this.props.semtalk, this.props.semtalk.currentShape(), [this._selection], false);\r\n      } else {\r\n        let oname = this.state.objectname;\r\n        let externalitem: IExternalObject | null = null;\r\n        for (let sel1 of this._sel.getSelection()) {\r\n          externalitem = sel1 as IExternalObject;\r\n          oname = externalitem.ObjectName;\r\n        }\r\n        if (oname.length > 0) {\r\n          const sysc = this._sysclass;\r\n          if (sysc !== undefined && sysc !== null) {\r\n            if (!this.props.isclasses) {\r\n              let obj = bas.FindInstance(oname);\r\n              if (obj !== null) {\r\n                if (obj.IsInstance(sysc)) {\r\n                  cb(this.props.semtalk, this.props.semtalk.currentShape(), [obj], false);\r\n                } else {\r\n                  alert(\"You cannot select:\" + oname);\r\n                }\r\n              } else {\r\n                obj = sysc.MakeInstance(oname);\r\n                if (obj) {\r\n                  if (externalitem) {\r\n                    this.selectExtern(externalitem, obj, sysc);\r\n                  } else {\r\n                    cb(this.props.semtalk, this.props.semtalk.currentShape(), [obj], false);\r\n                  }\r\n                }\r\n              }\r\n            } else {\r\n              oname = sysc.ObjectName.substr(0, 2) + \"#\" + oname;\r\n              let obj = bas.FindClass(oname);\r\n              if (obj !== null) {\r\n                if (obj.IsParent(sysc)) {\r\n                  if (externalitem) {\r\n                    this.selectExtern(externalitem, obj, sysc);\r\n                  } else {\r\n                    cb(this.props.semtalk, this.props.semtalk.currentShape(), [obj], false);\r\n                  }\r\n                } else {\r\n                  alert(\"You cannot select:\" + oname);\r\n                }\r\n              } else {\r\n                if (this.state.isbusinessclasses) {\r\n                  let bc = bas.MakeBusinessClass(oname);\r\n                  if (bc !== null) {\r\n                    if (!bc.IsParent(sysc)) {\r\n                      bc.AddSubclassOf(sysc);\r\n                    }\r\n                    obj = bc;\r\n                  } else {\r\n                    obj = sysc.MakeSubClass(oname);\r\n                  }\r\n                } else {\r\n                  obj = sysc.MakeSubClass(oname);\r\n                }\r\n                if (obj) {\r\n                  if (externalitem) {\r\n                    this.selectExtern(externalitem, obj, sysc);\r\n                  } else {\r\n                    cb(this.props.semtalk, this.props.semtalk.currentShape(), [obj], false);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private _onItemInvoked = (item: IExternalObject): void => {\r\n    this.additemX(item);\r\n\r\n    this.selectitem();\r\n  }\r\n\r\n  private copyExtern = async (item: IExternalObject, obj: ISemTalkObject, sysc: ISemTalkSystemClass) => {\r\n    if (item.ObjectDescription) obj.Comment = item.ObjectDescription;\r\n    if (item.EditLink) obj.EditLink = item.EditLink;\r\n    let fnd = false;\r\n    let ob = this.props.semtalk.base;\r\n    if (item.MGItem) {\r\n      let lib = this.props.semtalk.getSPListName(sysc.ObjectName);\r\n      const mgitem: any = await mgGetItem(this.props.mongo, this.props.mongo.repository, lib, item.MGItem[\"_id\"]);\r\n      if (mgitem[\"Comment\"]) {\r\n        obj.Comment = mgitem[\"Comment\"];\r\n      }\r\n      if (mgitem[\"Class\"] && ob.IsInstance(obj)) {\r\n        let cname = mgitem[\"Class\"];\r\n        if (cname) {\r\n          let cla = ob.FindClass(cname);\r\n          if (cla) {\r\n            (obj as ISemTalkInstance).SetClass(cla); \r\n          }\r\n        } \r\n      }\r\n\r\n      for (const l of this._languages) {\r\n        if (mgitem[l]) {\r\n          if (l === ob.CurrentNsp) fnd = true;\r\n          let ls = GetLanguage(l);\r\n          if (ls) obj.MakeSynonym(mgitem[l], ls);\r\n        }\r\n      }\r\n      for (const a of sysc.AllAttributes().map(x => x.ClassOf().ObjectName)) {\r\n        if (mgitem[a]) {\r\n          obj.SetValue(a, mgitem[a]);\r\n        }\r\n      }\r\n      if (obj.ObjectBase.IsBusinessClass(obj)) {\r\n        let oobj: ISemTalkBusinessClass = obj as ISemTalkBusinessClass;\r\n        if (\"Attribute\" in mgitem) {\r\n          let l: string[] = [];\r\n          const v = mgitem[\"Attribute\"];\r\n          if (Array.isArray(v)) {\r\n            l = v;\r\n          } else {\r\n            l = [v];\r\n          }\r\n          for (let attr of l) {\r\n            oobj.MakeAttribute(attr, null);\r\n          }\r\n        }\r\n        if (\"States\" in mgitem) {\r\n          let l: string[] = [];\r\n          const v = mgitem[\"States\"];\r\n          if (Array.isArray(v)) {\r\n            l = v;\r\n          } else {\r\n            l = [v];\r\n          }\r\n          for (let sta of l) {\r\n            oobj.MakeState(sta);\r\n          }\r\n        }\r\n        if (\"Method\" in mgitem) {\r\n          let l: string[] = [];\r\n          const v = mgitem[\"Method\"];\r\n          if (Array.isArray(v)) {\r\n            l = v;\r\n          } else {\r\n            l = [v];\r\n          }\r\n          for (let meth of l) {\r\n            oobj.MakeMethod(meth);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (item.SPItem) {\r\n      const spitem: any = item.SPItem;\r\n      if (spitem[\"Comment\"]) {\r\n        obj.Comment = spitem[\"Comment\"];\r\n      }\r\n      if (spitem[\"Class\"] && ob.IsInstance(obj)) {\r\n        let cname = spitem[\"Class\"];\r\n        if (cname) {\r\n          let cla = ob.FindClass(cname);\r\n          if (cla) {\r\n            (obj as ISemTalkInstance).SetClass(cla); \r\n          }\r\n        } \r\n      }\r\n     for (const l of this._languages) {\r\n        if (spitem[l]) {\r\n          if (l === this.props.semtalk.base.CurrentNsp) fnd = true;\r\n          let ls = GetLanguage(l);\r\n          if (ls) obj.MakeSynonym(spitem[l], ls);\r\n        }\r\n      }\r\n      for (const a of sysc.AllAttributes().map(x => x.ClassOf().ObjectName)) {\r\n        if (spitem[a]) {\r\n          obj.SetValue(a, spitem[a]);\r\n        }\r\n      }\r\n    }\r\n    if (!fnd) {\r\n      obj.MakeSynonym(item.ObjectCaption, this.props.semtalk.base.CurrentNsp);\r\n    }\r\n  }\r\n  private selectExtern = (item: IExternalObject, obj: ISemTalkObject, sysc: ISemTalkSystemClass): void => {\r\n    this.copyExtern(item, obj, sysc);\r\n    const cb = this.props.callback;\r\n    cb(this.props.semtalk, this.props.semtalk.currentShape(), [obj], this.state.isexpand);\r\n  }\r\n  private additemX = (item: IExternalObject): void => {\r\n    const cb = this.props.callback;\r\n    if (item.Object !== null) {\r\n      cb(this.props.semtalk, this.props.semtalk.currentShape(), [item.Object], this.state.isexpand);\r\n    } else {\r\n      const bas = this.props.semtalk.base;\r\n      let oname = item.ObjectName;\r\n      // let oname = item.ObjectCaption;\r\n      if (oname.length > 0) {\r\n        const sysc = this._sysclass;\r\n        if (sysc !== undefined && sysc !== null) {\r\n          if (!this.props.isclasses) {\r\n            let obj = bas.FindInstance(oname);\r\n            if (obj !== null) {\r\n              if (obj.IsInstance(sysc)) {\r\n                this.selectExtern(item, obj, sysc);\r\n              } else {\r\n                alert(\"You cannot select:\" + oname);\r\n              }\r\n            } else {\r\n              let cla: ISemTalkClass = sysc;\r\n              if (item.ObjectClass) {\r\n                let c = bas.FindClass(item.ObjectClass);\r\n                if (c) cla = c;\r\n              }\r\n              obj = cla.MakeInstance(oname);\r\n              this.selectExtern(item, obj, sysc);\r\n            }\r\n          } else {\r\n            oname = sysc.ObjectName.substr(0, 2) + \"#\" + oname;\r\n            let obj = bas.FindClass(oname);\r\n            if (obj !== null) {\r\n              if (obj.IsParent(sysc)) {\r\n                this.selectExtern(item, obj, sysc);\r\n              } else {\r\n                alert(\"You cannot select:\" + oname);\r\n              }\r\n            } else {\r\n              if (this.state.isbusinessclasses) {\r\n                let bc = bas.MakeBusinessClass(oname);\r\n                if (bc !== null) {\r\n                  if (!bc.IsParent(sysc)) {\r\n                    bc.AddSubclassOf(sysc);\r\n                  }\r\n                  obj = bc;\r\n                } else {\r\n                  obj = sysc.MakeSubClass(oname);\r\n                }\r\n              } else {\r\n                obj = sysc.MakeSubClass(oname);\r\n              }\r\n              this.selectExtern(item, obj, sysc);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private commands: any[] = [];\r\n  private saveItem = {\r\n    key: 'Save',\r\n    name: this.props.semtalk.getResStrListener(\"STRDLGCMDOK\").replace(\"&\", \"\"),\r\n    //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n    iconProps: {\r\n      iconName: 'Save'\r\n    },\r\n    onClick: (): void => {\r\n      this.additem();\r\n    }\r\n  };\r\n  // private exportItem = {\r\n  //   key: 'Export',\r\n  //   disabled: true,\r\n  //   name: this.props.semtalk.getResStrListener(\"STRDLGEXPORT\").replace(\"&\", \"\"),\r\n  //   //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n  //   iconProps: {\r\n  //     iconName: 'Export'\r\n  //   },\r\n  //   onClick: (): void => {\r\n  //     if (this.props.mongo.usemongo && this._sysclass) {\r\n  //       this.sp2mg(this._sysclass);\r\n  //     }\r\n  //     // this.addnewitem();\r\n  //   }\r\n  // };\r\n\r\n  public render(): React.ReactElement<ISemTalkInsertProps> {\r\n    let selmode = SelectionMode.single;\r\n    let vismode = CheckboxVisibility.hidden;\r\n    this.commands = [];\r\n    this.commands.push(this.saveItem);\r\n    // let exp = false;\r\n    if (this.props.isexport || this.props.isinsert) {\r\n      // if (!this.props.isinsert) {\r\n      //   exp = true;\r\n      //   this.commands.push(this.exportItem);\r\n      // }\r\n      selmode = SelectionMode.multiple;\r\n      vismode = CheckboxVisibility.always;\r\n    }\r\n    // if (!exp && this.props.mongo.usemongo) {\r\n    //   this.commands.push(this.exportItem);\r\n    // }\r\n    const stackTokens = { childrenGap: 10 };\r\n\r\n    let r: React.ReactElement<ISemTalkInsertProps>;\r\n    let lbl = \"\";\r\n    if (this._sysclass !== undefined && this._sysclass !== null) {\r\n      lbl = this._sysclass.ID2NameNsp();\r\n    } else {\r\n      this.props.semtalk.getResStrListener(\"STRNAME\");\r\n    }\r\n    r = <Fabric>\r\n      <CommandBar id=\"stSelectTest\"\r\n        items={this.commands}\r\n      ></CommandBar>\r\n      <Stack horizontal tokens={stackTokens}>\r\n        {/* <Toggle id=\"repoToggle\" checked={this.state.showextern} label={this.props.semtalk.getResStr(\"STRREPOSITORY\")}\r\n          onChange={(ev: any, isChecked: boolean | undefined) => {\r\n            if (isChecked !== undefined) {\r\n              this.setState({ showextern: isChecked });\r\n              this.loadObject(this.state.objectid, isChecked, this.state.showgraph);\r\n            }\r\n          }}></Toggle>\r\n        <Toggle id=\"graphToggle\" checked={this.state.showgraph} label={this.props.semtalk.getResStr(\"STRGRAPH\")}\r\n          onChange={(ev: React.FormEvent<HTMLElement>, isChecked: boolean | undefined) => {\r\n            if (isChecked !== undefined) {\r\n              this.setState({ showextern: false, showgraph: isChecked });\r\n              this.loadObject(this.state.objectid, this.state.showextern, isChecked);\r\n            }\r\n          }}></Toggle> */}\r\n        {this.props.isinsert &&\r\n          <Toggle id=\"expandToggle\" checked={this.state.isexpand} label={this.props.semtalk.getResStrListener(\"STREXPAND\")}\r\n            onChange={(_ev: React.FormEvent<HTMLElement>, isChecked: boolean | undefined) => {\r\n              if (isChecked !== undefined) {\r\n                this.setState({ isexpand: isChecked });\r\n              }\r\n            }}></Toggle>\r\n        }\r\n      </Stack>\r\n      {!this.props.isinsert &&\r\n        <TextField label={lbl} value={this.state.objectname} onChange={(_ev, a) => {\r\n          if (a !== undefined)\r\n            this.setState({ objectname: a, items: this._onFilter(a) });\r\n        }} />\r\n      }\r\n      <DetailsList\r\n        items={this.state.items}\r\n        compact={false}\r\n        columns={this._columns}\r\n        selectionMode={selmode}\r\n        layoutMode={DetailsListLayoutMode.justified}\r\n        selection={this._sel}\r\n        onItemInvoked={this._onItemInvoked}\r\n        checkboxVisibility={vismode}\r\n        isHeaderVisible={true}\r\n      />\r\n    </Fabric>;\r\n    // console.debug(\"r: \", r.toString(), r);\r\n    return r;\r\n  }\r\n  private _onFilter = (text: any): IExternalObject[] => {\r\n    let fitems = this._allitems;\r\n    if (text) {\r\n      // const tl = text.toLowerCase();\r\n      fitems = this._allitems.filter((i: IExternalObject) => {\r\n        // return (i.ObjectCaption.toLowerCase().indexOf(tl) > -1);\r\n        return (i.ObjectCaption.startsWith(text));\r\n      });\r\n    }\r\n    return fitems;\r\n  }\r\n}","import { ITreeItem } from './ITreeItem';\r\nimport { IIconProps } from 'office-ui-fabric-react/lib/Icon';\r\n\r\n/**\r\n * Specifies the display mode of the tree item action.\r\n */\r\nexport enum TreeItemActionsDisplayMode {\r\n    Buttons = 1,\r\n    ContextualMenu\r\n}\r\n\r\n/**\r\n * Tree item actions.\r\n */\r\nexport interface ITreeItemActions {\r\n    /**\r\n     * List of actions.\r\n     */\r\n    actions: ITreeItemAction[];\r\n    /**\r\n     * Display mode of the tree item actions.\r\n     */\r\n    treeItemActionsDisplayMode?: TreeItemActionsDisplayMode;\r\n}\r\n\r\n/**\r\n * TreeItemActionsControl properties interface\r\n */\r\nexport interface ITreeItemActionsControlProps {\r\n    /**\r\n     * Current tree item.\r\n     */\r\n    treeItem: ITreeItem;\r\n    /**\r\n     * List of actions.\r\n     */\r\n    treeItemActions: ITreeItemActions;\r\n    /**\r\n     * Callback after execution of tree item action.\r\n     */\r\n    treeItemActionCallback: () => void;\r\n}\r\n\r\n/**\r\n * TreeItemActionsControl state interface\r\n */\r\nexport interface ITreeItemActionsControlState {\r\n    /**\r\n     * Specifies the list of the available actions for the tree item.\r\n     */\r\n    availableActions: ITreeItemAction[];\r\n    /**\r\n     * TreeItemAction display mode.\r\n     */\r\n    displayMode: TreeItemActionsDisplayMode;\r\n}\r\n\r\n/**\r\n * ConcreteTreeItemAction properties interface\r\n */\r\nexport interface IConcreteTreeItemActionProps {\r\n    /**\r\n     * Specifies the list of the available actions for the tree item.\r\n     */\r\n    treeItemActions: ITreeItemAction[];\r\n    /**\r\n     * Current tree item\r\n     */\r\n    treeItem: ITreeItem;\r\n\r\n    /**\r\n     * Method to be executed when action is fired.\r\n     */\r\n    treeItemActionCallback: () => void;\r\n}\r\n\r\n/**\r\n * Interface represents the possible action that could be execute on tree item level.\r\n */\r\nexport interface ITreeItemAction {\r\n    /**\r\n     * Action ID\r\n     */\r\n    id: string;\r\n    /**\r\n     * Action title\r\n     */\r\n    title?: string;\r\n    /**\r\n     * Icon to be displayed for the action.\r\n     */\r\n    iconProps?: IIconProps;\r\n    /**\r\n     * Specify if the action is hidden. This could be used for instance when you want to invoke the action right after rendering.\r\n     */\r\n    hidden?: boolean;\r\n    /**\r\n     * Specifies if you want to invoke the action on render\r\n     */\r\n    invokeActionOnRender?: boolean;\r\n\r\n    /**\r\n     * Method to be executed when action is fired.\r\n     *  @param currentTreeItem\r\n     */\r\n    actionCallback: (currentTreeItem: ITreeItem) => void;\r\n}\r\n","import * as React from 'react';\nimport { IContextualMenuItem, IContextualMenuProps } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { IconButton } from 'office-ui-fabric-react/lib/Button';\nimport { ITreeItem } from './ITreeItem';\nimport { ITreeItemAction, IConcreteTreeItemActionProps } from './ITreeItemActions';\nimport styles from './TreeView.module.scss';\n\n/* tslint:disable:noUnusedLocals */\n\n\n/**\n * Renders the controls for Dropdown TreeItem action component\n */\nexport class DropdownTreeItemAction extends React.Component<IConcreteTreeItemActionProps> {\n\n  /**\n   * componentWillMount lifecycle hook\n   */\n  public componentWillMount(): void {\n    this.checkForImmediateInvocations();\n  }\n\n  /**\n   * Prepates contextual menu items for dropdown.\n   */\n  private prepareContextualMenuProps = (treeItem: ITreeItem, treeItemActions: ITreeItemAction[]): IContextualMenuProps => {\n    let items: IContextualMenuItem[] = [];\n    let useTargetWidth = true;\n\n    for (const treeItemAction of treeItemActions) {\n      if (!treeItemAction.hidden) {\n        let treeItemActionMenuItem: IContextualMenuItem = {\n          key: treeItem.key.toString(),\n          onClick: () => { this.onActionExecute(treeItemAction); }\n        };\n\n        treeItemActionMenuItem.text = treeItemAction.title;\n        treeItemActionMenuItem.name = treeItemAction.title;\n        treeItemActionMenuItem.iconProps = treeItemAction.iconProps;\n        useTargetWidth = treeItemActionMenuItem.iconProps ? false : true;\n\n        items.push(treeItemActionMenuItem);\n      }\n    }\n\n    const contextualMenuProps: IContextualMenuProps = {\n      items,\n      useTargetWidth\n    };\n    return contextualMenuProps;\n  }\n\n  /**\n   * Prepare treeItem action button style.\n   */\n  // private getTreeItemActionActionButtonStyle = (): React.CSSProperties => {\n  //   let result: React.CSSProperties = {\n  //     backgroundColor: \"transparent\",\n  //     width: \"14px\",\n  //     display: \"inline-flex\",\n  //     padding: \"0px\"\n  //   };\n\n  //   return result;\n  // }\n\n  /**\n   * Check if there are action to immediatly invoke\n   */\n  private checkForImmediateInvocations() {\n    const { treeItemActions } = this.props;\n    for (const action of treeItemActions) {\n      if (action.invokeActionOnRender) {\n        this.onActionExecute(action);\n      }\n    }\n  }\n\n  /**\n   * Handler to execute selected action.\n   */\n  private onActionExecute = async (treeItemAction: ITreeItemAction) => {\n   // const updateAction = await treeItemAction.actionCallback(this.props.treeItem);\n    await treeItemAction.actionCallback(this.props.treeItem);\n    this.props.treeItemActionCallback();\n  }\n\n  /**\n   * Default React render method\n   */\n  public render(): React.ReactElement<IConcreteTreeItemActionProps> {\n    const { treeItem, treeItemActions } = this.props;\n\n    const contextualMenuProps = this.prepareContextualMenuProps(treeItem, treeItemActions);\n\n    return (\n      <div>\n        <IconButton\n          menuProps={contextualMenuProps}\n          menuIconProps={{ iconName: 'MoreVertical' }}\n          className={styles.actionMore}\n          title=\"More\"\n          ariaLabel=\"More\"\n        />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { CommandBarButton } from 'office-ui-fabric-react/lib/Button';\nimport { IIconProps } from 'office-ui-fabric-react/lib/Icon';\nimport { ITreeItemAction, IConcreteTreeItemActionProps } from './ITreeItemActions';\nimport styles from './TreeView.module.scss';\n\n/**\n * Renders the controls for Button TreeItem action component\n */\nexport default class ButtonTreeItemAction extends React.Component<IConcreteTreeItemActionProps> {\n\n  /**\n   * componentWillMount lifecycle hook\n   */\n  public componentWillMount(): void {\n    this.checkForImmediateInvocations();\n  }\n\n  /**\n   * Prepares the command bar button\n   */\n  private prepareCommandBarButton = (treeItemAction: ITreeItemAction): { name: string | undefined, text: string| undefined,\n    iconProps: IIconProps| undefined, btnTitle: string| undefined } => {\n    let name: string | undefined = treeItemAction.title;\n    let text: string | undefined= treeItemAction.title;\n    let iconProps: IIconProps | undefined = treeItemAction.iconProps;\n    let btnTitle: string| undefined = treeItemAction.title;\n\n    return { name, text, iconProps, btnTitle };\n  }\n\n  /**\n   * Gets the action button styling\n   */\n  // private getTreeItemActionButtonStyle = (treeItemAction: ITreeItemAction): React.CSSProperties => {\n  //   let result: React.CSSProperties = {\n  //     backgroundColor: \"transparent\",\n  //     height: \"32px\"\n  //   };\n\n  //   return result;\n  // }\n\n  /**\n   * Check if there are action to immediatly invoke\n   */\n  private checkForImmediateInvocations() {\n    const { treeItemActions } = this.props;\n\n    for (const action of treeItemActions) {\n      if (action.invokeActionOnRender) {\n        this.onActionExecute(action);\n      }\n    }\n  }\n\n  /**\n   * On action execution\n   */\n  private onActionExecute = async (treeItemAction: ITreeItemAction) => {\n    await treeItemAction.actionCallback(this.props.treeItem);\n    this.props.treeItemActionCallback();\n  }\n\n  /**\n   * Default React render method\n   */\n  public render(): React.ReactElement<IConcreteTreeItemActionProps> {\n    const { treeItem, treeItemActions } = this.props;\n\n    // Check if there are actions to show\n    const actionsToShow = treeItemActions.filter(a => !a.hidden);\n    if (actionsToShow && actionsToShow.length === 0) {\n     // return null;\n    }\n\n    return (\n      <div>\n        {\n          treeItemActions &&\n          treeItemActions.map(treeItemAction => {\n            const { name, text, iconProps, btnTitle } = this.prepareCommandBarButton(treeItemAction);\n\n            return (\n              treeItemAction.hidden ? (\n                null\n              ) : (\n                  <div>\n                    <CommandBarButton split={true}\n                      onClick={() => { this.onActionExecute(treeItemAction); }}\n                      iconProps={iconProps}\n                      text={text}\n                      title={btnTitle}\n                      name={name}\n                      key={treeItem.key}\n                      className={styles.actionButton} />\n                  </div>\n                )\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ITreeItemAction, ITreeItemActionsControlProps, ITreeItemActionsControlState, TreeItemActionsDisplayMode } from './ITreeItemActions';\nimport { DropdownTreeItemAction } from './DropdownTreeItemAction';\nimport ButtonTreeItemAction from './ButtonTreeItemAction';\n\n/**\n * Renders the controls for TreeItem actions component\n */\nexport default class TreeItemActionsControl extends React.Component<ITreeItemActionsControlProps, ITreeItemActionsControlState> {\n    /**\n     * Constructor method\n     * @param props properties interface\n     */\n    constructor(props: ITreeItemActionsControlProps) {\n        super(props);\n\n        const { treeItemActions } = this.props;\n        const displayMode = treeItemActions.treeItemActionsDisplayMode ? treeItemActions.treeItemActionsDisplayMode : TreeItemActionsDisplayMode.Buttons;\n\n        this.state = {\n            availableActions: [],\n            displayMode\n        };\n    }\n\n    /**\n     * componentWillMount lifecycle hook\n     */\n    public componentWillMount(): void {\n        this.getAvailableActions();\n    }\n\n    /**\n     * Get the available treeItem actions\n     */\n    private async getAvailableActions(): Promise<void> {\n        const { treeItemActions } = this.props;\n\n        // Prepare list of the available actions\n        const availableActions: ITreeItemAction[] = [];\n\n        if (treeItemActions.actions) {\n            for (const action of treeItemActions.actions) {\n                availableActions.push(action);\n            }\n        }\n\n        this.setState({\n            availableActions\n        });\n    }\n\n    /**\n     * Default React render method\n     */\n    public render(): React.ReactElement<ITreeItemActionsControlProps> {\n        const { treeItem } = this.props;\n        const { displayMode, availableActions } = this.state;\n\n        if (!availableActions || availableActions.length <= 0 || !treeItem) {\n            // return null;\n        }\n\n        return (\n            <div>\n                {\n                    displayMode === TreeItemActionsDisplayMode.ContextualMenu ?\n                        <DropdownTreeItemAction key={`DdAction-${treeItem.key}`}\n                            treeItemActions={availableActions}\n                            treeItem={treeItem}\n                            treeItemActionCallback={this.props.treeItemActionCallback} />\n                        :\n                        <ButtonTreeItemAction key={`BtnAction-${treeItem.key}`}\n                            treeItemActions={availableActions}\n                            treeItem={treeItem} treeItemActionCallback={this.props.treeItemActionCallback} />\n                }\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport styles from './TreeView.module.scss';\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { IconButton } from 'office-ui-fabric-react/lib/Button';\n// import * as strings from 'ControlStrings';\nimport { ITreeItem } from './ITreeItem';\nimport { TreeViewSelectionMode } from './ITreeViewProps';\nimport TreeItemActionsControl from './TreeItemActionsControl';\nimport { TreeItemActionsDisplayMode } from './ITreeItemActions';\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\nimport {\n  Image, Stack, StackItem\n} from 'office-ui-fabric-react';\n/**\n * TreeItem properties interface\n */\nexport interface ITreeItemProps {\n  /**\n   * Current tree item.\n   */\n  treeItem: ITreeItem;\n  /**\n   * Selection mode of tree item.\n   */\n  selectionMode: TreeViewSelectionMode;\n  /**\n   * Specifies the left padding for current tree item based on hierarchy.\n   */\n  leftOffset: number;\n  /**\n   * Specifies whether current tree item is a root.\n   */\n  isFirstRender: boolean;\n  /**\n   * Specifies whether current tree item should be rendered as an expanded.\n   */\n  defaultExpanded: boolean;\n  /**\n   * Specifies whether current tree item should be rendered as an expanded.\n   */\n  showCheckboxes: boolean;\n  /**\n   * Stores the selected tree items\n   */\n  activeItems: ITreeItem[];\n  /**\n   * Display mode of the tree item actions.\n   */\n  treeItemActionsDisplayMode?: TreeItemActionsDisplayMode;\n\n  /**\n   * Callback function called when an item is expanded / collapsed.\n   */\n  parentCallbackExpandCollapse: (item: ITreeItem, isExpanded: boolean) => void;\n  /**\n   * Callback function called when an item is selected.\n   */\n  parentCallbackOnSelect: (item: ITreeItem, isSelected: boolean) => void;\n  /**\n   * Customize how item is rendered.\n   */\n  onRenderItem?: (item: ITreeItem) => JSX.Element;\n\n  nodesToExpand: any[];\n  /**\n  * Specifies whether current tree item's children should be rendered as expanded.\n  */\n  defaultExpandedChildren: boolean;\n}\n\n\n\n/**\n * TreeItem state interface\n */\nexport interface ITreeItemState {\n  /**\n   * Specifies whether current tree item is selected\n   */\n  selected?: boolean;\n  /**\n   * Specifies whether current tree item is expanded\n   */\n  expanded?: boolean;\n}\n\n/**\n * CSS styles for checkbox\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// const checkBoxStyle: React.CSSProperties = {\n//   display: \"inline-flex\"\n// };\n\n/**\n * Renders the controls for TreeItem component\n */\nexport default class TreeItem extends React.Component<ITreeItemProps, ITreeItemState> {\n\n  /**\n   * Constructor method\n   * @param props properties interface\n   */\n  constructor(props: ITreeItemProps, _state: ITreeItemState) {\n    super(props);\n\n    // Check if current item is selected\n    let active = props.activeItems.filter(item => item.key === props.treeItem.key);\n\n    let expanded = props.defaultExpanded;\n    if (props.nodesToExpand.indexOf(props.treeItem.key) !== -1) {\n      expanded = true;\n    }\n\n    this.state = {\n      selected: active.length > 0,\n      // expanded: this.props.defaultExpanded\n      expanded: expanded\n    };\n\n    // Bind control events\n    this._itemSelected = this._itemSelected.bind(this);\n    this._handleExpandCollapse = this._handleExpandCollapse.bind(this);\n  }\n\n  /**\n   * Handle the checkbox change trigger\n   */\n  private _itemSelected(_ev: any, isChecked: boolean | undefined): void {\n    if (isChecked !== undefined) {\n      this.setState({\n        selected: !this.state.selected\n      });\n\n      this.props.parentCallbackOnSelect(this.props.treeItem, isChecked);\n    }\n  }\n  /**\n   * Handle the click event: collapse or expand\n   */\n  private _handleExpandCollapse(): void {\n    this.setState({\n      expanded: !this.state.expanded\n    });\n\n    this.props.parentCallbackExpandCollapse(this.props.treeItem, !this.state.expanded);\n  }\n\n  /**\n   * Lifecycle event hook when component retrieves new properties\n   * @param nextProps\n   * @param nextContext\n   */\n  public UNSAFE_componentWillReceiveProps(nextProps: ITreeItemProps): void {\n    // If selection is turned on, set the item as selected\n    if (this.props.selectionMode !== TreeViewSelectionMode.None) {\n      let active = nextProps.activeItems.filter(item => item.key === this.props.treeItem.key);\n\n      this.setState({\n        selected: active.length > 0,\n        expanded: this.state.expanded\n      });\n    }\n  }\n\n  /**\n   * Default or custom rendering of tree item\n   */\n  private renderItem(item: ITreeItem): JSX.Element {\n    if (typeof this.props.onRenderItem === \"function\") {\n      // Custom rendering of tree item\n      return this.props.onRenderItem(item);\n    }\n    else {\n      let r = (\n        // Default rendering of tree item\n        <div\n          className={styles.labels}\n          onClick={(e) => {\n            if (this.props.selectionMode !== TreeViewSelectionMode.None && item.selectable !== false) {\n              e.stopPropagation();\n              if (!item.disabled) {\n                this._itemSelected(e, !this.state.selected);\n              }\n            }\n          }}\n        >\n          <Stack horizontal tokens={{ childrenGap: 10 }}>\n            {\n              this.props.showCheckboxes && item.selectable === false && !item.children &&\n              <span className={styles.blankspace}>&nbsp;</span>\n            }\n\n            {\n              // Rendering when item has iconProps\n              item.iconProps &&\n              <StackItem>\n                <span>\n                  <Icon className={styles.icon}\n                    iconName={item.iconProps.iconName}\n                    style={item.iconProps.style} />\n                  &nbsp;\n                </span>\n              </StackItem>\n            }\n            {\n              // Rendering when item has imageProps\n              item.imageProps &&\n              <StackItem>\n                <Image className={styles.icon} src={item.imageProps.logourl} alt=\"\" width={18} line-height={18} height={18}></Image>\n              </StackItem>\n            }\n            <StackItem>\n              {item.label}\n            </StackItem>\n            {\n              // Render sublabel\n              item.subLabel &&\n              <div className={styles.itemSubLabel}>\n                {item.subLabel}\n              </div>\n            }\n          </Stack>\n        </div>\n      );\n      return r;\n    }\n  }\n\n  /**\n   * Process the child nodes\n   */\n  public createChildNodes = (list: any, paddingLeft: any) => {\n    if (list.length) {\n      const {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        //  treeItem,\n        selectionMode,\n        activeItems,\n        parentCallbackExpandCollapse,\n        parentCallbackOnSelect,\n        onRenderItem,\n        showCheckboxes,\n        treeItemActionsDisplayMode,\n        defaultExpandedChildren\n      } = this.props;\n\n      let exp = false;\n      const { expanded } = this.state;\n      if (expanded) {\n        exp = true;\n      }\n\n      let childrenWithHandlers = list.map((item: any, _index: any) => {\n        return (\n          <TreeItem\n            treeItem={item}\n            defaultExpanded={this.props.defaultExpandedChildren ? exp : exp &&\n              !item.hasOwnProperty('children')}\n            defaultExpandedChildren={defaultExpandedChildren}\n            leftOffset={paddingLeft}\n            selectionMode={selectionMode}\n            activeItems={activeItems}\n            isFirstRender={!paddingLeft ? true : false}\n            parentCallbackExpandCollapse={parentCallbackExpandCollapse}\n            parentCallbackOnSelect={parentCallbackOnSelect}\n            onRenderItem={onRenderItem}\n            showCheckboxes={showCheckboxes}\n            treeItemActionsDisplayMode={treeItemActionsDisplayMode}\n            nodesToExpand={this.props.nodesToExpand}\n          />\n        );\n      });\n\n      return childrenWithHandlers;\n    }\n  }\n\n  /**\n   * Default action callback\n   */\n  private treeItemActionCallback = (): void => {\n  }\n\n  /**\n   * Default React render method\n   */\n  public render(): React.ReactElement<ITreeItemProps> {\n    const { treeItem, leftOffset, showCheckboxes, selectionMode, treeItemActionsDisplayMode } = this.props;\n\n    const {\n      expanded,\n      selected\n    } = this.state;\n\n    const styleProps: React.CSSProperties = {\n      marginLeft: `${leftOffset}px`\n    };\n\n    const contentStyles: React.CSSProperties = {\n      marginLeft: treeItem.children ? '0' : `${leftOffset}px`\n    };\n\n    return (\n      <div>\n        <div className={`${styles.listItem} ${styles.tree}`}>\n          <div className={`${styles.treeSelector}`}>\n            {\n              // Render expand / collapse icons for items which has children.\n              treeItem.children &&\n              <IconButton\n                iconProps={expanded ? { iconName: 'ChevronDown' } : { iconName: 'ChevronRight' }}\n                alt={expanded ? \"\" : \"\"}\n                title={expanded ? \"\" : \"\"}\n                onClick={() => this._handleExpandCollapse()}>\n              </IconButton>\n            }\n          </div>\n          <div\n            className={css({\n              [styles.itemContent]: true,\n              [styles.noCheckBox]: !showCheckboxes,\n              [styles.checked]: selected,\n              [styles.disabled]: !!treeItem.disabled\n            })}\n            style={contentStyles}\n            onClick={(e) => {\n              if (this.props.selectionMode !== TreeViewSelectionMode.None && treeItem.selectable !== false) {\n                e.stopPropagation();\n                if (!treeItem.disabled && e.currentTarget === e.target) {\n                  this._itemSelected(e, !this.state.selected);\n                }\n              }\n            }}\n          >\n            {\n              // Render checkbox (if item is selectable, Selection mode is not None, and showCheckboxes property is set to true)\n              (treeItem.selectable !== false) && selectionMode !== TreeViewSelectionMode.None && showCheckboxes &&\n              <Checkbox\n                checked={selected}\n                disabled={treeItem.disabled}\n                className={styles.checkbox}\n                onChange={this._itemSelected}\n              />\n            }\n            {\n              // Call default render item function\n              this.renderItem(treeItem)\n            }\n            {\n              // Render actions for tree item\n              treeItem.actions &&\n              <div className={styles.itemMenu}>\n                <TreeItemActionsControl treeItem={treeItem}\n                  treeItemActions={{\n                    actions: treeItem.actions,\n                    treeItemActionsDisplayMode: treeItemActionsDisplayMode\n                  }}\n                  treeItemActionCallback={this.treeItemActionCallback} />\n              </div>\n            }\n          </div>\n        </div>\n        <div style={styleProps || {}}>\n          {\n            // Render child nodes\n            expanded && treeItem.children\n              ? this.createChildNodes(treeItem.children, leftOffset) // we double left padding on every recursion/depth\n              : null\n          }\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport styles from './TreeView.module.scss';\nimport uniqBy from 'lodash/uniqBy';\nimport { ITreeViewProps, SelectChildrenMode, TreeViewSelectionMode } from './ITreeViewProps';\nimport { ITreeViewState } from './ITreeViewState';\nimport { ITreeItem } from './ITreeItem';\nimport TreeItem from './TreeItem';\n// import * as telemetry from '../../common/telemetry';\n\n/* tslint:disable:noUnusedLocals */\n\n/**\n * Renders the controls for TreeItem component\n */\nexport class TreeView extends React.Component<ITreeViewProps, ITreeViewState> {\n\n  private nodesToExpand: string[] = [];\n  /**\n   * Constructor method\n   * @param props properties interface\n   */\n  constructor(props: ITreeViewProps) {\n    super(props);\n   // telemetry.track('TreeView');\n\n    this.state = {\n      loaded: true,\n      defaultExpanded: props.defaultExpanded,\n      activeItems: []\n    };\n\n    // Bind control events\n    this.handleTreeExpandCollapse = this.handleTreeExpandCollapse.bind(this);\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n\n    if (props.expandToSelected && props.defaultSelectedKeys) {\n      props.defaultSelectedKeys.forEach(element => {\n        this.pathTo(props.items, element);\n      });\n    }\n  }\n\n\n  private pathTo = (array: ITreeItem[], target: string): string => {\n    let result: string=\"\";\n    if (array) {\n      array.some(({ key, children = [] }) => {\n        if (key === target) {\n          this.nodesToExpand.push(key);\n          result = key;\n          return true;\n        }\n        let temp = this.pathTo(children, target);\n        if (temp) {\n          this.nodesToExpand.push(key);\n          result = key + '.' + temp;\n          return true;\n        }\n        return false;\n      });\n    }\n    return result;\n  }\n\n  private getSelectedItems(treeItems: ITreeItem[], selectedKeys: string[], selectedChildren: boolean): ITreeItem[] {\n    let selectedItems: ITreeItem[] = [];\n\n    treeItems.forEach(item => {\n      if (selectedKeys.indexOf(item.key) !== -1 && item.selectable !== false && !item.disabled) {\n        selectedItems.push(item);\n        if (selectedChildren) {\n          this.selectAllChildren(item, selectedItems);\n        }\n        else {\n          if (item.children) {\n            selectedItems.push(...this.getSelectedItems(item.children, selectedKeys, selectedChildren));\n          }\n        }\n      }\n      else {\n        if (item.children) {\n          selectedItems.push(...this.getSelectedItems(item.children, selectedKeys, selectedChildren));\n        }\n      }\n    });\n\n    return selectedItems;\n  }\n\n  /**\n   * Fires When expand / collapse item in TreeView\n   * @argument item The expanded / collapsed item\n   * @argument isExpanded The status of item  (expanded / collapsed)\n   */\n  private handleTreeExpandCollapse(item: ITreeItem, isExpanded: boolean): void {\n    if (typeof this.props.onExpandCollapse === \"function\") {\n      this.props.onExpandCollapse(item, isExpanded);\n    }\n  }\n\n  /**\n   * Selects all child nodes when parent node is selected.\n   * @param item current tree item\n   */\n  private selectAllChildren(item: ITreeItem, selectedItems: ITreeItem[]): void {\n    if (item.children) {\n      item.children.forEach(element => {\n        if (!element.disabled && element.selectable !== false) {\n          selectedItems.push(element);\n        }\n\n        if (element.children) {\n          this.selectAllChildren(element, selectedItems);\n        }\n      });\n    }\n  }\n\n  /**\n   * Unselects all child nodes of selected parent.\n   */\n  private unSelectChildren(item: any, unselectArray: string[]): void {\n    const tempItem: any = item;\n\n    if (tempItem.children) {\n      tempItem.children.forEach((element: any) => {\n        unselectArray.push(element.key);\n\n        if (element.children) {\n          this.unSelectChildren(element, unselectArray);\n        }\n      });\n    }\n  }\n\n  /**\n   * Fires When Tree Item is selected in TreeView\n   * @argument item The selected item\n   * @argument isSelected The status of item selection\n   */\n  private handleOnSelect(item: ITreeItem, isSelected: boolean): void {\n    let selectedItems: ITreeItem[] = this.state.activeItems;\n\n    if (isSelected) {\n      if (this.props.selectionMode === TreeViewSelectionMode.Multiple) {\n        // Add the checked term\n        selectedItems.push(item);\n\n        if (this.checkIfChildrenShouldBeSelected(SelectChildrenMode.Select)) {\n          this.selectAllChildren(item, selectedItems);\n        }\n\n        selectedItems = uniqBy(selectedItems, 'key');\n\n        // Filter out the duplicate terms\n        this.setState({\n          activeItems: selectedItems\n        });\n      }\n      else {\n        // Only store the current selected item\n        this.setState({\n          activeItems: [item]\n        });\n\n        selectedItems = [item];\n      }\n    }\n    else {\n      // Remove the item from the list of active nodes\n      let unselectArray: string[] = [];\n      unselectArray.push(item.key);\n\n      if (this.checkIfChildrenShouldBeSelected(SelectChildrenMode.Unselect)) {\n        this.unSelectChildren(item, unselectArray);\n      }\n\n      unselectArray.forEach(element => {\n        selectedItems = selectedItems.filter(i => i.key !== element);\n      });\n\n      this.setState({\n        activeItems: selectedItems\n      });\n    }\n\n    if (typeof this.props.onSelect === \"function\") {\n      this.props.onSelect(selectedItems);\n    }\n  }\n\n  private checkIfChildrenShouldBeSelected(testMode: SelectChildrenMode) {\n    let selectChildrenMode = SelectChildrenMode.None;\n    if (this.props.selectChildrenMode) {\n      selectChildrenMode = this.props.selectChildrenMode;\n    }\n    else {\n      if (this.props.selectChildrenIfParentSelected) {\n        selectChildrenMode = SelectChildrenMode.All;\n      }\n    }\n\n    if ((selectChildrenMode & testMode) === testMode) {\n      return true;\n    }\n    return false;\n  }\n\n  public componentDidMount() {\n    const {\n      items,\n      defaultSelectedKeys\n    } = this.props;\n    if (defaultSelectedKeys) {\n      const selectedItems = this.getSelectedItems(items, defaultSelectedKeys, this.checkIfChildrenShouldBeSelected(SelectChildrenMode.Mount));\n      this.setState({\n        activeItems: selectedItems\n      });\n    }\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: ITreeViewProps): void {\n    const {\n      items,\n      defaultSelectedKeys\n    } = nextProps;\n    if (defaultSelectedKeys) {\n      const selectedItems = this.getSelectedItems(items, defaultSelectedKeys, this.checkIfChildrenShouldBeSelected(SelectChildrenMode.Update));\n      this.setState({\n        activeItems: selectedItems\n      });\n    }\n  }\n\n  /**\n   * Default React render method\n   */\n  public render(): JSX.Element {\n    const {\n      items,\n      selectionMode,\n      onRenderItem,\n      showCheckboxes,\n      treeItemActionsDisplayMode,\n      // defaultExpanded,\n      defaultExpandedChildren\n    } = this.props;\n\n    return (\n      <div className={styles.treeView}>\n        {\n          items.map((treeNodeItem, _index) => (\n            <TreeItem\n              treeItem={treeNodeItem}\n              leftOffset={20}\n              isFirstRender={true}\n              defaultExpanded={this.props.defaultExpanded}\n              defaultExpandedChildren={defaultExpandedChildren !== undefined ? defaultExpandedChildren : true}\n              selectionMode={selectionMode}\n              activeItems={this.state.activeItems}\n              parentCallbackExpandCollapse={this.handleTreeExpandCollapse}\n              parentCallbackOnSelect={this.handleOnSelect}\n              onRenderItem={onRenderItem}\n              showCheckboxes={showCheckboxes}\n              treeItemActionsDisplayMode={treeItemActionsDisplayMode}\n              nodesToExpand={this.nodesToExpand}\n            />\n          ))\n        }\n      </div>\n    );\n  }\n}\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { LogLevel } from \"@azure/msal-browser\";\r\n\r\n/**\r\n * Configuration object to be passed to MSAL instance on creation. \r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \r\n */\r\n//  authority: \"https://login.microsoftonline.com/e6aa0f5f-ec60-485d-8766-f6bcabea9053\",\r\n export let msalConfig = {\r\n    auth: {\r\n        clientId: \"f2f7dcf0-0917-4911-b587-f0c941391758\",\r\n        authority: \"https://login.microsoftonline.com/semtalk.onmicrosoft.com\",\r\n        redirectUri: \"https://kind-flower-00727bb03.azurestaticapps.net\",\r\n        postLogoutRedirectUri: \"/\"\r\n     },\r\n    cache: {\r\n        cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\r\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n    },\r\n    system: {\t\r\n        loggerOptions: {\t\r\n            loggerCallback: (level: any, message: any, containsPii: any) => {\t\r\n                if (containsPii) {\t\t\r\n                    return;\t\t\r\n                }\t\t\r\n                switch (level) {\t\t\r\n                    case LogLevel.Error:\t\t\r\n                        console.error(message);\t\t\r\n                        return;\t\t\r\n                    case LogLevel.Info:\t\t\r\n                        console.info(message);\t\t\r\n                        return;\t\t\r\n                    case LogLevel.Verbose:\t\t\r\n                        console.debug(message);\t\t\r\n                        return;\t\t\r\n                    case LogLevel.Warning:\t\t\r\n                        console.warn(message);\t\t\r\n                        return;\t\t\r\n                }\t\r\n            }\t\r\n        }\t\r\n    }\r\n};\r\n\r\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit: \r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\r\n// export const loginRequest = {\r\n//     scopes: [\"User.Read\", \r\n//     \"Sites.Read.All\", \r\n//     \"Group.ReadWrite.All\", \r\n//     \"Files.Read.All\", \r\n//     \"TermStore.ReadWrite.All\"]\r\n// };\r\n\r\n/**\r\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\r\n */\r\n// export const graphConfig = {\r\n//     graphMeEndpoint: \"https://graph.microsoft.com/beta\"\r\n// };","import { Client, } from '@microsoft/microsoft-graph-client';\nimport { AuthCodeMSALBrowserAuthenticationProvider } from '@microsoft/microsoft-graph-client/authProviders/authCodeMsalBrowser';\n\nlet graphClient: Client | undefined = undefined;\n\nexport function ensureClient(authProvider: AuthCodeMSALBrowserAuthenticationProvider) {\n  if (!graphClient) {\n    graphClient = Client.initWithMiddleware({\n      authProvider: authProvider\n    });\n  }\n  return graphClient;\n}\n","import { AccountInfo, IPublicClientApplication } from \"@azure/msal-browser\";\nimport { PublicClientApplication, EventType, EventMessage, AuthenticationResult } from \"@azure/msal-browser\";\nimport { msalConfig } from './authConfig';\nimport { AuthCodeMSALBrowserAuthenticationProvider } from '@microsoft/microsoft-graph-client/authProviders/authCodeMsalBrowser';\nimport { InteractionType } from '@azure/msal-browser';\nimport { ensureClient } from './GraphService';\n\nexport async function ms365login (clientId: string, authority: string, scopes: string[]) {\n    let msalInstance: IPublicClientApplication;\n\n    // if ((window.location.toString() === \"http://localhost:3000/\")) {\n    let redirectUri = window.location.origin;\n    if (redirectUri.endsWith(\"/\")) {\n      redirectUri = redirectUri.substr(0, redirectUri.length - 1);\n    }\n    msalConfig.auth = {\n      clientId: clientId,\n      authority: authority,\n      redirectUri: redirectUri,\n      postLogoutRedirectUri: \"/\"\n    };\n    msalInstance = new PublicClientApplication(msalConfig);\n    // } else {\n    //   this.msalInstance = new PublicClientApplication(msalConfig);\n    // }\n\n    // Account selection logic is app dependent. Adjust as needed for different use cases.\n    let accounts = msalInstance.getAllAccounts();\n    if (accounts.length > 0) {\n      msalInstance.setActiveAccount(accounts[0]);\n      const authProvider = new AuthCodeMSALBrowserAuthenticationProvider(\n        msalInstance as PublicClientApplication,\n        {\n          account: accounts[0],\n          scopes: scopes,\n          interactionType: InteractionType.Popup\n        }\n      );\n      return ensureClient(authProvider);\n    }\n\n    let request: any = {\n      scopes: scopes,\n      prompt: \"select_account\",\n      // loginHint: \"cfillies@semtalk.onmicrosoft.com\",\n      //  account: account\n    };\n    let account: AccountInfo | null = null;\n    let graphclient: any = null;\n    msalInstance.addEventCallback((event: EventMessage) => {\n      if (event.eventType === EventType.LOGIN_SUCCESS && event.payload) {\n        const payload = event.payload as AuthenticationResult;\n        if (payload.account) account = payload.account;\n        request.account = account;\n        msalInstance.setActiveAccount(account);\n        // response = await this.msalInstance.acquireTokenSilent(request);\n        const authProvider = new AuthCodeMSALBrowserAuthenticationProvider(\n          msalInstance as PublicClientApplication,\n          {\n            account: account!,\n            scopes: scopes,\n            interactionType: InteractionType.Popup\n          }\n        );\n        graphclient = ensureClient(authProvider);\n      }\n    });\n\n    let response: any = null;\n    try {\n      response = await msalInstance.acquireTokenSilent(request);\n    } catch (e) {\n      response = await msalInstance.acquireTokenPopup(request);\n    }\n    if (response) {\n      // return response.accessToken;\n      return graphclient;\n    }\n    return undefined;\n  }\n","import * as React from 'react';\r\nimport {\r\n  // CommandBar,\r\n  IDropdownOption, Dropdown, IDropdownStyles,\r\n  // Toggle,\r\n  Stack, Pivot, PivotItem, StackItem, MessageBarType\r\n} from 'office-ui-fabric-react';\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport {\r\n  IObjectBase, ISemTalkObject, ISemTalkClass,\r\n  ISemTalkSystemClass, SemTalkType, SemTalkBaseConstant\r\n} from \"../../application/tbase/Interface\";\r\nimport { Process_ElementName } from '../../application/semtalklistener/processInterface';\r\n\r\n\r\nimport { addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\nimport { Guid } from \"guid-typescript\";\r\nimport { IVisioRDFS, SemTalkUIConstant } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { TreeView, ITreeItem, TreeViewSelectionMode, TreeItemActionsDisplayMode, SelectChildrenMode } from \"../treeView\";\r\n//    \"termset\": \"termStore/groups/f9e6a049-6545-49fb-b26f-7df6a490b6c6/sets/f7495374-15f4-4dcc-ae66-275719cf6361/terms\"\r\n//    \"termsets\": \"termStore/groups/f9e6a049-6545-49fb-b26f-7df6a490b6c6/sets\"\r\nimport { ISPExplorer } from '../../application/explorer/spexplorerinterface';\r\nimport { BPMN_AssociationName } from '../../application/semtalklistener/subtask/bpmn/bpmninterface';\r\nimport { ms365login } from '../../login';\r\n\r\n\r\n\r\n\r\nexport interface ISemTalkTermSetProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  graphClient?: any;\r\n  clientID: string;\r\n  authority: string;\r\n  termsetgroup?: string;\r\n  termset?: string;\r\n  termsetroot?: string;\r\n  termsetassoc?: string;\r\n  scopes: string[];\r\n  context?: any;\r\n  site: string;\r\n  listTitle?: string;\r\n  query?: string;\r\n  columns?: string[];\r\n  goodlist?: string[];\r\n  badlist?: string[];\r\n  isexport: boolean;\r\n  // callback: (sysc: ISemTalkSystemClass, items: ITermSetItem[]) => void;\r\n  callbackimport?: (sysc: string, items: ITreeItem[]) => void;\r\n  systemclass: ISemTalkSystemClass | null;\r\n  // isclasses: boolean;\r\n  focus: number;\r\n}\r\nexport interface ISemTalkTermSetState {\r\n  objectid: number;\r\n  // listitems: ITermSetItem[];\r\n  exporttreeitems: ITreeItem[];\r\n  importtreeitems: ITreeItem[];\r\n  selectedexportitems: ITreeItem[];\r\n  termsets: ITermSet[];\r\n  termset: string;\r\n  termsetroot: string;\r\n  group: string;\r\n  groups: IGroup[];\r\n  classes: ISemTalkClass[];\r\n  hasError: boolean;\r\n  isact: boolean;\r\n  isres: boolean;\r\n  base: IObjectBase;\r\n  isinst: boolean;\r\n  isexport: boolean;\r\n  sysclass: ISemTalkSystemClass | null;\r\n  sysclassname: string;\r\n  objectname: string;\r\n  assocname: string;\r\n  isbusinessclasses: boolean;\r\n  // callback: (sysc: ISemTalkSystemClass, items: ITermSetItem[]) => void;\r\n  // callbackimport: (sysc: ISemTalkSystemClass | null, items: ITreeItem[]) => void;\r\n  spinterface: ISPExplorer | undefined;\r\n  graphClient: any;\r\n}\r\ninterface ITermSet {\r\n  TermSet: any;\r\n  ObjectName: string;\r\n  ObjectCaption: string;\r\n}\r\ninterface IGroup {\r\n  Group: any;\r\n  ObjectName: string;\r\n  ObjectCaption: string;\r\n}\r\n\r\ninterface IAssocDropDownOption extends IDropdownOption {\r\n  inv: boolean;\r\n}\r\n\r\nexport class SemTalkTermSet extends React.Component<ISemTalkTermSetProps, ISemTalkTermSetState> {\r\n  // private object: ISemTalkObject | null = null;\r\n  // private objecttypecaption: string = \"\";\r\n  public callback: Guid;\r\n  private groupoptions: IDropdownOption[];\r\n  private termsetoptions: IDropdownOption[];\r\n  private assoctypes: IAssocDropDownOption[] = [];\r\n  // private msalInstance: IPublicClientApplication;\r\n  private groups = \"/termStore/groups\";\r\n  // private termsets = \"/termStore/groups/f9e6a049-6545-49fb-b26f-7df6a490b6c6/sets\";\r\n  private allimportitems: any = {};\r\n\r\n  constructor(props: ISemTalkTermSetProps) {\r\n    super(props);\r\n    console.debug(\"showTermSet\");\r\n    // _gotonodes = this.props.gotonodes;\r\n    this.callback = Guid.create();\r\n    // this._selection = new Selection({\r\n    //   onSelectionChanged: () => this.setState({ selection: this._getSelectionObject() }),\r\n    // });\r\n    let sc: ISemTalkSystemClass | null = null;\r\n    let scn = \"\";\r\n    if (this.props.semtalk.page) {\r\n      sc = this.props.semtalk.page.ClassOf().Root;\r\n      if (sc) scn = sc.ObjectName;\r\n    }\r\n    let isbusinessclasses = false;\r\n    let inf = this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLInformation);\r\n    if (this.props.systemclass) {\r\n      isbusinessclasses = this.props.systemclass.ObjectName === inf;\r\n    }\r\n\r\n    // if (false)\r\n    // this.loginTest();\r\n    // let group = \"f9e6a049-6545-49fb-b26f-7df6a490b6c6\";\r\n    // let termset = \"f7495374-15f4-4dcc-ae66-275719cf6361\";\r\n    // let termset = \"/termStore/groups/\" + group + \"/sets/f7495374-15f4-4dcc-ae66-275719cf6361/terms\";\r\n\r\n    let termset: string = \"\";\r\n    let group: string = \"\";\r\n    let root: string = \"\";\r\n    let assoc: string = SemTalkBaseConstant.SLSubClassOf;\r\n    if (this.props.termset) termset = this.props.termset;\r\n    if (this.props.termsetgroup) group = this.props.termsetgroup;\r\n    if (this.props.termsetroot) root = this.props.termsetroot;\r\n    if (this.props.termsetassoc) assoc = this.props.termsetassoc;\r\n\r\n    this.state = {\r\n      // filter: this.props.filter,\r\n      objectid: -1,\r\n      // listitems: [],\r\n      exporttreeitems: [],\r\n      importtreeitems: [],\r\n      selectedexportitems: [],\r\n      termset: termset,\r\n      termsets: [],\r\n      group: group,\r\n      groups: [],\r\n      classes: [],\r\n      hasError: false,\r\n      isinst: true,\r\n      isexport: this.props.isexport,\r\n      isact: false,\r\n      isres: false,\r\n      base: this.props.semtalk.base,\r\n      sysclass: sc,\r\n      sysclassname: scn,\r\n      // selection: null,\r\n      //  goto_context: this.props.goto_context\r\n      // sel: new Selection({\r\n      //   onSelectionChanged: () => { this.selectitem(); }\r\n      // }),\r\n      objectname: \"\",\r\n      isbusinessclasses: isbusinessclasses,\r\n      // callback: this.props.callback,\r\n      // callbackimport: this.props.callbackimport,\r\n      assocname: assoc,\r\n      spinterface: this.props.semtalk.explorer,\r\n      graphClient: this.props.graphClient,\r\n      termsetroot: root\r\n    };\r\n  }\r\n\r\n \r\n  private mounted: boolean = false;\r\n\r\n  public componentDidMount = async () => {\r\n \r\n    let gc = this.state.graphClient;\r\n    if (!gc && this.props.context) {\r\n      gc = await this.props.context.msGraphClientFactory.getClient();\r\n    } else {\r\n      if (this.props.graphClient) {\r\n        gc = this.props.graphClient;\r\n      }\r\n    }\r\n    if (!gc) {\r\n      if ((window.location.origin === \"http://localhost:3000\")) {\r\n        let scopes = [\"User.Read\",\r\n          \"Sites.Read.All\",\r\n          \"Group.ReadWrite.All\",\r\n          \"Files.Read.All\",\r\n          \"TermStore.ReadWrite.All\"];\r\n        // gc = await this.login(\"9eec9ef7-38a4-4b29-8ac5-b8b02564c78b\",\r\n        //   \"https://login.microsoftonline.com/semtalkdev.onmicrosoft.com\",\r\n        //   scopes);\r\n        gc = await ms365login(\"9eec9ef7-38a4-4b29-8ac5-b8b02564c78b\",\r\n          \"https://login.microsoftonline.com/semtalk.onmicrosoft.com\",\r\n          scopes);\r\n      } else {\r\n        gc = await ms365login(this.props.clientID,\r\n          this.props.authority,\r\n          this.props.scopes);\r\n        // gc = await this.ms365login(\"f2f7dcf0-0917-4911-b587-f0c941391758\",\r\n        //                     \"https://login.microsoftonline.com/semtalk.onmicrosoft.com\");\r\n      }\r\n      this.setState({ graphClient: gc });\r\n    }\r\n\r\n    if (!this.props.termsetassoc) {\r\n      this.loadAssocTypes();\r\n    }\r\n    if (this.props.termset) {\r\n      this.loadTermSet(this.state.termset, gc);\r\n    }\r\n    // }\r\n    this.mounted = true;\r\n    if (!this.props.termsetgroup) {\r\n      this.loadGroups(gc);\r\n    }\r\n    if (!this.props.termset) {\r\n      this.loadTermsets(this.state.group, gc);\r\n    }\r\n    this.loadOntology(this.state.assocname);\r\n    addCallBack(this);\r\n  }\r\n  public componentWillUnmount() {\r\n    // if (this.object && this.state.selection && this.props.semtalk.shape) {\r\n    //   this.props.semtalk.ChangeObject(this.props.semtalk.shape, this.state.selection);\r\n    //   }\r\n    // this.object = null;\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n  }\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n    }\r\n  }\r\n\r\n  private loadAssocTypes = () => {\r\n    let alist: IAssocDropDownOption[] = [];\r\n    const ob = this.props.semtalk.base;\r\n    const bl = [\"HiddenRelation\", SemTalkBaseConstant.SLHasDomain, SemTalkBaseConstant.SLHasRange,\r\n      SemTalkBaseConstant.SLhasAttachment, SemTalkBaseConstant.SLDisplays,\r\n      ob.GetModelAttribute(Process_ElementName.STTriggers), ob.GetModelAttribute(Process_ElementName.STTriggeredBy), \"breaks\", \"ValidRefinement\",\r\n      BPMN_AssociationName.attachedto, SemTalkBaseConstant.SLDefinitionOf, BPMN_AssociationName.dataobject\r\n    ];\r\n\r\n    for (let atype of this.state.base.AllAssociationTypes()) {\r\n      if (bl.indexOf(atype.ObjectName) > -1) continue;\r\n      alist.push({ key: atype.ObjectName, text: atype.ObjectCaption, inv: false });\r\n    }\r\n    this.assoctypes = alist;\r\n  }\r\n  private loadGroups = async (graphClient: any) => {\r\n    if (graphClient !== undefined && this.groups !== undefined\r\n      && this.groups.length > 0 && this.state.spinterface) {\r\n      let res: any[] | undefined;\r\n      try {\r\n        res = await this.state.spinterface.fetchGraphItems(graphClient, this.groups);\r\n      } catch (e) {\r\n        // console.debug(e);\r\n        this.props.semtalk.tseditor.alert(String(e) + this.groups, MessageBarType.severeWarning);\r\n      }\r\n      if (res) this.loadGroupItems(res);\r\n    }\r\n  }\r\n  private loadTermsets = async (group: string, graphClient: any) => {\r\n    if (graphClient !== undefined && group.length > 0 && this.state.spinterface) {\r\n      let termsets = \"/termStore/groups/\" + group + \"/sets\";\r\n      let res: any[] | undefined;\r\n      try {\r\n        res = await this.state.spinterface.fetchGraphItems(graphClient, termsets);\r\n      } catch (e) {\r\n        // console.debug(e);\r\n        this.props.semtalk.alert(String(e), MessageBarType.severeWarning);\r\n      }\r\n      if (res) this.loadTermSetItems(res);\r\n    }\r\n  }\r\n  private loadTermSet = async (ts: string, graphClient: any) => {\r\n    if (!this.state.isexport && graphClient !== undefined &&\r\n      ts.length > 0 && this.state.spinterface) {\r\n      let termset = \"/termStore/sets/\" + ts;\r\n      let res0: any;\r\n      let rootlabel: string = this.state.termsetroot;\r\n      try {\r\n        if (rootlabel.length === 0) {\r\n          try {\r\n            res0 = await this.state.spinterface.fetchGraphItem(graphClient, termset);\r\n          } catch (e) {\r\n            // console.debug(e);\r\n            this.props.semtalk.alert(String(e) + \": \" + termset, MessageBarType.severeWarning);\r\n          }\r\n          if (res0) {\r\n            let termsetlabel: string = res0[\"localizedNames\"][0].name;\r\n            if (termsetlabel.indexOf('＂') > -1) {\r\n              termsetlabel = termsetlabel.replace('＂', \" \");\r\n            }\r\n            rootlabel = termsetlabel;\r\n            this.setState({ \"termsetroot\": rootlabel });\r\n          }\r\n        }\r\n      } catch (e) {\r\n        // console.debug(e);\r\n        this.props.semtalk.alert(String(e), MessageBarType.severeWarning);\r\n      }\r\n      let res: any[] | undefined;\r\n      try {\r\n        res = await this.state.spinterface.fetchGraphItems(graphClient, termset + \"/children\");\r\n      } catch (e) {\r\n        // console.debug(e);\r\n        this.props.semtalk.alert(String(e + \": \" + termset + \"/children\"), MessageBarType.severeWarning);\r\n      }\r\n      if (res) await this.loadTerms(rootlabel, res);\r\n    }\r\n  }\r\n\r\n  private loadTerms = async (rootlabel: string, lil: any[]) => {\r\n    let rt: any = {\r\n      key: this.state.termset,\r\n      termid: this.state.termset,\r\n      label: rootlabel,\r\n    };\r\n    this.allimportitems = {};\r\n    // this.allimportitems[this.state.termset] = rt;\r\n    // let treeitems: any[] = [];\r\n    let children: any[] = [];\r\n    // treeitems.push(rt);\r\n    // let listitems: ITermSetItem[] = [];\r\n    if (lil !== undefined) {\r\n      // let spitems: any[] = lil.map(x => x);\r\n      let spitems = lil;\r\n      for (let s of spitems) {\r\n        let termid: string = s.id;\r\n        if (this.allimportitems[termid]) {\r\n          continue;\r\n        }\r\n\r\n        let termlabel: string = s.labels[0].name;\r\n        if (termlabel.indexOf('＂') > -1) {\r\n          termlabel = termlabel.replace('＂', \" \");\r\n          // console.debug(termlabel);\r\n        }\r\n        let l = Object.keys(this.allimportitems).length;\r\n        let rx: any = {\r\n          key: l.toString() + \"_\" + termid,\r\n          termid: termid,\r\n          label: termlabel,\r\n          // subLabel: r.Comment,\r\n          data: s\r\n        };\r\n        this.allimportitems[termid] = rx;\r\n        children.push(rx);\r\n        await this.addTermChildren(rx, s);\r\n        // treeitems.push(rx);\r\n\r\n        // let termtab = { Term: s, ObjectCaption: termlabel, ObjectName: termid, Children: [] };\r\n        // fetchGraphItems(this.props.graphClient, this.state.termset + \"/\" + s.id + \"/children\", (res: any) => {\r\n        //   termtab.Children = res;\r\n        // });\r\n        // listitems.push(termtab);\r\n      }\r\n\r\n    }\r\n    rt.actions = [{\r\n      title: this.props.semtalk.getResStrListener(\"STRDLGIMPORT\").replace(\"&\", \"\"),\r\n      iconProps: {\r\n        iconName: 'Import'\r\n      },\r\n      id: \"ImportItem\",\r\n      actionCallback: async (_treeItem: ITreeItem) => {\r\n        this.additems();\r\n        // this.importItem([treeItem]);\r\n        // console.log(treeItem);\r\n      }\r\n    },\r\n    {\r\n      title: this.props.semtalk.getResStrListener(\"STRMNUEXPAND\").replace(\"&\", \"\"),\r\n      iconProps: {\r\n        iconName: 'Import'\r\n      },\r\n      id: \"ExpandItem\",\r\n      actionCallback: async (treeItem: ITreeItem) => {\r\n        this.expandItems(treeItem);\r\n      }\r\n    }\r\n    ];\r\n    rt.children = children;\r\n    // let treeitemscp = [rt];\r\n    // treeitemscp.push(...treeitems);\r\n\r\n    // treeitems.push(rt);\r\n    //  listitems = listitems.sort((a, b) => a.ObjectCaption.localeCompare(b.ObjectCaption));\r\n    this.setState({\r\n      //   objectid: id,\r\n      //    listitems: listitems,\r\n      importtreeitems: [rt],\r\n      // importtreeitems: treeitemscp,\r\n      // classes: classes,\r\n      // isbusinessclasses: isbusinessclasses,\r\n      // sysclass: sc,\r\n      // objectname: objectname\r\n    });\r\n  }\r\n\r\n  private loadTermSetItems = (lil: any[]) => {\r\n    let items: ITermSet[] = [];\r\n    if (lil !== undefined) {\r\n      let spitems = lil;\r\n      for (let item of spitems.map((s) => {\r\n        let termid: string = s.id;\r\n        let termlabel: string = s.localizedNames[0].name;\r\n        if (termlabel.indexOf('＂') > -1) {\r\n          termlabel = termlabel.replace('＂', \" \");\r\n          // console.debug(termlabel);\r\n        }\r\n        let termtab = { TermSet: s, ObjectCaption: termlabel, ObjectName: termid };\r\n        // fetchGraphItems(this.props.graphClient, this.props.termset + \"/\" + s.id + \"/children\", (res) => {\r\n        //   termtab.Children = res;\r\n        // });\r\n        return termtab;\r\n      })) {\r\n        items.push(item);\r\n      }\r\n    }\r\n    items = items.sort((a, b) => a.ObjectCaption.localeCompare(b.ObjectCaption));\r\n    this.termsetoptions = items.map((item) => { return { key: item.ObjectName, text: item.ObjectCaption }; }\r\n    );\r\n    this.setState({\r\n      //   objectid: id,\r\n      termsets: items,\r\n      // classes: classes,\r\n      // isbusinessclasses: isbusinessclasses,\r\n      // sysclass: sc,\r\n      // objectname: objectname\r\n    });\r\n  }\r\n  private loadGroupItems = (lil: any[]) => {\r\n    let items: IGroup[] = [];\r\n    if (lil !== undefined) {\r\n      let spitems = lil;\r\n      for (let s of spitems) {\r\n        if (s.scope !== \"system\") {\r\n          let termid: string = s.id;\r\n          let termlabel: string = s.displayName;\r\n          let item = { Group: s, ObjectCaption: termlabel, ObjectName: termid };\r\n          // fetchGraphItems(this.props.graphClient, this.props.termset + \"/\" + s.id + \"/children\", (res) => {\r\n          //   termtab.Children = res;\r\n          // });\r\n          items.push(item);\r\n        }\r\n      }\r\n    }\r\n    items = items.sort((a, b) => a.ObjectCaption.localeCompare(b.ObjectCaption));\r\n    this.groupoptions = items.map((item) => { return { key: item.ObjectName, text: item.ObjectCaption }; }\r\n    );\r\n    this.setState({\r\n      //   objectid: id,\r\n      groups: items,\r\n      // classes: classes,\r\n      // isbusinessclasses: isbusinessclasses,\r\n      // sysclass: sc,\r\n      // objectname: objectname\r\n    });\r\n  }\r\n\r\n  private importItem = (items: ITreeItem[]): void => {\r\n    let scn = this.state.sysclassname;\r\n    if (scn.length === 0) {\r\n      scn = this.state.termsetroot;\r\n    }\r\n    if (this.props.callbackimport) {\r\n      const cb2 = this.props.callbackimport;\r\n      cb2(scn, items);\r\n    }\r\n  }\r\n\r\n  // https://resources.techcommunity.microsoft.com/graph-apis-documentation/\r\n  private exportItem = async (items: ITreeItem[]) => {\r\n    let ts = this.state.termset;\r\n    let termset = \"/termStore/sets/\" + ts;\r\n    let graphClient = this.state.graphClient;\r\n    if (graphClient !== undefined && ts && ts.length > 0 && this.state.spinterface) {\r\n      let res: any[] | undefined;\r\n      try {\r\n        res = await this.state.spinterface.fetchGraphItems(graphClient, termset + \"/terms\");\r\n      } catch (e) {\r\n        this.props.semtalk.alert(String(e), MessageBarType.severeWarning);\r\n      }\r\n      if (res) this.mergeItems(items, res, graphClient);\r\n    }\r\n  }\r\n  private addTermSetChildren = async (termid: string, citem: any, graphClient: any, existing_items: any[], termset: string) => {\r\n    if (citem.children) {\r\n      for (let c of citem.children) {\r\n        let child: ISemTalkObject = c.data;\r\n        let cfnd = false;\r\n        for (let e of existing_items) {\r\n          if (e.labels && e.labels[0].name === child.ID2NameNsp()) {\r\n            if (child.ObjectName !== e.id) {\r\n              child.RenameObject(e.id);\r\n            }\r\n            for (let l of e.labels) {\r\n              let termlabel = l.name.replace('＂', \" \");\r\n              child.MakeSynonym(termlabel, this.decodeLang(l.languageTag));\r\n            }\r\n            this.addTermSetChildren(e.id, c, graphClient, existing_items, termset);\r\n            cfnd = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!cfnd) {\r\n          let cbody = {\r\n            \"labels\": [\r\n              {\r\n                \"languageTag\": \"de-DE\",\r\n                \"name\": child.ID2NameNsp(),\r\n                \"isDefault\": true\r\n              }\r\n            ]\r\n          };\r\n          if (graphClient && this.state.spinterface) {\r\n            let res: any | undefined;\r\n            try {\r\n              res = await this.state.spinterface.postGraphItem(graphClient, termset + \"/terms/\" + termid + \"/children\", cbody);\r\n              if (child.ObjectName !== res.id) {\r\n                child.RenameObject(res.id);\r\n              }\r\n              for (let l of res.labels) {\r\n                let termlabel = l.name.replace('＂', \" \");\r\n                child.MakeSynonym(termlabel, this.decodeLang(l.languageTag));\r\n              }\r\n            } catch (e) {\r\n              this.props.semtalk.alert(String(e), MessageBarType.severeWarning);\r\n            }\r\n            if (res) this.addTermSetChildren(res.id, c, graphClient, existing_items, termset);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private mergeItems = async (items: ITreeItem[], existing_items: any[], graphClient: any) => {\r\n    let ts = this.state.termset;\r\n    let termset = \"/termStore/sets/\" + ts;\r\n\r\n    for (let item of items) {\r\n      let fnd: boolean = false;\r\n      let obj = item.data as ISemTalkObject;\r\n      for (let e of existing_items) {\r\n        if (e.labels && e.labels[0].name === obj.ID2NameNsp()) {\r\n          if (obj.ObjectName !== e.id) {\r\n            obj.RenameObject(e.id);\r\n          }\r\n          for (let l of e.labels) {\r\n            let termlabel = l.name.replace('＂', \" \");\r\n            obj.MakeSynonym(termlabel, this.decodeLang(l.languageTag));\r\n          }\r\n          this.addTermSetChildren(e.id, item, graphClient, existing_items, termset);\r\n          fnd = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!fnd) {\r\n        let body = {\r\n          \"labels\": [\r\n            {\r\n              \"languageTag\": \"de-DE\",\r\n              \"name\": obj.ID2NameNsp(),\r\n              \"isDefault\": true\r\n            }\r\n          ]\r\n        };\r\n        if (graphClient && this.state.spinterface) {\r\n          let res2: any | undefined;\r\n          try {\r\n            res2 = await this.state.spinterface.postGraphItem(graphClient, termset + \"/children\", body);\r\n          } catch (e) {\r\n            this.props.semtalk.alert(String(e), MessageBarType.severeWarning);\r\n          }\r\n          if (res2) {\r\n            let res0: any | undefined;\r\n            try {\r\n              res0 = await this.addTermSetChildren(res2.id, item, graphClient, existing_items, termset);\r\n            } catch (e) {\r\n              this.props.semtalk.alert(String(e), MessageBarType.severeWarning);\r\n            }\r\n            if (res0) {\r\n              if (obj.ObjectName !== res0.id) {\r\n                obj.RenameObject(res0.id);\r\n              }\r\n              for (let l of res0.labels) {\r\n                let termlabel = l.name.replace('＂', \" \");\r\n                obj.MakeSynonym(termlabel, this.decodeLang(l.languageTag));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _languagedropdownOptions = [\r\n    { key: \"en\", text: \"English\" },\r\n    { key: \"de\", text: \"German\" },\r\n    { key: \"ja\", text: \"Japanese\" },\r\n    { key: \"es\", text: \"Spanish\" },\r\n    { key: \"ru\", text: \"Russian\" },\r\n    { key: \"cn-simplified\", text: \"Chinese (Simplified)\" },\r\n    { key: \"cn-traditional\", text: \"Chinese (Traditional)\" },\r\n    { key: \"sc\", text: \"Chinese (Simplified)\" },\r\n    { key: \"tc\", text: \"Chinese (Traditional)\" },\r\n  ];\r\n  private decodeLang(s: string): string {\r\n    for (let lang of this._languagedropdownOptions) {\r\n      if (lang.key === s || s.startsWith(lang.key + \"-\")) {\r\n        return lang.text;\r\n      }\r\n    }\r\n    return s;\r\n  }\r\n\r\n\r\n  // private commands: any[] = [];\r\n  // private importAllItems = {\r\n  //   key: 'Import',\r\n  //   name: this.props.semtalk.getResStrListener(\"STRDLGIMPORT\").replace(\"&\", \"\"),\r\n  //   //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n  //   iconProps: {\r\n  //     iconName: 'Import'\r\n  //   },\r\n  //   onClick: (): void => {\r\n  //     this.additems();\r\n  //   }\r\n  // };\r\n  private additems = () => {\r\n    let items: any[] = Object.values(this.allimportitems);\r\n    // for (let item of this.allimportitems) {\r\n    //   items.push(item);\r\n    // };\r\n    this.importItem(items);\r\n  }\r\n  // private expandItemMenuEntry = {\r\n  //   key: 'Expand',\r\n  //   name: this.props.semtalk.getResStrListener(\"STRMNUEXPAND\").replace(\"&\", \"\"),\r\n  //   //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n\r\n  //   onClick: (): void => {\r\n  //     for (let item of this.state.importtreeitems) {\r\n  //       this.expandItems(item);\r\n  //     }\r\n  //     // this.exportItem(this.state.selectedexportitems);\r\n  //     // this.addnewitem();\r\n  //   }\r\n  // };\r\n  private expandItems = (item: ITreeItem) => {\r\n    this.onTreeItemExpandCollapse(item, true);\r\n    if (item.children) {\r\n      for (let c of item.children) {\r\n        this.expandItems(c);\r\n      }\r\n    }\r\n  }\r\n  // private exportItemMenuEntry = {\r\n  //   key: 'Export',\r\n  //   name: this.props.semtalk.getResStrListener(\"STRDLGEXPORT\").replace(\"&\", \"\"),\r\n  //   //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n  //   iconProps: {\r\n  //     iconName: 'Export'\r\n  //   },\r\n  //   onClick: (): void => {\r\n  //     this.exportItem(this.state.selectedexportitems);\r\n  //     // this.addnewitem();\r\n  //   }\r\n  // };\r\n\r\n  private onTreeItemSelect = (_items: ITreeItem[]) => {\r\n    //   console.log(\"Items selected: \", items);\r\n    // this.setState({ selecteditems: items });\r\n  }\r\n\r\n  private onTreeItemExpandCollapse = (item: ITreeItem, _isExpanded: boolean) => {\r\n    let obj = item.data;\r\n    if (item.children && obj) {\r\n      for (let rx of item.children) {\r\n        let chi = rx.data;\r\n        this.addTermChildren(rx, chi as ISemTalkClass);\r\n      }\r\n    }\r\n  }\r\n  private onTreeItemExportExpandCollapse = (_item: ITreeItem, _isExpanded: boolean) => {\r\n  }\r\n  private addExportChildren = (item: any, obj: ISemTalkObject, assocname: string) => {\r\n    let children: any[] = [];\r\n    if (assocname === SemTalkBaseConstant.SLSubClassOf) {\r\n      let cl: ISemTalkClass = obj as ISemTalkClass;\r\n      for (let r of cl.SubClasses()) {\r\n        let rx: any = {\r\n          key: r.ID,\r\n          label: r.ID2NameNsp(),\r\n          //  subLabel: r.Comment,\r\n          data: r,\r\n          // actions: [{\r\n          //   title: \"Export\",\r\n          //   iconProps: {\r\n          //     iconName: 'Export'\r\n          //   },\r\n          //   id: \"ExportItem\",\r\n          //   actionCallback: async (treeItem: ITreeItem) => {\r\n          //     this.exportItem([treeItem]);\r\n          //     console.log(treeItem);\r\n          //   }\r\n          // }]\r\n        };\r\n        children.push(rx);\r\n        this.addExportChildren(rx, r, assocname);\r\n      }\r\n      for (let r of cl.Instances()) {\r\n        let rx: any = {\r\n          key: r.ID,\r\n          label: r.ID2NameNsp(),\r\n          //  subLabel: r.Comment,\r\n          data: r,\r\n          // actions: [{\r\n          //   title: \"Export\",\r\n          //   iconProps: {\r\n          //     iconName: 'Export'\r\n          //   },\r\n          //   id: \"ExportItem\",\r\n          //   actionCallback: async (treeItem: ITreeItem) => {\r\n          //     this.exportItem([treeItem]);\r\n          //     console.log(treeItem);\r\n          //   }\r\n          // }]\r\n        };\r\n        children.push(rx);\r\n      }\r\n    } else {\r\n      const ob = obj.ObjectBase;\r\n      let re = ob.FindAssociationType(assocname);\r\n      if (re)\r\n        for (let o of obj.LinkedObjects(re)) {\r\n          let rx: any = {\r\n            key: o.ID,\r\n            label: o.ID2NameNsp(),\r\n            // subLabel: r.Comment,\r\n            data: o,\r\n            // actions: [{\r\n            //   title: \"Export\",\r\n            //   iconProps: {\r\n            //     iconName: 'Export'\r\n            //   },\r\n            //   id: \"ExportItem\",\r\n            //   actionCallback: async (treeItem: ITreeItem) => {\r\n            //     this.exportItem([treeItem]);\r\n            //     console.log(treeItem);\r\n            //   }\r\n            // }]\r\n          };\r\n          this.addExportChildren(rx, o, assocname);\r\n          children.push(rx);\r\n        }\r\n    }\r\n    if (children.length > 0) {\r\n      item.children = children;\r\n      item.actions = [{\r\n        title: \"Export\",\r\n        iconProps: {\r\n          iconName: 'Export'\r\n        },\r\n        id: \"ExportItem\",\r\n        actionCallback: async (treeItem: ITreeItem) => {\r\n          this.exportItem(children);\r\n          console.log(treeItem);\r\n        }\r\n      }];\r\n    }\r\n\r\n  }\r\n  private addTermChildren = async (item: any, term: any) => {\r\n    if (this.state.graphClient && this.state.spinterface) {\r\n      let termset = \"/termStore/sets/\" + this.state.termset;\r\n      let res: any[] | undefined;\r\n      try {\r\n        res = await this.state.spinterface.fetchGraphItems(this.state.graphClient,\r\n          termset + \"/terms/\" + term.id + \"/children\");\r\n      } catch (e) {\r\n        // console.debug(e);\r\n        this.props.semtalk.alert(String(e + \": \" + termset + \"/terms/\" + term.id + \"/children\"), MessageBarType.severeWarning);\r\n      }\r\n      if (res) this.addTerms(item, res);\r\n    }\r\n  }\r\n\r\n  private addTerms = (item: any, slist: any[]) => {\r\n    let children: any[] = [];\r\n    for (let s of slist) {\r\n      let termid: string = s.id;\r\n      if (this.allimportitems[termid]) {\r\n        continue;\r\n      }\r\n\r\n      let termlabel: string = s.labels[0].name;\r\n      if (termlabel.indexOf('＂') > -1) {\r\n        termlabel = termlabel.replace('＂', \" \");\r\n        // console.debug(termlabel);\r\n      }\r\n      let l = Object.keys(this.allimportitems).length;\r\n      let rx: any = {\r\n        key: l.toString() + \"_\" + termid,\r\n        termid: termid,\r\n        label: termlabel,\r\n        // subLabel: r.Comment,\r\n        data: s,\r\n        actions: [{\r\n          title: \"Import\",\r\n          iconProps: {\r\n            iconName: 'Import'\r\n          },\r\n          id: \"ImportItem\",\r\n          actionCallback: async (treeItem: ITreeItem) => {\r\n            let il = [treeItem];\r\n            if (treeItem.children) {\r\n              il.push(...treeItem.children);\r\n            }\r\n            this.importItem(il);\r\n            // console.log(treeItem);\r\n          }\r\n        }]\r\n        // });\r\n      };\r\n      this.allimportitems[termid] = rx;\r\n      children.push(rx);\r\n    }\r\n    if (children.length > 0) {\r\n      item.children = children;\r\n      item.actions = [{\r\n        title: \"Import\",\r\n        iconProps: {\r\n          iconName: 'Import'\r\n        },\r\n        id: \"ImportItem\",\r\n        actionCallback: async (treeItem: ITreeItem) => {\r\n          let il = [treeItem];\r\n          if (treeItem.children) {\r\n            il.push(...treeItem.children);\r\n          }\r\n          this.importItem(il);\r\n          // console.log(treeItem);\r\n        }\r\n      }];\r\n      this.setState({ importtreeitems: this.state.importtreeitems });\r\n    }\r\n  }\r\n  private renderCustomTreeItem = (item: ITreeItem): JSX.Element => {\r\n    return (\r\n      <span>\r\n        {\r\n          item.iconProps &&\r\n          <i className={\"ms-Icon ms-Icon--\" + item.iconProps.iconName} style={{ paddingRight: '4px' }} />\r\n        }\r\n        {item.label}\r\n      </span>\r\n    );\r\n  }\r\n  private loadOntology = (assocname: string) => {\r\n    let treeitems: any[] = [];\r\n    let ob = this.state.base;\r\n    const bl: string[] = [SemTalkUIConstant.SLHidden, SemTalkBaseConstant.SLLanguage, SemTalkBaseConstant.SLComment, SemTalkBaseConstant.SLAttachment];\r\n    if (assocname === SemTalkBaseConstant.SLSubClassOf) {\r\n      for (let r of ob.AllRootClasses()) {\r\n        if (r.ObjectType === SemTalkType.SemTalkClass && bl.indexOf(r.ObjectName) < 0) {\r\n          let rx: any = {\r\n            key: r.ID,\r\n            label: r.ID2NameNsp(),\r\n            // subLabel: r.Comment,\r\n            data: r,\r\n            actions: [{\r\n              title: \"Export\",\r\n              iconProps: {\r\n                iconName: 'Export'\r\n              },\r\n              id: \"ExportItem\",\r\n              actionCallback: async (treeItem: ITreeItem) => {\r\n                this.exportItem([treeItem]);\r\n                console.log(treeItem);\r\n              }\r\n            }]\r\n          };\r\n          this.addExportChildren(rx, r, assocname);\r\n          treeitems.push(rx);\r\n        }\r\n      }\r\n    } else {\r\n      let r = ob.FindAssociationType(assocname);\r\n      if (r)\r\n        for (let i of ob.AllInstances()) {\r\n          if (i.InvLinkedObjects(r).length === 0 && i.LinkedObjects(r).length > 0) {\r\n            let rx: any = {\r\n              key: i.ID,\r\n              label: i.ID2NameNsp(),\r\n              // subLabel: r.Comment,\r\n              data: i,\r\n            };\r\n            this.addExportChildren(rx, i, assocname);\r\n            treeitems.push(rx);\r\n          }\r\n        }\r\n\r\n    }\r\n    this.setState({ exporttreeitems: treeitems });\r\n  }\r\n  public render(): React.ReactElement<ISemTalkTermSetProps> {\r\n    // let selmode = SelectionMode.multiple;\r\n    // let vismode = CheckboxVisibility.always;\r\n    // this.commands = [];\r\n    // this.commands.push(this.importAllItems);\r\n    // this.commands.push(this.expandItemMenuEntry);\r\n    // if (this.props.isexport) {\r\n    //   this.commands.push(this.exportItemMenuEntry);\r\n    //   // selmode = SelectionMode.multiple;\r\n    //   // vismode = CheckboxVisibility.onHover;\r\n    // }\r\n    const dropdownStyles: Partial<IDropdownStyles> = {\r\n      dropdown: { width: 150 },\r\n    };\r\n    const stackTokens = { childrenGap: 10 };\r\n    let r: React.ReactElement<ISemTalkTermSetProps>;\r\n    // let lbl = \"\";\r\n    // if (this.state.sysclass != undefined) {\r\n    //   lbl = this.state.sysclass.ID2NameNsp();\r\n    // } else {\r\n    //   this.props.semtalk.getResStrListener(\"STRNAME\");\r\n    // }\r\n    r = <Fabric>\r\n\r\n      {/* <CommandBar\r\n        items={this.commands}\r\n      ></CommandBar> */}\r\n      <Stack tokens={stackTokens} horizontal>\r\n        {/* <Toggle checked={this.state.isexport} label={\"Export\"}\r\n          onChange={(_ev: any, isChecked: any) => {\r\n            this.setState({ isexport: isChecked });\r\n            this.loadTermSet(this.state.group, this.state.termset, this.state.assocname, this.state.graphClient);\r\n          }}></Toggle> */}\r\n      </Stack>\r\n      <Stack horizontal>\r\n        {!this.props.termset && !this.props.termsetgroup &&\r\n          <StackItem>\r\n            <Dropdown styles={dropdownStyles}\r\n              label={\"Group\"}\r\n              // defaultSelectedKey=\"Instance\"\r\n              options={this.groupoptions}\r\n              onChange={(_ev, a) => {\r\n                if (a !== undefined) {\r\n                  let gr = a.key.toString();\r\n                  this.loadTermsets(gr, this.state.graphClient);\r\n                  this.setState({ group: gr });\r\n                }\r\n              }}></Dropdown>\r\n          </StackItem>\r\n        }\r\n        {!this.props.termset &&\r\n          <StackItem>\r\n            <Dropdown styles={dropdownStyles}\r\n              label={\"TermSet\"}\r\n              // defaultSelectedKey=\"Instance\"\r\n              options={this.termsetoptions}\r\n              dropdownWidth={200}\r\n              onChange={(_ev, a) => {\r\n                if (a !== undefined) {\r\n                  let ts = a.key.toString();\r\n                  this.loadTermSet(ts, this.state.graphClient);\r\n                  this.setState({ termset: ts, termsetroot: a.text });\r\n                }\r\n              }}></Dropdown>\r\n          </StackItem>\r\n        }\r\n        {!this.props.termsetassoc &&\r\n          <StackItem>\r\n            <Dropdown\r\n              required\r\n              label={this.props.semtalk.getResStrListener(\"STRDLGNASAAS\")}\r\n              options={this.assoctypes}\r\n              selectedKey={this.state.assocname}\r\n              onChange={(_ev: any, a: any) => {\r\n                if (a !== undefined) {\r\n                  // this.loadTermSet(this.state.group, this.state.termset, a.key.toString(), this.state.graphClient);\r\n                  this.loadOntology(a.key.toString());\r\n                }\r\n                this.setState({ assocname: a.key.toString() });\r\n              }}\r\n            />\r\n          </StackItem>\r\n        }\r\n      </Stack>\r\n      <Pivot>\r\n        <PivotItem headerText=\"Import\">\r\n          <TreeView\r\n            items={this.state.importtreeitems}\r\n            defaultExpanded={true}\r\n            selectionMode={TreeViewSelectionMode.Multiple}\r\n            selectChildrenIfParentSelected={true}\r\n            selectChildrenMode={SelectChildrenMode.None}\r\n            showCheckboxes={false}\r\n            treeItemActionsDisplayMode={TreeItemActionsDisplayMode.ContextualMenu}\r\n            defaultSelectedKeys={['key1', 'key2']}\r\n            expandToSelected={true}\r\n            defaultExpandedChildren={false}\r\n            onSelect={this.onTreeItemSelect}\r\n            onExpandCollapse={this.onTreeItemExpandCollapse}\r\n            onRenderItem={this.renderCustomTreeItem} />\r\n        </PivotItem>\r\n        <PivotItem headerText=\"Export\">\r\n          <TreeView\r\n            items={this.state.exporttreeitems}\r\n            defaultExpanded={false}\r\n            selectionMode={TreeViewSelectionMode.Multiple}\r\n            selectChildrenIfParentSelected={true}\r\n            selectChildrenMode={SelectChildrenMode.None}\r\n            showCheckboxes={true}\r\n            treeItemActionsDisplayMode={TreeItemActionsDisplayMode.ContextualMenu}\r\n            defaultSelectedKeys={['key1', 'key2']}\r\n            expandToSelected={true}\r\n            defaultExpandedChildren={false}\r\n            onSelect={this.onTreeItemSelect}\r\n            onExpandCollapse={this.onTreeItemExportExpandCollapse}\r\n            onRenderItem={this.renderCustomTreeItem} />\r\n        </PivotItem>\r\n      </Pivot>\r\n    </Fabric>;\r\n    return r;\r\n  }\r\n}","import * as React from 'react';\nimport styles from './SemTalkCompose.module.scss';\nimport {\n  Selection, ISelection, IColumn, DetailsList, DetailsListLayoutMode,\n  CheckboxVisibility, IDropdownOption,\n  ComboBox, IComboBox, IComboBoxOption\n} from 'office-ui-fabric-react';\n\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\n\nimport {\n  IObjectBase, ISemTalkObject, ISemTalkBusinessClass,\n  ISemTalkMethod, ISemTalkState, ISemTalkAttribute,\n  ISemTalkInstance, ISemTalkMethodType, ISemTalkStateType,\n  ISemTalkAttributeType, ISemTalkSystemClass, SemTalkBaseConstant,\n  SemTalkLanguage\n} from \"../../application/tbase/Interface\";\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\nimport { Guid } from \"guid-typescript\";\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\nimport { ISPExplorer } from '../../application/explorer/spexplorerinterface';\nimport {\n  IMongoOption, mgGetItemNames, mgGetItems,\n  mgGetItem\n} from '../../SemTalkMongoServer';\nimport { GetLanguage } from '../../application/tbase/langtools';\nimport { Process_ElementName } from '../../application/semtalklistener/processInterface';\nimport { SemTalkCookie } from \"../../ISemTalkOnline\";\n\nexport interface ISemTalkComposeTabProps {\n  title?: string;\n  description?: string;\n  semtalk: IVisioRDFS;\n  graphClient?: any;\n  context?: any;\n  site?: string;\n  sharepointrepository?: string;\n  mongo: IMongoOption;\n}\nexport interface ISemTalkComposeTabState {\n  objectid: number;\n  base: IObjectBase;\n  items: IComposeTab[];\n  others: IDropdownOption[];\n  ismethod: boolean;\n  info: ISemTalkSystemClass | null;\n  sel: ISelection;\n  sysclass: ISemTalkSystemClass | null;\n  autoComplete: boolean;\n}\ninterface IComposeTab {\n  Object: ISemTalkBusinessClass | null;\n  Method: ISemTalkMethod | null;\n  State: ISemTalkState | null;\n  Attribute: ISemTalkAttribute | null;\n  ObjectCaption: string;\n  MethodCaption: string | null;\n  StateCaption: string | null;\n  AttributeCaption: string | null;\n  ReferenceType: string;\n  SPItem: any | null;\n  MGItem: any | null;\n}\nexport class SemTalkCompose extends React.Component<ISemTalkComposeTabProps, ISemTalkComposeTabState> {\n  private object: ISemTalkObject | null = null;\n  private infotypes: IDropdownOption[] = [];\n  private methodtypes: IDropdownOption[] = [];\n  private statetypes: IDropdownOption[] = [];\n  private attrtypes: IDropdownOption[] = [];\n  public callback: Guid;\n  private _allitems: IComposeTab[] = [];\n  // private _selection: Selection;\n  private _languages: string[] = [SemTalkLanguage.German,\n  SemTalkLanguage.English, SemTalkLanguage.Spanish, SemTalkLanguage.Russian,\n  SemTalkLanguage.Simplified, SemTalkLanguage.Traditional];\n  private curr_businessobj: string = \"\";\n  private curr_method: string = \"\";\n  private curr_state: string = \"\";\n  private curr_attr: string = \"\";\n  private spinterface: ISPExplorer;\n  private _dropdown = React.createRef<IComboBox>();\n\n  constructor(props: ISemTalkComposeTabProps) {\n    super(props);\n    this.callback = Guid.create();\n    console.debug(\"showComposeTab\");\n    this.spinterface = this.props.semtalk.explorer;\n\n    const langclass = this.props.semtalk.base.FindClass(SemTalkBaseConstant.SLLanguage);\n    if (langclass) {\n      this._languages = langclass.Instances().map((l) => l.ObjectName);\n    }\n    let ac = (window as any).localStorage.getItem(SemTalkCookie.autoComplete);\n    if (!ac) { ac = (ac !== 'false'); }\n\n    this.state = {\n      objectid: -1,\n      items: [],\n      others: [],\n      base: this.props.semtalk.base,\n      ismethod: false,\n      info: null,\n      sysclass: null,\n      sel: new Selection({\n        onSelectionChanged: () => {\n          this.selectitem();\n        }\n      }),\n      autoComplete: (ac !== 'false')\n    };\n  }\n  private resetState = () => {\n    this.curr_businessobj = \"\";\n    this.curr_method = \"\";\n    this.curr_state = \"\";\n    this.curr_attr = \"\";\n    this.setState({\n      objectid: -1,\n    });\n  }\n\n  private mounted: boolean = false;\n  public async componentDidMount() {\n    this.mounted = true;\n    let oid: number = getObject();\n    if (oid > 0) {\n      this.loadObject(oid);\n    }\n    addCallBack(this);\n  }\n  public componentWillUnmount() {\n    removeCallBack(this);\n    this.mounted = false;\n    this.object = null;\n  }\n\n  // private sp2mg = async (lib1: string) => {\n  //   let lib = this.props.semtalk.getSPListName(lib1);\n  //   let ilist: any = this.localObjects(lib);\n\n  //   if (this.props.context !== undefined && this.props.site !== undefined) {\n  //     let inf = this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLInformation);\n  //     const isinf = (lib1 === inf);\n  //     // const sc=this.props.semtalk.base.FindSystemClass(inf);\n  //     let lany: any;\n  //     if (!isinf) {\n  //       lany = await this.state.spinterface.getListData(this.props.context, this.props.site,\n  //         this.props.semtalk.getSPListName(lib),\n  //         \"*\");\n  //     } else {\n  //       lany = await this.state.spinterface.getListData(this.props.context, this.props.site,\n  //         this.props.semtalk.getSPListName(lib),\n  //         \"$select=*,Method/Title,State/Title,Attribute/Title&$expand=Method/Title,State/Title,Attribute/Title\");\n  //       // \"$select=Title, English, Method/Title,State/Title,Attribute/Title&$expand=Method/Title,State/Title,Attribute/Title\");\n  //     }\n  //     let lil: any[] = lany.value;\n  //     if (lil !== undefined) {\n  //       let spitems = lil;\n  //       for (let s1 of spitems) {\n  //         const s: any = s1;\n  //         const item: any = { \"name\": s[\"Title\"] };\n  //         if (s[\"Comment\"]) item[\"Comment\"] = s[\"Comment\"];\n  //         if (s[\"English\"]) item[\"English\"] = s[\"English\"];\n  //         if (s[\"German\"]) item[\"German\"] = s[\"German\"];\n  //         if (isinf) {\n  //           const methods = s[\"Method\"];\n  //           if (methods) {\n  //             let ml: string[] = [];\n  //             for (let met of methods) {\n  //               ml.push(met[\"Title\"]);\n  //             }\n  //             if (ml.length > 0) {\n  //               item[\"Method\"] = ml;\n  //             }\n  //           }\n  //           const states = s[\"State\"];\n  //           if (states) {\n  //             let sl: string[] = [];\n  //             for (let sta of states) {\n  //               sl.push(sta[\"Title\"]);\n  //             }\n  //             if (sl.length > 0) {\n  //               item[\"State\"] = sl;\n  //               // item[\"States\"] = sl;\n  //             }\n  //           }\n  //           const attributes = s[\"Attribute\"];\n  //           if (attributes) {\n  //             let al: string[] = [];\n  //             for (let atr of attributes) {\n  //               al.push(atr[\"Title\"]);\n  //             }\n  //             if (al.length > 0) {\n  //               item[\"Attribute\"] = al;\n  //             }\n  //           }\n  //         }\n  //         ilist[s[\"Title\"]] = item;\n  //       }\n  //     }\n  //   }\n  //   // await mgDeleteItem(url, lib, \"*\");\n  //   let lib2 = lib.replace(\"AttributeType\", \"Attribute\");\n\n  //   let docs = await mgGetItemNames(this.props.mongo, this.props.mongo.repository, lib2);\n  //   for (let x1 of docs) {\n  //     const x: any = x1;\n  //     delete ilist[x[\"name\"]];\n  //   }\n  //   let slist: any[] = [];\n  //   for (let x in ilist) {\n  //     slist.push(ilist[x]);\n\n  //   }\n  //   let itemsx = await mgInsertItems(this.props.mongo, this.props.mongo.repository, lib2, slist);\n  //   console.debug(itemsx.length);\n  // }\n\n  // private localObjects = (lib: string): any => {\n  //   let items: any = {};\n  //   switch (lib) {\n  //     case \"Method\": {\n  //       for (let s of this.state.base.AllMethodTypes()) {\n  //         items[s.ObjectName] = { \"name\": s.ObjectName };\n  //       }\n  //       break;\n  //     }\n  //     case \"State\": {\n  //       for (let s of this.state.base.AllStateTypes()) {\n  //         items[s.ObjectName] = { \"name\": s.ObjectName };\n  //       }\n  //       break;\n  //     }\n  //     case \"Attribute\": {\n  //       for (let s of this.state.base.AllAttributeTypes()) {\n  //         items[s.ObjectName] = { \"name\": s.ObjectName };\n  //       }\n  //       break;\n  //     }\n  //     default: {\n  //       let inf = this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLInformation);\n  //       if (lib === inf) {\n  //         const sc = this.props.semtalk.base.FindSystemClass(inf);\n  //         if (sc) {\n  //           for (let s of sc.AllSubClasses()) {\n  //             let sb = s as ISemTalkBusinessClass;\n  //             const c: any = { \"name\": sb.ObjectName };\n  //             let ml: string[] = [];\n  //             for (let m of sb.AllMethodTypes()) {\n  //               ml.push(m.ObjectName);\n  //             }\n  //             if (ml.length > 0) {\n  //               c[\"Method\"] = ml;\n  //             }\n  //             let sl: string[] = [];\n  //             for (let m of sb.AllStateTypes()) {\n  //               sl.push(m.ObjectName);\n  //             }\n  //             if (sl.length > 0) {\n  //               c[\"State\"] = sl;\n  //             }\n  //             let al: string[] = [];\n  //             for (let m of sb.AllAttributeTypes()) {\n  //               al.push(m.ObjectName);\n  //             }\n  //             if (al.length > 0) {\n  //               c[\"Attribute\"] = al;\n  //             }\n  //             items[s.ObjectName] = c;\n  //           }\n  //         }\n  //       }\n  //     }\n  //   }\n  //   return items;\n  // }\n\n  private async loadObject(id: number) {\n    this.infotypes = [];\n    this.methodtypes = [];\n    this.statetypes = [];\n    this.attrtypes = [];\n    this.object = null;\n\n    const ob = this.state.base;\n    let obj = ob.FindObjectByID(id);\n    if (obj !== null) {\n      let ismethod = false;\n      let sysclass = obj.SystemClass();\n      if (sysclass && !sysclass.Composeable) {\n        return;\n      }\n      this.object = obj;\n      if (ob.IsInstance(this.object)) {\n        const act = ob.FindSystemClass(ob.GetModelAttribute(Process_ElementName.SLActivity));\n        if (act !== null)\n          ismethod = (this.object as ISemTalkInstance).IsInstance(act);\n      }\n      this.setComposition(obj, ismethod);\n\n      let info = ob.FindSystemClass(ob.GetModelAttribute(Process_ElementName.SLInformation));\n      this._allitems = await this.getAllCompositions(ismethod, info);\n      this.setState({\n        objectid: id,\n        ismethod: ismethod,\n        // items: this._allitems,\n        items: this._onFilter(this.curr_businessobj),\n        info: info,\n        sysclass: sysclass\n      });\n    }\n  }\n\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    try {\n      md = JSON.parse(e.data);\n      var mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkNavigationEvent.gotoObject:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n      case SemTalkNavigationEvent.gotoNode:\n        if (md.objectid !== this.state.objectid) {\n          this.resetState();\n          this.loadObject(md.objectid);\n        }\n        break;\n    }\n  }\n  private loadGraphListItems = (lil: any[], reftype: string) => {\n    // let nitems: IExternalObject[] = [];\n    let nitems: IDropdownOption[] = [];\n    if (lil !== undefined) {\n      let spitems = lil;\n      for (let s of spitems) {\n        let fields: any = s[\"fields\"];\n        const item = {\n          key: fields[\"Title\"] as string,\n          text: fields[\"Title\"] as string,\n          ReferenceType: reftype,\n          SPItem: fields\n        };\n        // let item = {\n        //   Object: null, \n        //   ObjectCaption: fields[\"Title\"] as string, \n        //   ObjectName: String(s.eTag),\n        //   ObjectDescription: fields[\"Comment\"] as string,\n        //   ObjectClass: null,\n        //   EditLink: s[\"fields@odata.context\"],\n        //   ReferenceType: reftype,\n        //   SPItem: fields, MGItem: null\n        // };\n        nitems.push(item);\n      }\n    }\n    return nitems;\n  }\n  private loadGraphCompositions = (ismethod: boolean, lil: any[], reftype: string) => {\n    // let nitems: IExternalObject[] = [];\n    let nitems: IComposeTab[] = [];\n    if (lil !== undefined) {\n      let spitems = lil;\n      for (let s of spitems) {\n        let fields: any = s[\"fields\"];\n        // const item = { key: fields[\"Title\"] as string, \n        //                text: fields[\"Title\"] as string,\n        //                ReferenceType: reftype, \n        //                SPItem: fields };\n        if (ismethod) {\n          let methods = fields[\"Method\"];\n          for (let met of methods) {\n            let item: IComposeTab = {\n              Object: null,\n              ObjectCaption: fields[\"Title\"],\n              Method: null,\n              MethodCaption: met[\"LookupValue\"],\n              State: null,\n              StateCaption: null,\n              Attribute: null,\n              AttributeCaption: null,\n              ReferenceType: reftype,\n              SPItem: fields,\n              MGItem: null\n            };\n            nitems.push(item);\n          }\n        }\n        if (!ismethod) {\n          let states = fields[\"State\"];\n          for (let sta of states) {\n            let item: IComposeTab = {\n              Object: null,\n              ObjectCaption: fields[\"Title\"],\n              Method: null,\n              MethodCaption: null,\n              State: null,\n              StateCaption: sta[\"LookupValue\"],\n              Attribute: null,\n              AttributeCaption: null,\n              ReferenceType: reftype,\n              SPItem: fields,\n              MGItem: null\n            };\n            nitems.push(item);\n          }\n        }      }\n    }\n    return nitems;\n  }\n  private matchName(s1: any, s2: string, nsp: string): boolean {\n    return (s1 === s2 || s1 === nsp + \"#\" + s2);\n  }\n  private getAllInfoTypes = async (info: ISemTalkSystemClass) => {\n    const nsp = info.ObjectName.substring(0, 2);\n    this.infotypes = [];\n    for (let inf of info.AllSubClasses()) {\n      this.infotypes.push({ key: inf.ObjectName, text: inf.ObjectCaption });\n    }\n    let lib = this.props.semtalk.getSPListName(info.ObjectName);\n    if (!this.props.mongo.usemongo) {\n      if (this.props.context !== undefined && this.props.site !== undefined) {\n        let lany: any = await this.spinterface.getListData(this.props.context, this.props.site, lib, undefined);\n        let lil: any[] = lany.value;\n        if (lil !== undefined) {\n          let spitems = lil;\n          for (let s of spitems) {\n            if (this.infotypes.findIndex((t) => t.key === s[\"name\"]) < 0) {\n              const item = { key: s[\"Title\"] as string, text: s[\"Title\"] as string, SPItem: s };\n              this.infotypes.push(item);\n            }\n          }\n        }\n      }\n    }\n    if (this.props.mongo.usemongo) {\n      if (this.props.mongo.semmongoserverurl !== undefined) {\n        let docs: any[] = [];\n        let x = sessionStorage.getItem(\"mgGetItemNames_\" + lib);\n        if (x) {\n          docs = JSON.parse(x);\n        } else {\n          docs = await mgGetItemNames(this.props.mongo, this.props.mongo.repository, lib);\n          sessionStorage.setItem(\"mgGetItemNames_\" + lib, JSON.stringify(docs));\n        }\n        for (let s1 of docs) {\n          const s: any = s1;\n          if (this.infotypes.findIndex((t) => this.matchName(t.key, s[\"name\"], nsp)) < 0) {\n            const item = { key: s[\"name\"] as string, text: s[\"name\"] as string, MGItem: s };\n            this.infotypes.push(item);\n          }\n        }\n      }\n    }\n    if (this.props.graphClient !== undefined && this.props.sharepointrepository) {\n      let spinterface = this.props.semtalk.explorer;\n      let listname = this.props.semtalk.getSPListName(\"Object\");\n      let query = this.props.sharepointrepository + \"lists/\" + listname + \"/items?expand=fields\";\n      let resl = await spinterface.fetchGraphItems(this.props.graphClient, query);\n      let nitems = this.loadGraphListItems(resl, \"Element\");\n      this.infotypes.push(...nitems);\n    }\n    this.infotypes = this.infotypes.sort((x, y) => x.text.localeCompare(y.text));\n  }\n  private getAllMethodTypes = async (ob: IObjectBase) => {\n    this.methodtypes = [];\n    for (const atype of ob.AllMethodTypes()) {\n      this.methodtypes.push({ key: atype.ObjectName, text: atype.ObjectCaption });\n    }\n    let lib = this.props.semtalk.getSPListName(\"Method\");\n    if (!this.props.mongo.usemongo) {\n      if (this.props.context !== undefined && this.props.site !== undefined) {\n        let lany: any = await this.spinterface.getListData(this.props.context, this.props.site, lib, undefined);\n        let lil: any[] = lany.value;\n        if (lil !== undefined) {\n          let spitems = lil;\n          for (let s of spitems) {\n            if (this.methodtypes.findIndex((t) => t.key === s[\"name\"]) < 0) {\n              const item = { key: s[\"Title\"] as string, text: s[\"Title\"] as string, SPItem: s };\n              this.methodtypes.push(item);\n            }\n          }\n        }\n      }\n    }\n    if (this.props.mongo.usemongo) {\n      if (this.props.mongo.semmongoserverurl !== undefined) {\n        let docs: any[] = [];\n        let x = sessionStorage.getItem(\"mgGetItemNames_\" + lib);\n        if (x) {\n          docs = JSON.parse(x);\n        } else {\n          docs = await mgGetItemNames(this.props.mongo, this.props.mongo.repository, lib);\n          sessionStorage.setItem(\"mgGetItemNames_\" + lib, JSON.stringify(docs));\n        }\n        for (let s1 of docs) {\n          const s: any = s1;\n          if (this.methodtypes.findIndex((t) => t.key === s[\"name\"]) < 0) {\n            const item = { key: s[\"name\"] as string, text: s[\"name\"] as string, MGItem: s };\n            this.methodtypes.push(item);\n          }\n        }\n      }\n    }\n    if (this.props.graphClient !== undefined && this.props.sharepointrepository) {\n      let spinterface = this.props.semtalk.explorer;\n      let listname = this.props.semtalk.getSPListName(\"Method\");\n      let query = this.props.sharepointrepository + \"lists/\" + listname + \"/items?expand=fields\";\n      let resl = await spinterface.fetchGraphItems(this.props.graphClient, query);\n      let nitems = this.loadGraphListItems(resl, \"Element\");\n      this.methodtypes.push(...nitems);\n    }\n    this.methodtypes = this.methodtypes.sort((x, y) => x.text.localeCompare(y.text));\n  }\n  private getAllStateTypes = async (ob: IObjectBase) => {\n    this.statetypes = [];\n    for (const atype of ob.AllStateTypes()) {\n      this.statetypes.push({ key: atype.ObjectName, text: atype.ObjectCaption });\n    }\n    let lib = this.props.semtalk.getSPListName(\"State\");\n    if (!this.props.mongo.usemongo) {\n      if (this.props.context !== undefined && this.props.site !== undefined) {\n        let lany: any = await this.spinterface.getListData(this.props.context, this.props.site, lib, undefined);\n        let lil: any[] = lany.value;\n        if (lil !== undefined) {\n          let spitems = lil;\n          for (let s of spitems) {\n            if (this.statetypes.findIndex((t) => t.key === s[\"name\"]) < 0) {\n              const item = { key: s[\"Title\"] as string, text: s[\"Title\"] as string, SPItem: s };\n              this.statetypes.push(item);\n            }\n          }\n        }\n      }\n    }\n    if (this.props.mongo.usemongo) {\n      if (this.props.mongo.usemongo) {\n        let docs: any[] = [];\n        let x = sessionStorage.getItem(\"mgGetItemNames_\" + lib);\n        if (x) {\n          docs = JSON.parse(x);\n        } else {\n          docs = await mgGetItemNames(this.props.mongo, this.props.mongo.repository, lib);\n          sessionStorage.setItem(\"mgGetItemNames_\" + lib, JSON.stringify(docs));\n        }\n        for (let s1 of docs) {\n          const s: any = s1;\n          if (this.statetypes.findIndex((t) => t.key === s[\"name\"]) < 0) {\n            const item = { key: s[\"name\"] as string, text: s[\"name\"] as string, MGItem: s };\n            this.statetypes.push(item);\n          }\n        }\n      }\n    }\n    if (this.props.graphClient !== undefined && this.props.sharepointrepository) {\n      let spinterface = this.props.semtalk.explorer;\n      let listname = this.props.semtalk.getSPListName(\"State\");\n      let query = this.props.sharepointrepository + \"lists/\" + listname + \"/items?expand=fields\";\n      let resl = await spinterface.fetchGraphItems(this.props.graphClient, query);\n      let nitems = this.loadGraphListItems(resl, \"Element\");\n      this.statetypes.push(...nitems);\n    }\n    this.statetypes = this.statetypes.sort((x, y) => x.text.localeCompare(y.text));\n  }\n  private getAllAttributeTypes = async (ob: IObjectBase) => {\n    this.attrtypes = [];\n    for (const atype of ob.AllAttributeTypes()) {\n      this.attrtypes.push({ key: atype.ObjectName, text: atype.ObjectCaption });\n    }\n    if (!this.props.mongo.usemongo) {\n      let lib = this.props.semtalk.getSPListName(\"Attribute\");\n      if (this.props.context !== undefined && this.props.site !== undefined) {\n        let lany: any = await this.spinterface.getListData(this.props.context, this.props.site, lib, undefined);\n        let lil: any[] = lany.value;\n        if (lil !== undefined) {\n          let spitems = lil;\n          for (let s of spitems) {\n            if (this.attrtypes.findIndex((t) => t.key === s[\"name\"]) < 0) {\n              const item = { key: s[\"Title\"] as string, text: s[\"Title\"] as string, SPItem: s };\n              this.attrtypes.push(item);\n            }\n          }\n        }\n      }\n    }\n    if (this.props.mongo.usemongo) {\n      if (this.props.mongo.semmongoserverurl !== undefined) {\n        let lib = \"Attribute\";\n        let docs: any[] = [];\n        let x = sessionStorage.getItem(\"mgGetItemNames_\" + lib);\n        if (x) {\n          docs = JSON.parse(x);\n        } else {\n          docs = await mgGetItemNames(this.props.mongo, this.props.mongo.repository, lib);\n          sessionStorage.setItem(\"mgGetItemNames_\" + lib, JSON.stringify(docs));\n        }\n        for (let s1 of docs) {\n          const s: any = s1;\n          if (this.attrtypes.findIndex((t) => t.key === s[\"name\"]) < 0) {\n            const item = { key: s[\"name\"] as string, text: s[\"name\"] as string, MGItem: s };\n            this.attrtypes.push(item);\n          }\n        }\n      }\n    }\n    if (this.props.graphClient !== undefined && this.props.sharepointrepository) {\n      let spinterface = this.props.semtalk.explorer;\n      let listname = this.props.semtalk.getSPListName(\"Attribute\");\n      let query = this.props.sharepointrepository + \"lists/\" + listname + \"/items?expand=fields\";\n      let resl = await spinterface.fetchGraphItems(this.props.graphClient, query);\n      let nitems = this.loadGraphListItems(resl, \"Element\");\n      this.attrtypes.push(...nitems);\n    }\n    this.attrtypes = this.attrtypes.sort((x, y) => x.text.localeCompare(y.text));\n  }\n  private async getAllCompositions(ismethod: boolean, info: ISemTalkSystemClass | null): Promise<IComposeTab[]> {\n    let compositions: IComposeTab[] = [];\n    if (info !== null) {\n      let ob = info.ObjectBase;\n      await this.getAllInfoTypes(info);\n      await this.getAllMethodTypes(ob);\n      await this.getAllStateTypes(ob);\n      await this.getAllAttributeTypes(ob);\n\n      for (let inf of info.AllSubClasses().sort((x, y) => x.ObjectCaption.localeCompare(y.ObjectCaption))) {\n        if (ob.IsBusinessClass(inf)) {\n          let businf = inf as ISemTalkBusinessClass;\n          if (ismethod)\n            for (let meth of businf.AllMethods().sort((x, y) => x.ClassOf().ObjectCaption.localeCompare(y.ClassOf().ObjectCaption))) {\n              let item: IComposeTab = {\n                Object: businf,\n                ObjectCaption: businf.ObjectCaption,\n                Method: meth,\n                MethodCaption: meth.ClassOf().ObjectCaption,\n                State: null,\n                StateCaption: null,\n                Attribute: null,\n                AttributeCaption: null,\n                ReferenceType: \"Local\",\n                SPItem: null,\n                MGItem: null\n              };\n              compositions.push(item);\n            }\n          if (!ismethod)\n            for (let stat of businf.AllStates().sort((x, y) => x.ClassOf().ObjectCaption.localeCompare(y.ClassOf().ObjectCaption))) {\n              let item: IComposeTab = {\n                Object: businf,\n                ObjectCaption: businf.ObjectCaption,\n                Method: null,\n                MethodCaption: null,\n                State: stat,\n                StateCaption: stat.ClassOf().ObjectCaption,\n                Attribute: null,\n                AttributeCaption: null,\n                ReferenceType: \"Local\",\n                SPItem: null,\n                MGItem: null\n              };\n              compositions.push(item);\n            }\n        }\n      }\n\n      if (!this.props.mongo.usemongo) {\n        if (this.props.context !== undefined && this.props.site !== undefined) {\n          let lany: any = await this.spinterface.getListData(this.props.context, this.props.site,\n            this.props.semtalk.getSPListName(info.ObjectName),\n            \"$select=Title,Method/Title,State/Title&$expand=Method/Title,State/Title\");\n          let lil: any[] = lany.value;\n          if (lil !== undefined) {\n            let spitems = lil;\n            for (let item of spitems) {\n              const object = item[\"Title\"];\n              if (ismethod) {\n                const methods = item[\"Method\"];\n                for (let met of methods) {\n                  if (compositions.findIndex((t: IComposeTab) => t.ObjectCaption === object && t.MethodCaption === met[\"Title\"]) < 0) {\n                    let nitem: IComposeTab = {\n                      Object: null,\n                      ObjectCaption: object,\n                      Method: null,\n                      MethodCaption: met[\"Title\"],\n                      State: null,\n                      StateCaption: null,\n                      Attribute: null,\n                      AttributeCaption: null,\n                      ReferenceType: \"Listitem\",\n                      SPItem: item,\n                      MGItem: null\n                    };\n                    compositions.push(nitem);\n                  }\n                }\n              }\n              if (!ismethod) {\n                const states = item[\"State\"];\n                for (let sta of states) {\n                  if (compositions.findIndex((t: IComposeTab) => t.ObjectCaption === object && t.StateCaption === sta[\"Title\"]) < 0) {\n                    let nitem: IComposeTab = {\n                      Object: null,\n                      ObjectCaption: object,\n                      Method: null,\n                      MethodCaption: null,\n                      State: null,\n                      StateCaption: sta[\"Title\"],\n                      Attribute: null,\n                      AttributeCaption: null,\n                      ReferenceType: \"Listitem\",\n                      SPItem: item,\n                      MGItem: null\n                    };\n                    compositions.push(nitem);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if (this.props.mongo.usemongo) {\n        let lib = this.props.semtalk.getSPListName(info.ObjectName);\n        let docs = await mgGetItems(this.props.mongo, this.props.mongo.repository, lib);\n        for (let s of docs) {\n          if (s === null) continue;\n          const object = s[\"name\"];\n          if (ismethod) {\n            const methods = s[\"Method\"];\n            if (methods) {\n              for (let met of methods) {\n                if (compositions.findIndex((t: IComposeTab) => t.ObjectCaption === object && t.MethodCaption === met) < 0) {\n                  let nitem: IComposeTab = {\n                    Object: null,\n                    ObjectCaption: object,\n                    Method: null,\n                    MethodCaption: met,\n                    State: null,\n                    StateCaption: null,\n                    Attribute: null,\n                    AttributeCaption: null,\n                    ReferenceType: \"Mongo\",\n                    SPItem: null,\n                    MGItem: s\n                  };\n                  compositions.push(nitem);\n                }\n              }\n            }\n          }\n          if (!ismethod) {\n            let states = s[\"State\"];\n            if (states === undefined)\n              states = s[\"States\"];\n            if (states) {\n              for (let sta of states) {\n                if (compositions.findIndex((t: IComposeTab) => t.ObjectCaption === object && t.StateCaption === sta) < 0) {\n                  let nitem: IComposeTab = {\n                    Object: null,\n                    ObjectCaption: object,\n                    Method: null,\n                    MethodCaption: null,\n                    State: null,\n                    StateCaption: sta,\n                    Attribute: null,\n                    AttributeCaption: null,\n                    ReferenceType: \"Mongo\",\n                    SPItem: null,\n                    MGItem: s\n                  };\n                  compositions.push(nitem);\n                }\n              }\n            }\n          }\n        }\n      }\n      if (this.props.graphClient !== undefined && this.props.sharepointrepository) {\n        let spinterface = this.props.semtalk.explorer;\n        let listname = this.props.semtalk.getSPListName(info.ObjectName);\n        let query = this.props.sharepointrepository + \"lists/\" + listname + \"/items?expand=fields\";\n        let resl = await spinterface.fetchGraphItems(this.props.graphClient, query);\n        let nitems = this.loadGraphCompositions(ismethod, resl, \"Element\");\n        compositions.push(...nitems);\n      }\n    }\n    compositions = compositions.sort((x, y) => (x.ObjectCaption.localeCompare(y.ObjectCaption)));\n    return compositions;\n  }\n  private setComposition = (obj: ISemTalkObject, _ismethod: boolean): void => {\n    let ob = obj.ObjectBase;\n    if (ob.IsInstance(obj)) {\n      let cmp = (obj as ISemTalkInstance).ClassOf().Composition();\n      if (cmp !== null) {\n        let cl = cmp.ComposedClass.ID2Name;\n        let meth = this.curr_method;\n        if (cmp.Method !== null) meth = cmp.Method.ObjectName;\n        let sta = this.curr_state;\n        if (cmp.State !== null) sta = cmp.State.ObjectName;\n        let attr = this.curr_attr;\n        if (cmp.Attribute !== null) attr = cmp.Attribute.ObjectName;\n        this.curr_businessobj = cl;\n        this.curr_method = meth;\n        this.curr_state = sta;\n        this.curr_attr = attr;\n      }\n    }\n    if (this._dropdown && this._dropdown.current) {\n      this._dropdown.current.focus();\n    }\n  }\n  // private onContextualMenuDismissed = (): void => {\n  //   this.setState({\n  //     contextualMenuProps: undefined,\n  //   });\n  // }\n  // private getContextualMenuProps = (ev: React.MouseEvent<HTMLElement>, column: IColumn): IContextualMenuProps => {\n  //   const items: IContextualMenuItem[] = [\n  //     {\n  //       key: 'aToZ',\n  //       name: 'A to Z',\n  //       iconProps: { iconName: 'SortUp' },\n  //       canCheck: true,\n  //       checked: column.isSorted && !column.isSortedDescending,\n  //     },\n  //     {\n  //       key: 'zToA',\n  //       name: 'Z to A',\n  //       iconProps: { iconName: 'SortDown' },\n  //       canCheck: true,\n  //       checked: column.isSorted && column.isSortedDescending,\n  //     }\n  //   ];\n\n  //   return {\n  //     items: items,\n  //     target: ev.currentTarget as HTMLElement,\n  //     directionalHint: DirectionalHint.bottomLeftEdge,\n  //     gapSpace: 10,\n  //     isBeakVisible: true,\n  //     onDismiss: this.onContextualMenuDismissed,\n  //   };\n  // }\n  // private onColumnContextMenu = (column: IColumn, ev: React.MouseEvent<HTMLElement>): void => {\n  //   if (column.columnActionsMode !== ColumnActionsMode.disabled) {\n  //     this.setState({\n  //       contextualMenuProps: this.getContextualMenuProps(ev, column),\n  //     });\n  //   }\n  // }\n\n\n  private _columns: IColumn[] = [\n    {\n      key: 'Value',\n      name: this.props.semtalk.getResStr(\"STRDLGWOPTCOMP\"),\n      fieldName: 'Value',\n      minWidth: 200,\n      onRender: (item: IComposeTab, _index?: number, _column?: IColumn) => {\n        // let r: any;\n        // r = <TextField defaultValue={item.PropValue} readOnly={true} label={item._label}></TextField>;\n        // return r;\n        if (item.MethodCaption !== null)\n          return <span>{item.ObjectCaption + \" \" + item.MethodCaption}</span>;\n        if (item.StateCaption !== null)\n          return <span>{item.ObjectCaption + \" \" + item.StateCaption}</span>;\n        return <span></span>;\n      }\n    }\n  ];\n\n  // private commands: any[] = [];\n  // private saveItem = {\n  //   key: 'Save',\n  //   name: this.props.semtalk.getResStr(\"STRSAVE\").replace(\"&\", \"\"),\n  //   //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n  //   iconProps: {\n  //     iconName: 'Save'\n  //   },\n  //   onClick: (): void => {\n  //     this.saveitem();\n  //   }\n  // };\n  // private exportItem = {\n  //   key: 'Export',\n  //   disabled: true,\n  //   name: this.props.semtalk.getResStrListener(\"STRDLGEXPORT\").replace(\"&\", \"\"),\n  //   //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n  //   iconProps: {\n  //     iconName: 'Export'\n  //   },\n  //   onClick: (): void => {\n  //     if (this.props.mongo.usemongo && this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLInformation).length > 0) {\n  //       this.sp2mg(\"Method\");\n  //       this.sp2mg(\"State\");\n  //       this.sp2mg(\"Attribute\");\n  //       this.sp2mg(this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLInformation));\n  //     }\n  //     // this.addnewitem();\n  //   }\n  // };\n\n  private copyExtern = async (itemname: string, obj: ISemTalkObject, sysc: ISemTalkSystemClass) => {\n    // let fnd = false;\n    if (this.props.mongo.usemongo) {\n      let lib = this.props.semtalk.getSPListName(sysc.ObjectName);\n      const mgitem: any = await mgGetItem(this.props.mongo, this.props.mongo.repository, lib, itemname);\n      if (mgitem[\"Comment\"]) {\n        obj.Comment = mgitem[\"Comment\"];\n      }\n      for (const l of this._languages) {\n        if (mgitem[l]) {\n          // if (l === this.props.semtalk.base.CurrentNsp) fnd = true;\n          let sl = GetLanguage(l);\n          if (sl) obj.MakeSynonym(mgitem[l], sl);\n        }\n      }\n      for (const a of sysc.AllAttributes().map(x => x.ClassOf().ObjectName)) {\n        if (mgitem[a]) {\n          obj.SetValue(a, mgitem[a]);\n        }\n      }\n    }\n    if (this.props.context !== undefined && this.props.site !== undefined) {\n      let spinterface = this.props.semtalk.explorer;\n      let lany: any = await spinterface.getListItem(this.props.context, this.props.site, this.props.semtalk.getSPListName(sysc.ObjectName), \"*\");\n      const spitem: any = lany[0];\n      if (spitem[\"Comment\"]) {\n        obj.Comment = spitem[\"Comment\"];\n      }\n      for (const l of this._languages) {\n        if (spitem[l]) {\n          // if (l === this.props.semtalk.base.CurrentNsp) fnd = true;\n          let sl = GetLanguage(l);\n          if (sl) obj.MakeSynonym(spitem[l], sl);\n        }\n      }\n      for (const a of sysc.AllAttributes().map(x => x.ClassOf().ObjectName)) {\n        if (spitem[a]) {\n          obj.SetValue(a, spitem[a]);\n        }\n      }\n    }\n  }\n  private copyExternVirtual = async (itemname: string, obj: ISemTalkObject, syscname: string) => {\n    // let fnd = false;\n    if (this.props.mongo.usemongo) {\n      let lib = this.props.semtalk.getSPListName(syscname);\n      const mgitem: any = await mgGetItem(this.props.mongo, this.props.mongo.repository, lib, itemname);\n      if (mgitem) {\n        if (mgitem[\"Comment\"]) {\n          obj.Comment = mgitem[\"Comment\"];\n        }\n        for (const l of this._languages) {\n          if (mgitem[l]) {\n            // if (l === this.props.semtalk.base.CurrentNsp) fnd = true;\n            let sl = GetLanguage(l);\n            if (sl) obj.MakeSynonym(mgitem[l], sl);\n          }\n        }\n      }\n    }\n    if (this.props.context !== undefined && this.props.site !== undefined) {\n      let spinterface = this.props.semtalk.explorer;\n      let lany: any = await spinterface.getListItem(this.props.context, this.props.site, this.props.semtalk.getSPListName(syscname), \"*\");\n      const spitem: any = lany[0];\n      if (spitem[\"Comment\"]) {\n        obj.Comment = spitem[\"Comment\"];\n      }\n      for (const l of this._languages) {\n        if (spitem[l]) {\n          // if (l === this.props.semtalk.base.CurrentNsp) fnd = true;\n          let sl = GetLanguage(l);\n          if (sl) obj.MakeSynonym(spitem[l], sl);\n        }\n      }\n    }\n  }\n\n  private async saveitem() {\n    if (this.object) {\n      const ob = this.object.ObjectBase;\n      let cl: ISemTalkBusinessClass | null = null;\n      let aname: string = \"\";\n      if (this.state.info && this.curr_businessobj.length > 0) {\n        let label = this.curr_businessobj;\n        if (label.length === 0) return;\n        aname = label;\n        let infoname: string = label;\n        if (infoname.indexOf(\"#\") < 0) {\n          const nsp = this.state.info.ObjectName.substring(0, 2);\n          infoname = nsp + \"#\" + label;\n        }\n        cl = ob.FindBusinessClass(infoname);\n        if (cl === null) {\n          cl = ob.MakeBusinessClass(infoname);\n        }\n        if (cl !== null) {\n          if (!cl.IsParent(this.state.info)) {\n            cl.AddSubclassOf(this.state.info);\n          }\n        }\n        this.copyExtern(cl.ID2Name, cl, this.state.info);\n      }\n      let meth: ISemTalkMethodType | null = null;\n      if (cl !== null && this.curr_method.length > 0) {\n        let label = this.curr_method;\n        aname = aname + \" \" + label;\n        let m = cl.FindAMethod(label);\n        if (m) {\n          meth = m.ClassOf();\n        } else {\n          meth = cl.MakeMethod(label).ClassOf();\n        }\n        if (meth) {\n          let option = this.methodtypes.find((o) => {\n            if (o.key && meth) return (o.key === meth.ObjectName);\n            return false;\n          });\n          if (option) {\n            this.copyExternVirtual(meth.ObjectName, meth, \"Method\");\n          }\n        }\n      }\n      let state: ISemTalkStateType | null = null;\n      if (cl !== null && this.curr_state.length > 0) {\n        let label = this.curr_state;\n        aname = aname + \" \" + label;\n        let m = cl.FindAState(label);\n        if (m) {\n          state = m.ClassOf();\n        } else {\n          state = cl.MakeState(label).ClassOf();\n        }\n        if (state) {\n          let option = this.statetypes.find((o) => {\n            if (o.key && state) return (o.key === state.ObjectName);\n            return false;\n          });\n          if (option) {\n            this.copyExternVirtual(state.ObjectName, state, \"State\");\n          }\n        }\n      }\n      let attr: ISemTalkAttributeType | null = null;\n      if (cl !== null && this.curr_attr.length > 0) {\n        let label = this.curr_attr;\n        aname = aname + \" \" + label;\n        let m = cl.FindAttribute(label);\n        if (m) {\n          attr = m.ClassOf();\n        } else {\n          attr = cl.MakeAttribute(label, \"\").ClassOf();\n        }\n        if (attr) {\n          let option = this.attrtypes.find((o) => {\n            if (o.key && attr) return (o.key === attr.ObjectName);\n            return false;\n          });\n          if (option) {\n            this.copyExternVirtual(attr.ObjectName, attr, \"Attribute\");\n          }\n        }\n      }\n      let ins = this.object as ISemTalkInstance;\n      let acl = ins.ClassOf();\n\n      if (cl !== null && ((meth !== null) || (state !== null) || (attr !== null)) && ob.IsInstance(this.object)) {\n        let scl = acl.SystemClass() as ISemTalkSystemClass;\n        if (acl.ObjectName === scl.ObjectName) {\n          const nsp = scl.ObjectName.substring(0, 2);\n          aname = nsp + \"#\" + aname;\n          acl = scl.MakeSubClass(aname);\n          ins.SetClass(acl);\n        }\n        acl.MakeComposition(cl, meth, state, attr);\n      }\n      this.setComposition(ins, this.state.ismethod);\n      this._allitems = await this.getAllCompositions(this.state.ismethod, this.state.info);\n      if (this.curr_businessobj.length > 0) {\n        this.setState({\n          items: this._onFilter(this.curr_businessobj)\n        });\n      } else {\n        this.setState({\n          items: []\n        });\n\n      }\n    } else {\n    }\n  }\n  private _onItemInvoked = (_item: IComposeTab): void => {\n    this.selectitem();\n    // this.saveitem();\n  }\n  private selectitem = (): void => {\n    let item = this.state.sel.getSelection()[0] as IComposeTab;\n    if (item) {\n      let cl = this.curr_businessobj;\n      if (item.Object) {\n        cl = item.Object.ID2Name;\n      } else {\n        cl = item.ObjectCaption;\n      }\n      let meth = this.curr_method;\n      if (item.Method) { meth = item.Method.ClassOf().ObjectName; } else {\n        if (item.MethodCaption) meth = item.MethodCaption;\n      }\n      let sta = this.curr_state;\n      if (item.State) { sta = item.State.ClassOf().ObjectName; } else {\n        if (item.StateCaption) sta = item.StateCaption;\n      }\n      let attr = this.curr_attr;\n      if (item.Attribute) { attr = item.Attribute.ClassOf().ObjectName; } else {\n        if (item.AttributeCaption) attr = item.AttributeCaption;\n      }\n      this.curr_businessobj = cl;\n      this.curr_method = meth;\n      this.curr_state = sta;\n      this.curr_attr = attr;\n      this.saveitem();\n    }\n  }\n  public render(): React.ReactElement<ISemTalkComposeTabProps> {\n    let selmode = SelectionMode.single;\n    let vismode = CheckboxVisibility.hidden;\n    let r: React.ReactElement<ISemTalkComposeTabProps>;\n    r = <Fabric>\n      <div className={styles.semTalkCompose}><div className={styles.pivottab}></div></div>\n      <div>\n        {/* <Toggle label={this.props.semtalk.getResStr(\"STRAUTOCOMPLETE\")} checked={this.state.autoComplete} onChange={this.toggleAutoComplete} /> */}\n        <ComboBox text={this.curr_businessobj} label={this.props.semtalk.getResStrListener(\"STROBJSING\")}\n          options={this.infotypes} required={true}\n          allowFreeform\n          componentRef={this._dropdown}\n          autoComplete={this.state.autoComplete ? 'on' : 'off'}\n          //  autoComplete=\"on\"\n          onChange={(_event: React.FormEvent<IComboBox>, option?: IComboBoxOption, _index?: number, value?: string) => {\n            if (option !== undefined) {\n              this.curr_businessobj = option.text;\n              this.curr_method = \"\";\n              this.curr_attr = \"\";\n              this.curr_state = \"\";\n              this.setState({\n                items: this._onFilter(option.text)\n              });\n            } else {\n              if (value !== undefined) {\n                this.curr_businessobj = value;\n                this.curr_method = \"\";\n                this.curr_attr = \"\";\n                this.curr_state = \"\";\n                this.setState({\n                  // newobject: value, \n                  items: this._onFilter(value)\n                });\n              } else {\n                this.setState({ items: this._onFilter(value) });\n              }\n            }\n          }}>\n        </ComboBox>\n\n        <ComboBox text={this.curr_attr} label={this.props.semtalk.getResStrListener(\"STRBONATTR1\")}\n          options={this.attrtypes}\n          allowFreeform\n          //  autoComplete=\"on\"\n          onChange={(_event: React.FormEvent<IComboBox>, option?: IComboBoxOption, _index?: number, value?: string) => {\n            if (option !== undefined) {\n              this.curr_attr = option.text;\n              this.saveitem();\n            } else {\n              if (value !== undefined)\n                this.curr_attr = value;\n              this.saveitem();\n            }\n          }}></ComboBox>\n        {this.state.ismethod &&\n          <ComboBox text={this.curr_method} label={this.props.semtalk.getResStrListener(\"STRDLGEDMETHCAPTION\")}\n            options={this.methodtypes}\n            allowFreeform required={true}\n            onChange={(_event: React.FormEvent<IComboBox>, option?: IComboBoxOption, _index?: number, value?: string) => {\n              if (option !== undefined) {\n                this.curr_method = option.text;\n                this.saveitem();\n              } else {\n                if (value !== undefined)\n                  this.curr_method = value;\n                this.saveitem();\n              }\n            }}></ComboBox>\n        }\n        {!this.state.ismethod &&\n          <ComboBox text={this.curr_state} label={this.props.semtalk.getResStrListener(\"STRBONSTATE1\")}\n            options={this.statetypes}\n            allowFreeform required={true}\n            onChange={(_event: React.FormEvent<IComboBox>, option?: IComboBoxOption, _index?: number, value?: string) => {\n              if (option !== undefined) {\n                this.curr_state = option.text;\n                this.saveitem();\n              } else {\n                if (value !== undefined)\n                  this.curr_state = value;\n                this.saveitem();\n              }\n            }}></ComboBox>\n        }\n      </div>\n      <DetailsList\n        items={this.state.items}\n        compact={true}\n        columns={this._columns}\n        selectionMode={selmode}\n        layoutMode={DetailsListLayoutMode.justified}\n        selection={this.state.sel}\n        checkboxVisibility={vismode}\n        isHeaderVisible={true}\n        onItemInvoked={this._onItemInvoked}\n      />\n    </Fabric>;\n    return r;\n  }\n  private _onFilter = (text: any): IComposeTab[] => {\n    if (text === '') return [];\n    let fitems = this._allitems;\n    if (text) {\n      let matches = [text];\n      if (this.state.info) {\n        let infoname: string = text;\n        if (infoname.indexOf(\"#\") < 0) {\n          const nsp = this.state.info.ObjectName.substring(0, 2);\n          infoname = nsp + \"#\" + text;\n        }\n        let ob = this.state.base;\n        let cl = ob.FindBusinessClass(infoname);\n        if (cl) {\n          for (let sc of cl.AllSubClasses()) {\n            matches.push(sc.ObjectCaption);\n          }\n        }\n      }\n      // const tl = text.toLowerCase();\n      fitems = this._allitems.filter((i: IComposeTab) => {\n        // return (i.ObjectCaption.toLowerCase().indexOf(tl) > -1);\n        for (let m of matches) {\n          if (i.ObjectCaption.startsWith(m))\n            return true;\n        }\n        return false;\n      });\n    }\n    return fitems;\n  }\n}\n","import * as React from 'react';\r\n// import styles from './SemTalkCreateDiagram.module.scss';\r\nimport {\r\n  Selection, ISelection, DetailsList, DetailsListLayoutMode, IColumn,\r\n  CheckboxVisibility, CommandBar, TextField\r\n} from 'office-ui-fabric-react';\r\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection';\r\n\r\n// import { VisioRDFS } from '../application/semtalklistener/visiordfs';\r\nimport {\r\n  IObjectBase, ISemTalkDiagramType, ISemTalkDiagram,\r\n} from \"../../application/tbase/Interface\";\r\n\r\n// import { addCallBack, removeCallBack } from '../application/semtalklistener/stglobal';\r\n// import { NavigateForward, NavigateBackward } from '../../semtalkportal/stbackforward';\r\n// import { any } from '@microsoft/sp-webpart-base';\r\n// import { SetContext } from '../../semtalkportal/restinterface';\r\n// import { Guid } from \"guid-typescript\";\r\n// import * as strings from 'SemTalkStrings';\r\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\r\n\r\n\r\nexport interface ISemTalkCreateDiagramProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  callback: (semtalk: IVisioRDFS, name: string, obj: ISemTalkDiagramType) => void;\r\n  diagram: ISemTalkDiagram | null | undefined;\r\n}\r\nexport interface ISemTalkCreateDiagramState {\r\n  objectid: number;\r\n  items: ICreateDiagramTab[];\r\n  base: IObjectBase;\r\n  selection: ISemTalkDiagramType | null;\r\n  sel: ISelection;\r\n  objectname: string;\r\n  callback: (semtalk: IVisioRDFS, name: string, obj: ISemTalkDiagramType) => void;\r\n}\r\ninterface ICreateDiagramTab {\r\n  key: string;\r\n  Object: ISemTalkDiagramType | null;\r\n  ObjectName: string;\r\n  ObjectCaption: string;\r\n}\r\nexport class SemTalkCreateDiagram extends React.Component<ISemTalkCreateDiagramProps, ISemTalkCreateDiagramState> {\r\n\r\n  constructor(props: ISemTalkCreateDiagramProps) {\r\n    super(props);\r\n    console.debug(\"showCreateDiagram\");\r\n\r\n    let dt: ISemTalkDiagramType | null = null;\r\n    let dn: string = \"\";\r\n    if (this.props.semtalk.page) {\r\n      dt = this.props.semtalk.page.ClassOf();\r\n      dn = dt.ObjectCaption;\r\n    }\r\n\r\n    this.state = {\r\n      objectid: -1,\r\n      items: [],\r\n      base: this.props.semtalk.base,\r\n      selection: dt,\r\n      sel: new Selection({\r\n        onSelectionChanged: () => { this.selectitem(); }\r\n      }),\r\n      objectname: dn,\r\n      callback: this.props.callback\r\n    };\r\n  }\r\n  private mounted: boolean = false;\r\n\r\n  public componentDidMount() {\r\n    // let oid: number = getObject();\r\n    let oid: number = 0;\r\n    if (this.props.diagram) oid = this.props.diagram.ID;\r\n    if (oid > 0) {\r\n      this.loadObject(oid);\r\n    } else {\r\n      this.loadObject(-1);\r\n    }\r\n    let dn: string = \"\";\r\n    if (this.props.semtalk.page && this.state.sel.getSelectedCount() === 0) {\r\n      let dt = this.props.semtalk.page.ClassOf();\r\n      dn = dt.ObjectCaption;\r\n      this.state.sel.setKeySelected(dn, true, true);\r\n    }\r\n    this.mounted = true;\r\n    // addCallBack(this);\r\n  }\r\n  public componentWillUnmount() {\r\n    // removeCallBack(this);\r\n    this.mounted = false;\r\n  }\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n  }\r\n  private loadObject(id: number) {\r\n    let objectname = \"\";\r\n    let tb = this.state.base;\r\n    let sel: ISemTalkDiagramType | null = null;\r\n    if (this.props.diagram) {\r\n      sel = this.props.diagram.ClassOf();\r\n      let cnt: number = sel.Instances().length + 1;\r\n      objectname = sel.ObjectCaption + \"-\" + cnt;\r\n    }\r\n    let items: ICreateDiagramTab[];\r\n    items = tb.AllDiagramTypes().map((s) => { return { key: s.ObjectCaption, Object: s, ObjectCaption: s.ObjectCaption, ObjectName: s.ObjectName }; });\r\n    items = items.sort((a, b) => a.ObjectCaption.localeCompare(b.ObjectCaption));\r\n\r\n    this.setState({\r\n      objectid: id,\r\n      items: items,\r\n      objectname: objectname,\r\n      selection: sel\r\n    });\r\n\r\n  }\r\n  private _columns: IColumn[] = [\r\n    {\r\n      key: 'Value',\r\n      name: \"Value\",\r\n      fieldName: 'Value',\r\n      minWidth: 100,\r\n      // maxWidth: 180,\r\n      isResizable: true,\r\n      isMultiline: false,\r\n      onRender: (item: ICreateDiagramTab, _index?: number, column?: IColumn) => {\r\n        return <span>{item.ObjectCaption}</span>;\r\n      }\r\n    }\r\n  ];\r\n\r\n  private selectitem = (): void => {\r\n    let sel = this.state.sel.getSelection();\r\n    if (sel.length > 0) {\r\n      let item = this.state.sel.getSelection()[0] as ICreateDiagramTab;\r\n      if (item !== null) {\r\n        let oname = \"\";\r\n        if (item.Object) {\r\n          let cnt: number = item.Object.Instances().length + 1;\r\n          oname = item.ObjectCaption + \"-\" + cnt;\r\n        }\r\n        this.setState({ selection: item.Object, objectname: oname });\r\n      }\r\n    }\r\n  }\r\n  private additem = () => {\r\n    const cb = this.state.callback;\r\n    if (this.state.selection !== null) {\r\n      cb(this.props.semtalk, this.state.objectname, this.state.selection);\r\n    } else {\r\n    }\r\n  }\r\n  private _onItemInvoked = (item: ICreateDiagramTab): void => {\r\n    if (item.Object !== null) {\r\n      let oname = this.state.objectname;\r\n      if (oname.length === 0) {\r\n        let cnt: number = item.Object.Instances().length + 1;\r\n        oname = item.ObjectCaption + \"-\" + cnt;\r\n      }\r\n      this.state.callback(this.props.semtalk, oname, item.Object);\r\n    } else {\r\n      this.selectitem();\r\n    }\r\n  }\r\n  private commands: any[] = [];\r\n  private newItem = {\r\n    key: 'New',\r\n    name: this.props.semtalk.getResStr(\"STRDLGCMDNE\").replace(\"&\", \"\"),\r\n    //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n    iconProps: {\r\n      iconName: 'Add'\r\n    },\r\n    onClick: (): void => {\r\n      this.additem();\r\n    }\r\n  };\r\n  public render(): React.ReactElement<ISemTalkCreateDiagramProps> {\r\n    let selmode = SelectionMode.single;\r\n    let vismode = CheckboxVisibility.hidden;\r\n    this.commands = [];\r\n    this.commands.push(this.newItem);\r\n    // if (this.state.sel.getSelectedCount() === 0) {\r\n    //   this.state.sel.setIndexSelected(0, true, false);\r\n    // }\r\n\r\n    let r: React.ReactElement<ISemTalkCreateDiagramProps>;\r\n    let lbl = \"\";\r\n    // if (this.state.sysclass !== undefined) {\r\n    //   lbl = this.state.sysclass.ID2NameNsp();\r\n    // } else {\r\n    lbl = this.props.semtalk.getResStrListener(\"STRNAME\");\r\n    // }\r\n    r = <Fabric>\r\n      <div id=\"test\">\r\n        <CommandBar id=\"STCreateDiagram\"\r\n          items={this.commands} // contain New button\r\n        ></CommandBar>\r\n        <TextField id=\"STDiagramName\" required label={lbl} value={this.state.objectname} onChange={(ev, a) => {\r\n          if (a !== undefined) // rename the diagram; label e.g. Name \r\n            this.setState({ objectname: a });\r\n        }} />\r\n        <div id=\"diagramList\">\r\n          <DetailsList // display all diagram types\r\n            items={this.state.items}\r\n            compact={true}\r\n            columns={this._columns}\r\n            selectionMode={selmode}\r\n            layoutMode={DetailsListLayoutMode.justified}\r\n            selection={this.state.sel}\r\n            onItemInvoked={this._onItemInvoked}\r\n            checkboxVisibility={vismode}\r\n            isHeaderVisible={false}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fabric>;\r\n    // console.debug(\"r: \", r.toString(), r);\r\n    return r;\r\n  }\r\n\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Stack, StackItem, List,\r\n} from 'office-ui-fabric-react';\r\nimport { VisioRDFS } from '../../application/semtalklistener/visiordfs';\r\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { SemTalkCookie } from \"../../ISemTalkOnline\";\r\n\r\nexport interface ISemTalkAboutProps {\r\n}\r\nexport interface ISemTalkAboutState {\r\n}\r\nexport class SemTalkAbout extends React.Component<ISemTalkAboutProps, ISemTalkAboutState> {\r\n  private res: IVisioRDFS;\r\n  private items: any[];\r\n  constructor(props: ISemTalkAboutProps) {\r\n    super(props);\r\n\r\n    let gl = (window as any).localStorage.getItem(SemTalkCookie.guilanguage);\r\n    if (!gl) gl = navigator.languages[1] || navigator.language;\r\n\r\n    this.res = new VisioRDFS(null, null);\r\n    this.res.init(null, gl);\r\n\r\n    this.init();\r\n\r\n    this.items = [{ name: \"Ctrl-1\tPointer (Stop Panning)\" },\r\n    { name: \"Ctrl-2\tHand \t(Start Panning)\" },\r\n    { name: \"Ctrl-i\tSelect Object\" },\r\n    { name: \"Ctrl-e\tProperties\" },\r\n    { name: \"Shift-click\tProperties\" },\r\n    { name: \"Ctrl-f\tFormat\" },\r\n    { name: \"Ctrl-r  Vocabulary\" },\r\n    { name: \"Ctrl-a  Select All\" },\r\n    { name: \"ArrowLeft, ArrowRight, ArrowUp, ArrowDown Move Selection;\" }];\r\n    this.state = {};\r\n  }\r\n\r\n  private async init() {\r\n  }\r\n  public render(): React.ReactElement {\r\n    let divHostStyle: any = {\r\n      padding: \"20px\"\r\n    };\r\n    const stackTokens = { childrenGap: 10 };\r\n    return (\r\n      <div>\r\n        {this.res &&\r\n          <div>\r\n            <Stack style={divHostStyle} tokens={stackTokens}>\r\n              <StackItem>\r\n                <List items={this.items}></List>\r\n              </StackItem>\r\n            </Stack>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}","/* eslint-disable react/no-direct-mutation-state */\r\nimport * as React from 'react';\r\nimport styles from './SemTalkShapeStyle.module.scss';\r\nimport {\r\n  TextField, Stack, CommandBar, Toggle, Slider,\r\n  Dropdown, IDropdownStyles, IDropdownOption,\r\n  ComboBox, IComboBoxOption,\r\n  Checkbox,\r\n  DefaultButton,\r\n  Callout,\r\n  DirectionalHint\r\n} from 'office-ui-fabric-react'; //IStackStyles\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\nimport { Guid } from \"guid-typescript\";\r\n// import * as strings from 'SemTalkStrings';\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { SwatchColorPicker } from 'office-ui-fabric-react/lib/SwatchColorPicker';\r\nimport {\r\n  ColorPicker,\r\n  IColor,\r\n  IColorPickerStyles,\r\n  getColorFromString,\r\n} from 'office-ui-fabric-react/lib/index';\r\nimport { SemTalkCookie } from '../../ISemTalkOnline';\r\n\r\n\r\nexport interface ISemTalkShapeStyleProps {\r\n  semtalk: IVisioRDFS;\r\n}\r\nexport interface ISemTalkShapeStyleState {\r\n  style: string;\r\n  shape: any;\r\n  rounded: boolean;\r\n  curved: boolean;\r\n  dashed: boolean;\r\n  dashPattern: string | undefined;\r\n  resize: boolean;\r\n  shadow: boolean;\r\n  fontColor: string | undefined;\r\n  gradientColor: string | undefined;\r\n  pickedFontColor: IColor;\r\n  pickedGradientColor: IColor;\r\n  fontSize: number;\r\n  fillColor: string | undefined;\r\n  pickedFillColor: IColor;\r\n  opacity: number;\r\n  // labelBackgroundColor: string | undefined;\r\n  // borderColor: string | undefined;\r\n  // borderWidth: number | undefined;\r\n  strokeColor: string | undefined;\r\n  pickedStrokeColor: IColor;\r\n  strokeWidth: number;\r\n  edgestyle: string | undefined;\r\n  elbow: string | undefined;\r\n  shapename: string | undefined;\r\n  isvertex: boolean;\r\n  align: string | undefined;\r\n  verticalAlign: string | undefined;\r\n  verticalLabelPosition: string | undefined;\r\n  labelPosition: string | undefined;\r\n  startArrow: string | undefined;\r\n  endArrow: string | undefined;\r\n  // filledShape: boolean | undefined;\r\n  showColorPickerFont: boolean;\r\n  showColorPickerFill: boolean;\r\n  showColorPickerGradient: boolean;\r\n  showColorPickerStroke: boolean;\r\n  colors: IComboBoxOption[];\r\n  width: number;\r\n  height: number;\r\n}\r\nexport class SemTalkShapeStyle extends React.Component<ISemTalkShapeStyleProps, ISemTalkShapeStyleState> {\r\n  // private object: any | null = null;\r\n  public callback: Guid;\r\n  private white = getColorFromString('#ffffff')!;\r\n  private black = getColorFromString('#000000')!;\r\n  private _menuButtonFont: any = React.createRef();\r\n  private _menuButtonFill: any = React.createRef();\r\n  private _menuButtonGradient: any = React.createRef();\r\n  private _menuButtonStroke: any = React.createRef();\r\n\r\n  constructor(props: ISemTalkShapeStyleProps) {\r\n    super(props);\r\n    console.debug(\"showShapeStyle\");\r\n    this.callback = Guid.create();\r\n    let fontcolors = [\r\n      { key: '', text: '' },\r\n      { key: 'white', text: this.props.semtalk.getResStr(\"STRWhite\") },\r\n      { key: 'silver', text: this.props.semtalk.getResStr(\"STRSilver\") },\r\n      { key: 'gray', text: this.props.semtalk.getResStr(\"STRGray\") },\r\n      { key: 'black', text: this.props.semtalk.getResStr(\"STRBlack\") },\r\n      { key: 'lightblue', text: this.props.semtalk.getResStr(\"STRLightblue\") },\r\n      { key: 'blue', text: this.props.semtalk.getResStr(\"STRBlue\") },\r\n      { key: 'navy', text: this.props.semtalk.getResStr(\"STRNavy\") },\r\n      { key: 'lightgreen', text: this.props.semtalk.getResStr(\"STRLightgreen\") },\r\n      { key: 'green', text: this.props.semtalk.getResStr(\"STRGreen\") },\r\n      { key: 'lightgray', text: this.props.semtalk.getResStr(\"STRLightgray\") },\r\n      { key: 'gray', text: this.props.semtalk.getResStr(\"STRGray\") },\r\n      { key: 'lightyellow', text: this.props.semtalk.getResStr(\"STRLightyellow\") },\r\n      { key: 'yellow', text: this.props.semtalk.getResStr(\"STRYellow\") },\r\n      { key: 'orange', text: this.props.semtalk.getResStr(\"STROrange\") },\r\n      { key: 'salmon', text: this.props.semtalk.getResStr(\"STRSalmon\") },\r\n      { key: 'maroon', text: this.props.semtalk.getResStr(\"STRMaroon\") },\r\n      { key: 'pink', text: this.props.semtalk.getResStr(\"STRPink\") },\r\n      { key: 'red', text: this.props.semtalk.getResStr(\"STRRed\") },\r\n      { key: 'purple', text: this.props.semtalk.getResStr(\"STRPurple\") }\r\n    ];\r\n    let shapes = this.props.semtalk.selectedShapes();\r\n    if (shapes.length > 0) {\r\n      let shp: any = shapes[0]; //this.props.shape;\r\n      let s = \"\";\r\n\r\n      let isvertex: boolean = true;\r\n      if (shp) {\r\n        s = shp.style;\r\n        isvertex = shp.isVertex();\r\n      }\r\n      let sw = SemTalkShapeStyle.getAttribute(s, \"strokeWidth\");\r\n      if (sw === undefined) sw = \"2\";\r\n\r\n      let fs = SemTalkShapeStyle.getAttribute(s, \"fontSize\");\r\n      if (fs === undefined) fs = \"11\";\r\n\r\n      let op = SemTalkShapeStyle.getAttribute(s, \"opacity\");\r\n      if (op === undefined) op = \"100\";\r\n\r\n      let width = shp.geometry.width;\r\n      let height = shp.geometry.height;\r\n\r\n      this.state = {\r\n        style: s,\r\n        shape: shp,\r\n        rounded: s.indexOf(\"rounded=1;\") > -1,\r\n        curved: s.indexOf(\"curved=1;\") > -1,\r\n        dashed: s.indexOf(\"dashed=1;\") > -1,\r\n        resize: !(s.indexOf(\"resize=0;\") > -1),\r\n        shadow: s.indexOf(\"shadow=1;\") > -1,\r\n        fontColor: SemTalkShapeStyle.getAttribute(s, \"fontColor\"),\r\n        gradientColor: SemTalkShapeStyle.getAttribute(s, \"gradientColor\"),\r\n        pickedFontColor: this.createColorObj(\"fontColor\"),\r\n        pickedGradientColor: this.createColorObj(\"gradientColor\"),\r\n        fontSize: Number(fs),\r\n        fillColor: SemTalkShapeStyle.getAttribute(s, \"fillColor\"),\r\n        pickedFillColor: this.createColorObj(\"fillColor\"),\r\n        opacity: Number(op),\r\n        // labelBackgroundColor: this.getAttribute(s, \"labelBackgroundColor\"),\r\n        // borderColor: this.getAttribute(s, \"borderColor\"),\r\n        // borderWidth: Number(this.getAttribute(s, \"borderWidth\")),\r\n        strokeColor: SemTalkShapeStyle.getAttribute(s, \"strokeColor\"),\r\n        pickedStrokeColor: this.createColorObj(\"strokeColor\"),\r\n        strokeWidth: Number(sw),\r\n        edgestyle: SemTalkShapeStyle.getAttribute(s, \"edgeStyle\"),\r\n        elbow: (s.indexOf(\"elbow=vertical;\") < 0) ? 'horizontal' : 'vertical',\r\n        shapename: SemTalkShapeStyle.getAttribute(s, \"shape\"),\r\n        isvertex: isvertex,\r\n        align: SemTalkShapeStyle.getAttribute(s, \"align\"),\r\n        verticalAlign: SemTalkShapeStyle.getAttribute(s, \"verticalAlign\"),\r\n        labelPosition: SemTalkShapeStyle.getAttribute(s, \"verticalLabelPosition\"),\r\n        verticalLabelPosition: SemTalkShapeStyle.getAttribute(s, \"verticalLabelPosition\"),\r\n        dashPattern: SemTalkShapeStyle.getAttribute(s, \"dashPattern\"),\r\n        startArrow: SemTalkShapeStyle.getAttribute(s, \"startArrow\"),\r\n        endArrow: SemTalkShapeStyle.getAttribute(s, \"endArrow\"),\r\n        // filledShape: this.getFill(s),\r\n        showColorPickerFont: false,\r\n        showColorPickerFill: false,\r\n        showColorPickerGradient: false,\r\n        showColorPickerStroke: false,\r\n        colors: fontcolors,\r\n        width: width,\r\n        height: height\r\n      };\r\n    } else {\r\n      this.state = {\r\n        style: \"\",\r\n        shape: undefined,\r\n        rounded: false,\r\n        curved: false,\r\n        dashed: false,\r\n        resize: false,\r\n        shadow: false,\r\n        fontColor: undefined,\r\n        gradientColor: undefined,\r\n        pickedFontColor: this.black,\r\n        fontSize: 11,\r\n        fillColor: undefined,\r\n        // labelBackgroundColor: this.getAttribute(s, \"labelBackgroundColor\"),\r\n        // borderColor: this.getAttribute(s, \"borderColor\"),\r\n        // borderWidth: Number(this.getAttribute(s, \"borderWidth\")),\r\n        pickedFillColor: this.white,\r\n        pickedGradientColor: this.white,\r\n        opacity: 100,\r\n        strokeColor: undefined,\r\n        pickedStrokeColor: this.black,\r\n        strokeWidth: 2,\r\n        edgestyle: undefined,\r\n        elbow: 'vertical',\r\n        shapename: undefined,\r\n        isvertex: true,\r\n        align: \"\",\r\n        verticalAlign: \"\",\r\n        labelPosition: \"\",\r\n        verticalLabelPosition: \"\",\r\n        dashPattern: undefined,\r\n        startArrow: undefined,\r\n        endArrow: undefined,\r\n        // filledShape: undefined,\r\n        showColorPickerFont: false,\r\n        showColorPickerFill: false,\r\n        showColorPickerGradient: false,\r\n        showColorPickerStroke: false,\r\n        colors: fontcolors,\r\n        width: 0,\r\n        height: 0\r\n      };\r\n    }\r\n  }\r\n  private colorCells = [\r\n    {\r\n      id: 'a', label: this.props.semtalk.getResStr(\"STRWhite\"),\r\n      color: 'white',\r\n      strokeColor: \"lightgray\",\r\n      fontColor: \"black\"\r\n    },\r\n    { id: 'b', label: this.props.semtalk.getResStr(\"STRLightblue\"), color: 'lightblue', strokeColor: \"blue\", fontColor: \"blue\" },\r\n    { id: 'c', label: this.props.semtalk.getResStr(\"STRLightgreen\"), color: 'lightgreen', strokeColor: \"green\", fontColor: \"green\" },\r\n    { id: 'd', label: this.props.semtalk.getResStr(\"STRLightgray\"), color: 'lightgray', strokeColor: \"gray\", fontColor: \"black\" },\r\n    { id: 'e', label: this.props.semtalk.getResStr(\"STRLightyellow\"), color: 'lightyellow', strokeColor: \"gray\", fontColor: \"darkgray\" },\r\n    { id: 'f', label: this.props.semtalk.getResStr(\"STRYellow\"), color: '#ffff00', strokeColor: \"#a87323\", fontColor: \"black\" },\r\n    { id: 'g', label: this.props.semtalk.getResStr(\"STRPaleOrange\"), color: '#ffe6cc', strokeColor: \"#d79b00\", fontColor: \"orange\" },\r\n    { id: 'h', label: this.props.semtalk.getResStr(\"STROrange\"), color: '#ffcd28', strokeColor: \"#d79b00\", fontColor: \"black\" },\r\n    { id: 'i', label: this.props.semtalk.getResStr(\"STRPink\"), color: '#f8cecc', strokeColor: \"red\", fontColor: \"red\" },\r\n    { id: 'j', label: this.props.semtalk.getResStr(\"STRPurple\"), color: '#e1d5e7', strokeColor: \"#9673a6\", fontColor: \"purple\" },\r\n    { id: 'k', label: this.props.semtalk.getResStr(\"STRDarkgreen\"), color: '#d5e8d4', strokeColor: \"#82b366\", fontColor: \"green\" },\r\n    { id: 'l', label: this.props.semtalk.getResStr(\"STRLightbrown\"), color: '#e8b66b', strokeColor: \"#a87323\", fontColor: \"#a87323\" },\r\n  ];\r\n  private mounted: boolean = false;\r\n\r\n  public async componentDidMount() {\r\n    // if (this.props.context && this.props.filter) {\r\n    //   SetContext(this.props.context, this.props.filter, this.props.token, this.props.service);\r\n    // }\r\n\r\n    this.mounted = true;\r\n    // this.loadObject();\r\n    addCallBack(this);\r\n  }\r\n  public componentWillUnmount() {\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n  }\r\n\r\n  private loadObject = async () => {\r\n    if (this.props.semtalk) {\r\n      let shapes = this.props.semtalk.selectedShapes();\r\n      if (shapes.length < 1) return;\r\n      let shape = shapes[0];\r\n\r\n      let s = shape.style;\r\n      let isvertex = shape.isVertex();\r\n      let bw = SemTalkShapeStyle.getAttribute(s, \"borderWidth\");\r\n      if (bw) bw = bw.replace(\"px\", \"\");\r\n\r\n      let sw = SemTalkShapeStyle.getAttribute(s, \"strokeWidth\");\r\n      if (sw === undefined) sw = \"2\";\r\n      let fs = SemTalkShapeStyle.getAttribute(s, \"fontSize\");\r\n      if (fs === undefined) fs = \"11\";\r\n      let fo = SemTalkShapeStyle.getAttribute(s, \"opacity\");\r\n      if (fo === undefined) fo = \"100\";\r\n\r\n      let al = SemTalkShapeStyle.getAttribute(s, \"align\");\r\n      if (al === undefined) al = \"\";\r\n      let val = SemTalkShapeStyle.getAttribute(s, \"verticalAlign\");\r\n      if (val === undefined) val = \"\";\r\n      let lp = SemTalkShapeStyle.getAttribute(s, \"labelPosition\");\r\n      if (lp === undefined) lp = \"\";\r\n      let vlp = SemTalkShapeStyle.getAttribute(s, \"verticalLabelPosition\");\r\n      if (vlp === undefined) vlp = \"\";\r\n\r\n      let width = shape.geometry.width;\r\n      let height = shape.geometry.height;\r\n\r\n\r\n      this.setState({\r\n        style: s,\r\n        shape: shape,\r\n        rounded: s.indexOf(\"rounded=1;\") > -1,\r\n        curved: s.indexOf(\"curved=1;\") > -1,\r\n        dashed: s.indexOf(\"dashed=1;\") > -1,\r\n        resize: !(s.indexOf(\"resize=0;\") > -1),\r\n        shadow: s.indexOf(\"shadow=1;\") > -1,\r\n        fontColor: SemTalkShapeStyle.getAttribute(s, \"fontColor\"),\r\n        pickedFontColor: this.createColorObj(\"fontColor\"),\r\n        gradientColor: SemTalkShapeStyle.getAttribute(s, \"gradientColor\"),\r\n        pickedGradientColor: this.createColorObj(\"gradientColor\"),\r\n        fontSize: Number(fs),\r\n        fillColor: SemTalkShapeStyle.getAttribute(s, \"fillColor\"),\r\n        pickedFillColor: this.createColorObj(\"fillColor\"),\r\n        opacity: Number(fo),\r\n        //  labelBackgroundColor: this.getAttribute(s, \"labelBackgroundColor\"),\r\n        // borderColor: this.getAttribute(s, \"borderColor\"),\r\n        //  borderWidth: Number(bw),\r\n        strokeColor: SemTalkShapeStyle.getAttribute(s, \"strokeColor\"),\r\n        pickedStrokeColor: this.createColorObj(\"strokeColor\"),\r\n        strokeWidth: Number(sw),\r\n        edgestyle: SemTalkShapeStyle.getAttribute(s, \"edgeStyle\"),\r\n        elbow: (s.indexOf(\"elbow=vertical;\") < 0) ? 'horizontal' : 'vertical',\r\n        shapename: SemTalkShapeStyle.getAttribute(s, \"shape\"),\r\n        isvertex: isvertex,\r\n        align: al,\r\n        verticalAlign: val,\r\n        labelPosition: lp,\r\n        verticalLabelPosition: vlp,\r\n        dashPattern: SemTalkShapeStyle.getAttribute(s, \"dashPattern\"),\r\n        startArrow: SemTalkShapeStyle.getAttribute(s, \"startArrow\"),\r\n        endArrow: SemTalkShapeStyle.getAttribute(s, \"endArrow\"),\r\n        width: width,\r\n        height: height\r\n        // filledShape: this.getFill(s)\r\n      });\r\n    } else {\r\n      this.setState({ style: \"\" });\r\n    }\r\n  }\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n  private Save = (s: string): void => {\r\n    if (s.indexOf(\"custom\") < 0) {\r\n      s += \"custom=1;\";\r\n    }\r\n    if (this.state.shape)\r\n      this.state.shape.style = s;\r\n    if (this.props.semtalk.tseditor)\r\n      this.props.semtalk.tseditor.refresh();\r\n  }\r\n  private Reset = (s: string): void => {\r\n    if (s.indexOf(\"custom\") > 0) {\r\n      s = s.replace(\"custom=1;\", \"\");\r\n    }\r\n    const sem = this.props.semtalk;\r\n    for (let shp of sem.selectedShapes()) {\r\n      shp.style = s;\r\n      if (sem.tseditor) {\r\n        sem.UpdateByID(this.state.shape.objectid);\r\n      }\r\n    }\r\n    // if (sem.tseditor) {\r\n    //     this.props.semtalk.tseditor.refresh();\r\n    // }\r\n  }\r\n  private Copy = (s: string): void => {\r\n    (window as any).localStorage.setItem(SemTalkCookie.shapestyle, s);\r\n  }\r\n  private Paste = (): void => {\r\n    let s: string = (window as any).localStorage.getItem(SemTalkCookie.shapestyle);\r\n    if (s.indexOf(\"custom\") < 0) {\r\n      s += \"custom=1;\";\r\n    }\r\n    const sem = this.props.semtalk;\r\n    for (let shp of sem.selectedShapes()) {\r\n      let shape = SemTalkShapeStyle.getAttribute(shp.style, \"shape\");\r\n      if (!shape) shape = \"\";\r\n      let s0 = SemTalkShapeStyle.setAttribute(s, \"shape\", shape);\r\n      shp.style = s0;\r\n      if (sem.tseditor) {\r\n        sem.UpdateByID(this.state.shape.objectid);\r\n      }\r\n    }\r\n    // if (sem.tseditor) {\r\n    //     this.props.semtalk.tseditor.refresh();\r\n    // }\r\n  }\r\n  private setWidth = (x: number): void => {\r\n    const sem = this.props.semtalk;\r\n    sem.tseditor.beginUpdate();\r\n    for (let shp of sem.selectedShapes()) {\r\n      let geometry = shp.getGeometry();\r\n      geometry.width = x;\r\n      shp.setGeometry(geometry);\r\n      // (sem.graph as mxGraph).updateCellSize(shp,true);\r\n    }\r\n    sem.tseditor.endUpdate();\r\n    sem.tseditor.refresh();\r\n  }\r\n  private setHeight = (x: number): void => {\r\n    const sem = this.props.semtalk;\r\n    sem.tseditor.beginUpdate();\r\n    for (let shp of sem.selectedShapes()) {\r\n      let geometry = shp.getGeometry();\r\n      geometry.height = x;\r\n      shp.setGeometry(geometry);\r\n      // (sem.graph as mxGraph).updateCellSize(shp,true);\r\n    }\r\n    sem.tseditor.endUpdate();\r\n    sem.tseditor.refresh();\r\n  }\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      // case SemTalkNavigationEvent.gotoObject:\r\n      //   if (md.objectid !== this.state.objectid) {\r\n      //     this.resetState();\r\n      //     this.loadObject(md.objectid);\r\n      //     // this.forceUpdate();\r\n      //   }\r\n      //   break;\r\n      // case SemTalkNavigationEvent.gotoNode:\r\n      //   this.loadObject();\r\n      //   // this.forceUpdate();\r\n      //   break;\r\n      case SemTalkNavigationEvent.visSelectionChanged:\r\n        this.loadObject();\r\n        // this.forceUpdate();\r\n        break;\r\n    }\r\n  }\r\n  private commands: any[] = [];\r\n  private saveItem = {\r\n    key: 'Save',\r\n    name: this.props.semtalk.getResStr(\"STRSAVE\").replace(\"&\", \"\"),\r\n    //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n    \"iconOnly\": true,\r\n    iconProps: {\r\n      iconName: 'Save'\r\n    },\r\n    onClick: () => { this.Save(this.state.style); }\r\n  };\r\n  private resetItem = {\r\n    key: 'Reset',\r\n    name: this.props.semtalk.getResStrListener(\"STRDLGLLAYRESET\"),\r\n    \"iconOnly\": true,\r\n    iconProps: {\r\n      iconName: 'Redo'\r\n    },\r\n    onClick: () => { this.Reset(this.state.style); }\r\n  };\r\n  private copyItem = {\r\n    key: 'Copy',\r\n    name: this.props.semtalk.getResStrListener(\"STRBONLBLCOP\"),\r\n    \"iconOnly\": true,\r\n    iconProps: {\r\n      iconName: 'Copy'\r\n    },\r\n    onClick: () => { this.Copy(this.state.style); }\r\n  };\r\n  private pasteItem = {\r\n    key: 'Paste',\r\n    name: this.props.semtalk.getResStr(\"STRPASTE\"),\r\n    \"iconOnly\": true,\r\n    iconProps: {\r\n      iconName: 'Paste'\r\n    },\r\n    onClick: () => { this.Paste(); }\r\n  };\r\n  // { id: 'a', label: 'red', color: '#a4262c' },\r\n  // { id: 'b', label: 'orange', color: '#ca5010' },\r\n  // { id: 'c', label: 'orangeYellow', color: '#986f0b' },\r\n\r\n\r\n\r\n  private findcolor = (id: string): any => {\r\n    return this.colorCells.find((c: any) => c[\"id\"] === id);\r\n  }\r\n  // private styles = ['shadow', 'dashed', 'dashPattern', 'fontFamily', 'fontSize', 'fontColor', 'align', 'startFill',\r\n  // 'startSize', 'endFill', 'endSize', 'strokeColor', 'strokeWidth', 'fillColor', 'gradientColor',\r\n  // 'html', 'part', 'noEdgeStyle', 'edgeStyle', 'elbow', 'childLayout', 'recursiveResize',\r\n  // 'container', 'collapsible', 'connectable'];\r\n\r\n  private static setAttribute = (s: string, aname: string, val: string): string => {\r\n    let laname = aname.toLowerCase();\r\n    let s2 = \"\";\r\n    let sl = s.split(\";\");\r\n    let fnd: boolean = false;\r\n    for (let kv of sl) {\r\n      if (kv.length > 0) {\r\n        if (kv.indexOf(\"=\") < 0) {\r\n          s2 = s2 + kv + \";\";\r\n        } else {\r\n          let p = kv.split(\"=\");\r\n          let k = p[0];\r\n          if (k.toLowerCase() === laname) {\r\n            if (val.length > 0) {\r\n              s2 = s2 + k + \"=\" + val + \";\";\r\n            }\r\n            fnd = true;\r\n          } else {\r\n            s2 = s2 + kv + \";\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (!fnd) {\r\n      s2 = s2 + aname + \"=\" + val + \";\";\r\n    }\r\n    return s2;\r\n  }\r\n  private static getAttribute = (s: string, aname: string): string | undefined => {\r\n    let laname = aname.toLowerCase();\r\n    let sl = s.split(\";\");\r\n    for (let kv of sl) {\r\n      if (kv.length > 0) {\r\n        if (kv.indexOf(\"=\") < 0) {\r\n        } else {\r\n          let p = kv.split(\"=\");\r\n          let k = p[0];\r\n          if (k.toLowerCase() === laname) {\r\n            return p[1];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n  // private getFill(s: string) {\r\n  //   let fc = this.getAttribute(s, \"fillColor\");\r\n  //   if (fc === 'none' || fc === undefined) {\r\n  //     return false;\r\n  //   } else {\r\n  //     return true;\r\n  //   }\r\n  // }\r\n  private createColorObj(color: string): IColor {\r\n    let shapes = this.props.semtalk.selectedShapes();\r\n    let shape = shapes[0];\r\n    if (shape) {\r\n      let s = shape.style;\r\n      let fc = SemTalkShapeStyle.getAttribute(s, color);\r\n      let op = SemTalkShapeStyle.getAttribute(s, \"opacity\");\r\n      if (fc !== undefined) {\r\n        let fcObj = getColorFromString(fc);\r\n        if (fcObj !== undefined) {\r\n          let a = fcObj.a;\r\n          let str = fcObj.str;\r\n          let r = fcObj.r;\r\n          let g = fcObj.g;\r\n          let b = fcObj.b;\r\n          if (a && str && op !== undefined) {\r\n            fcObj.a = Number(op);\r\n            fcObj.t = 100 - Number(op);\r\n            fcObj.str = \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + fcObj.a / 100 + \")\";\r\n          }\r\n          return fcObj;\r\n        } else { return this.white; }\r\n      } else { return this.white; }\r\n    } else { return this.white; }\r\n  }\r\n  private swatchColorPickerOnCellHovered = (id: string | undefined, _color: string | undefined) => {\r\n    if (id === undefined) return;\r\n    const c = this.findcolor(id);\r\n    if (c) {\r\n      let s = this.state.style;\r\n      s = SemTalkShapeStyle.setAttribute(s, \"fillColor\", c[\"color\"]);\r\n      s = SemTalkShapeStyle.setAttribute(s, \"strokeColor\", c[\"strokeColor\"]);\r\n      s = SemTalkShapeStyle.setAttribute(s, \"fontColor\", c[\"fontColor\"]);\r\n      if (c[\"gradientColor\"]) {\r\n        s = SemTalkShapeStyle.setAttribute(s, \"gradientColor\", c[\"gradientColor\"]);\r\n      }\r\n      // s = this.setAttribute(s, \"filledShape\", \"1\");\r\n      // s = this.setAttribute(s, \"opacity\", \"100\");\r\n\r\n      this.setState({\r\n        style: s,\r\n        fontColor: c[\"fontColor\"],\r\n        fillColor: c[\"color\"],\r\n        pickedFillColor: c[\"color\"],\r\n        // filledShape: true,\r\n        // fillAlpha: \"100\",\r\n        // borderColor: fcolor,\r\n        strokeColor: c[\"strokeColor\"]\r\n      });\r\n      this.Save(s);\r\n\r\n      let sem = this.props.semtalk;\r\n      let g = sem.graph;\r\n      const cellsSelected = g.getSelectionCells();\r\n      sem.tseditor.beginUpdate();\r\n      for (let shp of cellsSelected) {\r\n        let s0 = shp.style;\r\n        s0 = SemTalkShapeStyle.setAttribute(s0, \"fillColor\", c[\"color\"]);\r\n        s0 = SemTalkShapeStyle.setAttribute(s0, \"fontColor\", c[\"fontColor\"]);\r\n        s0 = SemTalkShapeStyle.setAttribute(s0, \"filledShape\", \"1\");\r\n        if (shp.edge && c[\"strokeColor\"] === '') {\r\n        } else {\r\n          s0 = SemTalkShapeStyle.setAttribute(s0, \"strokeColor\", c[\"strokeColor\"]);\r\n        }\r\n        if (s0.indexOf(\"custom\") < 0) {\r\n          s0 += \"custom=1;\";\r\n        }\r\n        shp.style = s0;\r\n      }\r\n      sem.tseditor.endUpdate();\r\n      sem.tseditor.refresh();\r\n    }\r\n    // setPreviewColor(color!);\r\n  }\r\n  private edgeStyleOptions = [\r\n    { key: 'elbowEdgeStyle', text: this.props.semtalk.getResStr(\"STRElbowEdgeStyle\") },\r\n    { key: 'loopRelationEdgeStyle', text: this.props.semtalk.getResStr(\"STRloopRelationEdgeStyle\") },\r\n    { key: 'none', text: this.props.semtalk.getResStr(\"STRNone\") },\r\n    { key: 'orthogonalEdgeStyle', text: this.props.semtalk.getResStr(\"STROrthogonalEdgeStyle\") },\r\n    { key: 'topToBottomEdgeStyle', text: this.props.semtalk.getResStr(\"STRTopToBottomEdgeStyle\") },\r\n    { key: 'entityRelationEdgeStyle', text: this.props.semtalk.getResStr(\"STREntityRelationEdgeStyle\") },\r\n    { key: 'isometricEdgeStyle', text: this.props.semtalk.getResStr(\"STRIsometricEdgeStyle\") },\r\n  ];\r\n  private shapeOptions = [\r\n    { key: 'none', text: this.props.semtalk.getResStr(\"STRNone\") },\r\n    { key: 'flexArrow', text: this.props.semtalk.getResStr(\"STRFlexArrow\") },\r\n    { key: 'link', text: this.props.semtalk.getResStr(\"STRLINK\") },\r\n    { key: 'arrow', text: this.props.semtalk.getResStr(\"STRArrow\") },\r\n    { key: 'ellipse', text: this.props.semtalk.getResStr(\"STREllipse\") },\r\n    { key: 'doubleEllipse', text: this.props.semtalk.getResStr(\"STRDoubleEllipse\") },\r\n    // { key: 'circle', text: 'Circle' },\r\n    // { key: 'none', text: 'none' },\r\n    // { key: 'tapeData', text: 'Tape Data' },\r\n    // { key: 'manualInput', text: 'Manual Input'},\r\n    // { key: 'loopLimit', text: 'Loop Limit'},\r\n    // { key: 'offPageConnector', text: 'Off Page Connector'},\r\n    // { key: 'delay', text: 'Delay'},\r\n    // { key: 'display', text: 'Display'},\r\n    { key: 'singleArrow', text: this.props.semtalk.getResStr(\"STRSingleArrow\") },\r\n    { key: 'doubleArrow', text: this.props.semtalk.getResStr(\"STRDoubleArrow\") },\r\n    { key: 'actor', text: this.props.semtalk.getResStr(\"STRUser\") },\r\n    // { key: 'cross', text: 'Cross'},\r\n    // { key: 'corner', text: 'Corner'},\r\n    // { key: 'tee', text: 'Tee'},\r\n    { key: 'rectangle', text: this.props.semtalk.getResStr('STRRectangle') },\r\n    { key: 'cylinder', text: this.props.semtalk.getResStr('STRCylinder') },\r\n    { key: 'datastore', text: this.props.semtalk.getResStr(\"STRDataStore\") },\r\n    { key: 'crossbar', text: this.props.semtalk.getResStr(\"STRCrossbar\") },\r\n    { key: 'rhombus', text: this.props.semtalk.getResStr(\"STRRhombus\") },\r\n    { key: 'triangle', text: this.props.semtalk.getResStr('STRTriangle') },\r\n    { key: 'cloud', text: this.props.semtalk.getResStr('STRCloud') },\r\n    { key: 'image', text: this.props.semtalk.getResStr(\"STRImage\") },\r\n    // { key: 'lineEllipse', text: 'Ellipse with horizontal divider'},\r\n    // { key: 'sortShape', text: 'Sort'},\r\n    // { key: 'collate', text: 'Collate'},\r\n    // { key: 'switch', text: 'Switch'},\r\n  ];\r\n  private endArrowOptions = [\r\n    { key: 'classic', text: this.props.semtalk.getResStr(\"STRClassic\") },\r\n    { key: 'none', text: this.props.semtalk.getResStr(\"STRNone\") },\r\n    { key: 'block', text: this.props.semtalk.getResStr(\"STRBlock\") },\r\n    { key: 'blockThin', text: this.props.semtalk.getResStr(\"STRBlockThin\") },\r\n    { key: 'open', text: this.props.semtalk.getResStr(\"STROpen\") },\r\n    { key: 'diamondThin', text: this.props.semtalk.getResStr(\"STRDiamondThin\") },\r\n  ];\r\n  private startArrowOptions = [\r\n    { key: 'classic', text: this.props.semtalk.getResStr(\"STRClassic\") },\r\n    { key: 'none', text: this.props.semtalk.getResStr(\"STRNone\") },\r\n    { key: 'block', text: this.props.semtalk.getResStr(\"STRBlock\") },\r\n    { key: 'blockThin', text: this.props.semtalk.getResStr(\"STRBlockThin\") },\r\n    { key: 'oval', text: this.props.semtalk.getResStr(\"STROval\") },\r\n    { key: 'dash', text: this.props.semtalk.getResStr(\"STRDash\") },\r\n    { key: 'circle', text: this.props.semtalk.getResStr(\"STRCircle\") },\r\n    { key: 'cross', text: this.props.semtalk.getResStr(\"STRCross\") },\r\n    { key: 'diamondThin', text: this.props.semtalk.getResStr(\"STRDiamondThin\") },\r\n  ];\r\n  private alignOptions = [\r\n    { key: '', text: this.props.semtalk.getResStr(\"STRMIDDLE\") },\r\n    { key: 'left', text: this.props.semtalk.getResStr(\"STRLEFT\") },\r\n    { key: 'right', text: this.props.semtalk.getResStr(\"STRRIGHT\") }\r\n  ];\r\n  private alignVOptions = [\r\n    { key: '', text: this.props.semtalk.getResStr(\"STRCENTER\") },\r\n    { key: 'top', text: this.props.semtalk.getResStr(\"STRTOP\") },\r\n    { key: 'bottom', text: this.props.semtalk.getResStr(\"STRBOTTOM\") }\r\n  ];\r\n  private dropdownStyles: Partial<IDropdownStyles> = { dropdown: { width: 150 } };\r\n  private dropdownStylesSm: Partial<IDropdownStyles> = { dropdown: { width: 100 } };\r\n\r\n  private dashpatterns = [\r\n    { key: '1 1', text: '1 1' },\r\n    { key: '2 2', text: '2 2' },\r\n    { key: '5 5', text: '5 5' },\r\n    { key: '1 1 1', text: '1 1 1' },\r\n    { key: '2 2 2', text: '2 2 2' },\r\n    { key: '2 1 1', text: '1 1 1' },\r\n    { key: '5 5 1 5', text: '5 5 1 5' }\r\n  ];\r\n\r\n  private onChangeEdgeStyle = (_event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n    if (item !== undefined) {\r\n      let s = SemTalkShapeStyle.setAttribute(this.state.style, \"edgeStyle\", item.key.toString());\r\n      this.Save(s);\r\n      this.setState({\r\n        edgestyle: item.key.toString(),\r\n        style: s\r\n      });\r\n    }\r\n  }\r\n  private onChangeShapeStyle = (_event: any, item: IDropdownOption | undefined): void => {\r\n    if (item !== undefined) {\r\n      let s = SemTalkShapeStyle.setAttribute(this.state.style, \"shape\", item.key.toString());\r\n      this.Save(s);\r\n      this.setState({\r\n        shapename: item.key.toString(),\r\n        style: s\r\n      });\r\n    }\r\n  }\r\n  private onChangeAlign = (_event: any, item: IDropdownOption | undefined): void => {\r\n    if (item !== undefined) {\r\n      let s = SemTalkShapeStyle.setAttribute(this.state.style, \"align\", item.key.toString());\r\n      this.Save(s);\r\n      this.setState({\r\n        style: s,\r\n        align: item.key.toString()\r\n      });\r\n    }\r\n  }\r\n  private onChangeVAlign = (_event: any, item: IDropdownOption | undefined): void => {\r\n    if (item !== undefined) {\r\n      let s = SemTalkShapeStyle.setAttribute(this.state.style, \"verticalAlign\", item.key.toString());\r\n      this.Save(s);\r\n      this.setState({\r\n        style: s,\r\n        verticalAlign: item.key.toString()\r\n      });\r\n    }\r\n  }\r\n  private onChangelabelPosition = (_event: any, item: IDropdownOption | undefined): void => {\r\n    if (item !== undefined) {\r\n      let s = SemTalkShapeStyle.setAttribute(this.state.style, \"labelPosition\", item.key.toString());\r\n      this.Save(s);\r\n      this.setState({\r\n        style: s,\r\n        labelPosition: item.key.toString()\r\n      });\r\n    }\r\n  }\r\n  private onChangelabelVPosition = (_event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n    if (item !== undefined) {\r\n      let s = SemTalkShapeStyle.setAttribute(this.state.style, \"verticalLabelPosition\", item.key.toString());\r\n      this.Save(s);\r\n      this.setState({\r\n        style: s,\r\n        verticalLabelPosition: item.key.toString()\r\n      });\r\n    }\r\n  }\r\n  private onChangeElbow = (_ev: React.FormEvent<HTMLElement> | undefined, checked: boolean | undefined): void => {\r\n    let s = SemTalkShapeStyle.setAttribute(this.state.style, \"elbow\", checked ? 'vertical' : 'horizontal');\r\n    this.Save(s);\r\n    this.setState({\r\n      elbow: checked ? 'vertical' : 'horizontal',\r\n      style: s\r\n    });\r\n  }\r\n  private onChangeStartArrow = (_event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n    if (item !== undefined) {\r\n      let s = SemTalkShapeStyle.setAttribute(this.state.style, \"startArrow\", item.key.toString());\r\n      this.Save(s);\r\n      this.setState({\r\n        startArrow: item.key.toString(),\r\n        style: s\r\n      });\r\n    }\r\n  }\r\n  private onChangeEndArrow = (_event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n    if (item !== undefined) {\r\n      let s = SemTalkShapeStyle.setAttribute(this.state.style, \"endArrow\", item.key.toString());\r\n      this.Save(s);\r\n      this.setState({\r\n        endArrow: item.key.toString(),\r\n        style: s\r\n      });\r\n    }\r\n  }\r\n  // private onChangeFilledShape = (ev: React.FormEvent<HTMLElement> | undefined, checked: boolean | undefined): void => {\r\n  //   let shapes = this.props.semtalk.selectedShapes();\r\n  //   if (shapes.length < 1) return;\r\n  //   let shape = shapes[0];\r\n  //   let s = shape.style;\r\n  //   let fillColor = this.getAttribute(s, \"fillColor\");\r\n  //   let strokeColor = this.getAttribute(s, \"strokeColor\");\r\n  //   if (checked) {\r\n  //     if ((fillColor !== undefined && strokeColor !== undefined) || (fillColor === \"none\")) {\r\n  //       let s1 = this.setAttribute(this.state.style, \"fillColor\", fillColor);\r\n  //       this.Save(s1);\r\n  //       this.setState({\r\n  //         filledShape: true,\r\n  //         fillColor: this.state.fillColor,\r\n  //         style: s1\r\n  //       });\r\n  //     }\r\n  //   } else {\r\n  //     let s1 = this.setAttribute(this.state.style, \"fillColor\", 'none');\r\n  //     s1 = this.setAttribute(s1, \"filledShape\", '0');\r\n  //     s1 = this.setAttribute(s1, \"opacity\", '100');\r\n  //     this.Save(s1);\r\n  //     this.setState({\r\n  //       filledShape: false,\r\n  //       fillColor: 'none',\r\n  //       pickedFillColor: this.white,\r\n  //       opacity: \"100\",\r\n  //       style: s1\r\n  //     });\r\n  //   }\r\n  //   let sem = this.props.semtalk;\r\n  //   let g = sem.graph;\r\n  //   const cellsSelected = g.getSelectionCells();\r\n  //   sem.tseditor.beginUpdate();\r\n  //   for (let shp of cellsSelected) {\r\n  //     let s0 = shp.style;\r\n  //     if (!this.getFill(s0)) {\r\n  //       s0 = this.setAttribute(s0, \"filledShape\", '0');\r\n  //     } else {\r\n  //       s0 = this.setAttribute(s0, \"filledShape\", '1');\r\n  //     }\r\n  //     if (s0.indexOf(\"custom\") < 0) {\r\n  //       s0 += \"custom=1;\";\r\n  //     }\r\n  //     shp.style = s0;\r\n  //   }\r\n  //   sem.tseditor.endUpdate();\r\n  //   sem.tseditor.refresh();\r\n  // }\r\n  private selectFontColor = (_ev: any) => {\r\n    this.setState({ showColorPickerFont: !this.state.showColorPickerFont });\r\n  }\r\n  private selectFillColor = (_ev: any) => {\r\n    this.setState({ showColorPickerFill: !this.state.showColorPickerFill });\r\n  }\r\n  private selectGradientColor = (_ev: any) => {\r\n    this.setState({ showColorPickerGradient: !this.state.showColorPickerGradient });\r\n  }\r\n  private selectStrokeColor = (_ev: any) => {\r\n    this.setState({ showColorPickerStroke: !this.state.showColorPickerStroke });\r\n  }\r\n  // private hideColorDialog = (ev: any) => {\r\n  //   this.setState({ showColorPicker: false });\r\n  // }\r\n\r\n\r\n  private _updateFillColor = (_ev: React.SyntheticEvent<HTMLElement>, colorObj: IColor) => {\r\n    let hexcode = '#' + colorObj.hex;\r\n    let opacity = colorObj.a;\r\n    let sem = this.props.semtalk;\r\n    let g = sem.graph;\r\n    const cellsSelected = g.getSelectionCells();\r\n    sem.tseditor.beginUpdate();\r\n    for (let shp of cellsSelected) {\r\n      let s0 = shp.style;\r\n      s0 = SemTalkShapeStyle.setAttribute(s0, \"fillColor\", hexcode);\r\n      // s0 = this.setAttribute(s0, \"filledShape\", \"1\");\r\n      if (opacity !== undefined) {\r\n        s0 = SemTalkShapeStyle.setAttribute(s0, \"opacity\", String(opacity));\r\n      }\r\n      if (s0.indexOf(\"custom\") < 0) {\r\n        s0 += \"custom=1;\";\r\n      }\r\n      shp.style = s0;\r\n    }\r\n    sem.tseditor.endUpdate();\r\n    sem.tseditor.refresh();\r\n    let s = this.state.style;\r\n    s = SemTalkShapeStyle.setAttribute(this.state.style, \"fillColor\", hexcode);\r\n    // s = this.setAttribute(s, \"filledShape\", \"1\");\r\n    s = SemTalkShapeStyle.setAttribute(s, \"opacity\", String(opacity));\r\n    this.setState({\r\n      style: s,\r\n      // filledShape: true,\r\n      fillColor: hexcode,\r\n      pickedFillColor: this.createColorObj(\"fillColor\"),\r\n      opacity: Number(opacity)\r\n    });\r\n    this.Save(s);\r\n  }\r\n  private _updateFontColor = (_ev: React.SyntheticEvent<HTMLElement>, colorObj: IColor) => {\r\n    let hexcode = '#' + colorObj.hex;\r\n    // let opacity = String(colorObj.a);\r\n    let sem = this.props.semtalk;\r\n    let g = sem.graph;\r\n    const cellsSelected = g.getSelectionCells();\r\n    sem.tseditor.beginUpdate();\r\n    for (let shp of cellsSelected) {\r\n      let s0 = shp.style;\r\n      s0 = SemTalkShapeStyle.setAttribute(s0, \"fontColor\", hexcode);\r\n      if (s0.indexOf(\"custom\") < 0) {\r\n        s0 += \"custom=1;\";\r\n      }\r\n      shp.style = s0;\r\n    }\r\n    sem.tseditor.endUpdate();\r\n    sem.tseditor.refresh();\r\n    let s = this.state.style;\r\n    s = SemTalkShapeStyle.setAttribute(this.state.style, \"fontColor\", hexcode);\r\n    this.setState({\r\n      style: s,\r\n      fontColor: hexcode,\r\n      pickedFontColor: this.createColorObj(\"fontColor\"),\r\n    });\r\n    this.Save(s);\r\n  }\r\n  private _updatGradientColor = (_ev: React.SyntheticEvent<HTMLElement>, colorObj: IColor) => {\r\n    let hexcode = '#' + colorObj.hex;\r\n    // let opacity = String(colorObj.a);\r\n    let sem = this.props.semtalk;\r\n    let g = sem.graph;\r\n    const cellsSelected = g.getSelectionCells();\r\n    sem.tseditor.beginUpdate();\r\n    for (let shp of cellsSelected) {\r\n      let s0 = shp.style;\r\n      s0 = SemTalkShapeStyle.setAttribute(s0, \"gradientColor\", hexcode);\r\n      if (s0.indexOf(\"custom\") < 0) {\r\n        s0 += \"custom=1;\";\r\n      }\r\n      shp.style = s0;\r\n    }\r\n    sem.tseditor.endUpdate();\r\n    sem.tseditor.refresh();\r\n    let s = this.state.style;\r\n    s = SemTalkShapeStyle.setAttribute(this.state.style, \"gradientColor\", hexcode);\r\n    this.setState({\r\n      style: s,\r\n      gradientColor: hexcode,\r\n      pickedGradientColor: this.createColorObj(\"gradientColor\"),\r\n    });\r\n    this.Save(s);\r\n  }\r\n  private _updateStrokeColor = (_ev: React.SyntheticEvent<HTMLElement>, colorObj: IColor) => {\r\n    let hexcode = '#' + colorObj.hex;\r\n    // let opacity = String(colorObj.a);\r\n    let sem = this.props.semtalk;\r\n    let g = sem.graph;\r\n    const cellsSelected = g.getSelectionCells();\r\n    sem.tseditor.beginUpdate();\r\n    for (let shp of cellsSelected) {\r\n      let s0 = shp.style;\r\n      s0 = SemTalkShapeStyle.setAttribute(s0, \"strokeColor\", hexcode);\r\n      if (s0.indexOf(\"custom\") < 0) {\r\n        s0 += \"custom=1;\";\r\n      }\r\n      shp.style = s0;\r\n    }\r\n    sem.tseditor.endUpdate();\r\n    sem.tseditor.refresh();\r\n    let s = this.state.style;\r\n    s = SemTalkShapeStyle.setAttribute(this.state.style, \"strokeColor\", hexcode);\r\n    this.setState({\r\n      style: s,\r\n      strokeColor: hexcode,\r\n      pickedStrokeColor: this.createColorObj(\"strokeColor\"),\r\n    });\r\n    this.Save(s);\r\n  }\r\n\r\n  private colorPickerStyles: Partial<IColorPickerStyles> = {\r\n    panel: { padding: 10 },\r\n    root: { maxWidth: 280, minWidth: 280, },\r\n    colorRectangle: { height: 268 },\r\n  };\r\n  public render(): React.ReactElement<ISemTalkShapeStyleProps> {\r\n    // let val: any[] = this.getItems();\r\n    let r: React.ReactElement<ISemTalkShapeStyleProps>;\r\n    this.commands = [];\r\n    this.commands.push(this.saveItem);\r\n    this.commands.push(this.resetItem);\r\n    this.commands.push(this.copyItem);\r\n    this.commands.push(this.pasteItem);\r\n    const stackTokens = { childrenGap: 10 };\r\n    r = <Fabric>\r\n      <div id=\"stshapestyletest\" className={styles.semTalkShapeStyle}><div className={styles.pivottab}></div></div>\r\n      <Stack tokens={stackTokens}>\r\n        <SwatchColorPicker\r\n          // eslint-disable-next-line react/jsx-no-bind\r\n          // onCellHovered={this.swatchColorPickerOnCellHovered}\r\n          // eslint-disable-next-line react/jsx-no-bind\r\n          onCellFocused={this.swatchColorPickerOnCellHovered}\r\n          columnCount={6}\r\n          cellShape={'square'}\r\n          cellHeight={35}\r\n          cellWidth={35}\r\n          cellBorderWidth={3}\r\n          colorCells={this.colorCells}\r\n        />\r\n        {!this.state.isvertex &&\r\n          <Dropdown id=\"edgeS\"\r\n            label={this.props.semtalk.getResStr(\"STREdgeStyle\")}\r\n            selectedKey={this.state.edgestyle}\r\n            // eslint-disable-next-line react/jsx-no-bind\r\n            onChange={this.onChangeEdgeStyle}\r\n            placeholder={this.props.semtalk.getResStr(\"STRSelectSth\")}\r\n            options={this.edgeStyleOptions}\r\n            styles={this.dropdownStyles}\r\n          />\r\n        }\r\n        {!this.state.isvertex &&\r\n          <Checkbox id=\"elbowv\" label={this.props.semtalk.getResStr(\"STRElbowVertical\")} checked={(this.state.elbow === 'vertical')}\r\n            onChange={this.onChangeElbow} />\r\n        }\r\n        {!this.state.isvertex &&\r\n          <Dropdown id=\"arrow1\"\r\n            label={this.props.semtalk.getResStr(\"STRStartArrow\")}\r\n            selectedKey={this.state.startArrow}\r\n            // eslint-disable-next-line react/jsx-no-bind\r\n            onChange={this.onChangeStartArrow}\r\n            placeholder={this.props.semtalk.getResStr(\"STRSelectSth\")}\r\n            options={this.startArrowOptions}\r\n            styles={this.dropdownStyles}\r\n          />\r\n        }\r\n        {!this.state.isvertex &&\r\n          <Dropdown id=\"arrow2\"\r\n            label={this.props.semtalk.getResStr(\"STREndArrow\")}\r\n            selectedKey={this.state.endArrow}\r\n            // eslint-disable-next-line react/jsx-no-bind\r\n            onChange={this.onChangeEndArrow}\r\n            placeholder={this.props.semtalk.getResStr(\"STRSelectSth\")}\r\n            options={this.endArrowOptions}\r\n            styles={this.dropdownStyles}\r\n          />\r\n        }\r\n        <Dropdown id=\"shape\"\r\n          label={this.props.semtalk.getResStr(\"STRSHAPE\")}\r\n          selectedKey={this.state.shapename}\r\n          // eslint-disable-next-line react/jsx-no-bind\r\n          onChange={this.onChangeShapeStyle}\r\n          placeholder={this.props.semtalk.getResStr(\"STRSelectSth\")}\r\n          options={this.shapeOptions}\r\n          styles={this.dropdownStyles}\r\n        />\r\n\r\n        <Stack horizontal tokens={stackTokens}>\r\n          <Toggle id=\"round\" label={this.props.semtalk.getResStr(\"STRROUNDED\")} checked={this.state.rounded}\r\n            onChange={(_ev: React.FormEvent<HTMLElement>, isChecked: boolean | undefined) => {\r\n              let s = SemTalkShapeStyle.setAttribute(this.state.style, \"rounded\", isChecked ? \"1\" : \"0\");\r\n              this.Save(s);\r\n              if (isChecked !== undefined)\r\n                this.setState({ rounded: isChecked, style: s });\r\n            }}></Toggle>\r\n          <Toggle id=\"curve\" label={this.props.semtalk.getResStr(\"STRCURVED\")} checked={this.state.curved}\r\n            onChange={(_ev: React.FormEvent<HTMLElement>, isChecked: boolean | undefined) => {\r\n              if (isChecked !== undefined) {\r\n                let s = SemTalkShapeStyle.setAttribute(this.state.style, \"curved\", isChecked ? \"1\" : \"0\");\r\n                this.Save(s);\r\n                this.setState({ curved: isChecked, style: s });\r\n              }\r\n            }}></Toggle>\r\n          <Toggle id=\"dash\" label={this.props.semtalk.getResStr(\"STRDASHED\")} checked={this.state.dashed}\r\n            onChange={(_ev: React.FormEvent<HTMLElement>, isChecked: boolean | undefined) => {\r\n              let s = SemTalkShapeStyle.setAttribute(this.state.style, \"dashed\", isChecked ? \"1\" : \"0\");\r\n              this.Save(s);\r\n              if (isChecked !== undefined)\r\n                this.setState({ dashed: isChecked, style: s });\r\n            }}></Toggle>\r\n          <Toggle id=\"resize\" label={this.props.semtalk.getResStr(\"STRRESIZE\")} checked={this.state.resize}\r\n            onChange={(_ev: React.FormEvent<HTMLElement>, isChecked: boolean | undefined) => {\r\n              let s = SemTalkShapeStyle.setAttribute(this.state.style, \"resize\", isChecked ? \"1\" : \"0\");\r\n              this.Save(s);\r\n              if (isChecked !== undefined)\r\n                this.setState({ resize: isChecked, style: s });\r\n            }}></Toggle>\r\n          <Toggle id=\"shadow\" label={this.props.semtalk.getResStr(\"STRSHADOW\")} checked={this.state.shadow}\r\n            onChange={(_ev: React.FormEvent<HTMLElement>, isChecked: boolean | undefined) => {\r\n              let s = SemTalkShapeStyle.setAttribute(this.state.style, \"shadow\", isChecked ? \"1\" : \"0\");\r\n              this.Save(s);\r\n              if (isChecked !== undefined)\r\n                this.setState({ shadow: isChecked, style: s });\r\n            }}></Toggle>\r\n        </Stack>\r\n        {this.state.dashed &&\r\n          <ComboBox id=\"dashp\"\r\n            label={this.props.semtalk.getResStr(\"STRDASHPATTERN\")}\r\n            text={this.state.dashPattern}\r\n            options={this.dashpatterns}\r\n            allowFreeform\r\n            onChange={(_ev, a, _i, v) => {\r\n              let c: string = \"\";\r\n              if (a !== undefined) {\r\n                if (a.key !== undefined) {\r\n                  c = String(a.key);\r\n                }\r\n              } else {\r\n                if (v !== undefined) {\r\n                  c = v;\r\n                }\r\n              }\r\n              let s = SemTalkShapeStyle.setAttribute(this.state.style, \"dashPattern\", c);\r\n              this.Save(s);\r\n              this.setState({\r\n                dashPattern: c,\r\n                style: s\r\n              });\r\n            }} />\r\n        }\r\n        <div id=\"fonts\">\r\n          <Slider\r\n            label={this.props.semtalk.getResStr(\"STRFONTSIZE\")}\r\n            min={6}\r\n            max={48}\r\n            value={this.state.fontSize}\r\n            showValue\r\n            // eslint-disable-next-line react/jsx-no-bind\r\n            onChange={(v: number) => {\r\n              if (v !== undefined) {\r\n                let s = SemTalkShapeStyle.setAttribute(this.state.style, \"fontSize\", v.toString());\r\n                this.Save(s);\r\n                this.setState({\r\n                  fontSize: v,\r\n                  style: s\r\n                });\r\n              }\r\n            }}\r\n          /></div>\r\n        <Stack horizontal tokens={stackTokens}>\r\n          <div>\r\n            <div ref={this._menuButtonFont} style={{ width: 100 }}>\r\n              <DefaultButton onClick={this.selectFontColor} text={this.props.semtalk.getResStr(\"STRFONTCOLOR\")} />\r\n            </div>\r\n            <Callout\r\n              gapSpace={0}\r\n              target={this._menuButtonFont.current}\r\n              onDismiss={this.selectFontColor}\r\n              setInitialFocus={true}\r\n              hidden={!this.state.showColorPickerFont}\r\n              directionalHint={DirectionalHint.leftCenter}\r\n            >\r\n              <ColorPicker\r\n                color={this.state.pickedFontColor}\r\n                showPreview={true}\r\n                onChange={this._updateFontColor}\r\n                styles={this.colorPickerStyles}\r\n              />\r\n            </Callout>\r\n          </div>\r\n          {/* <TextField id=\"fontc\" value={this.state.fontColor}\r\n            onChange={(ev, a) => {\r\n              if (a !== undefined) {\r\n                let s = this.setAttribute(this.state.style, \"fontColor\", a);\r\n                this.Save(s);\r\n                this.setState({\r\n                  fontColor: a,\r\n                  style: s\r\n                });\r\n              }\r\n            }}\r\n          /> */}\r\n          <ComboBox id=\"fontc\" text={this.state.fontColor}\r\n            options={this.state.colors}\r\n            allowFreeform\r\n            onChange={(_ev, a, _i, v) => {\r\n              let c: string = \"\";\r\n              if (a !== undefined) {\r\n                if (a.key !== undefined) {\r\n                  c = String(a.key);\r\n                }\r\n              } else {\r\n                if (v !== undefined) {\r\n                  c = v;\r\n                }\r\n              }\r\n              let s = SemTalkShapeStyle.setAttribute(this.state.style, \"fontColor\", c);\r\n              this.Save(s);\r\n              this.setState({\r\n                fontColor: c,\r\n                style: s\r\n              });\r\n            }}\r\n          />\r\n        </Stack>\r\n\r\n        {/* <Checkbox\r\n          id=\"fillColorCheckbox\" checked={this.state.filledShape} label={'Fill'}\r\n          onChange={this.onChangeFilledShape}>\r\n        </Checkbox> */}\r\n        <Stack horizontal tokens={stackTokens}>\r\n          <div>\r\n            <div ref={this._menuButtonFill} style={{ width: 100 }}>\r\n              <DefaultButton onClick={this.selectFillColor} text={this.props.semtalk.getResStr(\"STRFILLCOLOR\")} />\r\n            </div>\r\n            <Callout\r\n              gapSpace={0}\r\n              target={this._menuButtonFill.current}\r\n              onDismiss={this.selectFillColor}\r\n              setInitialFocus={true}\r\n              hidden={!this.state.showColorPickerFill}\r\n              directionalHint={DirectionalHint.leftCenter}\r\n            >\r\n              <ColorPicker\r\n                color={this.state.pickedFillColor}\r\n                alphaType={'transparency'}\r\n                showPreview={true}\r\n                onChange={this._updateFillColor}\r\n                styles={this.colorPickerStyles}\r\n              />\r\n            </Callout>\r\n          </div>\r\n          <ComboBox id=\"fillc\" text={this.state.fillColor}\r\n            options={this.state.colors}\r\n            allowFreeform\r\n            onChange={(_ev, a, _i, v) => {\r\n              let c: string = \"\";\r\n              if (a !== undefined) {\r\n                if (a.key !== undefined) {\r\n                  c = String(a.key);\r\n                }\r\n              } else {\r\n                if (v !== undefined) {\r\n                  c = v;\r\n                }\r\n              }\r\n              let s = SemTalkShapeStyle.setAttribute(this.state.style, \"fillColor\", c);\r\n              this.Save(s);\r\n              this.setState({\r\n                fillColor: c,\r\n                style: s\r\n              });\r\n            }}\r\n          />\r\n        </Stack>\r\n        <Stack horizontal tokens={stackTokens}>\r\n          <div>\r\n            <div ref={this._menuButtonGradient} style={{ width: 100 }}>\r\n              <DefaultButton onClick={this.selectGradientColor} text={this.props.semtalk.getResStr(\"STRGradient\")} />\r\n            </div>\r\n            <Callout\r\n              gapSpace={0}\r\n              target={this._menuButtonGradient.current}\r\n              onDismiss={this.selectGradientColor}\r\n              setInitialFocus={true}\r\n              hidden={!this.state.showColorPickerGradient}\r\n              directionalHint={DirectionalHint.leftCenter}\r\n            >\r\n              <ColorPicker\r\n                color={this.state.pickedGradientColor}\r\n                alphaType={'transparency'}\r\n                showPreview={true}\r\n                onChange={this._updatGradientColor}\r\n                styles={this.colorPickerStyles}\r\n              />\r\n            </Callout>\r\n          </div>\r\n          <ComboBox id=\"gradientc\" text={this.state.gradientColor}\r\n            options={this.state.colors}\r\n            allowFreeform\r\n            onChange={(_ev, a, _i, v) => {\r\n              let c: string = \"\";\r\n              if (a !== undefined) {\r\n                if (a.key !== undefined) {\r\n                  c = String(a.key);\r\n                }\r\n              } else {\r\n                if (v !== undefined) {\r\n                  c = v;\r\n                }\r\n              }\r\n              let s = SemTalkShapeStyle.setAttribute(this.state.style, \"gradientColor\", c);\r\n              this.Save(s);\r\n              this.setState({\r\n                gradientColor: c,\r\n                style: s\r\n              });\r\n            }}\r\n          />\r\n        </Stack>\r\n        <Slider\r\n          label={this.props.semtalk.getResStr(\"STROPACITY\")}\r\n          max={100}\r\n          value={this.state.opacity}\r\n          showValue\r\n          // eslint-disable-next-line react/jsx-no-bind\r\n          onChange={(v: number) => {\r\n            if (v !== undefined) {\r\n              let s = SemTalkShapeStyle.setAttribute(this.state.style, \"opacity\", v.toString());\r\n              this.Save(s);\r\n              this.setState({\r\n                opacity: v,\r\n                style: s\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        {/* <TextField label=\"borderColor\" value={this.state.borderColor}\r\n          onChange={(ev, a) => {\r\n            if (a !== undefined) {\r\n              let s = this.setAttribute(this.state.style, \"borderColor\", a);\r\n              this.Save(s);\r\n              this.setState({\r\n                borderColor: a,\r\n                style: s\r\n              });\r\n            }\r\n          }}\r\n        /> */}\r\n        {/* <Slider\r\n          label=\"borderWidth\"\r\n          max={10}\r\n          value={this.state.borderWidth}\r\n          showValue\r\n          // eslint-disable-next-line react/jsx-no-bind\r\n          onChange={(v: number) => {\r\n            if (v !== undefined) {\r\n              let s = this.setAttribute(this.state.style, \"borderWidth\", v.toString() + \"px\");\r\n              this.Save(s);\r\n              this.setState({\r\n                borderWidth: v,\r\n                style: s\r\n              });\r\n            }\r\n          }}\r\n        /> */}\r\n        <div id=\"strokew\">\r\n          <Slider\r\n            label={this.props.semtalk.getResStr(\"STRSTROKE\")}\r\n            max={10}\r\n            value={this.state.strokeWidth}\r\n            showValue\r\n            // eslint-disable-next-line react/jsx-no-bind\r\n            onChange={(v: number) => {\r\n              if (v !== undefined) {\r\n                let s = SemTalkShapeStyle.setAttribute(this.state.style, \"strokeWidth\", v.toString());\r\n                this.Save(s);\r\n                this.setState({\r\n                  strokeWidth: v,\r\n                  style: s\r\n                });\r\n              }\r\n            }}\r\n          /></div>\r\n        <Stack horizontal tokens={stackTokens}>\r\n          <div>\r\n            <div ref={this._menuButtonStroke} style={{ width: 100 }}>\r\n              <DefaultButton onClick={this.selectStrokeColor} text={this.props.semtalk.getResStr(\"STRSTROKECOLOR\")} />\r\n            </div>\r\n            <Callout\r\n              gapSpace={0}\r\n              target={this._menuButtonStroke.current}\r\n              onDismiss={this.selectStrokeColor}\r\n              setInitialFocus={true}\r\n              hidden={!this.state.showColorPickerStroke}\r\n              directionalHint={DirectionalHint.leftCenter}\r\n            >\r\n              <ColorPicker\r\n                color={this.state.pickedStrokeColor}\r\n                showPreview={true}\r\n                onChange={this._updateStrokeColor}\r\n                styles={this.colorPickerStyles}\r\n              />\r\n            </Callout>\r\n          </div>\r\n          <ComboBox id=\"strokec\" text={this.state.strokeColor}\r\n            options={this.state.colors}\r\n            allowFreeform\r\n            onChange={(_ev, a, _i, v) => {\r\n              let c: string = \"\";\r\n              if (a !== undefined) {\r\n                if (a.key !== undefined) {\r\n                  c = String(a.key);\r\n                }\r\n              } else {\r\n                if (v !== undefined) {\r\n                  c = v;\r\n                }\r\n              }\r\n              let s = SemTalkShapeStyle.setAttribute(this.state.style, \"strokeColor\", c);\r\n              this.Save(s);\r\n              this.setState({\r\n                strokeColor: c,\r\n                style: s\r\n              });\r\n            }}\r\n          />\r\n        </Stack>\r\n        {this.state.isvertex &&\r\n          <Stack horizontal tokens={stackTokens}>\r\n            <Dropdown id=\"align\"\r\n              label={this.props.semtalk.getResStr(\"STRALIGN\")}\r\n              // dropdownWidth={100}\r\n              selectedKey={this.state.align}\r\n              // eslint-disable-next-line react/jsx-no-bind\r\n              onChange={this.onChangeAlign}\r\n              placeholder=\"\"\r\n              options={this.alignOptions}\r\n              styles={this.dropdownStylesSm}\r\n            />\r\n            <Dropdown id=\"vAlign\"\r\n              label={this.props.semtalk.getResStr(\"STRVERTICAL\")}\r\n              // dropdownWidth={100}\r\n              selectedKey={this.state.verticalAlign}\r\n              // eslint-disable-next-line react/jsx-no-bind\r\n              onChange={this.onChangeVAlign}\r\n              placeholder=\"\"\r\n              options={this.alignVOptions}\r\n              styles={this.dropdownStylesSm}\r\n            />\r\n          </Stack>\r\n        }\r\n        {/* <TextField id=\"vAlign\" label=\"verticalAlign\" value={this.state.verticalAlign}\r\n            onChange={(ev, a) => {\r\n              if (a !== undefined) {\r\n                let s = this.setAttribute(this.state.style, \"verticalAlign\", a);\r\n                this.Save(s);\r\n                this.setState({\r\n                  verticalAlign: a,\r\n                  style: s\r\n                });\r\n              }\r\n            }} /> */}\r\n        {this.state.isvertex &&\r\n          <Stack horizontal tokens={stackTokens}>\r\n            <Dropdown id=\"labelPosition\"\r\n              label={this.props.semtalk.getResStr(\"STRLABEL\")}\r\n              // dropdownWidth={100}\r\n              selectedKey={this.state.labelPosition}\r\n              // eslint-disable-next-line react/jsx-no-bind\r\n              onChange={this.onChangelabelPosition}\r\n              placeholder=\"\"\r\n              options={this.alignOptions}\r\n              styles={this.dropdownStylesSm}\r\n            />\r\n            <Dropdown id=\"vLabelVPosition\"\r\n              label={this.props.semtalk.getResStr(\"STRVERTICAL\")}\r\n              // dropdownWidth={100}\r\n              selectedKey={this.state.verticalLabelPosition}\r\n              // eslint-disable-next-line react/jsx-no-bind\r\n              onChange={this.onChangelabelVPosition}\r\n              placeholder=\"\"\r\n              options={this.alignVOptions}\r\n              styles={this.dropdownStylesSm}\r\n            />\r\n\r\n            {/* <TextField id=\"vLabelPosition\" label=\"verticalLabelPosition\" value={this.state.verticalLabelPosition}\r\n              onChange={(ev, a) => {\r\n                if (a !== undefined) {\r\n                  let s = this.setAttribute(this.state.style, \"verticalLabelPosition\", a);\r\n                  this.Save(s);\r\n                  this.setState({\r\n                    verticalLabelPosition: a,\r\n                    style: s\r\n                  });\r\n                }\r\n              }} /> */}\r\n          </Stack>\r\n        }\r\n        {this.state.isvertex &&\r\n          <Stack horizontal tokens={stackTokens}>\r\n            <TextField id=\"sWidth\" type=\"number\" label={this.props.semtalk.getResStr(\"STRWidth\")} value={String(this.state.width)}\r\n              onChange={(_ev, a) => {\r\n                if (a !== undefined) {\r\n                  let n: number = Number(a);\r\n                  if (n > 0) {\r\n                    this.setWidth(n);\r\n                  }\r\n                  this.setState({\r\n                    width: n,\r\n                  });\r\n                }\r\n              }} />\r\n            <TextField id=\"sHeight\" type=\"number\" label={this.props.semtalk.getResStr(\"STRHeight\")} value={String(this.state.height)}\r\n              onChange={(_ev, a) => {\r\n                if (a !== undefined) {\r\n                  let n: number = Number(a);\r\n                  if (n > 0) {\r\n                    this.setHeight(n);\r\n                  }\r\n                  this.setState({\r\n                    height: n,\r\n                  });\r\n                }\r\n              }} />\r\n          </Stack>\r\n        }\r\n        <CommandBar id=\"stbuttons\"\r\n          items={this.commands}\r\n        ></CommandBar>\r\n        <TextField id=\"styleField\" label={this.props.semtalk.getResStr(\"STRSTYLE\")}\r\n          multiline rows={5}\r\n          value={this.state.style}\r\n          onChange={(_ev, a) => {\r\n            if (this.state.shape && a !== undefined) {\r\n              this.setState({ style: a });\r\n            }\r\n          }} />\r\n\r\n      </Stack>\r\n    </Fabric>;\r\n    return r;\r\n  }\r\n}","const Excel = require('exceljs');\r\n\r\nexport function import_excel(handler: (book: any[]) => void) {\r\n  const inp: any = document.createElement('input');\r\n  inp.setAttribute('type', `File`);\r\n  inp.setAttribute('className', `hidden`);\r\n  inp.setAttribute('multiple', false);\r\n  inp.setAttribute('accept', \".xlsx\");\r\n  inp.onchange = (e: any) => {\r\n    onOpenExcelHandler(e);\r\n  };\r\n  document.body.appendChild(inp);\r\n  inp.click();\r\n  inp.parentNode.removeChild(inp);\r\n\r\n  function onOpenExcelHandler(event: any) {\r\n    let f = event.target.files[0];\r\n    var fr = new FileReader();\r\n    fr.readAsArrayBuffer(f);\r\n    fr.onload = async (_event) => {\r\n      //Both \"event.target.result\" and \"fr.result\" contain the file's contents (because \"event.target\" is === \"fr\")\r\n      const buffer = fr.result;\r\n      const wb = new Excel.Workbook();\r\n      wb.xlsx.load(buffer).then((workbook: any) => {\r\n        const book: any = {};\r\n        workbook.eachSheet((worksheet: any) => {\r\n          const sheet: any[] = [];\r\n          worksheet.eachRow((row: any) => {\r\n            sheet.push(row.values);\r\n          });\r\n          book[worksheet.name] = sheet;\r\n        });\r\n        handler(book);\r\n      }\r\n      );\r\n    };\r\n  }\r\n}\r\n\r\n\r\nexport function excel_workbook(): any {\r\n  return new Excel.Workbook();\r\n}\r\nexport function export_worksheet(workbook: any, sheet: string, columns: any, data: any): any {\r\n\r\n  // const Excel = require('exceljs');\r\n\r\n  // need to create a workbook object. Almost everything in ExcelJS is based off of the workbook object.\r\n\r\n  let worksheet = workbook.addWorksheet(sheet);\r\n\r\n  worksheet.columns = columns;\r\n  // worksheet.columns = [\r\n  //   {header: 'First Name', key: 'firstName'},\r\n  //   {header: 'Last Name', key: 'lastName'},\r\n  //   {header: 'Purchase Price', key: 'purchasePrice'},\r\n  //   {header: 'Payments Made', key: 'paymentsMade'},\r\n  //   {header: 'Amount Remaining', key: 'amountRemaining'},\r\n  //   {header: '% Remaining', key: 'percentRemaining'}\r\n  // ]\r\n\r\n  // force the columns to be at least as long as their header row.\r\n  // Have to take this approach because ExcelJS doesn't have an autofit property.\r\n  // for (let column of worksheet.columns) {\r\n  //   column.width = column.header.length < 12 ? 12 : column.header.length\r\n  // }\r\n  worksheet.columns.forEach((column: any) => {\r\n    column.width = column.header.length < 12 ? 12 : column.header.length;\r\n  });\r\n\r\n  // Make the header bold.\r\n  // Note: in Excel the rows are 1 based, meaning the first row is 1 instead of 0.\r\n  worksheet.getRow(1).font = { bold: true };\r\n\r\n  // Dump all the data into Excel\r\n  data.forEach((e: any, index: number) => {\r\n    // row 1 is the header.\r\n    const rowIndex = index + 2;\r\n\r\n    // By using destructuring we can easily dump all of the data into the row without doing much\r\n    // We can add formulas pretty easily by providing the formula property.\r\n    worksheet.addRow({\r\n      ...e,\r\n      amountRemaining: {\r\n        formula: `=C${rowIndex}-D${rowIndex}`\r\n      },\r\n      percentRemaining: {\r\n        formula: `=E${rowIndex}/C${rowIndex}`\r\n      }\r\n    });\r\n  });\r\n\r\n  // const totalNumberOfRows = worksheet.rowCount\r\n\r\n  // // Add the total Rows\r\n  // worksheet.addRow([\r\n  //   '',\r\n  //   'Total',\r\n  //   {\r\n  //     formula: `=sum(C2:C${totalNumberOfRows})`\r\n  //   },\r\n  //   {\r\n  //     formula: `=sum(D2:D${totalNumberOfRows})`\r\n  //   },\r\n  //   {\r\n  //     formula: `=sum(E2:E${totalNumberOfRows})`\r\n  //   },\r\n  //   {\r\n  //     formula: `=E${totalNumberOfRows + 1}/C${totalNumberOfRows + 1}`\r\n  //   }\r\n  // ])\r\n\r\n  // Set the way columns C - F are formatted\r\n  // const figureColumns = [3, 4, 5, 6]\r\n  // figureColumns.forEach((i) => {\r\n  //   worksheet.getColumn(i).numFmt = '$0.00'\r\n  //   worksheet.getColumn(i).alignment = { horizontal: 'center' }\r\n  // })\r\n\r\n  // Column F needs to be formatted as a percentage.\r\n  // worksheet.getColumn(6).numFmt = '0.00%'\r\n\r\n  // loop through all of the rows and set the outline style.\r\n  // worksheet.eachRow({ includeEmpty: false }, function (row: any, rowNumber: any) {\r\n  //   worksheet.getCell(`A${rowNumber}`).border = {\r\n  //     top: { style: 'thin' },\r\n  //     left: { style: 'thin' },\r\n  //     bottom: { style: 'thin' },\r\n  //     right: { style: 'none' }\r\n  //   }\r\n\r\n  //   const insideColumns = ['B', 'C', 'D', 'E']\r\n\r\n  //   insideColumns.forEach((v) => {\r\n  //     worksheet.getCell(`${v}${rowNumber}`).border = {\r\n  //       top: { style: 'thin' },\r\n  //       bottom: { style: 'thin' },\r\n  //       left: { style: 'none' },\r\n  //       right: { style: 'none' }\r\n  //     }\r\n  //   })\r\n\r\n  //   worksheet.getCell(`F${rowNumber}`).border = {\r\n  //     top: { style: 'thin' },\r\n  //     left: { style: 'none' },\r\n  //     bottom: { style: 'thin' },\r\n  //     right: { style: 'thin' }\r\n  //   }\r\n  // })\r\n\r\n  // // The last A cell needs to have some of it's borders removed.\r\n  // worksheet.getCell(`A${worksheet.rowCount}`).border = {\r\n  //   top: { style: 'thin' },\r\n  //   left: { style: 'none' },\r\n  //   bottom: { style: 'none' },\r\n  //   right: { style: 'thin' }\r\n  // }\r\n\r\n  // const totalCell = worksheet.getCell(`B${worksheet.rowCount}`)\r\n  // totalCell.font = { bold: true }\r\n  // totalCell.alignment = { horizontal: 'center' }\r\n\r\n  // Create a freeze pane, which means we'll always see the header as we scroll around.\r\n  worksheet.views = [\r\n    { state: 'frozen', xSplit: 0, ySplit: 1, activeCell: 'B2' }\r\n  ];\r\n  return workbook;\r\n}\r\n\r\nexport function save_excel(filename: string, workbook: any) {\r\n  // Keep in mind that reading and writing is promise based.\r\n  //workbook.xlsx.writeFile('Debtors.xlsx')\r\n  workbook.xlsx.writeBuffer().then((data1: Blob) => {\r\n    const blob = new Blob([data1],\r\n      { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const anchor = document.createElement('a');\r\n    anchor.href = url;\r\n    anchor.download = filename;\r\n    anchor.click();\r\n    window.URL.revokeObjectURL(url);\r\n  });\r\n}","import * as React from 'react';\r\n// import styles from './SemTalkTable.module.scss';\r\nimport {\r\n  Selection, IColumn, DetailsList, DetailsListLayoutMode,\r\n  CheckboxVisibility, ContextualMenu, ColumnActionsMode, IContextualMenuProps,\r\n  DirectionalHint, IContextualMenuItem, ConstrainMode,\r\n  IDetailsListStyles,\r\n  IRenderFunction, TooltipHost, IDetailsHeaderProps, IDetailsColumnRenderTooltipProps,\r\n  CommandBar,\r\n  //  TextField,\r\n  Stack, StackItem, SearchBox, IStackTokens,\r\n  Text\r\n} from 'office-ui-fabric-react';\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\r\n\r\nimport { ISemTalkAssociation, ISemTalkClass, ISemTalkInstance, ISemTalkObject, ISemTalkSystemClass, SemTalkBaseConstant, SemTalkType } from \"../../application/tbase/Interface\";\r\nimport { getObject, gotoNode, gotoObject } from '../../application/semtalklistener/stglobal';\r\nimport { IVisioRDFS, SemTalkUIConstant } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { Process_ElementName } from '../../application/semtalklistener/processInterface';\r\n// import * as Excel from \"exceljs\";\r\n// import ExcelJS from \"exceljs/dist/es5/exceljs.browser\";\r\nimport { excel_workbook, export_worksheet, save_excel } from '../../excel';\r\nimport { BPMN_AssociationName } from '../../application/semtalklistener/subtask/bpmn/bpmninterface';\r\n\r\nexport interface ISemTalkTableProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n}\r\nexport interface ISemTalkTableState {\r\n  root: ISemTalkClass | null;\r\n  items: any[];\r\n  columns: IColumn[];\r\n  contextualMenuProps?: IContextualMenuProps;\r\n  search: string;\r\n  isontology: boolean;\r\n}\r\n\r\nexport class SemTalkTable extends React.Component<ISemTalkTableProps,\r\n  ISemTalkTableState> {\r\n  private _selection: Selection;\r\n  private _allItems: any[] = [];\r\n  private _colspec: any;\r\n  private _valcache: any;\r\n  private _filters: any = {};\r\n  private _rels: string[] = [];\r\n  private _classitem: any = {};\r\n  private _submenus: any[] = [];\r\n\r\n  constructor(props: ISemTalkTableProps) {\r\n    super(props);\r\n\r\n    this._selection = new Selection({\r\n      onSelectionChanged: this._onItemsSelectionChanged,\r\n    });\r\n\r\n    console.debug(\"showTable\");\r\n    const bl: string[] = [SemTalkUIConstant.SLHidden, SemTalkBaseConstant.SLLanguage,\r\n    SemTalkBaseConstant.SLComment, Process_ElementName.SLOfftime];\r\n    const base = this.props.semtalk.base;\r\n    let isontology: boolean = (this.props.semtalk.page?.ClassOf().ID2Name === SemTalkBaseConstant.SLGeneric);\r\n    // let currlangcap = this.state.language;\r\n    let classes: ISemTalkClass[] = base.AllSystemClasses();\r\n    if (isontology) {\r\n      classes = [];\r\n      for (let c of base.AllClasses()) {\r\n        if (!base.IsSystemClass(c)) {\r\n          classes.push(c);\r\n        }\r\n      }\r\n    }\r\n    let slist: ISemTalkClass[] = [];\r\n    for (let sc of classes) {\r\n      if (sc.ObjectType !== SemTalkType.SemTalkDiagramType &&\r\n        bl.indexOf(sc.ObjectName) < 0) {\r\n        let cnt = sc.AllInstances().length;\r\n        if (isontology) {\r\n          cnt = sc.AllSubClasses().length;\r\n        }\r\n        const isassoc = (sc.ObjectType === SemTalkType.SemTalkAssociationType);\r\n        if (isassoc) {\r\n          for (let rinst of sc.AllInstances()) {\r\n            let r: ISemTalkAssociation = rinst as ISemTalkAssociation;\r\n            if (base.IsSystemClass(r.FromObject) || (base.IsSystemClass(r.ToObject))) {\r\n              cnt -= 1;\r\n            }\r\n          }\r\n        } else {\r\n          if (base.IsSystemClass(sc) && !(sc as ISemTalkSystemClass).Hide) {\r\n            slist.push(sc);\r\n          }\r\n        }\r\n        if (cnt > 0) {\r\n          this._submenus.push(\r\n            {\r\n              key: sc.ObjectName,\r\n              text: sc.ObjectCaption + \" (\" + cnt + \")\",\r\n              onClick: (): void => {\r\n                this.loadObject(-1, sc);\r\n                this.setState({ root: sc });\r\n                // this.props.callback.selectDataLang(lang.ObjectName);\r\n              },\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n    let actname = base.GetModelAttribute(Process_ElementName.SLActivity);\r\n    if (actname === undefined || actname.length === 0) {\r\n      if (slist.length > 0) {\r\n        actname = slist[0].ObjectName;\r\n      } else {\r\n        isontology = true;\r\n        if (classes.length > 0) {\r\n          actname = classes[0].ObjectName;\r\n        }\r\n      }\r\n    }\r\n    this._classitem =\r\n    {\r\n      key: 'classitem',\r\n      name: actname,\r\n      split: true,\r\n      cacheKey: 'classitem', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Diamond'\r\n      },\r\n      subMenuProps: { items: this._submenus },\r\n    };\r\n    this.commands.unshift(this._classitem);\r\n\r\n    const act = base.FindClass(actname);\r\n    this.state = {\r\n      items: [],\r\n      columns: [],\r\n      root: act,\r\n      search: \"\",\r\n      isontology: isontology\r\n    };\r\n  }\r\n  public async componentDidMount() {\r\n    let oid: number = getObject();\r\n\r\n    // if (oid > 0) {\r\n    this.loadObject(oid, this.state.root);\r\n    // }\r\n  }\r\n  public componentWillUnmount() {\r\n  }\r\n\r\n  private _onItemsSelectionChanged = () => {\r\n    if (this._selection.getSelectedCount() > 0) {\r\n      let item = this._selection.getSelection()[0];\r\n      let obj = this.props.semtalk.base.FindObjectByID(item.key as number);\r\n      if (obj) {\r\n        for (let n of obj.Nodes()) {\r\n          gotoNode(n.ID, n.Model.ID, n.Diagram.ID, n.ShapeID);\r\n          return;\r\n        }\r\n        gotoObject(obj.ID);\r\n      }\r\n    }\r\n  }\r\n  private loadObject(oid: number, sysclass: ISemTalkClass | null) {\r\n    const base = this.props.semtalk.base;\r\n    let obj = base.FindObjectByID(oid);\r\n    if (obj) {\r\n      sysclass = obj.SystemClass();\r\n    }\r\n    if (sysclass) {\r\n      this._classitem[\"name\"] = sysclass.ObjectCaption;\r\n    }\r\n\r\n    let items: any[] = [];\r\n    let columns: IColumn[] = [];\r\n    if (sysclass) {\r\n      items = this.getItems(sysclass);\r\n      if (items.length > 0) {\r\n        this._colspec = items[0];\r\n        for (let k in this._colspec) {\r\n          if (k === \"text\" || (k !== \"key\" && this._valcache[k] !== undefined && Object.keys(this._valcache[k]).length > 0))\r\n            columns.push({\r\n              key: k,\r\n              name: this._colspec[k][\"label\"],\r\n              isMultiline: true,\r\n              minWidth: 100,\r\n              maxWidth: 150,\r\n              isResizable: true,\r\n              onColumnContextMenu: (column, ev) => {\r\n                if (column && ev)\r\n                  this.onColumnContextMenu(column, ev);\r\n              },\r\n              onColumnClick: (ev, column) => {\r\n                this.onColumnContextMenu(column, ev);\r\n              },\r\n              columnActionsMode: ColumnActionsMode.hasDropdown,\r\n              onRender: (item: any) => {\r\n                // let r = <TextField value={item[k]} readOnly={true}></TextField>;\r\n                let r = <Text>{this.pprint(item[k])}</Text>;\r\n                return r;\r\n              }\r\n            });\r\n        }\r\n        items = items.slice(1);\r\n        this._allItems = items;\r\n      }\r\n    }\r\n    this.setState({ columns: columns, items: items });\r\n  }\r\n\r\n  private pprint(val: any): string {\r\n    if (val === undefined)\r\n      return \"\";\r\n    if (Array.isArray(val)) {\r\n      return this.array2String(val);\r\n    } else {\r\n      return val.toString();\r\n    }\r\n  }\r\n  private array2String = (alist: string[]): string => {\r\n    // let s = \"\";\r\n    // for (const a of alist) {\r\n    //   s = s + \"; \" + a;\r\n    // }\r\n    // if (s.length > 0) s = s.substring(2);\r\n    // return s;\r\n    return alist.join(\"; \");\r\n  }\r\n  private getItems(scla: ISemTalkClass): any[] {\r\n    let items: any[] = [];\r\n    const items0: any[] = [];\r\n    const sem = this.props.semtalk;\r\n    const base = sem.base;\r\n    const slcontrol = base.FindAssociationType(base.GetModelAttribute(Process_ElementName.SLControl));\r\n    const slmf = base.FindAssociationType(base.GetModelAttribute(Process_ElementName.SLMessageFlow));\r\n    const dataobj = base.FindAssociationType(BPMN_AssociationName.dataobject);\r\n    const information = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLInformation));\r\n    const infotype = base.FindAssociationType(base.GetModelAttribute(Process_ElementName.SLInfoType));\r\n    const output = sem.getResStrListener(\"STRQMOUTPUT\");\r\n    const input = sem.getResStrListener(\"STRQMINPUT\");\r\n    const issyscla = scla.ObjectBase.IsSystemClass(scla);\r\n    const isassoc = (scla.ObjectType === SemTalkType.SemTalkAssociationType);\r\n    this._rels = [];\r\n\r\n    let fst: any = {};\r\n    if (!isassoc) {\r\n      fst[\"text\"] = { \"label\": sem.getResStr(\"STRNAME\") };\r\n    }\r\n    fst[\"comment\"] = { \"label\": sem.getResStr(\"STRCOMMENT\") };\r\n    this._rels.push(\"comment\");\r\n    if (issyscla)\r\n      if (!(scla as ISemTalkSystemClass).OnceOnly) {\r\n        fst[\"classes\"] = { \"label\": sem.getResStrListener(\"STRDLHTMLOUTCLA\") };\r\n        this._rels.push(\"classes\");\r\n      }\r\n    fst[\"attachments\"] = { \"label\": sem.getResStrListener(\"STRDLGLIN\").replace(\":\", \"\") };\r\n    this._rels.push(\"attachments\");\r\n    // resources: { \"label\": sluses?.ObjectCaption },\r\n    fst[\"diagrams\"] = { \"label\": sem.getResStrListener(\"STRDLHTMLOUTDIA\") };\r\n    this._rels.push(\"diagrams\");\r\n\r\n    this._valcache = {};\r\n    // this._valcache = { resources: {}, diagrams: {} };\r\n    if (isassoc) {\r\n      fst[\"fromobj\"] = { \"label\": \"From\" };\r\n      this._rels.push(\"fromobj\");\r\n      fst[\"toobj\"] = { \"label\": \"To\" };\r\n      this._rels.push(\"toobj\");\r\n    }\r\n    let olist: ISemTalkObject[] = scla.AllInstances();\r\n    if (this.state.isontology) {\r\n      for (let sc of scla.AllSubClasses()) {\r\n        olist.push(sc);\r\n      }\r\n\r\n    }\r\n    for (const obj of olist) {\r\n      let dial: string[] = [];\r\n      for (let nd of obj.Nodes()) {\r\n        if (dial.indexOf(nd.Diagram.ObjectCaption) < 0) {\r\n          let d = nd.Diagram;\r\n          // dial.push(d.ObjectCaption);\r\n          dial.push(...d.BreadCrumbs().map(c => c.ObjectCaption));\r\n        }\r\n      }\r\n      // let resl: string[] = [];\r\n      // if (sluses) resl = inst.LinkedObjects(sluses).map(c => c.ObjectCaption);\r\n      let item: any = {};\r\n      item[\"key\"] = obj.ID;\r\n      // un: inst.GetValue(SemTalkBaseConstant.SLUserNumber),\r\n      if (!isassoc) {\r\n        item[\"text\"] = obj.ObjectCaption;\r\n      }\r\n      if (obj.Comment.length > 0) {\r\n        item[\"comment\"] = obj.Comment;\r\n      }\r\n      let attl: string[] = [];\r\n      for (let att of obj.Attachments()) {\r\n        attl.push(att.ToObject.ObjectName);\r\n      }\r\n      item[\"attachments\"] = attl;\r\n\r\n      if (issyscla)\r\n        if (!(scla as ISemTalkSystemClass).OnceOnly) {\r\n          if (base.IsInstance(obj)) {\r\n            let ins: ISemTalkInstance= obj as ISemTalkInstance;\r\n            let clal: string[] = [ins.ClassOf().ObjectCaption];\r\n            if (!base.IsSystemClass(ins.ClassOf())) {\r\n              let classes: ISemTalkClass[] = [];\r\n              for (let c of ins.ClassOf().AllSuperClasses()) {\r\n                if (base.IsSystemClass(c)) {\r\n                  classes.push(c);\r\n                  break;\r\n                } else {\r\n                  classes.push(c);\r\n                }\r\n              }\r\n              clal.push(...classes.map(c => c.ObjectCaption));\r\n            }\r\n            item[\"classes\"] = clal;\r\n          }\r\n        }\r\n      item[\"diagrams\"] = dial;\r\n\r\n      if (isassoc) {\r\n        let rinst = obj as ISemTalkAssociation;\r\n        if (base.IsSystemClass(rinst.FromObject)) continue;\r\n        if (base.IsSystemClass(rinst.ToObject)) continue;\r\n        item[\"fromobj\"] = [rinst.FromObject.ObjectCaption];\r\n        item[\"toobj\"] = [rinst.ToObject.ObjectCaption];\r\n        // let lbl= sem.getResStrListener(\"STRIDLEFROM\");\r\n      }\r\n      for (let rel of scla.AllAssociationTypes()) {\r\n        if (slcontrol && (rel === slcontrol || rel.IsParent(slcontrol))) continue;\r\n        if (slmf && (rel === slmf)) continue;\r\n\r\n        // Associations\r\n        let rname = rel.ObjectName;\r\n        let rcap = rel.ObjectCaption;\r\n        if (rel === infotype && information) {\r\n          rcap = information.ObjectCaption;\r\n        }\r\n        let lol = obj.LinkedObjects(rel).map(c => c.ObjectCaption);\r\n        if (dataobj && infotype && rel === dataobj) {\r\n          lol = [];\r\n          rcap = output;\r\n          for (let oth of obj.LinkedObjects(rel)) {\r\n            for (let info of oth.LinkedObjects(infotype)) {\r\n              let infcap = info.ObjectCaption;\r\n              if (lol.indexOf(infcap) < 0) {\r\n                lol.push(infcap);\r\n                for (let su of (info as ISemTalkClass).AllSuperClasses()) {\r\n                  if (su.ObjectName !== information?.ObjectName) {\r\n                    let sucap = su.ObjectCaption;\r\n                    if (lol.indexOf(sucap) < 0) {\r\n                      lol.push(sucap);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            // lol.push(...dst.LinkedObjects(infotype).map(c => c.ObjectCaption));\r\n          }\r\n        }\r\n        if (lol.length > 0) {\r\n          item[rname] = lol;\r\n        }\r\n        if (fst[rname] === undefined) {\r\n          fst[rname] = { \"label\": rcap };\r\n        }\r\n        if (this._rels.indexOf(rname) < 0) {\r\n          this._rels.push(rname);\r\n        }\r\n      }\r\n      for (let rel of scla.AllInvAssociationTypes()) {\r\n        if (slcontrol && (rel === slcontrol || rel.IsParent(slcontrol))) continue;\r\n        if (slmf && (rel === slmf)) continue;\r\n        if (rel.ObjectName === SemTalkBaseConstant.SLDisplays) continue;\r\n\r\n        // InvAssociations\r\n        let irname = rel.InvName;\r\n        let ircap = rel.ObjectCaption;\r\n        let ilol = obj.InvLinkedObjects(rel).map(c => c.ObjectCaption);\r\n        if (dataobj && infotype && rel === dataobj) {\r\n          ilol = [];\r\n          ircap = input;\r\n          for (let oth of obj.InvLinkedObjects(rel)) {\r\n            for (let info of oth.LinkedObjects(infotype)) {\r\n              let infcap = info.ObjectCaption;\r\n              if (ilol.indexOf(infcap) < 0) {\r\n                ilol.push(infcap);\r\n                for (let su of (info as ISemTalkClass).AllSuperClasses()) {\r\n                  if (su.ObjectName !== information?.ObjectName) {\r\n                    let sucap = su.ObjectCaption;\r\n                    if (ilol.indexOf(sucap) < 0) {\r\n                      ilol.push(sucap);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (ilol.length > 0) {\r\n          item[irname] = ilol;\r\n        }\r\n        if (fst[irname] === undefined) {\r\n          fst[irname] = { \"label\": ircap };\r\n        }\r\n        if (this._rels.indexOf(irname) < 0)\r\n          this._rels.push(irname);\r\n      }\r\n\r\n      for (let att of obj.Attributes()) {\r\n        let aname = att.ClassOf().ObjectName;\r\n        let acap = att.ClassOf().ObjectCaption;\r\n        if (att.Value) {\r\n          item[aname] = [att.Value];\r\n          if (aname === SemTalkBaseConstant.SLUserNumber) {\r\n            let v: string = att.Value;\r\n            while (v.indexOf(\".\") > -1) {\r\n              v = v.substring(0, v.lastIndexOf(\".\"));\r\n              item[aname].push(v);\r\n            }\r\n          }\r\n          if (fst[aname] === undefined) {\r\n            fst[aname] = { \"label\": acap };\r\n          }\r\n          if (this._rels.indexOf(aname) < 0)\r\n            this._rels.push(aname);\r\n        }\r\n      }\r\n      items0.push(item);\r\n    }\r\n    this.getValues(items0.slice(0), this._rels);\r\n    items.push(fst);\r\n    items.push(...items0);\r\n    // console.debug(valcache);\r\n    return items;\r\n  }\r\n  private getValues(items: any[], rels: string[]): void {\r\n    for (let rel of rels)\r\n      this._valcache[rel] = {};\r\n\r\n    for (const item of items) {\r\n      for (let rel of rels)\r\n        if (item[rel]) {\r\n          for (let r of item[rel]) {\r\n            if (this._valcache[rel][r] === undefined) {\r\n              this._valcache[rel][r] = 1;\r\n            } else {\r\n              // this._valcache[rel][r] = Number(this._valcache[rel][r]) + 1;\r\n              this._valcache[rel][r] += 1;\r\n            }\r\n          }\r\n        }\r\n    }\r\n  }\r\n\r\n  private onContextualMenuDismissed = (): void => {\r\n    this.setState({\r\n      contextualMenuProps: undefined,\r\n    });\r\n  }\r\n\r\n  private onColumnContextMenu = (column: IColumn, ev: React.MouseEvent<HTMLElement>): void => {\r\n    if (column.columnActionsMode !== ColumnActionsMode.disabled) {\r\n      this.setState({\r\n        contextualMenuProps: this.getContextualMenuProps(ev, column),\r\n      });\r\n    }\r\n  }\r\n  private getContextualMenuProps = (ev: React.MouseEvent<HTMLElement>, column: IColumn): IContextualMenuProps => {\r\n    let menuitems: IContextualMenuItem[] = [];\r\n    if (column.key === \"text\") {\r\n      menuitems = [\r\n        {\r\n          key: 'aToZ',\r\n          name: 'A to Z',\r\n          iconProps: { iconName: 'SortUp' },\r\n          canCheck: true,\r\n          checked: column.isSorted && !column.isSortedDescending,\r\n          onClick: () => this._onSortColumn(column.key, false),\r\n        },\r\n        {\r\n          key: 'zToA',\r\n          name: 'Z to A',\r\n          iconProps: { iconName: 'SortDown' },\r\n          canCheck: true,\r\n          checked: column.isSorted && column.isSortedDescending,\r\n          onClick: () => this._onSortColumn(column.key, true),\r\n        }\r\n      ];\r\n    } else {\r\n      for (let val in this._valcache[column.key]) {\r\n        let valc = this._valcache[column.key][val];\r\n        menuitems.push({\r\n          key: val,\r\n          name: val + \" (\" + valc + \")\",\r\n          canCheck: true,\r\n          checked: this._filters[column.key] && this._filters[column.key].indexOf(val) > -1,\r\n          onClick: () => this._onFilterColumn(column.key, val),\r\n        });\r\n      }\r\n    }\r\n\r\n    return {\r\n      items: menuitems,\r\n      target: ev.currentTarget as HTMLElement,\r\n      directionalHint: DirectionalHint.bottomLeftEdge,\r\n      gapSpace: 10,\r\n      isBeakVisible: true,\r\n      onDismiss: this.onContextualMenuDismissed,\r\n    };\r\n  }\r\n  private _onSortColumn = (columnKey: string, isSortedDescending: boolean): void => {\r\n    let sortedItems = _copyAndSort(this.state.items, columnKey, isSortedDescending);\r\n    this.setState({\r\n      items: sortedItems,\r\n    });\r\n  }\r\n\r\n  private _onFilterColumn = (columnKey: string, val: string): void => {\r\n    if (this._filters !== null) {\r\n      if (this._filters[columnKey] === undefined) {\r\n        this._filters[columnKey] = [val];\r\n      } else {\r\n        let filtervalues: string[] = this._filters[columnKey];\r\n        if (filtervalues.indexOf(val) > -1) {\r\n          this._filters[columnKey] = filtervalues.filter(v => v !== val);\r\n        } else {\r\n          filtervalues.push(val);\r\n          this._filters[columnKey] = filtervalues;\r\n        }\r\n      }\r\n    }\r\n    this.applyFilters(this.state.search);\r\n  }\r\n  private applyFilters(search: string) {\r\n    let issearch = search.length > 1;\r\n    let filteredItems = this._allItems;\r\n    filteredItems = this._allItems.slice(0).filter((item => {\r\n      if (issearch) {\r\n        let fnd = false;\r\n        for (let col in item) {\r\n          let val = item[col];\r\n          if (val === undefined)\r\n            val = \"\";\r\n          if (Array.isArray(val)) {\r\n            val = val.join(\";\");\r\n          } else {\r\n            val = val.toString();\r\n          }\r\n          if (val) {\r\n            const s: string = val.toString();\r\n            if (s.indexOf(search) > -1) {\r\n              fnd = true;\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        if (!fnd) return false;\r\n      }\r\n      for (let filter in this._filters) {\r\n        let filtervalues = this._filters[filter];\r\n        if (filtervalues === undefined) {\r\n          filtervalues = [];\r\n        }\r\n        if (filtervalues.length > 0) {\r\n          if (item[filter] === undefined) return false;\r\n          let rl: string[] = item[filter];\r\n          let fnd = rl.filter(v => filtervalues.indexOf(v) > -1).length > 0;\r\n          if (!fnd) return false;\r\n        }\r\n      }\r\n      return true;\r\n    }));\r\n    this.getValues(filteredItems, this._rels);\r\n    // filteredItems = _copyAndSort(filteredItems, columnKey, isSortedDescending);\r\n    this.setState({\r\n      items: filteredItems,\r\n    });\r\n  }\r\n  private gridStyles: Partial<IDetailsListStyles> = {\r\n    root: {\r\n      // overflowX: 'scroll',\r\n      selectors: {\r\n        '& [role=grid]': {\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'start',\r\n          // height: '100vh',\r\n        },\r\n      },\r\n    },\r\n    headerWrapper: {\r\n      flex: '0 0 auto',\r\n    },\r\n    contentWrapper: {\r\n      flex: '1 1 auto',\r\n      overflowY: 'auto',\r\n      overflowX: 'hidden',\r\n    },\r\n  };\r\n  // private classNames = mergeStyleSets({\r\n  //   header: {\r\n  //     margin: 0,\r\n  //   },\r\n  //   row: {\r\n  //     flex: '0 0 auto',\r\n  //   },\r\n  // });\r\n\r\n  private onRenderDetailsHeader: IRenderFunction<IDetailsHeaderProps> = (props, defaultRender) => {\r\n    if (!props) {\r\n      return null;\r\n    }\r\n    const onRenderColumnHeaderTooltip: IRenderFunction<IDetailsColumnRenderTooltipProps> = tooltipHostProps => (\r\n      <TooltipHost {...tooltipHostProps} />\r\n    );\r\n    return defaultRender!({\r\n      ...props,\r\n      onRenderColumnHeaderTooltip,\r\n    });\r\n  }\r\n  private commands = [\r\n    {\r\n      key: 'excel',\r\n      name: \"Excel\", //this.props.semtalk.getResStrListener(\"STRDLGEXPORT\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'ExcelLogo'\r\n      },\r\n      onClick: (): void => {\r\n        this.xlsxExport();\r\n      }\r\n    }];\r\n  private xlsxExport = () => {\r\n    let data = [{\r\n      // firstName: 'John',\r\n      // lastName: 'Bailey',\r\n      // purchasePrice: 1000,\r\n      // paymentsMade: 100\r\n    }];\r\n    for (let item of this.state.items) {\r\n      let row: any = {};\r\n      for (let col in item) {\r\n        let val = item[col];\r\n        if (val === undefined)\r\n          val = \"\";\r\n        if (Array.isArray(val)) {\r\n          val = val[0];\r\n        } else {\r\n          val = val.toString();\r\n        }\r\n        row[col] = val;\r\n      }\r\n      data.push(row);\r\n    }\r\n    let columns: any[] = [\r\n    ];\r\n    for (let col of this.state.columns) {\r\n      columns.push({ header: col.name, key: col.key });\r\n    }\r\n    if (this.state.root) {\r\n      let wb = excel_workbook();\r\n      wb = export_worksheet(wb, this.state.root.ObjectName, columns, data);\r\n      save_excel(this.state.root.ObjectName + \".xlsx\", wb);\r\n      console.debug(wb);\r\n    }\r\n  }\r\n\r\n  // private _toggleSearchPage = () => {\r\n  //   const sp = this.state.searchpage;\r\n  //   this.setState({ searchpage: !sp });\r\n  // }\r\n  private _clear = (): any => {\r\n    this.applyFilters(\"\");\r\n    this.setState({ search: \"\" });\r\n  }\r\n  private _dosearch = (newvalue: any): any => {\r\n    this.applyFilters(newvalue);\r\n    this.setState({ search: newvalue });\r\n  }\r\n  private _dosearch10 = (_evt: any, newvalue: any): any => {\r\n    this.applyFilters(newvalue);\r\n  }\r\n\r\n  public render(): React.ReactElement<ISemTalkTableProps> {\r\n    const containerStackTokens: IStackTokens = { childrenGap: 5 };\r\n    let r: React.ReactElement<ISemTalkTableProps>;\r\n    r = <Fabric>\r\n      <div id=\"stTableTest\">\r\n        {/* <h1 className={this.classNames.header}>Item list</h1> */}\r\n        <CommandBar id=\"stButtons\"\r\n          items={this.commands}\r\n        ></CommandBar>\r\n        <Stack horizontal tokens={containerStackTokens} verticalAlign={'center'}>\r\n          <StackItem grow={3}>\r\n            <SearchBox id='stSearch' onSearch={this._dosearch} onChange={this._dosearch10} onClear={this._clear}></SearchBox>\r\n          </StackItem>\r\n          {/* <StackItem grow={1}>\r\n                <Checkbox label=\"Search Page\" checked={this.state.searchpage} onChange={this._toggleSearchPage} />\r\n              </StackItem> */}\r\n        </Stack>\r\n        <div id=\"stTable\">\r\n          <DetailsList\r\n            items={this.state.items}\r\n            compact={true}\r\n            columns={this.state.columns}\r\n            selectionMode={SelectionMode.single}\r\n            // layoutMode={DetailsListLayoutMode.justified}\r\n            selection={this._selection}\r\n            checkboxVisibility={CheckboxVisibility.hidden}\r\n            isHeaderVisible={true}\r\n            constrainMode={ConstrainMode.unconstrained}\r\n            setKey=\"set\"\r\n            layoutMode={DetailsListLayoutMode.fixedColumns}\r\n            onRenderDetailsHeader={this.onRenderDetailsHeader}\r\n            // onRenderDetailsFooter={this.onRenderDetailsFooter}\r\n            selectionPreservedOnEmptyClick\r\n            styles={this.gridStyles}\r\n            ariaLabelForSelectionColumn=\"Toggle selection\"\r\n            ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n\r\n          /></div>\r\n      </div>\r\n      {this.state.contextualMenuProps &&\r\n        <ContextualMenu {...this.state.contextualMenuProps} />}\r\n    </Fabric>;\r\n    return r;\r\n  }\r\n}\r\n\r\nfunction _copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\r\n  const key = columnKey as keyof T;\r\n  return items.slice(0).sort((a: T, b: T) => ((isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1));\r\n}","import * as React from 'react';\n// import styles from './SemTalkFacetSearch.module.scss';\n\nimport {\n  // SearchBox,\n  CheckboxVisibility, Label, DetailsList, IColumn,\n  DetailsListLayoutMode,\n  Selection, ISelection,\n  // StackItem,\n  // Stack,\n  // IStackTokens,\n  // TooltipHost, ITooltipHostStyles, DefaultButton,\n  ContextualMenu,\n  ColumnActionsMode,\n  IContextualMenuProps,\n  DirectionalHint,\n  IContextualMenuItem,\n  //  ConstrainMode,\n} from 'office-ui-fabric-react';\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\n\n\nexport interface ISemTalkFacetProps {\n  title?: string;\n  search: string;\n  dim: string;\n  callback: any;\n  facets: any;\n  selected: any;\n}\n\nexport interface ISemTalkFacetSearchState {\n  // selected: string[],\n  rows: any[];\n  hidden: boolean;\n  contextualMenuProps?: IContextualMenuProps;\n}\nexport class SemTalkFacet extends React.Component<ISemTalkFacetProps, ISemTalkFacetSearchState> {\n  private _sel: ISelection = new Selection({\n    onSelectionChanged: () => { this.selectitem(); }\n  });\n  // private _selection: any = null;\n\n  constructor(props: ISemTalkFacetProps) {\n    super(props);\n    console.log(\"showFacet\");\n    this.state = {\n      hidden: true,\n      rows: this.props.facets\n    };\n  }\n  public async componentDidMount() {\n\n    //   let facets= this.props.callback.all[this.props.dim];\n    //   let rows = facets.map((facet: any) => {\n    //   return {\n    //     \"value\": facet.value,\n    //     \"count\": facet.count,\n    //   };\n    // });\n  }\n\n  private selectitem = (): void => {\n    let sel = this._sel.getSelection();\n    if (sel.length > 0) {\n      let items: any[] = this._sel.getSelection();\n      if (items !== null) {\n        let values = items.map(x => x.value);\n        // this._selection = item.Object;\n        this.props.callback.setSelected(this.props.dim, values);\n      }\n    }\n  }\n\n  private toggle_hidden = () => {\n    for (let row of this.state.rows) {\n      this._sel.setKeySelected(row.value, this.isFacetSelected(row.value), false);\n    }\n    this.setState({ \"hidden\": !this.state.hidden });\n  }\n  private _facetcolumns: IColumn[] = [\n    {\n      key: 'value',\n      name: \"Wert\",\n      fieldName: 'value',\n      minWidth: 80,\n      isResizable: true,\n      isSorted: false,\n      isSortedDescending: false,\n      onColumnContextMenu: (column, ev) => {\n        if (column && ev)\n          this.onColumnContextMenu(column, ev);\n      },\n      onColumnClick: (ev, column) => {\n        this.onColumnContextMenu(column, ev);\n      },\n      columnActionsMode: ColumnActionsMode.hasDropdown,\n      onRender: item => (\n        <span>{item.value}</span>\n      )\n    },\n    {\n      key: 'count',\n      name: \"#\",\n      fieldName: 'count',\n      // isGrouped: true,\n      // isSorted: true,\n      minWidth: 30,\n      maxWidth: 60,\n      isSorted: true,\n      isSortedDescending: true,\n      onColumnContextMenu: (column, ev) => {\n        if (column && ev)\n          this.onColumnContextMenu(column, ev);\n      },\n      onColumnClick: (ev, column) => {\n        this.onColumnContextMenu(column, ev);\n      },\n      columnActionsMode: ColumnActionsMode.hasDropdown, isResizable: true,\n      onRender: item => (\n        <span>{item.count}</span>\n      )\n    }];\n\n  public render(): React.ReactElement<ISemTalkFacetProps> {\n\n    // const containerStackTokens: IStackTokens = { childrenGap: 5 };\n\n    // }\n    let dimname = this.props.dim;\n    switch (this.props.dim) {\n      case \"doctype\": { dimname = \"Typ\"; break; }\n      case \"ext\": { dimname = \"Endung\"; break; }\n      case \"district\": { dimname = \"Bezirk\"; break; }\n    }\n    for (let row of this.state.rows) {\n      this._sel.setKeySelected(row.value, this.isFacetSelected(row.value), false);\n    }\n    return (\n      <Fabric>\n        <div className=\"list-facet\">\n          {this.state.rows.length > 0 &&\n            <div>\n              <Label onClick={() => this.toggle_hidden()}><i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i><b>{dimname}</b></Label>\n              {!this.state.hidden &&\n                <DetailsList items={this.state.rows}\n                  compact={true}\n                  isHeaderVisible={true}\n                  selectionMode={SelectionMode.multiple}\n                  layoutMode={DetailsListLayoutMode.justified}\n                  columns={this._facetcolumns}\n                  selection={this._sel}\n                  selectionPreservedOnEmptyClick={true}\n                  checkboxVisibility={CheckboxVisibility.always}\n                // onItemInvoked={this.selectitem}\n                >\n                </DetailsList>\n              }\n            </div>\n          }\n        </div>\n        {this.state.contextualMenuProps &&\n          <ContextualMenu {...this.state.contextualMenuProps} />\n        }\n      </Fabric >\n    );\n  }\n\n  // private selectitem = (): void => {\n  //   let sel = this._sel.getSelection();\n  //   if (sel.length > 0) {\n  //     let item = this._sel.getSelection()[0];\n  //     if (item !== null) {\n  //       this._selection = item;\n  //     }\n  //   }\n  // }\n\n  // private facetClicked = (facet: any) => {\n  //   var selectedFacetList = this.props.callback.getSelected(this.props.dim);\n  //   if (!selectedFacetList) return;\n\n  //   var facetIndex = selectedFacetList.indexOf(facet.value);\n  //   // add facet\n  //   if (facetIndex === -1) {\n  //     this.addFacet(facet.value);\n  //   } else { // remove facet\n  //     this.removeFacet(facet.value);\n  //   }\n  // }\n\n  // private addFacet = (value: string) => {\n  //   var selected = this.props.callback.getSelected(this.props.dim);\n  //   selected.push(value);\n  //   this.props.callback.setSelected(this.props.dim, selected);\n  //   // this.setState({ \"selected\": selected });\n  // }\n  // private removeFacet = (value: string) => {\n  //   var selected = this.props.callback.getSelected(this.props.dim);\n  //   var facetIndex = selected.indexOf(value);\n  //   selected.splice(facetIndex, 1);\n  //   // this.setState({ \"selected\": selected });\n  // }\n\n  private isFacetSelected = (value: string): boolean => {\n    // var selectedFacetList = this.props.callback.getSelected(this.props.dim);\n    // if (!selectedFacetList) return false;\n    // return selectedFacetList.indexOf(value) !== -1;\n    if (!this.props.selected) return false;\n    if (!this.props.selected[this.props.dim]) return false;\n    return this.props.selected[this.props.dim].indexOf(value) !== -1;\n  }\n\n  private onContextualMenuDismissed = (): void => {\n    this.setState({\n      contextualMenuProps: undefined,\n    });\n  }\n\n  private onColumnContextMenu = (column: IColumn, ev: React.MouseEvent<HTMLElement>): void => {\n    if (column.columnActionsMode !== ColumnActionsMode.disabled) {\n      this.setState({\n        contextualMenuProps: this.getContextualMenuProps(ev, column),\n      });\n    }\n  }\n  private getContextualMenuProps = (ev: React.MouseEvent<HTMLElement>, column: IColumn): IContextualMenuProps => {\n    let menuitems: IContextualMenuItem[] = [];\n    if (column.key === \"value\") {\n      menuitems = [\n        {\n          key: 'aToZ',\n          name: 'A to Z',\n          iconProps: { iconName: 'SortUp' },\n          canCheck: true,\n          checked: column.isSorted && !column.isSortedDescending,\n          onClick: () => {\n            // this._onSortColumn(column.key, false);\n          }\n        },\n        {\n          key: 'zToA',\n          name: 'Z to A',\n          iconProps: { iconName: 'SortDown' },\n          canCheck: true,\n          checked: column.isSorted && column.isSortedDescending,\n          onClick: () => {\n            // this._onSortColumn(column.key, true);\n          },\n        }\n      ];\n    }\n    if (column.key === \"count\") {\n      menuitems = [\n        {\n          key: '0To9',\n          name: '0 to 9',\n          iconProps: { iconName: 'SortUp' },\n          canCheck: true,\n          checked: column.isSorted && !column.isSortedDescending,\n          onClick: () => {\n            // this._onSortColumn(column.key, false);\n          }\n        },\n        {\n          key: '9To0',\n          name: '9 to 0',\n          iconProps: { iconName: 'SortDown' },\n          canCheck: true,\n          checked: column.isSorted && column.isSortedDescending,\n          onClick: () => {\n            // this._onSortColumn(column.key, true);\n          },\n        }\n      ];\n    }\n\n    return {\n      items: menuitems,\n      target: ev.currentTarget as HTMLElement,\n      directionalHint: DirectionalHint.bottomLeftEdge,\n      gapSpace: 10,\n      isBeakVisible: true,\n      onDismiss: this.onContextualMenuDismissed,\n    };\n  }\n  // private _onSortColumn = (_columnKey: string, _isSortedDescending: boolean): void => {\n  // let sortedItems = _copyAndSort(this.state.items, columnKey, isSortedDescending);\n  // this.setState({\n  //   items: sortedItems,\n  // });\n  // }\n}\n","import * as React from 'react';\n// import styles from './SemTalkFacetSearch.module.scss';\nimport {\n  Checkbox,\n  Dropdown, IDropdownOption, Image, Link\n} from 'office-ui-fabric-react';\nimport {\n  SearchBox, CheckboxVisibility, Label, DetailsList, IColumn,\n  DetailsListLayoutMode, Selection, ISelection, StackItem, Stack, IStackTokens,\n  TooltipHost, ITooltipHostStyles, DefaultButton,\n  ContextualMenu,\n  ColumnActionsMode,\n  IContextualMenuProps,\n  DirectionalHint,\n  IContextualMenuItem, Text\n  //  ConstrainMode,\n} from 'office-ui-fabric-react';\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport axios from 'axios';\n// import { Guid } from \"guid-typescript\";\n// import * as strings from 'SemTalkStrings';\n// import axios from 'axios';\nimport { SemTalkFacet } from './SemTalkFacet';\n// import NYCMap from \"./NYCMap\";\n// import mapboxgl from \"mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\n// import mapboxgl from 'mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n// import MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n// import '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\n\nlet API_ENDPOINT = 'http://localhost:5000';\n// let API_ENDPOINT = 'https://sempython0.azurewebsites.net/';\n\n// let dimlist = [\"doctype\", \"ext\", \"Außenanlagen\", \"Baumaßnahme\", \"Bepflanzungen\", \"Brandschutz\",\n//   \"Dach\", \"Diverse\", \"Eingangsbereich\", \"Farbe\", \"Fassade\", \"Gebäude\", \"Gebäudenutzung\",\n//   \"Haustechnik\", \"Maßnahme\", \"Nutzungsänderung\", \"Werbeanlage\", \"path\", \"hidas\",\n//   \"vorhaben\",\n//   \"district\", \"Sachbegriff\", \"Denkmalart\", \"Denkmalname\"\n// ];\nlet dimlist = [\"doctype\", \"ext\", \"Außenanlagen\", \"Baumaßnahme\", \"Bepflanzungen\", \"Brandschutz\",\n  \"Dach\", \"Diverse\", \"Eingangsbereich\", \"Farbe\", \"Fassade\", \"Gebäude\", \"Gebäudenutzung\",\n  \"Haustechnik\", \"Maßnahme\", \"Nutzungsänderung\", \"Werbeanlage\",\n  \"district\", \"Sachbegriff\", \"Denkmalart\"\n];\n// let sdimlist = [\"path\", \"hidas\", \"vorhaben\", \"Denkmalname\"];\n\nlet filtertypes: IDropdownOption[] = [\n  { key: \"text\", text: 'Text' },\n  { key: \"adresse\", text: 'Adresse' },\n  { key: \"path\", text: 'Pfad' },\n  { key: \"hidas\", text: 'HIDA' },\n  { key: \"vorhaben\", text: 'Vorhaben' },\n  { key: \"Denkmalname\", text: 'Denkmalname' },\n  // { key: \"karte\", text: 'Karte' },\n];\nlet dimobj = {};\nfor (var i in dimlist) {\n  dimobj[dimlist[i]] = [];\n}\n// var allobj = JSON.parse(JSON.stringify(dimobj));\n// allobj.resolved = [];\n\nfunction array2string(a: string[]) {\n  if (a) {\n    return a.toString().replace(/,/g, \", \");\n  } else {\n    return \"\";\n  }\n}\nfunction dict2string(a: string, m: number) {\n  if (a) {\n    var s = \"\";\n    s = Object.values(a).join(\" \");\n    if (m > 0) {\n      if (s.length > m) {\n        s = s.substring(0, m - 1) + \" ...\";\n      }\n    }\n    return s;\n  } else {\n    return \"\";\n  }\n}\nfunction text2speech(txt: string) {\n  var msg = new SpeechSynthesisUtterance();\n  // var voices = window.speechSynthesis.getVoices();\n  // msg.voice = voices[0];\n  msg.volume = 1; // From 0 to 1\n  //  msg.rate = 1; // From 0.1 to 10\n  //  msg.pitch = 2; // From 0 to 2\n  msg.text = txt;\n  msg.lang = 'de';\n  speechSynthesis.speak(msg);\n}\nfunction renderFolder(s: string) {\n  if (s) {\n    var li = s.lastIndexOf(\"\\\\\");\n    if (li > 0)\n      s = s.substring(li + 1);\n    return s;\n  } else return \"\";\n}\nfunction getOrderedFacets(selectedValues: string[], facets: any[]) {\n  if (facets === undefined) {\n    console.debug(\"no facets..\");\n    facets = [];\n  }\n  return selectedValues\n    .map((value: string) => { // get selected facets (and add count if exists)\n      let facet = facets.find((facet1: any) => {\n        return facet1.value === value;\n      });\n      return {\n        value: value,\n        count: (facet && facet.count) || 'x',\n      };\n    })\n    .concat( // then add unselect facets (excluding the ones that are selected)\n      facets.filter((facet: any) => {\n        return selectedValues.indexOf(facet.value) === -1;\n      })\n    );\n}\n\nconst calloutProps = { gapSpace: 0 };\n// The TooltipHost root uses display: inline by default.\n// If that's causing sizing issues or tooltip positioning issues, try overriding to inline-block.\nconst hostStyles: Partial<ITooltipHostStyles> = { root: { display: 'inline-block' } };\n\n\n\n\n\nexport interface ISemTalkFacetSearchProps {\n  title?: string;\n}\n\nexport interface ISemTalkFacetSearchState {\n  search: string;\n  page: number;\n  pageSize: number;\n  pdfurl: string;\n  selected: any;\n  foundfacets: any;\n  resolved: [];\n  resolvedCount: number;\n  // hidden_dimensions: any;\n  contextualMenuProps?: IContextualMenuProps;\n  filterKey: string;\n  lng: number;\n  lat: number;\n  zoom: number;\n}\n// mapboxgl.accessToken =\n//   \"pk.eyJ1IjoiY2ZpbGxpZXMiLCJhIjoiY2wxNmMyd2cwMTU4ajNibXQ2Y3RudWc2ZSJ9.tV1T0KncdF_VYma2WgsTXg\";\n\nexport class SemTalkFacetSearch extends React.Component<ISemTalkFacetSearchProps, ISemTalkFacetSearchState> {\n  private _sel: ISelection = new Selection({\n    onSelectionChanged: () => { this.selectitem(); }\n  });\n  private _selection: any = null;\n  // private _hidden_dimensions = {};\n  private mapContainer: any;\n  // private geocoder: MapboxGeocoder;\n\n  constructor(props: ISemTalkFacetSearchProps) {\n    super(props);\n    console.log(\"showFacetSearch\");\n    this.state = {\n      search: '',\n      page: 1,\n      pageSize: 30,\n      pdfurl: 'https://semtalk.sharepoint.com/sites/KSAG/Freigegebene%20Dokumente/General/pdf/',\n      selected: JSON.parse(JSON.stringify(dimobj)),\n      foundfacets: JSON.parse(JSON.stringify(dimobj)),\n      resolved: [],\n      resolvedCount: 0,\n      // hidden_dimensions: {},\n      filterKey: \"text\",\n      // lat: 52.4895862,\n      // lng: 13.4525295,\n      lat: 52.3940717,\n      lng: 13.0150095,\n     zoom: 15\n    };\n    this.mapContainer = React.createRef();\n  }\n  public async componentDidMount() {\n    // const {\n    //   lng, lat,\n    //   zoom } = this.state;\n    // if (this.mapContainer.current) {\n    //   const map = new mapboxgl.Map({\n    //     container: this.mapContainer.current,\n    //     style: 'mapbox://styles/mapbox/streets-v11',\n    //     center: [lng, lat],\n    //     zoom: zoom\n    //   });\n    //    this.geocoder = new MapboxGeocoder({\n    //     accessToken: mapboxgl.accessToken,\n    //     mapboxgl: map,\n    //     marker: false\n    //   });\n\n    //   map.addControl(this.geocoder);\n    // }\n\n    this._dosearch(\"\", 1, 30, this.state.selected, this.state.filterKey);\n  }\n  private _columns: IColumn[] = [\n    {\n      key: 'docid',\n      name: \"ID\",\n      fieldName: 'docid',\n      minWidth: 10,\n      maxWidth: 20,\n      isResizable: true,\n      onRender: item => (\n        <div>{item.docid}</div>\n      )\n    },\n    {\n      key: 'file',\n      name: \"Datei\",\n      fieldName: 'file',\n      minWidth: 100,\n      maxWidth: 120,\n      isResizable: true,\n      isMultiline: true,\n      onRender: item => (\n        <Label>{item.file}</Label>\n      )\n    },\n    {\n      key: 'path',\n      name: \"Ordner\",\n      fieldName: 'path',\n      // isGrouped: true,\n      // isSorted: true,\n      isMultiline: true,\n      minWidth: 80,\n      maxWidth: 120,\n      isResizable: true,\n      onRender: item => (\n        <div>{renderFolder(item.path)}\n        </div>\n      )\n    },\n    {\n      key: 'doctype',\n      name: \"Typ\",\n      fieldName: 'doctype',\n      // isGrouped: true,\n      // isSorted: true,\n      minWidth: 30,\n      maxWidth: 80,\n      isResizable: true,\n      onColumnContextMenu: (column, ev) => {\n        if (column && ev) {\n          this.onColumnContextMenu(column, ev);\n        }\n      },\n      onColumnClick: (ev, column) => {\n        if (column && ev) {\n          this.onColumnContextMenu(column, ev);\n        }\n      },\n      columnActionsMode: ColumnActionsMode.hasDropdown,\n      onRender: item => (\n        <div>{item.doctype}\n        </div>\n      )\n    },\n    {\n      key: 'vorhaben',\n      name: \"Vorhaben\",\n      fieldName: 'vorhaben',\n      // isGrouped: true,\n      // isSorted: true,\n      minWidth: 30,\n      maxWidth: 150,\n      isResizable: true,\n      isMultiline: true,\n      onRender: item => (\n        <div>{array2string(item.vorhaben)}\n        </div>\n      )\n    },\n    {\n      key: 'summary',\n      name: \"Zusammenfassung\",\n      fieldName: 'summary',\n      // isGrouped: true,\n      // isSorted: true,\n      minWidth: 30,\n      maxWidth: 150,\n      isResizable: true,\n      isMultiline: true,\n      onRender: item => (\n        <div>\n          {item.summary &&\n            <TooltipHost\n              content={dict2string(item.summary, -1)}\n              id={\"tooltipfor\" + item.docid}\n              calloutProps={calloutProps}\n              styles={hostStyles}\n            >\n              <span aria-describedby={\"tooltipfor\" + item.docid}>{dict2string(item.summary, 300)}</span>\n            </TooltipHost>\n          }\n        </div>\n      )\n    },\n    {\n      key: 'adresse',\n      name: \"Adressen\",\n      fieldName: 'adresse',\n      // isGrouped: true,\n      // isSorted: true,\n      minWidth: 30,\n      maxWidth: 150,\n      isResizable: true,\n      isMultiline: true,\n      onRender: item => (\n        <div>{array2string(item.adresse)}\n        </div>\n      )\n    },\n    {\n      key: 'denkmal',\n      name: \"Denkmal\",\n      fieldName: 'Denkmalname',\n      // isGrouped: true,\n      // isSorted: true,\n      minWidth: 30,\n      maxWidth: 80,\n      isResizable: true,\n      isMultiline: true,\n      onRender: item => (\n        <div>{array2string(item.Denkmalname)}\n        </div>\n      )\n    },\n    {\n      key: 'hidas',\n      name: \"HIDA\",\n      fieldName: 'hidas',\n      // isGrouped: true,\n      // isSorted: true,\n      minWidth: 30,\n      maxWidth: 50,\n      isResizable: true,\n      isMultiline: true,\n      onRender: item => (\n        <div>{array2string(item.hidas)}\n        </div>\n      )\n    },\n  ];\n  // private _facetcolumns: IColumn[] = [\n  // // {\n  // //   key: 'dim',\n  // //   name: \"dim\",\n  // //   fieldName: 'dim',\n  // //   minWidth: 10,\n  // //   maxWidth: 120,\n  // //   isResizable: true,\n  // //   onRender: item => (\n  // //     <div>{item.dim}</div>\n  // //   )\n  // // },\n  // {\n  //   key: 'value',\n  //   name: \"Filter\",\n  //   fieldName: 'value',\n  //   minWidth: 80,\n  //   // maxWidth: 200,\n  //   isResizable: true,\n  //   // isSorted: false,\n  //   // isSortedDescending: false,\n  //   // onColumnContextMenu: (column, ev) => {\n  //   //   if (column && ev)\n  //   //     this.onFilterColumnContextMenu(column, ev);\n  //   // },\n  //   // onColumnClick: (ev, column) => {\n  //   //   this.onFilterColumnContextMenu(column, ev);\n  //   // },\n  //   // columnActionsMode: ColumnActionsMode.hasDropdown,\n  //   onRender: item => (\n  //     <span>{item.value}</span>\n  //   )\n  // },\n  // {\n  //   key: 'count',\n  //   name: \"#\",\n  //   fieldName: 'count',\n  //   // isGrouped: true,\n  //   // isSorted: true,\n  //   minWidth: 30,\n  //   maxWidth: 60,\n  //   isResizable: true,\n  //   // isSorted: true,\n  //   // isSortedDescending: true,\n  //   // onColumnContextMenu: (column, ev) => {\n  //   //   if (column && ev)\n  //   //     this.onFilterColumnContextMenu(column, ev);\n  //   // },\n  //   // onColumnClick: (ev, column) => {\n  //   //   this.onFilterColumnContextMenu(column, ev);\n  //   // },\n  //   // columnActionsMode: ColumnActionsMode.hasDropdown,\n  //   onRender: item => (\n  //     <span>{item.count}</span>\n  //   )\n  // }]\n\n  //   private renderFacetValues = (dim: string) => {\n  //   let rows: any[] = [];\n  //   var facets = this.state.all[dim];\n  //   let fl = facets.map((facet: any) => {\n  //     let selected = this.isFacetSelected(facet.value, dim);\n  //     return {\n  //       \"value\": facet.value,\n  //       \"count\": facet.count, \"selected\": selected, \"dim\": dim\n  //     };\n  //   });\n  //   rows.push(...fl);\n  //   // }\n  //   this._hidden_dimensions[dim] = dim;\n  //   let dimname = dim;\n  //   switch (dim) {\n  //     case \"doctype\": { dimname = \"Typ\"; break; }\n  //     case \"ext\": { dimname = \"Endung\"; break; }\n  //     case \"district\": { dimname = \"Bezirk\"; break; }\n  //   }\n  //   return <div className=\"list-facet\">\n  //     {rows.length > 0 &&\n  //       <StackItem>\n  //         <Label onClick={() => this.toggle_hidden({ dim })}><i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i><b>{dimname}</b></Label>\n  //         {this.state.hidden_dimensions[dim] !== undefined &&\n  //           <DetailsList items={rows}\n  //             compact={true}\n  //             isHeaderVisible={true}\n  //             selectionMode={SelectionMode.multiple}\n  //             layoutMode={DetailsListLayoutMode.justified}\n  //             columns={this._facetcolumns}\n  //             // selection={this._sel}\n  //             checkboxVisibility={CheckboxVisibility.always}\n  //             onItemInvoked={this.facetClicked} >\n  //           </DetailsList>\n  //         }\n  //       </StackItem>\n  //     }\n  //   </div>\n\n  // }\n  private renderChips(selected: any) {\n    const stackTokens = { childrenGap: 10 };\n    let chips: any[] = [];\n    for (let dim of Object.keys(selected)) {\n      for (let f of selected[dim]) {\n        chips.push(<StackItem><Checkbox label={f} boxSide=\"end\"\n          checked onChange={() => { this.removeFacet(f, dim); }}></Checkbox></StackItem>);\n      }\n    }\n    return <Stack horizontal tokens={stackTokens}>{chips} </Stack>;\n\n    //     <div className=\"selected-facets\" :style=\"{visibility: selectedFilters.length ? '' : 'hidden'}\">\n    //     <span>Filtern nach: </span>\n    //     <span v-for=\"chip in selectedFilters\" @click=\"removeChip(chip)\" class=\"facet-chip\">\n    //     <i className=\"'fa fa-'+chip.icon\" aria-hidden=\"true\"></i>\n    //     {{ chip.value }} <span class=\"close\">✖</span>\n    //   </span>\n    //   <span className=\"clear-all\" >Alle Löschen</span>\n    // </div>\n\n  }\n  private renderFacets = (foundfacets: any, selected: any) => {\n    let fl: any[] = [];\n    for (let dim of dimlist) {\n      let facvals = foundfacets[dim];\n      if (facvals.length > 0) {\n        try {\n          let f = <StackItem><SemTalkFacet dim={dim}\n            search={this.state.search} callback={this}\n            facets={facvals}\n            selected={selected}>\n          </SemTalkFacet></StackItem>;\n          fl.push(f);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      // fl.push(this.renderFacetValues(dim))\n    }\n    return fl;\n  }\n  public render(): React.ReactElement<ISemTalkFacetSearchProps> {\n\n    const containerStackTokens: IStackTokens = { childrenGap: 5 };\n    return (\n      <Fabric>\n        {/* {\n          this.props.title && <div className={styles.row}>\n            <div className={styles.column}>\n              <div className={styles.title}>{this.props.title}</div>\n            </div>\n          </div>\n        } */}\n        < Stack tokens={containerStackTokens}>\n          <StackItem>\n            <div className=\"page-title\">\n              <Image src=\"logo.png\" className=\"logo\" alt=\"forl and spoon crossed\" />\n              <h2><Link href=\"services\" target=\"_blank\" >KIbarDok</Link>. Suche in {this.state.resolvedCount} Dokumenten.         <Link href=\"/hidafacet\">Denkmalliste</Link></h2>\n            </div>\n          </StackItem>\n          <StackItem>\n            <StackItem>\n              {this.renderChips(this.state.selected)}\n            </StackItem >\n          </StackItem >\n          <StackItem>\n            <div ref={this.mapContainer} className=\"map-container\" />\n          </StackItem >\n          <StackItem>\n            <Stack horizontal tokens={containerStackTokens} verticalAlign={'center'}>\n              <StackItem>\n                <Dropdown id=\"typeDropdown\"\n                  selectedKey={this.state.filterKey}\n                  // selectedKey={this.newitem.type}\n                  options={filtertypes}\n                  onChange={(_ev, a) => {\n                    if (a !== undefined) {\n                      this.setState({ \"filterKey\": String(a.key), \"page\": 1 });\n                      this._dosearch(this.state.search, 1, this.state.pageSize, this.state.selected, String(a.key));\n                    }\n                  }} />\n              </StackItem >\n              <StackItem grow={3}>\n                <SearchBox id='stsearch.strsearch' title='Suche' onSearch={this.dosearch} onChange={this.dosearch10} onClear={this._clear}></SearchBox>\n              </StackItem>\n              <StackItem>\n                <Text> Seite {this.state.page} von {this.pagesCount()} </Text>\n                <DefaultButton onClick={this.previousPage}>Zurück</DefaultButton>\n                <DefaultButton onClick={this.nextPage}>Weiter</DefaultButton>\n                <DefaultButton onClick={this._speak}>Vorlesen</DefaultButton>\n              </StackItem>\n            </Stack >\n          </StackItem >\n        </Stack >\n        <Stack horizontal tokens={containerStackTokens}>\n          <StackItem grow={1}>\n            <Stack>\n              {this.renderFacets(this.state.foundfacets, this.state.selected)}\n            </Stack>\n          </StackItem>\n          <StackItem grow={5}>\n            {/* {this.state.filterKey !== \"karte\" && */}\n            <DetailsList\n              // ref={this._resolveList}\n              items={this.state.resolved}\n              compact={false}\n              columns={this._columns}\n              selectionMode={SelectionMode.single}\n              layoutMode={DetailsListLayoutMode.justified}\n              selection={this._sel}\n              checkboxVisibility={CheckboxVisibility.hidden}\n            />\n          </StackItem>\n        </Stack>\n        {\n          this.state.contextualMenuProps &&\n          <ContextualMenu {...this.state.contextualMenuProps} />\n        }     </Fabric >\n    );\n  }\n  private selectitem = (): void => {\n    let sel = this._sel.getSelection();\n    if (sel.length > 0) {\n      let item = this._sel.getSelection()[0];\n      if (item !== null) {\n        this._selection = item;\n        // if (item[\"adresse\"]) {\n        //   this.geocoder.query(item[\"adresse\"][0] + \" Berlin\");\n        // }\n      }\n    }\n  }\n  private _speak = () => {\n    if (this._selection) {\n      let item = this._selection;\n      if (item.summary) {\n        text2speech(dict2string(item.summary, 500));\n      }\n\n    }\n  }\n  private _clear = (): any => {\n    this.setState({ resolved: [] });\n  }\n\n  private _dosearch = async (newvalue: any, page: number, pageSize: number, selected: any, filterkey: string) => {\n    let res = await this.fetchResolved(newvalue, page, pageSize, selected, filterkey);\n    if (res) {\n      this.setState({ \"search\": newvalue, \"resolved\": res.metadata, \"resolvedCount\": res.count });\n    }\n    this.fetchFacets(newvalue, this.state.selected, filterkey);\n  }\n  private dosearch = async (newvalue: string) => {\n    this._dosearch(newvalue, this.state.page, this.state.pageSize, this.state.selected, this.state.filterKey);\n  }\n\n  private _dosearch10 = async (_evt: any, newvalue: any, page: number, pageSize: number, selected: any, filterkey: string) => {\n    let res = await this.fetchResolved(newvalue, page, pageSize, selected, filterkey);\n    if (res) {\n      this.setState({ \"search\": newvalue, \"resolved\": res.metadata, \"resolvedCount\": res.count });\n    }\n    this.fetchFacets(newvalue, this.state.selected, filterkey);\n  }\n\n  private dosearch10 = async (evt: any, newvalue: any) => {\n    this._dosearch10(evt, newvalue, this.state.page, this.state.pageSize, this.state.selected, this.state.filterKey);\n  }\n\n  //   private facetClicked = (facet: any) => {\n  //   var facetList = this.state.selected[facet.dim];\n  //   if (!facetList) return;\n\n  //   var facetIndex = facetList.indexOf(facet.value);\n  //   // add facet\n  //   if (facetIndex === -1) {\n  //     this.addFacet(facet.value, facet.dim);\n  //   } else { // remove facet\n  //     this.removeFacet(facet.value, facet.dim);\n  //   }\n  // }\n  private addFacet = (value: string, type: string) => {\n    var selected = this.state.selected;\n    var page = 0;\n    selected[type].push(value);\n    this.setState({ \"selected\": selected, \"page\": page });\n    window.localStorage.setItem('kibardocpage', String(page));\n    window.localStorage.setItem('kibardocselection', JSON.stringify(selected));\n    // this.fetchResolved(this.state.search, page,this.state.pageSize);\n    // this.fetchFacets(this.state.search);\n  }\n  private removeFacet = (value: string, type: string) => {\n    var selected = this.state.selected;\n    var page = 1;\n    var facetIndex = selected[type].indexOf(value);\n    selected[type].splice(facetIndex, 1);\n    this._dosearch(this.state.search, page, this.state.pageSize, selected, this.state.filterKey);\n    this.setState({ \"selected\": selected, \"page\": page });\n    window.localStorage.setItem('kibardocpage', String(page));\n    window.localStorage.setItem('kibardocselection', JSON.stringify(selected));\n  }\n  //   private isFacetSelected = (value: string, type: string): boolean => {\n  //   var facetList = this.state.selected[type];\n  //   if (!facetList) return false;\n  //   return facetList.indexOf(value) !== -1;\n  // }\n  private getQueryOptions = (search: string, page: number, pageSize: number, selected: any, filterkey: string): any => {\n    let options: any = {\n      params: {\n        \"page\": page - 1,\n        \"page_size\": pageSize,\n        \"search\": search,\n      }\n    };\n    for (let i0 in dimlist) {\n      var d = dimlist[i0];\n      if (selected[d]) {\n        options.params[d] = selected[d].join(',');\n        if (!options.params[d]) delete options.params[d];\n      }\n    }\n    if (filterkey !== 'text') {\n      options.params.regex = filterkey;\n    }\n\n    if (page <= 1) delete options.params.page;\n    if (!search) delete options.params.search;\n    return options;\n  }\n  public getSelected(dim: string) {\n    return this.state.selected[dim];\n  }\n  public setSelected(dim: string, sel: string[]) {\n    let selected = this.state.selected;\n    selected[dim] = sel;\n    this.setState({ \"selected\": selected, page: 1 });\n    this._dosearch(this.state.search, 1, this.state.pageSize,\n      selected, this.state.filterKey);\n  }\n\n  private fetchResolved = async (search: string, page: number, pageSize: number, selected: any, filterkey: string) => {\n    let url = API_ENDPOINT + '/search/resolved2?search=' + search;\n    try {\n\n      let args = this.getQueryOptions(search, page, pageSize, selected, filterkey);\n      args[\"headers\"] = {\n        \"Accept\": 'application/json', \"Content-Type\": 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\"\n      };\n      let res: any = await axios.get(url, args);\n      if (res.status === 200 && res.data) {\n        return res.data;\n      } else {\n        return [];\n      }\n      // return res;\n    } catch (e) {\n      return null;\n    }\n  }\n  private fetchFacets = (search: string, selected: any, filterkey: string) => {\n    var self = this;\n    var options = this.getQueryOptions(search, 1, 30, selected, filterkey);\n    delete options.params.page;\n    delete options.params.page_size;\n    return axios.get(API_ENDPOINT + '/search/resolved2_facets', options).then((response) => {\n      if (response.data) {\n        let data = response.data;\n        // console.log(\"fetchFacets: \", data);\n        let all = self.state.foundfacets;\n        for (let i0 in dimlist) {\n          let d = dimlist[i0];\n          all[d] = getOrderedFacets(\n            selected[d],\n            data[d]\n          );\n        }\n        self.setState({ \"foundfacets\": all });\n      }\n    });\n  }\n  private pagesCount = () => {\n    return Math.floor(this.state.resolvedCount / this.state.pageSize) + 1;\n  }\n\n\n\n  private previousPage = async () => {\n    let page = this.state.page;\n    page = page - 1;\n    if (page < 1) page = 1;\n    window.localStorage.setItem('kibardocpage', String(page));\n    let res = await this.fetchResolved(this.state.search, page, this.state.pageSize,\n      this.state.selected, this.state.filterKey);\n    if (res) {\n      this.setState({ \"resolved\": res.metadata, \"page\": page });\n    }\n  }\n  private nextPage = async () => {\n    let page = this.state.page;\n    page = page + 1;\n    window.localStorage.setItem('kibardocpage', String(page));\n    let res = await this.fetchResolved(this.state.search, page, this.state.pageSize,\n      this.state.selected, this.state.filterKey);\n    if (res) {\n      this.setState({ \"resolved\": res.metadata, \"page\": page });\n    }\n\n  }\n\n  private onFilterContextualMenuDismissed = (): void => {\n    this.setState({\n      contextualMenuProps: undefined,\n    });\n  }\n\n  private onColumnContextMenu = (column: IColumn, ev: React.MouseEvent<HTMLElement>): void => {\n    if (column.columnActionsMode !== ColumnActionsMode.disabled) {\n      this.setState({\n        contextualMenuProps: this.getContextualMenuProps(ev, column),\n      });\n    }\n  }\n  private getContextualMenuProps = (ev: React.MouseEvent<HTMLElement>, column: IColumn): IContextualMenuProps => {\n    let menuitems: IContextualMenuItem[] = [];\n    if (column.key === \"value\") {\n      menuitems = [\n        {\n          key: 'aToZ',\n          name: 'A to Z',\n          iconProps: { iconName: 'SortUp' },\n          canCheck: true,\n          checked: column.isSorted && !column.isSortedDescending,\n          onClick: () => {\n            // this._onSortColumn(column.key, false);\n          }\n        },\n        {\n          key: 'zToA',\n          name: 'Z to A',\n          iconProps: { iconName: 'SortDown' },\n          canCheck: true,\n          checked: column.isSorted && column.isSortedDescending,\n          onClick: () => {\n            // this._onSortColumn(column.key, true);\n          },\n        }\n      ];\n    } else {\n      let dim = column.key;\n      let facets = this.state.foundfacets[dim];\n      for (let fac of facets) {\n        menuitems.push({\n          key: fac.value,\n          name: fac.value + \" (\" + fac.count + \")\",\n          canCheck: true,\n          checked: this.state.selected[dim] && this.state.selected[dim].indexOf(fac.value) > -1,\n          onClick: () => this.addFacet(fac.value, dim),\n        });\n      }\n    }\n\n    return {\n      items: menuitems,\n      target: ev.currentTarget as HTMLElement,\n      directionalHint: DirectionalHint.bottomLeftEdge,\n      gapSpace: 10,\n      isBeakVisible: true,\n      onDismiss: this.onFilterContextualMenuDismissed,\n    };\n  }\n  // private _onSortColumn = (_columnKey: string, _isSortedDescending: boolean): void => {\n  // let sortedItems = _copyAndSort(this.state.items, columnKey, isSortedDescending);\n  // this.setState({\n  //   items: sortedItems,\n  // });\n  // }\n}\n","import * as React from 'react';\r\nimport {\r\n  GetLanguageCode, GetLanguage,\r\n  Code2Language, Language2Code\r\n} from '../../application/tbase/langtools';\r\nimport { SemTalkBaseConstant, SemTalkLanguage, SemTalkLanguageCode } from '../../application/tbase/Interface';\r\n\r\n// import styles from './SemTalkSettings.module.scss';\r\nimport {\r\n  IDropdownOption,\r\n  Dropdown,\r\n  Stack,\r\n  StackItem,\r\n  Checkbox,\r\n  // Text,\r\n  TextField,\r\n  Toggle,\r\n  Pivot, PivotItem, IPivotItemProps, ComboBox, PrimaryButton\r\n} from 'office-ui-fabric-react';\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\n\r\n// import {\r\n//   ISemTalkObject,\r\n// } from \"../../application/tbase/Interface\";\r\n// import { WebPartContext } from '@microsoft/sp-webpart-base';\r\nimport { Guid } from \"guid-typescript\";\r\nimport { VisioRDFS } from '../../application/semtalklistener/visiordfs';\r\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { SemTalkCookie } from \"../../ISemTalkOnline\";\r\n\r\nexport interface ISemTalkSettingsTabProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk?: IVisioRDFS;\r\n  // context?: WebPartContext;\r\n  guilanguage?: string;\r\n  // updateGuiLang: any;\r\n  // language: string;\r\n  // updateDataLang: any;\r\n}\r\nexport interface ISemTalkSettingsTabState {\r\n  sguilanguage: SemTalkLanguageCode;\r\n  slanguage: string;\r\n  bpmn: boolean;\r\n  refinements: boolean;\r\n  simulation: boolean;\r\n  languagetab: boolean;\r\n  showtoolbar: boolean;\r\n  showhyperlinkmarker: boolean;\r\n  usemongo: boolean;\r\n  semmongoserverurl: string;\r\n  dbname: string;\r\n  repository: string;\r\n  semconnecttoken: string;\r\n  autoComplete: boolean;\r\n  guifont: string;\r\n  font: string;\r\n  ssemantics: string;\r\n  scorpus: string;\r\n  sdistance: string;\r\n  applicationid: string;\r\n  authority: string;\r\n  scopes: string;\r\n  termsetgroup: string;\r\n  termset: string;\r\n  termsetroot: string;\r\n  termsetassoc: string;\r\n  theme: string;\r\n  userDefThemeStyle: string;\r\n  iconcolor: string;\r\n}\r\n\r\nexport class SemTalkSettings extends React.Component<ISemTalkSettingsTabProps, ISemTalkSettingsTabState> {\r\n  public callback: Guid;\r\n  private res: IVisioRDFS;\r\n  // private title: string;\r\n  private slangtab: string;\r\n  constructor(props: ISemTalkSettingsTabProps) {\r\n    super(props);\r\n    this.callback = Guid.create();\r\n    console.debug(\"showLanguageTab\");\r\n\r\n    let guilanguage: SemTalkLanguageCode = SemTalkLanguageCode.English;\r\n    let gl = GetLanguageCode((window as any).localStorage.getItem(SemTalkCookie.guilanguage));\r\n    if (gl) guilanguage = gl;\r\n\r\n    let language: string = SemTalkLanguage.English;\r\n    let l = GetLanguage((window as any).localStorage.getItem(SemTalkCookie.language));\r\n    if (l) language = l;\r\n\r\n    let bb = (window as any).localStorage.getItem(SemTalkCookie.bpmn);\r\n    let b: boolean = false;\r\n    if (bb === 'true') {\r\n      b = true;\r\n    }\r\n    let rr = (window as any).localStorage.getItem(SemTalkCookie.refinements);\r\n    let r: boolean = false;\r\n    if (rr === 'true') {\r\n      r = true;\r\n    }\r\n\r\n    let ss = (window as any).localStorage.getItem(SemTalkCookie.simulation);\r\n    let s: boolean = false;\r\n    if (ss === 'true') {\r\n      s = true;\r\n    }\r\n    let la = (window as any).localStorage.getItem(SemTalkCookie.showlanguage);\r\n    let ll: boolean = false;\r\n    if (la === 'true') {\r\n      ll = true;\r\n    }\r\n    let fb = (window as any).localStorage.getItem(SemTalkCookie.showtoolbar);\r\n    let f: boolean = false;\r\n    if (fb === 'true') {\r\n      f = true;\r\n    }\r\n    let hy = (window as any).localStorage.getItem(SemTalkCookie.showhyperlinkmarker);\r\n    let h: boolean = false;\r\n    if (hy === 'true') {\r\n      h = true;\r\n    }\r\n    let guifont: string = \"\";\r\n    let gf = (window as any).localStorage.getItem(SemTalkCookie.guifont);\r\n    if (gf) guifont = gf;\r\n\r\n    let theme: string = \"Default\";\r\n    let th = (window as any).localStorage.getItem(SemTalkCookie.theme);\r\n    if (th) theme = th;\r\n\r\n    let iconcolor: string = \"Default\";\r\n    let ic = (window as any).localStorage.getItem(SemTalkCookie.iconcolor);\r\n    if (ic) {\r\n      if (ic !== \"\" && ic !== \"Default\") { \r\n        iconcolor = ic;\r\n      } else {\r\n        iconcolor = \"Default\"; \r\n      }\r\n    }\r\n\r\n    let userDefThemeStyle: string = \"\";\r\n    let udth = (window as any).localStorage.getItem(SemTalkCookie.userDefTheme);\r\n    if (udth) userDefThemeStyle = udth;\r\n\r\n    let font: string = \"\";\r\n    let fo = (window as any).localStorage.getItem(SemTalkCookie.font);\r\n    if (fo) font = fo;\r\n\r\n    let ssemantics: string = \"\";\r\n    let sl = (window as any).localStorage.getItem(SemTalkCookie.semanticsserver);\r\n    if (sl) ssemantics = sl;\r\n\r\n    let sec = (window as any).localStorage.getItem(SemTalkCookie.semanticscorpus);\r\n    let semantics_corpus = \"de_core_news_md\";\r\n    if (sec) {\r\n      semantics_corpus = sec;\r\n    }\r\n    let sdi = (window as any).localStorage.getItem(SemTalkCookie.semanticsdistance);\r\n    let semantics_distance = \"0.7\";\r\n    if (sdi) {\r\n      semantics_distance = sec;\r\n    }\r\n    let app = (window as any).localStorage.getItem(SemTalkCookie.applicationid);\r\n    let applicationid = \"f2f7dcf0-0917-4911-b587-f0c941391758\";\r\n    if (app) {\r\n      applicationid = app;\r\n    }\r\n\r\n    let aut = (window as any).localStorage.getItem(SemTalkCookie.authority);\r\n    let authority = \"https://login.microsoftonline.com/semtalk.onmicrosoft.com\";\r\n    if (aut) {\r\n      authority = aut;\r\n    }\r\n    let sco = (window as any).localStorage.getItem(SemTalkCookie.scopes);\r\n    let scopes = [\"User.Read\",\r\n      \"Sites.Read.All\",\r\n      \"Group.ReadWrite.All\",\r\n      \"Files.Read.All\",\r\n      \"TermStore.ReadWrite.All\"];\r\n    if (sco) {\r\n      scopes = sco;\r\n    }\r\n\r\n    let tg = (window as any).localStorage.getItem(SemTalkCookie.termsetgroup);\r\n    let termsetgroup = \"\";\r\n    if (tg) {\r\n      termsetgroup = tg;\r\n    }\r\n    let ts = (window as any).localStorage.getItem(SemTalkCookie.termset);\r\n    let termset = \"\";\r\n    if (ts) {\r\n      termset = ts;\r\n    }\r\n    let tr = (window as any).localStorage.getItem(SemTalkCookie.termsetroot);\r\n    let termsetroot = \"\";\r\n    if (tr) {\r\n      termsetroot = tr;\r\n    }\r\n    let ta = (window as any).localStorage.getItem(SemTalkCookie.termsetassoc);\r\n    let termsetassoc = SemTalkBaseConstant.SLSubClassOf;\r\n    if (ta && ta !== \"\") {\r\n      termsetassoc = ta;\r\n    }\r\n    // termset = {\"ba1d58d5-f8f3-4336-b7af-79a495360e02\"}\r\n    // termsetgroup= {\"f9e6a049-6545-49fb-b26f-7df6a490b6c6\"}\r\n    // termsetassoc={ SemTalkBaseConstant.SLSubClassOf}\r\n\r\n    // https://graph.microsoft.com/v1.0/sites/semtalk.sharepoint.com:/teams/denkmalschutz:/\r\n    // https://graph.microsoft.com/v1.0/sites/semtalk.sharepoint.com:/sites/Modellierung:/lists/Buffers/items?expand=Title\r\n\r\n    this.res = new VisioRDFS(null, null);\r\n    this.res.init(null, guilanguage);\r\n    // if (this.props.title) {\r\n    //   this.title = this.props.title;\r\n    // } else {\r\n    //   this.title = this.res.getResStr(\"STROPTIONS\");\r\n    // }\r\n\r\n    this.slangtab = this.res.getResStr(\"STRDLGLANGTAB\").replace(\" immer\", \"\").replace(\" always\", \"\");\r\n    let db = (window as any).localStorage.getItem(SemTalkCookie.dbname);\r\n    if (!db) db = \"semtalkonline\";\r\n    let re = (window as any).localStorage.getItem(SemTalkCookie.repository);\r\n    if (!re) re = \"repository\";\r\n\r\n    let semmongoserverurl = (window as any).localStorage.getItem(SemTalkCookie.semmongoserverurl);\r\n    if (!semmongoserverurl) semmongoserverurl = \"/api/\";\r\n    let semconnecttoken = (window as any).localStorage.getItem(SemTalkCookie.semconnecttoken);\r\n    if (!semconnecttoken) semconnecttoken = \"\";\r\n\r\n    let ac = (window as any).localStorage.getItem(SemTalkCookie.autoComplete);\r\n    if (!ac) { ac = (ac !== 'false'); }\r\n\r\n    let usemongo: boolean = false;\r\n    let usemongos = (window as any).localStorage.getItem(SemTalkCookie.usemongo);\r\n    if (usemongos !== undefined) {\r\n      usemongo = (usemongos === \"true\");\r\n    }\r\n\r\n\r\n    this.state = {\r\n      sguilanguage: guilanguage,\r\n      slanguage: language,\r\n      bpmn: b,\r\n      refinements: r,\r\n      simulation: s,\r\n      languagetab: ll,\r\n      showtoolbar: f,\r\n      showhyperlinkmarker: h,\r\n      dbname: db,\r\n      repository: re,\r\n      usemongo: usemongo,\r\n      semmongoserverurl: semmongoserverurl,\r\n      semconnecttoken: semconnecttoken,\r\n      autoComplete: (ac !== 'false'),\r\n      guifont: guifont,\r\n      font: font,\r\n      ssemantics: ssemantics,\r\n      scorpus: semantics_corpus,\r\n      sdistance: semantics_distance,\r\n      applicationid: applicationid,\r\n      authority: authority,\r\n      scopes: scopes.join(\",\"),\r\n      termsetgroup: termsetgroup,\r\n      termset: termset,\r\n      termsetroot: termsetroot,\r\n      termsetassoc: termsetassoc,\r\n      theme: theme,\r\n      userDefThemeStyle: userDefThemeStyle,\r\n      iconcolor: iconcolor\r\n    };\r\n    if (this.props.guilanguage) {\r\n      let code = GetLanguageCode(this.props.guilanguage);\r\n      if (this.props.semtalk && code) {\r\n        let lan = Code2Language(code);\r\n        const langclass = this.props.semtalk.base.FindClass(SemTalkBaseConstant.SLLanguage);\r\n        let langoptions: any[] = [];\r\n        let glangoptions: any[] = [];\r\n        // let currlangcap = this.state.language;\r\n        if (langclass) {\r\n          for (let lang of langclass.Instances()) {\r\n            langoptions.push(\r\n              {\r\n                key: lang.ObjectName,\r\n                text: lang.ID2NameNspLan(lan),\r\n              }\r\n            );\r\n            let l0 = GetLanguage(lang.ObjectName);\r\n            if (l0) {\r\n              glangoptions.push(\r\n                {\r\n                  key: Language2Code(l0),\r\n                  text: lang.ID2NameNspLan(lan),\r\n                }\r\n              );\r\n            }\r\n            this._datalanguagedropdownOptions = langoptions;\r\n            this._guilanguagedropdownOptions = glangoptions;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _guilanguagedropdownOptions: IDropdownOption[] = [\r\n    { key: SemTalkLanguageCode.English, text: SemTalkLanguage.English },\r\n    { key: SemTalkLanguageCode.German, text: SemTalkLanguage.German },\r\n    { key: SemTalkLanguageCode.Japanese, text: SemTalkLanguage.Japanese },\r\n    { key: SemTalkLanguageCode.Spanish, text: SemTalkLanguage.Spanish },\r\n    { key: SemTalkLanguageCode.French, text: SemTalkLanguage.French },\r\n    { key: SemTalkLanguageCode.Russian, text: SemTalkLanguage.Russian },\r\n    { key: SemTalkLanguageCode.Simplified, text: SemTalkLanguage.Simplified },\r\n    { key: SemTalkLanguageCode.Traditional, text: SemTalkLanguage.Traditional },\r\n  ];\r\n  private _datalanguagedropdownOptions: IDropdownOption[] = [\r\n    { key: SemTalkLanguage.English, text: SemTalkLanguage.English },\r\n    { key: SemTalkLanguage.German, text: SemTalkLanguage.German },\r\n    { key: SemTalkLanguage.Japanese, text: SemTalkLanguage.Japanese },\r\n    { key: SemTalkLanguage.Spanish, text: SemTalkLanguage.Spanish },\r\n    { key: SemTalkLanguage.French, text: SemTalkLanguage.French },\r\n    { key: SemTalkLanguage.Russian, text: SemTalkLanguage.Russian },\r\n    { key: SemTalkLanguage.Simplified, text: SemTalkLanguage.Simplified },\r\n    { key: SemTalkLanguage.Traditional, text: SemTalkLanguage.Traditional },\r\n  ];\r\n\r\n  private _theme: IDropdownOption[] = [\r\n    { key: \"Default\", text: \"Default\" },\r\n    { key: \"DarkMode\", text: \"Dark Mode\" },\r\n    { key: \"MiddleMode\", text: \"Middle Mode\" },\r\n    { key: \"BlueMode\", text: \"Blue Mode\" },\r\n    { key: \"GreenMode\", text: \"Green Mode\" },\r\n    { key: \"OrangeMode\", text: \"Orange Mode\" },\r\n    { key: \"UserDefTheme\", text: \"User def. Theme\" },\r\n  ];\r\n\r\n  private _iconcolor: IDropdownOption[] = [\r\n    { key: \"Default\", text: \"Default\" },\r\n    { key: \"Black\", text: \"Black\" },\r\n    { key: \"Green\", text: \"Green\" },\r\n    { key: \"Red\", text: \"Red\" },\r\n    { key: \"Blue\", text: \"Blue\" },\r\n    { key: \"White\", text: \"White\" },\r\n    { key: \"Orange\", text: \"Orange\" }\r\n  ];\r\n\r\n  private _fonts: IDropdownOption[] = [\r\n    { key: \"Default\", text: \"Default\" },\r\n    { key: \"Helvetica, Arial, sans-serif\", text: \"Helvetica, Arial, sans-serif\" },\r\n    { key: \"Arial Black\", text: \"Arial Black\" },\r\n    { key: \"Verdana\", text: \"Verdana\" },\r\n    { key: \"Tahoma\", text: \"Tahoma\" },\r\n    { key: \"Trebuchet MS\", text: \"Trebuchet MS\" },\r\n    { key: \"Impact\", text: \"Impact\" },\r\n    { key: \"Times New Roman\", text: \"Times New Roman\" },\r\n    { key: \"Didot\", text: \"Didot\" },\r\n    { key: \"Georgia\", text: \"Georgia\" },\r\n    { key: \"American Typewriter\", text: \"American Typewriter\" },\r\n    { key: \"Andale Mono\", text: \"Andale Mono\" },\r\n    { key: \"Courier\", text: \"Courier\" },\r\n    { key: \"Lucida Console\", text: \"Lucida Console\" },\r\n    { key: \"Monaco\", text: \"Monaco\" },\r\n    { key: \"Bradley Hand\", text: \"Bradley Hand\" },\r\n    { key: \"Brush Script MT\", text: \"Brush Script MT\" },\r\n    { key: \"Luminari\", text: \"Luminari\" },\r\n    { key: 'Bahnschrift', text: 'Bahnschrift' },\r\n    { key: 'Monaco, Menlo, Consolas', text: 'Monaco, Menlo, Consolas' },\r\n    { key: 'Comic Sans MS', text: 'Comic Sans MS' }\r\n  ];\r\n  private _semanticsdropdownOptions: IDropdownOption[] = [\r\n    { key: \"\", text: \"None\" },\r\n    { key: \"http://127.0.0.1:5000/\", text: \"localhost:5000\" },\r\n    { key: \"https://semkibadoc3.azurewebsites.net/\", text: \"Semtation\" },\r\n    { key: \"http://klskibardok.azurewebsites.net/\", text: \"Knowlogy\" }\r\n  ];\r\n  private _corpusdropdownOptions: IDropdownOption[] = [\r\n    { key: \"\", text: \"None\" },\r\n    { key: \"de_core_news_md\", text: \"de_core_news_md\" },\r\n    { key: \"en_core_news_md\", text: \"en_core_news_md\" }\r\n  ];\r\n  private selectGuiLang = (a: IDropdownOption) => {\r\n    if (a) {\r\n      let v: SemTalkLanguageCode = a.key as SemTalkLanguageCode;\r\n      (window as any).localStorage.setItem(SemTalkCookie.guilanguage, v);\r\n      this.setState({ sguilanguage: v });\r\n    }\r\n    // this.props.updateGuiLang(a.key);\r\n  }\r\n  private selectDataLang = (a: IDropdownOption) => {\r\n    if (a) {\r\n      let v: SemTalkLanguage = a.key as SemTalkLanguage;\r\n      (window as any).localStorage.setItem(SemTalkCookie.language, v);\r\n      this.setState({ slanguage: v });\r\n    }    // this.props.updateDataLang(a.key);\r\n  }\r\n  private selectTheme = (v: string) => {\r\n    (window as any).localStorage.setItem(SemTalkCookie.theme, v);\r\n    const getDefaultThemes = require(\"./themes.json\");\r\n    switch (v) {\r\n      case \"DarkMode\": {\r\n        (window as any).localStorage.setItem(SemTalkCookie.themeStyle, JSON.stringify(getDefaultThemes.DarkMode));\r\n        break;\r\n      }\r\n      case \"MiddleMode\": {\r\n        (window as any).localStorage.setItem(SemTalkCookie.themeStyle, JSON.stringify(getDefaultThemes.MiddleMode));\r\n        break;\r\n      }\r\n      case \"BlueMode\": {\r\n        (window as any).localStorage.setItem(SemTalkCookie.themeStyle, JSON.stringify(getDefaultThemes.BlueMode));\r\n        break;\r\n      }\r\n      case \"GreenMode\": {\r\n        (window as any).localStorage.setItem(SemTalkCookie.themeStyle, JSON.stringify(getDefaultThemes.GreenMode));\r\n        break;\r\n      }\r\n      case \"OrangeMode\": {\r\n        (window as any).localStorage.setItem(SemTalkCookie.themeStyle, JSON.stringify(getDefaultThemes.OrangeMode));\r\n        break;\r\n      }\r\n      case \"UserDefTheme\": {\r\n        (window as any).localStorage.setItem(SemTalkCookie.themeStyle, this.state.userDefThemeStyle);\r\n        break;\r\n      }\r\n      default: {\r\n        (window as any).localStorage.setItem(SemTalkCookie.themeStyle, \"\");\r\n        (window as any).localStorage.setItem(SemTalkCookie.backgroundColor, \"#ffffff\");\r\n        break;\r\n      }\r\n    }\r\n    this.setState({ theme: v });\r\n  }\r\n\r\n  private OpenFluentUIDesigner = () => {\r\n    window.open(\"https://fluentuipr.z22.web.core.windows.net/heads/master/theming-designer/index.html\", '_blank');\r\n  }\r\n\r\n  private selectGuiFont = (v: string) => {\r\n    (window as any).localStorage.setItem(SemTalkCookie.guifont, v);\r\n    this.setState({ guifont: v });\r\n  }\r\n\r\n  private selectIconColor = (v: string) => {   \r\n    if (v === \"Default\" || v === \"\") {\r\n      (window as any).localStorage.setItem(SemTalkCookie.iconcolor, \"\");\r\n    } else {\r\n      (window as any).localStorage.setItem(SemTalkCookie.iconcolor, v);\r\n    }\r\n    this.setState({ iconcolor: v });\r\n  }\r\n\r\n  private selectFont = (v: string) => {\r\n    (window as any).localStorage.setItem(SemTalkCookie.font, v);\r\n    this.setState({ font: v });\r\n  }\r\n  private selectSemanticServer = (a: IDropdownOption) => {\r\n    if (a) {\r\n      let v = a.key as string;\r\n      (window as any).localStorage.setItem(SemTalkCookie.semanticsserver, v);\r\n      this.setState({ ssemantics: v });\r\n    }\r\n  }\r\n  private selectSemanticCorpus = (a: IDropdownOption) => {\r\n    if (a) {\r\n      let v = a.key as string;\r\n      (window as any).localStorage.setItem(SemTalkCookie.semanticscorpus, v);\r\n      this.setState({ scorpus: v });\r\n    }\r\n  }\r\n  private setSemanticDistance = (a: string) => {\r\n    if (a) {\r\n      let v = a;\r\n      (window as any).localStorage.setItem(SemTalkCookie.semanticsdistance, v);\r\n      this.setState({ sdistance: v });\r\n    }\r\n  }\r\n  private toggleAutoComplete = () => {\r\n    (window as any).localStorage.setItem(SemTalkCookie.autoComplete, !this.state.autoComplete);\r\n    this.setState({ autoComplete: !this.state.autoComplete });\r\n  }\r\n\r\n  private setUserDefTheme = (_ev: any, newText: string | undefined): void => {\r\n    if (newText !== undefined) {\r\n      (window as any).localStorage.setItem(SemTalkCookie.userDefTheme, newText);\r\n      this.setState({ userDefThemeStyle: newText });\r\n    }\r\n  }\r\n\r\n  public render(): React.ReactElement<ISemTalkSettingsTabProps> {\r\n    let r: React.ReactElement<ISemTalkSettingsTabProps>;\r\n    // let val: any[] = this.state.items;\r\n    let gl = this.res.getResStr(\"STRGUILANG\");\r\n    let divHostStyle: any = {\r\n      // position: \"fixed\",\r\n      // height: \"100%\", //this.props.height,\r\n      // width: \"80%\", //this.props.width,\r\n      padding: \"20px\"\r\n    };\r\n    const stackTokens = { childrenGap: 10 };\r\n    let pivotArray: React.ReactElement<IPivotItemProps>[] = [];\r\n    pivotArray.push(\r\n      <PivotItem headerText={this.res.getResStrListener(\"STRDLGTABGEN\")} key=\"General\">\r\n        <Stack style={divHostStyle} tokens={stackTokens}>\r\n          <StackItem>\r\n            <Checkbox id=\"bpmn\" checked={this.state.bpmn}\r\n              label={this.res.getResStr(\"STRBPMNSYMGROUP\")}\r\n              onChange={(_ev, isChecked: boolean | undefined) => {\r\n                if (isChecked) {\r\n                  (window as any).localStorage.setItem(SemTalkCookie.bpmn, true);\r\n                  this.setState({ \"bpmn\": true });\r\n                } else {\r\n                  (window as any).localStorage.setItem(SemTalkCookie.bpmn, false);\r\n                  this.setState({ \"bpmn\": false });\r\n                }\r\n              }}></Checkbox>\r\n          </StackItem>\r\n          <StackItem>\r\n            <Checkbox id=\"refinements\" checked={this.state.refinements}\r\n              label={this.res.getResStr(\"STRUNDERLINERF\")}\r\n              onChange={(_ev, isChecked: boolean | undefined) => {\r\n                if (isChecked) {\r\n                  (window as any).localStorage.setItem(SemTalkCookie.refinements, true);\r\n                  this.setState({ \"refinements\": true });\r\n                } else {\r\n                  (window as any).localStorage.setItem(SemTalkCookie.refinements, false);\r\n                  this.setState({ \"refinements\": false });\r\n                }\r\n              }}></Checkbox>\r\n          </StackItem>\r\n          <StackItem>\r\n            <Checkbox id=\"sim\" checked={this.state.simulation}\r\n              label={this.res.getResStr(\"STRSIMULATION\")}\r\n              onChange={(_ev, isChecked: boolean | undefined) => {\r\n                if (isChecked) {\r\n                  (window as any).localStorage.setItem(SemTalkCookie.simulation, true);\r\n                  this.setState({ \"simulation\": true });\r\n                } else {\r\n                  (window as any).localStorage.setItem(SemTalkCookie.simulation, false);\r\n                  this.setState({ \"simulation\": false });\r\n                }\r\n              }}></Checkbox>\r\n          </StackItem>\r\n          <StackItem>\r\n            <Checkbox id=\"formatb\" checked={this.state.showtoolbar} label={this.res.getResStr(\"STRSHOWTOOLBAR\")} onChange={(_ev, isChecked: boolean | undefined) => {\r\n              if (isChecked) {\r\n                (window as any).localStorage.setItem(SemTalkCookie.showtoolbar, true);\r\n                this.setState({ \"showtoolbar\": true });\r\n              } else {\r\n                (window as any).localStorage.setItem(SemTalkCookie.showtoolbar, false);\r\n                this.setState({ \"showtoolbar\": false });\r\n              }\r\n            }}></Checkbox>\r\n          </StackItem>\r\n          <StackItem>\r\n            <Checkbox id=\"formath\" checked={this.state.showhyperlinkmarker} label={this.res.getResStrListener(\"STRSHOWPAPERCLIP\")} onChange={(_ev, isChecked: boolean | undefined) => {\r\n              if (isChecked) {\r\n                (window as any).localStorage.setItem(SemTalkCookie.showhyperlinkmarker, true);\r\n                this.setState({ \"showhyperlinkmarker\": true });\r\n              } else {\r\n                (window as any).localStorage.setItem(SemTalkCookie.showhyperlinkmarker, false);\r\n                this.setState({ \"showhyperlinkmarker\": false });\r\n              }\r\n            }}></Checkbox>\r\n          </StackItem>\r\n          <StackItem>\r\n            <ComboBox\r\n              // placeholder={this.props.semtalk.getResStrListener(\"STRDLGLANG\")}\r\n              label={\"Font\"}\r\n              allowFreeform\r\n              selectedKey={this.state.font}\r\n              options={this._fonts}\r\n              onChange={(_ev, a, _i, v) => {\r\n                if (a !== undefined)\r\n                  if (a.key) {\r\n                    this.selectFont(String(a.key));\r\n                  } else {\r\n                    this.selectFont(String(v));\r\n                  }\r\n              }}\r\n            />\r\n          </StackItem>\r\n        </Stack>\r\n      </PivotItem>\r\n    );\r\n    pivotArray.push(\r\n      <PivotItem headerText={this.res.getResStrListener(\"STRDLGTHEME\")} key=\"Theme\">\r\n        <Stack style={divHostStyle} tokens={stackTokens}>\r\n          <StackItem>\r\n            <ComboBox\r\n              // placeholder={this.props.semtalk.getResStrListener(\"STRDLGLANG\")}\r\n              label={\"GUI Font\"}\r\n              allowFreeform\r\n              selectedKey={this.state.guifont}\r\n              options={this._fonts}\r\n              onChange={(_ev, a, _i, v) => {\r\n                if (a !== undefined)\r\n                  if (a.key) {\r\n                    this.selectGuiFont(String(a.key));\r\n                  } else {\r\n                    this.selectGuiFont(String(v));\r\n                  }\r\n              }}\r\n            />\r\n          </StackItem>\r\n          <StackItem>\r\n            <ComboBox\r\n              // placeholder={this.props.semtalk.getResStrListener(\"STRDLGLANG\")}\r\n              label={\"Icon color\"}\r\n              allowFreeform\r\n              selectedKey={this.state.iconcolor}\r\n              options={this._iconcolor}\r\n              onChange={(_ev, a, _i, v) => {\r\n                if (a !== undefined)\r\n                  if (a.key) {\r\n                    this.selectIconColor(String(a.key));\r\n                  } else {\r\n                    this.selectIconColor(String(v));\r\n                  }\r\n              }}\r\n            />\r\n          </StackItem>\r\n          <StackItem>\r\n            <ComboBox\r\n              // placeholder={this.props.semtalk.getResStrListener(\"STRDLGLANG\")}\r\n              label={\"Theme style\"}\r\n              allowFreeform\r\n              selectedKey={this.state.theme}\r\n              options={this._theme}\r\n              onChange={(_ev, a, _i, v) => {\r\n                if (a !== undefined)\r\n                  if (a.key) {\r\n                    this.selectTheme(String(a.key));\r\n                  } else {\r\n                    this.selectTheme(String(v));\r\n                  }\r\n              }}\r\n            />\r\n          </StackItem>\r\n          <StackItem>\r\n            <TextField value={this.state.userDefThemeStyle} label={\"User def. Theme style\"} multiline rows={8} autoAdjustHeight\r\n              onChange={this.setUserDefTheme} />\r\n          </StackItem>\r\n          <StackItem>\r\n            <PrimaryButton onClick={this.OpenFluentUIDesigner} text={\"Visit FluentUI Theme Designer\"} />\r\n          </StackItem>\r\n        </Stack>\r\n      </PivotItem>\r\n    );\r\n    pivotArray.push(\r\n      <PivotItem headerText={this.res.getResStr(\"STRDLGLANG\")} key=\"language\">\r\n        <Stack style={divHostStyle} tokens={stackTokens}>\r\n          <StackItem>\r\n            <Dropdown\r\n              // placeholder={this.props.semtalk.getResStrListener(\"STRDLGLANG\")}\r\n              label={gl}\r\n              selectedKey={this.state.sguilanguage}\r\n              options={this._guilanguagedropdownOptions}\r\n              onChange={(_ev, a) => {\r\n                if (a !== undefined)\r\n                  this.selectGuiLang(a);\r\n              }}\r\n            />\r\n          </StackItem>\r\n          <StackItem>\r\n            <Dropdown\r\n              // placeholder={this.props.semtalk.getResStrListener(\"STRDLGLANG\")}\r\n              label={this.res.getResStr(\"STRDLGLANG\")}\r\n              selectedKey={this.state.slanguage}\r\n              options={this._datalanguagedropdownOptions}\r\n              onChange={(_ev, a) => {\r\n                if (a !== undefined)\r\n                  this.selectDataLang(a);\r\n              }}\r\n            />\r\n          </StackItem>\r\n          <StackItem>\r\n            <Checkbox id=\"language\" checked={this.state.languagetab} label={this.slangtab} onChange={(_ev, isChecked: boolean | undefined) => {\r\n              if (isChecked) {\r\n                (window as any).localStorage.setItem(SemTalkCookie.showlanguage, true);\r\n                this.setState({ \"languagetab\": true });\r\n              } else {\r\n                (window as any).localStorage.setItem(SemTalkCookie.showlanguage, false);\r\n                this.setState({ \"languagetab\": false });\r\n              }\r\n            }}></Checkbox>\r\n          </StackItem>\r\n          <StackItem>\r\n            <Toggle label={this.res.getResStr(\"STRAUTOCOMPLETE\")} checked={this.state.autoComplete} onChange={this.toggleAutoComplete} />\r\n          </StackItem>\r\n        </Stack>\r\n      </PivotItem>\r\n    );\r\n    pivotArray.push(\r\n      <PivotItem headerText={\"MongoDB API\"} key=\"MongoConnection\">\r\n        <Stack style={divHostStyle} tokens={stackTokens}>\r\n          <StackItem>\r\n            <Checkbox id=\"usemongo\" checked={this.state.usemongo}\r\n              label={\"MongoDB\"}\r\n              onChange={(_ev, isChecked: boolean | undefined) => {\r\n                if (isChecked) {\r\n                  (window as any).localStorage.setItem(SemTalkCookie.usemongo, true);\r\n                  this.setState({ \"usemongo\": true });\r\n                } else {\r\n                  (window as any).localStorage.setItem(SemTalkCookie.usemongo, false);\r\n                  this.setState({ \"usemongo\": false });\r\n                }\r\n              }}></Checkbox>\r\n          </StackItem>\r\n          <StackItem>\r\n            <TextField defaultValue={this.state.semmongoserverurl} required label={\"MongoDB API\"}\r\n              onChange={(_e: any, v?: any) => {\r\n                (window as any).localStorage.setItem(SemTalkCookie.semmongoserverurl, v);\r\n                this.setState({ \"semmongoserverurl\": v });\r\n              }} />\r\n          </StackItem>\r\n          <StackItem>\r\n            <TextField defaultValue={this.state.dbname} label={this.res.getResStr(\"STRSQLDATABASE\").replace(\":\", \"\")}\r\n              onChange={(_e: any, v?: any) => {\r\n                (window as any).localStorage.setItem(SemTalkCookie.dbname, v);\r\n                this.setState({ \"dbname\": v });\r\n              }} />\r\n          </StackItem>\r\n          <StackItem>\r\n            <TextField defaultValue={this.state.repository} label={this.res.getResStr(\"STRREPOSITORY\")}\r\n              onChange={(_e: any, v?: any) => {\r\n                (window as any).localStorage.setItem(SemTalkCookie.repository, v);\r\n                this.setState({ \"repository\": v });\r\n              }} />\r\n          </StackItem>\r\n          <StackItem>\r\n            <TextField value={this.state.semconnecttoken} label={\"MongoDB \" + this.res.getResStr(\"STRCONNECTION\")}\r\n              onChange={(_e: any, v?: any) => {\r\n                (window as any).localStorage.setItem(SemTalkCookie.semconnecttoken, v);\r\n                this.setState({ \"semconnecttoken\": v });\r\n              }} />\r\n          </StackItem>\r\n        </Stack>\r\n      </PivotItem>\r\n    );\r\n    pivotArray.push(\r\n      <PivotItem headerText={\"Microsoft Graph\"} key=\"SharePoint\">\r\n        <Stack style={divHostStyle} tokens={stackTokens}>\r\n          <StackItem>\r\n            <TextField defaultValue={this.state.applicationid} required label={\"Application ID\"}\r\n              onChange={(_e: any, v?: any) => {\r\n                (window as any).localStorage.setItem(SemTalkCookie.applicationid, v);\r\n                this.setState({ \"applicationid\": v });\r\n              }} />\r\n          </StackItem>\r\n          <StackItem>\r\n            <TextField defaultValue={this.state.authority} label={\"Authority\"}\r\n              onChange={(_e: any, v?: any) => {\r\n                (window as any).localStorage.setItem(SemTalkCookie.authority, v);\r\n                this.setState({ \"authority\": v });\r\n              }} />\r\n          </StackItem>\r\n          <StackItem>\r\n            <TextField\r\n              defaultValue={this.state.termsetgroup} label={\"TermSet Group\"}\r\n              onChange={(_e: any, v?: any) => {\r\n                (window as any).localStorage.setItem(SemTalkCookie.termsetgroup, v);\r\n                this.setState({ \"termsetgroup\": v });\r\n              }} />\r\n          </StackItem>\r\n          <StackItem>\r\n            <TextField\r\n              defaultValue={this.state.termset} label={\"TermSet\"}\r\n              onChange={(_e: any, v?: any) => {\r\n                (window as any).localStorage.setItem(SemTalkCookie.termset, v);\r\n                this.setState({ \"termset\": v });\r\n              }} />\r\n          </StackItem>\r\n          <StackItem>\r\n            <TextField\r\n              defaultValue={this.state.termsetroot} label={\"Root\"}\r\n              onChange={(_e: any, v?: any) => {\r\n                (window as any).localStorage.setItem(SemTalkCookie.termsetroot, v);\r\n                this.setState({ \"termsetroot\": v });\r\n              }} />\r\n          </StackItem>\r\n          <StackItem>\r\n            <TextField\r\n              defaultValue={this.state.termsetassoc} label={\"Relation\"}\r\n              onChange={(_e: any, v?: any) => {\r\n                (window as any).localStorage.setItem(SemTalkCookie.termsetassoc, v);\r\n                this.setState({ \"termsetassoc\": v });\r\n              }} />\r\n          </StackItem>\r\n        </Stack>\r\n      </PivotItem>\r\n    );\r\n    pivotArray.push(\r\n      <PivotItem headerText={\"Semantic Server\"} key=\"semantic\">\r\n        <Stack style={divHostStyle} tokens={stackTokens}>\r\n          <StackItem>\r\n            <ComboBox\r\n              // placeholder={this.props.semtalk.getResStrListener(\"STRDLGLANG\")}\r\n              label={\"Semantics Server\"}\r\n              selectedKey={this.state.ssemantics}\r\n              options={this._semanticsdropdownOptions}\r\n              onChange={(_ev, a) => {\r\n                if (a !== undefined)\r\n                  this.selectSemanticServer(a);\r\n              }}\r\n            />\r\n          </StackItem>\r\n          <StackItem>\r\n            <ComboBox\r\n              // placeholder={this.props.semtalk.getResStrListener(\"STRDLGLANG\")}\r\n              label={\"Corpus\"}\r\n              selectedKey={this.state.scorpus}\r\n              options={this._corpusdropdownOptions}\r\n              onChange={(_ev, a) => {\r\n                if (a !== undefined)\r\n                  this.selectSemanticCorpus(a);\r\n              }}\r\n            />\r\n          </StackItem>\r\n          <StackItem>\r\n            <TextField\r\n              // placeholder={this.props.semtalk.getResStrListener(\"STRDLGLANG\")}\r\n              type=\"number\"\r\n              label={\"Distance\"}\r\n              defaultValue={this.state.sdistance}\r\n              onChange={(_ev, a) => {\r\n                if (a !== undefined)\r\n                  this.setSemanticDistance(a);\r\n              }}\r\n            />\r\n          </StackItem>\r\n        </Stack>\r\n      </PivotItem>\r\n    );\r\n\r\n    r = <Fabric>\r\n      {this.res &&\r\n        <Stack style={divHostStyle} tokens={stackTokens}>\r\n          {/* <StackItem>\r\n            <Text variant=\"xxLarge\">{this.title}</Text>\r\n          </StackItem> */}\r\n          <Pivot>\r\n            {pivotArray}\r\n          </Pivot>\r\n\r\n\r\n        </Stack>};\r\n    </Fabric>;\r\n    return r;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport styles from './SemTalkModelProperty.module.scss';\r\nimport { parseISO } from \"date-fns\";\r\nimport { format } from \"date-fns-tz\";\r\n  // , utcToZonedTime \r\n\r\nimport {\r\n  CheckboxVisibility, DetailsList, IColumn,\r\n  DetailsListLayoutMode, Selection, CommandBar, DefaultButton, ComboBox, IComboBox, IComboBoxOption\r\n} from 'office-ui-fabric-react';\r\nimport { ISelection, SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\n// import { WebPartContext } from '@microsoft/sp-webpart-base';\r\n//import { SetContext } from '../../semtalkportal/restinterface';\r\n//import { NodeTable, Search, SearchDiagram } from '../../semtalkportal/dbase';\r\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { IObjectBase } from \"../../application/tbase/Interface\";\r\n\r\n// import { addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\n// import { Guid } from \"guid-typescript\";\r\n// import * as strings from 'SemTalkStrings';\r\nimport { IMongoOption, mgGetItem, mgSetValue, mgUnsetValue } from '../../SemTalkMongoServer';\r\n// import { ISPExplorer } from '../../application/explorer/spexplorerinterface';\r\n\r\n\r\nexport interface ISemTalkModelPropProps {\r\n  title?: string;\r\n  semtalk: IVisioRDFS;\r\n  // context?: WebPartContext;\r\n  goodlist?: [];\r\n  mongo: IMongoOption;\r\n  library: string;\r\n  docname: string;\r\n}\r\ninterface IModelPropertyTable {\r\n  ID: number;\r\n  PropName: string;\r\n  // PropType: SemTalkType;\r\n  PropValue: string;\r\n\r\n}\r\nexport interface ISemTalkModelPropState {\r\n  // mongo: IMongoOption;\r\n  base: IObjectBase;\r\n  items: IModelPropertyTable[];\r\n  // modelname: string;\r\n  // attrList: string[] | undefined;\r\n  // spinterface: ISPExplorer | undefined;\r\n  // semtalkonline: string;\r\n  // SDX: string;\r\n  newitem: boolean;\r\n  propname: string;\r\n  propvalue: string;\r\n  sel: ISelection;\r\n}\r\n\r\n\r\n\r\nexport class SemTalkModelProperty extends React.Component<ISemTalkModelPropProps, ISemTalkModelPropState> {\r\n  //  private _list: List;\r\n  // private _detailsList = DetailsList; // React.createRef<IDetailsList>();\r\n  // public callback: Guid;\r\n  constructor(props: ISemTalkModelPropProps) {\r\n    super(props);\r\n    console.log(\"showModelProperties\");\r\n    // this.callback = Guid.create();\r\n    this.state = ({\r\n      // mongo: this.props.mongo,\r\n    //  modelname: this.props.semtalk.base.GetModelAttribute(ModelAttribute.modname)),\r\n      base: this.props.semtalk.base,\r\n      // attrList: undefined,\r\n      items: [],\r\n      // spinterface: this.props.semtalk.explorer,\r\n      // SDX: \"SDX\",\r\n      // semtalkonline: \"semtalkonline\",\r\n      newitem: false,\r\n      propname: \"\",\r\n      propvalue: \"\",\r\n      sel: new Selection({})\r\n    });\r\n    //this.loadModelProperties();\r\n  }\r\n\r\n  // private mounted: boolean = false;\r\n  public componentDidMount() {\r\n    // if (this.props.context && this.props.filter) {\r\n    //   SetContext(this.props.context, this.props.filter, this.props.token, this.props.service);\r\n    // }\r\n    // addCallBack(this);\r\n    this.getItems();\r\n    // this.mounted = true;\r\n  }\r\n  public componentWillUnmount() {\r\n    // removeCallBack(this);\r\n    // this.saveModelProperties();\r\n    // this.mounted = false;\r\n  }\r\n  \r\n  private getItems = async (): Promise<void> => {\r\n    let items: IModelPropertyTable[] = [];\r\n\r\n    // let gl: string[] | undefined = [];\r\n\r\n    if (this.props.mongo.usemongo) {\r\n      let item = await mgGetItem(this.props.mongo, this.props.mongo.dbname, this.props.mongo.documents, this.props.docname);\r\n      // if (gl.length == 0)\r\n      // {\r\n      //   gl = Object.keys(attrList).toString().split(\",\");\r\n      // }\r\n      // console.log(attrList);\r\n      for (let propname in item) {\r\n        if (propname !== \"_id\" && propname !== \"value\" && propname !== \"name\") {\r\n        //  let v = await mgGetValue(this.props.mongo, this.props.mongo.dbname, this.props.mongo.documents, this.props.docname, propname);\r\n        // kann man so machen aber einfacher ist das:\r\n        let v = item[propname];\r\n        \r\n        // console.log(key);\r\n          // console.log(v);\r\n\r\n            let pv: string = v.toString();\r\n            switch (propname) {\r\n                case \"Created\": \r\n                case \"Modified\": {\r\n                    pv = format(parseISO(v), \"dd-MM-yyyy kk:mm:ss\");\r\n              }\r\n            }\r\n            let prop: IModelPropertyTable;\r\n            prop = {\r\n              ID: items.length,\r\n              PropName: propname,\r\n              // PropType: SemTalkType.SemTalkAttribute,\r\n              PropValue: pv\r\n            };\r\n            items.push(prop);\r\n          // }\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      items: items,\r\n    });\r\n  }\r\n\r\n  private commands = [\r\n    {\r\n      key: 'Add',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDNE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Add'\r\n      },\r\n      onClick: (): void => {\r\n        this.setState({\r\n          newitem: true,\r\n          propname: \"\",\r\n          propvalue: \"\"\r\n        });\r\n      }\r\n    },\r\n    {\r\n      key: 'Change',\r\n      name: this.props.semtalk.getResStrListener(\"STREDIT\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Edit'\r\n      },\r\n      onClick: (): void => {\r\n        //this.ChangeItem();\r\n        if (this.state.sel.getSelection().length>0) {\r\n          let sel: any = this.state.sel.getSelection()[0];\r\n          this.setState({\r\n            newitem: true,\r\n            propname: sel.PropName,\r\n            propvalue: sel.PropValue\r\n          });\r\n          }  \r\n      }\r\n    },\r\n    {\r\n      key: 'Delete',\r\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\r\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Delete'\r\n      },\r\n      onClick: (): void => {\r\n        this.deleteItem();\r\n      }\r\n    }];\r\n\r\n  private deleteItem = async () => {\r\n    if (this.state.sel.getSelection().length>0) {\r\n      let sel: any = this.state.sel.getSelection()[0];\r\n      let pn: string = sel.PropName;\r\n      await mgUnsetValue(this.props.mongo, this.props.mongo.dbname, this.props.mongo.documents, this.props.docname, pn);\r\n      await this.getItems();\r\n      }  \r\n  }\r\n  private addnewitem = async () => {\r\n    if (this.state.propname.length > 0) {\r\n      await mgSetValue(this.props.mongo, this.props.mongo.dbname, this.props.mongo.documents, this.props.docname, this.state.propname, this.state.propvalue);\r\n      await this.getItems();\r\n      this.setState({\r\n        newitem: false,\r\n        propname: \"\",\r\n        propvalue: \"\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        newitem: false,\r\n        propname: \"\",\r\n        propvalue: \"\"\r\n      });\r\n    }\r\n  }\r\n  private cancelnew = async () => {\r\n    this.setState({\r\n      newitem: false,\r\n      propname: \"\",\r\n      propvalue: \"\"\r\n    });\r\n  }\r\n  public render(): React.ReactElement<ISemTalkModelPropProps> {\r\n    let r: React.ReactElement<ISemTalkModelPropProps>;\r\n    r = <Fabric>\r\n      {/* <div id=\"stModelPropTest\" className={styles.semTalkModelProperty}><div className={styles.pivottab}></div></div> */}\r\n      <CommandBar id=\"stButtons\" items={this.commands}></CommandBar>\r\n      <div className={styles.semTalkModelProperty} >\r\n        <div className={styles.container}>\r\n          {this.props.title && <div className={styles.row}>\r\n            <div className={styles.column}>\r\n              <div className={styles.title}>{\"Model Properties\"}</div>\r\n            </div>\r\n          </div>\r\n          }\r\n        </div>\r\n      </div>\r\n      {/* <div className={styles.semTalkModelProperty}><div className={styles.pivottab}></div></div> */}\r\n      {this.state.newitem &&\r\n        <div>\r\n          <ComboBox id=\"stModPropName\" text={this.state.propname} label=\"Name\"\r\n            //options={this.instances}\r\n            required={true}\r\n            allowFreeform={true}\r\n            onChange={(_event: React.FormEvent<IComboBox>, _option?: IComboBoxOption, _index?: number, value?: string) => {\r\n              //if (option !== undefined) {\r\n              //this.setState({ newitemvalue: value });\r\n              //} else {\r\n              if (value !== undefined) {\r\n                this.setState({ propname: value });\r\n              }\r\n              //}\r\n            }}></ComboBox>\r\n\r\n          <ComboBox id=\"stModPropValue\" text={this.state.propvalue} label=\"Value\"\r\n            required={true}\r\n            allowFreeform={true}\r\n            onChange={(_event: React.FormEvent<IComboBox>, _option?: IComboBoxOption, _index?: number, value?: string) => {\r\n              if (value !== undefined) {\r\n                this.setState({ propvalue: value });\r\n              }\r\n            }}>\r\n          </ComboBox>\r\n          {/* <div className={styles.semTalkModelProperty}><div className={styles.pivottab}></div></div> */}\r\n          <DefaultButton id=\"okButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDOK\")} onClick={this.addnewitem} />\r\n          <DefaultButton id=\"cancelButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\r\n        </div>\r\n      }\r\n      {!this.state.newitem &&\r\n        <DetailsList\r\n          // ref={this._resolveList}\r\n          items={this.state.items}\r\n          compact={true}\r\n          columns={this._columns}\r\n          selectionMode={SelectionMode.single}\r\n          layoutMode={DetailsListLayoutMode.justified}\r\n          selection={this.state.sel}\r\n          checkboxVisibility={CheckboxVisibility.hidden}\r\n        />}\r\n    </Fabric >;\r\n    return r;\r\n  }\r\n\r\n\r\n  private _columns: IColumn[] = [\r\n    {\r\n      key: 'Label',\r\n      name: \"Label\",\r\n      fieldName: 'Label',\r\n      minWidth: 50,\r\n      // maxWidth: 50,\r\n      isResizable: true,\r\n      isMultiline: true,\r\n      onRender: item => (\r\n        <div>{item.PropName}</div>\r\n      )\r\n    },\r\n    {\r\n      key: 'Value',\r\n      name: \"Value\",\r\n      fieldName: 'Value',\r\n      minWidth: 200,\r\n      // maxWidth: 180,\r\n      isResizable: true,\r\n      isMultiline: true,\r\n      onRender: (item: IModelPropertyTable, _index?: number, _column?: IColumn) => {\r\n        return <span>{item.PropValue}</span>;\r\n      }\r\n    }\r\n  ];\r\n}","import * as React from 'react';\r\nimport styles from './SemTalkNavigation.module.scss';\r\nimport {\r\n  IDropdownOption\r\n} from 'office-ui-fabric-react';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { Guid } from \"guid-typescript\";\r\nimport { IVisioRDFS, SemTalkUIConstant } from '../../application/semtalklistener/visiordfsinterface';\r\nimport {\r\n  SemTalkType,\r\n  IObjectBase,\r\n  ISemTalkDiagram,\r\n  SemTalkBaseConstant,\r\n  ISemTalkObject,\r\n  ISemTalkNode\r\n} from \"../../application/tbase/Interface\";\r\nimport { gotoNode, gotoObject } from '../../application/semtalklistener/stglobal';\r\nimport { gotoDocument, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\nimport { TreeView, ITreeItem, TreeViewSelectionMode, TreeItemActionsDisplayMode, SelectChildrenMode } from \"../treeView\";\r\nimport { Process_ElementName } from '../../application/semtalklistener/processInterface';\r\nimport { SemTalkObjectBaseEvent } from '../../application/tbase/Interface';\r\nimport { BPMN_ElementName } from '../../application/semtalklistener/subtask/bpmn/bpmninterface';\r\n\r\n\r\nexport interface ISemTalkNavigationProps {\r\n  title?: string;\r\n  callback: any;\r\n  semtalk: IVisioRDFS;\r\n  // root?: string;\r\n  // islist?: boolean;\r\n  // iscombo?: boolean;\r\n  goodlist?: string[];\r\n  badlist?: string[];\r\n}\r\nexport interface ISemTalkNavigationState {\r\n  // groups: INavLinkGroup[];\r\n  // objectid: number;\r\n  // root: string | undefined;\r\n  diagrams: ISemTalkDiagram[];\r\n  options: IDropdownOption[];\r\n  roleprocesses: number[];\r\n  treeitems: ITreeItem[];\r\n  // selecteditems: ITreeItem[];\r\n}\r\nexport class SemTalkNavigation extends React.Component<ISemTalkNavigationProps, ISemTalkNavigationState> {\r\n  private objects: any = {};\r\n  public callback: Guid;\r\n  private base: IObjectBase;\r\n\r\n  constructor(props: ISemTalkNavigationProps) {\r\n    super(props);\r\n    console.log(\"SemTalkNavigationProps\");\r\n    this.callback = Guid.create();\r\n    this.base = this.props.semtalk.base;\r\n    this.state = {\r\n      // objectid: -1,\r\n      // groups: [],\r\n      // root: this.props.root,\r\n      diagrams: [],\r\n      options: [],\r\n      roleprocesses: [],\r\n      treeitems: [],\r\n      // selecteditems: [],\r\n    };\r\n  }\r\n  private onTreeItemSelect = (items: ITreeItem[]) => {\r\n    //   console.log(\"Items selected: \", items);\r\n    // this.setState({ selecteditems: items });\r\n    if (items.length > 0) {\r\n      this._click(items[0].data[0]);\r\n    }\r\n  }\r\n  private onTreeItemExpandCollapse = (item: ITreeItem, _isExpanded: boolean) => {\r\n    if (!item.data) return;\r\n    // let obj = item.data[0];\r\n    let ob = this.base;\r\n    if (item.children) {\r\n      for (let rx of item.children) {\r\n        let chi = rx.data[0];\r\n        if (ob.IsDiagram(chi)) {\r\n          this.addChildren(rx, chi as ISemTalkDiagram);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private last_object: number = 0;\r\n  private last_node: number = 0;\r\n  private _click = (obj: ISemTalkObject): void => {\r\n    if (obj.ObjectType === SemTalkType.SemTalkDiagram) {\r\n      gotoDocument(obj.ID);\r\n      return;\r\n    }\r\n    let nodes = obj.Nodes();\r\n    if (nodes.length === 0) {\r\n      for (let sl of obj.InvLinkedObjects(SemTalkBaseConstant.SLDisplays)) {\r\n        nodes.push(...sl.Nodes());\r\n      }\r\n    }\r\n    if (nodes.length > 0) {\r\n      let n: ISemTalkNode;\r\n      n = nodes[this.last_node];\r\n      if (this.last_object === 0 || this.last_object === obj.ID) {\r\n        this.last_node += 1;\r\n        if (this.last_node >= nodes.length)\r\n          this.last_node = 0;\r\n      }\r\n      this.last_object = obj.ID;\r\n      gotoNode(n.ID, n.Model.ID, n.Diagram.ID, n.ShapeID);\r\n      return;\r\n    }\r\n    this.last_object = 0;\r\n    this.last_node = 0;\r\n    gotoObject(obj.ID);\r\n  }\r\n\r\n  public badlist = [SemTalkBaseConstant.SLAttachment, SemTalkBaseConstant.SLDocumentInfo,\r\n  BPMN_ElementName.FlowChartElement,\r\n    \"Legend Shape\", \"SAP\", Process_ElementName.SLOfftime,\r\n    \"Funktionsband\", \"Functional band\", SemTalkBaseConstant.SLSwimlane,\r\n  SemTalkBaseConstant.SLComment, SemTalkUIConstant.SLHidden, SemTalkBaseConstant.SLLanguage];\r\n\r\n  private addChildren = (item: any, obj: ISemTalkDiagram) => {\r\n    let children: any[] = [];\r\n    let diag: ISemTalkDiagram = obj as ISemTalkDiagram;\r\n    for (let r of diag.Refinements()) {\r\n      if (r.ID === obj.ID) {\r\n        continue;\r\n      }\r\n      let rx: any = {\r\n        key: r.ID,\r\n        label: r.ID2NameNsp(),\r\n        //   subLabel: r.Comment,\r\n        data: [r, item],\r\n        iconProps: {\r\n          iconName: 'Document'\r\n        },\r\n        actions: [{\r\n          title: this.props.semtalk.getResStrListener(\"STRBROWSE\"),\r\n          iconProps: {\r\n            iconName: 'Diamond'\r\n          },\r\n          id: \"BrowseItem\",\r\n          actionCallback: async (treeItem: ITreeItem) => {\r\n            // this.exportItem([treeItem]);\r\n            gotoDocument(treeItem.data[0].ID);\r\n          }\r\n        }]\r\n      };\r\n      rx.actions.push({\r\n        title: \"Edit\",\r\n        iconProps: {\r\n          iconName: 'Edit'\r\n        },\r\n        id: \"EditItem\",\r\n        actionCallback: async (treeItem: ITreeItem) => {\r\n          // this.exportItem([treeItem]);\r\n          gotoDocument(treeItem.data[0].ID);\r\n          this.props.callback.editPage();\r\n          console.log(treeItem);\r\n        }\r\n      });\r\n      rx.actions.push({\r\n        title: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\r\n        iconProps: {\r\n          iconName: 'Delete'\r\n        },\r\n        id: \"DeleteItem\",\r\n        actionCallback: async (treeItem: ITreeItem) => {\r\n          // this.exportItem([treeItem]);\r\n          gotoDocument(treeItem.data[0].ID);\r\n          this.props.callback.deletePage();\r\n        }\r\n      });\r\n      children.push(rx);\r\n    }\r\n    for (let n of diag.Contents()) {\r\n      let r = n.Model;\r\n      let logourl: string = \"\";\r\n      if ((r.ObjectType === SemTalkType.SemTalkInstance ||\r\n        r.ObjectType === SemTalkType.SemTalkClass) && r.Refinement === null) {\r\n        let sysc = r.SystemClass();\r\n        if (sysc) {\r\n          if (this.badlist.indexOf(sysc.ObjectName) > -1) continue;\r\n          for (let mst of this.props.semtalk.masters) {\r\n            if (mst[\"name\"] === sysc.ObjectName) {\r\n              logourl = mst[\"logo\"];\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        let rx: any = {\r\n          key: r.ID,\r\n          label: r.ID2NameNsp(),\r\n          //   subLabel: r.Comment,\r\n          data: [r, item],\r\n          imageProps: { logourl: logourl },\r\n          actions: [{\r\n            title: this.props.semtalk.getResStrListener(\"STRBROWSE\"),\r\n            iconProps: {\r\n              iconName: 'Diamond'\r\n            },\r\n            id: \"BrowseItem\",\r\n            actionCallback: async (treeItem: ITreeItem) => {\r\n              // this.exportItem([treeItem]);\r\n              this._click(treeItem.data[0]);\r\n            }\r\n          }]\r\n        };\r\n        this.objects[r.ID + \"_\"] = rx;\r\n        if (!rx.actions) rx.actions = [];\r\n        rx.actions.push({\r\n          title: this.props.semtalk.getResStrListener(\"STRDLHTMLPROPS\"),\r\n          iconProps: {\r\n            iconName: 'Edit'\r\n          },\r\n          id: \"EditItem\",\r\n          actionCallback: async (treeItem: ITreeItem) => {\r\n            // this.exportItem([treeItem]);\r\n            this.props.semtalk.clearSelection();\r\n            // gotoObject(treeItem.data[0].ID);\r\n            this.props.callback.editObject(treeItem.data[0].ID);\r\n            console.log(treeItem);\r\n          }\r\n        });\r\n        rx.actions.push({\r\n          title: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\r\n          iconProps: {\r\n            iconName: 'Delete'\r\n          },\r\n          id: \"DeleteItem\",\r\n          actionCallback: async (treeItem: ITreeItem) => {\r\n            // this.exportItem([treeItem]);\r\n            this.props.semtalk.clearSelection();\r\n            gotoObject(treeItem.data[0].ID);\r\n            this.props.callback.deleteObject();\r\n          }\r\n        });\r\n        children.push(rx);\r\n      }\r\n    }\r\n    if (children.length > 0) {\r\n      children = children.sort((x: any, y: any) => (x.label as string).localeCompare((y.label as string)));\r\n      item.children = children;\r\n    } else {\r\n      item.children = undefined;\r\n    }\r\n    item.actions = [];\r\n    if (obj.ObjectBase.IsDiagram(obj)) {\r\n      item.actions.push({\r\n        title: this.props.semtalk.getResStrListener(\"STRBROWSE\"),\r\n        iconProps: {\r\n          iconName: 'Diamond'\r\n        },\r\n        id: \"BrowseItem\",\r\n        actionCallback: async (treeItem: ITreeItem) => {\r\n          // this.exportItem([treeItem]);\r\n          gotoDocument(treeItem.data[0].ID);\r\n        }\r\n      });\r\n      item.actions.push({\r\n        title: this.props.semtalk.getResStrListener(\"STRDLHTMLPROPS\"),\r\n        iconProps: {\r\n          iconName: 'Edit'\r\n        },\r\n        id: \"EditItem\",\r\n        actionCallback: async (treeItem: ITreeItem) => {\r\n          // this.exportItem([treeItem]);\r\n          gotoDocument(treeItem.data[0].ID);\r\n          this.props.callback.editPage();\r\n        }\r\n      });\r\n      item.actions.push({\r\n        title: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\r\n        iconProps: {\r\n          iconName: 'Delete'\r\n        },\r\n        id: \"DeleteItem\",\r\n        actionCallback: async (treeItem: ITreeItem) => {\r\n          // this.exportItem([treeItem]);\r\n          gotoDocument(treeItem.data[0].ID);\r\n          this.props.callback.deletePage();\r\n        }\r\n      });\r\n    }\r\n  }\r\n  private loadTree = () => {\r\n    let treeitems: any[] = [];\r\n    let ob = this.base;\r\n    this.objects = {};\r\n\r\n    // let sitems: any[] = [];\r\n    // let uitems: any[] = [];\r\n\r\n    const bl: string[] = [SemTalkBaseConstant.SLHas];\r\n    let alist = ob.AllDiagramTypes();\r\n    alist.sort((x, y) => { return x.ObjectCaption.localeCompare(y.ObjectCaption); });\r\n    for (let r of alist) {\r\n      if (r.ObjectType === SemTalkType.SemTalkDiagramType && bl.indexOf(r.ObjectName) < 0) {\r\n        let rx: any = {\r\n          key: r.ID,\r\n          label: r.ID2NameNsp(),\r\n          // subLabel: r.Comment,\r\n          data: [r, null],\r\n        };\r\n        let clist: any[] = [];\r\n        for (let ref of r.AllRootDiagrams()) {\r\n          let rd: any = {\r\n            key: ref.ID,\r\n            label: ref.ID2NameNsp(),\r\n            iconProps: {\r\n              iconName: 'Document'\r\n            },\r\n            // subLabel: r.Comment,\r\n            data: [ref, rx],\r\n          };\r\n          this.objects[ref.ID + \"_\"] = rd;\r\n          clist.push(rd);\r\n          this.addChildren(rd, ref);\r\n        }\r\n        if (clist.length > 0) {\r\n          clist = clist.sort((x: any, y: any) => (x.label as string).localeCompare((y.label as string)));\r\n          rx.children = clist;\r\n          treeitems.push(rx);\r\n        }\r\n      }\r\n    }\r\n    this.setState({ treeitems: treeitems });\r\n  }\r\n  private UpdateByID = (id: number) => {\r\n    let item = this.objects[id + \"_\"];\r\n    if (item) {\r\n      this.updateRec(item, id);\r\n    }\r\n    //  for (let item of this.state.treeitems) {\r\n    //     this.updateRec(item, id);\r\n    //   }\r\n  }\r\n  private updateRec = (item: any, id: number) => {\r\n    if (item.key === id) {\r\n      item.label = item.data[0].ID2NameNsp();\r\n      if ((item.data[0] as ISemTalkObject).ObjectType === SemTalkType.SemTalkDiagram) {\r\n        this.removeRec(item);\r\n        if (this.base.IsDiagram(item.data[0])) {\r\n          this.addChildren(item, item.data[0]);\r\n          if (item.children) {\r\n            for (let si of item.children) {\r\n              let obj = si.data[0] as ISemTalkObject;\r\n              if (this.base.IsDiagram(obj)) {\r\n                this.addChildren(si, (obj as ISemTalkDiagram));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      //' force repaint'\r\n      this.setState({ treeitems: this.state.treeitems });\r\n    }\r\n    // if (item.children)\r\n    //   for (let citem of item.children) {\r\n    //     this.updateRec(citem, id);\r\n    //   }\r\n  }\r\n  private RemoveByID = (id: number) => {\r\n    let item = this.objects[id + \"_\"];\r\n    if (item) {\r\n      // delete this.objects[id + \"_\"];\r\n      let par = item.data[1];\r\n      if (par !== null) {\r\n        this.removeRec(par);\r\n        if (this.base.IsDiagramType(par.data[0])) {\r\n          this.loadTree();\r\n          return;\r\n        }\r\n        if (this.base.IsDiagram(par.data[0])) {\r\n          this.addChildren(par, par.data[0]);\r\n          if (par.children) {\r\n            for (let si of par.children) {\r\n              let obj = si.data[0] as ISemTalkObject;\r\n              if (this.base.IsDiagram(obj)) {\r\n                this.addChildren(si, (obj as ISemTalkDiagram));\r\n              }\r\n            }\r\n          }\r\n        }\r\n        //' force repaint'\r\n        this.setState({ treeitems: this.state.treeitems });\r\n      }\r\n    }\r\n  }\r\n  private removeRec = (item: any) => {\r\n    if (item.children) {\r\n      for (let citem of item.children) {\r\n        let id = citem.data[0].ID;\r\n        delete this.objects[id + \"_\"];\r\n        this.removeRec(citem);\r\n      }\r\n      item.children = undefined;\r\n    }\r\n  }\r\n\r\n  // private renderCustomTreeItem = (item: ITreeItem): JSX.Element => {\r\n  //   return (\r\n  //     <span>\r\n  //       {\r\n  //         item.iconProps &&\r\n  //         <i className={\"ms-Icon ms-Icon--\" + item.iconProps.iconName} style={{ paddingRight: '4px' }} />\r\n  //       }\r\n  //       {item.label}\r\n  //     </span>\r\n  //   );\r\n  // }\r\n  // private _columns: IColumn[] = [\r\n  //   {\r\n  //     key: 'diag',\r\n  //     name: \"Diagram\",\r\n  //     fieldName: 'ObjectCaption',\r\n  //     minWidth: 100,\r\n  //     // maxWidth: 180,\r\n  //     isResizable: true,\r\n  //     isMultiline: true,\r\n  //     onRender: item => (\r\n  //       <Link key={item.ID} onClick={() => this._clickany(item)}>\r\n  //         {item.ObjectCaption}\r\n  //       </Link>\r\n  //     )\r\n  //   }\r\n  // ];\r\n  public render(): React.ReactElement<ISemTalkNavigationProps> {\r\n    return (\r\n      <Fabric>\r\n        <div className={styles.semTalkNavigation} >\r\n          <div className={styles.container}>\r\n            {this.props.title &&\r\n              <div className={styles.row}>\r\n                <div className={styles.column}>\r\n                  <div className={styles.title}>{this.props.title}</div>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div >\r\n        </div >\r\n        {true &&\r\n          <div>\r\n            <TreeView\r\n              items={this.state.treeitems}\r\n              defaultExpanded={false}\r\n              selectionMode={TreeViewSelectionMode.Multiple}\r\n              selectChildrenIfParentSelected={false}\r\n              selectChildrenMode={SelectChildrenMode.None}\r\n              showCheckboxes={false}\r\n              treeItemActionsDisplayMode={TreeItemActionsDisplayMode.ContextualMenu}\r\n              defaultSelectedKeys={['key1', 'key2']}\r\n              expandToSelected={true}\r\n              defaultExpandedChildren={false}\r\n              onSelect={this.onTreeItemSelect}\r\n              onExpandCollapse={this.onTreeItemExpandCollapse}\r\n              onRenderItem={undefined}\r\n            />\r\n          </div>\r\n        }\r\n        {/* {this.props.islist &&\r\n          <DetailsList\r\n            items={this.state.diagrams}\r\n            compact={true}\r\n            columns={this._columns}\r\n            selectionMode={SelectionMode.single}\r\n            layoutMode={DetailsListLayoutMode.justified}\r\n            selection={this._selection}\r\n            checkboxVisibility={CheckboxVisibility.hidden}\r\n          />\r\n        } */}\r\n        {/* {this.props.iscombo &&\r\n          <Dropdown\r\n            // ref={this._resolveList}\r\n            onChange={this._onOptionChange}\r\n            options={this.state.options}\r\n          />\r\n        } */}\r\n      </Fabric>\r\n    );\r\n  }\r\n  // private _onRenderGroupHeader(group: INavLinkGroup): JSX.Element {\r\n  //   return <h3>{group.name}</h3>;\r\n  // }\r\n\r\n  private mounted: boolean = false;\r\n  public componentDidMount() {\r\n    // if (this.props.context && this.props.filter) {\r\n    // SetContext(this.props.context, this.props.filter, this.props.token, this.props.service);\r\n    // }\r\n    // if (!this.props.islist && !this.props.iscombo) {\r\n    this.loadTree();\r\n    // } else {\r\n    //   this.load(this.props.root);\r\n    // }\r\n    addCallBack(this);\r\n    this.props.semtalk.base._callbacks.push(this);\r\n    this.mounted = true;\r\n\r\n  }\r\n\r\n  // private isBad(s: string): boolean {\r\n  //   let _isbad: boolean = false;\r\n  //   if (this.props.badlist !== undefined) {\r\n  //     this.props.badlist.forEach((b: string) => {\r\n  //       if (s.indexOf(b) === 0) {\r\n  //         _isbad = true;\r\n  //       }\r\n  //     });\r\n  //   }\r\n  //   return _isbad;\r\n  // }\r\n  // private isExtern(id: number): boolean {\r\n  //   // let ext = getModel();\r\n  //   // return (ext > -1 && ext !== id);\r\n  //   return false;\r\n  // }\r\n  // private async load(root: string | undefined) {\r\n  //   // const showgeneric = (this.state.base.GetModelAttribute(ModelAttribute.ShowGenericDiagrams) === \"True\");\r\n  //   if ((this.props.islist !== undefined && this.props.islist) || (this.props.iscombo !== undefined && this.props.iscombo)) {\r\n  //     let li: ISemTalkDiagram[] = [];\r\n  //     if (root !== undefined && root.length > 0) {\r\n  //       const dt = this.base.FindClass(root) as ISemTalkDiagramType;\r\n  //       for (let diag of dt.Instances()) {\r\n  //         if (!this.isBad(diag.ObjectCaption)) {\r\n  //           li.push(diag);\r\n  //         }\r\n  //       }\r\n  //       let op: IDropdownOption[] = [];\r\n  //       if (this.props.iscombo) {\r\n  //         op = li.map((d) => { return { key: d.ID, text: d.ObjectCaption }; });\r\n  //       }\r\n  //       this.setState({ diagrams: li, options: op });\r\n  //     } else {\r\n  //       for (let diag of this.base.AllDiagrams()) {\r\n  //         if (!this.isBad(diag.ObjectCaption)) {\r\n  //           li.push(diag);\r\n  //         }\r\n  //         let op: IDropdownOption[] = [];\r\n  //         if (this.props.iscombo) {\r\n  //           op = li.map((d) => { return { key: d.ID, text: d.ObjectCaption }; });\r\n  //         }\r\n  //         this.setState({ diagrams: li, options: op });\r\n  //       }\r\n  //     }\r\n  //   } else {\r\n\r\n  //   }\r\n  // }\r\n\r\n  public componentWillUnmount() {\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n  }\r\n\r\n  private eventlistener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    } let md: any;\r\n    let mtype: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkObjectBaseEvent.OnDiagramDeleted: {\r\n        this.RemoveByID(Number(md.objectid));\r\n        break;\r\n      }\r\n      case SemTalkObjectBaseEvent.OnRenamed: {\r\n        this.UpdateByID(Number(md.objectid));\r\n        break;\r\n      }\r\n      case SemTalkObjectBaseEvent.OnClassChanged: {\r\n        this.UpdateByID(Number(md.objectid));\r\n        break;\r\n      }\r\n      case SemTalkObjectBaseEvent.OnNodeCreated: {\r\n        const diagname = md.arg0;\r\n        const diag = this.props.semtalk.base.FindDiagram(diagname);\r\n        if (diag) {\r\n          this.UpdateByID(Number(diag.ID));\r\n        }\r\n        break;\r\n      }\r\n      case SemTalkObjectBaseEvent.OnNodeDeleted: {\r\n        const diagname = md.arg0;\r\n        const diag = this.props.semtalk.base.FindDiagram(diagname);\r\n        if (diag) {\r\n          this.UpdateByID(Number(diag.ID));\r\n        }\r\n        break;\r\n      }\r\n      case SemTalkObjectBaseEvent.OnRefined: {\r\n        const id = md.objectid;\r\n        let item = this.objects[id + \"_\"];\r\n        if (item) {\r\n          const diag = item.data[1];\r\n          if (diag) {\r\n            this.loadTree();\r\n            // this.UpdateByID(Number(diag.key));\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case SemTalkObjectBaseEvent.OnDetached: {\r\n        const id = md.objectid;\r\n        let item = this.objects[id + \"_\"];\r\n        if (item) {\r\n          const diag = item.data[1];\r\n          if (diag) {\r\n            this.loadTree();\r\n            // this.UpdateByID(Number(diag.key));\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      // case \"gotoRole\": {\r\n      //   console.debug(\"gotoRole recieved\");\r\n      //   this.setState({ roleprocesses: md.roleprocesses });\r\n      //   if (!this.props.islist && !this.props.iscombo) {\r\n      //     this.loadTree();\r\n      //   } else {\r\n      //     this.load(this.props.root);\r\n      //   }\r\n      //   break;\r\n      // }\r\n    }\r\n  }\r\n  public getMessage(e: any) {\r\n    this.eventlistener(e);\r\n  }\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventlistener({ data: mstr });\r\n  }\r\n\r\n  // private _onOptionChange = (_ev: any, option: IDropdownOption | undefined, _index?: number, _value?: string): void => {\r\n  //   if (option) {\r\n  //     let n: number = option.key as number;\r\n  //     gotoDocument(n);\r\n  //   }\r\n  // }\r\n  // private _clickany = (d: ISemTalkDiagram): any => {\r\n  //   gotoDocument(d.ID);\r\n  // }\r\n}\r\n","/* eslint-disable no-useless-concat */\r\nimport * as React from 'react';\r\nimport styles from './SemTalkObjects.module.scss';\r\nimport {\r\n  // Link, Selection, IColumn, DetailsList, DetailsListLayoutMode,\r\n  // CheckboxVisibility, Dropdown, IDropdownOption,\r\n  Fabric\r\n} from 'office-ui-fabric-react';\r\n// import { Nav } from 'office-ui-fabric-react/lib/Nav';\r\n// import { INavLinkGroup } from 'office-ui-fabric-react/lib/components/Nav/Nav.types';\r\n// import { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\r\n//import { SetContext } from '../../semtalkportal/restinterface';\r\n// import { any } from '@microsoft/sp-webpart-base';\r\nimport { Guid } from \"guid-typescript\";\r\n// import * as strings from 'SemTalkStrings';\r\nimport { IVisioRDFS, SemTalkUIConstant } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { Process_ElementName } from '../../application/semtalklistener/processInterface';\r\nimport {\r\n  IObjectBase, ISemTalkObject, SemTalkType,\r\n  ISemTalkClass, ISemTalkNode, ISemTalkSystemClass,\r\n  SemTalkBaseConstant\r\n} from \"../../application/tbase/Interface\";\r\nimport { gotoNode, gotoObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\n// import { TreeView, ITreeItem, TreeViewSelectionMode, TreeItemActionsDisplayMode } from \"@pnp/spfx-controls-react/lib/TreeView\";\r\nimport { TreeView, ITreeItem, TreeViewSelectionMode, TreeItemActionsDisplayMode, SelectChildrenMode } from \"../treeView\";\r\nimport { BPMN_ElementName } from '../../application/semtalklistener/subtask/bpmn/bpmninterface';\r\nimport { SemTalkObjectBaseEvent } from '../../application/tbase/Interface';\r\n\r\n\r\nexport interface ISemTalkObjectsProps {\r\n  semtalk: IVisioRDFS;\r\n  callback: any;\r\n  title?: string;\r\n  root?: string;\r\n  islist?: boolean;\r\n  iscombo?: boolean;\r\n  goodlist?: string;\r\n  badlist?: string;\r\n}\r\nexport interface ISemTalkObjectsState {\r\n  treeitems: ITreeItem[];\r\n  assocname: string;\r\n}\r\n\r\nexport class SemTalkObjects extends React.Component<ISemTalkObjectsProps, ISemTalkObjectsState> {\r\n  // private _selection: Selection;\r\n  public callback: Guid;\r\n  public badlist = [SemTalkBaseConstant.SLAttachment, SemTalkBaseConstant.SLDocumentInfo,\r\n  BPMN_ElementName.FlowChartElement,\r\n    \"Legend Shape\", \"SAP\",\r\n  Process_ElementName.SLOfftime, Process_ElementName.SLBreakpoint,\r\n    \"Funktionsband\", \"Functional band\",\r\n  SemTalkBaseConstant.SLSwimlane,\r\n  SemTalkBaseConstant.SLComment,\r\n  SemTalkUIConstant.SLHidden,\r\n  SemTalkUIConstant.SemTalkUserTab,\r\n  SemTalkBaseConstant.SLLanguage];\r\n  private objects: any = {};\r\n  private base: IObjectBase;\r\n\r\n  constructor(props: ISemTalkObjectsProps) {\r\n    super(props);\r\n    console.log(\"SemTalkObjectsProps\");\r\n    this.callback = Guid.create();\r\n    this.base = this.props.semtalk.base;\r\n\r\n    this.state = {\r\n      treeitems: [],\r\n      // selecteditems: [],\r\n      assocname: SemTalkBaseConstant.SLSubClassOf\r\n    };\r\n  }\r\n  private onTreeItemSelect = (items: ITreeItem[]) => {\r\n    //   console.log(\"Items selected: \", items);\r\n    // this.setState({ selecteditems: items });\r\n    if (items.length > 0) {\r\n      this._click(items[0].data[0]);\r\n    }\r\n  }\r\n  private onTreeItemExpandCollapse = (item: ITreeItem, _isExpanded: boolean) => {\r\n    if (!item.data) return;\r\n    let obj = item.data[0];\r\n    let ob = this.base;\r\n    if (item.children && obj && ob.IsClass(obj)) {\r\n      for (let rx of item.children) {\r\n        let chi = rx.data[0];\r\n        if (ob.IsClass(chi)) {\r\n          this.addChildren(rx, chi as ISemTalkClass, this.state.assocname);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private last_object: number = 0;\r\n  private last_node: number = 0;\r\n  private _click = (obj: ISemTalkObject): void => {\r\n    let nodes = obj.Nodes();\r\n    if (nodes.length === 0) {\r\n      for (let sl of obj.InvLinkedObjects(SemTalkBaseConstant.SLDisplays)) {\r\n        nodes.push(...sl.Nodes());\r\n      }\r\n    }\r\n    if (nodes.length > 0) {\r\n      let n: ISemTalkNode;\r\n      n = nodes[this.last_node];\r\n      if (this.last_object === 0 || this.last_object === obj.ID) {\r\n        this.last_node += 1;\r\n        if (this.last_node >= nodes.length)\r\n          this.last_node = 0;\r\n      }\r\n      this.last_object = obj.ID;\r\n      gotoNode(n.ID, n.Model.ID, n.Diagram.ID, n.ShapeID);\r\n      return;\r\n    }\r\n    this.last_object = 0;\r\n    this.last_node = 0;\r\n    gotoObject(obj.ID);\r\n  }\r\n  private addChildren = (item: any, obj: ISemTalkObject, assocname: string) => {\r\n    let children: any[] = [];\r\n    if (!obj.ObjectBase.IsClass(obj)) return;\r\n    let cl: ISemTalkClass = obj as ISemTalkClass;\r\n    if (assocname === SemTalkBaseConstant.SLSubClassOf) {\r\n      let alist = cl.SubClasses();\r\n      alist = alist.sort((x, y) => { return x.ObjectCaption.localeCompare(y.ObjectCaption); });\r\n      for (let r of alist) {\r\n        if (this.badlist.indexOf(r.ObjectName) > -1) continue;\r\n        let rx: any = {\r\n          key: r.ID,\r\n          label: r.ID2NameNsp(),\r\n          // subLabel: r.Comment,\r\n          data: [r, item],\r\n          actions: [{\r\n            title: this.props.semtalk.getResStrListener(\"STRDLHTMLPROPS\"),\r\n            iconProps: {\r\n              iconName: 'Edit'\r\n            },\r\n            id: \"EditItem\",\r\n            actionCallback: async (treeItem: ITreeItem) => {\r\n              // this.exportItem([treeItem]);\r\n              this.props.semtalk.clearSelection();\r\n              // gotoObject(treeItem.data[0].ID);\r\n              this.props.callback.editObject(treeItem.data[0].ID);\r\n              //  console.log(treeItem);\r\n            }\r\n          }]\r\n        };\r\n        this.objects[r.ID + \"_\"] = rx;\r\n        rx.actions.push({\r\n          title: this.props.semtalk.getResStr(\"STRNEWCLASS\"),\r\n          id: \"NewClassItem\",\r\n          iconProps: {\r\n            iconName: 'Add'\r\n          },\r\n          actionCallback: async (treeItem: ITreeItem) => {\r\n            let sup: ISemTalkClass = treeItem.data[0];\r\n            let base: IObjectBase = sup.ObjectBase;\r\n            base.maxid = base.maxid + 1;\r\n            let cname = \"Class\" + \".\" + base.maxid;\r\n            let clobj: ISemTalkClass;\r\n            let info = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLInformation));\r\n            if (info && (info === sup || sup.IsParent(info))) {\r\n              cname = info.ObjectName.substr(0, 2) + \"#\" + cname;\r\n              clobj = base.MakeBusinessClass(cname, base.maxid);\r\n            } else {\r\n              clobj = base.MakeClass(cname, base.maxid);\r\n            }\r\n            if (!clobj.IsParent(sup)) {\r\n              clobj.AddSubclassOf(sup);\r\n            }\r\n            // gotoObject(clobj.ID);\r\n            this.props.callback.editObject(clobj.ID);\r\n            // if (treeItem.data[1] !== null) {\r\n            //   this.addChildren(treeItem.data[1], sup, assocname);\r\n            // }\r\n            this.addChildren(treeItem, sup, assocname);\r\n            this.onTreeItemExpandCollapse(treeItem, true);\r\n            this.setState({ treeitems: this.state.treeitems });\r\n          }\r\n        });\r\n        rx.actions.push({\r\n          title: this.props.semtalk.getResStr(\"STRNEWINST\"),\r\n          id: \"NewInstanceItem\",\r\n          iconProps: {\r\n            iconName: 'Add'\r\n          },\r\n          actionCallback: async (treeItem: ITreeItem) => {\r\n            let sup: ISemTalkClass = treeItem.data[0];\r\n            let base: IObjectBase = sup.ObjectBase;\r\n            base.maxid = base.maxid + 1;\r\n            let inst = sup.MakeInstance();\r\n            // gotoObject(inst.ID);\r\n            this.props.callback.editObject(inst.ID);\r\n            this.addChildren(treeItem, sup, assocname);\r\n            // this.addChildren(treeItem.data[1], sup, assocname);\r\n            // this.onTreeItemExpandCollapse(item,true);\r\n            this.setState({ treeitems: this.state.treeitems });\r\n          }\r\n        });\r\n        children.push(rx);\r\n      }\r\n      let ilist = cl.Instances();\r\n      ilist.sort((x, y) => { return x.ObjectCaption.localeCompare(y.ObjectCaption); });\r\n      for (let r of ilist) {\r\n        let logourl: string = \"\";\r\n        let sysc = cl.SystemClass();\r\n        if (sysc) {\r\n          for (let mst of this.props.semtalk.masters) {\r\n            if (mst[\"name\"] === sysc.ObjectName) {\r\n              logourl = mst[\"logo\"];\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        let rx: ITreeItem = {\r\n          key: r.ID.toString(),\r\n          label: r.ID2NameNsp(),\r\n          // subLabel: r.Comment,\r\n          // iconProps: { iconName: 'Document',\r\n          // style: {} },\r\n          imageProps: { logourl: logourl },\r\n          data: [r, item],\r\n          actions: [{\r\n            title: this.props.semtalk.getResStrListener(\"STRBROWSE\"),\r\n            iconProps: {\r\n              iconName: 'Diamond'\r\n            },\r\n            id: \"BrowseItem\",\r\n            actionCallback: async (treeItem: ITreeItem) => {\r\n              // this.exportItem([treeItem]);\r\n              this._click(treeItem.data[0]);\r\n            }\r\n          }]\r\n        };\r\n        this.objects[r.ID + \"_\"] = rx;\r\n        if (!rx.actions) rx.actions = [];\r\n        rx.actions.push({\r\n          title: this.props.semtalk.getResStrListener(\"STRDLHTMLPROPS\"),\r\n          iconProps: {\r\n            iconName: 'Edit'\r\n          },\r\n          id: \"EditItem\",\r\n          actionCallback: async (treeItem: ITreeItem) => {\r\n            // this.exportItem([treeItem]);\r\n            this.props.semtalk.clearSelection();\r\n            // gotoObject(treeItem.data[0].ID);\r\n            this.props.callback.editObject(treeItem.data[0].ID);\r\n            console.log(treeItem);\r\n          }\r\n        });\r\n        if (!(obj.ObjectBase.IsClass(obj) && (obj as ISemTalkClass).IsReadOnly)) {\r\n          rx.actions.push({\r\n            title: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\r\n            iconProps: {\r\n              iconName: 'Delete'\r\n            },\r\n            id: \"DeleteItem\",\r\n            actionCallback: async (treeItem: ITreeItem) => {\r\n              // this.exportItem([treeItem]);\r\n              this.props.semtalk.clearSelection();\r\n              gotoObject(treeItem.data[0].ID);\r\n              this.props.callback.deleteObject();\r\n            }\r\n          });\r\n        }\r\n        children.push(rx);\r\n      }\r\n    }\r\n    if (children.length > 0) {\r\n      item.children = children;\r\n    } else {\r\n      item.children = undefined;\r\n    }\r\n    item.actions = [];\r\n    item.actions.push({\r\n      title: this.props.semtalk.getResStrListener(\"STRDLHTMLPROPS\"),\r\n      iconProps: {\r\n        iconName: 'Edit'\r\n      },\r\n      id: \"EditItem\",\r\n      actionCallback: async (treeItem: ITreeItem) => {\r\n        // this.exportItem([treeItem]);\r\n        this.props.semtalk.clearSelection();\r\n        // gotoObject(treeItem.data[0].ID);\r\n        this.props.callback.editObject(treeItem.data[0].ID);\r\n      }\r\n    });\r\n    item.actions.push({\r\n      title: this.props.semtalk.getResStr(\"STRNEWCLASS\"),\r\n      id: \"NewClassItem\",\r\n      iconProps: {\r\n        iconName: 'Add'\r\n      },\r\n      actionCallback: async (treeItem: ITreeItem) => {\r\n        let sup: ISemTalkClass = treeItem.data[0];\r\n        let base: IObjectBase = sup.ObjectBase;\r\n        base.maxid = base.maxid + 1;\r\n        let cname = \"Class\" + \".\" + base.maxid;\r\n        let clobj: ISemTalkClass;\r\n        let info = base.FindSystemClass(base.GetModelAttribute(Process_ElementName.SLInformation));\r\n        if (info && (info === sup || sup.IsParent(info))) {\r\n          cname = info.ObjectName.substr(0, 2) + \"#\" + cname;\r\n          clobj = base.MakeBusinessClass(cname, base.maxid);\r\n        } else {\r\n          clobj = base.MakeClass(cname, base.maxid);\r\n        }\r\n        if (!clobj.IsParent(sup)) {\r\n          clobj.AddSubclassOf(sup);\r\n        }\r\n        // gotoObject(clobj.ID);\r\n        this.props.callback.editObject(clobj.ID);\r\n        // if (treeItem.data[1] !== null) {\r\n        //   this.addChildren(treeItem.data[1], sup, assocname);\r\n        // }\r\n        this.addChildren(item, obj, assocname);\r\n        this.onTreeItemExpandCollapse(item, true);\r\n        this.setState({ treeitems: this.state.treeitems });\r\n      }\r\n    });\r\n    item.actions.push({\r\n      title: this.props.semtalk.getResStr(\"STRNEWINST\"),\r\n      id: \"NewInstanceItem\",\r\n      iconProps: {\r\n        iconName: 'Add'\r\n      },\r\n      actionCallback: async (treeItem: ITreeItem) => {\r\n        let sup: ISemTalkClass = treeItem.data[0];\r\n        let base: IObjectBase = sup.ObjectBase;\r\n        base.maxid = base.maxid + 1;\r\n        let inst = sup.MakeInstance();\r\n        // gotoObject(inst.ID);\r\n        this.props.callback.editObject(inst.ID);\r\n        this.addChildren(item, obj, assocname);\r\n        // this.addChildren(treeItem.data[1], sup, assocname);\r\n        // this.onTreeItemExpandCollapse(item,true);\r\n        this.setState({ treeitems: this.state.treeitems });\r\n      }\r\n    });\r\n    if (obj.ObjectBase.IsSystemClass(obj)) {\r\n      item.actions.push({\r\n        title: this.props.semtalk.getResStrListener(\"STRDLGLCAPTION\").replace(\":\", \"\"),\r\n        iconProps: {\r\n          iconName: 'Settings'\r\n        },\r\n        id: \"customizeObject\",\r\n        actionCallback: async (treeItem: ITreeItem) => {\r\n          // this.exportItem([treeItem]);\r\n          this.props.semtalk.clearSelection();\r\n          gotoObject(treeItem.data[0].ID);\r\n          this.props.callback.customizeObject();\r\n        }\r\n      });\r\n    }\r\n    if (!(obj.ObjectBase.IsClass(obj) && (obj as ISemTalkClass).IsReadOnly)) {\r\n      item.actions.push({\r\n        title: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\r\n        iconProps: {\r\n          iconName: 'Delete'\r\n        },\r\n        id: \"DeleteItem\",\r\n        actionCallback: async (treeItem: ITreeItem) => {\r\n          // this.exportItem([treeItem]);\r\n          this.props.semtalk.clearSelection();\r\n          gotoObject(treeItem.data[0].ID);\r\n          this.props.callback.deleteObject();\r\n        }\r\n      });\r\n    }\r\n  }\r\n  private load = (assocname: string) => {\r\n    let treeitems: any[] = [];\r\n    this.objects = {};\r\n    let ob = this.base;\r\n    let procroot: ISemTalkSystemClass | null = null;\r\n    let proc = ob.FindDiagramType(ob.GetModelAttribute(Process_ElementName.SLProc));\r\n    if (proc) {\r\n      procroot = proc.Root;\r\n    }\r\n    if (procroot?.Hide) {\r\n      procroot = ob.FindSystemClass(ob.GetModelAttribute(Process_ElementName.SLRoot));\r\n    }\r\n    // const bl: string[] = [SemTalkUIConstant.SLHidden,\r\n    // SemTalkUIConstant.SemTalkUserTab,\r\n    // SemTalkBaseConstant.SLLanguage,\r\n    // SemTalkBaseConstant.SLAttachment, Process_ElementName.SLOfftime,\r\n    // SemTalkBaseConstant.SLComment];\r\n    if (assocname === SemTalkBaseConstant.SLSubClassOf) {\r\n      let alist = ob.AllRootClasses();\r\n      if (procroot && alist.indexOf(procroot) > -1) {\r\n        alist.splice(alist.indexOf(procroot), 1);\r\n        alist.push(...procroot.SubClasses());\r\n      }\r\n      alist = alist.filter((r) => this.badlist.indexOf(r.ObjectName) < 0);\r\n      if (alist.length === 1) {\r\n        let r = alist[0];\r\n        if (ob.IsSystemClass(r)) {\r\n          if ((r as ISemTalkSystemClass).Hide) {\r\n            alist = r.SubClasses();\r\n          }\r\n        }\r\n      }\r\n      alist.sort((x, y) => { return x.ObjectCaption.localeCompare(y.ObjectCaption); });\r\n      for (let r of alist) {\r\n        if (r.ObjectType === SemTalkType.SemTalkClass && this.badlist.indexOf(r.ObjectName) < 0) {\r\n          if (ob.IsSystemClass(r)) {\r\n            if ((r as ISemTalkSystemClass).Hide) {\r\n              continue;\r\n            }\r\n          }\r\n          let rx: any = {\r\n            key: r.ID,\r\n            label: r.ID2NameNsp(),\r\n            // subLabel: r.Comment,\r\n            data: [r, null],\r\n          };\r\n          this.objects[r.ID + \"_\"] = rx;\r\n          this.addChildren(rx, r, assocname);\r\n          treeitems.push(rx);\r\n        }\r\n      }\r\n    }\r\n    this.setState({ treeitems: treeitems });\r\n  }\r\n  private UpdateByID = (id: number) => {\r\n    let item = this.objects[id + \"_\"];\r\n    if (item) {\r\n      this.updateRec(item, id);\r\n    }\r\n  }\r\n  private updateRec = (item: any, id: number) => {\r\n    if (item.key === id) {\r\n      item.label = item.data[0].ID2NameNsp();\r\n      if (this.base.IsClass(item.data[0])) {\r\n        this.removeRec(item);\r\n        this.addChildren(item, item.data[0], this.state.assocname);\r\n        if (item.children) {\r\n          for (let si of item.children) {\r\n            let obj = si.data[0] as ISemTalkObject;\r\n            if (this.base.IsClass(obj)) {\r\n              this.addChildren(si, obj, this.state.assocname);\r\n            }\r\n          }\r\n        }\r\n      }    //' force repaint'\r\n      this.setState({ treeitems: this.state.treeitems });\r\n    }\r\n    // if (item.children)\r\n    //   for (let citem of item.children) {\r\n    //     this.updateRec(citem, id);\r\n    //   }\r\n  }\r\n  // private ReBuildByID = (id: number) => {\r\n  //   let item = this.objects[id + \"_\"];\r\n  //   if (item) {\r\n  //     delete this.objects[id + \"_\"];\r\n  //     this.load(this.state.assocname);\r\n  //     this.removeRec(item);\r\n  //     let par = item.data[1];\r\n  //     if (par !== null) {\r\n  //       this.addChildren(par, par.data[0], this.state.assocname);\r\n  //       if (par.children)\r\n  //         for (let pitem of par.children) {\r\n  //           this.addChildren(pitem, pitem.data[0], this.state.assocname);\r\n  //         }\r\n  //     }\r\n  //   }\r\n  // }\r\n  private RemoveByID = (id: number) => {\r\n    let item = this.objects[id + \"_\"];\r\n    if (item) {\r\n      // delete this.objects[id + \"_\"];\r\n      let par = item.data[1];\r\n      if (par !== null) {\r\n        this.removeRec(par);\r\n        this.addChildren(par, par.data[0], this.state.assocname);\r\n        if (par.children) {\r\n          for (let si of par.children) {\r\n            let obj = si.data[0] as ISemTalkObject;\r\n            if (this.base.IsClass(obj)) {\r\n              this.addChildren(si, obj, this.state.assocname);\r\n            }\r\n          }\r\n        }\r\n        //' force repaint'\r\n        this.setState({ treeitems: this.state.treeitems });\r\n      }\r\n    }\r\n  }\r\n  private removeRec = (item: any) => {\r\n    if (item.children) {\r\n      for (let citem of item.children) {\r\n        let id = citem.data[0].ID;\r\n        delete this.objects[id + \"_\"];\r\n        this.removeRec(citem);\r\n      }\r\n      item.children = undefined;\r\n    }\r\n\r\n  }\r\n\r\n  // private renderCustomTreeItem = (item: ITreeItem): JSX.Element => {\r\n  //   return (\r\n  //     <span>\r\n  //       {\r\n  //         item.iconProps &&\r\n  //         <i className={\"ms-Icon ms-Icon--\" + item.iconProps.iconName} style={{ paddingRight: '4px' }} />\r\n  //       }\r\n  //       {item.label}\r\n  //     </span>\r\n  //   );\r\n  // }\r\n  public render(): React.ReactElement<ISemTalkObjectsProps> {\r\n    return (\r\n      <Fabric>\r\n        <div className={styles.semTalkObjects} >\r\n          <div className={styles.container}>\r\n            {this.props.title &&\r\n              <div className={styles.row}>\r\n                <div className={styles.column}>\r\n                  <div className={styles.title}>{this.props.title}</div>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n        {\r\n          !this.props.islist && !this.props.iscombo &&\r\n          <div>\r\n            <TreeView\r\n              items={this.state.treeitems}\r\n              defaultExpanded={false}\r\n              selectionMode={TreeViewSelectionMode.Multiple}\r\n              selectChildrenIfParentSelected={false}\r\n              selectChildrenMode={SelectChildrenMode.None}\r\n              showCheckboxes={false}\r\n              treeItemActionsDisplayMode={TreeItemActionsDisplayMode.ContextualMenu}\r\n              defaultSelectedKeys={['key1', 'key2']}\r\n              expandToSelected={true}\r\n              defaultExpandedChildren={false}\r\n              onSelect={this.onTreeItemSelect}\r\n              onExpandCollapse={this.onTreeItemExpandCollapse}\r\n              onRenderItem={undefined}\r\n            // onRenderItem={this.renderCustomTreeItem} \r\n            />\r\n          </div>\r\n        }\r\n      </Fabric >\r\n    );\r\n  }\r\n  // private _onRenderGroupHeader(group: INavLinkGroup): JSX.Element {\r\n  //   return <h3>{group.name}</h3>;\r\n  // }\r\n\r\n  private mounted: boolean = false;\r\n  public componentDidMount() {\r\n    // if (this.props.context && this.props.filter) {\r\n    // SetContext(this.props.context, this.props.filter, this.props.token, this.props.service);\r\n    // }\r\n    // this.load(this.props.root);\r\n    this.load(SemTalkBaseConstant.SLSubClassOf);\r\n    addCallBack(this);\r\n    this.props.semtalk.base._callbacks.push(this);\r\n    this.mounted = true;\r\n  }\r\n  public componentWillUnmount() {\r\n    // this.props.semtalk.base._callbacks.remove(this);\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n  }\r\n  private eventlistener = (e: any): void => {\r\n    if (!this.mounted) return;\r\n    let md: any;\r\n    let mtype: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      // case SemTalkObjectBaseEvent.OnDeleted: {\r\n      //   if (this.objects[md.objectid + \"_\"]) {\r\n      //     this.load(this.state.assocname);\r\n      //     // this.ReBuildByID(Number(md.objectid));\r\n      //   }\r\n      //   break;\r\n      // }\r\n      case SemTalkObjectBaseEvent.OnRenamed: {\r\n        this.UpdateByID(Number(md.objectid));\r\n        break;\r\n      }\r\n      case SemTalkObjectBaseEvent.OnSubClassCreated: {\r\n        let cla = this.base.FindClassByID(md.objectid);\r\n        if (cla) {\r\n          this.UpdateByID(Number(cla.ID));\r\n        }\r\n        let oldclass = this.base.FindClass(md.arg2);\r\n        if (oldclass) {\r\n          this.UpdateByID(Number(oldclass.ID));\r\n        }\r\n        // if (this.objects[md.arg2 + \"_\"]) {\r\n        // this.load(this.state.assocname);\r\n        // this.ReBuildByID(Number(md.arg2));\r\n        // }\r\n        break;\r\n      }\r\n      case SemTalkObjectBaseEvent.OnSubClassDeleted: {\r\n        // if (this.objects[md.objectid + \"_\"]) {\r\n        //   this.ReBuildByID(Number(md.objectid));\r\n        // }\r\n        break;\r\n      }\r\n      case SemTalkObjectBaseEvent.OnCreated: {\r\n        let inst = this.base.FindInstanceByID(md.objectid);\r\n        if (inst) {\r\n          let icl = inst.ClassOf();\r\n          if (icl) {\r\n            this.UpdateByID(Number(icl.ID));\r\n          }\r\n        }\r\n        let cl = this.base.FindClassByID(md.objectid);\r\n        if (cl) {\r\n          for (let sup of cl.SuperClasses()) {\r\n            this.UpdateByID(Number(sup.ID));\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case SemTalkObjectBaseEvent.OnClassDeleted:\r\n      case SemTalkObjectBaseEvent.OnInstanceDeleted: {\r\n        this.RemoveByID(md.objectid);\r\n        break;\r\n      }\r\n      case SemTalkObjectBaseEvent.OnClassChanged: {\r\n        let inst = this.base.FindInstanceByID(md.objectid);\r\n        if (inst) {\r\n          this.UpdateByID(Number(inst.ClassOf().ID));\r\n        }\r\n        if (md.arg0) {\r\n          let oldclass = this.base.FindClass(md.arg0);\r\n          if (oldclass) {\r\n            this.UpdateByID(Number(oldclass.ID));\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  public getMessage(e: any) {\r\n    this.eventlistener(e);\r\n  }\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventlistener({ data: mstr });\r\n  }\r\n}","/* eslint-disable no-useless-concat */\nimport * as React from 'react';\nimport styles from './SemTalkAssociationTypes.module.scss';\nimport {\n  //   Link, Selection, IColumn, DetailsList, DetailsListLayoutMode,\n  //   CheckboxVisibility, Dropdown, IDropdownOption,\n  Fabric\n} from 'office-ui-fabric-react';\n// import { Nav } from 'office-ui-fabric-react/lib/Nav';\n// import { INavLinkGroup, INavLink } from 'office-ui-fabric-react/lib/components/Nav/Nav.types';\n// import { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\n//import { SetContext } from '../../semtalkportal/restinterface';\n// import { WebPartContext } from '@microsoft/sp-webpart-base';\nimport { Guid } from \"guid-typescript\";\n// import * as strings from 'SemTalkStrings';\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\nimport { SemTalkType, IObjectBase, ISemTalkAssociationType, ISemTalkObject,\n  SemTalkBaseConstant } from \"../../application/tbase/Interface\";\nimport { gotoObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n// import { TreeView, ITreeItem, TreeViewSelectionMode, TreeItemActionsDisplayMode } from \"@pnp/spfx-controls-react/lib/TreeView\";\nimport { TreeView, ITreeItem, TreeViewSelectionMode, TreeItemActionsDisplayMode, SelectChildrenMode } from \"../treeView\";\nimport { BPMN_AssociationName } from '../../application/semtalklistener/subtask/bpmn/bpmninterface';\nimport { Process_ElementName } from '../../application/semtalklistener/processInterface';\nimport { SemTalkObjectBaseEvent } from '../../application/tbase/Interface';\n\n\nexport interface ISemTalkAssociationTypesProps {\n  semtalk: IVisioRDFS;\n  callback: any;\n  title?: string;\n  // description?: string;\n  // width?: number;\n  // height?: number;\n  // minimize?: boolean;\n  // help?: string;\n  // context?: WebPartContext;\n  // filter: string;\n  // token: string;\n  // root?: string;\n  // service: string;\n  // islist?: boolean;\n  // iscombo?: boolean;\n  // goodlist?: string;\n  // badlist?: string;\n}\nexport interface ISemTalkAssociationTypesState {\n  objectid: number;\n  objects: ISemTalkObject[];\n  base: IObjectBase;\n  treeitems: ITreeItem[];\n  selecteditems: ITreeItem[];\n}\n\nexport class SemTalkAssociationTypes extends React.Component<ISemTalkAssociationTypesProps, ISemTalkAssociationTypesState> {\n  // private _selection: Selection;\n  public callback: Guid;\n\n  constructor(props: ISemTalkAssociationTypesProps) {\n    super(props);\n    console.log(\"SemTalkAssociationTypesProps\");\n    this.callback = Guid.create();\n    this.state = {\n      objectid: -1,\n      objects: [],\n      base: this.props.semtalk.base,\n      treeitems: [],\n      selecteditems: [],\n    };\n  }\n  private onTreeItemSelect = (items: ITreeItem[]) => {\n    //   console.log(\"Items selected: \", items);\n    this.setState({ selecteditems: items });\n  }\n  private onTreeItemExpandCollapse = (item: ITreeItem, _isExpanded: boolean) => {\n    if (!item.data) return;\n    let obj = item.data[0];\n    let ob = this.state.base;\n    if (item.children && obj && ob.IsAssociationType(obj)) {\n      for (let rx of item.children) {\n        let chi = rx.data[0];\n        if (ob.IsAssociationType(chi)) {\n          this.addChildren(rx, chi as ISemTalkAssociationType);\n        }\n      }\n    }\n  }\n\n  private addChildren = (item: any, obj: ISemTalkAssociationType) => {\n    let children: any[] = [];\n    let cl: ISemTalkAssociationType = obj as ISemTalkAssociationType;\n    for (let r of cl.SubClasses()) {\n      let rx: any = {\n        key: r.ID,\n        label: r.ID2NameNsp(),\n        //  subLabel: r.Comment,\n        data: [r, item],\n        actions: [{\n          title: this.props.semtalk.getResStrListener(\"STRDLHTMLPROPS\"),\n          iconProps: {\n            iconName: 'Edit'\n          },\n          id: \"EditItem\",\n          actionCallback: async (treeItem: ITreeItem) => {\n            // this.exportItem([treeItem]);\n            // gotoObject(treeItem.data[0].ID);\n            this.props.callback.editObject(treeItem.data[0].ID);\n            //  console.log(treeItem);\n          }\n        }]\n      };\n      rx.actions.push({\n        title: this.props.semtalk.getResStr(\"STRNEWCLASS\"),\n        id: \"NewClassItem\",\n        actionCallback: async (treeItem: ITreeItem) => {\n          let sup: ISemTalkAssociationType = treeItem.data[0];\n          let base: IObjectBase = sup.ObjectBase;\n          base.maxid = base.maxid + 1;\n          let cname = \"AssociationType\" + \".\" + base.maxid;\n          let clobj: ISemTalkAssociationType;\n          clobj = base.MakeAssociationType(sup.RelationType, cname, base.maxid);\n          if (!clobj.IsParent(sup)) {\n            clobj.AddSubclassOf(sup);\n          }\n          // gotoObject(clobj.ID);\n          this.props.callback.editObject(clobj.ID);\n          // if (treeItem.data[1] !== null) {\n          //   this.addChildren(treeItem.data[1], sup, assocname);\n          // }\n          this.addChildren(treeItem, sup);\n          this.onTreeItemExpandCollapse(treeItem, true);\n          this.setState({ treeitems: this.state.treeitems });\n        }\n      });\n      children.push(rx);\n    }\n    if (children.length > 0) {\n      item.children = children;\n    } else {\n      item.children = undefined;\n    }\n    item.actions = [];\n    item.actions.push({\n      title: this.props.semtalk.getResStrListener(\"STRDLHTMLPROPS\"),\n      iconProps: {\n        iconName: 'Edit'\n      },\n      id: \"EditItem\",\n      actionCallback: async (treeItem: ITreeItem) => {\n        // this.exportItem([treeItem]);\n        // gotoObject(treeItem.data[0].ID);\n        this.props.callback.editObject(treeItem.data[0].ID);\n      }\n    });\n    item.actions.push({\n      title: this.props.semtalk.getResStr(\"STRNEWCLASS\"),\n      id: \"NewClassItem\",\n      iconProps: {\n        iconName: 'Add'\n      },\n      actionCallback: async (treeItem: ITreeItem) => {\n        let sup: ISemTalkAssociationType = treeItem.data[0];\n        let base: IObjectBase = sup.ObjectBase;\n        base.maxid = base.maxid + 1;\n        let cname = \"AssociationType\" + \".\" + base.maxid;\n        let clobj: ISemTalkAssociationType;\n        clobj = base.MakeAssociationType(sup.RelationType, cname, base.maxid);\n        if (!clobj.IsParent(sup)) {\n          clobj.AddSubclassOf(sup);\n        }\n        // gotoObject(clobj.ID);\n        this.props.callback.editObject(clobj.ID);\n        // if (treeItem.data[1] !== null) {\n        //   this.addChildren(treeItem.data[1], sup, assocname);\n        // }\n        this.addChildren(item, obj);\n        this.onTreeItemExpandCollapse(item, true);\n        this.setState({ treeitems: this.state.treeitems });\n      }\n    });\n    // if (obj.ObjectBase.IsSystemClass(obj)) {\n    item.actions.push({\n      title: this.props.semtalk.getResStrListener(\"STRDLGLCAPTION\").replace(\":\", \"\"),\n      iconProps: {\n        iconName: 'Settings'\n      },\n      id: \"customizeObject\",\n      actionCallback: async (treeItem: ITreeItem) => {\n        // this.exportItem([treeItem]);\n        gotoObject(treeItem.data[0].ID);\n        this.props.callback.customizeObject();\n      }\n    });\n    //  }\n    if (!(obj.ObjectBase.IsClass(obj) && (obj as ISemTalkAssociationType).IsReadOnly)) {\n      item.actions.push({\n        title: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\n        iconProps: {\n          iconName: 'Delete'\n        },\n        id: \"DeleteItem\",\n        actionCallback: async (treeItem: ITreeItem) => {\n          // this.exportItem([treeItem]);\n          gotoObject(treeItem.data[0].ID);\n          this.props.callback.deleteObject();\n        }\n      });\n    }\n  }\n\n  //   private load(root: string | undefined) {\n  //     let _groups: INavLinkGroup[] = [];\n  //        let system: any = { name: this.props.semtalk.getResStr(\"STRSYSTEM\"), key: -1, links: [], isExpanded: false, collapseByDefault: false };\n  //        let user: any = { name: this.props.semtalk.getResStr(\"STRUSER\"), key: -2, links: [], isExpanded: false, collapseByDefault: true };\n  //        let lis: any[] = [];\n  //        let liu: any[] = [];\n  //        let alist = this.state.base.AllAssociationTypes();\n  //        alist=alist.sort((x,y)=> x.ObjectCaption.localeCompare(y.ObjectCaption));\n\n  //        for (const dt of alist) {\n  //          let ishidden = dt.Hide;\n  //          if (!ishidden && !this.isBad(dt.ObjectCaption) && this.isGood(dt.ObjectCaption)) {\n  //            if (dt.SuperClasses().length === 0) {\n  //              let d: any;\n  //              if (dt.SubClasses().length>0) {\n  //                d = { name: dt.ObjectCaption, key: dt.ID, links: [{ name: \"\" }], isExpanded: false };\n  //              } else {\n  //                d = { name: dt.ObjectCaption, key: dt.ID };\n  //              }\n  //           if (dt.IsReadOnly) {\n  //                lis.push(d);\n  //              } else {\n  //                if (dt.RelationType === SemTalkRelation.SemTalkProperty) {\n  //                  liu.push(d);\n  //                }\n  //              }\n  //            }\n  //          }\n  //        }\n  //        system.links= lis;\n  //        user.links= liu;\n  //        _groups.push(system);\n  //        _groups.push(user);\n  //        this.setState({ groups: _groups });\n  // }\n  // public handleEvent = async (m: any): Promise<void> => {\n  //   var mstr = JSON.stringify(m);\n  //   this.eventListener({ data: mstr });\n  // }\n  private load = () => {\n    let treeitems: any[] = [];\n    let ob = this.state.base;\n\n    let sitems: any[] = [];\n    let uitems: any[] = [];\n\n    const bl = [\"HiddenRelation\", SemTalkBaseConstant.SLSubClassOf, SemTalkBaseConstant.SLInstanceOf,\n    SemTalkBaseConstant.SLHasDomain, SemTalkBaseConstant.SLHasRange, \n    SemTalkBaseConstant.SLhasAttachment, SemTalkBaseConstant.SLDisplays, \n     ob.GetModelAttribute(Process_ElementName.STTriggers), ob.GetModelAttribute(Process_ElementName.STTriggeredBy), \"breaks\", \"ValidRefinement\",\n     BPMN_AssociationName.attachedto, SemTalkBaseConstant.SLDefinitionOf, BPMN_AssociationName.dataobject];\n    let alist = ob.AllAssociationTypes();\n    alist.sort((x, y) => { return x.ObjectCaption.localeCompare(y.ObjectCaption); });\n    for (let r of alist) {\n      if (r.ObjectType === SemTalkType.SemTalkAssociationType && bl.indexOf(r.ObjectName) < 0) {\n        let rx: any = {\n          key: r.ID,\n          label: r.ID2NameNsp(),\n          // subLabel: r.Comment,\n          data: [r, null],\n        };\n        this.addChildren(rx, r);\n        if (r.IsReadOnly) {\n          sitems.push(rx);\n        } else {\n          uitems.push(rx);\n        }\n      }\n    }\n    if (sitems.length > 0) {\n      let system: any = { label: this.props.semtalk.getResStr(\"STRSYSTEM\"), key: -1, children: sitems };\n      treeitems.push(system);\n    }\n    if (uitems.length > 0) {\n      let user: any = { label: this.props.semtalk.getResStr(\"STRUSER\"), key: -2, children: uitems };\n      treeitems.push(user);\n    }\n    this.setState({ treeitems: treeitems });\n  }\n  private UpdateByID = (id: number) => {\n    for (let item of this.state.treeitems) {\n      this.updateRec(item, id);\n    }\n  }\n  private updateRec = (item: any, id: number) => {\n    if (item.key === id) {\n      item.label = item.data[0].ID2NameNsp();\n      //' force repaint'\n      this.setState({ treeitems: this.state.treeitems });\n    }\n    if (item.children)\n      for (let citem of item.children) {\n        this.updateRec(citem, id);\n      }\n  }\n  private RemoveByID = (id: number) => {\n    for (let item of this.state.treeitems) {\n      this.removeRec(item, id);\n    }\n  }\n  private removeRec = (item: any, id: number) => {\n    if (item.key === id) {\n      let par = item.data[1];\n      if (par !== null) {\n        this.addChildren(par, par.data[0]);\n      } else {\n        this.load();\n      }\n      //' force repaint'\n      this.setState({ treeitems: this.state.treeitems });\n    }\n    if (item.children)\n      for (let citem of item.children) {\n        this.removeRec(citem, id);\n      }\n  }\n  private renderCustomTreeItem = (item: ITreeItem): JSX.Element => {\n    return (\n      <span>\n        {\n          item.iconProps &&\n          <i className={\"ms-Icon ms-Icon--\" + item.iconProps.iconName} style={{ paddingRight: '4px' }} />\n        }\n        {item.label}\n      </span>\n    );\n  }\n  public render(): React.ReactElement<ISemTalkAssociationTypesProps> {\n    return (\n      <Fabric>\n        <div className={styles.semTalkAssociationTypes} >\n          <div className={styles.container}>\n            {this.props.title &&\n              <div className={styles.row}>\n                <div className={styles.column}>\n                  <div className={styles.title}>{this.props.title}</div>\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n        <div>\n          <TreeView\n            items={this.state.treeitems}\n            defaultExpanded={false}\n            selectionMode={TreeViewSelectionMode.Multiple}\n            selectChildrenIfParentSelected={false}\n            selectChildrenMode={SelectChildrenMode.None}\n            showCheckboxes={false}\n            treeItemActionsDisplayMode={TreeItemActionsDisplayMode.ContextualMenu}\n            defaultSelectedKeys={['key1', 'key2']}\n            expandToSelected={true}\n            defaultExpandedChildren={false}\n            onSelect={this.onTreeItemSelect}\n            onExpandCollapse={this.onTreeItemExpandCollapse}\n            onRenderItem={this.renderCustomTreeItem} />\n        </div>\n        {/* {!this.props.islist && !this.props.iscombo &&\n          <Nav //onRenderGroupHeader={this._onRenderGroupHeader}\n            //     onRenderLink={this._onRenderLink\n            onLinkExpandClick={this._expand}\n            onLinkClick={this._click}\n            groups={this.state.groups}\n          ></Nav>\n        }\n        {this.props.islist &&\n          <DetailsList\n            // ref={this._resolveList}\n            items={this.state.objects}\n            compact={true}\n            columns={_columns}\n            selectionMode={SelectionMode.single}\n            layoutMode={DetailsListLayoutMode.justified}\n            selection={this._selection}\n            checkboxVisibility={CheckboxVisibility.hidden}\n          />\n        }\n        {this.props.iscombo &&\n          <Dropdown\n            // ref={this._resolveList}\n            onChange={this._onOptionChange}\n            options={this.state.options}\n          />\n        } */}\n      </Fabric>\n    );\n  }\n  // private _onRenderGroupHeader(group: INavLinkGroup): JSX.Element {\n  //   return <h3>{group.name}</h3>;\n  // }\n\n  private mounted: boolean = false;\n  public componentDidMount() {\n    // if (this.props.context && this.props.filter) {\n    // SetContext(this.props.context, this.props.filter, this.props.token, this.props.service);\n    // }\n    this.load();\n    addCallBack(this);\n    this.props.semtalk.base._callbacks.push(this);\n    this.mounted = true;\n  }\n  // public componentDidUpdate() {\n  //   this.load(this.props.root);\n  // }\n  public componentWillUnmount() {\n    removeCallBack(this);\n    this.mounted = false;\n  }\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n  public getMessage(e: any) {\n    this.eventListener(e);\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    let mtype: any;\n    try {\n      md = JSON.parse(e.data);\n      mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkObjectBaseEvent.OnDeleted: {\n        this.RemoveByID(Number(md.objectid));\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnRenamed: {\n        this.UpdateByID(Number(md.objectid));\n        break;\n      }\n    }\n  }\n}\n","/* eslint-disable no-useless-concat */\nimport * as React from 'react';\nimport styles from './SemTalkAttributeTypes.module.scss';\nimport {\n  // Link, Selection, IColumn, DetailsList, DetailsListLayoutMode,\n  // CheckboxVisibility, Dropdown, IDropdownOption,\n  Fabric\n} from 'office-ui-fabric-react';\n// import { Nav } from 'office-ui-fabric-react/lib/Nav';\n// import { INavLinkGroup, INavLink } from 'office-ui-fabric-react/lib/components/Nav/Nav.types';\n// import { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\n//import { SetContext } from '../../semtalkportal/restinterface';\n// import { WebPartContext } from '@microsoft/sp-webpart-base';\nimport { Guid } from \"guid-typescript\";\n// import * as strings from 'SemTalkStrings';\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\nimport { SemTalkType, IObjectBase, ISemTalkObject, ISemTalkAttributeType, \n  SemTalkBaseConstant } from \"../../application/tbase/Interface\";\nimport { gotoObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n//import { TreeView, ITreeItem, TreeViewSelectionMode, TreeItemActionsDisplayMode } from \"@pnp/spfx-controls-react/lib/TreeView\";\nimport { TreeView, ITreeItem, TreeViewSelectionMode, TreeItemActionsDisplayMode, SelectChildrenMode } from \"../treeView\";\nimport { SemTalkObjectBaseEvent } from '../../application/tbase/Interface';\n\nexport interface ISemTalkAttributeTypesProps {\n  semtalk: IVisioRDFS;\n  callback: any;\n  title?: string;\n  // description?: string;\n  // width?: number;\n  // height?: number;\n  // minimize?: boolean;\n  // help?: string;\n  // context?: WebPartContext;\n  // filter: string;\n  // token: string;\n  // root?: string;\n  // service: string;\n  // islist?: boolean;\n  // iscombo?: boolean;\n  // goodlist?: string;\n  // badlist?: string;\n}\nexport interface ISemTalkAttributeTypesState {\n  // groups: INavLinkGroup[];\n  objectid: number;\n  // root: string;\n  objects: ISemTalkObject[];\n  // options: IDropdownOption[];\n  // goodlist: string[];\n  // badlist: string[];\n  base: IObjectBase;\n  treeitems: ITreeItem[];\n  selecteditems: ITreeItem[];\n}\n// const _columns: IColumn[] = [\n//   {\n//     key: 'obj',\n//     name: \"Objects\",\n//     fieldName: 'ObjectCaption',\n//     minWidth: 100,\n//     // maxWidth: 180,\n//     isResizable: true,\n//     isMultiline: true,\n//     onRender: item => (\n//       <Link key={item.ID} onClick={() => _clickAny(item)}>\n//         {item.ObjectCaption}\n//       </Link>\n//     )\n//   }\n// ];\nexport class SemTalkAttributeTypes extends React.Component<ISemTalkAttributeTypesProps, ISemTalkAttributeTypesState> {\n  // private _selection: Selection;\n  public callback: Guid;\n\n  constructor(props: ISemTalkAttributeTypesProps) {\n    super(props);\n    console.log(\"SemTalkAttributeTypesProps\");\n    this.callback = Guid.create();\n    this.state = {\n      objectid: -1,\n      objects: [],\n      base: this.props.semtalk.base,\n      treeitems: [],\n      selecteditems: [],\n\n    };\n  }\n  private onTreeItemSelect = (items: ITreeItem[]) => {\n    //   console.log(\"Items selected: \", items);\n    this.setState({ selecteditems: items });\n  }\n  private onTreeItemExpandCollapse = (item: ITreeItem, isExpanded: boolean) => {\n    if (!item.data) return;\n    let obj = item.data[0];\n    let ob = this.state.base;\n    if (item.children && obj && ob.IsAttributeType(obj)) {\n      for (let rx of item.children) {\n        let chi = rx.data[0];\n        if (ob.IsAttributeType(chi)) {\n          this.addChildren(rx, chi as ISemTalkAttributeType);\n        }\n      }\n    }\n  }\n\n  private addChildren = (item: any, obj: ISemTalkAttributeType) => {\n    let children: any[] = [];\n    let cl: ISemTalkAttributeType = obj as ISemTalkAttributeType;\n    for (let r of cl.SubClasses()) {\n      let rx: any = {\n        key: r.ID,\n        label: r.ID2NameNsp(),\n        //   subLabel: r.Comment,\n        data: [r, item],\n        actions: [{\n          title: this.props.semtalk.getResStrListener(\"STRDLHTMLPROPS\"),\n          iconProps: {\n            iconName: 'Edit'\n          },\n          id: \"EditItem\",\n          actionCallback: async (treeItem: ITreeItem) => {\n            // this.exportItem([treeItem]);\n            // gotoObject(treeItem.data[0].ID);\n            this.props.callback.editObject(treeItem.data[0].ID);\n            //  console.log(treeItem);\n          }\n        }]\n      };\n      rx.actions.push({\n        title: this.props.semtalk.getResStr(\"STRNEWCLASS\"),\n        id: \"NewClassItem\",\n        iconProps: {\n          iconName: 'Add'\n        },\n        actionCallback: async (treeItem: ITreeItem) => {\n          let sup: ISemTalkAttributeType = treeItem.data[0];\n          let base: IObjectBase = sup.ObjectBase;\n          base.maxid = base.maxid + 1;\n          let cname = \"AttributeType\" + \".\" + base.maxid;\n          let clobj: ISemTalkAttributeType;\n          clobj = base.MakeAttributeType(cname, base.maxid);\n          if (!clobj.IsParent(sup)) {\n            clobj.AddSubclassOf(sup);\n          }\n          // gotoObject(clobj.ID);\n          this.props.callback.editObject(clobj.ID);\n          // if (treeItem.data[1] !== null) {\n          //   this.addChildren(treeItem.data[1], sup, assocname);\n          // }\n          this.addChildren(treeItem, sup);\n          this.onTreeItemExpandCollapse(treeItem, true);\n          this.setState({ treeitems: this.state.treeitems });\n        }\n      });\n      children.push(rx);\n    }\n    if (children.length > 0) {\n      item.children = children;\n    } else {\n      item.children = undefined;\n    }\n    item.actions = [];\n    item.actions.push({\n      title: this.props.semtalk.getResStrListener(\"STRDLHTMLPROPS\"),\n      iconProps: {\n        iconName: 'Edit'\n      },\n      id: \"EditItem\",\n      actionCallback: async (treeItem: ITreeItem) => {\n        // this.exportItem([treeItem]);\n        // gotoObject(treeItem.data[0].ID);\n        this.props.callback.editObject(treeItem.data[0].ID);\n      }\n    });\n    item.actions.push({\n      title: this.props.semtalk.getResStr(\"STRNEWCLASS\"),\n      id: \"NewClassItem\",\n      iconProps: {\n        iconName: 'Add'\n      },\n      actionCallback: async (treeItem: ITreeItem) => {\n        let sup: ISemTalkAttributeType = treeItem.data[0];\n        let base: IObjectBase = sup.ObjectBase;\n        base.maxid = base.maxid + 1;\n        let cname = \"AttributeType\" + \".\" + base.maxid;\n        let clobj: ISemTalkAttributeType;\n        clobj = base.MakeAttributeType(cname, base.maxid);\n        if (!clobj.IsParent(sup)) {\n          clobj.AddSubclassOf(sup);\n        }\n        // gotoObject(clobj.ID);\n        this.props.callback.editObject(clobj.ID);\n        // if (treeItem.data[1] !== null) {\n        //   this.addChildren(treeItem.data[1], sup, assocname);\n        // }\n        this.addChildren(item, obj);\n        this.onTreeItemExpandCollapse(item, true);\n        this.setState({ treeitems: this.state.treeitems });\n      }\n    });\n    //  if (obj.ObjectBase.IsSystemClass(obj)) {\n    item.actions.push({\n      title: this.props.semtalk.getResStrListener(\"STRDLGLCAPTION\").replace(\":\", \"\"),\n      iconProps: {\n        iconName: 'Settings'\n      },\n      id: \"customizeObject\",\n      actionCallback: async (treeItem: ITreeItem) => {\n        // this.exportItem([treeItem]);\n        gotoObject(treeItem.data[0].ID);\n        this.props.callback.customizeObject();\n      }\n    });\n    //  }\n    if (!(obj.ObjectBase.IsClass(obj) && (obj as ISemTalkAttributeType).IsReadOnly)) {\n      item.actions.push({\n        title: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\n        iconProps: {\n          iconName: 'Delete'\n        },\n        id: \"DeleteItem\",\n        actionCallback: async (treeItem: ITreeItem) => {\n          // this.exportItem([treeItem]);\n          gotoObject(treeItem.data[0].ID);\n          this.props.callback.deleteObject();\n        }\n      });\n    }\n  }\n\n  private load = () => {\n    let treeitems: any[] = [];\n    let ob = this.state.base;\n\n    let sitems: any[] = [];\n    let uitems: any[] = [];\n\n    const bl: string[] = [SemTalkBaseConstant.SLMXGAttribute];\n    let alist = ob.AllAttributeTypes();\n    alist.sort((x, y) => { return x.ObjectCaption.localeCompare(y.ObjectCaption); });\n    for (let r of alist) {\n      if (r.ObjectType === SemTalkType.SemTalkAttributeType && bl.indexOf(r.ObjectName) < 0) {\n        let rx: any = {\n          key: r.ID,\n          label: r.ID2NameNsp(),\n          // subLabel: r.Comment,\n          data: [r, null],\n        };\n        this.addChildren(rx, r);\n        if (r.IsReadOnly) {\n          sitems.push(rx);\n        } else {\n          uitems.push(rx);\n        }\n      }\n    }\n\n    if (sitems.length > 0) {\n      let system: any = { label: this.props.semtalk.getResStr(\"STRSYSTEM\"), key: -1, children: sitems };\n      treeitems.push(system);\n    }\n    if (uitems.length > 0) {\n      let user: any = { label: this.props.semtalk.getResStr(\"STRUSER\"), key: -2, children: uitems };\n      treeitems.push(user);\n    }\n    this.setState({ treeitems: treeitems });\n  }\n  private UpdateByID = (id: number) => {\n    for (let item of this.state.treeitems) {\n      this.updateRec(item, id);\n    }\n  }\n  private updateRec = (item: any, id: number) => {\n    if (item.key === id) {\n      item.label = item.data[0].ID2NameNsp();\n      //' force repaint'\n      this.setState({ treeitems: this.state.treeitems });\n    }\n    if (item.children)\n      for (let citem of item.children) {\n        this.updateRec(citem, id);\n      }\n  }\n  private RemoveByID = (id: number) => {\n    for (let item of this.state.treeitems) {\n      this.removeRec(item, id);\n    }\n  }\n  private removeRec = (item: any, id: number) => {\n    if (item.key === id) {\n      let par = item.data[1];\n      if (par !== null) {\n        this.addChildren(par, par.data[0]);\n      } else {\n        this.load();\n      }\n      //' force repaint'\n      this.setState({ treeitems: this.state.treeitems });\n    }\n    if (item.children)\n      for (let citem of item.children) {\n        this.removeRec(citem, id);\n      }\n  }\n  private renderCustomTreeItem = (item: ITreeItem): JSX.Element => {\n    return (\n      <span>\n        {\n          item.iconProps &&\n          <i className={\"ms-Icon ms-Icon--\" + item.iconProps.iconName} style={{ paddingRight: '4px' }} />\n        }\n        {item.label}\n      </span>\n    );\n  }\n  public render(): React.ReactElement<ISemTalkAttributeTypesProps> {\n    return (\n      <Fabric>\n        <div className={styles.semTalkAttributeTypes} >\n          <div className={styles.container}>\n            {this.props.title &&\n              <div className={styles.row}>\n                <div className={styles.column}>\n                  <div className={styles.title}>{this.props.title}</div>\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n        <div>\n          <TreeView\n            items={this.state.treeitems}\n            defaultExpanded={false}\n            selectionMode={TreeViewSelectionMode.Multiple}\n            selectChildrenIfParentSelected={false}\n            selectChildrenMode={SelectChildrenMode.None}\n            showCheckboxes={false}\n            treeItemActionsDisplayMode={TreeItemActionsDisplayMode.ContextualMenu}\n            defaultSelectedKeys={['key1', 'key2']}\n            expandToSelected={true}\n            defaultExpandedChildren={false}\n            onSelect={this.onTreeItemSelect}\n            onExpandCollapse={this.onTreeItemExpandCollapse}\n            onRenderItem={this.renderCustomTreeItem} />\n        </div>\n  \n      </Fabric>\n    );\n  }\n  // private _onRenderGroupHeader(group: INavLinkGroup): JSX.Element {\n  //   return <h3>{group.name}</h3>;\n  // }\n\n  private mounted: boolean = false;\n  public componentDidMount() {\n    // if (this.props.context && this.props.filter) {\n    // SetContext(this.props.context, this.props.filter, this.props.token, this.props.service);\n    // }\n    this.load();\n    addCallBack(this);\n    this.props.semtalk.base._callbacks.push(this);\n    this.mounted = true;\n  }\n  // public componentDidUpdate() {\n  //   this.load(this.props.root);\n  // }\n  public componentWillUnmount() {\n    removeCallBack(this);\n    this.mounted = false;\n  }\n  \n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n  public getMessage(e: any) {\n    this.eventListener(e);\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    let mtype: any;\n    try {\n      md = JSON.parse(e.data);\n      mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkObjectBaseEvent.OnDeleted: {\n        this.RemoveByID(Number(md.objectid));\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnRenamed: {\n        this.UpdateByID(Number(md.objectid));\n        break;\n      }\n    }\n  }\n\n}\n","/* eslint-disable no-useless-concat */\nimport * as React from 'react';\nimport styles from './SemTalkMethodTypes.module.scss';\nimport {\n  // Link, Selection, IColumn, DetailsList, DetailsListLayoutMode,\n  // CheckboxVisibility, Dropdown, IDropdownOption,\n  Fabric\n} from 'office-ui-fabric-react';\n// import { Nav } from 'office-ui-fabric-react/lib/Nav';\n// import { INavLinkGroup, INavLink } from 'office-ui-fabric-react/lib/components/Nav/Nav.types';\n// import { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\n// import { SetContext } from '../../semtalkportal/restinterface';\n// import { WebPartContext } from '@microsoft/sp-webpart-base';\nimport { Guid } from \"guid-typescript\";\n// import * as strings from 'SemTalkStrings';\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\nimport {\n  SemTalkType,\n  IObjectBase,\n  ISemTalkObject,\n  ISemTalkMethodType,\n  SemTalkBaseConstant\n} from \"../../application/tbase/Interface\";\nimport { gotoObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n// import { TreeView, ITreeItem, TreeViewSelectionMode, TreeItemActionsDisplayMode } from \"@pnp/spfx-controls-react/lib/TreeView\";\nimport { TreeView, ITreeItem, TreeViewSelectionMode, TreeItemActionsDisplayMode, SelectChildrenMode } from \"../treeView\";\nimport { SemTalkObjectBaseEvent } from '../../application/tbase/Interface';\n\nexport interface ISemTalkMethodTypesProps {\n  semtalk: IVisioRDFS;\n  callback: any;\n  title?: string;\n}\nexport interface ISemTalkMethodTypesState {\n  objectid: number;\n  objects: ISemTalkObject[];\n  base: IObjectBase;\n  treeitems: ITreeItem[];\n  selecteditems: ITreeItem[];\n}\nexport class SemTalkMethodTypes extends React.Component<ISemTalkMethodTypesProps, ISemTalkMethodTypesState> {\n  // private _selection: Selection;\n  public callback: Guid;\n\n  constructor(props: ISemTalkMethodTypesProps) {\n    super(props);\n    console.log(\"SemTalkMethodTypesProps\");\n    this.callback = Guid.create();\n    this.state = {\n      objectid: -1,\n      objects: [],\n      base: this.props.semtalk.base,\n      treeitems: [],\n      selecteditems: [],\n    };\n  }\n  private onTreeItemSelect = (items: ITreeItem[]) => {\n    //   console.log(\"Items selected: \", items);\n    this.setState({ selecteditems: items });\n  }\n  private onTreeItemExpandCollapse = (item: ITreeItem, isExpanded: boolean) => {\n    if (!item.data) return;\n    let obj = item.data[0];\n    let ob = this.state.base;\n    if (item.children && obj && ob.IsMethodType(obj)) {\n      for (let rx of item.children) {\n        let chi = rx.data[0];\n        if (ob.IsMethodType(chi)) {\n          this.addChildren(rx, chi as ISemTalkMethodType);\n        }\n      }\n    }\n  }\n\n  private addChildren = (item: any, obj: ISemTalkMethodType) => {\n    let children: any[] = [];\n    let cl: ISemTalkMethodType = obj as ISemTalkMethodType;\n    for (let r of cl.SubClasses()) {\n      let rx: any = {\n        key: r.ID,\n        label: r.ID2NameNsp(),\n        //   subLabel: r.Comment,\n        data: [r, item],\n        actions: [{\n          title: this.props.semtalk.getResStrListener(\"STRDLHTMLPROPS\"),\n          iconProps: {\n            iconName: 'Edit'\n          },\n          id: \"EditItem\",\n          actionCallback: async (treeItem: ITreeItem) => {\n            // this.exportItem([treeItem]);\n            // gotoObject(treeItem.data[0].ID);\n            this.props.callback.editObject(treeItem.data[0].ID);\n            //  console.log(treeItem);\n          }\n        }]\n      };\n      rx.actions.push({\n        title: this.props.semtalk.getResStr(\"STRNEWCLASS\"),\n        id: \"NewClassItem\",\n        iconProps: {\n          iconName: 'Add'\n        },\n        actionCallback: async (treeItem: ITreeItem) => {\n          let sup: ISemTalkMethodType = treeItem.data[0];\n          let base: IObjectBase = sup.ObjectBase;\n          base.maxid = base.maxid + 1;\n          let cname = \"MethodType\" + \".\" + base.maxid;\n          let clobj: ISemTalkMethodType;\n          clobj = base.MakeMethodType(cname, base.maxid);\n          if (!clobj.IsParent(sup)) {\n            clobj.AddSubclassOf(sup);\n          }\n          // gotoObject(clobj.ID);\n          this.props.callback.editObject(clobj.ID);\n          // if (treeItem.data[1] !== null) {\n          //   this.addChildren(treeItem.data[1], sup, assocname);\n          // }\n          this.addChildren(treeItem, sup);\n          this.onTreeItemExpandCollapse(treeItem, true);\n          this.setState({ treeitems: this.state.treeitems });\n        }\n      });\n      children.push(rx);\n    }\n    if (children.length > 0) {\n      item.children = children;\n    } else {\n      item.children = undefined;\n    }\n    item.actions = [];\n    item.actions.push({\n      title: this.props.semtalk.getResStrListener(\"STRDLHTMLPROPS\"),\n      iconProps: {\n        iconName: 'Edit'\n      },\n      id: \"EditItem\",\n      actionCallback: async (treeItem: ITreeItem) => {\n        // this.exportItem([treeItem]);\n        // gotoObject(treeItem.data[0].ID);\n        this.props.callback.editObject(treeItem.data[0].ID);\n      }\n    });\n    item.actions.push({\n      title: this.props.semtalk.getResStr(\"STRNEWCLASS\"),\n      id: \"NewClassItem\",\n      iconProps: {\n        iconName: 'Add'\n      },\n      actionCallback: async (treeItem: ITreeItem) => {\n        let sup: ISemTalkMethodType = treeItem.data[0];\n        let base: IObjectBase = sup.ObjectBase;\n        base.maxid = base.maxid + 1;\n        let cname = \"MethodType\" + \".\" + base.maxid;\n        let clobj: ISemTalkMethodType;\n        clobj = base.MakeMethodType(cname, base.maxid);\n        if (!clobj.IsParent(sup)) {\n          clobj.AddSubclassOf(sup);\n        }\n        // gotoObject(clobj.ID);\n        this.props.callback.editObject(clobj.ID);\n        // if (treeItem.data[1] !== null) {\n        //   this.addChildren(treeItem.data[1], sup, assocname);\n        // }\n        this.addChildren(item, obj);\n        this.onTreeItemExpandCollapse(item, true);\n        this.setState({ treeitems: this.state.treeitems });\n      }\n    });\n    if (!(obj.ObjectBase.IsClass(obj) && (obj as ISemTalkMethodType).IsReadOnly)) {\n      item.actions.push({\n        title: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\n        iconProps: {\n          iconName: 'Delete'\n        },\n        id: \"DeleteItem\",\n        actionCallback: async (treeItem: ITreeItem) => {\n          // this.exportItem([treeItem]);\n          gotoObject(treeItem.data[0].ID);\n          this.props.callback.deleteObject();\n        }\n      });\n    }\n  }\n\n  private load = () => {\n    let treeitems: any[] = [];\n    let ob = this.state.base;\n\n    let sitems: any[] = [];\n    let uitems: any[] = [];\n\n    const bl: string[] = [SemTalkBaseConstant.SLHas];\n    let alist = ob.AllMethodTypes();\n    alist.sort((x, y) => { return x.ObjectCaption.localeCompare(y.ObjectCaption); });\n    for (let r of alist) {\n      if (r.ObjectType === SemTalkType.SemTalkMethodType && bl.indexOf(r.ObjectName) < 0) {\n        let rx: any = {\n          key: r.ID,\n          label: r.ID2NameNsp(),\n          // subLabel: r.Comment,\n          data: [r, null],\n        };\n        this.addChildren(rx, r);\n        if (r.IsReadOnly) {\n          sitems.push(rx);\n        } else {\n          uitems.push(rx);\n        }\n      }\n    }\n\n    if (sitems.length > 0) {\n      let system: any = { label: this.props.semtalk.getResStr(\"STRSYSTEM\"), key: -1, children: sitems };\n      treeitems.push(system);\n    }\n    if (uitems.length > 0) {\n      let user: any = { label: this.props.semtalk.getResStr(\"STRUSER\"), key: -2, children: uitems };\n      treeitems.push(user);\n    }\n    this.setState({ treeitems: treeitems });\n  }\n  private UpdateByID = (id: number) => {\n    for (let item of this.state.treeitems) {\n      this.updateRec(item, id);\n    }\n  }\n  private updateRec = (item: any, id: number) => {\n    if (item.key === id) {\n      item.label = item.data[0].ID2NameNsp();\n      //' force repaint'\n      this.setState({ treeitems: this.state.treeitems });\n    }\n    if (item.children)\n      for (let citem of item.children) {\n        this.updateRec(citem, id);\n      }\n  }\n  private RemoveByID = (id: number) => {\n    for (let item of this.state.treeitems) {\n      this.removeRec(item, id);\n    }\n  }\n  private removeRec = (item: any, id: number) => {\n    if (item.key === id) {\n      let par = item.data[1];\n      if (par !== null) {\n        this.addChildren(par, par.data[0]);\n      } else {\n        this.load();\n      }\n      //' force repaint'\n      this.setState({ treeitems: this.state.treeitems });\n    }\n    if (item.children)\n      for (let citem of item.children) {\n        this.removeRec(citem, id);\n      }\n  }\n  private renderCustomTreeItem = (item: ITreeItem): JSX.Element => {\n    return (\n      <span>\n        {\n          item.iconProps &&\n          <i className={\"ms-Icon ms-Icon--\" + item.iconProps.iconName} style={{ paddingRight: '4px' }} />\n        }\n        {item.label}\n      </span>\n    );\n  }\n  public render(): React.ReactElement<ISemTalkMethodTypesProps> {\n    return (\n      <Fabric>\n        <div className={styles.semTalkMethodTypes} >\n          <div className={styles.container}>\n            {this.props.title &&\n              <div className={styles.row}>\n                <div className={styles.column}>\n                  <div className={styles.title}>{this.props.title}</div>\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n        <div>\n          <TreeView\n            items={this.state.treeitems}\n            defaultExpanded={false}\n            selectionMode={TreeViewSelectionMode.Multiple}\n            selectChildrenIfParentSelected={false}\n            selectChildrenMode={SelectChildrenMode.None}\n            showCheckboxes={false}\n            treeItemActionsDisplayMode={TreeItemActionsDisplayMode.ContextualMenu}\n            defaultSelectedKeys={['key1', 'key2']}\n            expandToSelected={true}\n            defaultExpandedChildren={false}\n            onSelect={this.onTreeItemSelect}\n            onExpandCollapse={this.onTreeItemExpandCollapse}\n            onRenderItem={this.renderCustomTreeItem} />\n        </div>\n      </Fabric>\n    );\n  }\n  // private _onRenderGroupHeader(group: INavLinkGroup): JSX.Element {\n  //   return <h3>{group.name}</h3>;\n  // }\n\n  private mounted: boolean = false;\n  public componentDidMount() {\n    this.load();\n    addCallBack(this);\n    this.props.semtalk.base._callbacks.push(this);\n    this.mounted = true;\n  }\n  // public componentDidUpdate() {\n  //   this.load(this.props.root);\n  // }\n  public componentWillUnmount() {\n    removeCallBack(this);\n    this.mounted = false;\n  }\n\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n  public getMessage(e: any) {\n    this.eventListener(e);\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    let mtype: any;\n    try {\n      md = JSON.parse(e.data);\n      mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkObjectBaseEvent.OnDeleted: {\n        this.RemoveByID(Number(md.objectid));\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnRenamed: {\n        this.UpdateByID(Number(md.objectid));\n        break;\n      }\n    }\n  }\n}\n","/* eslint-disable no-useless-concat */\nimport * as React from 'react';\nimport styles from './SemTalkStateTypes.module.scss';\nimport {\n  Fabric\n} from 'office-ui-fabric-react';\nimport { Guid } from \"guid-typescript\";\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\nimport { SemTalkType, \n  IObjectBase, \n  ISemTalkObject, \n  ISemTalkStateType,\n  SemTalkBaseConstant } from \"../../application/tbase/Interface\";\nimport { gotoObject, \n  addCallBack, \n  removeCallBack,\n   } from '../../application/semtalklistener/stglobal';\nimport { TreeView, ITreeItem, TreeViewSelectionMode, TreeItemActionsDisplayMode, SelectChildrenMode } from \"../treeView\";\nimport { SemTalkObjectBaseEvent } from '../../application/tbase/Interface';\n\nexport interface ISemTalkStateTypesProps {\n  semtalk: IVisioRDFS;\n  callback: any;\n  title?: string;\n}\nexport interface ISemTalkStateTypesState {\n  objectid: number;\n  objects: ISemTalkObject[];\n  base: IObjectBase;\n  treeitems: ITreeItem[];\n  selecteditems: ITreeItem[];\n}\nexport class SemTalkStateTypes extends React.Component<ISemTalkStateTypesProps, ISemTalkStateTypesState> {\n  // private _selection: Selection;\n  public callback: Guid;\n\n  constructor(props: ISemTalkStateTypesProps) {\n    super(props);\n    console.log(\"SemTalkStateTypesProps\");\n    this.callback = Guid.create();\n       this.state = {\n      objectid: -1,\n      objects: [],\n      base: this.props.semtalk.base,\n      treeitems: [],\n      selecteditems: [],\n    };\n  }\n  private onTreeItemSelect = (items: ITreeItem[]) => {\n    //   console.log(\"Items selected: \", items);\n    this.setState({ selecteditems: items });\n  }\n  private onTreeItemExpandCollapse = (item: ITreeItem, isExpanded: boolean) => {\n    if (!item.data) return;\n    let obj = item.data[0];\n    let ob = this.state.base;\n    if (item.children && obj && ob.IsStateType(obj)) {\n      for (let rx of item.children) {\n        let chi = rx.data[0];\n        if (ob.IsStateType(chi)) {\n          this.addChildren(rx, chi as ISemTalkStateType);\n        }\n      }\n    }\n  }\n\n  private addChildren = (item: any, obj: ISemTalkStateType) => {\n    let children: any[] = [];\n    let cl: ISemTalkStateType = obj as ISemTalkStateType;\n    for (let r of cl.SubClasses()) {\n      let rx: any = {\n        key: r.ID,\n        label: r.ID2NameNsp(),\n        //   subLabel: r.Comment,\n        data: [r, item],\n        actions: [{\n          title: this.props.semtalk.getResStrListener(\"STRDLHTMLPROPS\"),\n          iconProps: {\n            iconName: 'Edit'\n          },\n          id: \"EditItem\",\n          actionCallback: async (treeItem: ITreeItem) => {\n            // this.exportItem([treeItem]);\n            // gotoObject(treeItem.data[0].ID);\n            this.props.callback.editObject(treeItem.data[0].ID);\n            //  console.log(treeItem);\n          }\n        }]\n      };\n      rx.actions.push({\n        title: this.props.semtalk.getResStr(\"STRNEWCLASS\"),\n        id: \"NewClassItem\",\n        iconProps: {\n          iconName: 'Add'\n        },\n        actionCallback: async (treeItem: ITreeItem) => {\n          let sup: ISemTalkStateType = treeItem.data[0];\n          let base: IObjectBase = sup.ObjectBase;\n          base.maxid = base.maxid + 1;\n          let cname = \"StateType\" + \".\" + base.maxid;\n          let clobj: ISemTalkStateType;\n          clobj = base.MakeStateType(cname, base.maxid);\n          if (!clobj.IsParent(sup)) {\n            clobj.AddSubclassOf(sup);\n          }\n          // gotoObject(clobj.ID);\n          this.props.callback.editObject(clobj.ID);\n          // if (treeItem.data[1] !== null) {\n          //   this.addChildren(treeItem.data[1], sup, assocname);\n          // }\n          this.addChildren(treeItem, sup);\n          this.onTreeItemExpandCollapse(treeItem, true);\n          this.setState({ treeitems: this.state.treeitems });\n        }\n      });\n      children.push(rx);\n    }\n    if (children.length > 0) {\n      item.children = children;\n    } else {\n      item.children = undefined;\n    }\n    item.actions = [];\n    item.actions.push({\n      title: this.props.semtalk.getResStrListener(\"STRDLHTMLPROPS\"),\n      iconProps: {\n        iconName: 'Edit'\n      },\n      id: \"EditItem\",\n      actionCallback: async (treeItem: ITreeItem) => {\n        // this.exportItem([treeItem]);\n        // gotoObject(treeItem.data[0].ID);\n        this.props.callback.editObject(treeItem.data[0].ID);\n      }\n    });\n    item.actions.push({\n      title: this.props.semtalk.getResStr(\"STRNEWCLASS\"),\n      id: \"NewClassItem\",\n      iconProps: {\n        iconName: 'Add'\n      },\n      actionCallback: async (treeItem: ITreeItem) => {\n        let sup: ISemTalkStateType = treeItem.data[0];\n        let base: IObjectBase = sup.ObjectBase;\n        base.maxid = base.maxid + 1;\n        let cname = \"MethodType\" + \".\" + base.maxid;\n        let clobj: ISemTalkStateType;\n        clobj = base.MakeStateType(cname, base.maxid);\n        if (!clobj.IsParent(sup)) {\n          clobj.AddSubclassOf(sup);\n        }\n        // gotoObject(clobj.ID);\n        this.props.callback.editObject(clobj.ID);\n        // if (treeItem.data[1] !== null) {\n        //   this.addChildren(treeItem.data[1], sup, assocname);\n        // }\n        this.addChildren(item, obj);\n        this.onTreeItemExpandCollapse(item, true);\n        this.setState({ treeitems: this.state.treeitems });\n      }\n    });\n    if (!(obj.ObjectBase.IsClass(obj) && (obj as ISemTalkStateType).IsReadOnly)) {\n      item.actions.push({\n        title: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\n        iconProps: {\n          iconName: 'Delete'\n        },\n        id: \"DeleteItem\",\n        actionCallback: async (treeItem: ITreeItem) => {\n          // this.exportItem([treeItem]);\n          gotoObject(treeItem.data[0].ID);\n          this.props.callback.deleteObject();\n        }\n      });\n    }\n  }\n\n  private load = () => {\n    let treeitems: any[] = [];\n    let ob = this.state.base;\n\n    let sitems: any[] = [];\n    let uitems: any[] = [];\n\n    const bl: string[] = [SemTalkBaseConstant.SLHas];\n    let alist = ob.AllStateTypes();\n    alist.sort((x, y) => { return x.ObjectCaption.localeCompare(y.ObjectCaption); });\n    for (let r of alist) {\n      if (r.ObjectType === SemTalkType.SemTalkStateType && bl.indexOf(r.ObjectName) < 0) {\n        let rx: any = {\n          key: r.ID,\n          label: r.ID2NameNsp(),\n          // subLabel: r.Comment,\n          data: [r, null],\n        };\n        this.addChildren(rx, r);\n        if (r.IsReadOnly) {\n          sitems.push(rx);\n        } else {\n          uitems.push(rx);\n        }\n      }\n    }\n\n    if (sitems.length > 0) {\n      let system: any = { label: this.props.semtalk.getResStr(\"STRSYSTEM\"), key: -1, children: sitems };\n      treeitems.push(system);\n    }\n    if (uitems.length > 0) {\n      let user: any = { label: this.props.semtalk.getResStr(\"STRUSER\"), key: -2, children: uitems };\n      treeitems.push(user);\n    }\n    this.setState({ treeitems: treeitems });\n  }\n  private UpdateByID = (id: number) => {\n    for (let item of this.state.treeitems) {\n      this.updateRec(item, id);\n    }\n  }\n  private updateRec = (item: any, id: number) => {\n    if (item.key === id) {\n      item.label = item.data[0].ID2NameNsp();\n      //' force repaint'\n      this.setState({ treeitems: this.state.treeitems });\n    }\n    if (item.children)\n      for (let citem of item.children) {\n        this.updateRec(citem, id);\n      }\n  }\n  private RemoveByID = (id: number) => {\n    for (let item of this.state.treeitems) {\n      this.removeRec(item, id);\n    }\n  }\n  private removeRec = (item: any, id: number) => {\n    if (item.key === id) {\n      let par = item.data[1];\n      if (par !== null) {\n        this.addChildren(par, par.data[0]);\n      } else {\n        this.load();\n      }\n      //' force repaint'\n      this.setState({ treeitems: this.state.treeitems });\n    }\n    if (item.children)\n      for (let citem of item.children) {\n        this.removeRec(citem, id);\n      }\n  }\n  private renderCustomTreeItem = (item: ITreeItem): JSX.Element => {\n    return (\n      <span>\n        {\n          item.iconProps &&\n          <i className={\"ms-Icon ms-Icon--\" + item.iconProps.iconName} style={{ paddingRight: '4px' }} />\n        }\n        {item.label}\n      </span>\n    );\n  }\n  public render(): React.ReactElement<ISemTalkStateTypesProps> {\n    return (\n      <Fabric>\n        <div className={styles.semTalkStateTypes} >\n          <div className={styles.container}>\n            {this.props.title &&\n              <div className={styles.row}>\n                <div className={styles.column}>\n                  <div className={styles.title}>{this.props.title}</div>\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n        <div>\n          <TreeView\n            items={this.state.treeitems}\n            defaultExpanded={false}\n            selectionMode={TreeViewSelectionMode.Multiple}\n            selectChildrenIfParentSelected={false}\n            selectChildrenMode={SelectChildrenMode.None}\n            showCheckboxes={false}\n            treeItemActionsDisplayMode={TreeItemActionsDisplayMode.ContextualMenu}\n            defaultSelectedKeys={['key1', 'key2']}\n            expandToSelected={true}\n            defaultExpandedChildren={false}\n            onSelect={this.onTreeItemSelect}\n            onExpandCollapse={this.onTreeItemExpandCollapse}\n            onRenderItem={this.renderCustomTreeItem} />\n        </div>\n      </Fabric>\n    );\n  }\n\n  private mounted: boolean = false;\n  public componentDidMount() {\n    // if (this.props.context && this.props.filter) {\n    // SetContext(this.props.context, this.props.filter, this.props.token, this.props.service);\n    // }\n    this.load();\n    addCallBack(this);\n    this.props.semtalk.base._callbacks.push(this);\n    this.mounted = true;\n  }\n  // public componentDidUpdate() {\n  //   this.load(this.props.root);\n  // }\n  public componentWillUnmount() {\n    removeCallBack(this);\n    this.mounted = false;\n  }\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n  public getMessage(e: any) {\n    this.eventListener(e);\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    let mtype: any;\n    try {\n      md = JSON.parse(e.data);\n      mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkObjectBaseEvent.OnDeleted: {\n        this.RemoveByID(Number(md.objectid));\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnRenamed: {\n        this.UpdateByID(Number(md.objectid));\n        break;\n      }\n    }\n  }\n}\n","/* eslint-disable no-useless-concat */\nimport * as React from 'react';\n// import styles from './SemTalkDiagramTypes.module.scss';\nimport {\n  // Link, Selection, IColumn, DetailsList, DetailsListLayoutMode,\n  // CheckboxVisibility, Dropdown, IDropdownOption,\n  Fabric\n} from 'office-ui-fabric-react';\nimport { Guid } from \"guid-typescript\";\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\nimport {\n  SemTalkType,\n  IObjectBase,\n  ISemTalkObject,\n  ISemTalkDiagramType,\n  SemTalkBaseConstant\n} from \"../../application/tbase/Interface\";\nimport { gotoObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\n// import { TreeView, ITreeItem, TreeViewSelectionMode, TreeItemActionsDisplayMode } from \"@pnp/spfx-controls-react/lib/TreeView\";\nimport { TreeView, ITreeItem, TreeViewSelectionMode, TreeItemActionsDisplayMode, SelectChildrenMode } from \"../treeView\";\nimport { SemTalkObjectBaseEvent } from '../../application/tbase/Interface';\n\n\nexport interface ISemTalkDiagramTypesProps {\n  semtalk: IVisioRDFS;\n  callback: any;\n}\nexport interface ISemTalkDiagramTypesState {\n  objectid: number;\n  objects: ISemTalkObject[];\n  base: IObjectBase;\n  treeitems: ITreeItem[];\n  selecteditems: ITreeItem[];\n\n}\nexport class SemTalkDiagramTypes extends React.Component<ISemTalkDiagramTypesProps, ISemTalkDiagramTypesState> {\n  // private _selection: Selection;\n  public callback: Guid;\n\n  constructor(props: ISemTalkDiagramTypesProps) {\n    super(props);\n    console.log(\"SemTalkDiagramTypesProps\");\n    this.callback = Guid.create();\n    this.state = {\n      objectid: -1,\n      objects: [],\n      base: this.props.semtalk.base,\n      treeitems: [],\n      selecteditems: [],\n    };\n  }\n\n  private onTreeItemSelect = (items: ITreeItem[]) => {\n    //   console.log(\"Items selected: \", items);\n    this.setState({ selecteditems: items });\n  }\n  private onTreeItemExpandCollapse = (item: ITreeItem, isExpanded: boolean) => {\n    if (!item.data) return;\n    let obj = item.data[0];\n    let ob = this.state.base;\n    if (item.children && obj && ob.IsDiagramType(obj)) {\n      for (let rx of item.children) {\n        let chi = rx.data[0];\n        if (ob.IsDiagramType(chi)) {\n          this.addChildren(rx, chi as ISemTalkDiagramType);\n        }\n      }\n    }\n  }\n\n  private addChildren = (item: any, obj: ISemTalkDiagramType) => {\n    let children: any[] = [];\n    let cl: ISemTalkDiagramType = obj as ISemTalkDiagramType;\n    for (let r of cl.SubClasses()) {\n      let rx: any = {\n        key: r.ID,\n        label: r.ID2NameNsp(),\n        //   subLabel: r.Comment,\n        data: [r, item],\n        actions: [{\n          title: this.props.semtalk.getResStrListener(\"STRDLHTMLPROPS\"),\n          iconProps: {\n            iconName: 'Edit'\n          },\n          id: \"EditItem\",\n          actionCallback: async (treeItem: ITreeItem) => {\n            // this.exportItem([treeItem]);\n            gotoObject(treeItem.data[0].ID);\n            this.props.callback.editObject();\n            //  console.log(treeItem);\n          }\n        }]\n      };\n      rx.actions.push({\n        title: this.props.semtalk.getResStr(\"STRNEWCLASS\"),\n        id: \"NewClassItem\",\n        iconProps: {\n          iconName: 'Add'\n        },\n        actionCallback: async (treeItem: ITreeItem) => {\n          let sup: ISemTalkDiagramType = treeItem.data[0];\n          let base: IObjectBase = sup.ObjectBase;\n          base.maxid = base.maxid + 1;\n          let cname = \"StateType\" + \".\" + base.maxid;\n          let clobj: ISemTalkDiagramType;\n          clobj = base.MakeDiagramType(cname, base.maxid);\n          if (!clobj.IsParent(sup)) {\n            clobj.AddSubclassOf(sup);\n          }\n          gotoObject(clobj.ID);\n          this.props.callback.editObject();\n          // if (treeItem.data[1] !== null) {\n          //   this.addChildren(treeItem.data[1], sup, assocname);\n          // }\n          this.addChildren(treeItem, sup);\n          this.onTreeItemExpandCollapse(treeItem, true);\n          this.setState({ treeitems: this.state.treeitems });\n        }\n      });\n      children.push(rx);\n    }\n    if (children.length > 0) {\n      item.children = children;\n    } else {\n      item.children = undefined;\n    }\n    item.actions = [];\n    item.actions.push({\n      title: this.props.semtalk.getResStrListener(\"STRDLHTMLPROPS\"),\n      iconProps: {\n        iconName: 'Edit'\n      },\n      id: \"EditItem\",\n      actionCallback: async (treeItem: ITreeItem) => {\n        // this.exportItem([treeItem]);\n        gotoObject(treeItem.data[0].ID);\n        this.props.callback.editObject();\n      }\n    });\n    item.actions.push({\n      title: this.props.semtalk.getResStr(\"STRNEWCLASS\"),\n      id: \"NewClassItem\",\n      iconProps: {\n        iconName: 'Add'\n      },\n      actionCallback: async (treeItem: ITreeItem) => {\n        let sup: ISemTalkDiagramType = treeItem.data[0];\n        let base: IObjectBase = sup.ObjectBase;\n        base.maxid = base.maxid + 1;\n        let cname = \"DiagramType\" + \".\" + base.maxid;\n        let clobj: ISemTalkDiagramType;\n        clobj = base.MakeDiagramType(cname, base.maxid);\n        if (!clobj.IsParent(sup)) {\n          clobj.AddSubclassOf(sup);\n        }\n        gotoObject(clobj.ID);\n        this.props.callback.editObject();\n        // if (treeItem.data[1] !== null) {\n        //   this.addChildren(treeItem.data[1], sup, assocname);\n        // }\n        this.addChildren(item, obj);\n        this.onTreeItemExpandCollapse(item, true);\n        this.setState({ treeitems: this.state.treeitems });\n      }\n    });\n    //  if (obj.ObjectBase.IsSystemClass(obj)) {\n    item.actions.push({\n      title: this.props.semtalk.getResStrListener(\"STRDLGLCAPTION\").replace(\":\", \"\"),\n      iconProps: {\n        iconName: 'Settings'\n      },\n      id: \"customizeObject\",\n      actionCallback: async (treeItem: ITreeItem) => {\n        // this.exportItem([treeItem]);\n        gotoObject(treeItem.data[0].ID);\n        this.props.callback.customizeObject();\n      }\n    });\n    //  }\n    if (!(obj.ObjectBase.IsClass(obj) && (obj as ISemTalkDiagramType).IsReadOnly)) {\n      item.actions.push({\n        title: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\n        iconProps: {\n          iconName: 'Delete'\n        },\n        id: \"DeleteItem\",\n        actionCallback: async (treeItem: ITreeItem) => {\n          // this.exportItem([treeItem]);\n          gotoObject(treeItem.data[0].ID);\n          this.props.callback.deleteObject();\n        }\n      });\n    }\n  }\n\n  private load = () => {\n    let treeitems: any[] = [];\n    let ob = this.state.base;\n\n    let sitems: any[] = [];\n    let uitems: any[] = [];\n\n    const bl: string[] = [SemTalkBaseConstant.SLHas];\n    let alist = ob.AllDiagramTypes();\n    alist.sort((x, y) => { return x.ObjectCaption.localeCompare(y.ObjectCaption); });\n    for (let r of alist) {\n      if (r.ObjectType === SemTalkType.SemTalkDiagramType && bl.indexOf(r.ObjectName) < 0) {\n        let rx: any = {\n          key: r.ID,\n          label: r.ID2NameNsp(),\n          // subLabel: r.Comment,\n          data: [r, null],\n        };\n        this.addChildren(rx, r);\n        if (r.IsReadOnly) {\n          sitems.push(rx);\n        } else {\n          uitems.push(rx);\n        }\n      }\n    }\n\n    if (sitems.length > 0) {\n      let system: any = { label: this.props.semtalk.getResStr(\"STRSYSTEM\"), key: -1, children: sitems };\n      treeitems.push(system);\n    }\n    if (uitems.length > 0) {\n      let user: any = { label: this.props.semtalk.getResStr(\"STRUSER\"), key: -2, children: uitems };\n      treeitems.push(user);\n    }\n    this.setState({ treeitems: treeitems });\n  }\n  private UpdateByID = (id: number) => {\n    for (let item of this.state.treeitems) {\n      this.updateRec(item, id);\n    }\n  }\n  private updateRec = (item: any, id: number) => {\n    if (item.key === id) {\n      item.label = item.data[0].ID2NameNsp();\n      //' force repaint'\n      this.setState({ treeitems: this.state.treeitems });\n    }\n    if (item.children)\n      for (let citem of item.children) {\n        this.updateRec(citem, id);\n      }\n  }\n  private RemoveByID = (id: number) => {\n    for (let item of this.state.treeitems) {\n      this.removeRec(item, id);\n    }\n  }\n  private removeRec = (item: any, id: number) => {\n    if (item.key === id) {\n      let par = item.data[1];\n      if (par !== null) {\n        this.addChildren(par, par.data[0]);\n      } else {\n        this.load();\n      }\n      //' force repaint'\n      this.setState({ treeitems: this.state.treeitems });\n    }\n    if (item.children)\n      for (let citem of item.children) {\n        this.removeRec(citem, id);\n      }\n  }\n  private renderCustomTreeItem = (item: ITreeItem): JSX.Element => {\n    return (\n      <span>\n        {\n          item.iconProps &&\n          <i className={\"ms-Icon ms-Icon--\" + item.iconProps.iconName} style={{ paddingRight: '4px' }} />\n        }\n        {item.label}\n      </span>\n    );\n  }\n  public render(): React.ReactElement<ISemTalkDiagramTypesProps> {\n    return (\n      <Fabric>\n        <div>\n          <TreeView\n            items={this.state.treeitems}\n            defaultExpanded={false}\n            selectionMode={TreeViewSelectionMode.Multiple}\n            selectChildrenIfParentSelected={false}\n            selectChildrenMode={SelectChildrenMode.None}\n            showCheckboxes={false}\n            treeItemActionsDisplayMode={TreeItemActionsDisplayMode.ContextualMenu}\n            defaultSelectedKeys={['key1', 'key2']}\n            expandToSelected={true}\n            defaultExpandedChildren={false}\n            onSelect={this.onTreeItemSelect}\n            onExpandCollapse={this.onTreeItemExpandCollapse}\n            onRenderItem={this.renderCustomTreeItem} />\n        </div>\n        {/* {!this.props.islist && !this.props.iscombo &&\n          <Nav //onRenderGroupHeader={this._onRenderGroupHeader}\n            //     onRenderLink={this._onRenderLink\n            onLinkExpandClick={this._expand}\n            onLinkClick={this._click}\n            groups={this.state.groups}\n          ></Nav>\n        }\n        {this.props.islist &&\n          <DetailsList\n            // ref={this._resolveList}\n            items={this.state.objects}\n            compact={true}\n            columns={_columns}\n            selectionMode={SelectionMode.single}\n            layoutMode={DetailsListLayoutMode.justified}\n            selection={this._selection}\n            checkboxVisibility={CheckboxVisibility.hidden}\n          />\n        }\n        {this.props.iscombo &&\n          <Dropdown\n            // ref={this._resolveList}\n            onChange={this._onOptionChange}\n            options={this.state.options}\n          />\n        } */}\n      </Fabric>\n    );\n  }\n  // private _onRenderGroupHeader(group: INavLinkGroup): JSX.Element {\n  //   return <h3>{group.name}</h3>;\n  // }\n\n  private mounted: boolean = false;\n  public componentDidMount() {\n    // if (this.props.context && this.props.filter) {\n    // SetContext(this.props.context, this.props.filter, this.props.token, this.props.service);\n    // }\n    this.load();\n    addCallBack(this);\n    this.props.semtalk.base._callbacks.push(this);\n    this.mounted = true;\n  }\n  // public componentDidUpdate() {\n  //   this.load(this.props.root);\n  // }\n  public componentWillUnmount() {\n    removeCallBack(this);\n    this.mounted = false;\n  }\n\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n  public getMessage(e: any) {\n    this.eventListener(e);\n  }\n\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    let mtype: any;\n    try {\n      md = JSON.parse(e.data);\n      mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkObjectBaseEvent.OnDeleted: {\n        this.RemoveByID(Number(md.objectid));\n        break;\n      }\n      case SemTalkObjectBaseEvent.OnRenamed: {\n        this.UpdateByID(Number(md.objectid));\n        break;\n      }\n    }\n  }\n}","import * as React from 'react';\r\n// import type { Key } from 'react';\r\nimport ReactDataGrid, {\r\n  RowsChangeData,\r\n  TextEditor,\r\n  SortColumn,\r\n  // SelectColumn,\r\n} from 'react-data-grid';\r\n// import styles from './SemTalkTableEditor.module.scss';\r\n// import { exportToCsv } from './components/exportUtils';\r\nimport {\r\n  Selection, CommandBar, DefaultButton, ComboBox, IComboBox, IComboBoxOption, IconButton,\r\n  SearchBox,\r\n  // Dropdown, IDropdownOption,\r\n  DetailsList, SelectionMode, CheckboxVisibility,\r\n  IContextualMenuProps,\r\n  // Callout, Label, DirectionalHint, \r\n  Panel, TextField,\r\n  Stack, StackItem,\r\n  // MessageBar, MessageBarType, MessageBarButton\r\n  Dialog, DialogFooter, DialogType,\r\n  PrimaryButton\r\n\r\n\r\n} from 'office-ui-fabric-react';\r\nimport { ISelection } from 'office-ui-fabric-react/lib/utilities/selection/index';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { IVisioRDFS, SemTalkUIConstant } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { Process_ElementName, SIM_AttributeTypeName } from '../../application/semtalklistener/processInterface';\r\nimport { BPMN_ElementName } from '../../application/semtalklistener/subtask/bpmn/bpmninterface';\r\nimport { VisioRDFS } from '../../application/semtalklistener/visiordfs';\r\nimport {\r\n  IMongoOption,\r\n  mgDeleteItem,\r\n  mgGetCollections, mgGetItems,\r\n  mgInsertItems, mgSetValue, mgUnsetValue,\r\n  // mgGetDocument,\r\n  mgGetItem\r\n} from '../../SemTalkMongoServer';\r\nimport { isArray } from 'lodash';\r\nimport {\r\n  IObjectBase, ISemTalkSystemClass, SemTalkBaseConstant, ISemTalkObject,\r\n  ISemTalkAttribute, ISemTalkGenericAttributeTabSpec,\r\n  SemTalkLanguage, SemTalkType\r\n} from \"../../application/tbase/Interface\";\r\nimport { SemTalkCookie } from \"../../ISemTalkOnline\";\r\nimport { excel_workbook, export_worksheet, save_excel } from '../../excel';\r\nimport { import_excel } from '../../excel';\r\n\r\n// import { textEditorClassname } from './components/TextEditor'\r\n\r\n// https://github.com/adazzle/react-data-grid/tree/main/website\r\n\r\nexport interface ISemTalkRepositoryProps {\r\n  title?: string;\r\n  mongo: IMongoOption;\r\n  semtalk?: IVisioRDFS;\r\n  context?: any;\r\n  site?: string;\r\n  //setToken: any;\r\n  showSimulation: boolean;\r\n  showBPMN: boolean;\r\n}\r\n\r\n// interface IDataGridEditorOption {\r\n//   key: string;\r\n//   name: string;\r\n// }\r\n\r\nexport interface ISemTalkRepositoryState {\r\n  rows: any[];\r\n  newitem: boolean;\r\n  sel: ISelection;\r\n  showitems: boolean;\r\n  columns: any[];\r\n  keys: string[];\r\n  selCollection: string;\r\n  newColumn: boolean;\r\n  newList: boolean;\r\n  lookupoptions: any[];\r\n  column: string;\r\n  selectmultiple: SelectionMode;\r\n  selectionText: string;\r\n  rowid: string;\r\n  sortColumns: SortColumn[];\r\n  root: ISemTalkSystemClass | null;\r\n  contextualMenuProps?: IContextualMenuProps;\r\n  commands: any[];\r\n  columnoptions: any[];\r\n  classcolumnoptions: any[];\r\n  listoptions: any[];\r\n  insertoptions: any[];\r\n  isclass: boolean;\r\n  hideConfirmDeletionDialog: boolean;\r\n  filter: string;\r\n}\r\ninterface IOption {\r\n  key: string;\r\n  text: string;\r\n}\r\n\r\nexport class SemTalkRepository extends React.Component<ISemTalkRepositoryProps, ISemTalkRepositoryState> {\r\n  private res: IVisioRDFS;\r\n  private collectionnames: string[] = [];\r\n  private _lookupselection: Selection;\r\n  private _classitem: any = {};\r\n  private _addclasssubmenus: any[] = [];\r\n  private _propname: string = \"\";\r\n  private _objectname: string = \"\";\r\n  private _comboBoxInsert = React.createRef<IComboBox>();\r\n  private SLInformation: string = \"Object\";\r\n  private ob: IObjectBase;\r\n  private infotype: string;\r\n  private noevents = false;\r\n\r\n  constructor(props: ISemTalkRepositoryProps) {\r\n    super(props);\r\n    if (this.props.semtalk) {\r\n      this.res = this.props.semtalk;\r\n      this.ob = this.props.semtalk.base;\r\n      this.SLInformation = this.ob.GetModelAttribute(Process_ElementName.SLInformation);\r\n      this.infotype = this.ob.GetModelAttribute(Process_ElementName.SLInfoType);\r\n    } else {\r\n      this.res = new VisioRDFS(null, null);\r\n    }\r\n    this._lookupselection = new Selection({\r\n      onSelectionChanged: async () => {\r\n        if (!this.noevents) {\r\n          let newtext = this._getLookupSelectionDetails();\r\n          let values = this._getLookupSelection();\r\n          this.setState({ selectionText: newtext });\r\n          await this.updateitem(this.state.rowid, this.state.column, values.join(\"; \"));\r\n          await this.reload(this.state.selCollection, this.state.filter);\r\n\r\n          // let newtext = this._getLookupSelectionDetails();\r\n          // this.setState({ selectionText: newtext });\r\n          // await this.updateitem(this.state.rowid, this.state.column, newtext);\r\n        }\r\n      },\r\n    });\r\n\r\n    let D = \"German\";\r\n    let E = \"English\";\r\n    if (this.props.semtalk) {\r\n      let ob = this.props.semtalk.base;\r\n      let d = ob.FindInstance(SemTalkLanguage.German);\r\n      if (d) D = d.ObjectCaption;\r\n      let e = ob.FindInstance(SemTalkLanguage.English);\r\n      if (e) E = e.ObjectCaption;\r\n    }\r\n\r\n\r\n    let classcolumnoptions = [\r\n      { key: \"Comment\", text: this.res.getResStrListener(\"STRCOMMENT\") },\r\n      { key: \"Domain\", text: \"Domain\" },\r\n      { key: SemTalkLanguage.German, text: D },\r\n      { key: SemTalkLanguage.English, text: E },\r\n      { key: \"SuperClass\", text: this.res.getResStrListener(\"STRDLHTMLOUTSUP\") },\r\n      { key: \"Attribute\", text: this.res.getResStr(\"STRATTRIBUTES\") },\r\n      { key: \"States\", text: this.res.getResStr(\"STRSTATES\") },\r\n      { key: \"Method\", text: this.res.getResStr(\"STRMETHODS\") }];\r\n\r\n    let gl = (window as any).localStorage.getItem(SemTalkCookie.guilanguage);\r\n    if (!gl) gl = \"de\";\r\n    this.res.init(null, gl);\r\n    this.state = ({\r\n      rows: [],\r\n      newitem: false,\r\n      sel: new Selection({}),\r\n      showitems: false,\r\n      columns: [],\r\n      keys: [],\r\n      // propname: \"\",\r\n      // collections: [],\r\n      selCollection: \"\",\r\n      newColumn: false,\r\n      newList: false,\r\n      // filters: {},\r\n      column: \"\",\r\n      lookupoptions: [],\r\n      selectmultiple: SelectionMode.multiple,\r\n      selectionText: \"\",\r\n      rowid: \"\",\r\n      sortColumns: [],\r\n      root: null,\r\n      commands: [],\r\n      columnoptions: this.initColumnOptions(),\r\n      listoptions: this.initListOptions(),\r\n      classcolumnoptions: classcolumnoptions,\r\n      insertoptions: [],\r\n      isclass: true,\r\n      hideConfirmDeletionDialog: true,\r\n      filter: \"\"\r\n    });\r\n\r\n  }\r\n  private initListOptions = (): { key: string, text: string }[] => {\r\n    if (this.props.semtalk) {\r\n      const bl = [SemTalkBaseConstant.SLAttachment, SemTalkBaseConstant.SLDocumentInfo,\r\n        BPMN_ElementName.FlowChartElement, SemTalkUIConstant.SemTalkUserTab,\r\n          \"Legend Shape\", \"SAP\", Process_ElementName.SLOfftime,\r\n          \"Funktionsband\", \"Functional band\", SemTalkBaseConstant.SLSwimlane,\r\n        SemTalkBaseConstant.SLComment, SemTalkUIConstant.SLHidden, SemTalkBaseConstant.SLLanguage];\r\n      let ob = this.props.semtalk.base;\r\n      let allclasses: ISemTalkSystemClass[] = [];\r\n      for (let a of ob.AllSystemClasses()) {\r\n        if (!a.Hide && a.ObjectType===SemTalkType.SemTalkClass && bl.indexOf(a.ObjectName)<0) {\r\n          allclasses.push(a);\r\n        }\r\n      }\r\n      allclasses = allclasses.sort((a: any, b: any): number => {\r\n        let an = a.ObjectCaption;\r\n        let bn = b.ObjectCaption;\r\n        return an.localeCompare(bn);\r\n      });\r\n      let res: { key: string, text: string }[] =[];\r\n      for (let a of allclasses) {\r\n        res.push({key: a.ID2Name, text: a.ObjectCaption});\r\n      }\r\n      return res;\r\n    }\r\n    return [];\r\n  }\r\n  private initColumnOptions = (): { key: string, text: string }[] => {\r\n    let D = \"German\";\r\n    let E = \"English\";\r\n    if (this.props.semtalk) {\r\n      let ob = this.props.semtalk.base;\r\n      let d = ob.FindInstance(SemTalkLanguage.German);\r\n      if (d) D = d.ObjectCaption;\r\n      let e = ob.FindInstance(SemTalkLanguage.English);\r\n      if (e) E = e.ObjectCaption;\r\n    }\r\n    let columnoptions = [\r\n      { key: SemTalkBaseConstant.SLClass, text: this.res.getResStrListener(\"STRDLHTMLOUTCLA\") },\r\n      { key: SemTalkBaseConstant.SLComment, text: this.res.getResStrListener(\"STRCOMMENT\") },\r\n      { key: \"Domain\", text: \"Domain\" },\r\n      { key: SemTalkLanguage.German, text: D },\r\n      { key: SemTalkLanguage.English, text: E }];\r\n    return columnoptions;\r\n  }\r\n\r\n  private getColumnOptions = (cls: ISemTalkSystemClass, isclass: boolean): IOption[] => {\r\n    let ob = cls.ObjectBase;\r\n    let keys: string[] = [];\r\n    let columnoptions: IOption[] = [];\r\n    if (!isclass) {\r\n      if (cls.ObjectType === SemTalkType.SemTalkAssociationType) {\r\n        columnoptions = [{ key: \"From\", text: this.currentColName(\"From\") }\r\n          , { key: \"To\", text: this.currentColName(\"To\") }];\r\n      } else {\r\n        if (cls.BottomUp) {\r\n          let un = cls.GetAttributeOwner(SIM_AttributeTypeName.UserNumber);\r\n          if (un) {\r\n            columnoptions = [{ key: SIM_AttributeTypeName.UserNumber, text: un.ClassOf().ObjectCaption }];\r\n          } else {\r\n            columnoptions = [];\r\n          }\r\n        } else {\r\n          // if (cls.InstDialog && cls.InstDialog.CheckClass) {\r\n          columnoptions = [{ key: SemTalkBaseConstant.SLClass, text: this.currentColName(SemTalkBaseConstant.SLClass) }];\r\n          // }\r\n        }\r\n      }\r\n    } else {\r\n      columnoptions = [];\r\n    }\r\n    columnoptions.push(...[\r\n      {\r\n        key: SemTalkBaseConstant.SLComment,\r\n        text: this.res.getResStrListener(\"STRCOMMENT\")\r\n      }]);\r\n\r\n    if (cls.InstDialog && cls.InstDialog.CheckSynonyms) {\r\n      columnoptions.push(...[\r\n        { key: SemTalkLanguage.German, text: String(ob.FindInstance(SemTalkLanguage.German)?.ObjectCaption) },\r\n        { key: SemTalkLanguage.English, text: String(ob.FindInstance(SemTalkLanguage.English)?.ObjectCaption) }]);\r\n    }\r\n    if (isclass) {\r\n      columnoptions.push(...[\r\n        { key: \"Method\", text: this.currentColName(\"Method\") },\r\n        { key: \"Attribute\", text: this.currentColName(\"Attribute\") },\r\n        { key: \"States\", text: this.currentColName(\"States\") }\r\n      ]);\r\n    }\r\n    if (cls.AllAssociations().find((a) => a.ClassOf().ObjectName === this.infotype)) {\r\n      columnoptions.push({\r\n        key: this.infotype,\r\n        text: (ob.FindSystemClass(this.SLInformation) as ISemTalkObject).ObjectCaption\r\n      });\r\n    }\r\n    for (let co of columnoptions) {\r\n      keys.push(co.key);\r\n    }\r\n    let attgroups: string[] = [];\r\n    for (let ts of cls.TabSpecs()) {\r\n      if (ts.Visible) {\r\n        if (ts.ObjectType === SemTalkType.SemTalkGenericAttributeTabSpec) {\r\n          const ats = ts as ISemTalkGenericAttributeTabSpec;\r\n          if (ats.Group === \"BPMN\" && !this.props.showBPMN) {\r\n            continue;\r\n          }\r\n          if (ats.Group === \"Simulation\" && !this.props.showSimulation) {\r\n            continue;\r\n          }\r\n          attgroups.push(ats.Group);\r\n        }\r\n      }\r\n    }\r\n\r\n    let allattr: ISemTalkAttribute[] = [];\r\n    for (let a of cls.AllAttributes()) {\r\n      if (a.Group === \"\" || attgroups.indexOf(a.Group) > -1) {\r\n        allattr.push(a);\r\n      }\r\n    }\r\n    allattr = allattr.sort((a: any, b: any): number => {\r\n      let an = a.ClassOf().ObjectCaption;\r\n      let bn = b.ClassOf().ObjectCaption;\r\n      return an.localeCompare(bn);\r\n    });\r\n\r\n    for (const attr of allattr) {\r\n      const acla = attr.ClassOf().ObjectName;\r\n      if (keys.indexOf(acla) < 0) {\r\n        keys.push(acla);\r\n        columnoptions.push({ key: acla, text: attr.ClassOf().ObjectCaption });\r\n      }\r\n    }\r\n    this.setState({ \"columnoptions\": columnoptions });\r\n    return columnoptions;\r\n  }\r\n\r\n\r\n  private addClassCommands = (collectionnames: string[], commands: any[]): any[] => {\r\n    this._addclasssubmenus = [];\r\n    if (this.props.semtalk) {\r\n      const base = this.props.semtalk.base;\r\n      const bl = [SemTalkBaseConstant.SLAttachment, SemTalkBaseConstant.SLDocumentInfo,\r\n        BPMN_ElementName.FlowChartElement, SemTalkUIConstant.SemTalkUserTab,\r\n          \"Legend Shape\", \"SAP\", Process_ElementName.SLOfftime,\r\n          \"Funktionsband\", \"Functional band\", SemTalkBaseConstant.SLSwimlane,\r\n        SemTalkBaseConstant.SLComment, SemTalkUIConstant.SLHidden, SemTalkBaseConstant.SLLanguage];\r\n        const infname = base.GetModelAttribute(Process_ElementName.SLInformation);\r\n      for (let sc of base.AllSystemClasses()) {\r\n        if (sc.ObjectType !== SemTalkType.SemTalkDiagramType &&\r\n          sc.ObjectType !== SemTalkType.SemTalkAssociationType &&\r\n          !sc.OnceOnly && !sc.BottomUp &&\r\n          bl.indexOf(sc.ObjectName) < 0 && !sc.Hide) {\r\n          let cname = this.props.semtalk.getSPListName(sc.ObjectName);\r\n          let oname = sc.ObjectCaption;\r\n          // if (cname === sc.ObjectName) {\r\n          if (this.collectionnames.indexOf(cname) < 0) {\r\n            continue;\r\n          }\r\n          // if (collectionnames.indexOf(cname) < 0) {\r\n          //   continue;\r\n          // }\r\n          let nlist: any[] = [];\r\n          let clist = this.initColumnOptions();\r\n          let isclass: boolean = false;\r\n          if (sc.ObjectName === infname) {\r\n            let res = sc.AllSubClasses().map((x) => {\r\n              return { key: x.ID2Name, text: x.ObjectCaption };\r\n            });\r\n            isclass = true;\r\n            nlist = res.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n          } else {\r\n            let res = sc.AllInstances().map((x) => {\r\n              return { key: x.ID2Name, text: x.ID2Name };\r\n            });\r\n            nlist = res.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n\r\n            clist = this.getColumnOptions(sc, false);\r\n            // let aes = sc.AllAttributeTypes().map((x) => {\r\n            //   return { key: x.ID2Name, text: x.ID2Name };\r\n            // });\r\n            // clist.push(...aes.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); }));\r\n          }\r\n          this._addclasssubmenus.push(\r\n            {\r\n              key: cname,\r\n              text: oname + \" (\" + cname + \")\",\r\n              onClick: (): void => {\r\n                // this.loadObject(-1, sc);\r\n                this.setState({\r\n                  selCollection: cname,\r\n                  root: sc,\r\n                  insertoptions: nlist,\r\n                  columnoptions: clist,\r\n                  isclass: isclass\r\n                });\r\n                this._classitem[\"name\"] = cname;\r\n                this.reload(cname, \"\");\r\n                // this.props.callback.selectDataLang(lang.ObjectName);\r\n              },\r\n            }\r\n          );\r\n          if (isclass) {\r\n            let mname = \"Method\";\r\n            let res = base.AllMethodTypes().map((x) => {\r\n              return { key: x.ID2Name, text: x.ObjectCaption };\r\n            });\r\n            let mlist = res.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n            this._addclasssubmenus.push(\r\n              {\r\n                key: \"methods\",\r\n                text: \" - \" + this.res.getResStr(\"STRMETHODS\") + \" (Method)\",\r\n                onClick: (): void => {\r\n                  // this.loadObject(-1, sc);\r\n                  this.setState({\r\n                    selCollection: mname,\r\n                    insertoptions: mlist\r\n                  });\r\n                  this._classitem[\"name\"] = mname;\r\n                  this.reload(mname, \"\");\r\n                  // this.props.callback.selectDataLang(lang.ObjectName);\r\n                },\r\n              }\r\n            );\r\n            let sname = \"State\";\r\n            let sres = base.AllStateTypes().map((x) => {\r\n              return { key: x.ID2Name, text: x.ObjectCaption };\r\n            });\r\n            let slist = sres.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n            this._addclasssubmenus.push(\r\n              {\r\n                key: \"state\",\r\n                text: \" - \" + this.res.getResStr(\"STRSTATES\") + \" (State)\",\r\n                onClick: (): void => {\r\n                  // this.loadObject(-1, sc);\r\n                  this.setState({\r\n                    selCollection: sname,\r\n                    insertoptions: slist\r\n                  });\r\n                  this._classitem[\"name\"] = sname;\r\n                  this.reload(sname, \"\");\r\n                  // this.props.callback.selectDataLang(lang.ObjectName);\r\n                },\r\n              }\r\n            );\r\n            let aname = \"Attribute\";\r\n            let ares = base.AllAttributeTypes().map((x) => {\r\n              return { key: x.ID2Name, text: x.ObjectCaption };\r\n            });\r\n            let alist = ares.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n            this._addclasssubmenus.push(\r\n              {\r\n                key: \"attribute\",\r\n                text: \" - \" + this.res.getResStr(\"STRATTRIBUTES\") + \" (Attribute)\",\r\n                onClick: (): void => {\r\n                  // this.loadObject(-1, sc);\r\n                  this.setState({\r\n                    selCollection: aname,\r\n                    insertoptions: alist\r\n                  });\r\n                  this._classitem[\"name\"] = aname;\r\n                  this.reload(aname, \"\");\r\n                  // this.props.callback.selectDataLang(lang.ObjectName);\r\n                },\r\n              }\r\n            );\r\n          }\r\n        }\r\n      }\r\n      this._classitem =\r\n      {\r\n        key: 'classitem',\r\n        name: \"Objects\",\r\n        split: true,\r\n        cacheKey: 'classitem', // changing this key will invalidate this items cache\r\n        iconProps: {\r\n          iconName: 'Diamond'\r\n        },\r\n        subMenuProps: { items: this._addclasssubmenus },\r\n      };\r\n      commands.unshift(this._classitem);\r\n    } else {\r\n      for (let cname of collectionnames) {\r\n        let isclass: boolean = (cname === \"Objects\");\r\n        this._addclasssubmenus.push(\r\n          {\r\n            key: cname,\r\n            text: cname,\r\n            onClick: (): void => {\r\n              // this.loadObject(-1, sc);\r\n              this.setState({\r\n                selCollection: cname,\r\n                isclass: isclass\r\n              });\r\n              this._classitem[\"name\"] = cname;\r\n              this.reload(cname, \"\");\r\n              // this.props.callback.selectDataLang(lang.ObjectName);\r\n            },\r\n          }\r\n        );\r\n      }\r\n      // const actname = \"Objects\";\r\n      this._classitem =\r\n      {\r\n        key: 'classitem',\r\n        name: this.state.selCollection,\r\n        split: true,\r\n        cacheKey: 'classitem', // changing this key will invalidate this items cache\r\n        iconProps: {\r\n          iconName: 'Diamond'\r\n        },\r\n        subMenuProps: { items: this._addclasssubmenus },\r\n      };\r\n      commands.unshift(this._classitem);\r\n\r\n    }\r\n    return commands;\r\n  }\r\n  public componentDidMount() {\r\n    this.init();\r\n  }\r\n  public init = async () => {\r\n    let commands = this.getCommands();\r\n    this.noevents = false;\r\n    this.collectionnames = await this.getCollections();\r\n    commands = this.addClassCommands(this.collectionnames, commands);\r\n    let collection = \"Objects\";\r\n\r\n    let nlist: any[] = [];\r\n    let sc: ISemTalkSystemClass | null = null;\r\n    if (this.props.semtalk) {\r\n      const base = this.props.semtalk.base;\r\n      const infname = base.GetModelAttribute(Process_ElementName.SLInformation);\r\n      sc = base.FindSystemClass(infname);\r\n      if (sc) {\r\n        let res = sc.AllSubClasses().map((x) => {\r\n          return { key: x.ID2Name, text: x.ObjectCaption };\r\n        });\r\n        nlist = res.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n      }\r\n    }\r\n    this.setState({\r\n      commands: commands,\r\n      selCollection: collection,\r\n      insertoptions: nlist,\r\n      root: sc\r\n    });\r\n    this.reload(collection, \"\");\r\n  }\r\n  public componentWillUnmount() {\r\n  }\r\n\r\n  private getCommands = (): any[] => {\r\n    let commands = [\r\n      {\r\n        key: 'Add',\r\n        name: this.res.getResStr(\"STRNEWITEM\"),\r\n        iconProps: {\r\n          iconName: 'Add'\r\n        },\r\n        onClick: (): void => {\r\n          this._propname = \"\";\r\n          // this._propvalue = \"\";\r\n          this.setState({\r\n            newitem: true,\r\n            newList: false,\r\n            newColumn: false,\r\n            // propname: \"\",\r\n          });\r\n        }\r\n      },\r\n      {\r\n        key: 'Delete',\r\n        name: this.res.getResStr(\"STRDELETE\"),\r\n        iconProps: {\r\n          iconName: 'Delete'\r\n        },\r\n        onClick: (): void => {\r\n          this.deleteItem();\r\n        }\r\n      },\r\n      {\r\n        key: 'div',\r\n        name: \"|\",\r\n      },\r\n      {\r\n        key: 'AddList',\r\n        name: this.res.getResStr(\"STRNEWLIST\"),\r\n        iconProps: {\r\n          iconName: 'Add'\r\n        },\r\n        onClick: (): void => {\r\n          this._propname = \"\";\r\n          // this._propvalue = \"\";\r\n          this.setState({\r\n            newList: true,\r\n            newitem: false,\r\n            newColumn: false,\r\n            // propname: \"\",\r\n          });\r\n        }\r\n      },\r\n      {\r\n        key: 'AddAttr',\r\n        name: this.res.getResStr(\"STRNEWCOLUMN\"),\r\n        iconProps: {\r\n          iconName: 'Add'\r\n        },\r\n        onClick: (): void => {\r\n          this._propname = \"\";\r\n          // this._propvalue = \"\";\r\n          this.setState({\r\n            newColumn: true,\r\n            newList: false,\r\n            newitem: false,\r\n            // propname: \"\",\r\n          });\r\n        }\r\n      },\r\n      {\r\n        key: 'div',\r\n        name: \"|\",\r\n      },\r\n      {\r\n        key: 'exportxls',\r\n        name: this.res.getResStrListener(\"STRDLGEXPORT\").replace(\"&\", \"\") + \" Excel\",\r\n        iconProps: {\r\n          iconName: 'SaveAs'\r\n        },\r\n        onClick: (): void => {\r\n          this.xlsxExport(this.collectionnames);\r\n        }\r\n      },\r\n      {\r\n        key: 'importxls',\r\n        name: this.res.getResStrListener(\"STRDLGIMPORT\").replace(\"&\", \"\") + \" Excel\",\r\n        iconProps: {\r\n          iconName: 'OpenFile'\r\n        },\r\n        onClick: (): void => {\r\n          this.xlsxImport();\r\n        }\r\n      },\r\n    ];\r\n    return commands;\r\n  }\r\n  private reload = async (collection: string, filter: string) => {\r\n    let mongoitems = await mgGetItems(this.props.mongo, this.props.mongo.repository, collection);\r\n\r\n    let keys = this.getKeys(mongoitems);\r\n    let commands = this.state.commands;\r\n\r\n    commands = commands.filter((x) => x[\"key\"] !== \"filterItem\");\r\n\r\n    if (keys.indexOf(\"Domain\") > -1) {\r\n      let submenus: any[] = [];\r\n      for (let dom of [\"All Domains\", \"ERP\", \"Production\"]) {\r\n        submenus.push(\r\n          {\r\n            key: dom,\r\n            text: dom,\r\n            onClick: (): void => {\r\n              let par = this.state.commands.find((x) => x[\"key\"] === \"filterItem\");\r\n              if (par) {\r\n                par[\"name\"] = dom;\r\n              }\r\n              let rows1 = this.getRows(mongoitems, keys, \"\");\r\n              if (dom.length > 0 && dom !== \"All Domains\") {\r\n                rows1 = rows1.filter((x) => x[\"Domain\"] === dom);\r\n              }\r\n              rows1 = rows1.sort((a: any, b: any): number => { return a.name.localeCompare(b.name); });\r\n              this.setState({\r\n                filter: dom,\r\n                rows: rows1\r\n              });\r\n            }\r\n          }\r\n        );\r\n      }\r\n      let filterItem =\r\n      {\r\n        key: 'filterItem',\r\n        name: \"All Domains\",\r\n        split: true,\r\n        cacheKey: \"filter\", // changing this key will invalidate this items cache\r\n        iconProps: {\r\n          iconName: 'Dictionary'\r\n        },\r\n        subMenuProps: { items: submenus },\r\n      };\r\n      commands.push(filterItem);\r\n    }\r\n\r\n\r\n    let columns = this.getColumns(keys);\r\n    let rows = this.getRows(mongoitems, keys, filter);\r\n    rows = rows.sort((a: any, b: any): number => { return a.name.localeCompare(b.name); });\r\n\r\n    this.setState({\r\n      keys: keys,\r\n      rows: rows,\r\n      columns: columns,\r\n      commands: commands,\r\n      filter: filter\r\n    });\r\n  }\r\n\r\n  private getCollections = async (): Promise<string[]> => {\r\n    let collections = await mgGetCollections(this.props.mongo, this.props.mongo.repository);\r\n    // let keys = Object.keys(collections);\r\n    // let colls: string[] = [];\r\n    let collectionnames: string[] = [];\r\n\r\n    // const options: IDropdownOption[] = [];\r\n    for (let collection of collections) {\r\n      const colname: string = collection[\"name\"];\r\n      // console.log(item[key][\"name\"]);\r\n      if (colname === \"Objects\") {\r\n        // options.push({ key: colname, text: colname, isSelected: true });\r\n        this.setState({ selCollection: colname });\r\n        collectionnames.push(colname);\r\n      }\r\n      else {\r\n        // options.push({ key: colname, text: colname });\r\n        collectionnames.push(colname);\r\n      }\r\n    }\r\n    //  this.setState({\r\n    //   collections: options,\r\n    // });\r\n    return collectionnames;\r\n  }\r\n  private setLookupOptions = async (rowid: string, attr: string, vlist: string[]) => {\r\n    if (attr === \"States\") {\r\n      attr = \"State\";\r\n    }\r\n    this.noevents = true;\r\n    let olist: any[] = [];\r\n    let column = \"\";\r\n    if (this.collectionnames.indexOf(attr) > -1) {\r\n      column = attr;\r\n      const attrmongooptions = await mgGetItems(this.props.mongo, this.props.mongo.repository, attr);\r\n      for (const optionmongoitem of attrmongooptions) {\r\n        let optionname = optionmongoitem[\"name\"];\r\n        olist.push({ key: optionname, text: optionname });\r\n      }\r\n    }\r\n    olist = olist.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n    this.setState({ rowid: rowid, lookupoptions: olist, column: column, selectmultiple: SelectionMode.multiple });\r\n    setTimeout(() => {\r\n      for (let v of vlist) {\r\n        this._lookupselection.setKeySelected(v, true, false);\r\n      }\r\n      this.noevents = false;\r\n    }, 100);\r\n  }\r\n  private setLookupOptionsClass = (rowid: string, column: string, vlist: string[]) => {\r\n    this.noevents = true;\r\n    let olist: any[] = [];\r\n    if (this.state.root) {\r\n      for (let c of this.state.root.AllSubClasses())\r\n        olist.push({ key: c.ID2Name, text: c.ObjectCaption });\r\n    }\r\n    olist = olist.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n    this.setState({\r\n      rowid: rowid, lookupoptions: olist,\r\n      column: column,\r\n      selectmultiple: SelectionMode.single,\r\n      selectionText: vlist.join(\"; \")\r\n    });\r\n    setTimeout(() => {\r\n      for (let v of vlist) {\r\n        this._lookupselection.setKeySelected(v, true, false);\r\n      }\r\n      this.noevents = false;\r\n    }, 100);\r\n  }\r\n  private currentColName = (oname: string): string => {\r\n    switch (oname) {\r\n      case \"Class\": {\r\n        return this.res.getResStrListener(\"STRDLHTMLOUTCLA\");\r\n      }\r\n      case \"Method\": {\r\n        return this.res.getResStr(\"STRMETHODS\");\r\n      }\r\n      case \"Attribute\": {\r\n        return this.res.getResStr(\"STRATTRIBUTES\");\r\n      }\r\n      case \"State\": {\r\n        return this.res.getResStr(\"STRSTATES\");\r\n      }\r\n      default: {\r\n        if (this.props.semtalk) {\r\n          const base = this.props.semtalk.base;\r\n          let obj = base.FindAttributeType(oname);\r\n          if (obj) {\r\n            return obj.ObjectCaption;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return oname;\r\n  }\r\n  public selectLookupOptions = (p: any, col: any) => {\r\n    if (col) {\r\n      this._objectname = p[\"name\"];\r\n      let attr = col[\"key\"];\r\n      let vlist: string[] = [];\r\n      if (p[attr]) {\r\n        vlist = p[attr].split(\"; \");\r\n      }\r\n      switch (attr) {\r\n        case \"SuperClass\":\r\n        case \"Class\": {\r\n          this.setLookupOptionsClass(p[\"_id\"], attr, vlist);\r\n          break;\r\n        }\r\n        default: {\r\n          this.setLookupOptions(p[\"_id\"], attr, vlist);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private getRows = (mongoitems: any[], keys: string[], flt: string): any[] => {\r\n    let rows: any[] = [];\r\n    for (const v of mongoitems) {\r\n      let row: any = {};\r\n      // curElement[\"id\"] = v[\"_id\"];\r\n      for (let key of keys) {\r\n        let val: any = v[key];\r\n        if (val === undefined) val = '';\r\n        // switch (key) {\r\n        //   case \"Class\": {\r\n        //     if (this.props.semtalk) {\r\n        //       let cls = this.props.semtalk.base.FindClass(val);\r\n        //       if (cls) {\r\n        //         // val = cls.ObjectCaption;\r\n        //         val = cls.ObjectName;\r\n        //       }\r\n\r\n        //     }\r\n        //     break;\r\n        //   }\r\n        //   default:\r\n        if (isArray(val)) {\r\n          val = val.join(\"; \");\r\n        }\r\n        // }\r\n        row[key] = val;\r\n      }\r\n      if (flt.length > 0) {\r\n        let fnd: boolean = false;\r\n        for (let k in row) {\r\n          fnd = row[k].toLowerCase().indexOf(flt) > -1;\r\n          if (fnd) break;\r\n        }\r\n        if (!fnd) continue;\r\n      }\r\n      rows.push(row);\r\n    }\r\n    return rows;\r\n  }\r\n  private getKeys = (mongoitems: any[]): string[] => {\r\n    let keys: string[] = [];\r\n    for (const mongoitem of mongoitems) {\r\n      for (const attr in mongoitem) {\r\n        if (keys.indexOf(attr) < 0) {\r\n          keys.push(attr);\r\n        }\r\n      }\r\n    }\r\n    return keys;\r\n  }\r\n  private _dosearch = (a: any): any => {\r\n    this.reload(this.state.selCollection, a.toLowerCase());\r\n  }\r\n  private _dosearch10 = (_evt: any, a: any): any => {\r\n    this.reload(this.state.selCollection, a.toLowerCase());\r\n  }\r\n  private _clear = (): any => {\r\n    this.reload(this.state.selCollection, \"\");\r\n  }\r\n\r\n  private getColumns = (keys: string[]): any[] => {\r\n\r\n    let columns: any[] = []; // IDataGridTableHeader[] = [];\r\n    columns.push({\r\n      key: \"name\",\r\n      name: this.res.getResStr(\"STRNAME\"),\r\n      resizable: true,\r\n      width: 150,\r\n      sortable: true,\r\n      filterable: true,\r\n      editable: true,\r\n      editor: TextEditor,\r\n    });\r\n    // columns.push({\r\n    //   key: \"Comment\",\r\n    //   name: \"Comment\",\r\n    //   resizable: true,\r\n    //   width: 150,\r\n    //   sortable: true,\r\n    //   filterable: true,\r\n    //   editable: true,\r\n    //   editor: TextEditor,\r\n    // });\r\n    for (const key of keys) {\r\n      let attr = key;\r\n      if (attr === \"_id\" || attr === \"name\") {\r\n      }\r\n      else {\r\n        // if (attr === \"Method\" || attr === \"States\" || attr === \"Attribute\")\r\n        // {\r\n        let attr1 = attr;\r\n        if (attr1 === \"States\") attr1 = \"State\";\r\n        if (this.collectionnames.indexOf(attr1) > -1) {\r\n          // if (this.options[attr]) {\r\n          let str: string = attr;\r\n          switch (attr) {\r\n            case \"Method\": {\r\n              str = this.res.getResStr(\"STRMETHODS\");\r\n              break;\r\n            }\r\n            case \"Attribute\": {\r\n              str = this.res.getResStr(\"STRATTRIBUTES\");\r\n              break;\r\n            }\r\n            case \"States\": {\r\n              str = this.res.getResStr(\"STRSTATES\");\r\n              break;\r\n            }\r\n          }\r\n          str = str[0].toUpperCase() + str.slice(1);\r\n          columns.push({\r\n            key: attr,\r\n            name: str,\r\n            resizable: true,\r\n            width: 150,\r\n            sortable: true,\r\n            filterable: true,\r\n            editable: false,\r\n            editor: TextEditor,\r\n            editorOptions: {\r\n              // createPortal: true,\r\n              editOnClick: false\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          let str: string = attr;\r\n          if (this.props.semtalk) {\r\n            let inst = this.props.semtalk.base.FindInstance(attr);\r\n            if (inst) {\r\n              str = inst.ObjectCaption;\r\n            }\r\n          }\r\n          switch (attr) {\r\n            case \"Class\": {\r\n              str = this.res.getResStrListener(\"STRDLHTMLOUTCLA\");\r\n              break;\r\n            }\r\n            case \"Comment\": {\r\n              str = this.res.getResStrListener(\"STRCOMMENT\");\r\n              break;\r\n            }\r\n            case \"SuperClass\":\r\n            case \"Superclass\": {\r\n              str = this.res.getResStrListener(\"STRDLHTMLOUTSUP\");\r\n              break;\r\n            }\r\n          }\r\n          str = str[0].toUpperCase() + str.slice(1);\r\n          columns.push({\r\n            key: attr,\r\n            name: str, resizable: true, width: 150, sortable: true,\r\n            filterable: true, editable: true, editor: TextEditor\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return columns;\r\n  }\r\n\r\n\r\n  private deleteItem = async () => {\r\n    // if (this.state.sel.getSelection().length > 0) {\r\n    //   let sel: any = this.state.sel.getSelection()[0];\r\n    //   let pn: string = sel.PropName;\r\n    this.toggleHideDialog();\r\n\r\n    // }\r\n  }\r\n  private toggleHideDialog = () => {\r\n    this.setState({ hideConfirmDeletionDialog: !this.state.hideConfirmDeletionDialog });\r\n  }\r\n  private deleteConfirmedItem = async () => {\r\n    this.setState({ hideConfirmDeletionDialog: !this.state.hideConfirmDeletionDialog });\r\n    let rowid = this.state.rowid;\r\n    await mgDeleteItem(this.props.mongo, this.props.mongo.repository, this.state.selCollection, rowid);\r\n    this.reload(this.state.selCollection, this.state.filter);\r\n  }\r\n\r\n  private objectexists = (name: string): boolean => {\r\n    return (this.state.rows.find((x) => x[\"name\"] === name) !== undefined);\r\n  }\r\n  private isincollection = async (name: string, collection: string): Promise<boolean> => {\r\n    let item = await mgGetItem(this.props.mongo, this.props.mongo.repository, collection, name);\r\n    return (item[\"name\"] !== undefined);\r\n  }\r\n\r\n\r\n  private addnewitem = async () => {\r\n    let options = this._comboBoxInsert.current?.selectedOptions;\r\n    if (this._propname.length > 0 || (options && options.length > 0)) {\r\n      console.debug(options);\r\n      let curObject: any[] = [];\r\n      if (options && options.length > 0) {\r\n        for (let o of options) {\r\n          if (!this.objectexists(o[\"text\"])) {\r\n            curObject.push({ \"name\": o[\"text\"] });\r\n          }\r\n        }\r\n      } else {\r\n        let pname: string = this._propname;\r\n        let values: string[] = [];\r\n        if (pname.length > 0) {\r\n          if (pname.indexOf(\"; \") > -1) {\r\n            values = pname.split(\"; \");\r\n          } else {\r\n            if (pname.indexOf(\", \") > -1) {\r\n              values = pname.split(\", \");\r\n            } else {\r\n              values = [pname];\r\n            }\r\n          }\r\n        }\r\n        for (let o of values) {\r\n          if (!this.objectexists(o)) {\r\n            curObject.push({ \"name\": o });\r\n          }\r\n        }\r\n      }\r\n      if (curObject.length > 0) {\r\n        await mgInsertItems(this.props.mongo, this.props.mongo.repository, this.state.selCollection, curObject);\r\n        await this.reload(this.state.selCollection, \"\");\r\n      }\r\n      this._propname = \"\";\r\n      // this._propvalue = \"\";\r\n      this.setState({\r\n        newitem: false,\r\n        // propname: \"\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        newitem: false,\r\n        // propname: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n  private addnewcolumn = async () => {\r\n    if (this._propname.length > 0) {\r\n      let curObject: any = {\r\n        name: this._propname,\r\n        key: this._propname, resizable: true, width: 150, sortable: true,\r\n        filterable: true, editable: true, editor: TextEditor\r\n      };\r\n      let columns: any[] = this.state.columns;\r\n      columns.push(curObject);\r\n      this._propname = \"\";\r\n      this.setState({\r\n        newColumn: false,\r\n        // propname: \"\",\r\n        columns: columns,\r\n        // filters: {}\r\n      });\r\n    } else {\r\n      this.setState({\r\n        newColumn: false,\r\n        // propname: \"\",\r\n      });\r\n    }\r\n  }\r\n  private addnewlist = async () => {\r\n    if (this._propname.length > 0) {\r\n      let pn = this._propname;\r\n      this._propname = \"\";\r\n      this.reload(pn, \"\");\r\n      this.setState({\r\n        newList: false,\r\n        selCollection: pn\r\n      });\r\n    } else {\r\n      this.setState({\r\n        newList: false,\r\n        // propname: \"\",\r\n      });\r\n    }\r\n  }\r\n  private updateitem = async (id: string, propname: string, propvalue: string) => {\r\n    let islookupcolumn = this.collectionnames.indexOf(propname) > -1;\r\n    if (propname.length > 0 && id.length > 0) {\r\n      if (islookupcolumn) {\r\n        let val: string[] = [];\r\n        if (propvalue.indexOf(\"; \") > -1) {\r\n          val = propvalue.split(\"; \");\r\n        } else {\r\n          if (islookupcolumn && propvalue.length > 0) {\r\n            val = [propvalue];\r\n          }\r\n        }\r\n        let newvalues: any[] = [];\r\n        for (let v of val) {\r\n          let exists: boolean = await this.isincollection(v, propname);\r\n          if (!exists) {\r\n            newvalues.push({ \"name\": v });\r\n          }\r\n        }\r\n        if (newvalues.length > 0) {\r\n          await mgInsertItems(this.props.mongo, this.props.mongo.repository, propname, newvalues);\r\n        }\r\n        if (propname === \"State\") {\r\n          propname = \"States\";\r\n        }\r\n        if (val.length === 0 || propvalue.length === 0) {\r\n          await mgUnsetValue(this.props.mongo, this.props.mongo.dbname, this.props.mongo.repository, id, propname);\r\n        } else {\r\n          await mgSetValue(this.props.mongo, this.props.mongo.repository, this.state.selCollection,\r\n            id, propname, val);\r\n        }\r\n      } else {\r\n        if (propvalue.length === 0) {\r\n          await mgUnsetValue(this.props.mongo, this.props.mongo.dbname, this.props.mongo.repository, id, propname);\r\n        } else {\r\n          await mgSetValue(this.props.mongo, this.props.mongo.repository, this.state.selCollection,\r\n            id, propname, propvalue);\r\n        }\r\n\r\n      }\r\n      // await this.getItems(\"\");\r\n    }\r\n  }\r\n  private cancelnew = async () => {\r\n    this.setState({\r\n      newitem: false,\r\n      newColumn: false,\r\n      newList: false\r\n    });\r\n  }\r\n\r\n  // private selectCollection = async (collection_option: IDropdownOption, index?: number | undefined) => {\r\n  //   this.setState({ selCollection: collection_option.text });\r\n  //   this.reload(collection_option.text);\r\n  // }\r\n\r\n  private _lookupcolumns: any[] = [\r\n    {\r\n      key: 'key',\r\n      name: \"text\",\r\n      fieldName: 'text',\r\n    }\r\n  ];\r\n  private _closeLookupDialog = async (): Promise<void> => {\r\n    await this.updateitem(this.state.rowid, this.state.column, this.state.selectionText);\r\n    this.setState({ lookupoptions: [], column: \"\" });\r\n  }\r\n  private _saveItem = async (): Promise<void> => {\r\n    await this.updateitem(this.state.rowid, this.state.column, this.state.selectionText);\r\n    await this.reload(this.state.selCollection, this.state.filter);\r\n  }\r\n  private key2text = (key: string, columnoptions: { key: string, text: string }[]): string => {\r\n    switch (key) {\r\n      case \"Class\": {\r\n        return this.res.getResStrListener(\"STRDLHTMLOUTCLA\");\r\n      }\r\n      default: {\r\n        for (let opt of columnoptions) {\r\n          if (opt.key === key) {\r\n            return opt.text;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return key;\r\n  }\r\n\r\n  private _getLookupSelectionDetails(): string {\r\n    let txt: string[] = [];\r\n    for (let sel of this._lookupselection.getSelection()) {\r\n      // if (sel.key) {\r\n      if (sel.key) {\r\n        txt.push(this.key2text(String(sel.key), this.state.lookupoptions));\r\n      }\r\n    }\r\n    return txt.join(\"; \");\r\n  }\r\n  private _getLookupSelection(): string[] {\r\n    let val: string[] = [];\r\n    for (let sel of this._lookupselection.getSelection()) {\r\n      if (sel.key) {\r\n        val.push(String(sel.key));\r\n      }\r\n    }\r\n    return val;\r\n  }\r\n\r\n  public render(): React.ReactElement<ISemTalkRepositoryProps> {\r\n    let r: React.ReactElement<ISemTalkRepositoryProps>;\r\n    let gridstyle = {\r\n      grid: { height: this.state.rows.length * 50 }\r\n    };\r\n\r\n    const stackTokens = { childrenGap: 10 };\r\n    r = <Fabric>\r\n      <CommandBar id=\"stButtons\" items={this.state.commands}></CommandBar>\r\n      <Stack>\r\n        <StackItem>\r\n          <Stack horizontal tokens={stackTokens} verticalAlign={'center'}>\r\n            <StackItem grow={3}>\r\n              <SearchBox id='stsearch.strsearch' onSearch={this._dosearch} onChange={this._dosearch10} onClear={this._clear}></SearchBox>\r\n            </StackItem>\r\n            {/* <StackItem grow={1}>\r\n                <Checkbox label=\"Search Page\" checked={this.state.searchpage} onChange={this._toggleSearchPage} />\r\n              </StackItem> */}\r\n          </Stack>\r\n        </StackItem>\r\n      </Stack>\r\n      {this.state.newitem &&\r\n        <div>\r\n          <Stack tokens={stackTokens}>\r\n            <StackItem>\r\n              <ComboBox id=\"stTabEditorName\" text={this._propname} label={this.res.getResStr(\"STRNAME\")}\r\n                componentRef={this._comboBoxInsert}\r\n                required={true}\r\n                allowFreeform={true}\r\n                multiSelect\r\n                options={this.state.insertoptions}\r\n                onChange={(_event: React.FormEvent<IComboBox>, option?: IComboBoxOption, _index?: number, value?: string) => {\r\n                  if (value !== undefined) {\r\n                    this._propname = value;\r\n                    // this.setState({ propname: value });\r\n                  } else {\r\n                    if (option !== undefined) {\r\n                      // this._propname = String(option.key);\r\n                      // this.setState({ propname: String(option.key) });\r\n                    }\r\n                  }\r\n                  //}\r\n                }}></ComboBox>\r\n            </StackItem>\r\n            <Stack tokens={stackTokens} horizontal>\r\n              <StackItem>\r\n                <DefaultButton id=\"okButton\" text={this.res.getResStr(\"STRDLGCMDOK\")} onClick={this.addnewitem} />\r\n              </StackItem>\r\n              <StackItem>\r\n                <DefaultButton id=\"cancelButton\" text={this.res.getResStr(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\r\n              </StackItem>\r\n            </Stack>\r\n          </Stack>\r\n        </div>\r\n      }\r\n      {this.state.newColumn &&\r\n        <div>\r\n          <Stack tokens={stackTokens}>\r\n            <StackItem>\r\n              {this.state.isclass &&\r\n                <ComboBox id=\"stTabEditorNameColumn\" text={this._propname} label={this.res.getResStr(\"STRNAME\")}\r\n                  required={true}\r\n                  allowFreeform={true}\r\n                  options={this.state.classcolumnoptions}\r\n                  onChange={(_event: React.FormEvent<IComboBox>, option?: IComboBoxOption, _index?: number, value?: string) => {\r\n                    if (value !== undefined) {\r\n                      this._propname = value;\r\n                      // this.setState({ propname: value });\r\n                    } else {\r\n                      if (option !== undefined) {\r\n                        this._propname = String(option.key);\r\n                        // this.setState({ propname: String(option.key) });\r\n                      }\r\n                    }\r\n                    //}\r\n                  }}></ComboBox>\r\n              }\r\n              {!this.state.isclass &&\r\n                <ComboBox id=\"stTabEditorNameColumn\" text={this._propname} label={this.res.getResStr(\"STRNAME\")}\r\n                  required={true}\r\n                  allowFreeform={true}\r\n                  options={this.state.columnoptions}\r\n                  onChange={(_event: React.FormEvent<IComboBox>, option?: IComboBoxOption, _index?: number, value?: string) => {\r\n                    if (value !== undefined) {\r\n                      this._propname = value;\r\n                      // this.setState({ propname: value });\r\n                    } else {\r\n                      if (option !== undefined) {\r\n                        this._propname = String(option.key);\r\n                        // this.setState({ propname: String(option.key) });\r\n                      }\r\n                    }\r\n                    //}\r\n                  }}></ComboBox>\r\n              }\r\n            </StackItem>\r\n            <Stack tokens={stackTokens} horizontal>\r\n              <StackItem>\r\n                <DefaultButton id=\"okButton\" text={this.res.getResStr(\"STRDLGCMDOK\")} onClick={this.addnewcolumn} />\r\n              </StackItem>\r\n              <StackItem>\r\n                <DefaultButton id=\"cancelButton\" text={this.res.getResStr(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\r\n              </StackItem>\r\n            </Stack>\r\n          </Stack>\r\n        </div>\r\n      }\r\n      {this.state.newList &&\r\n        <div>\r\n          <Stack tokens={stackTokens}>\r\n            <StackItem>\r\n              <ComboBox id=\"stTabEditorNameList\" text={this._propname} label={this.res.getResStr(\"STRNAME\")}\r\n                required={true}\r\n                allowFreeform={true}\r\n                options={this.state.listoptions}\r\n                onChange={(_event: React.FormEvent<IComboBox>, option?: IComboBoxOption, _index?: number, value?: string) => {\r\n                  if (value !== undefined) {\r\n                    this._propname = value;\r\n                    // this.setState({ propname: value });\r\n                  } else {\r\n                    if (option !== undefined) {\r\n                      this._propname = String(option.key);\r\n                      // this.setState({ propname: String(option.key) });\r\n                    }\r\n                  }\r\n                  //}\r\n                }}></ComboBox>\r\n            </StackItem>\r\n            <Stack tokens={stackTokens} horizontal>\r\n              <StackItem>\r\n                <DefaultButton id=\"okButton\" text={this.res.getResStr(\"STRDLGCMDOK\")} onClick={this.addnewlist} />\r\n              </StackItem>\r\n              <StackItem>\r\n                <DefaultButton id=\"cancelButton\" text={this.res.getResStr(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\r\n              </StackItem>\r\n            </Stack>\r\n          </Stack>\r\n        </div>\r\n      }\r\n      {!this.state.newitem && !this.state.newColumn && !this.state.newList &&\r\n        <div>\r\n          <Dialog\r\n            hidden={this.state.hideConfirmDeletionDialog}\r\n            onDismiss={this.toggleHideDialog}\r\n            dialogContentProps={{\r\n              type: DialogType.normal,\r\n              title: 'Delete',\r\n              subText: 'Do you really want to delete: ' + this._objectname + \" ?\",\r\n            }}\r\n            modalProps={{\r\n              isBlocking: true,\r\n              styles: { main: { maxWidth: 450 } },\r\n              // dragOptions: isDraggable ? dragOptions : undefined,\r\n            }}\r\n          >\r\n            <DialogFooter>\r\n              <PrimaryButton onClick={this.deleteConfirmedItem} text=\"Delete\" />\r\n              <DefaultButton onClick={this.toggleHideDialog} text=\"Cancel\" />\r\n            </DialogFooter>\r\n          </Dialog>\r\n          <ReactDataGrid\r\n            columns={this.state.columns}\r\n            onRowsChange={this.onGridRowsUpdated}\r\n            onRowClick={this.selectLookupOptions}\r\n            rows={this.state.rows}\r\n            defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n            sortColumns={this.state.sortColumns}\r\n            // editorPortalTarget={null}\r\n            // className=\"fill-grid\"\r\n            style={gridstyle.grid}\r\n          // onColumnResize={(idx: number, width: number) =>\r\n          //   console.log(`Column ${idx} has been resized to ${width}`)}\r\n          // selectedRows={this.state.selectedRows}\r\n          // onSelectedCellChange={this.SetSelectedRows}\r\n          />\r\n        </div>\r\n      }\r\n      <Panel isOpen={this.state.lookupoptions.length > 0}\r\n        headerText={this.currentColName(this.state.column)}\r\n        onDismiss={this._closeLookupDialog}\r\n        isBlocking={false}\r\n      ><Stack horizontal>\r\n          <TextField\r\n            // label=\"SetValue:\"\r\n            value={this.state.selectionText}\r\n            onChange={(_e: any, v?: any) =>\r\n              this.setState({ \"selectionText\": v })\r\n            }\r\n          />\r\n          <IconButton iconProps={{ iconName: \"Save\" }}\r\n            text={\"Cancel\"}\r\n            onClick={this._saveItem}>\r\n          </IconButton>\r\n        </Stack>\r\n        <DetailsList\r\n          items={this.state.lookupoptions}\r\n          compact={true}\r\n          columns={this._lookupcolumns}\r\n          selectionMode={this.state.selectmultiple}\r\n          // layoutMode={DetailsListLayoutMode.justified}\r\n          selection={this._lookupselection}\r\n          selectionPreservedOnEmptyClick={true}\r\n          checkboxVisibility={CheckboxVisibility.always}\r\n          isHeaderVisible={false}\r\n        // onItemInvoked={this._onItemInvoked}\r\n        />\r\n      </Panel>\r\n    </Fabric >;\r\n    return r;\r\n  }\r\n\r\n  private onGridRowsUpdated = (rows: any[], data: RowsChangeData<any, any>) => {\r\n    let row = rows[data.indexes[0]];\r\n\r\n    if (row[data.column.key] === undefined) {\r\n      this.updateitem(row['_id'], data.column.key, row[\"NewValue\"]);\r\n    }\r\n    else {\r\n      this.updateitem(row['_id'], data.column.key, row[data.column.key]);\r\n    }\r\n    this.setState({ rows: rows });\r\n  }\r\n\r\n  private xlsxExport = async (collectionnames: string[]) => {\r\n    let wb = excel_workbook();\r\n    for (let collection of collectionnames) {\r\n      if (collection === \"recycle_bin\") continue;\r\n      let mongoitems = await mgGetItems(this.props.mongo, this.props.mongo.repository, collection);\r\n      let keys = this.getKeys(mongoitems);\r\n      let rows = this.getRows(mongoitems, keys, this.state.filter);\r\n      if (rows.length > 0 && keys.length > 0) {\r\n        rows = rows.sort((a: any, b: any): number => { return a.name.localeCompare(b.name); });\r\n        let data: any[] = [];\r\n        for (let item of rows) {\r\n          let row: any = {};\r\n          for (let col in item) {\r\n            let val = item[col];\r\n            if (val === undefined)\r\n              val = \"\";\r\n            if (Array.isArray(val)) {\r\n              val = val[0];\r\n            } else {\r\n              val = val.toString();\r\n            }\r\n            row[col] = val;\r\n          }\r\n          data.push(row);\r\n        }\r\n        let columns: any[] = [\r\n        ];\r\n        keys.shift();\r\n        for (let col of keys) {\r\n          let head = col;\r\n          if (head === \"name\") head = \"Name\";\r\n          columns.push({ header: head, key: col });\r\n        }\r\n        wb = export_worksheet(wb, collection, columns, data);\r\n      }\r\n    }\r\n    save_excel(this.props.mongo.repository + \".xlsx\", wb);\r\n  }\r\n  private xlsxImport = () => {\r\n    import_excel(this.toMongo);\r\n  }\r\n  private toMongo = async (book: any[]) => {\r\n    // if (book.length > 0) {\r\n    for (let sheetname in book) {\r\n      let sheet: any[] = book[sheetname];\r\n      if (sheet.length > 1) {\r\n        let items: any[] = [];\r\n        let columns: string[] = sheet.shift();\r\n        columns.shift();\r\n        if (columns[0] === \"Name\") columns[0] = \"name\";\r\n\r\n        for (let row of sheet) {\r\n          let item = {};\r\n          let i = 1;\r\n          for (let col of columns) {\r\n            let ncol = col;\r\n            if (ncol === \"States\") ncol = \"State\";\r\n            let val: any = row[i];\r\n            if (this.collectionnames.indexOf(ncol) > -1) {\r\n              if (val.indexOf(\";\")) {\r\n                val = val.split(\"; \");\r\n              } else {\r\n                val = [val];\r\n              }\r\n            }\r\n            if (row[i].length > 0) {\r\n              item[col] = val;\r\n            }\r\n            i += 1;\r\n          }\r\n          items.push(item);\r\n        }\r\n        // console.debug(items);\r\n        // if (items.length > 0) {\r\n        await mgDeleteItem(this.props.mongo, this.props.mongo.repository, sheetname, \"*\");\r\n        await mgInsertItems(this.props.mongo, this.props.mongo.repository, sheetname, items);\r\n      }\r\n      // }\r\n    }\r\n    this.reload(this.state.selCollection, \"\");\r\n    // }\r\n  }\r\n}\r\n\r\n// function ExportButton({\r\n//   onExport,\r\n//   children\r\n// }: {\r\n//   onExport: () => Promise<unknown>;\r\n//   children: React.ReactChild;\r\n// }) {\r\n//   const [exporting, setExporting] = useState(false);\r\n//   return (\r\n//     <button\r\n//       disabled={exporting}\r\n//       onClick={async () => {\r\n//         setExporting(true);\r\n//         await onExport();\r\n//         setExporting(false);\r\n//       }}\r\n//     >\r\n//       {exporting ? 'Exporting' : children}\r\n//     </button>\r\n//   );\r\n// }","import * as React from 'react';\r\n// import type { Key } from 'react';\r\nimport ReactDataGrid, {\r\n  RowsChangeData,\r\n  TextEditor,\r\n  SortColumn,\r\n  // FillEvent, PasteEvent\r\n  // SelectColumn,\r\n} from 'react-data-grid';\r\nimport type {\r\n  // FillEvent, \r\n  PasteEvent\r\n} from 'react-data-grid';\r\n// import styles from './SemTalkTableEditor.module.scss';\r\n// import { exportToCsv } from './components/exportUtils';\r\nimport {\r\n  Selection, CommandBar,\r\n  //  DefaultButton, ComboBox, IComboBox, IComboBoxOption, \r\n  IconButton,\r\n  // Dropdown, IDropdownOption,\r\n  DetailsList, SelectionMode, CheckboxVisibility,\r\n  // IContextualMenuProps,\r\n  // Callout, Label, DirectionalHint, \r\n  Panel,\r\n  TextField,\r\n  Stack,\r\n  Label,\r\n  // ComboBox,\r\n  // Label,\r\n  StackItem,\r\n  SearchBox,\r\n  // Checkbox,\r\n  // MessageBar, MessageBarType, MessageBarButton,\r\n  // Dialog, \r\n  // DialogFooter, DialogType,\r\n  // PrimaryButton\r\n\r\n\r\n} from 'office-ui-fabric-react';\r\nimport { ISelection } from 'office-ui-fabric-react/lib/utilities/selection/index';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { IVisioRDFS, SemTalkUIConstant } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { Process_ElementName, SIM_AttributeTypeName } from '../../application/semtalklistener/processInterface';\r\nimport { VisioRDFS } from '../../application/semtalklistener/visiordfs';\r\n// import { addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\nimport { Guid } from \"guid-typescript\";\r\n\r\nimport { isArray } from 'lodash';\r\nimport {\r\n  IObjectBase,\r\n  ISemTalkAssociation,\r\n  ISemTalkAttribute,\r\n  ISemTalkAttributeType,\r\n  ISemTalkBusinessClass,\r\n  // ISemTalkAttributeType, \r\n  ISemTalkClass, ISemTalkGenericAttributeTabSpec, ISemTalkInstance, ISemTalkMethodType, ISemTalkObject, ISemTalkStateType, ISemTalkSystemClass, SemTalkBaseConstant, SemTalkLanguage,\r\n  //  SemTalkObjectBaseEvent, \r\n  SemTalkType,\r\n  SemTalkValueType\r\n} from \"../../application/tbase/Interface\";\r\nimport { ISemTalkOnline, SemTalkCookie } from \"../../ISemTalkOnline\";\r\nimport { excel_workbook, export_worksheet, save_excel } from '../../excel';\r\nimport { import_excel } from '../../excel';\r\nimport { gotoNodeByID, gotoObject } from '../../application/semtalklistener/stglobal';\r\nimport { BPMN_ElementName } from '../../application/semtalklistener/subtask/bpmn/bpmninterface';\r\nimport { getObject } from '../../application/semtalklistener/stgoto';\r\nimport {\r\n  IMongoOption, mgGetItemNames,\r\n  // mgGetItem\r\n} from '../../SemTalkMongoServer';\r\n\r\n// import { textEditorClassname } from './components/TextEditor'\r\n\r\n// https://github.com/adazzle/react-data-grid/tree/main/website\r\n\r\nexport interface ISemTalkTableEditorProps {\r\n  title?: string;\r\n  semtalk: IVisioRDFS;\r\n  callback: ISemTalkOnline;\r\n  context?: any;\r\n  site?: string;\r\n  mongo: IMongoOption;\r\n  //setToken: any;\r\n  showSimulation: boolean;\r\n  showBPMN: boolean;\r\n}\r\n\r\ninterface IExternalObject {\r\n  Object: ISemTalkObject | null;\r\n  ObjectName: string;\r\n  ObjectCaption: string;\r\n  ObjectDescription: string | null;\r\n  EditLink: string | null;\r\n  SPItem: any | null;\r\n  MGItem: any | null;\r\n}\r\n\r\ninterface IOption {\r\n  key: string;\r\n  text: string;\r\n}\r\n\r\nexport interface ISemTalkTableEditorState {\r\n  rows: any[];\r\n  // sel: ISelection;\r\n  showitems: boolean;\r\n  columns: any[];\r\n  keys: string[];\r\n  selClass: string;\r\n  selectcolumns: boolean;\r\n  lookupoptions: any[];\r\n  selectoptions: boolean;\r\n  selectmultiple: SelectionMode;\r\n  selectfreeform: boolean;\r\n  column: string;\r\n  selectionText: string;\r\n  selectedColumns: string[];\r\n  rowid: string;\r\n  sortColumns: SortColumn[];\r\n  root: ISemTalkSystemClass | null;\r\n  // contextualMenuProps?: IContextualMenuProps;\r\n  commands: any[];\r\n  columnoptions: { key: string, text: string }[];\r\n  // classcolumnoptions: any[];\r\n  // insertoptions: any[];\r\n  isclass: boolean;\r\n\r\n  // hideConfirmDeletionDialog: boolean;\r\n  filter: string;\r\n  searchpage: boolean;\r\n}\r\n\r\nexport class SemTalkTableEditor extends React.Component<ISemTalkTableEditorProps, ISemTalkTableEditorState> {\r\n  public callback: Guid;\r\n  private res: IVisioRDFS;\r\n  private _columnselection: ISelection;\r\n  private _lookupselection: ISelection;\r\n  private _classitem: any = {};\r\n  private _addclass_submenus: any[] = [];\r\n  // private _propname: string = \"\";\r\n  private _objectname: string = \"\";\r\n  // private _comboBoxInsert = React.createRef<IComboBox>();\r\n  private ob: IObjectBase;\r\n  private SLInformation: string = \"Object\";\r\n  private infotype: string;\r\n  private noevents = false;\r\n\r\n\r\n  // private _propvalue: string = \"\";\r\n\r\n\r\n  constructor(props: ISemTalkTableEditorProps) {\r\n    super(props);\r\n    this.callback = Guid.create();\r\n    if (this.props.semtalk) {\r\n      this.res = this.props.semtalk;\r\n    } else {\r\n      this.res = new VisioRDFS(null, null);\r\n    }\r\n    this.ob = this.props.semtalk.base;\r\n    this.SLInformation = this.ob.GetModelAttribute(Process_ElementName.SLInformation);\r\n    this.infotype = this.ob.GetModelAttribute(Process_ElementName.SLInfoType);\r\n    this._columnselection = new Selection({\r\n      onSelectionChanged: async () => {\r\n        let selcolumns = this._getColumnSelectionDetails();\r\n        this.setState({ selectedColumns: selcolumns });\r\n        await this.reload(this.state.selClass, selcolumns,\r\n          this.state.columnoptions, \"\");\r\n      },\r\n    });\r\n    this._lookupselection = new Selection({\r\n      onSelectionChanged: async () => {\r\n        if (!this.noevents) {\r\n          // if (this._lookupselection.getSelectedCount() > 0) {\r\n          let newtext = this._getLookupSelectionDetails();\r\n          let values = this._getLookupSelection();\r\n          this.setState({ selectionText: newtext });\r\n          await this.updateitem(this._objectname, this.state.column, values.join(\"; \"));\r\n          await this.reload(this.state.selClass, this.state.selectedColumns,\r\n            this.state.columnoptions, \"\");\r\n          // }\r\n        }\r\n      },\r\n    });\r\n\r\n\r\n    let gl = (window as any).localStorage.getItem(SemTalkCookie.guilanguage);\r\n    if (!gl) gl = \"de\";\r\n    this.res.init(null, gl);\r\n    this.state = ({\r\n      rows: [],\r\n      // newitem: false,\r\n      // sel: new Selection({}),\r\n      showitems: false,\r\n      columns: [],\r\n      keys: [],\r\n      // propname: \"\",\r\n      // collections: [],\r\n      selClass: \"\",\r\n      // newColumn: false,\r\n      // newList: false,\r\n      // // filters: {},\r\n      selectionText: \"\",\r\n      selectcolumns: false,\r\n      lookupoptions: [],\r\n      selectoptions: false,\r\n      selectmultiple: SelectionMode.single,\r\n      selectfreeform: false,\r\n      column: \"\",\r\n      selectedColumns: [],\r\n      rowid: \"\",\r\n      sortColumns: [],\r\n      root: null,\r\n      commands: [],\r\n      columnoptions: [],\r\n      isclass: true,\r\n      // hideConfirmDeletionDialog: true,\r\n      filter: \"\",\r\n      searchpage: false\r\n    });\r\n\r\n  }\r\n  private addClassCommands = (selclass: string, commands: any[]): any[] => {\r\n    this._addclass_submenus = [];\r\n    if (this.props.semtalk) {\r\n      const base = this.props.semtalk.base;\r\n      // const bl: any[] = [SemTalkUIConstant.SLHidden, SemTalkBaseConstant.SLLanguage,\r\n      // SemTalkBaseConstant.SLComment, Process_ElementName.SLOfftime];\r\n      const bl = [SemTalkBaseConstant.SLAttachment, SemTalkBaseConstant.SLDocumentInfo,\r\n      BPMN_ElementName.FlowChartElement, SemTalkUIConstant.SemTalkUserTab,\r\n        \"Legend Shape\", \"SAP\", Process_ElementName.SLOfftime,\r\n        \"Funktionsband\", \"Functional band\", SemTalkBaseConstant.SLSwimlane,\r\n      SemTalkBaseConstant.SLComment, SemTalkUIConstant.SLHidden, SemTalkBaseConstant.SLLanguage];\r\n\r\n      const bl2 = [\"HiddenRelation\", SemTalkBaseConstant.SLSubClassOf, SemTalkBaseConstant.SLInstanceOf,\r\n        SemTalkBaseConstant.SLHasDomain, SemTalkBaseConstant.SLHasRange,\r\n        SemTalkBaseConstant.SLhasAttachment, SemTalkBaseConstant.SLDisplays,\r\n        this.ob.GetModelAttribute(Process_ElementName.STTriggers), this.ob.GetModelAttribute(Process_ElementName.STTriggeredBy), \"breaks\", \"ValidRefinement\",\r\n        //  BPMN_AssociationName.attachedto, \r\n        SemTalkBaseConstant.SLDefinitionOf,\r\n        //  BPMN_AssociationName.dataobject\r\n      ];\r\n\r\n\r\n      const infname = base.GetModelAttribute(Process_ElementName.SLInformation);\r\n      for (let sc of base.AllSystemClasses()) {\r\n        if (sc.ObjectType !== SemTalkType.SemTalkDiagramType &&\r\n          // sc.ObjectType !== SemTalkType.SemTalkAssociationType &&\r\n          // !sc.OnceOnly && !sc.BottomUp &&\r\n          bl2.indexOf(sc.ObjectName) < 0 &&\r\n          bl.indexOf(sc.ObjectName) < 0 && !sc.Hide) {\r\n          let cname = sc.ObjectName;\r\n          let oname = sc.ObjectCaption;\r\n          let isclass: boolean = false;\r\n          if (sc.ObjectName === infname) {\r\n            isclass = true;\r\n            // let res = sc.AllSubClasses().map((x) => {\r\n            //   return { key: x.ID2Name, text: x.ObjectCaption };\r\n            // });\r\n            // isclass = true;\r\n            // nlist = res.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n          } else {\r\n            // let res = sc.AllInstances().map((x) => {\r\n            //   return { key: x.ID2Name, text: x.ID2Name };\r\n            // });\r\n            // nlist = res.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n          }\r\n          this._addclass_submenus.push(\r\n            {\r\n              key: cname,\r\n              text: oname,\r\n              onClick: (): void => {\r\n                this._classitem[\"name\"] = oname;\r\n                let colopts = this.getColumnOptions(sc, isclass);\r\n                let cols = this.defaultColumns(sc, isclass);\r\n                this.reload(cname, cols, colopts, \"\");\r\n                this.setState({\r\n                  selClass: cname,\r\n                  root: sc,\r\n                  // insertoptions: nlist,\r\n                  isclass: isclass,\r\n                  selectedColumns: cols,\r\n                });\r\n                // this.props.callback.selectDataLang(lang.ObjectName);\r\n              },\r\n            }\r\n          );\r\n          // if (isclass) {\r\n          //   let mname = \"Method\";\r\n          //   // let res = base.AllMethodTypes().map((x) => {\r\n          //   //   return { key: x.ID2Name, text: x.ObjectCaption };\r\n          //   // });\r\n          //   // let mlist = res.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n          //   this._addclass_submenus.push(\r\n          //     {\r\n          //       key: \"methods\",\r\n          //       text: \" - Methods (Method)\",\r\n          //       onClick: (): void => {\r\n          //         // this.loadObject(-1, sc);\r\n          //         this.setState({\r\n          //           selClass: mname,\r\n          //           // insertoptions: mlist\r\n          //         });\r\n          //         this._classitem[\"name\"] = mname;\r\n          //         this.reload(mname, this.state.selectedColumns, this.state.columnoptions);\r\n          //         // this.props.callback.selectDataLang(lang.ObjectName);\r\n          //       },\r\n          //     }\r\n          //   );\r\n          //   let sname = \"State\";\r\n          //   // let sres = base.AllStateTypes().map((x) => {\r\n          //   //   return { key: x.ID2Name, text: x.ObjectCaption };\r\n          //   // });\r\n          //   // let slist = sres.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n          //   this._addclass_submenus.push(\r\n          //     {\r\n          //       key: \"state\",\r\n          //       text: \" - States (State)\",\r\n          //       onClick: (): void => {\r\n          //         // this.loadObject(-1, sc);\r\n          //         this.setState({\r\n          //           selClass: sname,\r\n          //           // insertoptions: slist\r\n          //         });\r\n          //         this._classitem[\"name\"] = sname;\r\n          //         this.reload(sname, this.state.selectedColumns, this.state.columnoptions);\r\n          //         // this.props.callback.selectDataLang(lang.ObjectName);\r\n          //       },\r\n          //     }\r\n          //   );\r\n          //   let aname = \"Attribute\";\r\n          //   // let ares = base.AllAttributeTypes().map((x) => {\r\n          //   //   return { key: x.ID2Name, text: x.ObjectCaption };\r\n          //   // });\r\n          //   // let alist = ares.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n          //   this._addclass_submenus.push(\r\n          //     {\r\n          //       key: \"attribute\",\r\n          //       text: \" - Attributes (Attribute)\",\r\n          //       onClick: (): void => {\r\n          //         // this.loadObject(-1, sc);\r\n          //         this.setState({\r\n          //           selClass: aname,\r\n          //           // insertoptions: alist\r\n          //         });\r\n          //         this._classitem[\"name\"] = aname;\r\n          //         this.reload(aname, this.state.selectedColumns, this.state.columnoptions);\r\n          //         // this.props.callback.selectDataLang(lang.ObjectName);\r\n          //       },\r\n          //     }\r\n          //   );\r\n          // }\r\n        }\r\n      }\r\n      this._addclass_submenus = this._addclass_submenus.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n\r\n      this._classitem =\r\n      {\r\n        key: 'classitem',\r\n        name: this.ob.FindClass(selclass)?.ObjectCaption,\r\n        split: true,\r\n        cacheKey: 'classitem', // changing this key will invalidate this items cache\r\n        iconProps: {\r\n          iconName: 'Diamond'\r\n        },\r\n        subMenuProps: { items: this._addclass_submenus },\r\n      };\r\n      commands.unshift(this._classitem);\r\n    }\r\n    return commands;\r\n  }\r\n  private mounted: boolean = false;\r\n\r\n  public async componentDidMount() {\r\n    this.init();\r\n\r\n    this.mounted = true;\r\n    // this.loadObject();\r\n    this.ob._callbacks.push(this);\r\n    // addCallBack(this);\r\n  }\r\n  public componentWillUnmount() {\r\n    // removeCallBack(this);\r\n    let index = this.ob._callbacks.indexOf(this);\r\n    this.ob._callbacks.splice(index);\r\n    this.mounted = false;\r\n  }\r\n  public init = async () => {\r\n    let commands = this.getCommands();\r\n    this.noevents = false;\r\n    // this.classnames = await this.getClassNames();\r\n    let classname = this.ob.GetModelAttribute(Process_ElementName.SLActivity);\r\n    if (this.props.semtalk.template === \"bpmn\" && classname === \"Activity\") classname = \"Task\";\r\n    let isclass: boolean = false;\r\n\r\n    let oid: number = getObject();\r\n    let sysclass: ISemTalkSystemClass | null = null;\r\n    let obj = this.ob.FindObjectByID(oid);\r\n    if (obj) {\r\n      sysclass = obj.SystemClass();\r\n    }\r\n    if (sysclass) {\r\n      classname = sysclass.ObjectName;\r\n      // this._classitem[\"name\"] = sysclass.ObjectCaption;\r\n    }\r\n    commands = this.addClassCommands(classname, commands);\r\n    let cls = this.ob.FindSystemClass(classname);\r\n    if (!cls) {\r\n      cls = this.ob.AllSystemClasses()[0];\r\n    }\r\n    let cols = this.defaultColumns(cls, isclass);\r\n    if (cls) {\r\n      let colopts = this.getColumnOptions(cls, isclass);\r\n      this.reload(classname, cols, colopts, \"\");\r\n      // if (obj) {\r\n      //   this._lookupselection.setKeySelected(this.state.rows[1], true, true);\r\n      // }\r\n    }\r\n    this.setState({\r\n      commands: commands,\r\n      selClass: classname,\r\n      selectedColumns: cols,\r\n      isclass: isclass,\r\n      root: cls\r\n      // insertoptions: nlist\r\n    });\r\n  }\r\n  public getMessage(e: any) {\r\n    this.eventListener(e);\r\n  }\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      // case SemTalkObjectBaseEvent.OnClassChanged:\r\n      // case SemTalkObjectBaseEvent.OnSubClassCreated:\r\n      // case SemTalkObjectBaseEvent.OnDeleted:\r\n      // case SemTalkObjectBaseEvent.OnCommentChanged:\r\n      // case SemTalkObjectBaseEvent.OnSynonymRenamed: {\r\n      //   let obj: ISemTalkObject | null = this.ob.FindObjectByID(md.objectid);\r\n      //   if (obj) {\r\n      //     let sysc = obj.SystemClass();\r\n      //     let rt = this.state.root;\r\n      //     if (rt && sysc && (sysc === rt || sysc.IsParent(rt))) {\r\n      //       this.reload(this.state.selClass, this.state.selectedColumns, this.state.columnoptions);\r\n      //     }\r\n      // }\r\n      // break;\r\n      // }\r\n    }\r\n  }\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private getCommands = (): any[] => {\r\n    let commands = [\r\n      {\r\n        key: 'Edit',\r\n        name: this.props.semtalk.getResStr(\"STREDIT\").replace(\"&\", \"\"),\r\n        iconProps: {\r\n          iconName: 'Edit'\r\n        },\r\n        onClick: (): void => {\r\n          let obj: ISemTalkObject | null = this.ob.FindInstance(this._objectname);\r\n          if (!obj) {\r\n            obj = this.ob.FindClass(this._objectname);\r\n          }\r\n          if (obj) {\r\n            gotoObject(obj.ID);\r\n            this.props.callback.editObject(obj.ID);\r\n          }\r\n        }\r\n      },\r\n      {\r\n        key: 'Columns',\r\n        name: this.props.semtalk.getResStr(\"STRDLGIDCOLUMN\").replace(\"ID\", \"\").trim(),\r\n        iconProps: {\r\n          iconName: 'Settings'\r\n        },\r\n        onClick: (): void => {\r\n          this._columnselection.setAllSelected(false);\r\n          for (let v of this.state.selectedColumns) {\r\n            this._columnselection.setKeySelected(v, true, false);\r\n          }\r\n          this.setState({\r\n            selectcolumns: true,\r\n          });\r\n        }\r\n      },\r\n      {\r\n        key: 'div',\r\n        name: \"|\",\r\n      },\r\n      {\r\n        key: 'exportxls',\r\n        name: this.props.semtalk.getResStrListener(\"STRDLGEXPORT\").replace(\"&\", \"\") + \" Excel\",\r\n        iconProps: {\r\n          iconName: 'SaveAs'\r\n        },\r\n        onClick: (): void => {\r\n          this.xlsxExport();\r\n        }\r\n      },\r\n      {\r\n        key: 'importxls',\r\n        name: this.props.semtalk.getResStr(\"STRIMPORT\").replace(\"&\", \"\") + \" Excel\",\r\n        iconProps: {\r\n          iconName: 'OpenFile'\r\n        },\r\n        onClick: (): void => {\r\n          this.xlsxImport();\r\n        }\r\n      },\r\n    ];\r\n    return commands;\r\n  }\r\n  private reload = async (classname: string, keys: string[], columnoptions: IOption[], filter: string) => {\r\n    let semtalkitems: ISemTalkObject[] = [];\r\n    let isontology: boolean = (this.props.semtalk.page?.ClassOf().ID2Name === SemTalkBaseConstant.SLGeneric);\r\n\r\n    if (classname === \"Object\") {\r\n      let cls = this.ob.FindClass(this.SLInformation);\r\n      if (cls) {\r\n        semtalkitems = cls.AllSubClasses();\r\n      }\r\n    } else {\r\n      let cls = this.ob.FindClass(classname);\r\n      if (cls) {\r\n        if (cls.ObjectType === SemTalkType.SemTalkAssociationType) {\r\n          for (let r of cls.AllInstances()) {\r\n            let a = r as ISemTalkAssociation;\r\n            if (!this.ob.IsSystemClass(a.FromObject) && !this.ob.IsSystemClass(a.ToObject)) {\r\n              semtalkitems.push(r);\r\n            }\r\n          }\r\n        } else {\r\n          if (isontology) {\r\n            semtalkitems.push(...cls.AllSubClasses());\r\n            semtalkitems.push(...cls.AllInstances());\r\n          } else {\r\n            semtalkitems = cls.AllInstances();\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let columns = this.getColumns(keys, columnoptions);\r\n    let rows = this.getRows(semtalkitems, keys, filter);\r\n    rows = rows.sort((a: any, b: any): number => { return a.name.localeCompare(b.name); });\r\n\r\n    //  let filterrow= {};\r\n    //  for (let c of columns) {\r\n    //   filterrow[c.key]=\"x\";\r\n    //  }\r\n    //  rows.unshift(filterrow);\r\n\r\n    this.setState({\r\n      keys: keys,\r\n      rows: rows,\r\n      columns: columns,\r\n      // commands: commands,\r\n      filter: filter\r\n    });\r\n  }\r\n\r\n  // private getClassNames = async (): Promise<string[]> => {\r\n  //   let classnames: string[] = [];\r\n  //   for (let sysclass of this.ob.AllSystemClasses()) {\r\n  //     const colname: string = sysclass.ObjectName;\r\n  //     if (colname === this.SLInformation) {\r\n  //       this.setState({ selClass: colname });\r\n  //       classnames.push(colname);\r\n  //     }\r\n  //     else {\r\n  //       classnames.push(colname);\r\n  //     }\r\n  //   }\r\n  //   return classnames;\r\n  // }\r\n  private getRows = (items: ISemTalkObject[], keys: string[], flt: string): any[] => {\r\n    let rows: any[] = [];\r\n    for (const v of items) {\r\n      let row: any = {};\r\n      row[\"_id\"] = v.ObjectName;\r\n      row[\"name\"] = v.ObjectCaption;\r\n      if (keys.indexOf(\"Class\") > -1 && v.ObjectBase.IsInstance(v)) {\r\n        row[\"Class\"] = (v as ISemTalkInstance).ClassOf().ObjectCaption;\r\n      }\r\n      if (keys.indexOf(SemTalkBaseConstant.SLComment) > -1) {\r\n        row[SemTalkBaseConstant.SLComment] = v.Comment;\r\n      }\r\n      if (keys.indexOf(SemTalkLanguage.German) > -1) {\r\n        row[SemTalkLanguage.German] = v.FindSynonym(SemTalkLanguage.German)?.Name;\r\n      }\r\n      if (keys.indexOf(SemTalkLanguage.English) > -1) {\r\n        row[SemTalkLanguage.English] = v.FindSynonym(SemTalkLanguage.English)?.Name;\r\n      }\r\n      if (keys.indexOf(\"Method\") > -1) {\r\n        let mstr = \"\";\r\n        if (this.ob.IsBusinessClass(v)) {\r\n          let mnames = (v as ISemTalkBusinessClass).Methods().map((x) => x.ClassOf().ObjectCaption);\r\n          mstr = mnames.join(\"; \");\r\n        }\r\n        row[\"Method\"] = mstr;\r\n      }\r\n      if (keys.indexOf(\"States\") > -1) {\r\n        let mstr = \"\";\r\n        if (this.ob.IsBusinessClass(v)) {\r\n          let mnames = (v as ISemTalkBusinessClass).States().map((x) => x.ClassOf().ObjectCaption);\r\n          mstr = mnames.join(\"; \");\r\n        }\r\n        row[\"States\"] = mstr;\r\n      }\r\n      if (keys.indexOf(\"Attribute\") > -1) {\r\n        let mstr = \"\";\r\n        if (v.ObjectType === SemTalkType.SemTalkClass) {\r\n          let mnames = (v as ISemTalkClass).Attributes().map((x) => x.ClassOf().ObjectCaption);\r\n          mstr = mnames.join(\"; \");\r\n        }\r\n        row[\"Attribute\"] = mstr;\r\n      }\r\n      if (keys.indexOf(this.infotype) > -1) {\r\n        let mstr = \"\";\r\n        let mnames = v.LinkedObjects(this.infotype).map((x) => x.ObjectCaption);\r\n        mstr = mnames.join(\"; \");\r\n        row[this.infotype] = mstr;\r\n      }\r\n      if (keys.indexOf(\"From\") > -1) {\r\n        let mstr = \"\";\r\n        if (v.ObjectType === SemTalkType.SemTalkAssociation) {\r\n          mstr = (v as ISemTalkAssociation).FromObject.ObjectCaption;\r\n        }\r\n        row[\"From\"] = mstr;\r\n      }\r\n      if (keys.indexOf(\"To\") > -1) {\r\n        let mstr = \"\";\r\n        if (v.ObjectType === SemTalkType.SemTalkAssociation) {\r\n          mstr = (v as ISemTalkAssociation).ToObject.ObjectCaption;\r\n        }\r\n        row[\"To\"] = mstr;\r\n      }\r\n      // curElement[\"id\"] = v[\"_id\"];\r\n      for (let key of keys) {\r\n        if (v.FindAttribute(key) !== null) {\r\n          let val: any = v.GetValue(key);\r\n          if (isArray(val)) {\r\n            val = val.join(\"; \");\r\n          }\r\n          let inst = this.ob.FindInstance(val);\r\n          if (inst) {\r\n            row[key] = inst.ObjectCaption;\r\n          } else {\r\n            row[key] = val;\r\n          }\r\n        }\r\n      }\r\n      if (flt.length > 0) {\r\n        let fnd: boolean = false;\r\n        for (let k in row) {\r\n          fnd = row[k].toLowerCase().indexOf(flt) > -1;\r\n          if (fnd) break;\r\n        }\r\n        if (!fnd) continue;\r\n      }\r\n      rows.push(row);\r\n    }\r\n    return rows;\r\n  }\r\n  private defaultColumns = (sc: ISemTalkSystemClass, isclass: boolean) => {\r\n    // return [{ key: \"Class\", text: this.props.semtalk.getResStrListener(\"STRDLHTMLOUTCLA\") },\r\n    // { key: SemTalkBaseConstant.SLComment, text: this.props.semtalk.getResStr(\"STRCOMMENT\") }];\r\n    let cols: string[] = [];\r\n    if (isclass) {\r\n      cols = [SemTalkBaseConstant.SLComment];\r\n    } else {\r\n      if (sc.ObjectType === SemTalkType.SemTalkAssociationType) {\r\n        cols = [\"From\", \"To\", SemTalkBaseConstant.SLComment];\r\n      } else {\r\n        if (sc.BottomUp) {\r\n          if (sc.GetAttributeOwner(SIM_AttributeTypeName.UserNumber)) {\r\n            cols = [SIM_AttributeTypeName.UserNumber, SemTalkBaseConstant.SLComment];\r\n          } else {\r\n            cols = [SemTalkBaseConstant.SLComment];\r\n          }\r\n        } else {\r\n          // if (sc.InstDialog && sc.InstDialog.CheckClass) {\r\n          // if (sc.InstDialog && sc.InstDialog.CheckClass) {\r\n          cols = [\"Class\", SemTalkBaseConstant.SLComment];\r\n          // } else {\r\n          //   cols = [SemTalkBaseConstant.SLComment];\r\n          // }\r\n        }\r\n      }\r\n    }\r\n    if (this.infotype && sc.AllAssociations().find((a) => a.ClassOf().ObjectName === this.infotype)) {\r\n      cols.push(this.infotype);\r\n    }\r\n    return cols;\r\n  }\r\n  private getColumnOptions = (cls: ISemTalkSystemClass, isclass: boolean): IOption[] => {\r\n    let keys: string[] = [];\r\n    let columnoptions: IOption[] = [];\r\n    if (!isclass) {\r\n      if (cls.ObjectType === SemTalkType.SemTalkAssociationType) {\r\n        columnoptions = [{ key: \"From\", text: this.currentColName(\"From\") }\r\n          , { key: \"To\", text: this.currentColName(\"To\") }];\r\n      } else {\r\n        if (cls.BottomUp) {\r\n          let un = cls.GetAttributeOwner(SIM_AttributeTypeName.UserNumber);\r\n          if (un) {\r\n            columnoptions = [{ key: SIM_AttributeTypeName.UserNumber, text: un.ClassOf().ObjectCaption }];\r\n          } else {\r\n            columnoptions = [];\r\n          }\r\n        } else {\r\n          // if (cls.InstDialog && cls.InstDialog.CheckClass) {\r\n          columnoptions = [{ key: \"Class\", text: this.currentColName(\"Class\") }];\r\n          // }\r\n        }\r\n      }\r\n    } else {\r\n      columnoptions = [];\r\n    }\r\n    columnoptions.push(...[\r\n      {\r\n        key: SemTalkBaseConstant.SLComment,\r\n        text: this.currentColName(SemTalkBaseConstant.SLComment)\r\n      }]);\r\n\r\n    if (cls.InstDialog && cls.InstDialog.CheckSynonyms) {\r\n      columnoptions.push(...[\r\n        { key: SemTalkLanguage.German, text: String(this.ob.FindInstance(SemTalkLanguage.German)?.ObjectCaption) },\r\n        { key: SemTalkLanguage.English, text: String(this.ob.FindInstance(SemTalkLanguage.English)?.ObjectCaption) }]);\r\n    }\r\n    if (isclass) {\r\n      columnoptions.push(...[\r\n        { key: \"Method\", text: this.currentColName(\"Method\") },\r\n        { key: \"Attribute\", text: this.currentColName(\"Attribute\") },\r\n        { key: \"States\", text: this.currentColName(\"States\") }\r\n      ]);\r\n    }\r\n    if (cls.AllAssociations().find((a) => a.ClassOf().ObjectName === this.infotype)) {\r\n      columnoptions.push({\r\n        key: this.infotype,\r\n        text: (this.ob.FindSystemClass(this.SLInformation) as ISemTalkObject).ObjectCaption\r\n      });\r\n    }\r\n    for (let co of columnoptions) {\r\n      keys.push(co.key);\r\n    }\r\n    let attgroups: string[] = [];\r\n    for (let ts of cls.TabSpecs()) {\r\n      if (ts.Visible) {\r\n        if (ts.ObjectType === SemTalkType.SemTalkGenericAttributeTabSpec) {\r\n          const ats = ts as ISemTalkGenericAttributeTabSpec;\r\n          if (ats.Group === \"BPMN\" && !this.props.showBPMN) {\r\n            continue;\r\n          }\r\n          if (ats.Group === \"Simulation\" && !this.props.showSimulation) {\r\n            continue;\r\n          }\r\n          attgroups.push(ats.Group);\r\n        }\r\n      }\r\n    }\r\n\r\n    let allattr: ISemTalkAttribute[] = [];\r\n    for (let a of cls.AllAttributes()) {\r\n      if (a.Group === \"\" || attgroups.indexOf(a.Group) > -1) {\r\n        allattr.push(a);\r\n      }\r\n    }\r\n    allattr = allattr.sort((a: any, b: any): number => {\r\n      let an = a.ClassOf().ObjectCaption;\r\n      let bn = b.ClassOf().ObjectCaption;\r\n      return an.localeCompare(bn);\r\n    });\r\n\r\n    for (const attr of allattr) {\r\n      const acla = attr.ClassOf().ObjectName;\r\n      if (keys.indexOf(acla) < 0) {\r\n        keys.push(acla);\r\n        columnoptions.push({ key: acla, text: attr.ClassOf().ObjectCaption });\r\n      }\r\n    }\r\n    this.setState({ \"columnoptions\": columnoptions });\r\n    return columnoptions;\r\n  }\r\n\r\n  private isEditable = (col: string): boolean => {\r\n    switch (col) {\r\n      case \"Class\": {\r\n        return false;\r\n      }\r\n      case \"From\": {\r\n        return false;\r\n      }\r\n      case \"To\": {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  private name_header = (_p: any) => {\r\n    //   return <div>              \r\n    //     <select\r\n    //   value={\"All\"}\r\n    //   onChange={(_e) => {}}\r\n    //  >\r\n    //   <option value=\"All\">All</option>\r\n    //   <option value=\"Bug\">Bug</option>\r\n    //   <option value=\"Improvement\">Improvement</option>\r\n    //   <option value=\"Epic\">Epic</option>\r\n    //   <option value=\"Story\">Story</option>\r\n    // </select></div>;\r\n    // return <div><ComboBox text=\"XXX\" allowFreeform options={[{key: 1, text: \"Eins\"},{key: 2, text: \"Zwei\"}]}></ComboBox></div>;\r\n    // const stackTokens = { childrenGap: 10 };\r\n    // return <Stack tokens={stackTokens} horizontal><Label>{this.props.semtalk.getResStr(\"STRNAME\")}</Label>\r\n    //   <TextField defaultValue={this.state.filter} onChange={(_ev, a) => {\r\n    //     if (a !== undefined)\r\n    //       this.reload(this.state.selClass, this.state.selectedColumns, this.state.columnoptions, a.toLowerCase());\r\n    //   }}></TextField></Stack>;\r\n    return <Label>{this.props.semtalk.getResStr(\"STRNAME\")}</Label>;\r\n  }\r\n  private _dosearch = (a: any): any => {\r\n    this.reload(this.state.selClass, this.state.selectedColumns, this.state.columnoptions, a.toLowerCase());\r\n  }\r\n  private _dosearch10 = (_evt: any, a: any): any => {\r\n    this.reload(this.state.selClass, this.state.selectedColumns, this.state.columnoptions, a.toLowerCase());\r\n  }\r\n  private _clear = (): any => {\r\n    this.reload(this.state.selClass, this.state.selectedColumns, this.state.columnoptions, \"\");\r\n  }\r\n  private getColumns = (keys: string[], columnoptions: IOption[]): any[] => {\r\n    let columns: any[] = []; // IDataGridTableHeader[] = [];\r\n    columns.push({\r\n      key: \"name\",\r\n      name: this.props.semtalk.getResStr(\"STRNAME\"),\r\n      resizable: true,\r\n      width: 150,\r\n      sortable: true,\r\n      filterable: true,\r\n      editable: true,\r\n      editor: TextEditor,\r\n      headerRenderer: this.name_header\r\n    });\r\n    for (const key of keys) {\r\n      let attr = key;\r\n      if (attr === \"_id\" || attr === \"name\") {\r\n      }\r\n      else {\r\n        let str: string = this.key2text(attr, columnoptions);\r\n        str = str[0].toUpperCase() + str.slice(1);\r\n        columns.push({\r\n          key: attr,\r\n          name: str,\r\n          resizable: true, width: 150, sortable: true,\r\n          filterable: true,\r\n          editable: this.isEditable(attr),\r\n          editor: TextEditor\r\n        });\r\n        // }\r\n      }\r\n    }\r\n    return columns;\r\n  }\r\n  private key2text = (key: string, columnoptions: IOption[]): string => {\r\n    switch (key) {\r\n      case \"Class\": {\r\n        return this.props.semtalk.getResStrListener(\"STRDLHTMLOUTCLA\");\r\n      }\r\n      default: {\r\n        for (let opt of columnoptions) {\r\n          if (opt.key === key) {\r\n            return opt.text;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return key;\r\n  }\r\n\r\n  private updateitem = async (name: string, propname: string, propvalue: string) => {\r\n    if (name.length === 0) return;\r\n    if (propvalue === \"None\") propvalue = \"\";\r\n    let obj: ISemTalkObject | null = this.ob.FindInstance(name);\r\n    if (!obj) {\r\n      obj = this.ob.FindClass(name);\r\n    }\r\n    if (obj) {\r\n      switch (propname) {\r\n        case SemTalkBaseConstant.SLComment: {\r\n          obj.Comment = propvalue;\r\n          break;\r\n        }\r\n        case \"name\": {\r\n          if (this.state.isclass) {\r\n            let cla = this.ob.FindClass(name);\r\n            let newname = propvalue;\r\n            if (cla) {\r\n              let nsp = cla.ID2Namespace;\r\n              if (nsp.length > 0) {\r\n                newname = nsp + \"#\" + newname;\r\n              }\r\n              let newcla = this.ob.FindClass(newname);\r\n              if (!newcla) {\r\n                cla.RenameObject(newname);\r\n              }\r\n            }\r\n          } else {\r\n            this.props.semtalk.RenameObject(obj, propvalue, null);\r\n          }\r\n          break;\r\n        }\r\n        case \"Class\": {\r\n          if (propvalue.length > 0) {\r\n            let inst = this.ob.FindInstance(name);\r\n            let cla = this.ob.FindClass(propvalue);\r\n            if (!cla && inst && !this.ob.FindInstance(propvalue)) {\r\n              let syscla = inst.SystemClass();\r\n              if (syscla) {\r\n                cla = syscla.MakeSubClass(propvalue);\r\n              }\r\n            }\r\n            if (inst && cla && inst.ClassOf().ObjectName !== cla.ObjectName) {\r\n              inst.SetClass(cla);\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case \"Method\": {\r\n          let cla: ISemTalkBusinessClass = obj as ISemTalkBusinessClass;\r\n          let val: string[] = [];\r\n          if (propvalue.indexOf(\"; \") > -1) {\r\n            val = propvalue.split(\"; \");\r\n          } else {\r\n            if (propvalue.length > 0) {\r\n              val = [propvalue];\r\n            }\r\n          }\r\n          for (let m of cla.Methods()) {\r\n            if (val.indexOf(m.ClassOf().ObjectName) < 0) {\r\n              m.Delete();\r\n            }\r\n          }\r\n          for (let m of val) {\r\n            if (!cla.FindMethod(m)) {\r\n              cla.MakeMethod(m);\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case \"States\": {\r\n          let cla: ISemTalkBusinessClass = obj as ISemTalkBusinessClass;\r\n          let val: string[] = [];\r\n          if (propvalue.indexOf(\"; \") > -1) {\r\n            val = propvalue.split(\"; \");\r\n          } else {\r\n            if (propvalue.length > 0) {\r\n              val = [propvalue];\r\n            }\r\n          }\r\n          for (let m of cla.States()) {\r\n            if (val.indexOf(m.ClassOf().ObjectName) < 0) {\r\n              m.Delete();\r\n            }\r\n          }\r\n          for (let m of val) {\r\n            if (!cla.FindState(m)) {\r\n              cla.MakeState(m);\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case \"Attribute\": {\r\n          let cla: ISemTalkClass = obj as ISemTalkClass;\r\n          let val: string[] = [];\r\n          if (propvalue.indexOf(\"; \") > -1) {\r\n            val = propvalue.split(\"; \");\r\n          } else {\r\n            if (propvalue.length > 0) {\r\n              val = [propvalue];\r\n            }\r\n          }\r\n          for (let m of cla.Attributes()) {\r\n            if (val.indexOf(m.ClassOf().ObjectName) < 0) {\r\n              m.Delete();\r\n            }\r\n          }\r\n          for (let m of val) {\r\n            if (!cla.FindAttribute(m)) {\r\n              cla.MakeAttribute(m, \"\");\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case this.infotype: {\r\n          let val: string[] = [];\r\n          if (propvalue.indexOf(\"; \") > -1) {\r\n            val = propvalue.split(\"; \");\r\n          } else {\r\n            if (propvalue.length > 0) {\r\n              val = [propvalue];\r\n            }\r\n          }\r\n          let info = this.ob.FindSystemClass(this.SLInformation);\r\n          let infos: ISemTalkObject[] = [];\r\n          if (info) {\r\n            let nsp = this.SLInformation.substring(0, 2);\r\n            for (let v of val) {\r\n              let iname = v;\r\n              if (!iname.startsWith(nsp + \"#\")) {\r\n                iname = nsp + \"#\" + v;\r\n              }\r\n              let iclass = this.ob.FindBusinessClass(iname);\r\n              if (!iclass) iclass = this.ob.MakeBusinessClass(iname);\r\n              if (!iclass.IsParent(info)) {\r\n                iclass.AddSubclassOf(info);\r\n              }\r\n              if (iclass) {\r\n                infos.push(iclass);\r\n              }\r\n            }\r\n\r\n            for (let m of obj.Links(this.infotype)) {\r\n              if (infos.indexOf(m.ToObject) < 0) {\r\n                m.Delete();\r\n              }\r\n            }\r\n            for (let m of infos) {\r\n              if (!obj.FindAssociation(this.infotype, m)) {\r\n                obj.MakeAssociation(this.infotype, m);\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case SemTalkLanguage.German:\r\n        case SemTalkLanguage.English: {\r\n          obj.MakeSynonym(propvalue, propname);\r\n          break;\r\n        }\r\n        default: {\r\n          obj.SetValue(propname, propvalue);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _columncolumns: any[] = [\r\n    {\r\n      key: 'key',\r\n      name: \"text\",\r\n      fieldName: 'text',\r\n    }\r\n  ];\r\n  private _lookupcolumns: any[] = [\r\n    {\r\n      key: 'key',\r\n      name: \"text\",\r\n      fieldName: 'text',\r\n    }\r\n  ];\r\n  private _closeColumnDialog = async (): Promise<void> => {\r\n    // await this.updateitem(this.state.rowid, this.state.column, this.state.selectionText);\r\n    this.setState({ selectcolumns: false });\r\n  }\r\n\r\n  private _getColumnSelectionDetails(): string[] {\r\n    let selcols: string[] = [];\r\n    for (let sel of this._columnselection.getSelection()) {\r\n      if (sel.key) {\r\n        selcols.push(String(sel.key));\r\n      }\r\n    }\r\n    return selcols;\r\n  }\r\n  private currentColName = (oname: string): string => {\r\n    switch (oname) {\r\n      case \"Class\": {\r\n        return this.props.semtalk.getResStrListener(\"STRDLHTMLOUTCLA\");\r\n      }\r\n      case SemTalkBaseConstant.SLComment: {\r\n        return this.props.semtalk.getResStr(\"STRCOMMENT\");\r\n      }\r\n      case \"Methods\":\r\n      case \"Method\": {\r\n        return this.res.getResStr(\"STRMETHODS\");\r\n      }\r\n      case \"Attribute\": {\r\n        return this.res.getResStr(\"STRATTRIBUTES\");\r\n      }\r\n      case \"States\":\r\n      case \"State\": {\r\n        return this.res.getResStr(\"STRSTATES\");\r\n      }\r\n      case \"From\": {\r\n        return this.res.getResStrListener(\"STRDLHTMLFROM\");\r\n      }\r\n      case \"To\": {\r\n        return this.res.getResStrListener(\"STRDLHTMLTO\");\r\n      }\r\n      case this.infotype: {\r\n        let obj = this.ob.FindSystemClass(this.SLInformation);\r\n        if (obj) {\r\n          return obj.ObjectCaption;\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        let obj = this.ob.FindAttributeType(oname);\r\n        if (obj) {\r\n          return obj.ObjectCaption;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    return oname;\r\n  }\r\n  public selectLookupOptions = async (p: any, col: any) => {\r\n    if (col) {\r\n      this._objectname = p[\"_id\"];\r\n      let obj: ISemTalkObject | null = this.ob.FindInstance(this._objectname);\r\n      if (!obj) {\r\n        obj = this.ob.FindClass(this._objectname);\r\n      }\r\n      this.noevents = true;\r\n\r\n      if (obj) {\r\n        let ndlist = obj.Nodes();\r\n        if (ndlist.length > 0) {\r\n          gotoNodeByID(ndlist[0].ID);\r\n        }\r\n        // let sysclass = obj.SystemClass();\r\n        let sysclass = this.state.root;\r\n        if (sysclass) {\r\n          switch (col[\"key\"]) {\r\n            case \"Class\": {\r\n              if (sysclass.InstDialog && sysclass.InstDialog.CheckClass) {\r\n                let classes: ISemTalkClass[] = [sysclass];\r\n                classes.push(...sysclass.AllSubClasses());\r\n                let options: { key: string, text: string }[] = [];\r\n                for (let o of classes) {\r\n                  // if (o.SystemClass() === sysclass) {\r\n                  if (o.ID2Namespace.length === 0) {\r\n                    options.push({ key: o.ObjectName, text: o.ObjectCaption });\r\n                  }\r\n                }\r\n                options = options.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n                // this._lookupoptions = options;\r\n                this.setState({\r\n                  lookupoptions: options,\r\n                  column: col[\"key\"],\r\n                  selectoptions: true,\r\n                  selectfreeform: true,\r\n                  selectmultiple: SelectionMode.single\r\n                });\r\n                let v = (obj as ISemTalkInstance).ClassOf().ObjectName;\r\n                setTimeout(() => {\r\n                  this._lookupselection.setKeySelected(v, true, false);\r\n                  this.noevents = false;\r\n                }, 100);\r\n                // console.debug(attr);\r\n              }\r\n              break;\r\n            }\r\n            case \"Method\": {\r\n              let methods: ISemTalkMethodType[] = this.ob.AllMethodTypes();\r\n              let options: { key: string, text: string }[] = [];\r\n              for (let o of methods) {\r\n                options.push({ key: o.ObjectName, text: o.ObjectCaption });\r\n              }\r\n              options = options.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n              // this._lookupoptions = options;\r\n              this.setState({\r\n                lookupoptions: options,\r\n                column: col[\"key\"],\r\n                selectoptions: true,\r\n                selectfreeform: true,\r\n                selectmultiple: SelectionMode.multiple\r\n              });\r\n              let vlist = (obj as ISemTalkBusinessClass).Methods();\r\n              setTimeout(() => {\r\n                for (let v of vlist) {\r\n                  this._lookupselection.setKeySelected(v.ClassOf().ObjectName, true, false);\r\n                }\r\n                this.noevents = false;\r\n              }, 100);\r\n              // console.debug(attr);\r\n              break;\r\n            }\r\n            case \"States\": {\r\n              let states: ISemTalkStateType[] = this.ob.AllStateTypes();\r\n              let options: { key: string, text: string }[] = [];\r\n              for (let o of states) {\r\n                options.push({ key: o.ObjectName, text: o.ObjectCaption });\r\n              }\r\n              options = options.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n              // this._lookupoptions = options;\r\n              this.setState({\r\n                lookupoptions: options,\r\n                column: col[\"key\"],\r\n                selectoptions: true,\r\n                selectfreeform: true,\r\n                selectmultiple: SelectionMode.multiple\r\n              });\r\n              let vlist = (obj as ISemTalkBusinessClass).States();\r\n              setTimeout(() => {\r\n                for (let v of vlist) {\r\n                  this._lookupselection.setKeySelected(v.ClassOf().ObjectName, true, false);\r\n                }\r\n                this.noevents = false;\r\n              }, 100);\r\n              // console.debug(attr);\r\n              break;\r\n            }\r\n            case \"Attribute\": {\r\n              let attributes: ISemTalkAttributeType[] = this.ob.AllAttributeTypes();\r\n              let options: { key: string, text: string }[] = [];\r\n              for (let o of attributes) {\r\n                if (!o.IsReadOnly) {\r\n                  options.push({ key: o.ObjectName, text: o.ObjectCaption });\r\n                }\r\n              }\r\n              options = options.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n              // this._lookupoptions = options;\r\n              this.setState({\r\n                lookupoptions: options,\r\n                column: col[\"key\"],\r\n                selectoptions: true,\r\n                selectfreeform: true,\r\n                selectmultiple: SelectionMode.multiple\r\n              });\r\n              let vlist = (obj as ISemTalkClass).Attributes();\r\n              setTimeout(() => {\r\n                for (let v of vlist) {\r\n                  this._lookupselection.setKeySelected(v.ClassOf().ObjectName, true, false);\r\n                }\r\n                this.noevents = false;\r\n              }, 100);\r\n              // console.debug(attr);\r\n              break;\r\n            }\r\n            case this.infotype: {\r\n              const info = this.ob.FindSystemClass(this.SLInformation);\r\n              let infos: ISemTalkClass[] = [];\r\n              if (info) infos = info.AllSubClasses();\r\n              let options: { key: string, text: string }[] = [];\r\n              for (let o of infos) {\r\n                if (!o.IsReadOnly) {\r\n                  options.push({ key: o.ObjectName, text: o.ObjectCaption });\r\n                }\r\n              }\r\n              if (info) {\r\n                let nsp = info.ObjectName.substring(0,2);\r\n                let extobj = await this.repoItems(info);\r\n                for (let e of extobj) {\r\n                  if (!this.ob.FindBusinessClass(nsp + \"#\" + e.ObjectName)) {\r\n                    options.push({ key: e.ObjectName, text: e.ObjectCaption });\r\n                  }\r\n                }\r\n              }\r\n              options = options.sort((a: any, b: any): number => { return a.text.localeCompare(b.text); });\r\n              // this._lookupoptions = options;\r\n              this.setState({\r\n                lookupoptions: options,\r\n                column: col[\"key\"],\r\n                selectoptions: true,\r\n                selectfreeform: true,\r\n                selectmultiple: SelectionMode.multiple\r\n              });\r\n              let vlist = (obj as ISemTalkClass).LinkedObjects(this.infotype);\r\n              setTimeout(() => {\r\n                for (let v of vlist) {\r\n                  this._lookupselection.setKeySelected(v.ObjectName, true, false);\r\n                }\r\n                this.noevents = false;\r\n              }, 100);\r\n              // console.debug(attr);\r\n              break;\r\n            }\r\n            default: {\r\n              let attr = sysclass.GetAttributeOwner(col[\"key\"]);\r\n              if (attr) {\r\n                let options: { key: string, text: string }[] = [];\r\n                // this._lookupselection.setAllSelected(false);\r\n                for (let o of attr.Options) {\r\n                  const obj1 = this.ob.FindInstance(o);\r\n                  if (obj1) {\r\n                    options.push({ \"key\": o, \"text\": (obj1 as ISemTalkInstance).ID2NameNsp() });\r\n                  } else {\r\n                    options.push({ \"key\": o, \"text\": o });\r\n                  }\r\n                }\r\n                if (attr.ValueType === SemTalkValueType.Boolean) {\r\n                  options.push({ \"key\": \"\", \"text\": \"\" });\r\n                  options.push({ \"key\": \"False\", \"text\": \"False\" });\r\n                  options.push({ \"key\": \"True\", \"text\": \"True\" });\r\n                }\r\n                // this._lookupoptions = options;\r\n                if (options.length > 0) {\r\n                  this.setState({\r\n                    lookupoptions: options,\r\n                    column: col[\"key\"],\r\n                    selectoptions: true,\r\n                    selectfreeform: false,\r\n                    selectmultiple: SelectionMode.single\r\n                  });\r\n                  let v = obj.GetValue(col[\"key\"]);\r\n                  if (v && String(v).length > 0) {\r\n                    setTimeout(() => {\r\n                      this._lookupselection.setKeySelected(v, true, false);\r\n                      this.noevents = false;\r\n                    }, 100);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private _closeLookupDialog = async (): Promise<void> => {\r\n    if (this.state.selectionText !== this._getLookupSelectionDetails()) {\r\n      await this.updateitem(this._objectname, this.state.column, this.state.selectionText);\r\n    }\r\n    // this._lookupoptions = [];\r\n    this.setState({\r\n      selectoptions: false,\r\n      lookupoptions: [],\r\n      column: \"\",\r\n      selectionText: \"\"\r\n    });\r\n  }\r\n  private _saveItem = async (): Promise<void> => {\r\n    let oname = this._objectname;\r\n    let col = this.state.column;\r\n    await this.updateitem(this._objectname, this.state.column, this.state.selectionText);\r\n    this.selectLookupOptions({ \"_id\": oname }, { \"key\": col });\r\n    this.reload(this.state.selClass, this.state.selectedColumns, this.state.columnoptions, this.state.filter);\r\n  }\r\n  private _getLookupSelectionDetails(): string {\r\n    let txt: string[] = [];\r\n    for (let sel of this._lookupselection.getSelection()) {\r\n      // if (sel.key) {\r\n      if (sel.key) {\r\n        txt.push(this.key2text(String(sel.key), this.state.lookupoptions));\r\n      }\r\n    }\r\n    return txt.join(\"; \");\r\n  }\r\n  private _getLookupSelection(): string[] {\r\n    let val: string[] = [];\r\n    for (let sel of this._lookupselection.getSelection()) {\r\n      if (sel.key) {\r\n        val.push(String(sel.key));\r\n      }\r\n    }\r\n    return val;\r\n  }\r\n\r\n  public render(): React.ReactElement<ISemTalkTableEditorProps> {\r\n    let r: React.ReactElement<ISemTalkTableEditorProps>;\r\n    let gridstyle = {\r\n      grid: { height: this.state.rows.length * 100 }\r\n    };\r\n    const stackTokens = { childrenGap: 10 };\r\n    r = <Fabric>\r\n      <CommandBar id=\"stButtons\" items={this.state.commands}></CommandBar>\r\n      <Stack>\r\n        <StackItem>\r\n          <Stack horizontal tokens={stackTokens} verticalAlign={'center'}>\r\n            <StackItem grow={3}>\r\n              <SearchBox id='stsearch.strsearch' onSearch={this._dosearch} onChange={this._dosearch10} onClear={this._clear}></SearchBox>\r\n            </StackItem>\r\n            {/* <StackItem grow={1}>\r\n                <Checkbox label=\"Search Page\" checked={this.state.searchpage} onChange={this._toggleSearchPage} />\r\n              </StackItem> */}\r\n          </Stack>\r\n        </StackItem>\r\n      </Stack>\r\n      <ReactDataGrid\r\n        columns={this.state.columns}\r\n        onRowsChange={this.onGridRowsUpdated}\r\n        onRowClick={this.selectLookupOptions}\r\n        rows={this.state.rows}\r\n        defaultColumnOptions={{\r\n          sortable: true,\r\n          resizable: true\r\n        }}\r\n        sortColumns={this.state.sortColumns}\r\n        style={gridstyle.grid}\r\n        // onFill={this.handleFill}\r\n        onPaste={this.handlePaste}\r\n      />\r\n      <Panel isOpen={this.state.selectcolumns}\r\n        headerText={this.props.semtalk.getResStr(\"STRDLGIDCOLUMN\").replace(\"ID\", \"\").trim()}\r\n        onDismiss={this._closeColumnDialog}\r\n        isBlocking={false}\r\n      >\r\n        <DetailsList\r\n          items={this.state.columnoptions}\r\n          compact={true}\r\n          columns={this._columncolumns}\r\n          selectionMode={SelectionMode.multiple}\r\n          selection={this._columnselection}\r\n          selectionPreservedOnEmptyClick={true}\r\n          checkboxVisibility={CheckboxVisibility.always}\r\n          isHeaderVisible={false}\r\n        // onItemInvoked={this._onItemInvoked}\r\n        />\r\n      </Panel>\r\n      <Panel isOpen={this.state.selectoptions}\r\n        headerText={this.currentColName(this.state.column)}\r\n        onDismiss={this._closeLookupDialog}\r\n        isBlocking={false}\r\n      >\r\n        {this.state.selectfreeform &&\r\n          <Stack horizontal>\r\n            <TextField\r\n              // label=\"SetValue:\"\r\n              value={this.state.selectionText}\r\n              onChange={(_e: any, v?: any) =>\r\n                this.setState({ \"selectionText\": v })\r\n              }\r\n            />\r\n            <IconButton iconProps={{ iconName: \"Save\" }}\r\n              text={\"Cancel\"}\r\n              onClick={this._saveItem}>\r\n            </IconButton>\r\n          </Stack>}\r\n        <DetailsList\r\n          items={this.state.lookupoptions}\r\n          compact={true}\r\n          columns={this._lookupcolumns}\r\n          selectionMode={this.state.selectmultiple}\r\n          // layoutMode={DetailsListLayoutMode.justified}\r\n          selection={this._lookupselection}\r\n          selectionPreservedOnEmptyClick={true}\r\n          checkboxVisibility={CheckboxVisibility.always}\r\n          isHeaderVisible={false}\r\n        // onItemInvoked={this._onItemInvoked}\r\n        />\r\n      </Panel>\r\n    </Fabric >;\r\n    return r;\r\n  }\r\n\r\n  private onGridRowsUpdated = (rows: any[], data: RowsChangeData<any, any>) => {\r\n    let row = rows[data.indexes[0]];\r\n\r\n    if (row[data.column.key] === undefined) {\r\n      this.updateitem(row['_id'], data.column.key, row[\"NewValue\"]);\r\n    }\r\n    else {\r\n      this.updateitem(row['_id'], data.column.key, row[data.column.key]);\r\n    }\r\n    this.setState({ rows: rows });\r\n  }\r\n  // private handleFill = ({ columnKey, sourceRow, targetRow }: FillEvent<any>): any => {\r\n  //   return { ...targetRow, [columnKey]: sourceRow[columnKey] };\r\n  // }\r\n  private handlePaste({\r\n    sourceColumnKey,\r\n    sourceRow,\r\n    targetColumnKey,\r\n    targetRow\r\n  }: PasteEvent<any>): any {\r\n    console.debug(sourceRow);\r\n    // const incompatibleColumns = ['email', 'zipCode', 'date'];\r\n    // if (\r\n    //   sourceColumnKey === 'avatar' ||\r\n    //   ['id', 'avatar'].includes(targetColumnKey) ||\r\n    //   ((incompatibleColumns.includes(targetColumnKey) ||\r\n    //     incompatibleColumns.includes(sourceColumnKey)) &&\r\n    //     sourceColumnKey !== targetColumnKey)\r\n    // ) {\r\n    //   return targetRow;\r\n    // }\r\n\r\n    return { ...targetRow, [targetColumnKey]: sourceRow[sourceColumnKey] };\r\n  }\r\n\r\n  private xlsxExport = async () => {\r\n    let wb = excel_workbook();\r\n    let rows = this.state.rows;\r\n    rows = rows.sort((a: any, b: any): number => { return a.name.localeCompare(b.name); });\r\n    let data: any[] = [];\r\n    for (let item of rows) {\r\n      let semtalkitem: ISemTalkObject | null = this.ob.FindInstance(item[\"_id\"]);\r\n      if (!semtalkitem) {\r\n        semtalkitem = this.ob.FindClass(item[\"_id\"]);\r\n      }\r\n      if (semtalkitem) {\r\n        let row: any = {};\r\n        for (let col in item) {\r\n          let val = item[col];\r\n          switch (col) {\r\n            case \"_id\": { row[\"ID\"] = val; break; }\r\n            case \"name\": { row[\"name\"] = val; break; }\r\n            case \"Class\": { row[\"Class\"] = (semtalkitem as ISemTalkInstance).ClassOf().ObjectName; break; }\r\n            case \"Comment\": { row[\"Comment\"] = semtalkitem.Comment; break; }\r\n            case \"Method\": {\r\n              let mnames = (semtalkitem as ISemTalkBusinessClass).Methods().map((x) => x.ClassOf().ObjectName);\r\n              row[\"Method\"] = mnames.join(\"; \");\r\n              break;\r\n            }\r\n            case \"States\": {\r\n              let mnames = (semtalkitem as ISemTalkBusinessClass).States().map((x) => x.ClassOf().ObjectName);\r\n              row[\"States\"] = mnames.join(\"; \");\r\n              break;\r\n            }\r\n            case \"Attribute\": {\r\n              let mnames = (semtalkitem as ISemTalkClass).Attributes().map((x) => x.ClassOf().ObjectName);\r\n              row[\"Attribute\"] = mnames.join(\"; \");\r\n              break;\r\n            }\r\n            case this.infotype: {\r\n              let mnames = semtalkitem.LinkedObjects(this.infotype).map((x) => x.ObjectName);\r\n              row[this.infotype] = mnames.join(\"; \");\r\n              break;\r\n            }\r\n            case \"From\": { row[\"From\"] = (semtalkitem as ISemTalkAssociation).FromObject.ObjectName; break; }\r\n            case \"To\": { row[\"To\"] = (semtalkitem as ISemTalkAssociation).ToObject.ObjectName; break; }\r\n            default: {\r\n              row[col] = row[col] = semtalkitem.GetValue(col);\r\n            }\r\n          }\r\n        }\r\n        data.push(row);\r\n      }\r\n    }\r\n    let columns: any[] = [\r\n    ];\r\n    let keys = [\"ID\", \"name\"].concat(...this.state.keys);\r\n    for (let col of keys) {\r\n      let head = col;\r\n      if (head === \"name\") head = \"Name\";\r\n      columns.push({ header: head, key: col });\r\n    }\r\n    wb = export_worksheet(wb, this.state.selClass, columns, data);\r\n\r\n    save_excel(this.state.selClass + \".xlsx\", wb);\r\n  }\r\n  private xlsxImport = () => {\r\n    import_excel(this.toSemTalk);\r\n  }\r\n  private repoItems = async (sc : ISemTalkSystemClass): Promise<IExternalObject[]> => {\r\n    let items: IExternalObject[] = [];\r\n    if (!this.props.mongo.usemongo) {\r\n      if (this.props.context !== undefined && this.props.site !== undefined) {\r\n        let spinterface = this.props.semtalk.explorer;\r\n        let lany: any = await spinterface.getListData(this.props.context, this.props.site, this.props.semtalk.getSPListName(sc.ObjectName), \"*\");\r\n        let lil: any[] = lany.value;\r\n        if (lil !== undefined) {\r\n          let spitems = lil;\r\n          for (let s of spitems) {\r\n            if (items.findIndex((t: IExternalObject) => t.ObjectCaption === s[\"Title\"]) < 0) {\r\n              // let nid: string = String(s[\"@odata.id\"]);\r\n              let des: string | null = null;\r\n              if (s[\"Comment\"]) des = s[\"Comment\"];\r\n              const item = {\r\n                Object: null, ObjectCaption: s[\"Title\"] as string, ObjectName: s[\"Title\"],\r\n                ObjectDescription: des, EditLink: s[\"@odata.editLink\"],\r\n                SPItem: s, MGItem: null\r\n              };\r\n              items.push(item);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.props.mongo.usemongo) {\r\n      if (this.props.mongo.semmongoserverurl !== undefined) {\r\n        let lib = this.props.semtalk.getSPListName(sc.ObjectName);\r\n        // let docs = await mgGetItemNames(this.props.mongo, this.props.mongo.repository, lib);\r\n        let docs: any[] = [];\r\n        let x = sessionStorage.getItem(\"mgGetItemNames_\" + lib);\r\n        if (x) {\r\n          docs = JSON.parse(x);\r\n        } else {\r\n          docs = await mgGetItemNames(this.props.mongo, this.props.mongo.repository, lib);\r\n          sessionStorage.setItem(\"mgGetItemNames_\" + lib, JSON.stringify(docs));\r\n        }\r\n        for (let s1 of docs) {\r\n          const s: any = s1;\r\n          if (items.findIndex((t: IExternalObject) => t.ObjectCaption === s[\"name\"]) < 0) {\r\n            let nid: string = s[\"_id\"] as string;\r\n            let des: string | null = null;\r\n            if (s[\"Comment\"]) des = s[\"Comment\"];\r\n            let item = {\r\n              Object: null, ObjectCaption: s[\"name\"] as string, ObjectName: s[\"name\"],\r\n              ObjectDescription: des, EditLink: this.props.mongo.repository + \"/\" + lib + \"/\" + nid,\r\n              SPItem: null, MGItem: s\r\n            };\r\n            items.push(item);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return items;\r\n  }\r\n  private toSemTalk = async (book: any[]) => {\r\n    // if (book.length > 0) {\r\n    for (let sheetname in book) {\r\n      let sheet = book[sheetname];\r\n      let columns: string[] = sheet.shift();\r\n      columns.shift();\r\n      if (columns[0] === \"Name\") columns[0] = \"name\";\r\n\r\n      for (let row of sheet) {\r\n        let oname: string = row[1];\r\n        let obj: ISemTalkObject | null = this.ob.FindInstance(oname);\r\n        let isclass: boolean = false;\r\n        if (!obj) {\r\n          this.ob.FindClass(oname);\r\n        }\r\n        if (!obj) {\r\n          let syscla = this.ob.FindSystemClass(this.state.selClass);\r\n          if (syscla) {\r\n            if (this.state.selClass !== this.SLInformation) {\r\n              obj = syscla.MakeInstance(oname);\r\n            } else {\r\n              isclass = true;\r\n              obj = syscla.MakeSubClass(oname);\r\n            }\r\n          }\r\n        }\r\n        if (obj) {\r\n          let i = 1;\r\n          for (let col of columns) {\r\n            let val: any = row[i];\r\n            if (val === undefined) val = \"\";\r\n            if (val.length > 0) {\r\n              switch (col) {\r\n                case \"ID\": { break; }\r\n                case \"From\": { break; }\r\n                case \"To\": { break; }\r\n                case \"Name\": {\r\n                  if (this.state.isclass) {\r\n                    let cla: ISemTalkClass = obj as ISemTalkClass;\r\n                    let newname = val;\r\n                    if (cla) {\r\n                      let nsp = cla.ID2Namespace;\r\n                      if (nsp.length > 0) {\r\n                        newname = nsp + \"#\" + newname;\r\n                      }\r\n                      let newcla = this.ob.FindClass(newname);\r\n                      if (!newcla) {\r\n                        cla.RenameObject(newname);\r\n                      }\r\n                    }\r\n                  } else {\r\n                    let newname = val;\r\n                    let inst: ISemTalkInstance = obj as ISemTalkInstance;\r\n                    if (inst) {\r\n                      let nsp = inst.ID2Namespace;\r\n                      if (nsp.length > 0) {\r\n                        newname = nsp + \"#\" + newname;\r\n                      }\r\n                      let newinst = this.ob.FindInstance(newname);\r\n                      if (!newinst && inst) {\r\n                        inst.RenameObject(newname);\r\n                      }\r\n                    }\r\n                  }\r\n                  break;\r\n                }\r\n                case \"Class\": {\r\n                  let cla = this.ob.FindClass(val);\r\n                  let inst: ISemTalkInstance = obj as ISemTalkInstance;\r\n                  if (obj && cla && inst.ClassOf().ObjectName !== cla.ObjectName) {\r\n                    inst.SetClass(cla);\r\n                  }\r\n                  break;\r\n                }\r\n                case \"Method\": {\r\n                  if (isclass) {\r\n                    let cla: ISemTalkBusinessClass = (obj as ISemTalkBusinessClass);\r\n                    let val2: string[] = [];\r\n                    if (val.indexOf(\"; \") > -1) {\r\n                      val2 = val.split(\"; \");\r\n                    } else {\r\n                      if (val.length > 0) {\r\n                        val2 = [val];\r\n                      }\r\n                    }\r\n                    for (let m of cla.Methods()) {\r\n                      if (val2.indexOf(m.ClassOf().ObjectName) < 0) {\r\n                        m.Delete();\r\n                      }\r\n                    }\r\n                    for (let m of val2) {\r\n                      if (!cla.FindMethod(m)) {\r\n                        cla.MakeMethod(m);\r\n                      }\r\n                    }\r\n                  }\r\n                  break;\r\n                }\r\n                case \"States\": {\r\n                  if (isclass) {\r\n                    let cla: ISemTalkBusinessClass = obj as ISemTalkBusinessClass;\r\n                    let val2: string[] = [];\r\n                    if (val.indexOf(\"; \") > -1) {\r\n                      val2 = val.split(\"; \");\r\n                    } else {\r\n                      if (val.length > 0) {\r\n                        val2 = [val];\r\n                      }\r\n                    }\r\n                    for (let m of cla.States()) {\r\n                      if (val2.indexOf(m.ClassOf().ObjectName) < 0) {\r\n                        m.Delete();\r\n                      }\r\n                    }\r\n                    for (let m of val2) {\r\n                      if (!cla.FindState(m)) {\r\n                        cla.MakeState(m);\r\n                      }\r\n                    }\r\n                  }\r\n                  break;\r\n                }\r\n                case \"Attribute\": {\r\n                  let val2: string[] = [];\r\n                  if (val.indexOf(\"; \") > -1) {\r\n                    val2 = val.split(\"; \");\r\n                  } else {\r\n                    if (val.length > 0) {\r\n                      val2 = [val];\r\n                    }\r\n                  }\r\n                  for (let m of obj.Attributes()) {\r\n                    if (val2.indexOf(m.ClassOf().ObjectName) < 0) {\r\n                      m.Delete();\r\n                    }\r\n                  }\r\n                  for (let m of val2) {\r\n                    if (!obj.FindAttribute(m)) {\r\n                      obj.MakeAttribute(m, \"\");\r\n                    }\r\n                  }\r\n                  break;\r\n                }\r\n                case this.infotype: {\r\n                  let vallist: string[] = [];\r\n                  if (val.indexOf(\"; \") > -1) {\r\n                    vallist = val.split(\"; \");\r\n                  } else {\r\n                    if (val.length > 0) {\r\n                      vallist = [val];\r\n                    }\r\n                  }\r\n                  let info = this.ob.FindSystemClass(this.SLInformation);\r\n                  let infos: ISemTalkObject[] = [];\r\n                  if (info) {\r\n                    let nsp = this.SLInformation.substring(0, 2);\r\n                    for (let v of vallist) {\r\n                      let iname = v;\r\n                      if (!iname.startsWith(nsp + \"#\")) {\r\n                        iname = nsp + \"#\" + v;\r\n                      }\r\n                      let iclass = this.ob.FindBusinessClass(iname);\r\n                      if (!iclass) iclass = this.ob.MakeBusinessClass(iname);\r\n                      if (!iclass.IsParent(info)) {\r\n                        iclass.AddSubclassOf(info);\r\n                      }\r\n                      if (iclass) {\r\n                        infos.push(iclass);\r\n                      }\r\n                    }\r\n\r\n                    for (let m of obj.Links(this.infotype)) {\r\n                      if (infos.indexOf(m.ToObject) < 0) {\r\n                        m.Delete();\r\n                      }\r\n                    }\r\n                    for (let m of infos) {\r\n                      if (!obj.FindAssociation(this.infotype, m)) {\r\n                        obj.MakeAssociation(this.infotype, m);\r\n                      }\r\n                    }\r\n                  }\r\n                  break;\r\n                }\r\n                case SemTalkLanguage.German:\r\n                case SemTalkLanguage.English: {\r\n                  obj.MakeSynonym(col, val);\r\n                  break;\r\n                }\r\n                case SemTalkBaseConstant.SLComment: { obj.Comment = val; break; }\r\n                default:\r\n                  obj.SetValue(col, val);\r\n              }\r\n            }\r\n            i += 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    await this.reload(this.state.selClass, this.state.selectedColumns,\r\n      this.state.columnoptions, this.state.filter);\r\n    // }\r\n  }\r\n}","import * as React from 'react';\r\nimport ReactDataGrid, { RowsChangeData, TextEditor } from 'react-data-grid';\r\n//import styles from './SemTalkBPMN.module.scss';\r\n\r\nimport * as XLSX from 'ts-xlsx';\r\n\r\nimport {\r\n   CommandBar, DefaultButton, ComboBox, IComboBox, IComboBoxOption} from 'office-ui-fabric-react';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { VisioRDFS } from '../../application/semtalklistener/visiordfs';\r\nimport { IMongoOption } from '../../SemTalkMongoServer';\r\nimport { ISemTalkObject } from '../../application/tbase/Interface';\r\nimport { Process_ElementName } from '../../application/semtalklistener/processInterface';\r\nimport { SemTalkCookie } from \"../../ISemTalkOnline\";\r\n\r\nexport interface ISemTalkTableImportProps {\r\n  title?: string;\r\n  mongo: IMongoOption;\r\n  semtalk: IVisioRDFS;\r\n  graphClient?: any;\r\n  context?: any;\r\n  library: string;\r\n  templates: string;\r\n  //setToken: any;\r\n}\r\n\r\nexport interface ISemTalkTableImportState {\r\n  swimlanes: any[];\r\n  tasks: any[];\r\n  newSwimlane: boolean;\r\n  showitems: boolean;\r\n  selRow: number;\r\n  // selCell: {row: number, cell: number};\r\n  curTask: string;\r\n  HRElements: string[];\r\n  curSwimlane: string;\r\n  rowCount: number;\r\n  // chkCreateConnectors: boolean;\r\n  // chkCreateDecisions: boolean;\r\n  importData: any[];\r\n}\r\n\r\nexport class SemTalkTableImport extends React.Component<ISemTalkTableImportProps, ISemTalkTableImportState> {\r\n  private res: IVisioRDFS = new VisioRDFS(null, null);\r\n  constructor(props: ISemTalkTableImportProps) {\r\n    super(props);\r\n    let gl = (window as any).localStorage.getItem(SemTalkCookie.guilanguage);\r\n    if (!gl) gl = \"de\";\r\n    this.getHRElements();\r\n    this.res.init(null, gl);\r\n    this.state = ({\r\n      swimlanes: [\r\n        //{key: \"User1\", name: \"User1\"},\r\n        //{key: \"User2\", name: \"User2\"}\r\n        {key: \"User1\", name: this.props.semtalk.getResStr(\"STRUSER1\"), resizable: true, width: 150, editable: true, editor: TextEditor},\r\n        {key: \"User2\", name: this.props.semtalk.getResStr(\"STRUSER2\"), resizable: true, width: 150, editable: true, editor: TextEditor}\r\n      ],\r\n      newSwimlane: false,\r\n      selRow: -1,\r\n      // selCell: {row: -1, cell: -1},\r\n      showitems: false,\r\n      tasks: [{ id: \"1\", 'User1': this.props.semtalk.getResStr(\"STREXAMPLE\"), \"User2\": \"Hello\" },\r\n      {id: \"2\", 'User1': this.props.semtalk.getResStr(\"STRDEMO3\"), }, { id: \"3\", 'User1': 'blub' },{id: \"4\"}],\r\n      curTask: \"\",\r\n      HRElements: [],\r\n      curSwimlane: \"\",\r\n      rowCount: 4,\r\n      // chkCreateConnectors: false,\r\n      // chkCreateDecisions: false,\r\n      importData: []\r\n    });\r\n    \r\n  }\r\n\r\n  private arrayBuffer: any;\r\n  private file: File;\r\n  \r\n  private incomingfile = (event: any) =>\r\n  {\r\n    this.file= event.target.files[0]; \r\n  }\r\n\r\n  private UploadExcel = () => {\r\n    let fileReader = new FileReader();\r\n    fileReader.onload = (_e) => {\r\n      this.arrayBuffer = fileReader.result;\r\n      let data = new Uint8Array(this.arrayBuffer);\r\n      let arr: any[] = [];\r\n      for(let i = 0; i !== data.length; ++i) arr[i] = String.fromCharCode(data[i]);\r\n      let bstr = arr.join(\"\");\r\n      let workbook = XLSX.read(bstr, {type:\"binary\"});\r\n      let first_sheet_name = workbook.SheetNames[0];\r\n      let worksheet = workbook.Sheets[first_sheet_name];\r\n      let curUpload: any[] = XLSX.utils.sheet_to_json(worksheet,{raw:true});\r\n      let curItems: any[] = [];\r\n      let tmpcolumns: any[] = [];\r\n      let tmpColumn: any = curUpload[0];\r\n      let tmpkeys = Object.keys(tmpColumn);\r\n      for (let key of tmpkeys) {\r\n        tmpcolumns.push({key: key, name: key, resizable: true, width: 150, editable: true, editor: TextEditor});\r\n      }\r\n      for(let curItem in curUpload)\r\n      {\r\n        let tmpItem = curUpload[curItem];\r\n        let curItemElement: any = {};\r\n        curItemElement[\"id\"] = String(curItem);\r\n        for(let key of tmpkeys)\r\n        {\r\n          curItemElement[key] = tmpItem[key];\r\n        }\r\n        curItems.push(curItemElement);\r\n      }\r\n      this.setState({importData: curUpload, tasks: curItems, swimlanes: tmpcolumns});\r\n    };\r\n    fileReader.readAsArrayBuffer(this.file);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.getItems();\r\n  }\r\n  public componentWillUnmount() {\r\n  }\r\n\r\n  private getHRElements = async (): Promise<void> => {\r\n    let item = await \"\";\r\n    let keys = Object.keys(item);\r\n    let CollArray: string[] = [];\r\n    for(let key in keys){\r\n      CollArray.push(item[key]);\r\n    }\r\n    this.setState({HRElements: CollArray});\r\n  }\r\n\r\n  private DoImport = () => {\r\n    if (this.props.semtalk.page && this.props.semtalk.page.ClassOf().ObjectName === this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLProc)) {\r\n      let sm = this.props.semtalk.tseditor.getShapeStyle(\"swimlane\", \"general\");\r\n      let em = this.props.semtalk.tseditor.getShapeStyle(\"Task\", \"general\");\r\n      let parent = this.props.semtalk.tseditor.graph.getDefaultParent();\r\n      let swshape;\r\n      \r\n      let SLACTIVITY = this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLActivity);\r\n      let f = this.props.semtalk.base.FindSystemClass(SLACTIVITY);\r\n      if (f === null)\r\n        f = this.props.semtalk.base.FindSystemClass(this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLActivity));\r\n      if (f) {\r\n        em = { style: f.Style, isedge: false };\r\n      }\r\n      for (let sl of this.state.swimlanes){\r\n        swshape = this.props.semtalk.tseditor.graph.insertVertex(parent, \"\", \"\", 0, 0, 600, 100, sm.style);\r\n        swshape.shapeName = \"Swimlane\";\r\n        swshape.shapeKey = \"swimlane\";\r\n        let SLNode: any = this.props.semtalk.visShapeAdded(swshape);\r\n        let SLObject: ISemTalkObject | null;\r\n        if (SLNode)\r\n        {\r\n          SLObject = this.props.semtalk.base.FindObjectByID(SLNode.ObjectID);\r\n          if (SLObject)\r\n          {\r\n            this.props.semtalk.RenameObject(SLObject, sl.name, null);\r\n          }\r\n        }\r\n        let x: number = 100;\r\n        let taskCount: number = 1;\r\n        for (let ta of this.state.tasks){\r\n          if (ta){\r\n            if (ta[sl.key]){\r\n              let xpos: number = x * taskCount;\r\n              taskCount += 1;\r\n              let evshape = this.props.semtalk.tseditor.graph.insertVertex(swshape, \"\", \"\", xpos, 100 / 2 - 30, 70, 60, em.style);\r\n              evshape.shapeName = \"Task\";\r\n              evshape.shapeKey = \"task\";\r\n              let TaskNode: any = this.props.semtalk.visShapeAdded(evshape);\r\n              let TaskObject: ISemTalkObject | null;\r\n              if (TaskNode)\r\n              {\r\n                TaskObject = this.props.semtalk.base.FindObjectByID(TaskNode.ObjectID);\r\n                if (TaskObject)\r\n                {\r\n                  this.props.semtalk.RenameObject(TaskObject, ta[sl.key], null);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        this.props.semtalk.tseditor.refresh();\r\n      }\r\n    }\r\n  }\r\n\r\n  private getItems = async (): Promise<void> => {\r\n    let items: any[] = this.state.tasks;\r\n    let tmpcolumns: any[] = this.state.swimlanes; \r\n    let keys: string[] = [];  \r\n    for (let key of keys) {\r\n      tmpcolumns.push({key: key, name: key, resizable: true, width: 150, editable: true, editor: TextEditor});\r\n    }\r\n    this.setState({\r\n    swimlanes: tmpcolumns,\r\n    tasks: items\r\n    });\r\n  }\r\n\r\n  private commands = [\r\n    {\r\n      key: 'Add',\r\n      name: this.props.semtalk.getResStr(\"STRNEWSWIMLANE\"),\r\n      iconProps: {\r\n        iconName: 'Add'\r\n      },\r\n      onClick: (): void => {\r\n        this.setState({\r\n          newSwimlane: true,\r\n          curSwimlane: \"\",\r\n        });\r\n      }\r\n    },\r\n    {\r\n      key: 'Edit',\r\n      name: this.props.semtalk.getResStr(\"STREDITSWIMLAND\"),\r\n      iconProps: {\r\n        iconName: 'Edit'\r\n      },\r\n      onClick: (): void => {\r\n        this.setState({\r\n          newSwimlane: true\r\n        });\r\n      }\r\n    },\r\n    {\r\n      key: 'Delete',\r\n      name: this.props.semtalk.getResStr(\"STRDELETESWIMLANE\"),\r\n      iconProps: {\r\n        iconName: 'Delete'\r\n      },\r\n      onClick: (): void => {\r\n        this.deleteSwimlane();\r\n      }\r\n    },\r\n    {\r\n      key: 'div',\r\n      name: \"|\",\r\n    },\r\n    {\r\n      key: 'Import',\r\n      name: this.props.semtalk.getResStr(\"STRIMPORT\"),\r\n      iconProps: {\r\n        iconName: 'SaveAs'\r\n      },\r\n      onClick: (): void => {\r\n        this.DoImport();\r\n      }\r\n    },\r\n  ];\r\n\r\n  private deleteSwimlane = async () => {\r\n    if (this.state.selRow >= 0) {\r\n      await this.getItems();\r\n    }  \r\n  }\r\n\r\n  private addnewSwimlane = async () => {\r\n    if (this.state.curSwimlane.length > 0) {\r\n      let curObject: any = {name: this.state.curSwimlane, key: this.state.curSwimlane, resizable: true, width: 150, editable: true, editor: TextEditor};\r\n      let curItems = this.state.swimlanes;\r\n      curItems.push(curObject);\r\n      this.setState({\r\n        swimlanes: curItems,\r\n        newSwimlane: false,\r\n        curSwimlane: \"\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        newSwimlane: false, \r\n        curSwimlane: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n  // private updateSwimlane = async (id: string = \"\", propname: string, propvalue: string) => {\r\n  //    if (propname.length > 0 && propvalue.length >= 0 && id.length > 0) {\r\n  //      //await \"\";\r\n  //      await this.getItems();\r\n  //    }\r\n  //  }\r\n\r\n  private updateTask = async (id: string = \"\", propname: string, propvalue: string) => {\r\n    if (propname.length > 0 && propvalue.length >= 0 && id.length > 0) {\r\n      //await \"\";\r\n      await this.getItems();\r\n    }\r\n  }\r\n  private cancelnew = async () => {\r\n    this.setState({\r\n      newSwimlane: false,\r\n    });\r\n  }\r\n\r\n  private setSelectedRows = (position: any) => {\r\n    this.setState({selRow: position.rowIdx});\r\n  }\r\n  // private setSelectedCell = (position: any) => {\r\n  //   this.setState({selCell: {row: position.rowIdx, cell: position.Idx}});\r\n  // }\r\n  \r\n  private rowKeyGetter = (row: any) => {\r\n    return row.id;\r\n  }\r\n\r\n  private onGridRowsUpdated = (rows: any[], data: RowsChangeData<any, any>) => {\r\n    let curListObject = rows[data.indexes[0]];\r\n    this.updateTask(curListObject['id'], data.column.key, curListObject[data.column.key]);\r\n    if (Number(curListObject['id']) === this.state.rowCount)\r\n    {\r\n      rows.push({id: String(this.state.rowCount + 1)});\r\n      this.setState({ tasks: rows, rowCount: this.state.rowCount + 1 });\r\n    }\r\n    else \r\n    {\r\n      this.setState({ tasks: rows});\r\n    }\r\n  }\r\n  // private chkHandleCheckConnections = (event: { target: { checked: any; }; } ) => {\r\n  //   this.setState({chkCreateConnectors: event.target.checked});\r\n  // }\r\n  // private chkHandleCheckDecisions = (event: any) => {\r\n  //   this.setState({chkCreateDecisions: event.target.checked});\r\n  // }\r\n\r\n  public render(): React.ReactElement<ISemTalkTableImportProps> {\r\n    let r: React.ReactElement<ISemTalkTableImportProps>;\r\n    const gridElement= (<ReactDataGrid \r\n      columns={this.state.swimlanes}\r\n      onRowsChange={this.onGridRowsUpdated}\r\n      rows={this.state.tasks}\r\n      rowKeyGetter={this.rowKeyGetter}\r\n      onSelectedRowsChange={this.setSelectedRows}\r\n      // onSelectedCellChange={this.setSelectedCell}\r\n      />);\r\n    r = <Fabric>\r\n      <CommandBar id=\"stButtons\" items={this.commands}></CommandBar>\r\n      {this.state.newSwimlane &&\r\n        <div>\r\n          <ComboBox id=\"stTabSwimlaneName\" text={this.state.curSwimlane} label={this.props.semtalk.getResStr(\"STRNAME\")}\r\n            required={true}\r\n            allowFreeform={true}\r\n            onChange={(_event: React.FormEvent<IComboBox>, _option?: IComboBoxOption, _index?: number, value?: string) => {\r\n              if (value !== undefined) {\r\n                this.setState({ curSwimlane: value });\r\n              }\r\n              //}\r\n            }}></ComboBox>\r\n          <DefaultButton id=\"okButton\" text={this.props.semtalk.getResStr(\"STRDLGCMDOK\")} onClick={this.addnewSwimlane} />\r\n          <DefaultButton id=\"cancelButton\" text={this.props.semtalk.getResStr(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\r\n        </div>\r\n      }\r\n      {!this.state.newSwimlane && \r\n      <><div>\r\n        <input type=\"file\" onChange={(event) => { this.incomingfile(event); } } placeholder={this.props.semtalk.getResStr(\"STRUPLOADFILE\")} accept=\".xlsx, .bpmn\" />\r\n            <button type=\"button\" onClick={this.UploadExcel}>{this.props.semtalk.getResStr(\"STRUPLOADEXCEL\")}</button>\r\n            <br></br>\r\n          {/* <input\r\n            id=\"chkCreateConnectors\"\r\n            type=\"checkbox\"\r\n            checked={this.state.chkCreateConnectors}\r\n            onChange={this.chkHandleCheckConnections}\r\n            title=\"Create Connectors\" />Create Connectors\r\n            <br></br>\r\n          <input\r\n            id=\"chkCreateConnectors\"\r\n            type=\"checkbox\"\r\n            checked={this.state.chkCreateDecisions}\r\n            onChange={this.chkHandleCheckDecisions}\r\n            title=\"Create Decisions\" />Create Decisions\r\n            <br></br>   */}\r\n            \r\n        </div><div>\r\n            {gridElement}\r\n          </div></>\r\n      }\r\n    </Fabric >;\r\n    return r;\r\n  }\r\n\r\n}","/* eslint-disable react/no-direct-mutation-state */\nimport * as React from 'react';\n// import styles from './SemTalkForm.module.scss';\n\nimport { component } from '../stformcomponents/Registry';\nimport { SemTalkItemFieldSet } from './SemTalkItemFieldSet';\n\nimport {\n  PivotItem,\n  Text,\n  Stack,\n  Label,\n  DetailsList, Selection, DetailsListLayoutMode, CheckboxVisibility,\n  CommandBar,\n  DefaultButton,\n  IColumn\n} from 'office-ui-fabric-react';\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\n\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\nimport { cit_AttributeName, cit_ElementName } from '../../application/semtalklistener/subtask/citforms/citinterface';\nimport { ISemTalkAssociation, ISemTalkInstance, ISemTalkSystemClass } from '../../application/tbase/Interface';\n\nexport interface ISemTalkFieldSetListProps {\n  title?: string;\n  description?: string;\n  semtalk: IVisioRDFS;\n  context?: any;\n  fieldset: ISemTalkInstance;\n  // model: any;\n  scope: string;\n  parent: any;\n  trigger: ISemTalkAssociation;\n}\nexport interface ISemTalkFieldSetListState {\n  // pivotarray: any[]\n  // model: any;\n  // newitem: boolean;\n  fieldset: React.ReactElement | null;\n}\n\n// declare function require(name: string): any;\n\nexport class SemTalkFieldSetList extends React.Component<ISemTalkFieldSetListProps, ISemTalkFieldSetListState> {\n  private _selection: Selection;\n  private selitem: any;\n  constructor(props: ISemTalkFieldSetListProps) {\n    super(props);\n    console.debug(\"showForm\");\n    this._selection = new Selection({\n      onSelectionChanged: this._onItemsSelectionChanged,\n    });\n    this.state = {\n      fieldset: null\n    };\n  }\n  public async componentDidMount() {\n    this.init(this.props.trigger);\n  }\n  public componentWillUnmount() {\n  }\n\n  private _onItemsSelectionChanged = () => {\n    this.selitem = null;\n    if (this._selection.getSelectedCount() > 0) {\n      let item = this._selection.getSelection()[0];\n      this.selitem = item;\n    }\n  }\n\n  // private infobox: ISemTalkSystemClass;\n  private booleanfield: ISemTalkSystemClass;\n  private choicefield: ISemTalkSystemClass;\n  private datefield: ISemTalkSystemClass;\n  private textfield: ISemTalkSystemClass;\n  // private textarea: ISemTalkSystemClass;\n  private numberfield: ISemTalkSystemClass;\n  private filefield: ISemTalkSystemClass;\n  // private fieldset: ISemTalkSystemClass;\n  private externalcomponent: ISemTalkSystemClass;\n\n  private components: any = {};\n\n  private init = (trg: ISemTalkAssociation): React.ReactElement => {\n    let ob = this.props.semtalk.base;\n    // this.fieldset = ob.FindSystemClass(cit_ElementName.FieldSet) as ISemTalkSystemClass;\n    // this.infobox = ob.FindSystemClass(cit_ElementName.InfoBox) as ISemTalkSystemClass;\n    this.booleanfield = ob.FindSystemClass(cit_ElementName.BooleanField) as ISemTalkSystemClass;\n    this.choicefield = ob.FindSystemClass(cit_ElementName.ChoiceField) as ISemTalkSystemClass;\n    this.datefield = ob.FindSystemClass(cit_ElementName.DateField) as ISemTalkSystemClass;\n    this.textfield = ob.FindSystemClass(cit_ElementName.TextField) as ISemTalkSystemClass;\n    // this.textarea = ob.FindSystemClass(cit_ElementName.TextArea) as ISemTalkSystemClass;\n    this.numberfield = ob.FindSystemClass(cit_ElementName.NumberField) as ISemTalkSystemClass;\n    this.filefield = ob.FindSystemClass(cit_ElementName.FileField) as ISemTalkSystemClass;\n    this.externalcomponent = ob.FindSystemClass(cit_ElementName.ExternalComponent) as ISemTalkSystemClass;\n\n    if (this.externalcomponent) {\n      for (let ext of this.externalcomponent.SubClasses()) {\n        if (ext.Instances().length > 0) {\n          let cmp: any = component(ext.ID2Name);\n          if (cmp) {\n            this.components[ext.ID2Name] = cmp;\n          }\n        }\n      }\n    }\n    return this.buildFieldSet(this.props.fieldset, trg);\n  }\n\n  private editItem = (): void => {\n    let parent = this.props.parent;\n    if (this.selitem != null) {\n      parent.setState({ newitem: true });\n    }\n  }\n  private addItem = (): void => {\n    let scope = this.props.scope;\n    let parent = this.props.parent;\n    let items: any[] = parent.state[scope];\n    this.selitem = this.newRow(items.length);\n    parent.setState({ newitem: true });\n  }\n  private deleteItem = (): void => {\n    let scope = this.props.scope;\n    let parent = this.props.parent;\n    if (this.selitem != null) {\n      let items: any[] = parent.state[scope];\n      let ind = items.indexOf(this.selitem);\n      items.splice(ind);\n      this._selection.setItems([], true);\n      parent.state[scope] = items;\n      parent.setState({ [scope]: items, newitem: false });\n    }\n  }\n  private commands = [\n    {\n      key: 'Add',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDNE\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Add'\n      },\n      onClick: (): void => {\n        this.addItem();\n      }\n    },\n    {\n      key: 'Edit',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDED\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Edit'\n      },\n      onClick: this.editItem\n    },\n    {\n      key: 'Delete',\n      name: this.props.semtalk.getResStrListener(\"STRDLGCMDDE\"),\n      //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n      iconProps: {\n        iconName: 'Delete'\n      },\n      onClick: (): void => {\n        this.deleteItem();\n      }\n    }];\n  private cancelnew = (): void => {\n    let parent = this.props.parent;\n    parent.setState({ newitem: false });\n  }\n  private addnewitem = (): void => {\n    let scope = this.props.scope;\n    let parent = this.props.parent;\n    let items: any[] = parent.state[scope];\n    if (items.findIndex((i: any) => i.ID === this.selitem.ID) === -1) {\n      items.push(this.selitem);\n    }\n    parent.state[scope] = items;\n    parent.setState({ [scope]: items, newitem: false });\n  }\n  private newRow = (_n: number) => { };\n\n  private print_extern = (ext: string, _item: any, parent: any, scope: string): string => {\n    // console.debug(parent, scope);\n    let sl: string[] = [];\n    let k = scope + \"_\" + ext + \"_\";\n    let st = parent.state;\n    for (let x in st) {\n      if (x.startsWith(k)) {\n        let s: any = st[x];\n        if (s && s.length > 0) {\n          sl.push(String(s));\n        }\n      }\n    }\n    return sl.join(\",\");\n  }\n\n  private buildFieldSet = (fs: ISemTalkInstance, trg: ISemTalkAssociation): React.ReactElement => {\n    let scope = this.props.scope;\n    let parent = this.props.parent;\n\n    let rels = fs.Links(cit_ElementName.Relation);\n    rels = rels.sort((x, y) => Number(x.ToObject.GetValue(cit_AttributeName.UserNumber)) - Number(y.ToObject.GetValue(cit_AttributeName.UserNumber)));\n    let scope1 = trg.GetValue(cit_AttributeName.Scope);\n    if (scope1) scope = scope1;\n    let title = fs.GetValue(cit_AttributeName.Title);\n    if (!title) {\n      title = fs.ObjectCaption;\n    }\n    let lnktitle = trg.GetValue(cit_AttributeName.Title);\n    if (!lnktitle) {\n      lnktitle = title;\n    }\n    let fields: React.ReactElement[] = [];\n    let datafields: string[] = [];\n    let intro = trg.GetValue(cit_AttributeName.Intro);\n\n    this.newRow = (n: number) => {\n      let dummy = {};\n      for (let x of datafields) {\n        dummy[\"ID\"] = n;\n        dummy[x] = \"\";\n      }\n      return dummy;\n    };\n    let columns: any[] = [];\n    for (let lnk of rels) {\n      let oth = lnk.ToObject as ISemTalkInstance;\n      let lnktitle1 = lnk.GetValue(cit_AttributeName.Title);\n      let label = lnktitle1;\n      if (!label) label = oth.GetValue(cit_AttributeName.Label);\n      if (!label) label = oth.ClassOf().ID2Name;\n      let fieldname = oth.ClassOf().ID2Name;\n      if (oth.IsInstance(this.booleanfield)) {\n        datafields.push(fieldname);\n        columns.push({ key: fieldname, text: label });\n      } else if (oth.IsInstance(this.externalcomponent)) {\n        datafields.push(fieldname);\n        let extcomp = oth.ClassOf().ID2Name;\n        if (extcomp) {\n          // label = extern_caption(extcomp)();\n          label = extcomp;\n        }\n        columns.push({\n          key: fieldname, text: label, ext: extcomp\n        });\n      } else if (oth.IsInstance(this.textfield)) {\n        datafields.push(fieldname);\n        columns.push({ key: fieldname, text: label });\n      } else if (oth.IsInstance(this.choicefield)) {\n        datafields.push(fieldname);\n        columns.push({ key: fieldname, text: label });\n      } else if (oth.IsInstance(this.numberfield)) {\n        datafields.push(fieldname);\n        columns.push({ key: fieldname, text: label });\n      } else if (oth.IsInstance(this.datefield)) {\n        datafields.push(fieldname);\n        columns.push({ key: fieldname, text: label });\n      } else if (oth.IsInstance(this.filefield)) {\n        datafields.push(fieldname);\n        columns.push({ key: fieldname, text: label });\n      }\n    }\n\n    let _columns: IColumn[] = [];\n    _columns = columns.map((c: { key: string, text: string, ext: string | undefined }) => {\n      return {\n        \"key\": c.key, \"name\": c.text, \"ext\": c.ext,\n        \"fieldName\": c.key, minWidth: 100,\n        \"onRender\": (item: any, _index?: number, column?: IColumn) => {\n          if (column && column.fieldName) {\n            if (column[\"ext\"]) {\n              let ext = column[\"ext\"];\n              // let v = extern_value(ext)(this.props.parent, scope + \"_\" + item[\"ID\"]);\n              let v = this.print_extern(ext, item, this.props.parent, scope + \"_\" + item[\"ID\"]);\n              return <span>{v.toString()}</span>;\n            }\n            return <span>{item[column.fieldName].toString()}</span>;\n          } else {\n            return <span>{JSON.stringify(item)}</span>;\n          }\n        }\n      };\n    });\n\n    let reactfs: React.ReactElement;\n    reactfs = <PivotItem headerText={title}\n      key={fs.ObjectName}>\n      <Stack>\n        {lnktitle && String(lnktitle).length > 0 &&\n          <Label key={trg.ID + \"Label\"}>{lnktitle}</Label>\n        }\n        {intro && String(intro).length > 0 &&\n          <Text key={\"Intro\" + fs.ID}><div dangerouslySetInnerHTML={{ __html: String(intro) }}></div></Text>\n        }\n        <CommandBar\n          items={this.commands} id=\"STButtons\"\n        ></CommandBar>\n        {!parent.state.newitem && <DetailsList columns={_columns}\n          items={parent.state[scope]}\n          selectionMode={SelectionMode.single}\n          layoutMode={DetailsListLayoutMode.justified}\n          selection={this._selection}\n          checkboxVisibility={CheckboxVisibility.hidden}\n        >\n        </DetailsList>\n        }\n        {parent.state.newitem && this.selitem &&\n          <Stack tokens={{ childrenGap: 10 }}>\n            <SemTalkItemFieldSet parent={this.props.parent} semtalk={this.props.semtalk}\n              fieldset={fs} scope={scope + \"_\" + this.selitem[\"ID\"]} item={this.selitem}></SemTalkItemFieldSet>\n            <Stack>{fields}</Stack>\n            <Stack horizontal tokens={{ childrenGap: 10 }}>\n              <DefaultButton id=\"okButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDOK\")} onClick={this.addnewitem} />\n              <DefaultButton id=\"cancelButton\" text={this.props.semtalk.getResStrListener(\"STRDLGCMDCA\")} onClick={this.cancelnew} />\n            </Stack>\n          </Stack>\n        }\n      </Stack>\n    </PivotItem>;\n    return reactfs;\n  }\n\n  public render(): React.ReactElement<ISemTalkFieldSetListProps> {\n    let r = this.init(this.props.trigger);\n    if (r) {\n      return r;\n    } else {\n      return <div></div>;\n    }\n  }\n}\n","/* eslint-disable react/no-direct-mutation-state */\nimport * as React from 'react';\n\nimport styles from './SemTalkForm.module.scss';\n\nimport { SemTalkFieldSet } from './SemTalkFieldSet';\nimport { SemTalkFieldSetList } from './SemTalkFieldSetList';\n\nimport {\n  Fabric,\n  Pivot,\n  PivotItem,\n  IPivotItemProps,\n  Stack,\n  CommandBar,\n} from 'office-ui-fabric-react';\n\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\nimport { cit_AttributeName, cit_ElementName } from '../../application/semtalklistener/subtask/citforms/citinterface';\nimport { ISemTalkAssociation, ISemTalkInstance, ISemTalkSystemClass, ISemTalkObject } from '../../application/tbase/Interface';\nimport { gotoObject, gotoNode } from '../../application/semtalklistener/stglobal';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\n\nexport interface ISemTalkFormProps {\n  title?: string;\n  description?: string;\n  semtalk: IVisioRDFS;\n  context?: any;\n}\nexport interface ISemTalkFormState {\n}\nexport class SemTalkForm extends React.Component<ISemTalkFormProps, ISemTalkFormState> {\n  public labels = {};\n  constructor(props: ISemTalkFormProps) {\n    super(props);\n    console.debug(\"showForm\");\n    this.state = {\n    };\n  }\n  public async componentDidMount() {\n  }\n  public componentWillUnmount() {\n  }\n  private pivotArray: React.ReactElement<IPivotItemProps>[] = [];\n\n  private fieldset: ISemTalkSystemClass;\n \n  private buildForm = (): React.ReactElement<IPivotItemProps>[] => {\n    let ob = this.props.semtalk.base;\n    let fs = ob.FindSystemClass(cit_ElementName.FieldSet);\n    if (!fs) return [];\n    this.fieldset = fs as ISemTalkSystemClass;\n\n    this.pivotArray = [];\n    let startset: ISemTalkInstance | null = null;\n    for (let fieldset of this.fieldset.AllInstances()) {\n      if (fieldset.InvLinkedObjects(cit_ElementName.Relation).length === 0) {\n        startset = fieldset;\n        break;\n      }\n    }\n    if (startset) {\n      this.buildFieldSet(startset, null);\n    }\n    return this.pivotArray;\n  }\n\n  private _onFocusChanged = (obj: ISemTalkObject) => {\n    if (obj) {\n      for (let n of obj.Nodes()) {\n        gotoNode(n.ID, n.Model.ID, n.Diagram.ID, n.ShapeID);\n        return;\n      }\n      gotoObject(obj.ID);\n    }\n  }\n\n  private pivotChanged = (e: any): void => {\n    let oid = Number(e.props[\"itemKey\"]);\n    let obj = this.props.semtalk.base.FindInstanceByID(oid);\n    if (obj) {\n      this._onFocusChanged(obj);\n    }\n    this.setState({ newitem: false });\n  }\n\n  private buildFieldSet = (fs: ISemTalkInstance, trg: ISemTalkAssociation | null) => {\n    let rels = fs.Links(cit_ElementName.Relation);\n    rels = rels.sort((x, y) => Number(x.ToObject.GetValue(cit_AttributeName.UserNumber)) - Number(y.ToObject.GetValue(cit_AttributeName.UserNumber)));\n    let scope = fs.ClassOf().ID2Name;\n    let ismult: boolean = false;\n    if (trg) {\n      let scope1 = trg.GetValue(cit_AttributeName.Scope);\n      if (scope1) scope = scope1;\n      let mult = trg.GetValue(cit_AttributeName.Multiplicity);\n      let lnktitle = trg.GetValue(cit_AttributeName.Title);\n      if (!lnktitle) lnktitle = \"\";\n      if (mult !== \"1\") {\n        ismult = true;\n      }\n    }\n\n    let header = fs.GetValue(cit_AttributeName.Title);\n    if (!header) {\n      header = fs.ObjectCaption;\n    }\n    header = fs.ObjectCaption;\n    let reactfs: React.ReactElement | undefined;\n    if (!ismult) {\n      if (!this.state[scope]) this.state[scope] = {};\n      reactfs = <PivotItem headerText={header} itemKey={fs.ID.toString()}>\n        <SemTalkFieldSet semtalk={this.props.semtalk}\n          fieldset={fs} parent={this} scope={scope}></SemTalkFieldSet>\n      </PivotItem>;\n    } else {\n\n      if (trg) {\n        let mult = trg.GetValue(cit_AttributeName.Multiplicity);\n        if (mult !== \"1\") {\n          if (!this.state[scope]) this.state[scope] = [];\n          reactfs = <PivotItem headerText={header} itemKey={trg.ToObject.ID.toString()}>\n            <SemTalkFieldSetList semtalk={this.props.semtalk}\n              fieldset={fs} parent={this}\n              scope={scope}\n              trigger={trg}></SemTalkFieldSetList>\n          </PivotItem>;\n        }\n      }\n    }\n    if (reactfs) {\n      this.pivotArray.push(reactfs);\n    }\n    for (let lnk of rels) {\n      let oth = lnk.ToObject as ISemTalkInstance;\n      if (oth.IsInstance(this.fieldset)) {\n        this.buildFieldSet(oth, lnk);\n      }\n    }\n  }\n  private printItem = () => {\n    const doc: any = new jsPDF();\n    let body: [string, string, string][] = [];\n    for (let fld in this.state) {\n      let v: string = this.state[fld];\n      if (fld === \"newitem\") continue;\n      if (typeof v === 'object') continue;\n      body.push([this.labels[fld], v, fld]);\n    }\n    doc.autoTable({\n      head: [['Beschriftung', 'Wert', 'Datenfeld']],\n      body: body\n    });\n    doc.save('myForm.pdf');\n  }\n  private saveItem = () => {\n  }\n  private openItem = () => {\n  }\n  private commands = [\n    {\n      key: 'Print',\n      name: this.props.semtalk.getResStr(\"STRPRINT\").replace(\"&\", \"\"),\n      iconProps: {\n        iconName: 'Print'\n      },\n      onClick: (): void => {\n        this.printItem();\n      }\n    },\n    {\n      key: 'Save',\n      name: this.props.semtalk.getResStr(\"STRSAVE\").replace(\"&\", \"\"),\n      iconProps: {\n        iconName: 'Save'\n      },\n      onClick: (): void => {\n        this.saveItem();\n      }\n    },\n    {\n      key: 'Open',\n      name: this.props.semtalk.getResStr(\"STROPEN\").replace(\"&\", \"\"),\n      iconProps: {\n        iconName: 'OpenFile'\n      },\n      onClick: (): void => {\n        this.openItem();\n      }\n    }\n  ];\n  public render(): React.ReactElement<ISemTalkFormProps> {\n    let r: React.ReactElement<ISemTalkFormProps>;\n    let pivotArray = this.buildForm();\n\n    r = <Fabric>\n      <Stack>\n        {pivotArray.length > 0 &&\n          <Pivot className={styles.semTalkForm} onLinkClick={this.pivotChanged}>\n            {pivotArray}\n          </Pivot>\n        }\n        <CommandBar\n          items={this.commands} id=\"STButtons\"\n        ></CommandBar>\n      </Stack>\n    </Fabric>;\n    return r;\n  }\n}\n","import React from \"react\";\r\nimport { IMongoOption, mgLogin_with_email_password, mglistDatabases } from '../../SemTalkMongoServer';\r\n// import { Link } from \"react-router-dom\";\r\nimport {\r\n  MessageBar, MessageBarType,\r\n  Stack, StackItem, TextField, DefaultButton, \r\n  Dropdown, IDropdownOption\r\n} from 'office-ui-fabric-react';\r\nimport { VisioRDFS } from '../../application/semtalklistener/visiordfs';\r\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { SemTalkCookie } from \"../../ISemTalkOnline\";\r\n\r\n\r\nexport interface ILoginInternProps {\r\n  setToken: any;\r\n  setcurrToken: any;\r\n  mongo: IMongoOption;\r\n  dismiss: any;\r\n}\r\nexport interface ILoginInternState {\r\n  username: string | null;\r\n  password: string | null;\r\n  dbname: string;\r\n  repository: string;\r\n  success: boolean;\r\n  nosuccess: boolean;\r\n  errormsg: string;\r\n  options: IDropdownOption[];\r\n  repoptions: IDropdownOption[];\r\n}\r\nexport default class LoginIntern extends React.Component<ILoginInternProps, ILoginInternState> {\r\n  private res: IVisioRDFS;\r\n  constructor(props: ILoginInternProps) {\r\n    super(props);\r\n\r\n    let gl = (window as any).localStorage.getItem(SemTalkCookie.guilanguage);\r\n    if (!gl) gl = navigator.languages[1] || navigator.language;\r\n\r\n    this.res = new VisioRDFS(null, null);\r\n    this.res.init(null, gl);\r\n    this.state = {\r\n      username: null,\r\n      password: null,\r\n      dbname: this.props.mongo.dbname,\r\n      repository: this.props.mongo.repository,\r\n      success: true,\r\n      nosuccess: false,\r\n      errormsg: this.res.getResStr(\"STRLoginFailed\"),\r\n      options: [],\r\n      repoptions: []\r\n    };\r\n    this.initOptions(this.props.mongo.dbname, this.props.mongo.repository);\r\n  }\r\n\r\n  private async initOptions(dbname: string, repository: string) {\r\n    let dblist = await mglistDatabases(this.props.mongo, this.props.mongo.semmongoconnectiontoken, this.props.mongo.dbname, \"SDX\");\r\n    // console.debug(dblist);\r\n    let options = [{ key: \"semtalkonline\", text: \"Default\" }];\r\n    for (let db of dblist) {\r\n      if (db !== \"semtalkonline\") {\r\n        options.push({ key: db, text: db });\r\n      }\r\n    }\r\n    let repdblist = await mglistDatabases(this.props.mongo, this.props.mongo.semmongoconnectiontoken, this.props.mongo.dbname, \"Objects\");\r\n    let repoptions = [{ key: \"repository\", text: \"Default\" }];\r\n    for (let db of repdblist) {\r\n      if (db !== \"repository\") {\r\n        repoptions.push({ key: db, text: db });\r\n      }\r\n    }\r\n    this.setState({\r\n      dbname: dbname,\r\n      repository: repository,\r\n      options: options,\r\n      repoptions: repoptions\r\n    });\r\n  }\r\n  private handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    if (this.state.username && this.state.password) {\r\n      if (this.state.username.toLowerCase().toString().indexOf(\"@\") > 0 && this.state.username.toLowerCase().toString().indexOf(\".\") > 0) {\r\n        // let mongo = { usemongo: true,\r\n        //   semmongoserverurl: this.props.semmongoserverurl,\r\n        //   documents: \"SDX\",\r\n        //   templates: \"Templates\",\r\n        //   stencils: \"Stencils\",\r\n        //   semuserlogin: \"\",\r\n        //   semmongoconnectiontoken: this.props.semmongoconnectiontoken,\r\n        //   dbname: this.state.dbname\r\n        // };\r\n        try {\r\n          const res: any = await mgLogin_with_email_password(this.props.mongo,\r\n            this.state.dbname,\r\n            this.state.username,\r\n            this.state.password);\r\n          if (res.login_token !== undefined) {\r\n            if (res.login_token.toString().length > 0) {\r\n              (window as any).localStorage.setItem(SemTalkCookie.dbname, this.state.dbname);\r\n              (window as any).localStorage.setItem(SemTalkCookie.repository, this.state.repository);\r\n              this.props.setToken(res);\r\n              this.props.setcurrToken(res);\r\n              this.props.mongo.semuserlogin=res;\r\n              this.props.mongo.dbname=this.state.dbname;\r\n              this.props.mongo.repository=this.state.repository;\r\n              this.props.dismiss();\r\n            } else {\r\n              this.setState({ \"success\": false, \"nosuccess\": true, \"errormsg\": this.res.getResStr(\"STRLoginEmptyLoginToken\") });\r\n            }\r\n          } else {\r\n            this.setState({ \"success\": false, \"nosuccess\": true, \"errormsg\": this.res.getResStr(\"STRLoginFailed\") });\r\n          }\r\n        } catch (err) {\r\n          let msg: string = \"unknown\";\r\n          if (err && typeof err === \"object\") {\r\n            const e1: any = err;\r\n            msg = e1[\"message\"];\r\n          }\r\n          this.setState({ \"success\": false, \"nosuccess\": true, \"errormsg\": msg });\r\n        }\r\n      }\r\n      else {\r\n        this.setState({ \"success\": false, \"nosuccess\": true, \"errormsg\": this.res.getResStr(\"STRLoginUserIsNotEMail\") });\r\n      }\r\n    }\r\n  }\r\n  private handleCancel = async (_e: any) => {\r\n    this.props.setcurrToken(null);\r\n    this.props.mongo.semuserlogin=null;\r\n    this.props.dismiss();\r\n  }\r\n  public render(): React.ReactElement {\r\n    let divHostStyle: any = {\r\n      // position: \"fixed\",\r\n      // height: \"100%\", //this.props.height,\r\n      // width: \"80%\", //this.props.width,\r\n      padding: \"20px\"\r\n    };\r\n    const stackTokens = { childrenGap: 10 };\r\n    return (\r\n      <div>\r\n        {this.res &&\r\n          <div>\r\n            <Stack style={divHostStyle} tokens={stackTokens}>\r\n              {this.state.nosuccess && (\r\n                <MessageBar\r\n                  messageBarType={MessageBarType.error}\r\n                >\r\n                  {this.state.errormsg}\r\n                </MessageBar>\r\n              )}\r\n              <Stack tokens={stackTokens}>\r\n                  <StackItem>\r\n                    <Dropdown\r\n                      placeholder={this.res.getResStr(\"STRSELECTDB\")}\r\n                      label={this.res.getResStr(\"STRSQLDATABASE\").replace(\":\", \"\")}\r\n                      selectedKey={this.state.dbname}\r\n                       onChange={(_e: any, v?: any) => {\r\n                        this.setState({ \"dbname\": v.key });\r\n                      }}\r\n                      options={this.state.options}\r\n                    />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <Dropdown\r\n                      placeholder={this.res.getResStr(\"STRSELECTREPO\")}\r\n                      label={this.res.getResStr(\"STRREPOSITORY\")}\r\n                      selectedKey={this.state.repository}\r\n                       onChange={(_e: any, v?: any) => {\r\n                        this.setState({ \"repository\": v.key });\r\n                      }}\r\n                      options={this.state.repoptions}\r\n                    />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <TextField type=\"text\" required label={this.res.getResStr(\"STRUSERID\")}\r\n                      onChange={(_e: any, v?: any) => this.setState({ \"username\": v })} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <TextField type=\"password\" required label={this.res.getResStr(\"STRDLGPWD\")}\r\n                      onChange={(_e: any, v?: any) => this.setState({ \"password\": v })} />\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <Stack tokens={stackTokens} horizontal>\r\n                      <DefaultButton onClick={this.handleSubmit}>{this.res.getResStr(\"STRDLGBOPTLO\")}</DefaultButton>\r\n                      <DefaultButton onClick={this.handleCancel}>{this.res.getResStr(\"STRDLGCMDCA\")}</DefaultButton>\r\n                      {/* <DefaultButton><Link to=\"/signup\" >{this.res.getResStr(\"STRREGISTER\")}</Link></DefaultButton> */}\r\n                      {/* <DefaultButton><Link to=\"/forgotpassword\" >{\"Forgot Password\"}</Link></DefaultButton> */}\r\n                      {/* <DefaultButton><Link to=\"/options\">{this.res.getResStr(\"STRIMPOPTIONCAP\")}</Link></DefaultButton> */}\r\n                    </Stack>\r\n                  </StackItem>\r\n                </Stack>\r\n              {/* </form> */}\r\n            </Stack>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}","/* eslint-disable no-useless-concat */\r\n// import { SPHttpClient, ISPHttpClientOptions } from '@microsoft/sp-http';\r\n// import { SPListItem } from '@microsoft/sp-page-context';\r\n// import { MSGraphClient } from '@microsoft/sp-http';\r\n// import { any } from '@microsoft/sp-webpart-base';\r\nimport { ISPExplorer } from \"./spexplorerinterface\";\r\n\r\nexport class SPExplorer implements ISPExplorer {\r\n  public async spGetDocument(_ctx: any, _site: string, _listName: string, _filename: string): Promise<any> { return null; }\r\n  public async spGetDocumentField(_ctx: any, _site: string, _listName: string, _filename: string, _fieldname: string): Promise<any> { return null; }\r\n  public async spCheckOutDocument(_ctx: any, _site: string, _listName: string, _filename: string): Promise<any> { return null; }\r\n  public async spCheckInDocument(_ctx: any, _site: string, _listName: string, _filename: string): Promise<any> { return null; }\r\n  public async getListData(_ctx: any, _site: string, _listName: string, _query: string | undefined): Promise<any[]> { return []; }\r\n  public async getListItem(_ctx: any, _site: string, _listName: string, _id: string): Promise<any | null> { return null; }\r\n  public async addListItem(_ctx: any, _site: string, _listName: string | undefined, _title: string): Promise<any | null> { return null; }\r\n  public async deleteListItem(_ctx: any, _site: string, _listName: string, _id: number): Promise<any> { return null; }\r\n  public async getTXT(_ctx: any, _url: string): Promise<any> { return null; }\r\n  public async postTXT(_ctx: any, _url: string, _body: any): Promise<any> { }\r\n  public async getUserById(_ctx: any, _site: string, _userId: number): Promise<any> { }\r\n  // public async spGetDocument(ctx: any, site: string, listName: string, filename: string): Promise<any> {\r\n  //   let url = `${site}/_api/web/GetFileByServerRelativeUrl('${listName}/${filename}')`;\r\n  //   const response = await ctx.spHttpClient\r\n  //     .get(`${url}`, SPHttpClient.configurations.v1);\r\n  //   if (response.status !== 200) {\r\n  //     console.debug('getDocument: ' + response.statusText);\r\n  //     return null;\r\n  //   }\r\n  //   else {\r\n  //     return response.json();\r\n  //   }\r\n  // }\r\n  // public async spGetDocumentField(ctx: any, site: string, listName: string, filename: string, _fieldname: string): Promise<any> {\r\n  //   let url = `${site}/_api/web/GetFileByServerRelativeUrl('${listName}/${filename}?$select=*')`;\r\n  //   const response = await ctx.spHttpClient\r\n  //     .get(`${url}`, SPHttpClient.configurations.v1);\r\n  //   if (response.status !== 200) {\r\n  //     console.debug('getDocumentspGetDocumentField: ' + response.statusText);\r\n  //     return null;\r\n  //   }\r\n  //   else {\r\n  //     return response.json();\r\n  //   }\r\n  // }\r\n  // public async spCheckOutDocument(ctx: any, site: string, listName: string, filename: string): Promise<any> {\r\n  //   let options: ISPHttpClientOptions = {\r\n  //     headers: {\r\n  //       \"Accept\": \"application/json\",\r\n  //       \"Content-Type\": \"application/json\",\r\n  //       'odata-version': '',\r\n  //       \"IF-MATCH\": \"*\",\r\n  //       'X-HTTP-Method': 'PATCH'\r\n  //     },\r\n  //     body: \"\"\r\n  //   };\r\n  //   let url = `${site}/_api/web/GetFileByServerRelativeUrl('${listName}/${filename}')/CheckOut()`;\r\n  //   const response = await ctx.spHttpClient\r\n  //     .post(`${url}`, SPHttpClient.configurations.v1, options);\r\n  //   if (response.status !== 200) {\r\n  //     // console.debug(response);\r\n  //     console.debug('checkOutDocument: ' + response.status);\r\n  //     return null;\r\n  //   }\r\n  //   else {\r\n  //     return await response.text();\r\n  //   }\r\n  // }\r\n  // public async spCheckInDocument(ctx: any, site: string, listName: string, filename: string): Promise<any> {\r\n  //   let options: ISPHttpClientOptions = {\r\n  //     headers: {\r\n  //       \"Accept\": \"application/json\",\r\n  //       \"Content-Type\": \"application/json\",\r\n  //       'odata-version': '',\r\n  //       \"IF-MATCH\": \"*\",\r\n  //       'X-HTTP-Method': 'PATCH'\r\n  //     },\r\n  //     body: \"\"\r\n  //   };\r\n  //   let url = `${site}/_api/web/GetFileByServerRelativeUrl('${listName}/${filename}')/CheckIn()`;\r\n  //   const response = await ctx.spHttpClient\r\n  //     .post(`${url}`, SPHttpClient.configurations.v1, options);\r\n  //   if (response.status !== 200) {\r\n  //     console.debug('checkInDocument: ' + response.statusText);\r\n  //     return null;\r\n  //   }\r\n  //   else {\r\n  //     return await response.text();\r\n  //   }\r\n  // }\r\n\r\n  // public async getListData(ctx: any, site: string, listName: string, query: string | undefined): Promise<any[]> {\r\n  //   if (query === undefined || query === \"\") {\r\n  //     query = \"?$select=Title\";\r\n  //   }\r\n  //   if (query === \"*\") {\r\n  //     query = \"\";\r\n  //   } else {\r\n  //     if (!query.startsWith(\"?\")) {\r\n  //       query = \"?\" + query;\r\n  //     }\r\n  //   }\r\n  //   const response = await ctx.spHttpClient\r\n  //     // .get(`${this.props.context.pageContext.web.absoluteUrl}/_api/web/lists/GetByTitle('${listName}')/items?${query}${flt}`,\r\n  //     .get(`${site}/_api/web/lists/GetByTitle('${listName}')/items${query}`, SPHttpClient.configurations.v1);\r\n  //   if (response.status === 404) {\r\n  //     console.debug('getListData: ' + 'List not found: ' + listName);\r\n  //     return [];\r\n  //   }\r\n  //   else {\r\n  //     return response.json();\r\n  //   }\r\n  // }\r\n  // public async getListItem(ctx: any, site: string, listName: string, id: string): Promise<any | null> {\r\n  //   const response = await ctx.spHttpClient\r\n  //     // .get(`${this.props.context.pageContext.web.absoluteUrl}/_api/web/lists/GetByTitle('${listName}')/items?${query}${flt}`,\r\n  //     .get(`${site}/_api/web/lists/GetByTitle('${listName}')/items(${id})`, SPHttpClient.configurations.v1);\r\n  //   if (response.status === 404) {\r\n  //     console.debug('getListItem: ' + 'List not found.');\r\n  //     return null;\r\n  //   }\r\n  //   else {\r\n  //     return response.json();\r\n  //   }\r\n  // }\r\n\r\n  // public async addListItem(ctx: any, site: string, listName: string | undefined, title: string): Promise<any | null> {\r\n  //   let m = {\r\n  //     Title: title\r\n  //   };\r\n  //   const spOpts: ISPHttpClientOptions = {\r\n\r\n  //     body: JSON.stringify(m)\r\n\r\n  //   };\r\n  //   const response = await ctx.spHttpClient\r\n  //     .post(site + \"/_api/web/lists/GetByTitle('\" + listName + \"')/items\", SPHttpClient.configurations.v1, spOpts);\r\n  //   if (response.status === 404) {\r\n  //     console.error('addListItem', new Error('List not found.'));\r\n  //     return null;\r\n  //   }\r\n  //   else {\r\n  //     return response.json();\r\n  //   }\r\n  // }\r\n  // public async deleteListItem(ctx: any, site: string, listName: string, id: number): Promise<any> {\r\n  //   const spOpts: ISPHttpClientOptions = {\r\n  //     headers: {\r\n  //       'Accept': 'application/json;odata=nometadata',\r\n  //       'Content-type': 'application/json;odata=verbose',\r\n  //       'odata-version': '',\r\n  //       \"IF-MATCH\": \"*\",\r\n  //       'X-HTTP-Method': 'DELETE'\r\n  //     }\r\n  //   };\r\n  //   const response = await ctx.spHttpClient\r\n  //     .post(site + \"/_api/web/lists/GetByTitle('\" + listName + \"')/items(\" + id + \")\", SPHttpClient.configurations.v1, spOpts);\r\n  //   if (response.status === 404) {\r\n  //     console.error('deleteListItem', new Error('List not found.'));\r\n  //     return {};\r\n  //   }\r\n  //   else {\r\n  //     return null;\r\n  //   }\r\n  // }\r\n\r\n  // public async getTXT(ctx: any, url: string): Promise<any> {\r\n  //   const response = await ctx.spHttpClient\r\n  //     .get(`${url}`, SPHttpClient.configurations.v1);\r\n  //   if (response.status !== 200) {\r\n  //     console.debug('getTXT: ' + response.statusText);\r\n  //     return null;\r\n  //   }\r\n  //   else {\r\n  //     let r = await response.text();\r\n  //     return r;\r\n  //   }\r\n  // }\r\n  // public async postTXT(ctx: any, url: string, body: any): Promise<any> {\r\n  //   let options: ISPHttpClientOptions = {\r\n  //     headers: {\r\n  //       \"Accept\": \"application/json\",\r\n  //       \"Content-Type\": \"application/json\"\r\n  //     },\r\n  //     body: body\r\n  //   };\r\n\r\n  //   const response = await ctx.spHttpClient\r\n  //     .post(`${url}`, SPHttpClient.configurations.v1, options);\r\n  //   if (response.status !== 200) {\r\n  //     console.debug('postTXT: ' + response.statusText);\r\n  //     return null;\r\n  //   }\r\n  //   else {\r\n  //     return await response.text();\r\n  //   }\r\n  // }\r\n  // public async getUserById(ctx: any, site: string, userId: number): Promise<any> {\r\n  //   const response = await ctx.spHttpClient\r\n  //     .get(`${site}/_api/web/GetUserById('${userId}')`, SPHttpClient.configurations.v1);\r\n  //   if (response.status === 404) {\r\n  //     console.debug('getUserId: ' + 'User not found.');\r\n  //     return \"\";\r\n  //   }\r\n  //   if (response.status === 304) {\r\n  //     console.debug('getUserId: ' + 'No Result.');\r\n  //     return \"\";\r\n  //   }\r\n  //   else {\r\n  //     let r = await response.json();\r\n  //     // console.debug(r);\r\n  //     return r.Title;\r\n  //   }\r\n  // }\r\n\r\n  public async fetchGraph(query: string, filter: string, expand: string, graph: any): Promise<any> {\r\n    return graph\r\n      .api(query)\r\n      .version(\"beta\")\r\n      .filter(filter)\r\n      .expand(expand)\r\n      .get();\r\n  }\r\n\r\n  public async fetchGraphItems(graphClient: any, query: string): Promise<any[]> {\r\n    if (graphClient) {\r\n      //  const filter = \"\"; //this._excludeTypes.map(type => `resourceVisualization/type ne '${type}'`).join(' and ');\r\n      //  console.debug(\"fetchGraphItems\");\r\n      // let items: any[] = [];\r\n      console.debug(\"fetchGraphItems: \" + query);\r\n      try {\r\n        let res = await graphClient\r\n          .api(query)\r\n          .version(\"beta\") // API is currently only available in BETA\r\n          .get();\r\n        // .filter(`resourceVisualization/containerType eq 'Site' and ${filter}`)\r\n        // .get((err: any, res: any) => {\r\n        //   if (err) {\r\n        //     console.debug(err.message);\r\n        //     return [];\r\n        //   }\r\n        //   // Check if a response was retrieved\r\n        //   if (res && res.value) {\r\n        //     // let result: any[] = res.value;\r\n        //     let result = res.value;\r\n        //     return result;\r\n        //   } else {\r\n        //     return [];\r\n        //   }\r\n        // });\r\n        // }\r\n        return res.value;\r\n      } catch (e) {\r\n        // console.debug(e);\r\n        // throw ((e as any).message);\r\n        alert ((e as any).message);\r\n        return[];\r\n      }\r\n    } else return [];\r\n  }\r\n  public async fetchGraphItem(graphClient: any, query: string): Promise<any> {\r\n    if (graphClient) {\r\n      //  const filter = \"\"; //this._excludeTypes.map(type => `resourceVisualization/type ne '${type}'`).join(' and ');\r\n      // console.debug(\"fetchGraphItem\");\r\n      try {\r\n        let res = await graphClient\r\n          .api(query)\r\n          .version(\"beta\") // API is currently only available in BETA\r\n          .get();\r\n        return res;\r\n      } catch (e) {\r\n        throw ((e as any).message);\r\n      }\r\n    } else return null;\r\n  }\r\n  public async postGraphItem(graphClient: any, query: string, body: any): Promise<any> {\r\n    if (graphClient) {\r\n      //  const filter = \"\"; //this._excludeTypes.map(type => `resourceVisualization/type ne '${type}'`).join(' and ');\r\n      // console.debug(\"fetchGraphItem\");\r\n      graphClient\r\n        .api(query)\r\n        .version(\"beta\")\r\n        .get((err: any, res: any) => {\r\n          if (err) {\r\n            return;\r\n          }\r\n          if (res) {\r\n            graphClient\r\n              .api(query)\r\n              .header(\"If-Match\", res[\"@odata.etag\"])\r\n              .version(\"beta\") // API is currently only available in BETA\r\n              // .filter(`resourceVisualization/containerType eq 'Site' and ${filter}`)\r\n              .post(body)\r\n              .then((res2: any) => {\r\n                if (res2) {\r\n                  return res2;\r\n                  // let result = res2;\r\n                  // return resolve(result);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }, (err2: any) => {\r\n                alert(err2.message);\r\n              });\r\n          }\r\n        });\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n}","/* eslint-disable no-lone-blocks */\r\nimport * as React from 'react';\r\nimport { CommandBar, } from 'office-ui-fabric-react';\r\nimport styles from './SemTalkCommandBar.module.scss';\r\nimport { Guid } from \"guid-typescript\";\r\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { SemTalkBaseConstant, SemTalkLanguageCode, SemTalkType } from '../../application/tbase/Interface';\r\nimport { IMongoOption } from '../../SemTalkMongoServer';\r\nimport { Code2Language } from '../../application/tbase/langtools';\r\nimport { Process_ElementName } from '../../application/semtalklistener/processInterface';\r\nimport { ISemTalkOnline, SemTalkOnlineCommand } from '../../ISemTalkOnline';\r\n\r\n\r\nexport interface ISemTalkCommandBarProps {\r\n  callback: ISemTalkOnline;\r\n  semtalk: IVisioRDFS;\r\n  site: string;\r\n  context?: any;\r\n  library: string;\r\n  templates: string;\r\n  title?: string;\r\n  goodlist: string[];\r\n  badlist: string[];\r\n  listTitle?: string;\r\n  dTitle?: string;\r\n\r\n  graphClient?: any;\r\n  spCheckInOut: boolean;\r\n  mongo: IMongoOption;\r\n  guilanguage: SemTalkLanguageCode;\r\n  language: string;\r\n  showlanguage: boolean;\r\n  showSimulation: boolean;\r\n  showBPMN: boolean;\r\n}\r\nexport interface ISemTalkCommandBarState {\r\n  semtalktype: SemTalkType;\r\n  isclass: boolean;\r\n  isinstance: boolean;\r\n  isbusinessclass: boolean;\r\n  isdiagram: boolean;\r\n  issystemclass: boolean;\r\n  isassociationtype: boolean;\r\n  isattributetype: boolean;\r\n  ismethodtype: boolean;\r\n  isstatetype: boolean;\r\n  isdiagramtype: boolean;\r\n  isassociation: boolean;\r\n  isrefine: boolean;\r\n  iscomposable: boolean;\r\n  ismongo: boolean;\r\n  // items: any[];\r\n}\r\n\r\nexport class SemTalkCommandBar extends React.Component<ISemTalkCommandBarProps, ISemTalkCommandBarState> {\r\n  public callback: Guid;\r\n  private items: any[];\r\n  \r\n  constructor(props: ISemTalkCommandBarProps) {\r\n    super(props);\r\n    console.debug(\"showCommand\");\r\n    this.callback = Guid.create();\r\n    this.items=[];\r\n    this.state = {\r\n      semtalktype: SemTalkType.SemTalkInstance,\r\n      isclass: false,\r\n      isinstance: false,\r\n      isbusinessclass: false,\r\n      isdiagram: false,\r\n      issystemclass: false,\r\n      isassociationtype: false,\r\n      isattributetype: false,\r\n      ismethodtype: false,\r\n      isstatetype: false,\r\n      isdiagramtype: false,\r\n      isassociation: false,\r\n      isrefine: false,\r\n      iscomposable: false,\r\n      ismongo: false,\r\n    };\r\n  }\r\n  private undoItem: any;\r\n  private redoItem: any;\r\n  private langItem: any;\r\n\r\n  private mounted: boolean = false;\r\n  public componentDidMount() {\r\n    let oid: number = getObject();\r\n    this.setType(oid);\r\n    addCallBack(this);\r\n    this.mounted = true;\r\n  }\r\n  public componentWillUnmount() {\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n  }\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n  private setType(oid: number) {\r\n    const ob = this.props.semtalk.base;\r\n    const obj = ob.FindObjectByID(oid);\r\n    let isbusinessclass = false;\r\n    let isclass = false;\r\n    let issystemclass = false;\r\n    let isassociationtype = false;\r\n    let isattributetype = false;\r\n    let ismethodtype = false;\r\n    let isstatetype = false;\r\n    let isassociation = false;\r\n    let isinstance = false;\r\n    let isdiagramtype = false;\r\n    let isdiagram = false;\r\n    let isrefine = false;\r\n    let isexpand = false;\r\n    let iscomposable = false;\r\n    let isprocess = false;\r\n    let isreadonly: boolean = this.props.semtalk.readonly;\r\n    // let isundo = this.props.semtalk.IsUndo();\r\n    // let isredo = this.props.semtalk.IsRedo();\r\n    if (this.props.semtalk.page) {\r\n      isprocess = this.props.semtalk.page.ClassOf().ObjectName === ob.GetModelAttribute(Process_ElementName.SLProc);\r\n    }\r\n    let ismongo = this.props.mongo.usemongo;\r\n    let isdocument = false;\r\n    if (ob && ob.ObjectName) {\r\n      isdocument = true;\r\n    }\r\n    if (obj !== null) {  // && this.state.semtalktype !== obj.ObjectType\r\n      if (ob.IsClass(obj)) {\r\n        isclass = true;\r\n        isexpand = true;\r\n        isbusinessclass = ob.IsBusinessClass(obj);\r\n        if (!isbusinessclass) {\r\n          issystemclass = ob.IsSystemClass(obj);\r\n          if (issystemclass) {\r\n            isassociationtype = ob.IsAssociationType(obj);\r\n            if (!isassociationtype) {\r\n              isdiagramtype = ob.IsDiagramType(obj);\r\n            }\r\n          }\r\n          else {\r\n            isattributetype = ob.IsAttributeType(obj);\r\n            if (!isattributetype) {\r\n              ismethodtype = ob.IsMethodType(obj);\r\n              if (!ismethodtype) {\r\n                isstatetype = ob.IsStateType(obj);\r\n                let sc = obj.SystemClass();\r\n                if (!isstatetype && sc === null) {\r\n                  isrefine = true;\r\n                }\r\n              }\r\n            }\r\n\r\n          }\r\n        }\r\n      } else {\r\n        isinstance = true;\r\n        isassociation = this.props.semtalk.base.IsAssociation(obj);\r\n        if (!isassociation) {\r\n          isdiagram = this.props.semtalk.base.IsDiagram(obj);\r\n          if (!isdiagram) {\r\n            let sc = obj.SystemClass();\r\n            if (sc && sc.Composeable\r\n            ) {\r\n              iscomposable = true;\r\n              // if (iscomposable && sc.ObjectName === ob.GetModelAttribute(Process_ElementName.SLActivity)) {\r\n              isrefine = sc.Refineable;\r\n              // }\r\n            }\r\n            if (sc)\r\n              isexpand = !sc.BottomUp && !sc.OnceOnly;\r\n            if (sc === null) {\r\n              isrefine = true;\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n      }\r\n    }\r\n    this.items = this.updateItems(isrefine, iscomposable, isexpand, isprocess,\r\n      isreadonly, ismongo, isdocument);\r\n\r\n    let ot = SemTalkType.SemTalkInstance;\r\n    if (obj != null)\r\n      ot = obj.ObjectType;\r\n    this.setState({\r\n      semtalktype: ot,\r\n      isclass: isclass,\r\n      isinstance: isinstance,\r\n      isbusinessclass: isbusinessclass,\r\n      issystemclass: issystemclass,\r\n      isassociationtype: isassociationtype,\r\n      isattributetype: isattributetype,\r\n      ismethodtype: ismethodtype,\r\n      isstatetype: isstatetype,\r\n      isassociation: isassociation,\r\n      isdiagram: isdiagram,\r\n      isdiagramtype: isdiagramtype,\r\n      isrefine: isrefine,\r\n      iscomposable: iscomposable,\r\n    });\r\n  }\r\n  private eventListener = (e: any) => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoDocument: {\r\n        this.setType(md.objectid);\r\n      }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoObject: {\r\n        this.setType(md.objectid);\r\n      }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode: {\r\n        this.setType(md.objectid);\r\n      }\r\n        break;\r\n    }\r\n  }\r\n\r\n  public render(): React.ReactElement<ISemTalkCommandBarProps> {\r\n    let leftitems = this.getCommandBarItems(this.items);\r\n    // console.debug(leftitems.length);\r\n    if (leftitems.length !== 0){\r\n    return (\r\n      <div className={styles.semTalkCommandBar}>\r\n        <CommandBar\r\n          items={leftitems}\r\n          farItems={this.faritems}\r\n        />\r\n      </div>\r\n    );}\r\n    return ( <div />);\r\n  }\r\n\r\n\r\n  private getCommandBarItems = (items: any): any[] => {\r\n    if (this.undoItem) this.undoItem[\"disabled\"] = !this.props.semtalk.IsUndo();\r\n    if (this.redoItem) this.redoItem[\"disabled\"] = !this.props.semtalk.IsRedo();\r\n\r\n    let counter = 0;\r\n    let leftItems: any[] = [];\r\n    let subItems: any[] = [];\r\n    function pushToItem(item: any) {\r\n      if (counter <= 8) {\r\n        leftItems.push(item);\r\n      } else { subItems.push(item); }\r\n    }\r\n    for (let item of items) {\r\n      { pushToItem(item); counter++; }\r\n    }\r\n    if (this.langItem && this.props.showlanguage) {\r\n      const langclass = this.props.semtalk.base.FindClass(SemTalkBaseConstant.SLLanguage);\r\n      let submenus: any[] = [];\r\n      // let currlangcap = this.state.language;\r\n      if (langclass) {\r\n        for (let lang of langclass.Instances()) {\r\n          submenus.push(\r\n            {\r\n              key: lang.ObjectName,\r\n              text: lang.ID2NameNspLan(Code2Language(this.props.guilanguage)),\r\n              onClick: (): void => {\r\n                this.props.callback.DoCommand(SemTalkOnlineCommand.SelectDataLang, lang.ObjectName);\r\n              },\r\n            }\r\n          );\r\n        }\r\n      }\r\n\r\n      this.langItem[\"text\"] = this.props.semtalk.base.FindInstance(this.props.language)?.ID2NameNspLan(Code2Language(this.props.guilanguage));\r\n      if (this.langItem[\"subMenuProps\"]) this.langItem[\"subMenuProps\"][\"items\"] = submenus;\r\n      // pushToItem(this.langItem);\r\n    }\r\n    let subItem = {\r\n      key: 'moreItem',\r\n      name: '',\r\n      iconProps: {\r\n        iconName: 'More'\r\n      },\r\n      arialabel: '',\r\n      subMenuProps: {\r\n        items: subItems\r\n      }\r\n    };\r\n    if (counter > 8) leftItems.push(subItem);\r\n    return leftItems;\r\n  }\r\n\r\n\r\n  private updateItems = (isrefine: boolean, iscomp: boolean, isexpand: boolean,\r\n    isprocess: boolean, isreadonly: boolean,\r\n    ismongo: boolean, isdocument: boolean): any[] => {\r\n\r\n    let res = this.props.callback.ParseMenu(true, this);\r\n    let dynitems = res[\"allitems\"];\r\n\r\n    if (dynitems[\"langItem\"]) { this.langItem = dynitems[\"langItem\"]; }\r\n    if (dynitems[\"UndoItem\"]) {\r\n      this.undoItem = dynitems[\"UndoItem\"];\r\n      this.undoItem.disabled = true;\r\n    }\r\n    if (dynitems[\"RedoItem\"]) {\r\n      this.redoItem = dynitems[\"RedoItem\"];\r\n      this.redoItem.disabled = true;\r\n    }\r\n    if (dynitems[\"checkIn\"]) { dynitems[\"checkIn\"][\"disabled\"] = isreadonly || !isdocument; }\r\n    if (dynitems[\"checkOut\"]) { dynitems[\"checkOut\"][\"disabled\"] = isreadonly || !isdocument; }\r\n    if (dynitems[\"modelProperty\"]) { dynitems[\"modelProperty\"][\"disabled\"] = !isdocument || !ismongo; }\r\n    // if (dynitems[\"settings\"]) { dynitems[\"settings\"][\"disabled\"] = !ismongo; }\r\n\r\n    if (dynitems[\"deleteShapes\"]) {\r\n      dynitems[\"deleteShapes\"][\"text\"] = this.props.semtalk.getResStrListener(\"STRDLGCMDDE\") + \" (\" + this.props.semtalk.getResStrListener(\"STRDLGLSHAPES\") + \")\";\r\n    }\r\n    if (dynitems[\"composeObject\"]) { dynitems[\"composeObject\"][\"disabled\"] = !iscomp; }\r\n    if (dynitems[\"refineObject\"]) { dynitems[\"refineObject\"][\"disabled\"] = !isrefine; }\r\n    if (dynitems[\"detachObject\"]) { dynitems[\"detachObject\"][\"disabled\"] = !isrefine; }\r\n    if (dynitems[\"expandObject\"]) { dynitems[\"expandObject\"][\"disabled\"] = !isexpand; }\r\n    if (dynitems[\"numberPage\"]) { dynitems[\"numberPage\"][\"disabled\"] = !isprocess; }\r\n    if (dynitems[\"insertPage\"]) { dynitems[\"insertPage\"][\"disabled\"] = isprocess; }\r\n    if (dynitems[\"taxonomyPage\"]) { dynitems[\"taxonomyPage\"][\"disabled\"] = isprocess; }\r\n    if (dynitems[\"mxRadialTreeLayout\"]) { dynitems[\"mxRadialTreeLayout\"][\"disabled\"] = isprocess; }\r\n    if (dynitems[\"FormPreview\"]) { dynitems[\"FormPreview\"][\"disabled\"] = this.props.semtalk.template !== \"cit\"; }\r\n    if (dynitems[\"Repository\"]) { dynitems[\"Repository\"][\"disabled\"] = !ismongo; }\r\n    if (dynitems[\"uploadOnto\"]) { dynitems[\"uploadOnto\"][\"disabled\"] = isprocess; }\r\n    if (dynitems[\"semantics\"]) { dynitems[\"semantics\"][\"disabled\"] = isprocess; }\r\n\r\n    return res[\"items\"];\r\n  }\r\n\r\n\r\n\r\n\r\n  private faritems = [\r\n    {\r\n      key: 'Table Import',\r\n      name: this.props.semtalk.getResStr(\"STRTABLEIMPORT\"),\r\n      cacheKey: 'myCacheKeyTabIm', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Tiles'\r\n      },\r\n      iconOnly: true,\r\n      onClick: (): void => {\r\n        //  this.props.callback.Repository();\r\n        // this.setState({ showTableImport: true });\r\n      }\r\n    },\r\n    {\r\n      key: 'info',\r\n      name: this.props.semtalk.getResStr(\"STRHELP\").replace(\"&\", \"\"),\r\n      cacheKey: 'myCacheKeyInfo', // changing this key will invalidate this items cache\r\n      iconProps: {\r\n        iconName: 'Info'\r\n      },\r\n      iconOnly: true,\r\n      keyEvent: \"F1\",\r\n      onClick: () => {\r\n        this.props.callback.DoCommand(SemTalkOnlineCommand.ShowHelp, {});\r\n      }\r\n    }\r\n  ];\r\n\r\n  // private _onClose = (s: any): void => {\r\n  //   this.setState(s);\r\n  // }\r\n  // private _onRenderFooterContent = (): JSX.Element => {\r\n  //   return (\r\n  //     <div>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n}","/* eslint-disable no-lone-blocks */\r\nimport * as React from 'react';\r\nimport { CommandBar } from 'office-ui-fabric-react';\r\nimport styles from './SemTalkToolBar.module.scss';\r\nimport { Guid } from \"guid-typescript\";\r\n// import { ContextualMenuItemType } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { getObject, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { SemTalkBaseConstant, SemTalkLanguageCode, SemTalkType } from '../../application/tbase/Interface';\r\nimport { Code2Language } from '../../application/tbase/langtools';\r\nimport { Process_ElementName } from '../../application/semtalklistener/processInterface';\r\nimport { ISemTalkOnline, SemTalkOnlineCommand } from '../../ISemTalkOnline';\r\nimport { IMongoOption } from '../../SemTalkMongoServer';\r\n\r\nexport interface ISemTalkToolBarProps {\r\n  callback: ISemTalkOnline;\r\n  semtalk: IVisioRDFS;\r\n  mongo: IMongoOption;\r\n  guilanguage: SemTalkLanguageCode;\r\n  language: string;\r\n  showlanguage: boolean;\r\n}\r\n\r\nexport interface ISemTalkToolBarState {\r\n  semtalktype: SemTalkType;\r\n  isclass: boolean;\r\n  isinstance: boolean;\r\n  isbusinessclass: boolean;\r\n  isdiagram: boolean;\r\n  issystemclass: boolean;\r\n  isassociationtype: boolean;\r\n  isattributetype: boolean;\r\n  ismethodtype: boolean;\r\n  isstatetype: boolean;\r\n  isdiagramtype: boolean;\r\n  isassociation: boolean;\r\n  isrefine: boolean;\r\n  iscomposable: boolean;\r\n  ismongo: boolean;\r\n  items: any[];\r\n}\r\n\r\nexport class SemTalkToolBar extends React.Component<ISemTalkToolBarProps, ISemTalkToolBarState> {\r\n  public callback: Guid;\r\n  constructor(props: ISemTalkToolBarProps) {\r\n    super(props);\r\n    console.debug(\"showToolBar\");\r\n    this.callback = Guid.create();\r\n    this.state = {\r\n      semtalktype: SemTalkType.SemTalkInstance,\r\n      isclass: false,\r\n      isinstance: false,\r\n      isbusinessclass: false,\r\n      isdiagram: false,\r\n      issystemclass: false,\r\n      isassociationtype: false,\r\n      isattributetype: false,\r\n      ismethodtype: false,\r\n      isstatetype: false,\r\n      isdiagramtype: false,\r\n      isassociation: false,\r\n      isrefine: false,\r\n      iscomposable: false,\r\n      ismongo: false,\r\n      items: []\r\n      // showBPMNImport: false\r\n    };\r\n\r\n  }\r\n  // private fileItem: any = {};\r\n  private undoItem: any;\r\n  private redoItem: any;\r\n  // private homeItem: any = {};\r\n  // private pageItem: any = {};\r\n  // private objItem: any = {};\r\n  // private explorerItem: any = {};\r\n  // private searchItem = {};\r\n  private langItem: any;\r\n\r\n  private mounted: boolean = false;\r\n  public componentDidMount() {\r\n    let oid: number = getObject();\r\n    this.setType(oid);\r\n    addCallBack(this);\r\n    this.mounted = true;\r\n  }\r\n  public componentWillUnmount() {\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n  }\r\n\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n  private setType(oid: number) {\r\n    const ob = this.props.semtalk.base;\r\n    const obj = ob.FindObjectByID(oid);\r\n    let isbusinessclass = false;\r\n    let isclass = false;\r\n    let issystemclass = false;\r\n    let isassociationtype = false;\r\n    let isattributetype = false;\r\n    let ismethodtype = false;\r\n    let isstatetype = false;\r\n    let isassociation = false;\r\n    let isinstance = false;\r\n    let isdiagramtype = false;\r\n    let isdiagram = false;\r\n    let isrefine = false;\r\n    let isexpand = false;\r\n    let iscomposable = false;\r\n    let isprocess = false;\r\n    let isreadonly: boolean = this.props.semtalk.readonly;\r\n    // let isundo = this.props.semtalk.IsUndo();\r\n    // let isredo = this.props.semtalk.IsRedo();\r\n    if (this.props.semtalk.page) {\r\n      isprocess = this.props.semtalk.page.ClassOf().ObjectName === ob.GetModelAttribute(Process_ElementName.SLProc);\r\n    }\r\n    let ismongo = this.props.mongo.usemongo;\r\n    let isdocument = false;\r\n    if (ob && ob.ObjectName) {\r\n      isdocument = true;\r\n    }\r\n    if (obj !== null) {  // && this.state.semtalktype !== obj.ObjectType\r\n      if (ob.IsClass(obj)) {\r\n        isclass = true;\r\n        isexpand = true;\r\n        isbusinessclass = ob.IsBusinessClass(obj);\r\n        if (!isbusinessclass) {\r\n          issystemclass = ob.IsSystemClass(obj);\r\n          if (issystemclass) {\r\n            isassociationtype = ob.IsAssociationType(obj);\r\n            if (!isassociationtype) {\r\n              isdiagramtype = ob.IsDiagramType(obj);\r\n            }\r\n          }\r\n          else {\r\n            isattributetype = ob.IsAttributeType(obj);\r\n            if (!isattributetype) {\r\n              ismethodtype = ob.IsMethodType(obj);\r\n              if (!ismethodtype) {\r\n                isstatetype = ob.IsStateType(obj);\r\n                let sc = obj.SystemClass();\r\n                if (!isstatetype && sc === null) {\r\n                  isrefine = true;\r\n                }\r\n              }\r\n            }\r\n\r\n          }\r\n        }\r\n      } else {\r\n        isinstance = true;\r\n        isassociation = this.props.semtalk.base.IsAssociation(obj);\r\n        if (!isassociation) {\r\n          isdiagram = this.props.semtalk.base.IsDiagram(obj);\r\n          if (!isdiagram) {\r\n            let sc = obj.SystemClass();\r\n            if (sc && sc.Composeable\r\n              //  && (\r\n              //   sc.ObjectName === ob.GetModelAttribute(Process_ElementName.SLActivity) ||\r\n              //   sc.ObjectName === ob.GetModelAttribute(Process_ElementName.SLEvent) ||\r\n              //   sc.ObjectName === ob.GetModelAttribute(Process_ElementName.SLDecision) ||\r\n              //   sc.ObjectName === ob.GetModelAttribute(Process_ElementName.SLEntryPoint) ||\r\n              //   sc.ObjectName === ob.GetModelAttribute(Process_ElementName.SLExitPoint)\r\n              // )\r\n            ) {\r\n              iscomposable = true;\r\n              // if (iscomposable && sc.ObjectName === ob.GetModelAttribute(Process_ElementName.SLActivity)) {\r\n              isrefine = sc.Refineable;\r\n              // }\r\n            }\r\n            if (sc)\r\n              isexpand = !sc.BottomUp && !sc.OnceOnly;\r\n            if (sc === null) {\r\n              isrefine = true;\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n      }\r\n    }\r\n    let items = this.updateItems(isrefine, iscomposable, isexpand, isprocess,\r\n      isreadonly, ismongo, isdocument);\r\n\r\n    let ot = SemTalkType.SemTalkInstance;\r\n    if (obj != null)\r\n      ot = obj.ObjectType;\r\n    this.setState({\r\n      semtalktype: ot,\r\n      isclass: isclass,\r\n      isinstance: isinstance,\r\n      isbusinessclass: isbusinessclass,\r\n      issystemclass: issystemclass,\r\n      isassociationtype: isassociationtype,\r\n      isattributetype: isattributetype,\r\n      ismethodtype: ismethodtype,\r\n      isstatetype: isstatetype,\r\n      isassociation: isassociation,\r\n      isdiagram: isdiagram,\r\n      isdiagramtype: isdiagramtype,\r\n      isrefine: isrefine,\r\n      iscomposable: iscomposable,\r\n      items: items\r\n    });\r\n  }\r\n  private eventListener = (e: any) => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoDocument: {\r\n        this.setType(md.objectid);\r\n      }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoObject: {\r\n        this.setType(md.objectid);\r\n      }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode: {\r\n        this.setType(md.objectid);\r\n      }\r\n        break;\r\n    }\r\n  }\r\n\r\n  public render(): React.ReactElement<ISemTalkToolBarProps> {\r\n    // let items: any[] = [];\r\n    let items: any[] = this.state.items;\r\n    items = this.getCommandBarItems(items);\r\n    return (\r\n      <div className={styles.semTalkToolBar}>\r\n        <CommandBar\r\n          items={items}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getCommandBarItems(items: any) {\r\n    if (this.undoItem) this.undoItem[\"disabled\"] = !this.props.semtalk.IsUndo();\r\n    if (this.redoItem) this.redoItem[\"disabled\"] = !this.props.semtalk.IsRedo();\r\n\r\n    let counter = 0;\r\n    let leftItems: any[] = [];\r\n    let subItems: any[] = [];\r\n    function pushToItem(item: any) {\r\n      if (counter <= 5) {\r\n        leftItems.push(item);\r\n      } else { subItems.push(item); }\r\n    }\r\n    for (let item of items) {\r\n      pushToItem(item);\r\n    }\r\n    // if (this.fileItem) pushToItem(this.fileItem);\r\n    // if (this.homeItem) { pushToItem(this.homeItem); counter++; }\r\n    // if (this.objItem) { pushToItem(this.objItem); counter++; }\r\n    // if (this.pageItem) { pushToItem(this.pageItem); counter++; }\r\n    // if (this.explorerItem) { pushToItem(this.explorerItem); counter++; }\r\n    // if (this.searchItem && this.props.searchVisible) { \r\n    //   pushToItem(this.searchItem); counter++; }\r\n    if (this.langItem && this.props.showlanguage) {\r\n      const langclass = this.props.semtalk.base.FindClass(SemTalkBaseConstant.SLLanguage);\r\n      let submenus: any[] = [];\r\n      // let currlangcap = this.state.language;\r\n      if (langclass) {\r\n        for (let lang of langclass.Instances()) {\r\n          submenus.push(\r\n            {\r\n              key: lang.ObjectName,\r\n              text: lang.ID2NameNspLan(Code2Language(this.props.guilanguage)),\r\n              onClick: (): void => {\r\n                this.props.callback.DoCommand(SemTalkOnlineCommand.SelectDataLang, lang.ObjectName);\r\n              },\r\n            }\r\n          );\r\n        }\r\n      }\r\n\r\n      this.langItem[\"text\"] = this.props.semtalk.base.FindInstance(this.props.language)?.ID2NameNspLan(Code2Language(this.props.guilanguage));\r\n      if (this.langItem[\"subMenuProps\"]) this.langItem[\"subMenuProps\"][\"items\"] = submenus;\r\n      // pushToItem(this.langItem);\r\n    }\r\n    let subItem = {\r\n      key: 'moreItem',\r\n      name: '',\r\n      iconProps: {\r\n        iconName: 'More'\r\n      },\r\n      arialabel: '',\r\n      subMenuProps: {\r\n        items: subItems\r\n      }\r\n    };\r\n    if (counter > 5) leftItems.push(subItem);\r\n    return leftItems;\r\n\r\n    // let isreadonly: boolean = this.props.semtalk.readonly;\r\n    // let isundo = this.props.semtalk.IsUndo();\r\n    // let isredo = this.props.semtalk.IsRedo();\r\n    // return this.updateItems(isundo, isredo, isreadonly);\r\n    // function pushToItem(item: any) {\r\n    //     items.push(item);\r\n    // }\r\n    // pushToItem(this.saveItem);\r\n    // pushToItem(this.dividerItem1);\r\n    // pushToItem(this.undoItem);\r\n    // pushToItem(this.redoItem);\r\n    // pushToItem(this.dividerItem2);\r\n    // pushToItem(this.pointerItem);\r\n    // pushToItem(this.moveItem);\r\n    // pushToItem(this.connectionpointsItem);\r\n    // pushToItem(this.styleItem);\r\n    // pushToItem(this.dividerItem3);\r\n    // pushToItem(this.zoominItem);\r\n    // pushToItem(this.zoomoutItem);\r\n    // pushToItem(this.zoomfitItem);\r\n    // pushToItem(this.zoomactualItem);\r\n    // pushToItem(this.dividerItem4);\r\n    // pushToItem(this.leftAlignItem);\r\n    // pushToItem(this.centerAlignItem);\r\n    // pushToItem(this.rightAlignItem);\r\n    // pushToItem(this.topAlignItem);\r\n    // pushToItem(this.middleAlignItem);\r\n    // pushToItem(this.bottomAlignItem);\r\n\r\n    /*pushToItem(this.dividerItem);\r\n    pushToItem(this.mxCompactTreeLayoutItem);\r\n    pushToItem(this.mxCompactTreeLayoutVItem);\r\n    pushToItem(this.mxCompactTreeLayoutVIItem);\r\n    pushToItem(this.mxCompactTreeLayoutHIItem);\r\n    pushToItem(this.mxFastOrganicLayoutItem);\r\n    pushToItem(this.mxRadialTreeLayoutItem);\r\n    pushToItem(this.mxCircleLayoutItem);*/\r\n    // return items;\r\n  }\r\n  // private saveItem: any = {};\r\n  //private imageItem: any = {};\r\n  //private printItem: any = {};\r\n  // private pointerItem: any = {};\r\n  // private moveItem: any = {};\r\n  // private undoItem: any = {};\r\n  // private redoItem: any = {};\r\n  // private styleItem: any = {};\r\n  // private connectionpointsItem: any = {};\r\n  // //private dividerItem: any = {};\r\n  // private dividerItem1: any = {};\r\n  // private dividerItem2: any = {};\r\n  // private dividerItem3: any = {};\r\n  // private dividerItem4: any = {};\r\n  // private leftAlignItem: any = {};\r\n  // private centerAlignItem: any = {};\r\n  // private rightAlignItem: any = {};\r\n  // private topAlignItem: any = {};\r\n  // private middleAlignItem: any = {};\r\n  // private bottomAlignItem: any = {};\r\n  // private zoominItem: any = {};\r\n  // private zoomoutItem: any = {};\r\n  // private zoomfitItem: any = {};\r\n  // private zoomactualItem: any = {};\r\n  //private mxCompactTreeLayoutItem: any = {};\r\n  //private mxCompactTreeLayoutVItem: any = {};\r\n  //private mxCompactTreeLayoutVIItem: any = {};\r\n  //private mxCompactTreeLayoutHIItem: any = {};\r\n  //private mxFastOrganicLayoutItem: any = {};\r\n  //private mxRadialTreeLayoutItem: any = {};\r\n  //private mxCircleLayoutItem: any = {};\r\n\r\n  //isrefine: boolean, iscomp: boolean, isexpand: boolean, isprocess: boolean, isundo: boolean, isredo: boolean, isreadonly: boolean,   ismongo: boolean, isdocument: boolean\r\n  private updateItems = (isrefine: boolean, iscomp: boolean, isexpand: boolean,\r\n    isprocess: boolean, isreadonly: boolean,\r\n    ismongo: boolean, isdocument: boolean): any[] => {\r\n\r\n    let res = this.props.callback.ParseMenu(false);\r\n    let dynitems = res[\"allitems\"];\r\n\r\n    if (dynitems[\"save\"]) { dynitems[\"save\"][\"disabled\"] = isreadonly; }\r\n    if (dynitems[\"autoSave\"]) { dynitems[\"autoSave\"][\"text\"] = this.props.semtalk.getResStr(\"STRAUTO\") + \"\" + this.props.semtalk.getResStr(\"STRSAVE\").replace(\"&\", \"\"); }\r\n    if (dynitems[\"modelProperty\"]) { dynitems[\"modelProperty\"][\"disabled\"] = !isdocument || !ismongo; }\r\n    if (dynitems[\"settings\"]) { dynitems[\"settings\"][\"disabled\"] = !ismongo; }\r\n    // if (dynitems[\"FileItem\"]) { this.fileItem = dynitems[\"FileItem\"]; }\r\n    // if (dynitems[\"HomeItem\"]) { this.homeItem = dynitems[\"HomeItem\"]; }\r\n    // if (dynitems[\"objItem\"]) { this.objItem = dynitems[\"objItem\"]; }\r\n    // if (dynitems[\"PageItem\"]) { this.pageItem = dynitems[\"PageItem\"]; }\r\n    // if (dynitems[\"explorerItem\"]) { this.explorerItem = dynitems[\"explorerItem\"]; }\r\n    // if (dynitems[\"searchItem\"]) { this.searchItem = dynitems[\"searchItem\"]; }\r\n    if (dynitems[\"langItem\"]) { this.langItem = dynitems[\"langItem\"]; }\r\n    if (dynitems[\"UndoItem\"]) {\r\n      this.undoItem = dynitems[\"UndoItem\"];\r\n      this.undoItem.disabled = true;\r\n    }\r\n    if (dynitems[\"RedoItem\"]) {\r\n      this.redoItem = dynitems[\"RedoItem\"];\r\n      this.redoItem.disabled = true;\r\n    }\r\n    if (dynitems[\"deleteShapes\"]) {\r\n      dynitems[\"deleteShapes\"][\"text\"] = this.props.semtalk.getResStrListener(\"STRDLGCMDDE\") + \" (\" + this.props.semtalk.getResStrListener(\"STRDLGLSHAPES\") + \")\";\r\n    }\r\n    if (dynitems[\"composeObject\"]) { dynitems[\"composeObject\"][\"disabled\"] = !iscomp; }\r\n    if (dynitems[\"refineObject\"]) { dynitems[\"refineObject\"][\"disabled\"] = !isrefine; }\r\n    if (dynitems[\"detachObject\"]) { dynitems[\"detachObject\"][\"disabled\"] = !isrefine; }\r\n    if (dynitems[\"expandObject\"]) { dynitems[\"expandObject\"][\"disabled\"] = !isexpand; }\r\n    if (dynitems[\"numberPage\"]) { dynitems[\"numberPage\"][\"disabled\"] = !isprocess; }\r\n    if (dynitems[\"insertPage\"]) { dynitems[\"insertPage\"][\"disabled\"] = isprocess; }\r\n    if (dynitems[\"taxonomyPage\"]) { dynitems[\"taxonomyPage\"][\"disabled\"] = isprocess; }\r\n    if (dynitems[\"mxRadialTreeLayout\"]) { dynitems[\"mxRadialTreeLayout\"][\"disabled\"] = isprocess; }\r\n    if (dynitems[\"mxCircleLayout\"]) { dynitems[\"mxCircleLayout\"][\"disabled\"] = isprocess; }\r\n\r\n    return res[\"items\"];\r\n  }\r\n}","import * as React from 'react';\r\nimport styles from './SemTalkBreadCrumbs.module.scss';\r\n\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\r\n// import { ISemTalkDiagram } from \"../application/tbase/Interface\";\r\nimport { gotoDocument, addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\n\r\nimport { Breadcrumb, IBreadcrumbItem } from 'office-ui-fabric-react/lib/Breadcrumb';\r\n// import { any } from '@microsoft/sp-webpart-base';\r\n\r\n// import { SetContext } from '../application/semtalklistener/restinterface';\r\n\r\nimport { getDiagram } from '../../application/semtalklistener/stgoto';\r\nimport { Guid } from \"guid-typescript\";\r\nimport { SemTalkType } from '../../application/tbase/Interface';\r\nimport { SemTalkObjectBaseEvent } from '../../application/tbase/Interface';\r\n\r\nexport interface ISemTalkBreadCrumbsProps {\r\n  semtalk: IVisioRDFS;\r\n  context?: any;\r\n  filename: string;\r\n  // filter: string;\r\n  // token: string;\r\n  // service: string;\r\n}\r\nexport interface ISemTalBreadCrumbsState {\r\n  objectid: number;\r\n  // object: ISemTalkDiagram | null;\r\n  items: any[];\r\n  // base: IObjectBase;\r\n}\r\nexport class SemTalkBreadCrumbs extends React.Component<ISemTalkBreadCrumbsProps, ISemTalBreadCrumbsState> {\r\n  public callback: Guid;\r\n\r\n  constructor(props: ISemTalkBreadCrumbsProps) {\r\n    super(props);\r\n    console.log(\"showBreadCrumbs\");\r\n    this.callback = Guid.create();\r\n    this.state = {\r\n      objectid: -1,\r\n      //  object: null,\r\n      items: [],\r\n      //   base: this.props.semtalk.base\r\n    };\r\n  }\r\n\r\n  private mounted: boolean = false;\r\n  public componentDidMount() {\r\n    // SetContext(this.props.context, this.props.filter, this.props.token, this.props.service);\r\n    addCallBack(this);\r\n    this.props.semtalk.base._callbacks.push(this);\r\n\r\n    this.mounted = true;\r\n    let pg: number = getDiagram();\r\n    if (pg > 0) {\r\n      this.loadDiag(pg);\r\n    }\r\n  }\r\n  public componentWillUnmount() {\r\n    removeCallBack(this);\r\n    const ind = this.props.semtalk.base._callbacks.indexOf(this);\r\n    if (ind > -1) {\r\n      this.props.semtalk.base._callbacks.splice(ind, 1);\r\n    }\r\n    this.mounted = false;\r\n  }\r\n  private loadDiag(id: number) {\r\n    const ind = this.props.semtalk.base._callbacks.indexOf(this);\r\n    if (ind < 0) {\r\n      this.props.semtalk.base._callbacks.push(this);\r\n    }\r\n    const p = this.props.semtalk.base.FindDiagramByID(id);\r\n    if (p !== null) {\r\n      let items: any[] = [];\r\n      let blist = p.BreadCrumbs();\r\n      if (blist.length > 1) {\r\n        for (const bc of p.BreadCrumbs()) {\r\n          items.unshift({ text: bc.ObjectCaption, key: bc.ID, onClick: this._onBreadcrumbItemClicked });\r\n        }\r\n        // items = items.reverse();\r\n        // if (this.props.filename.length > 0) {\r\n        //   let cap = this.props.filename.replace(\".sdx\", \"\").replace(\".stx\", \"\");\r\n        //   items.unshift({ text: cap, key: -1 });\r\n        // }\r\n      }\r\n      this.setState({\r\n        items: items,\r\n        // object: p,\r\n        objectid: id\r\n      });\r\n    } else {\r\n      this.setState({\r\n        items: [],\r\n        // object: null,\r\n        objectid: -1\r\n      });\r\n    }\r\n  }\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n  public getMessage(e: any) {\r\n    this.eventListener(e);\r\n  }\r\n\r\n  private eventListener = (e: any) => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoDocument:\r\n        this.loadDiag(md.diagid);\r\n        break;\r\n      case SemTalkNavigationEvent.gotoObject:\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode:\r\n        if (this.state.objectid !== md.diagid) {\r\n          this.loadDiag(md.diagid);\r\n        }\r\n        break;\r\n      case SemTalkObjectBaseEvent.OnCreated:\r\n        if (md.semtalktype === SemTalkType.SemTalkDiagram)\r\n          this.loadDiag(this.state.objectid);\r\n        break;\r\n      case SemTalkObjectBaseEvent.OnDeleted:\r\n        if (md.semtalktype === SemTalkType.SemTalkDiagram)\r\n          this.loadDiag(this.state.objectid);\r\n        break;\r\n      case SemTalkObjectBaseEvent.OnRenamed:\r\n        if (md.semtalktype === SemTalkType.SemTalkDiagram)\r\n          this.loadDiag(this.state.objectid);\r\n        break;\r\n    }\r\n  }\r\n\r\n  public async componentDidUpdate(prevProps: ISemTalkBreadCrumbsProps) {\r\n  }\r\n\r\n  public render(): React.ReactElement<ISemTalkBreadCrumbsProps> {\r\n    // this._selection = new Selection({\r\n    // });\r\n\r\n    return (\r\n      <div id=\"stBreadcrumbTest\" className={styles.semTalkBreadCrums}>\r\n        <Breadcrumb id=\"breadcrumbItems\"\r\n          items={this.state.items}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onBreadcrumbItemClicked = (ev: React.MouseEvent<HTMLElement>, item: IBreadcrumbItem): void => {\r\n    // console.log(`Breadcrumb item with key \"${item.key}\" has been clicked.`);\r\n    gotoDocument(parseInt(item.key));\r\n  }\r\n}\r\n","import * as React from 'react';\r\n// import styles from './SemTalkExpand.module.scss';\r\nimport {\r\n  Selection, ISelection, DetailsList, DetailsListLayoutMode, IColumn,\r\n  CheckboxVisibility, CommandBar\r\n} from 'office-ui-fabric-react';\r\n// import { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\r\n\r\n// import { VisioRDFS } from '../application/semtalklistener/visiordfs';\r\nimport {\r\n  IObjectBase, ISemTalkObject, ISemTalkAssociation,\r\n  SemTalkBaseConstant\r\n} from \"../../application/tbase/Interface\";\r\n\r\nimport { addCallBack, removeCallBack } from '../../application/semtalklistener/stglobal';\r\n// import { NavigateForward, NavigateBackward } from '../../semtalkportal/stbackforward';\r\n//import { SetContext } from '../../semtalkportal/restinterface';\r\nimport { Guid } from \"guid-typescript\";\r\n// import * as strings from 'SemTalkStrings';\r\nimport { IVisioRDFS, SemTalkNavigationEvent } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { IMongoOption, mgCallService } from \"../../SemTalkMongoServer\";\r\n\r\nexport interface ISemTalkExpandProps {\r\n  title?: string;\r\n  description?: string;\r\n  semtalk: IVisioRDFS;\r\n  // goodlist?: string[];\r\n  // badlist?: string[];\r\n  callback: (semtalk: IVisioRDFS, shape: any, obj: ISemTalkAssociation[]) => void;\r\n  simcallback?: (semtalk: IVisioRDFS, shape: any, text: string[]) => void;\r\n  semantics_service?: string;\r\n  semantics_distance?: number;\r\n  // systemclass: ISemTalkSystemClass | null;\r\n  // isclasses: boolean;\r\n  focus: number | null;\r\n  mongo?: IMongoOption;\r\n\r\n}\r\nexport interface ISemTalkExpandState {\r\n  objectid: number;\r\n  items: IExpandTab[];\r\n  simitems: ISimilarTab[];\r\n  base: IObjectBase;\r\n  // selection: ISemTalkObject | null;\r\n  // goto_context?: any;\r\n  // filter: string;\r\n  sel: ISelection;\r\n  simsel: ISelection;\r\n  // objectname: string;\r\n  // callback: (semtalk: IVisioRDFS, shape: any, obj: ISemTalkAssociation[]) => void;\r\n}\r\n\r\ninterface IExpandTab {\r\n  Object: ISemTalkObject;\r\n  Association: ISemTalkAssociation;\r\n  IsInv: boolean;\r\n  ObjectName: string;\r\n  ObjectCaption: string;\r\n}\r\ninterface ISimilarTab {\r\n  Text: string;\r\n  match: number;\r\n}\r\n\r\nexport class SemTalkExpand extends React.Component<ISemTalkExpandProps, ISemTalkExpandState> {\r\n  // private object: ISemTalkObject | null = null;\r\n  // private objecttypecaption: string = \"\";\r\n  public callback: Guid;\r\n  // private act: ClassTable;\r\n  // private res: ClassTable;\r\n  private distance: number=0.5;\r\n\r\n  constructor(props: ISemTalkExpandProps) {\r\n    super(props);\r\n    console.debug(\"showExpand\");\r\n    this.callback = Guid.create();\r\n    if (this.props.semantics_distance) {\r\n      this.distance=this.props.semantics_distance;\r\n    }\r\n    this.state = {\r\n      // filter: this.props.filter,\r\n      objectid: -1,\r\n      items: [],\r\n      simitems: [],\r\n      base: this.props.semtalk.base,\r\n      // selection: null,\r\n      //  goto_context: this.props.goto_context\r\n      sel: new Selection(),\r\n      simsel: new Selection(),\r\n      //   onSelectionChanged: () => { this.selectitem(); }\r\n      // }),\r\n      // objectname: \"\",\r\n      // callback: this.props.callback,\r\n\r\n    };\r\n  }\r\n  private resetState = () => {\r\n    this.setState({\r\n      // filter: this.props.filter,\r\n      objectid: -1,\r\n      items: [],\r\n      base: this.props.semtalk.base,\r\n      // selection: null,\r\n      // objectname: \"\",\r\n    });\r\n  }\r\n\r\n  private mounted: boolean = false;\r\n\r\n  public async componentDidMount() {\r\n    // let oid: number = getObject();\r\n    if (this.props.focus && this.props.focus > 0) {\r\n      let oid: number = this.props.focus;\r\n      this.loadObject(oid);\r\n    } else {\r\n      this.loadObject(-1);\r\n    }\r\n    this.mounted = true;\r\n    addCallBack(this);\r\n\r\n  }\r\n  public componentWillUnmount() {\r\n    // if (this.object && this.state.selection && this.props.semtalk.shape) {\r\n    //   this.props.semtalk.ChangeObject(this.props.semtalk.shape, this.state.selection);\r\n    //   }\r\n    // this.object = null;\r\n    removeCallBack(this);\r\n    this.mounted = false;\r\n  }\r\n  public handleEvent = async (m: any): Promise<void> => {\r\n    var mstr = JSON.stringify(m);\r\n    this.eventListener({ data: mstr });\r\n  }\r\n\r\n  private eventListener = (e: any): void => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n    let md: any;\r\n    try {\r\n      md = JSON.parse(e.data);\r\n      var mtype = md.type;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    switch (mtype) {\r\n      case SemTalkNavigationEvent.gotoObject:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n      case SemTalkNavigationEvent.gotoNode:\r\n        if (md.objectid !== this.state.objectid) {\r\n          this.resetState();\r\n          this.loadObject(md.objectid);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  private async loadObject(id: number) {\r\n    // let objectname = \"\";\r\n    // let sc: ISemTalkSystemClass | null = null;\r\n    // if (this.props.systemclass !== null) {\r\n    //   sc = this.props.systemclass;\r\n    // }\r\n    // if (sc === null) {\r\n    //   this.object = this.state.base.FindObjectByID(id);\r\n    //   if (this.object !== null) {\r\n    //     objectname = this.object.ObjectName;\r\n    //     if (this.state.base.IsClass(this.object)) {\r\n    //       sc = (this.object as ISemTalkClass).SystemClass();\r\n    //     } else {\r\n    //       sc = (this.object as ISemTalkInstance).ClassOf().SystemClass();\r\n    //     }\r\n    //   }\r\n    // }\r\n    let items: IExpandTab[] = [];\r\n    let qitems: ISimilarTab[] = [];\r\n    let obj = this.state.base.FindObjectByID(id);\r\n    if (obj) {\r\n\r\n      items = obj.Associations().map((s) => { \r\n        return { Association: s, IsInv: false, \r\n          Object: s, ObjectCaption: s.ObjectCaption, ObjectName: s.ObjectName }; });\r\n      items = items.sort((a, b) => \r\n        (a.Object as ISemTalkAssociation).ToObject.ObjectCaption.localeCompare((b.Object as ISemTalkAssociation).ToObject.ObjectCaption));\r\n      let invitems = obj.InvAssociations().map((s) => {\r\n        return {\r\n          Association: s, IsInv: true,\r\n          Object: s, ObjectCaption: s.ObjectCaption, ObjectName: s.ObjectName\r\n        };\r\n      });\r\n      invitems = invitems.sort((a, b) => \r\n        a.Object.FromObject.ObjectCaption.localeCompare(b.Object.FromObject.ObjectCaption));\r\n      items.push(...invitems);\r\n      let sc = obj.SystemClass();\r\n      if (sc) {\r\n        const cap = sc.ObjectName;\r\n        items = items.filter((item) => { return (item.ObjectName !== cap); });\r\n      }\r\n      if (this.props.mongo && this.props.semantics_service) {\r\n        // let s = \"http://127.0.0.1:5000/matchingintents\";\r\n        // s = \"https://qurator-embeddings.apps.osc.fokus.fraunhofer.de\";\r\n        let s = this.props.semantics_service;\r\n        let args = {\r\n          args: { \"text\": obj.ObjectCaption , \"distance\": this.distance },\r\n          service: s,\r\n          // user: \"Semtation\",\r\n          // pwd: \"mbeddings\"\r\n        };\r\n        let quterms = await mgCallService(this.props.mongo, args);\r\n        qitems = quterms.map((sl: any) => {\r\n          return { Text: sl[0], match: sl[1] };\r\n        });\r\n        console.debug(qitems);\r\n      }\r\n\r\n    }\r\n    this.setState({\r\n      objectid: id,\r\n      items: items,\r\n      simitems: qitems\r\n    });\r\n  }\r\n  private _columns: IColumn[] = [\r\n    {\r\n      key: 'Name',\r\n      name: \"Name\",\r\n      fieldName: 'Name',\r\n      minWidth: 100,\r\n      // maxWidth: 180,\r\n      isResizable: true,\r\n      isMultiline: false,\r\n      onRender: (item: IExpandTab, _index?: number, _column?: IColumn) => {\r\n        if (!item.IsInv) {\r\n          let s = item.Association.ClassOf().ObjectCaption;\r\n          s = s.replace(SemTalkBaseConstant.SLSubClassOf, this.props.semtalk.getResStrListener(\"STRDLHTMLOUTSUP\"));\r\n          return <span>{\"> \" + s}</span>;\r\n        } else {\r\n          let s = item.Association.ClassOf().ObjectCaption;\r\n          s = s.replace(SemTalkBaseConstant.SLSubClassOf, this.props.semtalk.getResStrListener(\"STRDLHTMLOUTSUB\"));\r\n          return <span>{\"< \" + s}</span>;\r\n        }\r\n      }\r\n    },\r\n    {\r\n      key: 'Value',\r\n      name: \"Value\",\r\n      fieldName: 'Value',\r\n      minWidth: 100,\r\n      // maxWidth: 180,\r\n      isResizable: true,\r\n      isMultiline: false,\r\n      onRender: (item: IExpandTab, _index?: number, _column?: IColumn) => {\r\n        if (item.IsInv) {\r\n          return <span>{item.Association.FromObject.ObjectCaption}</span>;\r\n        } else {\r\n          return <span>{item.Association.ToObject.ObjectCaption}</span>;\r\n        }\r\n      }\r\n    }\r\n  ];\r\n  private _simcolumns: IColumn[] = [\r\n    {\r\n      key: 'Name',\r\n      name: \"Name\",\r\n      fieldName: 'Name',\r\n      minWidth: 100,\r\n      // maxWidth: 180,\r\n      isResizable: true,\r\n      isMultiline: false,\r\n      onRender: (item: ISimilarTab, _index?: number, _column?: IColumn) => {\r\n        return <span>{item[\"Text\"] + \" (\" + Number(item[\"match\"]).toPrecision(2) + \")\"}</span>;\r\n      }\r\n    }\r\n  ];\r\n  // private selectitem = (): void => {\r\n  //   let sel = this.state.sel.getSelection();\r\n  //   if (sel.length > 0) {\r\n  //     let item = this.state.sel.getSelection()[0] as IExpandTab;\r\n  //     if (item !== null) {\r\n  //       this.setState({ selection: item.Object, objectname: item.ObjectCaption });\r\n  //     }\r\n  //   }\r\n  // }\r\n  private additem = (): void => {\r\n    if (this.state.sel !== null) {\r\n      let res: ISemTalkAssociation[] = [];\r\n      for (let a of this.state.sel.getSelection()) {\r\n        let aa: any = a;\r\n        res.push(aa.Association as ISemTalkAssociation);\r\n      }\r\n      const cb = this.props.callback;\r\n      const shp = this.props.semtalk.currentShape();\r\n      if (shp)\r\n        cb(this.props.semtalk, shp, res);\r\n    }\r\n    if (this.state.simsel !== null) {\r\n      let res: string[] = [];\r\n      for (let a of this.state.simsel.getSelection()) {\r\n        let aa: any = a;\r\n        res.push(aa.Text);\r\n      }\r\n      const cb = this.props.simcallback;\r\n      const shp = this.props.semtalk.currentShape();\r\n      if (shp && cb)\r\n        cb(this.props.semtalk, shp, res);\r\n    }\r\n  }\r\n  private _onItemInvoked = (item: IExpandTab): void => {\r\n    if (item.Association !== null) {\r\n      let res: ISemTalkAssociation[] = [item.Association];\r\n      const shp = this.props.semtalk.currentShape();\r\n      if (shp)\r\n        this.props.callback(this.props.semtalk, shp, res);\r\n    }\r\n    // this.selectitem();\r\n  }\r\n  private _onSimItemInvoked = (item: ISimilarTab): void => {\r\n    let res: string[] = [item.Text];\r\n    const shp = this.props.semtalk.currentShape();\r\n    if (shp && this.props.simcallback) {\r\n      this.props.simcallback(this.props.semtalk, shp, res);\r\n    }\r\n    // this.selectitem();\r\n  }\r\n  private commands: any[] = [];\r\n  private saveItem = {\r\n    key: 'Save',\r\n    name: this.props.semtalk.getResStr(\"STRCMDOK\"),\r\n    //  cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n    iconProps: {\r\n      iconName: 'Save'\r\n    },\r\n    onClick: (): void => {\r\n      this.additem();\r\n    }\r\n  };\r\n\r\n\r\n  public render(): React.ReactElement<ISemTalkExpandProps> {\r\n    let selmode = SelectionMode.multiple;\r\n    let vismode = CheckboxVisibility.always;\r\n    this.commands = [];\r\n    this.commands.push(this.saveItem);\r\n\r\n    let r: React.ReactElement<ISemTalkExpandProps>;\r\n    // let lbl = \"\";\r\n    // this.props.semtalk.getResStrListener(\"STRNAME\");\r\n    r = <Fabric>\r\n      <div id=\"stExpandTest\">\r\n        <CommandBar id=\"stButtons\"\r\n          items={this.commands}\r\n        ></CommandBar>\r\n        <div id=\"assoList\">\r\n          {this.state.items.length > 0 &&\r\n            <DetailsList\r\n              items={this.state.items}\r\n              compact={false}\r\n              columns={this._columns}\r\n              selectionMode={selmode}\r\n              layoutMode={DetailsListLayoutMode.justified}\r\n              selection={this.state.sel}\r\n              onItemInvoked={this._onItemInvoked}\r\n              checkboxVisibility={vismode}\r\n              isHeaderVisible={true}\r\n            />\r\n          }\r\n        </div>\r\n        <div id=\"similarList\">\r\n          {this.state.simitems.length > 0 &&\r\n            <DetailsList\r\n              items={this.state.simitems}\r\n              compact={false}\r\n              columns={this._simcolumns}\r\n              selectionMode={selmode}\r\n              layoutMode={DetailsListLayoutMode.justified}\r\n              selection={this.state.simsel}\r\n              onItemInvoked={this._onSimItemInvoked}\r\n              checkboxVisibility={vismode}\r\n              isHeaderVisible={true}\r\n            />\r\n          }\r\n        </div>\r\n      </div>\r\n    </Fabric>;\r\n    // console.debug(\"r: \", r.toString(), r);\r\n    return r;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { VisioRDFS } from '../../application/semtalklistener/visiordfs';\r\n// import { IMongoOption } from '../../SemTalkMongoServer';\r\nimport {\r\n  // ISemTalkDiagram,\r\n  ISemTalkObject,\r\n  // SemTalkType,\r\n  // ISemTalkAttribute,\r\n  // ISemTalkAttributeType,\r\n  // SemTalkValueType,\r\n  // ISemTalkMethodType\r\n  // ISemTalkAssociationType\r\n} from '../../application/tbase/Interface';\r\nimport { BPMN_AttributeTypeName, BPMN_EventIntermediateType, BPMN_GatewayTypeName, BPMN_SubprocessOrdering, BPMN_TaskTypeName, BPMN_TriggerTypeName } from '../../application/semtalklistener/subtask/bpmn/bpmninterface';\r\n//import { BPMN_AttributeTypeName, BPMN_GatewayTypeName, BPMN_TaskTypeName, BPMN_TriggerTypeName } from '../../application/semtalklistener/bpmninterface';\r\nimport { SemTalkCookie } from \"../../ISemTalkOnline\";\r\n\r\nexport interface ISemTalkBPMNExportProps {\r\n  title?: string;\r\n  // mongo: IMongoOption;\r\n  semtalk: IVisioRDFS;\r\n  // graphClient?: any;\r\n  // context?: any;\r\n  // library: string;\r\n  // templates: string;\r\n}\r\n\r\nexport interface ISemTalkBPMNExportState {\r\n}\r\n\r\nexport class SemTalkBPMNExport extends React.Component<ISemTalkBPMNExportProps, ISemTalkBPMNExportState> {\r\n  private res: IVisioRDFS = new VisioRDFS(null, null);\r\n  constructor(props: ISemTalkBPMNExportProps) {\r\n    super(props);\r\n    if (this.props.semtalk) {\r\n      this.res = this.props.semtalk;\r\n    } else {\r\n      this.res = new VisioRDFS(null, null);\r\n    }\r\n    let gl = (window as any).localStorage.getItem(SemTalkCookie.guilanguage);\r\n    if (!gl) gl = \"de\";\r\n    this.res.init(null, gl);\r\n  }\r\n\r\n  public componentDidMount() {\r\n  }\r\n  public componentWillUnmount() {\r\n  }\r\n\r\n  private bpmn: string = \"bpmn:\";\r\n  private xmlns: string = \"xmlns:\";\r\n  private bpmndi: string = \"bpmndi:\";\r\n  private dc: string = \"dc:\";\r\n    \r\n  public ExportBPMN = () => {\r\n    let vr = this.props.semtalk;\r\n    let tb:any =  this.props.semtalk.base;\r\n    let xd = document.implementation.createDocument(\"\", \"\", null);\r\n    var bpmndefinitions = xd.createElement(this.bpmn + \"definitions\");\r\n    bpmndefinitions.setAttribute(\"targetNamespace\", \"http://bpmn.io/schema/bpmn\");\r\n    bpmndefinitions.setAttribute(this.xmlns + \"bpmn\", \"http://www.omg.org/spec/BPMN/20100524/MODEL\");\r\n    bpmndefinitions.setAttribute(this.xmlns + \"bpmndi\", \"http://www.omg.org/spec/BPMN/20100524/DI\");\r\n    bpmndefinitions.setAttribute(this.xmlns + \"di\", \"http://www.omg.org/spec/DD/20100524/DI\");\r\n    bpmndefinitions.setAttribute(this.xmlns + \"dc\", \"http://www.omg.org/spec/DD/20100524/DC\");\r\n    bpmndefinitions.setAttribute(this.xmlns + \"modeler\", \"http://semtalk.com\");\r\n    bpmndefinitions.setAttribute(\"id\", \"Definition_st00001\");\r\n    bpmndefinitions.setAttribute(\"exporter\", \"SemTalkOnline\");\r\n    bpmndefinitions.setAttribute(\"exporterVersion\", \"1.0\");\r\n    bpmndefinitions.setAttribute(\"modeler:executionPlatform\", \"SemTalkOnline\");\r\n    bpmndefinitions.setAttribute(\"modeler:executionPlatformVersion\", \"1.0\");\r\n    bpmndefinitions.setAttribute(this.xmlns + \"semtalkns\", \"http://www.semtalk.com/bpmn20\");\r\n    bpmndefinitions.setAttribute(this.xmlns + \"xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\r\n    bpmndefinitions.setAttribute(this.xmlns + \"bioc\", \"http://bpmn.io/schema/bpmn/biocolor/1.0\");\r\n    xd.appendChild(bpmndefinitions);\r\n\r\n    for (let d of tb.FindDiagramType(tb.GetModelAttribute(\"SLProc\")).AllInstances()) {\r\n        if ((d.length === 0)) {\r\n            // TODO: Continue For... Warning!!! not translated\r\n        }\r\n        let collab = xd.createElement(this.bpmn + \"collaboration\");\r\n        collab.setAttribute(\"id\", (\"C_\" + this.MakeUnixValue(d.ID2Name)));\r\n        //collab.appendChild(AddExtensions(d, collab, this.model, this.semtalkns));\r\n        bpmndefinitions.appendChild(collab);\r\n        let diag = xd.createElement(this.bpmndi + \"BPMNDiagram\");\r\n        \r\n        diag.setAttribute(\"name\", d.ID2Name);\r\n        diag.setAttribute(\"id\", this.MakeUnixValue(d.ID2Name) + d.ID);\r\n        bpmndefinitions.appendChild(diag);\r\n        let rtln = xd.createElement(this.bpmndi + \"BPMNPlane\");\r\n        rtln.setAttribute(\"id\", \"BPMNPlane_1\");\r\n        rtln.setAttribute(\"bpmnElement\", (\"C_\" + this.MakeUnixValue(d.ID2Name)));\r\n        diag.appendChild(rtln);\r\n        let vispg = Object.values(vr.tseditor.getAllCells());\r\n\r\n        // let semdiag: ISemTalkDiagram = tb.FindDiagram(vispg.Name);\r\n        // let fndinstlist: any = [];\r\n        // let bu: ISemTalkClass = tb.FindClass(tb.GetModelAttribute(\"SLBuffer\"));\r\n        // let da: ISemTalkClass = tb.FindClass(tb.GetModelAttribute(\"SLDataObject\"));\r\n        let s: any;\r\n        for (s of vispg) \r\n        {\r\n          if (s.shapeKey !== undefined)\r\n          {\r\n            if (s.shapeKey === \"swimlane\")  \r\n            {\r\n              let iid: string = s.objectid;\r\n              let sl: ISemTalkObject = tb.FindObjectByID(iid);\r\n              if (sl !== null)\r\n              { \r\n                let pobj = xd.createElement(this.bpmn + \"participant\");  \r\n                let ishoriz: string = \"true\";\r\n                let pid: string = \"\";\r\n                pobj.setAttribute(\"id\", this.MakeUnixValue(sl.ID2Name));\r\n                pobj.setAttribute(\"name\", String(s.value));\r\n                pid = (\"P_\" + this.MakeUnixValue(sl.ID2Name));\r\n                pobj.setAttribute(\"processRef\", pid);\r\n                collab.appendChild(pobj);\r\n                let pg = xd.createElement(this.bpmn + \"process\");\r\n                pg.setAttribute(\"isExecutable\", \"true\");\r\n                pg.setAttribute(\"id\", pid);\r\n                bpmndefinitions.appendChild(pg);\r\n                let slnd: any = this.MakeNode(sl.ID2Name, s, d.Name, xd);\r\n                slnd.setAttribute(\"isHorizontal\", ishoriz);\r\n                slnd.setAttribute(\"isExpanded\", \"true\");\r\n                rtln.appendChild(slnd);\r\n                for (let slcont of s.children){\r\n                  let curObj = this.ExportSLContent(slcont, xd);\r\n                  if (curObj !== undefined) {\r\n                    pg.appendChild(curObj);\r\n                    rtln.appendChild(this.MakeNode(this.MakeUnixValue(slcont.mxObjectId), slcont, d.Name, xd, s.geometry.y));\r\n                    let curSTObj: ISemTalkObject | null = this.props.semtalk.base.FindObjectByID(slcont.objectid);\r\n                    if (slcont.shapeKey !== undefined && curSTObj !== null){\r\n                      for (let curAsso of curSTObj.Associations()){\r\n                        if (curAsso.ClassOf().ID2Name === \"Sequence Flow\")\r\n                        {\r\n                          let curRel: any = xd.createElement(this.bpmn + \"sequenceFlow\");\r\n                          let fromMXObj: any;\r\n                          for (let fromObj of curAsso.FromObject.Nodes())\r\n                          {\r\n                            fromMXObj = this.props.semtalk.FindShapeByShapeID(fromObj.ShapeID);\r\n                          }\r\n                          let toMXObj: any;\r\n                          for (let toObj of curAsso.ToObject.Nodes())\r\n                          {\r\n                            toMXObj = this.props.semtalk.FindShapeByShapeID(toObj.ShapeID);\r\n                          }\r\n                          curRel.setAttribute(\"id\", this.MakeUnixValue(curAsso.ID2Name));\r\n                          curRel.setAttribute(\"sourceRef\", this.MakeUnixValue(fromMXObj.mxObjectId));\r\n                          curRel.setAttribute(\"targetRef\", this.MakeUnixValue(toMXObj.mxObjectId));\r\n                          pg.appendChild(curRel);\r\n                          let curORel: any = xd.createElement(this.bpmn + \"outgoing\");\r\n                          curORel.innerHTML = this.MakeUnixValue(curAsso.ID2Name);\r\n                          curObj.appendChild(curORel);\r\n                          let curEdge: any = xd.createElement(this.bpmndi + \"BPMNEdge\");\r\n                          curEdge.setAttribute(\"id\", this.MakeUnixValue(curAsso.ID2Name) + \"_Edge\");\r\n                          curEdge.setAttribute(\"bpmnElement\", this.MakeUnixValue(curAsso.ID2Name));\r\n                          rtln.appendChild(curEdge);\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }   \r\n          }  \r\n        }\r\n      }\r\n      let filename: string = \"SemTalkBPMN.bpmn\";\r\n      let blob: string = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n      blob = blob + xd.documentElement.outerHTML;\r\n      const url = window.URL.createObjectURL(new Blob([blob]),);\r\n      const link: any = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', filename,);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.parentNode.removeChild(link);\r\n  }\r\n\r\n  private getTriggerDefinitionOfEvents = (shp: any, curObj: any, xd: any): any => {\r\n    let xmlobj: any = null; \r\n    switch (curObj.GetValue(BPMN_AttributeTypeName.TriggerType))\r\n    {\r\n      // case BPMN_TriggerTypeName.Cancel: \r\n      //   xmlobj = xd.createElement(this.bpmn + \"sendTask\"); \r\n      //   break;\r\n      case BPMN_TriggerTypeName.Compensation: \r\n        xmlobj = xd.createElement(this.bpmn + \"compensateEventDefinition\"); \r\n        break;\r\n      case BPMN_TriggerTypeName.Error: \r\n        xmlobj = xd.createElement(this.bpmn + \"errorEventDefinition\"); \r\n        break;\r\n      case BPMN_TriggerTypeName.Escalation:\r\n        xmlobj = xd.createElement(this.bpmn + \"escalationEventDefinition\"); \r\n        break;\r\n      case BPMN_TriggerTypeName.Link: \r\n        xmlobj = xd.createElement(this.bpmn + \"linkEventDefinition\"); \r\n        break;\r\n      case BPMN_TriggerTypeName.Message: \r\n        xmlobj = xd.createElement(this.bpmn + \"messageEventDefinition\"); \r\n        break;\r\n      // case BPMN_TriggerTypeName.Multiple: \r\n      //   xmlobj = xd.createElement(this.bpmn + \"sendTask\"); \r\n      //   break;\r\n      case BPMN_TriggerTypeName.None:   \r\n        break;\r\n      // case BPMN_TriggerTypeName.ParallelMultiple:   \r\n      //   xmlobj = xd.createElement(this.bpmn + \"sendTask\"); \r\n      //   break;\r\n       case BPMN_TriggerTypeName.Rule:   \r\n         xmlobj = xd.createElement(this.bpmn + \"conditionalEventDefinition\"); \r\n         let tmpCondition = xd.createElement(this.bpmn + \"condition\");\r\n         tmpCondition.setAttribute(\"xsi:type\", \"bpmn:tFormalExpression\");\r\n         xmlobj.appendChild(tmpCondition);\r\n         break;\r\n      case BPMN_TriggerTypeName.Signal:   \r\n        xmlobj = xd.createElement(this.bpmn + \"signalEventDefinition\"); \r\n        break;\r\n      case BPMN_TriggerTypeName.Terminate:   \r\n        xmlobj = xd.createElement(this.bpmn + \"terminateEventDefinition\"); \r\n        break;\r\n      case BPMN_TriggerTypeName.Timer:   \r\n        xmlobj = xd.createElement(this.bpmn + \"timerEventDefinition\"); \r\n        break;\r\n      default: \r\n        break;\r\n    }\r\n    if (xmlobj !== null){\r\n      xmlobj.setAttribute(\"id\", \"TriggerTypeID_\" + this.MakeUnixValue(shp.mxObjectId) );\r\n    }\r\n    return xmlobj;\r\n  }\r\n\r\n  private ExportSLContent = (shp: any, xd: any): any => {\r\n    if (shp.shapeKey !== undefined){\r\n      let curObj: ISemTalkObject | null = this.props.semtalk.base.FindObjectByID(shp.objectid);\r\n      if (curObj === null || curObj === undefined) {return undefined;}\r\n      let xmlobj: any; \r\n      switch (String(shp.shapeKey).toLocaleLowerCase())\r\n      {\r\n        case \"task\":\r\n          switch (curObj.GetValue(BPMN_AttributeTypeName.TaskType))\r\n          {\r\n          case BPMN_TaskTypeName.Send:\r\n            xmlobj = xd.createElement(this.bpmn + \"sendTask\"); \r\n            break;\r\n          case BPMN_TaskTypeName.User:\r\n            xmlobj = xd.createElement(this.bpmn + \"userTask\"); \r\n            break;\r\n          case BPMN_TaskTypeName.Manual:\r\n            xmlobj = xd.createElement(this.bpmn + \"manualTask\"); \r\n            break;\r\n          case BPMN_TaskTypeName.BusinessRule:\r\n            xmlobj = xd.createElement(this.bpmn + \"businessRuleTask\"); \r\n            break;\r\n          case BPMN_TaskTypeName.Service:\r\n            xmlobj = xd.createElement(this.bpmn + \"serviceTask\"); \r\n            break;\r\n          case BPMN_TaskTypeName.Script:\r\n            xmlobj = xd.createElement(this.bpmn + \"scriptTask\"); \r\n            break;\r\n          case BPMN_TaskTypeName.Receive:\r\n            xmlobj = xd.createElement(this.bpmn + \"receiveTask\"); \r\n            break;\r\n          default:\r\n            if (curObj.GetValue(BPMN_AttributeTypeName.adhoc) !== undefined){\r\n              if (curObj.GetValue(BPMN_AttributeTypeName.adhoc) === \"true\")\r\n              {\r\n                xmlobj = xd.createElement(this.bpmn + \"adHocSubProcess\");\r\n              }\r\n              else\r\n              {\r\n                xmlobj = xd.createElement(this.bpmn + \"task\");\r\n              }\r\n            }\r\n            else {\r\n              if (curObj.Refinement === null || curObj.Refinement === undefined)\r\n              {\r\n                xmlobj = xd.createElement(this.bpmn + \"task\");\r\n              }\r\n              else{\r\n                xmlobj = xd.createElement(this.bpmn + \"subProcess\");\r\n              }\r\n            }\r\n          }\r\n          if (curObj.GetValue(BPMN_AttributeTypeName.SubProcessOrdering) === BPMN_SubprocessOrdering.Loop) {\r\n            let tmpAttri = xd.createElement(this.bpmn + \"standardLoopCharacteristics\");\r\n            xmlobj.appendChild(tmpAttri);\r\n          } else if (curObj.GetValue(BPMN_AttributeTypeName.SubProcessOrdering) === BPMN_SubprocessOrdering.Parallel) {\r\n            let tmpAttri = xd.createElement(this.bpmn + \"multiInstanceLoopCharacteristics\");\r\n            xmlobj.appendChild(tmpAttri);\r\n          }\r\n          else if (curObj.GetValue(BPMN_AttributeTypeName.SubProcessOrdering) === BPMN_SubprocessOrdering.Sequential) {\r\n            let tmpAttri = xd.createElement(this.bpmn + \"multiInstanceLoopCharacteristics\");\r\n            tmpAttri.setAttribute(\"isSequential\", \"true\");\r\n            xmlobj.appendChild(tmpAttri);  \r\n          }\r\n\r\n          break;\r\n        case \"event\":\r\n          if (String(shp.shapeName).toLocaleLowerCase() === \"start event\")\r\n          {\r\n            xmlobj = xd.createElement(this.bpmn + \"startEvent\");\r\n            let evtTrigger: any = this.getTriggerDefinitionOfEvents(shp, curObj, xd);\r\n            if (evtTrigger !== null) {\r\n              xmlobj.appendChild(evtTrigger);\r\n            }\r\n          }\r\n          else if (String(shp.shapeName).toLocaleLowerCase() === \"end event\") \r\n          {\r\n            xmlobj = xd.createElement(this.bpmn + \"endEvent\");\r\n            let evtTrigger: any = this.getTriggerDefinitionOfEvents(shp, curObj, xd);\r\n            if (evtTrigger !== null) {\r\n              xmlobj.appendChild(evtTrigger);\r\n            }\r\n          }\r\n          else\r\n          {\r\n            if (curObj.GetValue(BPMN_AttributeTypeName.IntermediateType) === BPMN_EventIntermediateType.Catch){\r\n              xmlobj = xd.createElement(this.bpmn + \"intermediateCatchEvent\");\r\n            }\r\n            else {\r\n              xmlobj = xd.createElement(this.bpmn + \"intermediateThrowEvent\");\r\n            }\r\n            let evtTrigger: any = this.getTriggerDefinitionOfEvents(shp, curObj, xd);\r\n            if (evtTrigger !== null) {\r\n              xmlobj.appendChild(evtTrigger);\r\n            }\r\n          }\r\n          break;\r\n        case \"gateway\":\r\n          switch (curObj.GetValue(BPMN_AttributeTypeName.GatewayType))\r\n          {\r\n            case BPMN_GatewayTypeName.Complex:\r\n              xmlobj = xd.createElement(this.bpmn + \"complexGateway\");\r\n              break;\r\n            case BPMN_GatewayTypeName.ExclusiveEvent:\r\n            case BPMN_GatewayTypeName.ExclusiveEventIns:\r\n              xmlobj = xd.createElement(this.bpmn + \"eventBasedGateway\");\r\n              break;\r\n            case BPMN_GatewayTypeName.Inclusive:\r\n              xmlobj = xd.createElement(this.bpmn + \"inclusiveGateway\");\r\n              break;\r\n            case BPMN_GatewayTypeName.Parallel:\r\n            case BPMN_GatewayTypeName.ParallelEventIns:\r\n              xmlobj = xd.createElement(this.bpmn + \"parallelGateway\");\r\n              break;\r\n            case BPMN_GatewayTypeName.XOR:\r\n            case BPMN_GatewayTypeName.XORwM:\r\n              xmlobj = xd.createElement(this.bpmn + \"exclusiveGateway\");\r\n              break;\r\n            default:\r\n              xmlobj = xd.createElement(this.bpmn + \"exclusiveGateway\");\r\n              break;\r\n          }\r\n          break;\r\n        default:\r\n          return undefined;\r\n      }\r\n      if (xmlobj !== undefined || xmlobj !== null)\r\n      {\r\n        xmlobj.setAttribute(\"id\", this.MakeUnixValue(shp.mxObjectId));\r\n        xmlobj.setAttribute(\"name\", shp.value);  \r\n      }\r\n      return xmlobj;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public render(): React.ReactElement<ISemTalkBPMNExportProps> {\r\n    let r: React.ReactElement<ISemTalkBPMNExportProps>;\r\n    r = <Fabric>\r\n      { <><div>\r\n          <button onClick={this.ExportBPMN}>Download</button>\r\n        </div>\r\n        </> }\r\n    </Fabric >;\r\n    return r;\r\n  }\r\n\r\n  public MakeUnixValue = (x: string): string => {\r\n    if (x === undefined)\r\n    {\r\n      return \"\";\r\n    }\r\n    let i: number;\r\n    let szRet: string = \"\";\r\n    let szVal: string;\r\n    let ch: string;\r\n    szVal = x;\r\n    for (i = 1; (i <= szVal.length); i++) {\r\n        ch = szVal.substr((i - 1), 1);\r\n        switch (ch){\r\n        case \" \":\r\n          szRet += \"_\";\r\n          break;\r\n        case \"ä\" :\r\n            szRet += \"ae\";\r\n            break;\r\n        case \"Ä\" :\r\n            szRet += \"Ae\";\r\n            break;\r\n        case \"ü\" :\r\n            szRet += \"ue\";\r\n            break;\r\n        case \"Ü\" :\r\n            szRet += \"Ue\";\r\n            break;\r\n        case \"ö\" :\r\n            szRet += \"oe\";\r\n            break;\r\n        case '\"\"':\r\n            szRet += \"_\";\r\n            break;\r\n        case \"Ö\" :\r\n            szRet += \"Oe\";\r\n            break;\r\n        case \".\" :\r\n            szRet += \"_\";\r\n            break;\r\n        case \",\" :\r\n            szRet += \"_\";\r\n            break;\r\n        case \";\" :\r\n            szRet += \"_\";\r\n            break;\r\n        case \"(\" :\r\n            szRet += \"_\";\r\n            break;\r\n        case \")\" :\r\n            szRet += \"_\";\r\n            break;\r\n        case \"-\" :\r\n            szRet += \"_\";\r\n            break;\r\n        case \"/\" :\r\n            szRet += \"_\";\r\n            break;\r\n        case \":\" :\r\n            szRet += \"_\";\r\n            break;\r\n        case \"+\" :\r\n            szRet += \"_\";\r\n            break;\r\n        case \"*\" :\r\n            szRet += \"_\";\r\n            break;\r\n        case \"|\" :\r\n            szRet += \"_\";\r\n            break;\r\n        case \"<\" :\r\n            szRet += \"_\";\r\n            break;\r\n        case \">\" :\r\n            szRet += \"_\";\r\n            break;\r\n        case \"?\" :\r\n            szRet += \"_\";\r\n            break;\r\n        case \"#\" :\r\n            szRet += \"_\";\r\n            break;\r\n        case \"ß\" :\r\n            szRet += \"ss\";\r\n            break;\r\n        case \"§\" :\r\n            szRet += \"ss\";\r\n            break;\r\n        default:\r\n            szRet += ch;\r\n            break;\r\n        }\r\n    }\r\n    return szRet;\r\n}\r\n\r\nprivate MakeNode = (objID: any, shp: any, _pname: string, xd: any, slPos: number = 0 ) => {\r\n  if (!(shp == null)) {\r\n    let w: number = shp.geometry.width;\r\n    let h: number = shp.geometry.height;\r\n    let pinx: number = shp.geometry.x;\r\n    let piny: number = slPos + shp.geometry.y;\r\n    let nd = xd.createElement(this.bpmndi + \"BPMNShape\");\r\n    nd.setAttribute(\"bpmnElement\", this.MakeUnixValue(objID));\r\n    nd.setAttribute(\"id\", (this.MakeUnixValue(objID) + (\"_\" + shp.value)));\r\n    let b = xd.createElement(this.dc + \"Bounds\");\r\n    b.setAttribute(\"height\", h);\r\n    b.setAttribute(\"width\", w);\r\n    b.setAttribute(\"x\", pinx);\r\n    b.setAttribute(\"y\", piny);\r\n    nd.appendChild(b);\r\n    return nd;\r\n  }\r\n  return null;\r\n}\r\n}","import * as React from 'react';\r\nimport { Process_ElementName} from '../../application/semtalklistener/processInterface';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { VisioRDFS } from '../../application/semtalklistener/visiordfs';\r\n// import { IMongoOption } from '../../SemTalkMongoServer';\r\nimport { ISemTalkObject } from '../../application/tbase/Interface';\r\nimport { BPMN_AttributeTypeName, BPMN_EventIntermediateType, BPMN_EventTypeName, BPMN_GatewayTypeName, BPMN_SubprocessOrdering, BPMN_TaskTypeName, BPMN_TriggerTypeName } from '../../application/semtalklistener/subtask/bpmn/bpmninterface';\r\nimport * as xpath from 'xpath-ts';\r\nimport { SemTalkCookie } from \"../../ISemTalkOnline\";\r\n\r\nexport interface ISemTalkBPMNImportProps {\r\n  // title?: string;\r\n  // mongo: IMongoOption;\r\n  semtalk: IVisioRDFS;\r\n  // graphClient?: any;\r\n  // context?: any;\r\n  // library: string;\r\n  // templates: string;\r\n}\r\n\r\nexport interface ISemTalkBPMNImportState {\r\n}\r\n\r\nexport class SemTalkBPMNImport extends React.Component<ISemTalkBPMNImportProps, ISemTalkBPMNImportState> {\r\n  private res: IVisioRDFS = new VisioRDFS(null, null);\r\n  constructor(props: ISemTalkBPMNImportProps) {\r\n    super(props);\r\n\r\n    let gl = (window as any).localStorage.getItem(SemTalkCookie.guilanguage);\r\n    if (!gl) gl = \"de\";\r\n    this.res.init(null, gl);\r\n  }\r\n\r\n  public componentDidMount() {\r\n  }\r\n  public componentWillUnmount() {\r\n  }\r\n\r\n  private file: File;\r\n  public incomingfileAuto = (event: any) =>\r\n  {\r\n    this.file= event.target.files[0];\r\n    this.UploadBPMN();\r\n  }\r\n\r\n  private UploadBPMN = () => {\r\n    let fileReader = new FileReader();\r\n    fileReader.onload = (_e) => {\r\n      let curFileString: string = String(fileReader.result);\r\n      const domparser = new DOMParser();\r\n      let BPMNXML = domparser.parseFromString(curFileString, 'text/xml');\r\n      let processObjs: any = xpath.select(\"//bpmn:process\", BPMNXML); \r\n      let SLObjWithElements: any[] = [];\r\n      let allElements: any[] = [];\r\n      let Participants: any = [];\r\n      for (let processObj of processObjs)\r\n      {\r\n        console.log(processObj.id);\r\n        let tmpPart: any = xpath.select(\"//bpmn:lane\", processObj);\r\n        if (tmpPart.length !== 0)\r\n        {\r\n          for (let lane of tmpPart){\r\n            let Participant: any = {};\r\n            Participant['id'] = lane.attributes[\"id\"].nodeValue;\r\n            Participant['name'] = lane.attributes[\"name\"].nodeValue;\r\n            Participant['items'] = this.findChildrenOfLane(lane.children, processObj);\r\n            let tmpPosObj: any = this.getBPMNPosition(lane.attributes[\"id\"].nodeValue, BPMNXML);\r\n            Participant['y'] = tmpPosObj['y'];\r\n            Participant['x'] = tmpPosObj['x'];\r\n            Participant['w'] = tmpPosObj['w'];\r\n            Participant['h'] = tmpPosObj['h'];\r\n            Participants.push(Participant);\r\n          }\r\n        } else \r\n        {\r\n          tmpPart = xpath.select(\"//bpmn:participant\", BPMNXML);\r\n          if (tmpPart.length !== 0)\r\n          {\r\n            for (let part of tmpPart){\r\n              //Participants = xpath.select(\"//bpmn:participant\", BPMNXML);\r\n              if (part.attributes[\"processRef\"].nodeValue === processObj.id){\r\n                let Participant: any = {};\r\n                Participant['id'] = part.attributes[\"id\"].nodeValue;\r\n                Participant['name'] = part.attributes[\"name\"].nodeValue;\r\n                Participant['items'] = processObj.children;\r\n                let tmpPosObj: any = this.getBPMNPosition(part.attributes[\"id\"].nodeValue, BPMNXML);\r\n                Participant['y'] = tmpPosObj['y'];\r\n                Participant['x'] = tmpPosObj['x'];\r\n                Participant['w'] = tmpPosObj['w'];\r\n                Participant['h'] = tmpPosObj['h'];\r\n                Participants.push(Participant);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n        // let Participants = this.getLanesinProcess(processObj, xpath.select(\"//bpmn:participant\", BPMNXML));\r\n        // if (Participants.length === 0)\r\n        // {\r\n        //   Participants = this.getOnlyLanesinProcess(xpath.select(\"//bpmn:participant\", BPMNXML), xpath.convertedJson.elements[0].elements[1], BPMNXMLParser.convertedJson.elements[0].elements[2].elements[0]);\r\n        // }\r\n      let sortArray: number[] = [];\r\n      for (let curParticipant of Participants){\r\n        sortArray.push(Number(curParticipant.y));\r\n      }\r\n      let newSortArray: Number[] = this.SortNumberArray(sortArray);\r\n      let SortedSwimlane: any[] = [];\r\n      for (let i of newSortArray) {\r\n        for (let curParticipant of Participants){\r\n          if (i === Number(curParticipant.y))\r\n          {\r\n            SortedSwimlane.push(curParticipant);\r\n          }\r\n        }\r\n      }\r\n      for (let curParticipant of SortedSwimlane){\r\n        let SLObjWithElement: any = {};\r\n        let elements = this.getElementsofLane(curParticipant, BPMNXML);\r\n        SLObjWithElement[\"SLName\"] = curParticipant.name;\r\n        SLObjWithElement[\"id\"] = curParticipant.id;\r\n        SLObjWithElement[\"x\"] = curParticipant.x;\r\n        SLObjWithElement[\"y\"] = curParticipant.y;\r\n        SLObjWithElement[\"w\"] = curParticipant.w;\r\n        SLObjWithElement[\"h\"] = curParticipant.h;\r\n        SLObjWithElement[\"SLElements\"] = elements;\r\n        SLObjWithElements.push(SLObjWithElement);\r\n      }\r\n\r\n      if (this.props.semtalk.page && this.props.semtalk.page.ClassOf().ObjectName === this.props.semtalk.base.GetModelAttribute(\"SLProc\")) {\r\n        let parent = this.props.semtalk.tseditor.graph.getDefaultParent();\r\n        let swshape: any;\r\n        let sm = this.props.semtalk.GetShapeStyle(\"swimlane\", \"general\");\r\n        let tm = this.props.semtalk.GetShapeStyle(\"Task\", \"general\");\r\n        let enm = this.props.semtalk.GetShapeStyle(\"Circle\", \"general\");\r\n        let eim = this.props.semtalk.GetShapeStyle(\"Circle\", \"general\");\r\n        let exm = this.props.semtalk.GetShapeStyle(\"Circle\", \"general\");\r\n        let dm = this.props.semtalk.GetShapeStyle(\"Gateway\", \"general\");\r\n        let SLACTIVITY = this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLActivity);\r\n        let SLENTRYPOINT = this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLEvent);\r\n        let SLEVENT = this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLEvent);\r\n        let SLEXITPOINT = this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLEvent);\r\n        let SLDECISION = this.props.semtalk.base.GetModelAttribute(Process_ElementName.SLDecision);\r\n        let f = this.props.semtalk.base.FindSystemClass(SLACTIVITY);\r\n        if (f === null)\r\n          f = this.props.semtalk.base.FindSystemClass(SLACTIVITY);\r\n        if (f) {\r\n          tm = { style: f.Style, isedge: false };\r\n        }\r\n        f = this.props.semtalk.base.FindSystemClass(SLENTRYPOINT);\r\n        if (f === null)\r\n          f = this.props.semtalk.base.FindSystemClass(SLEVENT);\r\n        if (f) {\r\n          enm = { style: f.Style, isedge: false };\r\n        }\r\n        f = this.props.semtalk.base.FindSystemClass(SLEVENT);\r\n        if (f === null)\r\n          f = this.props.semtalk.base.FindSystemClass(SLEVENT);\r\n        if (f) {\r\n          eim = { style: f.Style, isedge: false };\r\n        }\r\n        f = this.props.semtalk.base.FindSystemClass(SLEXITPOINT);\r\n        if (f === null)\r\n          f = this.props.semtalk.base.FindSystemClass(SLEVENT);\r\n        if (f) {\r\n          exm = { style: f.Style, isedge: false };\r\n        }\r\n        f = this.props.semtalk.base.FindSystemClass(SLDECISION);\r\n        if (f === null)\r\n        //   ???\r\n          f = this.props.semtalk.base.FindSystemClass(SLDECISION);\r\n        if (f) {\r\n          dm = { style: f.Style, isedge: false };\r\n        }\r\n\r\n        for (let sl of SLObjWithElements){\r\n          swshape = this.props.semtalk.tseditor.graph.insertVertex(parent, \"\", \"\", 0, 0, Number(sl.w), Number(sl.h), sm.style);\r\n          swshape.shapeName = \"Swimlane\";\r\n          swshape.shapeKey = \"swimlane\";\r\n          let SLNode: any = this.props.semtalk.visShapeAdded(swshape);\r\n          let SLObject: ISemTalkObject | null;\r\n          if (SLNode)\r\n          {\r\n            SLObject = this.props.semtalk.base.FindObjectByID(SLNode.ObjectID);\r\n            if (SLObject)\r\n            {\r\n              if (sl.SLName !== undefined){\r\n                this.props.semtalk.RenameObject(SLObject, sl.SLName, null);\r\n              }\r\n              sl[\"STObject\"] = SLObject;\r\n              sl[\"MXObject\"] = swshape;\r\n              allElements.push(sl);\r\n            }\r\n          }\r\n          if (sl.SLElements !== null){\r\n            for (let el of sl.SLElements){\r\n              switch (el.type) {\r\n              case \"task\":\r\n              case \"sendTask\":\r\n              case \"userTask\":\r\n              case \"manualTask\":\r\n              case \"businessRuleTask\":\r\n              case \"serviceTask\":\r\n              case \"scriptTask\":\r\n              case \"receiveTask\":\r\n              case \"subProcess\":\r\n              case \"adHocSubProcess\":\r\n                  let tashape = this.props.semtalk.tseditor.graph.insertVertex(swshape, \"\", \"\", Number(el.x), Number(el.y)/2, 70, 60, tm.style);\r\n                  tashape.shapeName = \"Task\";\r\n                  tashape.shapeKey = \"task\";\r\n                  let TaskNode: any = this.props.semtalk.visShapeAdded(tashape);\r\n                  let TaskObject: ISemTalkObject | null;\r\n                  if (TaskNode)\r\n                  {\r\n                    TaskObject = this.props.semtalk.base.FindObjectByID(TaskNode.ObjectID);\r\n                    if (TaskObject)\r\n                    {\r\n                      if (el.name !== undefined){\r\n                        this.props.semtalk.RenameObject(TaskObject, el.name, null);\r\n                      }\r\n                      el[\"STObject\"] = TaskObject;\r\n                      el[\"MXObject\"] = tashape;\r\n                      switch (el.type) {\r\n                        case \"sendTask\":\r\n                          TaskObject.SetValue(BPMN_AttributeTypeName.TaskType, BPMN_TaskTypeName.Send);\r\n                          break;\r\n                        case \"userTask\":\r\n                          TaskObject.SetValue(BPMN_AttributeTypeName.TaskType, BPMN_TaskTypeName.User);\r\n                          break;\r\n                        case \"manualTask\":\r\n                          TaskObject.SetValue(BPMN_AttributeTypeName.TaskType, BPMN_TaskTypeName.Manual);\r\n                          break;\r\n                        case \"businessRuleTask\":\r\n                          TaskObject.SetValue(BPMN_AttributeTypeName.TaskType, BPMN_TaskTypeName.BusinessRule);\r\n                          break;\r\n                        case \"serviceTask\":\r\n                          TaskObject.SetValue(BPMN_AttributeTypeName.TaskType, BPMN_TaskTypeName.Service);\r\n                          break;\r\n                        case \"scriptTask\":\r\n                          TaskObject.SetValue(BPMN_AttributeTypeName.TaskType, BPMN_TaskTypeName.Script);\r\n                          break;\r\n                        case \"receiveTask\":\r\n                          TaskObject.SetValue(BPMN_AttributeTypeName.TaskType, BPMN_TaskTypeName.Receive);\r\n                          break;\r\n                        case \"subProcess\":\r\n                          TaskObject.SetValue(BPMN_AttributeTypeName.refinement, true);\r\n                          break;\r\n                        case \"adHocSubProcess\":\r\n                          TaskObject.SetValue(BPMN_AttributeTypeName.adhoc, true);\r\n                          break;\r\n                      }\r\n                      if (el.bpmntype !== undefined){\r\n                        switch (el.bpmntype) {\r\n                        case \"multiInstanceLoopCharacteristics\":\r\n                          TaskObject.SetValue(BPMN_AttributeTypeName.SubProcessOrdering, BPMN_SubprocessOrdering.Parallel);\r\n                          break;\r\n                        case \"standardLoopCharacteristics\":\r\n                          TaskObject.SetValue(BPMN_AttributeTypeName.SubProcessOrdering, BPMN_SubprocessOrdering.Loop);\r\n                          break;\r\n                        case \"multiInstanceLoopCharacteristicsSeq\":\r\n                          TaskObject.SetValue(BPMN_AttributeTypeName.SubProcessOrdering, BPMN_SubprocessOrdering.Sequential);\r\n                          break;\r\n                        }\r\n                      }\r\n                      allElements.push(el);\r\n                    }\r\n                  }\r\n                break;\r\n              case \"exclusiveGateway\":\r\n              case \"parallelGateway\":\r\n              case \"inclusiveGateway\":\r\n              case \"complexGateway\":\r\n              case \"eventBasedGateway\":\r\n              case \"Gateway\":\r\n                  let gashape = this.props.semtalk.tseditor.graph.insertVertex(swshape, \"\", \"\", Number(el.x), Number(el.y)/2, 60, 60, dm.style);\r\n                  gashape.shapeName = \"Gateway\";\r\n                  gashape.shapeKey = \"gateway\";\r\n                  let GatewayNode: any = this.props.semtalk.visShapeAdded(gashape);\r\n                  let GatewayObject: ISemTalkObject | null;\r\n                  if (GatewayNode)\r\n                  {\r\n                    GatewayObject = this.props.semtalk.base.FindObjectByID(GatewayNode.ObjectID);\r\n                    if (GatewayObject)\r\n                    {\r\n                      if (el.name !== undefined){\r\n                        this.props.semtalk.RenameObject(GatewayObject, el.name, null);\r\n                      }\r\n                      el[\"STObject\"] = GatewayObject;\r\n                      el[\"MXObject\"] = gashape;\r\n                      switch (el.type) {\r\n                        case \"exclusiveGateway\":\r\n                          GatewayObject.SetValue(BPMN_AttributeTypeName.GatewayType, BPMN_GatewayTypeName.XORwM);\r\n                          break;\r\n                        case \"parallelGateway\":\r\n                          GatewayObject.SetValue(BPMN_AttributeTypeName.GatewayType, BPMN_GatewayTypeName.Parallel);\r\n                          break;\r\n                        case \"inclusiveGateway\":\r\n                          GatewayObject.SetValue(BPMN_AttributeTypeName.GatewayType, BPMN_GatewayTypeName.Inclusive);\r\n                          break;\r\n                        case \"complexGateway\":\r\n                          GatewayObject.SetValue(BPMN_AttributeTypeName.GatewayType, BPMN_GatewayTypeName.Complex);\r\n                          break;\r\n                        case \"eventBasedGateway\":\r\n                          GatewayObject.SetValue(BPMN_AttributeTypeName.GatewayType, BPMN_GatewayTypeName.ExclusiveEvent);\r\n                          break;\r\n                      }\r\n                      allElements.push(el);\r\n                    }\r\n                  }\r\n                break;\r\n              case \"startEvent\":\r\n              case \"endEvent\":\r\n              case \"intermediateThrowEvent\":\r\n              case \"intermediateCatchEvent\":\r\n                let evshape;\r\n                if (el.type === \"startEvent\")\r\n                {\r\n                  evshape = this.props.semtalk.tseditor.graph.insertVertex(swshape, \"\", \"\", Number(el.x), Number(el.y)/2, 40, 40, enm.style);\r\n                  evshape.shapeName = \"Start Event\";\r\n                }\r\n                else if (el.type === \"intermediateThrowEvent\" || el.type === \"intermediateCatchEvent\")\r\n                {\r\n                  evshape = this.props.semtalk.tseditor.graph.insertVertex(swshape, \"\", \"\", Number(el.x), Number(el.y)/2, 40, 40, eim.style);\r\n                  evshape.shapeName = \"Intermediate Event\";\r\n                }\r\n                else\r\n                {\r\n                  evshape = this.props.semtalk.tseditor.graph.insertVertex(swshape, \"\", \"\", Number(el.x), Number(el.y)/2, 40, 40, exm.style);\r\n                  evshape.shapeName = \"End Event\";\r\n                }\r\n                evshape.shapeKey = \"Event\";\r\n                let EventNode: any = this.props.semtalk.visShapeAdded(evshape);\r\n                let EventObject: ISemTalkObject | null;\r\n                if (EventNode)\r\n                {\r\n                  EventObject = this.props.semtalk.base.FindObjectByID(EventNode.ObjectID);\r\n                  if (EventObject)\r\n                  {\r\n                    if (el.name !== undefined){\r\n                      this.props.semtalk.RenameObject(EventObject, el.name, null);\r\n                    }\r\n                    el[\"STObject\"] = EventObject;\r\n                    el[\"MXObject\"] = evshape;\r\n\r\n                    if (el.type === \"intermediateThrowEvent\") {\r\n                      EventObject.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.Intermediate);\r\n                      EventObject.SetValue(BPMN_AttributeTypeName.IntermediateType, BPMN_EventIntermediateType.Throw);\r\n                    } \r\n                    else if (el.type === \"intermediateCatchEvent\") {\r\n                      EventObject.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.Intermediate);\r\n                      EventObject.SetValue(BPMN_AttributeTypeName.IntermediateType, BPMN_EventIntermediateType.Catch);\r\n                    }\r\n                    else{\r\n                      if (el.type === \"startEvent\"){\r\n                        EventObject.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.Start);\r\n                      } else if (el.type === \"endEvent\"){\r\n                        EventObject.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.End);\r\n                      } else\r\n                      {\r\n                        EventObject.SetValue(BPMN_AttributeTypeName.EventType, BPMN_EventTypeName.Intermediate);\r\n                      }\r\n                      EventObject.SetValue(BPMN_AttributeTypeName.IntermediateType, BPMN_EventIntermediateType.None);\r\n                    }\r\n                    if (el.bpmntype !== undefined){\r\n                      switch (el.bpmntype) {\r\n                        case \"messageEventDefinition\":\r\n                          EventObject.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Message);\r\n                          break;\r\n                        case \"timerEventDefinition\":\r\n                          EventObject.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Timer);\r\n                          break;\r\n                        case \"conditionalEventDefinition\":\r\n                          EventObject.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Rule);\r\n                          break;\r\n                        case \"signalEventDefinition\":\r\n                          EventObject.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Signal);\r\n                          break;\r\n                        case \"compensateEventDefinition\":\r\n                          EventObject.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Compensation);\r\n                          break;\r\n                        case \"linkEventDefinition\":\r\n                          EventObject.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Link);\r\n                          break;\r\n                        case \"escalationEventDefinition\":\r\n                          EventObject.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Escalation);\r\n                          break;\r\n                        case \"errorEventDefinition\":\r\n                          EventObject.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Error);\r\n                          break;\r\n                        case \"terminateEventDefinition\":\r\n                          EventObject.SetValue(BPMN_AttributeTypeName.TriggerType, BPMN_TriggerTypeName.Terminate);\r\n                          break;\r\n                      }\r\n                    }\r\n                    allElements.push(el);\r\n                  }\r\n                }\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          this.props.semtalk.tseditor.refresh();\r\n        }\r\n      }\r\n      let AssocElements: any[] = this.getAssociationElement(BPMNXML);\r\n      for (let tmpAssoc of AssocElements){\r\n        let SourceObject: any = allElements.find(element => element.id === tmpAssoc.attributes.sourceRef.nodeValue).MXObject;\r\n        let TargetObject: any = allElements.find(element => element.id === tmpAssoc.attributes.targetRef.nodeValue).MXObject;\r\n        let link: any = this.props.semtalk.tseditor.insertEdge(SourceObject, TargetObject);\r\n        this.props.semtalk.visConnectionAdded(undefined, link, SourceObject, TargetObject);\r\n      }\r\n      this.props.semtalk.tseditor.refresh();\r\n    };\r\n    fileReader.readAsText(this.file);\r\n  }\r\n\r\n  private SortNumberArray = (array: number[]): number[] => {\r\n    array = array.slice();\r\n\r\n    for(let i = 0; i < array.length; i++) {\r\n        for(let j = 0; j < array.length - 1; j++) {\r\n            if(array[j] > array[j + 1]) {\r\n                let swap = array[j];\r\n                array[j] = array[j + 1];\r\n                array[j + 1] = swap;\r\n            }\r\n        }\r\n    }\r\n    return array;\r\n  }\r\n\r\n  private findChildrenOfLane = (LaneChildrenXML: any, processXML: any) => {\r\n    let LaneElements: any = [];\r\n    for (let lc of LaneChildrenXML)\r\n    {\r\n      for (let pe of processXML.children)\r\n      {\r\n        if (pe.attributes[\"id\"].nodeValue === lc.textContent)\r\n        {\r\n          LaneElements.push(pe);\r\n        }\r\n      }\r\n    }\r\n    return LaneElements;\r\n  }\r\n\r\n  private getElementsofLane = (participantXML: any, bpmnXML: any) =>\r\n  {\r\n    let elements: any = [];\r\n    if (participantXML.items !== undefined){\r\n      for (let curElement of participantXML.items){\r\n        if (curElement.localName !== \"sequenceFlow\"){\r\n          let element: any = {};\r\n          element['id'] = curElement.attributes[\"id\"].nodeValue;\r\n          if (curElement.attributes[\"name\"] !== undefined)\r\n          {\r\n            element['name'] = curElement.attributes[\"name\"].nodeValue;\r\n          }\r\n          element['type'] = curElement.localName;\r\n          if (curElement.children !== undefined){\r\n            for (let tmpProcType of curElement.children){\r\n              switch (tmpProcType.localName){\r\n                case \"multiInstanceLoopCharacteristics\":\r\n                  if (tmpProcType.attributes !== undefined)\r\n                  {\r\n                    if (tmpProcType.attributes[\"isSequential\"] !== undefined)\r\n                    {\r\n                      element['bpmntype'] = tmpProcType.localName;\r\n                    }\r\n                    else\r\n                    {\r\n                      if (tmpProcType.attributes[\"isSequential\"] === 'true')\r\n                      {\r\n                        element['bpmntype'] = tmpProcType.localName + \"Seq\";\r\n                      }\r\n                      else\r\n                      {\r\n                        element['bpmntype'] = tmpProcType.localName;\r\n                      }\r\n                    }\r\n                  }\r\n                  else\r\n                  {\r\n                    element['bpmntype'] = tmpProcType.localName;\r\n                  }\r\n                  break;\r\n                case \"standardLoopCharacteristics\":\r\n                case \"messageEventDefinition\":\r\n                case \"timerEventDefinition\":\r\n                case \"conditionalEventDefinition\":\r\n                case \"signalEventDefinition\":\r\n                case \"compensateEventDefinition\":\r\n                case \"linkEventDefinition\":\r\n                case \"escalationEventDefinition\":\r\n                case \"errorEventDefinition\":\r\n                case \"terminateEventDefinition\":\r\n                  element['bpmntype'] = tmpProcType.localName;\r\n                  break;\r\n                default:\r\n                  element['bpmntype'] = \"\";\r\n                  break;\r\n              }\r\n            }\r\n          }\r\n          let tmpPosObj: any = this.getBPMNPosition(curElement.attributes[\"id\"].nodeValue, bpmnXML);\r\n          element['x'] = tmpPosObj[\"x\"];\r\n          element['y'] = tmpPosObj[\"y\"];\r\n          element['w'] = tmpPosObj[\"w\"];\r\n          element['h'] = tmpPosObj[\"h\"];\r\n          elements.push(element);\r\n        }\r\n      }\r\n      return elements;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private getBPMNPosition = (id: string, bpmnXML:any):any =>\r\n  {\r\n    let bpmndiElements: any = xpath.select(\"//bpmndi:BPMNShape\", bpmnXML);\r\n    for (let curElement of bpmndiElements)\r\n    {\r\n      if (curElement.attributes['bpmnElement'].nodeValue === id)\r\n      {\r\n        let el: any = {};\r\n        el['x'] = curElement.children[0].attributes['x'].nodeValue;\r\n        el['y'] = curElement.children[0].attributes['y'].nodeValue;\r\n        el['w'] = curElement.children[0].attributes['width'].nodeValue;\r\n        el['h'] = curElement.children[0].attributes['height'].nodeValue;\r\n        return el;\r\n      }\r\n    }\r\n    return {\"y\": \"0\", \"x\": \"0\", \"w\": \"0\", \"h\": \"0\"};\r\n  }\r\n\r\n  private getAssociationElement = (bpmnXML: any): any[] => {\r\n    let tmpObj: any[] = [];\r\n    let bpmnFlow: any = xpath.select(\"//bpmn:sequenceFlow\", bpmnXML);\r\n    if (bpmnFlow.length !== 0)\r\n    {\r\n      for (let AssocElement of bpmnFlow) {\r\n        if(AssocElement.localName === \"sequenceFlow\") {\r\n          tmpObj.push(AssocElement);\r\n        }\r\n      }\r\n    }\r\n    return tmpObj;\r\n  }\r\n\r\n  public render(): React.ReactElement<ISemTalkBPMNImportProps> {\r\n    let r: React.ReactElement<ISemTalkBPMNImportProps>;\r\n    r = <Fabric>\r\n      {/* <><div>\r\n        <input type=\"file\" onChange={(event) => { this.incomingfile(event); } } placeholder=\"Upload file\" accept=\".xlsx, .bpmn\" />\r\n            <button type=\"button\" onClick={this.UploadBPMN}>Upload BPMN</button>\r\n            <br></br>\r\n        </div>\r\n        </> */}\r\n    </Fabric >;\r\n    return r;\r\n  }\r\n}","/* eslint-disable react/jsx-no-target-blank */\n/* eslint-disable no-useless-concat */\nimport * as React from 'react';\n// import * as base64 from 'base-64';\nimport styles from './SemTalkOnline.module.scss';\nimport { ITSEditor, zoomoption } from \"./ITSEditor\";\nimport { TSEditor } from './tseditor/tseditor';\nimport { VisioRDFS } from './application/semtalklistener/visiordfs';\nimport {\n  IVisioRDFS, ITermSetItem, SemTalkNavigationEvent,\n  SemTalkStencil, SharePointSettings, SemTalkRibbon\n} from './application/semtalklistener/visiordfsinterface';\nimport { SemTalkMaster } from './application/SemTalkMaster';\nimport { refreshPage, refreshObject } from './application/semtalklistener/refresh';\n\nimport { ObjectBase } from \"./application/tbase/ObjectBase\";\nimport { OB2JSON } from \"./application/tbase/OB2JSON\";\nimport { OB2XML } from \"./application/tbase/OB2XML\";\n\nimport { SemTalkPivot } from './controls/stpivot/SemTalkPivot';\nimport { SemTalkCustomize } from './controls/stcustomize/SemTalkCustomize';\nimport { SemTalkSelect } from './controls/stselect/SemTalkSelect';\nimport { SemTalkInsert } from './controls/stinsert/SemTalkInsert';\nimport { SemTalkAttachmentTab } from './controls/stattachments/SemTalkAttachments';\nimport { SemTalkTermSet } from './controls/sttermset/SemTalkTermSet';\nimport { SemTalkCompose } from './controls/stcompose/SemTalkCompose';\nimport { SemTalkCreateDiagram } from './controls/stdiagram_new/SemTalkCreateDiagram';\n// import { SemTalkBPMNImport } from './controls/stbpmnimport/SemTalkBPMNImport';\nimport { SemTalkAbout } from './controls/stabout/SemTalkAbout';\nimport { SemTalkShapeStyle } from './controls/stshapestyle/SemTalkShapeStyle';\nimport { SemTalkTable } from './controls/sttable/SemTalkTable';\nimport { SemTalkFacetSearch } from './controls/stfacetsearch/SemTalkFacetSearch';\nimport { SemTalkSettings } from './controls/stsettings/SemTalkSettings';\nimport { SemTalkModelProperty } from './controls/stmodelproperty/SemTalkModelProperty';\nimport { SemTalkDiagramTab } from './controls/stdiagram/SemTalkDiagram';\nimport { SemTalkNavigation } from './controls/stnavigation/SemTalkNavigation';\nimport { SemTalkObjects } from './controls/stobject/SemTalkObjects';\nimport { SemTalkAssociationTypes } from './controls/stassociationtypes/SemTalkAssociationTypes';\nimport { SemTalkAttributeTypes } from './controls/stattributetypes/SemTalkAttributeTypes';\nimport { SemTalkMethodTypes } from './controls/stmethodtypes/SemTalkMethodTypes';\nimport { SemTalkStateTypes } from './controls/ststatetypes/SemTalkStateTypes';\nimport { SemTalkDiagramTypes } from './controls/stdiagramtypes/SemTalkDiagramTypes';\nimport { SemTalkRepository } from './controls/strepository/SemTalkRepository';\nimport { SemTalkTableEditor } from './controls/sttableeditor/SemTalkTableEditor';\nimport { SemTalkTableImport } from './controls/sttableimport/SemTalkTableImport';\nimport { SemTalkForm } from './controls/stform/SemTalkForm';\n// import { SPListItem } from '@microsoft/sp-page-context';\n// import { MSGraphClient } from '@microsoft/sp-http';\n// import { MSGraphClient, SPHttpClient, ISPHttpClientOptions } from '@microsoft/sp-http';\n// import { Client } from '@microsoft/microsoft-graph-client';\nimport { ms365login } from './login';\nimport LoginIntern from './controls/stlogin/LoginIntern';\n\n\n\nimport { ISPExplorer } from \"./application/explorer/spexplorerinterface\";\nimport { SPExplorer } from \"./application/explorer/spexplorer\";\nimport {\n  IMongoOption, mgGetDocument, mgSaveDocument,\n  mgSaveDocumentAs,\n  mgCheckDocument,\n  // mgLogin_with_email_password,\n  mgDeleteItem,\n  mgGetValue,\n  mgCallService\n} from './SemTalkMongoServer';\n//import { mgGetItem } from './SemTalkMongoServer';\n// import Login from './components/controls/stlogin/Login';\nimport { Process_ElementName } from './application/semtalklistener/processInterface';\nimport { BPMN_ElementName } from './application/semtalklistener/subtask/bpmn/bpmninterface';\n\n\n// import * as strings from 'SemTalkStrings';\nimport {\n  getObject, gotoObject, gotoNode, gotoDocument,\n  addCallBack, removeCallBack, gotoShape\n} from './application/semtalklistener/stglobal';\nimport {\n  ISemTalkDiagram,\n  SemTalkType,\n  ISemTalkObject,\n  ISemTalkInstance,\n  ISemTalkSystemClass,\n  ISemTalkLabel,\n  SemTalkRelation,\n  ISemTalkDiagramType,\n  ISemTalkAssociation,\n  // IObjectBase,\n  // ISemTalkBusinessClass,\n  SemTalkBaseConstant,\n  SemTalkLanguage,\n  SemTalkLanguageCode,\n  ModelAttribute,\n  SemTalkComposeOrder,\n  IObjectBase\n  // IObjectBase,\n  // ISemTalkAttributeType,\n  // ISemTalkAttribute,\n  // SemTalkValueType\n} from './application/tbase/Interface';\n\nimport { SemTalkCommandBar } from './controls/stcommandbar/SemTalkCommandBar';\nimport { SemTalkToolBar } from './controls/sttoolbar/SemTalkToolBar';\nimport { SemTalkBreadCrumbs } from './controls/stbreadcrumbs/SemTalkBreadCrumbs';\nimport { SemTalkOpen } from './controls/stfileopen/SemTalkOpen';\nimport { SemTalkExpand } from './controls/stexpand/SemTalkExpand';\n\nimport { PanelType, Panel } from 'office-ui-fabric-react/lib/Panel';\nimport {\n  ContextualMenu, IContextualMenuItem, ContextualMenuItemType,\n  MessageBar,\n  MessageBarType,\n  // Stack,\n  // StackItem,\n  // Dialog\n} from 'office-ui-fabric-react';\nimport { ProgressIndicator } from 'office-ui-fabric-react/lib/ProgressIndicator';\n\nimport { Guid } from \"guid-typescript\";\n// import { FilePicker, IFilePickerResult } from '@pnp/spfx-controls-react/lib/FilePicker';\n// import { FolderPicker, IFolder } from \"@pnp/spfx-controls-react/lib/FolderPicker\";\n\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\nimport { ISemTalkUndo } from './ISemTalkUndo';\nimport { SemTalkUndo } from './SemTalkUndo';\nimport { SemTalkBPMNExport } from './controls/stbpmninterface/SemTalkBPMNExport';\n// import { SemTalkWordExport } from './controls/stwordexport/SemTalkWordExport';\nimport { SemTalkBPMNImport } from './controls/stbpmninterface/SemTalkBPMNImport';\nimport { SemTalkOnlineCommand, SemTalkCookie, ISemTalkSemantics } from './ISemTalkOnline';\n// import { LocalizedFontFamilies } from '@fluentui/theme/lib/fonts';\n\ninitializeIcons(undefined, { disableWarnings: true });\n\n// const { ipcRenderer } = (window as any).require(\"electron\");\n\n\nexport interface ISemTalkOnlineProps {\n  context?: any;\n  site: string;\n  sharepointrepository?: string;\n  library: string;\n  support: string;\n  // svglibrary: string;\n  templates: string;\n  graphClient?: any;\n  clientID: string;\n  authority: string;\n  scopes: string[];\n  termsetgroup?: string;\n  termset?: string;\n  termsetroot?: string;\n  termsetassoc?: string;\n  goodlist: string[];\n  badlist: string[];\n  navVisible?: boolean;\n  searchVisible: boolean;\n  propsVisible: boolean;\n  diagVisible?: boolean;\n  hieVisible?: boolean;\n  showToolBar: boolean;\n  showhyperlinkmarker: boolean;\n  showSimulation: boolean;\n  showBPMN: boolean;\n  showCommandBar: boolean;\n  underlineRefinements: boolean;\n  cdn: string;\n  width: number;\n  height: number;\n  // svgshapes: any;\n  guilanguage: SemTalkLanguageCode;\n  language: string;\n  showlanguage: boolean;\n  isexport: boolean;\n  spCheckInOut: boolean;\n  mongo: IMongoOption;\n  setToken?: any;\n  setcurrToken?: any;\n  model: string;\n  page: string;\n  semantics: ISemTalkSemantics;\n  // pca: IPublicClientApplication;\n}\n\nexport interface ISemTalkOnlineState {\n  semtalk: IVisioRDFS | undefined;\n  filename: string;\n  xmlgraph: string | null;\n  stencil: SemTalkStencil;\n  // xmlshapes: HTMLCollection[];\n  hidePropertyDialog: boolean;\n  hideCustomizeDialog: boolean;\n  hideComposeDialog: boolean;\n  hideHyperlinkDialog: boolean;\n  hideSelectDialog: boolean;\n  hideTermSetDialog: boolean;\n  hideExpandDialog: boolean;\n  hideCreateDiagramDialog: boolean;\n  hideRelationDialog: boolean;\n  hideInsertDialog: boolean;\n  hideOpenLinkDialog: boolean;\n  hideFormDialog: boolean;\n  hideSubTaskDialog: boolean;\n  addoncommand: string;\n  openlinkurl: string;\n  openlinkcaption: string;\n  // hideFilePicker: boolean;\n  hideFileOpen: boolean;\n  hideShapeStyle: boolean;\n  hideHelp: boolean;\n  hidemgLoginDialog: boolean;\n  // hideFolderPicker: boolean;\n  diag: ISemTalkDiagram | null;\n  // diaglist: { text: string, key: number }[];\n  showSearch: boolean;\n  showFacetSearch: boolean;\n  showSettings: boolean;\n  showModelProperties: boolean;\n  showDiag: boolean;\n  showPivot: boolean;\n  //  showProcTable: boolean;\n  showNav: boolean;\n  showHie: boolean;\n  showAssocTypes: boolean;\n  showAttrTypes: boolean;\n  showMethodTypes: boolean;\n  showStateTypes: boolean;\n  showDiagTypes: boolean;\n  showRelTree: boolean;\n  showRep: boolean;\n  showRepositoryTable: boolean;\n  showTableEditor: boolean;\n  showTableImport: boolean;\n  showProp: boolean;\n  showOpen: boolean;\n  redraw: boolean;\n  shape: any;\n  object: any;\n  relation: any;\n  filePickerResult: string;\n  isopen: boolean;\n  isnew: boolean;\n  issaveas: boolean;\n  isimport: boolean;\n  isconnectionpoints: boolean;\n  spexplorercaption: string;\n  showContextualMenu: boolean;\n  cntpages: number;\n  template: string;\n  checkedOut: boolean;\n  // horizontalSL: boolean;\n  mongo: IMongoOption;\n  language: string;\n  nosuccess: boolean;\n  errormsg: string;\n  msgbartype: MessageBarType;\n  isLoading: string;\n  ribbon: SemTalkRibbon;\n  toolbar: SemTalkRibbon;\n}\n\n\nexport class SemTalkOnline extends React.Component<ISemTalkOnlineProps, ISemTalkOnlineState> {\n  public callback: Guid;\n  private isreadonly = false;\n  private ischeckedout2me = false;\n  private diagramroot: ISemTalkSystemClass | null = null;\n  private otherroot: ISemTalkSystemClass | null = null;\n  private stencil: SemTalkStencil = [];\n  // private xmlshapes: HTMLCollection[] = [];\n  private click_x: number = 100;\n  private click_y: number = 100;\n  private isclasses: boolean = false;\n  public autosave: boolean = false;\n  public checkouttoken_templist: string = \"SDX_Temp\";\n  private checkouttoken_tempid: number = 0;\n  private filename: string = \"\";\n  private undoManger: ISemTalkUndo = new SemTalkUndo();\n  private lzutf8: boolean = true;\n  // private semantics_service = \"https://qurator-embeddings.apps.osc.fokus.fraunhofer.de\";\n  // private semantics_service = \"http://127.0.0.1:5000/\";\n  private semantics_service = this.props.semantics.server;\n  private graphClient: any;\n\n  private sprops: SharePointSettings;\n  // private ipcRenderer: any = (window as any).ipcRenderer;\n\n  constructor(props: ISemTalkOnlineProps) {\n    super(props);\n    this.callback = Guid.create();\n    console.debug(\"SemTalkOnline\");\n\n    this.sprops = {\n      \"site\": this.props.site,\n      \"cdn\": this.props.cdn,\n      \"context\": this.props.context,\n      \"support\": this.props.support,\n      \"templates\": this.props.templates\n    };\n    this.graphClient = this.props.graphClient;\n\n    this.state = {\n      semtalk: undefined,\n      filename: \"\",\n      xmlgraph: null,\n      hidePropertyDialog: true,\n      hideCustomizeDialog: true,\n      hideSelectDialog: true,\n      hideTermSetDialog: true,\n      hideExpandDialog: true,\n      hideRelationDialog: true,\n      hideCreateDiagramDialog: true,\n      hideInsertDialog: true,\n      hideComposeDialog: true,\n      hideHyperlinkDialog: true,\n      hideOpenLinkDialog: true,\n      hideFormDialog: true,\n      addoncommand: \"\",\n      hideSubTaskDialog: true,\n      //  hideFilePicker: true,\n      hideFileOpen: true,\n      hideShapeStyle: true,\n      hideHelp: true,\n      // hidemgLoginDialog: this.props.mongo.semuserlogin !== null || !this.props.mongo.iselectron || !this.props.mongo.usemongo,\n      hidemgLoginDialog: true,\n      //   hideFolderPicker: false,\n      // diaglist: [],\n      diag: null,\n      showPivot: false,\n      showSearch: false,\n      showFacetSearch: false,\n      showSettings: false,\n      showModelProperties: false,\n      showDiag: false,\n      //showProcTable: false,\n      showNav: false,\n      showHie: false,\n      showAssocTypes: false,\n      showAttrTypes: false,\n      showMethodTypes: false,\n      showStateTypes: false,\n      showDiagTypes: false,\n      showRelTree: false,\n      showRep: false,\n      showProp: false,\n      showRepositoryTable: false,\n      showTableEditor: false,\n      showTableImport: false,\n      showOpen: true,\n      redraw: false,\n      shape: null,\n      object: null,\n      relation: null,\n      filePickerResult: \"\",\n      isopen: false,\n      isnew: false,\n      issaveas: false,\n      isimport: false,\n      spexplorercaption: \"SaveAs\",\n      stencil: this.stencil,\n      // xmlshapes: this.xmlshapes,\n      showContextualMenu: false,\n      cntpages: 1,\n      template: \"bpmn20-2016.stx\",\n      openlinkurl: \"\",\n      openlinkcaption: \"\",\n      checkedOut: false,\n      mongo: this.props.mongo,\n      language: this.props.language,\n      isconnectionpoints: false,\n      nosuccess: false,\n      errormsg: \"War wohl nix\",\n      msgbartype: MessageBarType.error,\n      isLoading: \"\",\n      ribbon: [],\n      toolbar: []\n    };\n  }\n\n  public DoCommand(cmd: SemTalkOnlineCommand, args: any): boolean {\n    switch (cmd) {\n      case SemTalkOnlineCommand.NewDocument: { this.newDocument(); break; }\n      case SemTalkOnlineCommand.OpenDocument: { this.openDocument(); break; }\n      case SemTalkOnlineCommand.SaveDocument: { this.saveDocument(); break; }\n      case SemTalkOnlineCommand.SaveAsDocument: { this.saveAsDocument(); break; }\n      case SemTalkOnlineCommand.AutoSave: { this.autoSave(); break; }\n      case SemTalkOnlineCommand.DownloadDocument: { this.download(); break; }\n      case SemTalkOnlineCommand.UploadDocument: { this.upload(); break; }\n      case SemTalkOnlineCommand.ImportDocument: { this.importDocument(); break; }\n      case SemTalkOnlineCommand.UploadBPMNFile: { this.uploadBPMNFile(); break; }\n      case SemTalkOnlineCommand.UploadXMLFile: { this.uploadXMLFile(); break; }\n      case SemTalkOnlineCommand.DownloadBPMNFile: { this.downloadBPMNFile(); break; }\n      case SemTalkOnlineCommand.DownloadWordFile: { this.downloadWordFile(); break; }\n      case SemTalkOnlineCommand.DownloadXMLFile: { this.downloadXMLFile(); break; }\n      case SemTalkOnlineCommand.CheckInDocument: { this.checkInDocument(); break; }\n      case SemTalkOnlineCommand.CheckOutDocument: { this.checkOutDocument(); break; }\n      case SemTalkOnlineCommand.FileImage: { this.fileImage(); break; }\n      case SemTalkOnlineCommand.PrintPreview: { this.printPreview(); break; }\n      case SemTalkOnlineCommand.StartPanning: { this.startPanning(); break; }\n      case SemTalkOnlineCommand.StopPanning: { this.stopPanning(); break; }\n      case SemTalkOnlineCommand.TogglePanZoom: { this.togglePanZoom(); break; }\n      case SemTalkOnlineCommand.ToggleStencil: { this.toggleStencil(); break; }\n      case SemTalkOnlineCommand.DeleteShapes: { this.deleteShapes(); break; }\n      case SemTalkOnlineCommand.Undo: { this.Undo(); break; }\n      case SemTalkOnlineCommand.Redo: { this.Redo(); break; }\n      case SemTalkOnlineCommand.ShapeStyle: { this.showShapeStyle([]); break; }\n      case SemTalkOnlineCommand.ConnectionPoints: { this.connectionPoints(); break; }\n      case SemTalkOnlineCommand.AlignHorizontalLeft: { this.align(\"AlignHorizontalLeft\"); break; }\n      case SemTalkOnlineCommand.AlignHorizontalCenter: { this.align(\"AlignHorizontalCenter\"); break; }\n      case SemTalkOnlineCommand.AlignHorizontalRight: { this.align(\"AlignHorizontalRight\"); break; }\n      case SemTalkOnlineCommand.AlignVerticalTop: { this.align(\"AlignVerticalTop\"); break; }\n      case SemTalkOnlineCommand.AlignVerticalCenter: { this.align(\"AlignVerticalCenter\"); break; }\n      case SemTalkOnlineCommand.AlignVerticalBottom: { this.align(\"AlignVerticalBottom\"); break; }\n      case SemTalkOnlineCommand.ZoomIn: { this.zoomIn(); break; }\n      case SemTalkOnlineCommand.ZoomOut: { this.zoomOut(); break; }\n      case SemTalkOnlineCommand.ZoomFit: { this.zoomFit(); break; }\n      case SemTalkOnlineCommand.ZoomActual: { this.zoomActual(); break; }\n      case SemTalkOnlineCommand.Redraw: { this.redraw(); break; }\n      case SemTalkOnlineCommand.TogglePageBreaks: { this.togglePageBreaks(); break; }\n      case SemTalkOnlineCommand.EditObject: { this.editObject(-1); break; }\n      case SemTalkOnlineCommand.SelectCell: {\n        if (this.state.semtalk) this.selectCell(this.state.semtalk.currentShape()); break;\n      }\n      case SemTalkOnlineCommand.EditClass: { this.editClass(); break; }\n      case SemTalkOnlineCommand.DeleteObject: { this.deleteObject(); break; }\n      case SemTalkOnlineCommand.ComposeObject: { this.composeObject(); break; }\n      case SemTalkOnlineCommand.ConnectShapes: { this.connectShapes(); break; }\n      case SemTalkOnlineCommand.GroupShapes: { this.groupShapes(); break; }\n      case SemTalkOnlineCommand.UngroupShapes: { this.ungroupShapes(); break; }\n      case SemTalkOnlineCommand.HyperlinkObject: { this.hyperlinkObject(); break; }\n      case SemTalkOnlineCommand.RefineObject: { this.refineObject(); break; }\n      case SemTalkOnlineCommand.DetachObject: { this.detachObject(); break; }\n      case SemTalkOnlineCommand.CustomizeObject: { this.customizeObject(); break; }\n      case SemTalkOnlineCommand.InsertSwimlane: { this.insertSwimlane(this.state.semtalk?.currentShape()); break; }\n      case SemTalkOnlineCommand.ToggleDirection: { this.toggleDirection(this.state.semtalk?.currentShape()); break; }\n      case SemTalkOnlineCommand.CollapseCell: { this.collapseCell(this.state.semtalk?.currentShape()); break; }\n      case SemTalkOnlineCommand.RefreshObject: { this.refreshObject(); break; }\n      case SemTalkOnlineCommand.ExpandObject: { this.expandObject(); break; }\n      case SemTalkOnlineCommand.EditPage: { this.editPage(); break; }\n      case SemTalkOnlineCommand.AddPage: { this.addPage(); break; }\n      case SemTalkOnlineCommand.DeletePage: { this.deletePage(); break; }\n      case SemTalkOnlineCommand.GoUp: { this.goUp(); break; }\n      // case SemTalkOnlineCommand.Renumber: { this.renumber(); break; }\n      case SemTalkOnlineCommand.Insert: { this.insert(); break; }\n      case SemTalkOnlineCommand.Termstore: { this.termstore(); break; }\n      case SemTalkOnlineCommand.mxCompactTreeLayout: { this.doLayout(\"mxCompactTreeLayout\", true, true, false); break; }\n      case SemTalkOnlineCommand.mxCompactTreeLayoutV: { this.doLayout(\"mxCompactTreeLayout\", true, false, false); break; }\n      case SemTalkOnlineCommand.mxCompactTreeLayoutI: { this.doLayout(\"mxCompactTreeLayout\", true, false, true); break; }\n      case SemTalkOnlineCommand.mxCompactTreeLayoutVI: { this.doLayout(\"mxCompactTreeLayout\", true, true, true); break; }\n      case SemTalkOnlineCommand.mxFastOrganicLayout: { this.doLayout(\"mxFastOrganicLayout\", true, true, false); break; }\n      case SemTalkOnlineCommand.mxRadialTreeLayout: { this.doLayout(\"mxRadialTreeLayout\", true, true, false); break; }\n      case SemTalkOnlineCommand.mxCircleLayout: { this.doLayout(\"mxCircleLayout\", true, true, false); break; }\n      case SemTalkOnlineCommand.ShowHelp: { this.showHelp(); break; }\n      case SemTalkOnlineCommand.ShowForm: { this.showForm(); break; }\n      case SemTalkOnlineCommand.SelectDataLang: { this.selectDataLang(args); break; }\n      case SemTalkOnlineCommand.WordVectors: { this.WordVectors(); break; }\n      case SemTalkOnlineCommand.InvertedTaxonomy: { this.InvertedTaxonomy(); break; }\n      case SemTalkOnlineCommand.ResetMetaModel: { this.ResetMetaModel(); break; }\n      case SemTalkOnlineCommand.AddonCommand: { this.AddonCommand(args); break; }\n      case SemTalkOnlineCommand.mgLogin: { this.mgLogin(); break; }\n      case SemTalkOnlineCommand.MS365Login: { this.MS365Login(); break; }\n    }\n    return true;\n  }\n\n  private ResetMetaModel = () => {\n    let sem = this.state.semtalk;\n    if (sem) {\n      sem.patchSubTask(sem.base);\n    }\n  }\n  private AddonCommand = (args: any) => {\n    let sem = this.state.semtalk;\n    if (sem) {\n      args[\"callback\"] = this;\n      sem.AddonCommand(args);\n    }\n  }\n  private getUsername(): string {\n    if (this.props.context) {\n      return this.props.context.pageContext.user.displayName;\n    }\n    if (this.state.mongo.usemongo && this.state.mongo && this.state.mongo.semuserlogin) {\n      return this.state.mongo.semuserlogin.user_info.profile.fullname;\n    }\n    return \"\";\n  }\n  private onTabClose = (ev: any) => {\n    ev.preventDefault();\n    let n = Date.now();\n    let status: any = {\n      \"filename\": this.state.filename,\n      \"timeleft\": n,\n      \"template\": this.state.template\n    };\n    (window as any).localStorage.setItem(SemTalkCookie.SemTalkStatus, JSON.stringify(status));\n\n    this.autoSave();\n    console.debug(\"Tab Close\");\n    //  return ev.returnValue = 'Ohne Speichern beenden?'; //moderne browser erlauben keine custom messages mehr\n    if (!this.state.mongo.iselectron) {\n      if (this.state.semtalk && this.state.semtalk.ismodified) {\n        return ev.returnValue = 'Leave without saving?'; //moderne browser erlauben keine custom messages mehr\n      }\n    }\n    return \"\";\n  }\n\n  // public graph: any;\n  private mounted: boolean = false;\n  public async componentDidMount() {\n    this.mounted = true;\n    addCallBack(this);\n    window.addEventListener(\"beforeunload\", (ev) => { ev.preventDefault(); this.onTabClose(ev); });\n    let restored: boolean = false;\n    const ob = new ObjectBase();\n    const o2j = new OB2JSON();\n    let readonly: boolean = false;\n    let pgid = -1;\n    let spinterface = new SPExplorer();\n    let modprop = this.props.model;\n    if (modprop.length > 0 && modprop.indexOf(\".\") < 0) {\n      modprop = modprop + \".sdx\";\n    }\n    let template = this.state.template;\n    if (modprop.length === 0 && !this.props.mongo.iselectron) {\n      //      await this.createDocument(sem, \"bpmn20-2016.stx\");\n      // const s = require(\"./test.json\");\n      let s1 = window.localStorage.getItem(SemTalkCookie.autosaveSemTalk);\n      let s2 = window.localStorage.getItem(SemTalkCookie.SemTalkStatus);\n      let sessionstatus: any;\n      if (s2) {\n        sessionstatus = JSON.parse(s2);\n      }\n      if (sessionstatus && sessionstatus[\"template\"]) {\n        template = sessionstatus[\"template\"];\n      }\n\n\n      if (s1 && s1.length > 0) {\n        if (sessionstatus && sessionstatus[\"timeleft\"] && sessionstatus[\"filename\"]) {\n          this.filename = sessionstatus[\"filename\"];\n          document.title = \"SemTalk Online: \" + this.filename;\n          let u = this.getUsername();\n          let d = new Date(sessionstatus[\"timeleft\"]);\n          if (this.filename.endsWith(\".sdx\")) {\n            this.alert(\"Hello \" + u + \"! You are resuming '\" + sessionstatus[\"filename\"] + \"' from '\" + d + \"'\", MessageBarType.info);\n          }\n          if (this.state.mongo.usemongo) {\n            let mres = await mgGetValue(this.state.mongo, this.state.mongo.dbname, this.state.mongo.documents,\n              this.filename, \"Modified\");\n            if (mres) {\n              let m = Date.parse(mres);\n              if (m > sessionstatus[\"timeleft\"]) {\n                let u1 = await mgGetValue(this.state.mongo, this.state.mongo.dbname, this.state.mongo.documents,\n                  this.filename, \"ModifiedBy\");\n                // let u = this.getUsername();\n                // if (u1 !== u) {\n                // die datei wurde gespeichert nachdem wir sie zuletzt geschlossen und im localstorage gespeichert haben.\n                //  müssten wir sie dann nicht lieber neu öffnen?\n                readonly = true;\n                document.title = \"SemTalk Online (RO): \" + this.filename;\n                this.alert(this.filename + \" was modified by \" + u1 + \" at \" + new Date(m) + \" after you left it. \\nDiscard your changes or save a copy. Please reopen the Document!\", MessageBarType.severeWarning);\n                // }\n              }\n            }\n            let cres = await mgGetValue(this.state.mongo, this.state.mongo.dbname, this.state.mongo.documents,\n              this.filename, \"CheckedOutDate\");\n            if (cres) {\n              this.ischeckedout2me = false;\n              let m = Date.parse(cres);\n              // Müsste man hier nicht berücksichtigen ob die localstorage älter oder jünger als der checkout ist??\n              // if (m > sessionstatus[\"timeleft\"]) {\n              let u1 = await mgGetValue(this.state.mongo, this.state.mongo.dbname, this.state.mongo.documents,\n                this.filename, \"CheckedOutUser\");\n              let u0 = this.getUsername();\n              if (u1 !== u0) {\n                // die datei ist von jemand anderem ausgecheckt\n                this.isreadonly = true;\n                document.title = \"SemTalk Online (RO): \" + this.filename;\n                this.alert(this.filename + \" is checked out to \" + u1 + \" at \" + new Date(m), MessageBarType.severeWarning);\n              } else {\n                // die datei ist von mir ausgecheckt\n                document.title = \"SemTalk Online (CO): \" + this.filename;\n                this.ischeckedout2me = true;\n              }\n              // }\n            }\n            console.debug(\"Loading: \" + this.props.model);\n          }\n        }\n        console.debug(\"restoring\");\n        let s: any = {};\n        try {\n          s = JSON.parse(s1);\n          pgid = s.currentpage;\n          if (!readonly) {\n            readonly = s.readonly;\n          }\n          this.checkouttoken_tempid = s.tempId;\n          this.filename = s.modname;\n          //  console.debug(s);\n        } catch (e) {\n          console.debug(e);\n        }\n        try {\n          if (s[\"diags\"]) {\n            o2j.LoadJSON(ob, s);\n            restored = true;\n          }\n        } catch (error) {\n\n        }\n      }\n    }\n    if (!restored) {\n      //  const url: string = this.props.site + \"/\" + \"SDX\" + \"/\" + this.state.filename;\n      let txt = \"\";\n      let s2: any = {};\n      if (this.state.mongo.usemongo) {\n        if (modprop.length > 0) {\n          let cres = await mgGetDocument(this.state.mongo, this.state.mongo.documents, modprop);\n          if (cres) {\n            s2 = cres;\n          }\n          if (cres) {\n            this.ischeckedout2me = false;\n            let m = Date.parse(cres);\n            // Müsste man hier nicht berücksichtigen ob die localstorage älter oder jünger als der checkout ist??\n            // if (m > sessionstatus[\"timeleft\"]) {\n            let u1 = await mgGetValue(this.state.mongo, this.state.mongo.dbname, this.state.mongo.documents,\n              this.filename, \"CheckedOutUser\");\n            let u = this.getUsername();\n            if (u1 !== u) {\n              // die datei ist von jemand anderem ausgecheckt\n              this.isreadonly = true;\n              document.title = \"SemTalk Online (RO): \" + this.filename;\n              this.alert(this.filename + \" is checked out to \" + u1 + \" at \" + new Date(m), MessageBarType.severeWarning);\n            } else {\n              // die datei ist von mir ausgecheckt\n              document.title = \"SemTalk Online (CO): \" + this.filename;\n              this.ischeckedout2me = true;\n            }\n            // }\n          }\n          console.debug(\"Loading: \" + this.props.model);\n        } else {\n          let res = await mgGetDocument(this.state.mongo, this.state.mongo.templates, template);\n          if (res) {\n            s2 = res;\n          }\n          console.debug(\"Loading: \" + template);\n        }\n      }\n      if ((!s2 || s2[\"ObjectType\"] === undefined) && this.props.context) {\n        let url = \"\";\n        if (modprop.length > 0) {\n          url = this.props.site + \"/\" + this.props.library + \"/\" + this.props.model;\n        } else {\n          url = this.props.site + \"/\" + this.props.templates + \"/\" + template;\n        }\n        txt = await spinterface.getTXT(this.props.context, url);\n        try {\n          if (txt !== null)\n            s2 = JSON.parse(txt);\n        } catch (e) {\n          console.debug(e);\n        }\n        console.debug(\"Loading: \" + url);\n      }\n      if (!s2 || s2[\"ObjectType\"] === undefined) {\n        let t2 = template;\n        try {\n          let response = await fetch(\"./Templates/\" + t2);\n          let txt1: string = await response.text();\n          s2 = JSON.parse(txt1);\n        } catch (e) {\n          console.debug(e);\n        }\n        console.debug(\"Loading: \" + template);\n      }\n      if (s2 && s2[\"diags\"])\n        o2j.LoadJSON(ob, s2);\n    }\n    let pageprop = this.props.page;\n    if (pageprop.length > 0) {\n      let pg = ob.FindDiagramByName(pageprop);\n      if (pg) {\n        pgid = pg.ID;\n      }\n    }\n\n    ob.ObjectName = ob.GetModelAttribute(ModelAttribute.modname);\n    this.loadBase(ob, restored, pgid, readonly, spinterface);\n\n\n    // console.debug(\"model: \" + this.props.model);\n    // if (this.props.model.length > 0) {\n    //   this.loadDocument(this.props.model);\n    //   this.filename = this.props.model;\n    // }\n\n    if (this.filename) {\n      if (this.isreadonly) {\n        document.title = \"SemTalk Online (RO): \" + this.filename;\n      } else {\n        if (this.ischeckedout2me) {\n          document.title = \"SemTalk Online (CO): \" + this.filename;\n        } else {\n          document.title = \"SemTalk Online: \" + this.filename;\n        }\n      }\n    }\n    if (true) this.initElectron();\n  }\n  private initElectron = async () => {\n    let w: any = window;\n    if (this.props.mongo.iselectron && w.api) {\n      // w.api.receive(\"fromMain\", (data: any) => {\n      //   console.log(`Received ${data} from main process`);\n      // });\n      // w.api.receive(\"onClickCallback\", (data: any) => {\n      //   this.DoCommand(data[\"command\"], data[\"args\"]);\n      // });\n      // w.api.receive(\"onClickState\", (data: any) => {\n      //   let s = {};\n      //   let state: string = data[\"state\"];\n      //   s[state] = true;\n      //   this.setState(s);\n      // });\n      // w.api.receive(\"onClickAddOn\", (data: any) => {\n      //   this.DoCommand(SemTalkOnlineCommand.AddonCommand, { \"command\": data[\"command\"] });\n      // });\n      // w.api.receive(\"openDocument\", (data: any) => {\n      //   let fname: string = data[\"filename\"];\n      //   if (fname && data[\"data\"]) {\n      //     if (fname.endsWith(\".sdx\")) {\n      //       let s = JSON.parse(data[\"data\"]);\n      //       window.localStorage.setItem(SemTalkCookie.autosaveSemTalk, \"\");\n      //       this.loadDocumentFromJSON(data[\"filename\"], s);\n      //       this.filename = data[\"filename\"];\n      //     }\n      //   }\n      // });\n      let data = await w.api.getfiledata();\n      if (data) {\n        let fname: string = data[\"filename\"];\n        // alert(\"openwith: \" + fname);\n        if (fname && data[\"data\"]) {\n          if (fname.endsWith(\".sdx\")) {\n            let s = JSON.parse(data[\"data\"]);\n            window.localStorage.setItem(SemTalkCookie.autosaveSemTalk, \"\");\n            this.loadDocumentFromJSON(data[\"filename\"], s);\n            this.filename = data[\"filename\"];\n          }\n        }\n      }\n    }\n  }\n  private decode = (s: string): string => {\n    if (this.lzutf8) {\n      return VisioRDFS.decodelzutf8(s);\n    }\n    return VisioRDFS.decode(s);\n  }\n  private encode = (s: string): string => {\n    if (this.lzutf8) {\n      return VisioRDFS.encodelzutf8(s);\n    }\n    return VisioRDFS.encode(s);\n  }\n\n  private loadBase = async (ob: ObjectBase, restored: boolean, pgid: number | undefined, _readonly: boolean, spinterface: ISPExplorer): Promise<void> => {\n    this.autosave = false;\n    const sem = new VisioRDFS(ob, this.undoManger);\n    sem.IsAutoSave = false;\n    sem.explorer = spinterface;\n    sem.showhyperlinkmarker = this.props.showhyperlinkmarker;\n\n    if (this.filename !== \"\") {\n      await this.checkReadOnly(sem, this.filename);\n      sem.readonly = this.isreadonly;\n    }\n\n    // if ((window as any).semtalk === undefined) {\n    (window as any).semtalk = sem;\n    // }\n\n    ob.User = this.getUsername();\n\n    sem.init(ob, this.props.guilanguage);\n    if (!restored) {\n      sem.patchSubTask(ob);\n    }\n    sem.initSubTask(ob);\n    if (!this.props.underlineRefinements) {\n      ob.SetModelAttribute(ModelAttribute.underlineRefinements, \"0\");\n    } else {\n      ob.SetModelAttribute(ModelAttribute.underlineRefinements, \"1\");\n    }\n\n\n    sem.site = this.props.site;\n    ob.SetModelAttribute(ModelAttribute.currentnsp, this.state.language);\n    let mxencoding = ob.GetModelAttribute(ModelAttribute.mxencoding);\n    this.lzutf8 = (mxencoding === \"1\");\n\n\n    // alert(this.props.language);\n    if (this.state.language === SemTalkLanguage.German) {\n      ob.SetModelAttribute(ModelAttribute.forder, SemTalkComposeOrder.NounVerb);\n    } else {\n      ob.SetModelAttribute(ModelAttribute.forder, SemTalkComposeOrder.VerbNoun);\n    }\n\n\n    let template = await sem.initStencils(ob, sem, this.props.guilanguage, this.sprops,\n      this.props.showBPMN, this.loadStencil);\n\n\n    let diag: ISemTalkDiagram | null = null;\n    let mx = SemTalkBaseConstant.SLMXGPagePrefix + \"0\";\n    if (pgid && pgid > -1) {\n      mx = SemTalkBaseConstant.SLMXGPagePrefix + pgid;\n    }\n    for (const d of ob.AllDiagrams()) {\n      if (d.GetValue(SemTalkBaseConstant.SLMXGAttribute) === mx) {\n        diag = d;\n        break;\n      }\n    }\n    if (diag === null && pgid) {\n      diag = ob.FindDiagramByID(pgid);\n      if (diag) {\n        mx = SemTalkBaseConstant.SLMXGPagePrefix + diag.ID;\n      }\n    }\n    if (diag === null) {\n      diag = ob.AllDiagrams()[0];\n      if (diag === undefined) {\n        diag = null;\n      }\n    }\n    if (diag !== null) {\n      this.stencil = sem.setStencil(diag);\n      if (diag.ObjectName === \"http://www.semtalk.com/mxg#Page-1\") {\n        let syn = diag.FindSynonym(this.state.language);\n\n        if (syn && syn.Name === \"Page-1\") {\n          let nn = diag.ClassOf().ID2NameNsp() + \"-1\";\n          diag.MakeSynonym(nn, this.state.language);\n        }\n        if (syn && syn.Name !== \"Page-1\" && ob.FindDiagram(syn.Name) === null) {\n          let noev = sem.noevents;\n          sem.noevents = true;\n          diag.RenameObject(syn.Name);\n          sem.noevents = noev;\n        }\n      }\n\n      (window as any).localStorage.setItem(SemTalkCookie.autosaveSemTalk, \"\");\n\n      if (diag !== null) {\n        let xml = ob.GetModelAttribute(diag.GetValue(SemTalkBaseConstant.SLMXGAttribute));\n        let decoded = this.decode(xml);\n\n        xml = this.patchEPC(decoded);\n\n        if (xml.length === 0)\n          xml = '<mxGraphModel><root><Diagram href=\"http://www.jgraph.com/\" id=\"0\" label=\"' + diag.ObjectCaption + '\" diagid=\"' + diag.ID + '\"></Diagram><Layer id=\"1\" label=\"Default Layer\"><mxCell parent=\"0\"></mxCell></Layer></root></mxGraphModel>';\n\n        sem.page = diag;\n        // sem.masters=this.state.svgshapes;\n        sem.masters = this.stencil;\n\n        refreshPage(sem, this.graphClient, this.props.context, this.props.site, this.state.mongo);\n        let cntpages = sem.base.AllDiagrams().length;\n        let ribbon = sem.getRibbon().ribbon;\n        let toolbar = sem.getRibbon().toolbar;\n\n        this.setState({\n          xmlgraph: xml,\n          diag: diag,\n          semtalk: sem,\n          stencil: this.stencil,\n          // xmlshapes: this.xmlshapes,\n          cntpages: cntpages,\n          // diaglist: lis,\n          template: template,\n          filename: this.filename,\n          isLoading: \"\",\n          ribbon: ribbon,\n          toolbar: toolbar\n        });\n        sem.updateDiaglist();\n        if (!restored) {\n          sem.initPage(diag);\n        } else {\n          let ishoriz = sem.tseditor.isHorizontal();\n          sem.horizontal = ishoriz;\n        }\n        this.patchHyperlink(sem);\n        gotoDocument(diag.ID);\n        sem.redraw();\n        if (diag.Contents().length > 0) {\n          this.zoomActual();\n        }\n      }\n    }\n    // sem.hasVector = this.hasvector;\n    // this.initVectors();\n    this.autosave = true;\n    sem.IsAutoSave = true;\n  }\n  public selectDataLang = (lang: SemTalkLanguage): void => {\n    let sem = this.state.semtalk;\n    if (sem) {\n      sem.base.SetModelAttribute(ModelAttribute.currentnsp, lang);\n      sem.redraw();\n    }\n    (window as any).localStorage.setItem(SemTalkCookie.language, lang);\n    this.setState({ \"language\": lang });\n  }\n  private patchHyperlink = (sem: IVisioRDFS) => {\n    let SLACTIVITY = sem.base.GetModelAttribute(Process_ElementName.SLActivity);\n    let activityclasses: string[] = [SLACTIVITY, BPMN_ElementName.Activity];\n    for (let slact of activityclasses) {\n      let f = sem.base.FindSystemClass(slact);\n      if (f) {\n        f.Composeable = true;\n        if (f.InstDialog) {\n          f.InstDialog.CheckAttachments = true;\n          //   console.debug(f);\n        }\n      }\n    }\n    let ff = sem.base.FindSystemClass(sem.base.GetModelAttribute(Process_ElementName.SLDataObject));\n    if (ff) {\n      if (ff.InstDialog) ff.InstDialog.CheckAttachments = true;\n    }\n  }\n  private insertSwimlane = (cell: any) => {\n    let sem = this.state.semtalk;\n    if (sem && cell) {\n      sem.insertSwimlane(cell);\n    }\n  }\n  private toggleDirection = (cell: any) => {\n    let sem = this.state.semtalk;\n    if (sem && cell) {\n      sem.toggleDirection(cell);\n      this.autoSave();\n    }\n  }\n\n  private saveCheckoutToken = async (filename: string): Promise<any | null> => {\n    let sem = this.state.semtalk as IVisioRDFS;\n    // let userName = \"\";\n    let query = \"$select=ID, Author/Title&$expand=Author/Id\" + \"&$filter=Title eq '\" + filename + \"'\";\n    let lil: any[] = [];\n    if (this.props.context) {\n      let lany: any = await sem.explorer.getListData(this.props.context, this.props.site, this.checkouttoken_templist, query);\n      lil = lany.value;\n    }\n    if (lil.length > 0) {\n      // userName = lil[0].Author.Title;\n      // if (userName === \"\") {\n      //   return sem.explorer.addListItem(this.props.context, this.props.site, this.templist, filename);\n      // } else {\n      return lil[0];\n      // }\n    } else {\n      if (this.props.context) {\n        return sem.explorer.addListItem(this.props.context, this.props.site, this.checkouttoken_templist, filename);\n      }\n    }\n    return null;\n  }\n\n  public releaseCheckoutToken = () => {\n    if (!this.props.spCheckInOut && this.state.semtalk) {\n      if (this.checkouttoken_templist && this.checkouttoken_tempid > 0) {\n        try {\n          let tdd = this.checkouttoken_tempid;\n          this.checkouttoken_tempid = 0;\n          if (this.props.context) {\n            this.state.semtalk.explorer.deleteListItem(this.props.context, this.props.site, this.checkouttoken_templist, tdd);\n          }\n        } catch (e) {\n          console.debug(\"releaseCheckoutToken:\" + e);\n        }\n      }\n    }\n  }\n\n  private checkReadOnly = async (sem: IVisioRDFS, filename: string): Promise<boolean> => {\n    // let sem = this.state.semtalk as IVisioRDFS;\n    let isopen = false;\n    let isreadonly = this.isreadonly;\n\n    if (this.props.spCheckInOut && this.props.context) {\n      let query = \"$select=FileLeafRef,ID,CheckoutUserId&$filter=FileLeafRef eq '\" + filename + \"'&$top=1\";\n      let lany: any = await sem.explorer.getListData(this.props.context, this.props.site, this.props.library, query);\n      let lil: any[] = lany.value;\n\n      if (lil !== undefined && lil.length > 0) {\n        if (lil[0].CheckoutUserId !== null) {\n          let user: any = await sem.explorer.getUserById(this.props.context, this.props.site, lil[0].CheckoutUserId);\n          if (user.UserPrincipalName !== this.props.context.pageContext.user.loginName) {\n            isreadonly = true;\n          } else {\n            isopen = true;\n            console.debug(\"Same Name: \" + user.UserPrincipalName);\n          }\n        }\n        //}))\n      }\n    }\n    this.isreadonly = isreadonly;\n    return isopen;\n\n  }\n\n  public upload = async () => {\n    const inp: any = document.createElement('input');\n    inp.setAttribute('type', `File`);\n    inp.setAttribute('className', `hidden`);\n    inp.setAttribute('multiple', false);\n    inp.setAttribute('accept', \".sdx\");\n    inp.onchange = (e: any) => {\n      this.onUploadChangeHandler(e);\n    };\n    document.body.appendChild(inp);\n    inp.click();\n    inp.parentNode.removeChild(inp);\n  }\n  private onUploadChangeHandler = (event: any) => {\n    let f = event.target.files[0];\n    console.log(f);\n    var fr = new FileReader();\n    fr.readAsText(f);\n    let filename = f.name;\n    fr.onload = async (_event) => {\n      //Both \"event.target.result\" and \"fr.result\" contain the file's contents (because \"event.target\" is === \"fr\")\n      const s = fr.result;\n      if (s) {\n        var json = JSON.parse(s.toString());\n        let sem = this.state.semtalk as IVisioRDFS;\n        const o2j = new OB2JSON();\n        const ob = new ObjectBase();\n        o2j.LoadJSON(ob, json);\n\n        sem.init(ob, this.props.guilanguage);\n        sem.patchSubTask(ob);\n        sem.initSubTask(ob);\n\n        ob.SetModelAttribute(ModelAttribute.currentnsp, this.state.language);\n        if (this.state.language === SemTalkLanguage.German) {\n          ob.SetModelAttribute(ModelAttribute.forder, SemTalkComposeOrder.NounVerb);\n        } else {\n          ob.SetModelAttribute(ModelAttribute.forder, \"1\");\n        }\n\n        let template = await sem.initStencils(ob, sem, this.props.guilanguage, this.sprops,\n          this.props.showBPMN, this.loadStencil);\n\n        for (let d of ob.AllDiagrams()) {\n          let mxg = d.GetValue(SemTalkBaseConstant.SLMXGAttribute);\n          if (!mxg) {\n            d.Delete();\n          }\n        }\n\n        let diag: ISemTalkDiagram | null = null;\n        if (diag == null) {\n          let diags = ob.AllDiagrams();\n          if (diags.length > 0) {\n            diag = diags[0];\n          }\n        }\n        if (diag != null) {\n\n          this.stencil = sem.setStencil(diag);\n          let mxencoding = ob.GetModelAttribute(ModelAttribute.mxencoding);\n          this.lzutf8 = (mxencoding === \"1\");\n          if (!this.lzutf8) {\n            for (let d of ob.AllDiagrams()) {\n              let mxg = d.GetValue(SemTalkBaseConstant.SLMXGAttribute);\n              let s2 = ob.GetModelAttribute(mxg);\n              let d2 = VisioRDFS.decode(s2);\n              if (sem.tseditor) {\n                d2 = this.patchMasters(d2, sem.tseditor);\n              }\n              ob.SetModelAttribute(mxg, VisioRDFS.encodelzutf8(d2));\n            }\n          }\n          ob.SetModelAttribute(ModelAttribute.mxencoding, \"1\");\n          this.lzutf8 = true;\n\n          const g = ob.GetModelAttribute(diag.GetValue(SemTalkBaseConstant.SLMXGAttribute));\n          let decoded = this.decode(g);\n          (window as any).localStorage.setItem(SemTalkCookie.autosaveSemTalk, \"\");\n\n          let xml = this.patchEPC(decoded);\n\n          if (sem.tseditor) sem.tseditor.resetEditor(xml, diag.ObjectCaption, diag.ID, sem.horizontal, true);\n          sem.IsAutoSave = false;\n          sem.loadDiag(diag.ID);\n          sem.page = diag;\n\n          sem.masters = this.stencil;\n\n          refreshPage(sem, this.graphClient, this.props.context, this.props.site, this.state.mongo);\n\n          sem.readonly = this.isreadonly;\n          sem.IsAutoSave = true;\n\n          gotoDocument(diag.ID);\n\n\n          // let lis: { text: string, key: number }[] = [];\n          // for (const dt of sem.base.AllDiagrams()) {\n          //   lis.push({ text: dt.ObjectCaption, key: dt.ID });\n          // }\n\n          let cntpages = sem.base.AllDiagrams().length;\n          this.setState({\n            //   semtalk: sem,\n            filename: filename,\n            xmlgraph: xml,\n            diag: diag,\n            stencil: this.stencil,\n            cntpages: cntpages,\n            // diaglist: lis,\n            template: template,\n            // xmlshapes: this.xmlshapes\n          });\n          sem.updateDiaglist();\n          this.patchHyperlink(sem);\n        }\n\n        // textArea.value = event.target.result;\n        // OR\n        //textArea.value = fr.result;\n      }\n    };\n    document.title = \"SemTalk Online: \" + filename;\n  }\n  public uploadXMLFile = async () => {\n    const inp: any = document.createElement('input');\n    inp.setAttribute('type', `File`);\n    inp.setAttribute('className', `hidden`);\n    inp.setAttribute('multiple', false);\n    inp.setAttribute('accept', \".xml\");\n    inp.onchange = (e: any) => {\n      this.onUploadXMLHandler(e);\n    };\n    document.body.appendChild(inp);\n    inp.click();\n    inp.parentNode.removeChild(inp);\n  }\n  private onUploadXMLHandler = (event: any) => {\n    let f = event.target.files[0];\n    console.log(f);\n    var fr = new FileReader();\n    fr.readAsText(f);\n    // let filename = f.name;\n    fr.onload = async (_event) => {\n      //Both \"event.target.result\" and \"fr.result\" contain the file's contents (because \"event.target\" is === \"fr\")\n      const s = fr.result;\n      if (this.state.semtalk && s) {\n        let sem = this.state.semtalk as IVisioRDFS;\n        sem.IsAutoSave = false;\n        let tb2 = new ObjectBase();\n        const o2x = new OB2XML();\n        o2x.LoadXML(tb2, s as string);\n        const o2j = new OB2JSON();\n        o2j.Merge(sem.base, tb2, this.encode, this.decode);\n        sem.IsAutoSave = true;\n        // console.debug(ob0);\n      }\n    };\n  }\n  public uploadBPMNFile = async () => {\n    const inp: any = document.createElement('input');\n    inp.setAttribute('type', `File`);\n    inp.setAttribute('className', `hidden`);\n    inp.setAttribute('multiple', false);\n    inp.setAttribute('accept', \".bpmn\");\n    inp.onchange = (e: any) => {\n      let stbpmnprops: any = {};\n      // stbpmnprops['context'] = this.props.context;\n      stbpmnprops['semtalk'] = this.state.semtalk;\n      // stbpmnprops['graphClient'] = this.props.graphClient;\n      // stbpmnprops['library'] = this.props.library;\n      // stbpmnprops['templates'] = this.props.templates;\n      // stbpmnprops['mongo'] = this.props.mongo;\n      let stbpmnimport: SemTalkBPMNImport = new SemTalkBPMNImport(stbpmnprops);\n      stbpmnimport.incomingfileAuto(e);\n    };\n    document.body.appendChild(inp);\n    inp.click();\n    inp.parentNode.removeChild(inp);\n  }\n\n  public downloadBPMNFile = async () => {\n    if (this.state.semtalk) {\n      const tb = this.state.semtalk.base;\n      let isproc = tb.FindDiagramType(tb.GetModelAttribute(Process_ElementName.SLProc));\n      if (isproc) {\n        let stbpmnprops: any = {};\n        // stbpmnprops['context'] = this.props.context;\n        stbpmnprops['semtalk'] = this.state.semtalk;\n        // stbpmnprops['graphClient'] = this.props.graphClient;\n        // stbpmnprops['library'] = this.props.library;\n        // stbpmnprops['templates'] = this.props.templates;\n        // stbpmnprops['mongo'] = this.props.mongo;\n        let stbpmnexport: SemTalkBPMNExport = new SemTalkBPMNExport(stbpmnprops);\n        stbpmnexport.ExportBPMN();\n      }\n    }\n  }\n\n  public downloadWordFile = async () => {\n    if (this.state.semtalk) {\n      const tb = this.state.semtalk.base;\n      let isproc = tb.FindDiagramType(tb.GetModelAttribute(Process_ElementName.SLProc));\n      if (isproc) {\n        let stwordprops: any = {};\n        // stbpmnprops['context'] = this.props.context;\n        stwordprops['semtalk'] = this.state.semtalk;\n        stwordprops['graphClient'] = this.props.graphClient;\n        // stbpmnprops['library'] = this.props.library;\n        // stbpmnprops['templates'] = this.props.templates;\n        // stbpmnprops['mongo'] = this.props.mongo;\n        // let stwordexport: SemTalkWordExport = new SemTalkWordExport(stwordprops);\n        // stwordexport.ExportWord();\n      }\n    }\n  }\n\n  private updateSVG(ob: IObjectBase) {\n    let sem = this.state.semtalk;\n    if (sem) {\n      for (let m of ob.AllModelAttributes()) {\n        if (m.startsWith(SemTalkBaseConstant.SLSVGPagePrefix)) {\n          ob.SetModelAttribute(m, undefined);\n        }\n      }\n      for (let d of ob.AllDiagrams()) {\n        this.gotoPage(d.ID);\n        let svg = sem.tseditor.exportSVG(sem.graph as mxGraph);\n        // let encoded = this.encode(svg);\n        let encoded = VisioRDFS.encode(svg);\n        let modattr: string = SemTalkBaseConstant.SLSVGPagePrefix + String(d.ID);\n        ob.SetModelAttribute(modattr, encoded);\n        ob.SetModelAttribute(SemTalkBaseConstant.SLSVGPagePrefix + \"Page\" + String(d.ID), d.ObjectName);\n        d.SetValue(SemTalkBaseConstant.SLSVGAttribute, modattr);\n      }\n    }\n\n  }\n  public downloadXMLFile = () => {\n    if (this.state.semtalk) {\n      const ob = this.state.semtalk.base;\n      this.updateSVG(ob);\n      const o2x = new OB2XML();\n      let xml: string = o2x.SaveXML(ob);\n      let filename: string = ob.GetModelAttribute(\"modname\");\n      if (filename.length === 0) {\n        filename = \"export\";\n      } else {\n        filename = filename.replace(\".sdx\", \".semtalk\");\n      }\n      filename += \".xml\";\n      const url = window.URL.createObjectURL(new Blob([xml]),);\n      const link: any = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', filename,);\n      document.body.appendChild(link);\n      link.click();\n      link.parentNode.removeChild(link);\n    }\n  }\n\n  public download = () => {\n    let sem = this.state.semtalk;\n    if (sem) {\n      let filename = sem.base.GetModelAttribute(ModelAttribute.modname);\n      if (!filename) filename = \"filename\";\n      if (!filename.endsWith(\".sdx\")) {\n        filename = filename + \".sdx\";\n      }\n      if (filename.endsWith(\".stx\")) {\n        filename = filename.replace(\".stx\", \".sdx\");\n      }\n      if (!filename.endsWith(\".sdx\")) {\n        filename = filename + \".sdx\";\n      }\n      this.saveCurrentGraph();\n      const o2j = new OB2JSON();\n      let body = o2j.SaveJSON(sem.base);\n      if (sem.page)\n        body.currentpage = sem.page.ID;\n      if (sem.tempId)\n        body.tempId = sem.tempId;\n      const blob: string = JSON.stringify(body);\n      const url = window.URL.createObjectURL(\n        new Blob([blob]),\n      );\n      const link: any = document.createElement('a');\n      link.href = url;\n      link.setAttribute(\n        'download',\n        filename,\n      );\n      document.body.appendChild(link);\n      link.click();\n      link.parentNode.removeChild(link);\n    }\n  }\n  private mergeDocument = async (filename: string) => {\n    let sem = this.state.semtalk as IVisioRDFS;\n    const ob = new ObjectBase();\n    let s: any = {};\n    if (this.state.mongo.usemongo) {\n      let res = await mgGetDocument(this.state.mongo, this.state.mongo.documents, filename);\n      if (res) {\n        s = res;\n      }\n    } else {\n    }\n    if ((!s || s[\"ObjectType\"] === undefined) && this.props.context) {\n      let txt = \"\";\n      const url: string = this.props.site + \"/\" + this.props.library + \"/\" + filename;\n      try {\n        txt = await sem.explorer.getTXT(this.props.context, url);\n        s = JSON.parse(txt);\n        console.debug(\"Merging: \" + url);\n        //  console.debug(s);\n      } catch (e) {\n        console.debug(\"mergedocument. cannot parse doc to JSON!!\" + e);\n      }\n    }\n\n    const o2j = new OB2JSON();\n    o2j.LoadJSON(ob, s);\n\n    sem.noevents = true;\n    sem.patchSubTask(ob);\n    let ob0 = o2j.Merge(sem.base, ob, this.encode, this.decode);\n    console.debug(ob0);\n    sem.noevents = false;\n    sem.updateDiaglist();\n    let diags = sem.base.AllDiagrams();\n    let pg = diags[diags.length - 1];\n    if (pg.ClassOf().ObjectName === sem.base.GetModelAttribute(Process_ElementName.SLProc)) {\n      sem.tseditor.enableSwimlanes(sem.horizontal, false);\n    }\n    this.loadPage(pg.ID, sem);\n    this.setState({ cntpages: diags.length });\n  }\n  private loadDocument = async (filename: string) => {\n    // this.autosave = false;\n    this.filename = filename;\n    if (this.isreadonly === false) {\n      //  this.checkInDocument();\n      this.releaseCheckoutToken();\n    }\n    let sem = this.state.semtalk as IVisioRDFS;\n\n    let s: any = {};\n    this.setState({ isLoading: sem.getResStrListener(\"STRDLGCMDOP\") + \" \" + filename });\n    const usemongo = this.state.mongo.usemongo;\n    this.ischeckedout2me = false;\n    if (usemongo) {\n      let res = await mgGetDocument(this.state.mongo, this.state.mongo.documents, filename);\n      if (res) {\n        s = res;\n        if (this.state.mongo.usemongo) {\n          let cres = await mgGetValue(this.state.mongo, this.state.mongo.dbname, this.state.mongo.documents,\n            this.filename, \"CheckedOutDate\");\n          if (cres) {\n            let m = Date.parse(cres);\n            // if (m > sessionstatus[\"timeleft\"]) {\n            let u1 = await mgGetValue(this.state.mongo, this.state.mongo.dbname, this.state.mongo.documents,\n              this.filename, \"CheckedOutUser\");\n            let u = this.getUsername();\n            if (u1 !== u) {\n              this.isreadonly = true;\n              document.title = \"SemTalk Online (RO): \" + this.filename;\n              this.alert(this.filename + \" is checked out to \" + u1 + \" at \" + new Date(m), MessageBarType.severeWarning);\n            } else {\n              document.title = \"SemTalk Online (CO): \" + this.filename;\n              this.ischeckedout2me = true;\n            }\n            // }\n          }\n        }\n        console.debug(\"Loading: \" + this.props.model);\n      }\n    } else {\n    }\n    if ((!s || s[\"ObjectType\"] === undefined) && this.props.context) {\n      let txt = \"\";\n      const url: string = this.props.site + \"/\" + this.props.library + \"/\" + filename;\n      try {\n        txt = await sem.explorer.getTXT(this.props.context, url);\n        s = JSON.parse(txt);\n        console.debug(\"Loading: \" + url);\n        //  console.debug(s);\n      } catch (e) {\n        console.debug(\"loaddocument. cannot parse doc to JSON!!\" + e);\n      }\n    }\n    await this.loadDocumentFromJSON(filename, s);\n  }\n  private loadDocumentFromJSON = async (filename: string, s: any) => {\n    let sem = this.state.semtalk as IVisioRDFS;\n    let isopen = await this.checkReadOnly(sem, filename);\n\n    this.beginTransaction(\"\", \"loadDocument\");\n    const ob = new ObjectBase();\n    const o2j = new OB2JSON();\n    o2j.LoadJSON(ob, s);\n\n    let m = ob.GetModelAttribute(ModelAttribute.modname);\n    if (m.length === 0) {\n      ob.SetModelAttribute(ModelAttribute.modname, filename);\n    }\n\n    sem.init(ob, this.props.guilanguage);\n\n    // Dies ist die fragliche Stelle soll initSubTask immer beim laden gerufen werden?\n    // 26.1.22: Ja weil sonst die Overridables nicht auf die aktuelle Vorlage gesetzt werden\n    sem.initSubTask(ob);\n\n    ob.SetModelAttribute(ModelAttribute.currentnsp, this.state.language);\n    if (this.state.language === SemTalkLanguage.German) {\n      ob.SetModelAttribute(ModelAttribute.forder, SemTalkComposeOrder.NounVerb);\n    } else {\n      ob.SetModelAttribute(ModelAttribute.forder, \"1\");\n    }\n    let template = await sem.initStencils(ob, sem, this.props.guilanguage,\n      this.sprops, this.props.showBPMN, this.loadStencil);\n\n    let diag: ISemTalkDiagram | null = null;\n    if (s.currentpage) {\n      diag = ob.FindDiagramByID(s.currentpage);\n    }\n    if (diag === null) {\n      let diags = ob.AllDiagrams();\n      if (diags.length > 0) {\n        diag = diags[0];\n      }\n    }\n    if (diag !== null) {\n      this.stencil = sem.setStencil(diag);\n      sem.page = diag;\n      let mxencoding = ob.GetModelAttribute(ModelAttribute.mxencoding);\n      this.lzutf8 = (mxencoding === \"1\");\n      if (!this.lzutf8) {\n        for (let d of ob.AllDiagrams()) {\n          let mxg = d.GetValue(SemTalkBaseConstant.SLMXGAttribute);\n          let s2 = ob.GetModelAttribute(mxg);\n          if (s2) {\n            let d2 = VisioRDFS.decode(s2);\n            if (sem.tseditor) {\n              d2 = this.patchMasters(d2, sem.tseditor);\n            }\n            ob.SetModelAttribute(mxg, VisioRDFS.encodelzutf8(d2));\n          } else {\n            d.Delete();\n          }\n        }\n      }\n      ob.SetModelAttribute(ModelAttribute.mxencoding, \"1\");\n      this.lzutf8 = true;\n\n\n      const g = ob.GetModelAttribute(diag.GetValue(SemTalkBaseConstant.SLMXGAttribute));\n      let decoded = this.decode(g);\n      (window as any).localStorage.setItem(SemTalkCookie.autosaveSemTalk, \"\");\n\n      let xml = this.patchEPC(decoded);\n\n      sem.tseditor.resetEditor(xml, diag.ObjectCaption, diag.ID, sem.horizontal, false);\n      let ishoriz = sem.tseditor.isHorizontal();\n      sem.horizontal = ishoriz;\n\n      // sem.loadDiag(diag.ID);\n      sem.masters = this.stencil;\n\n      refreshPage(sem, this.graphClient, this.props.context, this.props.site, this.state.mongo);\n\n      sem.readonly = this.isreadonly;\n\n      gotoDocument(diag.ID);\n\n      // let lis: { text: string, key: number }[] = [];\n      // for (const dt of sem.base.AllDiagrams()) {\n      //   lis.push({ text: dt.ObjectCaption, key: dt.ID });\n      // }\n      let cntpages = sem.base.AllDiagrams().length;\n      let ribbon = sem.getRibbon().ribbon;\n      let toolbar = sem.getRibbon().toolbar;\n\n      this.setState({\n        //   semtalk: sem,\n        filename: filename,\n        xmlgraph: xml,\n        diag: diag,\n        stencil: this.stencil,\n        cntpages: cntpages,\n        // diaglist: lis,\n        template: template,\n        isLoading: \"\",\n        ribbon: ribbon,\n        toolbar: toolbar\n        // xmlshapes: this.xmlshapes\n      });\n      sem.updateDiaglist();\n\n      this.patchHyperlink(sem);\n\n      this.endTransaction(\"\", \"loadDocument\");\n      if (sem) {\n        sem.ismodified = false;\n      }\n\n      if (this.isreadonly) {\n        document.title = \"SemTalk Online (RO): \" + this.filename;\n      } else {\n        if (this.ischeckedout2me) {\n          document.title = \"SemTalk Online (CO): \" + this.filename;\n        } else {\n          document.title = \"SemTalk Online: \" + this.filename;\n        }\n      }\n\n      if (!this.isreadonly && this.props.spCheckInOut && !isopen && this.props.context) {\n        let x = await sem.explorer.spCheckOutDocument(this.props.context, this.props.site, this.siteRelativeURL() + \"/\" + this.props.library, filename);\n        console.debug(\" SP Ausgecheckt: \" + x);\n      }\n      if (!this.isreadonly && !this.props.spCheckInOut && !isopen) {\n        try {\n          let checkoutToken = await this.saveCheckoutToken(filename);\n          if (checkoutToken && checkoutToken[\"id\"]) {\n            this.checkouttoken_tempid = checkoutToken['id'];\n            console.debug(\"checkoutToken: \" + this.checkouttoken_tempid);\n            sem.tempId = this.checkouttoken_tempid;\n            console.debug(\"Temp Ausgecheckt: \" + filename);\n          }\n        } catch (ex) {\n          this.checkouttoken_tempid = 0;\n          console.debug(\"Error failed to check out properly.\");\n        }\n        console.debug(\"loadDocument\" + this.checkouttoken_tempid);\n      }\n    }\n  }\n  private createDocument = async (sem: IVisioRDFS, template: string) => {\n    // this.autosave = false;\n    this.beginTransaction(\"\", \"createDocument\");\n    const ob = new ObjectBase();\n    ob.SetModelAttribute(ModelAttribute.mxencoding, \"1\");\n    this.lzutf8 = true;\n\n    let s: any = {};\n    if (this.state.mongo.usemongo) {\n      let res = await mgGetDocument(this.state.mongo, this.state.mongo.templates, template);\n      if (res) {\n        s = res;\n      }\n    } else {\n    }\n    if ((!s || s[\"ObjectType\"] === undefined) && this.props.context) {\n      const url: string = this.props.site + \"/\" + this.props.templates + \"/\" + template;\n      try {\n        let txt = await sem.explorer.getTXT(this.props.context, url);\n        s = JSON.parse(txt);\n        // console.debug(s);\n      } catch (e) {\n        console.debug(e);\n      }\n      console.debug(\"Loading: \" + url);\n    }\n    if (!s || s[\"ObjectType\"] === undefined) {\n      let t2 = template;\n      try {\n        let response = await fetch(\"./Templates/\" + t2);\n        let txt: string = await response.text();\n        s = JSON.parse(txt);\n      } catch (e) {\n        console.debug(e);\n      }\n    }\n\n    const o2j = new OB2JSON();\n    o2j.LoadJSON(ob, s);\n    // sem.hasVector = this.hasvector;\n    // this.initVectors();\n\n    ob.User = this.getUsername();\n    sem.init(ob, this.props.guilanguage);\n    sem.patchSubTask(ob);\n    sem.initSubTask(ob);\n    ob.SetModelAttribute(ModelAttribute.currentnsp, this.state.language);\n    if (this.state.language === SemTalkLanguage.German) {\n      ob.SetModelAttribute(ModelAttribute.forder, SemTalkComposeOrder.NounVerb);\n    } else {\n      ob.SetModelAttribute(ModelAttribute.forder, SemTalkComposeOrder.VerbNoun);\n    }\n\n    await sem.initStencils(ob, sem, this.props.guilanguage,\n      this.sprops, this.props.showBPMN, this.loadStencil);\n\n    let diag: ISemTalkDiagram | null = null;\n    let diags = ob.AllDiagrams();\n    if (diags.length > 0) {\n      diag = diags[0];\n      if (diag !== null) {\n        this.stencil = sem.setStencil(diag);\n        if (diag.ObjectName === \"http://www.semtalk.com/mxg#Page-1\") {\n          let nn = diag.ClassOf().ID2NameNsp() + \"-1\";\n          diag.MakeSynonym(nn, this.state.language);\n        }\n\n        sem.page = diag;\n        const g = ob.GetModelAttribute(diag.GetValue(SemTalkBaseConstant.SLMXGAttribute));\n        let decoded = this.decode(g);\n        (window as any).localStorage.setItem(SemTalkCookie.autosaveSemTalk, \"\");\n\n        let xml = this.patchEPC(decoded);\n\n        if (sem.tseditor) {\n          sem.tseditor.resetEditor(decoded, diag.ObjectCaption, diag.ID, sem.horizontal, true);\n        }\n        sem.masters = this.stencil;\n\n        let cntpages = sem.base.AllDiagrams().length;\n        sem.initPage(diag);\n        sem.readonly = false;\n        let ribbon = sem.getRibbon().ribbon;\n        let toolbar = sem.getRibbon().toolbar;\n\n        this.setState({\n          semtalk: sem,\n          filename: template,\n          xmlgraph: xml,\n          diag: diag,\n          stencil: this.stencil,\n          cntpages: cntpages,\n          template: template,\n          ribbon: ribbon,\n          toolbar: toolbar\n        });\n        gotoDocument(diag.ID);\n        sem.updateDiaglist();\n      }\n    }\n    this.endTransaction(\"\", \"createDocument\");\n    document.title = \"SemTalk Online: \" + template;\n\n  }\n\n  public gotoPage = (diagid: number): void => {\n    this.autoSave();\n    gotoDocument(diagid);\n  }\n  public componentWillUnmount() {\n    removeCallBack(this);\n    this.mounted = false;\n  }\n  public handleEvent = async (m: any): Promise<void> => {\n    var mstr = JSON.stringify(m);\n    this.eventListener({ data: mstr });\n  }\n  private eventListener = (e: any): void => {\n    if (!this.mounted) {\n      return;\n    }\n    let md: any;\n    try {\n      md = JSON.parse(e.data);\n      var mtype = md.type;\n    } catch (e) {\n      return;\n    }\n    switch (mtype) {\n      case SemTalkNavigationEvent.gotoDocument: {\n        if (this.state.diag === null || md.diagid !== this.state.diag.ID) {\n          // this.resetState();\n          if (this.state.semtalk) {\n            this.loadPage(md.diagid, this.state.semtalk);\n          }\n        }\n        break;\n      }\n      case SemTalkNavigationEvent.gotoNode: {\n        if (this.state.semtalk) {\n          if (this.state.semtalk.page && this.state.semtalk.page.ID &&\n            this.state.semtalk.page.ID !== md.diagid) {\n            this.loadPage(md.diagid, this.state.semtalk);\n          }\n          this.state.semtalk.getMessage(e);\n        }\n        break;\n      }\n      case SemTalkNavigationEvent.alert: {\n        this.alert(md.msg, md.type);\n        break;\n      }\n    }\n  }\n\n  private loadStencil = async (template: string, url: string, spinterface: ISPExplorer): Promise<SemTalkStencil> => {\n    if (this.state.mongo.usemongo) {\n      let r: any = await mgGetDocument(this.state.mongo, this.state.mongo.stencils, template);\n      if (r === null) return [];\n      if (r) {\n        let s = r;\n        return s[\"masters\"];\n      }\n      return [];\n    } else {\n      if (this.props.context) {\n        // const url: string = this.props.site + \"/Support/\" + this.properties.stencil + \"-shapes.stx\";\n        let txt = await spinterface.getTXT(this.props.context, url);\n        if (txt === null) {\n          return [];\n        }\n        try {\n          let r: any = JSON.parse(txt);\n          // await mgSaveDocument(this.defaulturl, \"Templates\", template, r);\n          if (r === null) return [];\n          return r[\"masters\"];\n          //  this.svgshapes = this.svgshapes[\"masters\"];\n        } catch (e) {\n          console.debug(e);\n          return [];\n        }\n      } else {\n        try {\n          let response = await fetch(\"./Templates/\" + template);\n          let txt: string = await response.text();\n          let r = JSON.parse(txt);\n          if (r === null) return [];\n          return r[\"masters\"];\n        } catch (e) {\n          console.debug(e);\n        }\n        return [];\n      }\n    }\n  }\n\n  // private loadXMLMasters = async (template: string, url: string, spinterface: ISPExplorer): Promise<HTMLCollection> => {\n  //   let txt: string = \"\";\n\n  //   if (this.state.mongo.usemongo) {\n  //     let res = await mgGetDocument(this.state.mongo, this.state.mongo.stencils, template);\n  //     if (res) {\n  //       txt = res;\n  //     }\n  //   } else {\n  //     if (this.props.context) {\n  //       txt = await spinterface.getTXT(this.props.context, url);\n  //     }\n  //   }\n  //   if (txt.length > 0) {\n  //     try {\n  //       const oParser = new DOMParser();\n  //       const doc = oParser.parseFromString(txt, \"application/xml\");\n  //       return doc.documentElement.children;\n  //     } catch (e) {\n  //       console.debug(e);\n  //     }\n  //   }\n  //   return new HTMLCollection();\n  // }\n  private patchEPC = (xml: string): string => {\n    // if (this.stencil !== undefined) {\n    //   this.stencil.forEach((item) => {\n    //     let name: string = item.name;\n    //     // let key: string = item.key;\n    //     let logo: string = item.logo;\n\n    //     let s1: string = 'style=\"' + name + '\"';\n    //     let s1a: string = 'style=\"' + name + '.[0-9]+\"';\n    //     let s1b: string = 'style=\"' + name.replace(\" \", \"\") + '\"';\n    //     let s1c: string = 'style=\"' + name.replace(\" \", \"\") + '.[0-9]+\"';\n    //     let s2: string = 'style=\"shape=image;html=1;whiteSpace=wrap;image=' + logo + '\"';\n    //     if (xml && name !== \"Dynamic connector\") {\n    //       xml = xml.replace(new RegExp(s1, 'g'), s2);\n    //       xml = xml.replace(new RegExp(s1a, 'g'), s2);\n    //       xml = xml.replace(new RegExp(s1b, 'g'), s2);\n    //       xml = xml.replace(new RegExp(s1c, 'g'), s2);\n    //      }\n    //   });\n    //   xml = xml.replace(/[\\r\\n]+/g, \"\");\n    //   const oParser = new DOMParser();\n    //   const doc = oParser.parseFromString(xml, \"application/xml\");\n    //   const oSerializer = new XMLSerializer();\n    //   xml = oSerializer.serializeToString(doc);\n    // }\n    return xml;\n  }\n  public GetShapeStyle = (key: string, shapeType: string): { style: string, isedge: boolean } => {\n    let sem = this.state.semtalk;\n    if (sem) {\n      return sem.GetShapeStyle(key, shapeType);\n    } else {\n      return { style: \"Circle\", isedge: false };\n    }\n  }\n  private patchMasters = (xml: string, _tseditor: ITSEditor): string => {\n    // let s1: string = 'style=\"' + 'Task' + '\"';\n    // let s2 = 'style=\"' + \"shape=bpmntask;rounded=1;whiteSpace=wrap;resize=0;html=1;strokeWidth=2;\"+ '\"'\n    // xml = xml.replace(new RegExp(s1, 'g'), s2);\n    //\n    if (this.stencil !== undefined) {\n      // this.stencil.forEach((item) => {\n      for (let itemid in this.stencil) {\n        let item = this.stencil[itemid];\n        let name: string = item.name;\n        if (name === \"Start Event\")\n          name = \"Event\";\n        let key: string = item.key;\n        let shapetype: string = item.type;\n        //     // let key: string = item.key;\n        //     let logo: string = item.logo;\n\n        let s1: string = 'style=\"' + name + '\"';\n        // let s1a: string = 'style=\"' + key + '\"';\n        // let s2: string = 'shapeName=\"' + item.name + '\"; shapeKey=\"' + item.key + '\"; style=\"' + tseditor.getShapeStyle(name, shapetype)[\"style\"] + '\"';\n        let s2: string = 'style=\"' + this.GetShapeStyle(key, shapetype)[\"style\"] + '\"';\n        let s1a: string = 'style=\"' + name + '.[0-9]+\"';\n        //     let s1b: string = 'style=\"' + name.replace(\" \", \"\") + '\"';\n        //     let s1c: string = 'style=\"' + name.replace(\" \", \"\") + '.[0-9]+\"';\n        //     let s2: string = 'style=\"shape=image;html=1;whiteSpace=wrap;image=' + logo + '\"';\n        if (xml && name) {\n          if (s1 !== s2) {\n            xml = xml.replace(new RegExp(s1, 'g'), s2);\n          }\n          xml = xml.replace(new RegExp(s1a, 'g'), s2);\n        }\n        // if (s1a !== s2) {\n        //   xml = xml.replace(new RegExp(s1, 'g'), s2);\n        // }\n        //       xml = xml.replace(new RegExp(s1a, 'g'), s2);\n        //       xml = xml.replace(new RegExp(s1b, 'g'), s2);\n        //       xml = xml.replace(new RegExp(s1c, 'g'), s2);\n      }\n      let s1e: string = 'style=\"' + 'DynamicConnector' + '\"';\n      let s2e: string = 'style=\"' + 'edgeStyle=elbowEdgeStyle;rounded=1;shape=flexArrow;endArrow=classic;html=1;fillColor=#ffffff;strokeWidth=2' + '\"';\n      xml = xml.replace(new RegExp(s1e, 'g'), s2e);\n      let s1d: string = 'style=\"' + 'DynamischerVerbinder' + '\"';\n      xml = xml.replace(new RegExp(s1d, 'g'), s2e);\n      xml = xml.replace(/[\\r\\n]+/g, \"\");\n      const oParser = new DOMParser();\n      const doc = oParser.parseFromString(xml, \"application/xml\");\n      const oSerializer = new XMLSerializer();\n      xml = oSerializer.serializeToString(doc);\n    }\n    return xml;\n  }\n\n  // private initStencils = async (ob: IObjectBase, sem: IVisioRDFS): Promise<string> => {\n  //   let template = ob.GetModelAttribute(ModelAttribute.Template);\n  //   let slproc = ob.GetModelAttribute(Process_ElementName.SLProc);\n  //   if (template === \"semtalk.vst\") {\n  //     if (slproc === \"Business Process Diagram\") template = \"bpmn20-2016.vst\";\n  //     if (slproc === \"eEPC\") template = \"epc.vst\";\n  //     ob.SetModelAttribute(ModelAttribute.Template, template);\n  //   }\n  //   template = template.replace(\".vstx\", \"\");\n  //   template = template.replace(\".vst\", \"\");\n  //   let stencil = template;\n  //   if (!template.endsWith(\".stx\")) template += \".stx\";\n\n  //   // this.xmlshapes = [];\n\n  //   this.CLASS_STENCIL = [];\n  //   this.CLASS_STENCIL.push(...CLASS_STENCIL);\n  //   this.GENERIC_STENCIL = [];\n  //   this.GENERIC_STENCIL.push(...GENERIC_STENCIL);\n\n\n  //   let procstencil = this.CUSTOMPROC_STENCIL;\n  //   const stencilurl: string = this.props.site + \"/\" + this.props.templates + \"/\" + stencil + \"-shapes.ssx\";\n  //   let isbpmn = template.indexOf(\"bpmn\") > -1;\n  //   if (isbpmn) {\n  //      this.BPMN_STENCIL = [];\n  //     this.BPMN_STENCIL.push(...BPMN_STENCIL0);\n  //     if (this.props.showBPMN) {\n  //       this.BPMN_STENCIL.push(...BPMN_STENCIL2);\n  //     } else {\n  //       this.BPMN_STENCIL.push(...BPMN_STENCIL1);\n  //     }\n  //     procstencil = this.BPMN_STENCIL;\n  //   }\n  //   let isepc = template.indexOf(\"epc.\") > -1;\n  //   if (isepc) {\n  //     this.EPC_STENCIL = [];\n  //     this.EPC_STENCIL.push(...EPC_STENCIL0);\n  //     procstencil = this.EPC_STENCIL;\n  //   }\n  //   if (!isbpmn && !isepc && sem) {\n  //     this.CUSTOMPROC_STENCIL = await this.loadStencil(stencil + \"-shapes.ssx\", stencilurl, sem.explorer);\n  //     procstencil = this.CUSTOMPROC_STENCIL;\n  //   }\n  //   // private support_lib = this.props.site + \"/Support\";\n\n  //   let support_lib = this.props.site + \"/\" + this.props.support;\n  //   if (procstencil) {\n  //     for (let mst of procstencil) {\n  //       if (mst[\"logo\"]) {\n  //         let l = mst[\"logo\"];\n  //         if (l.indexOf(\"/images\") === 0) {\n  //           let cdn = this.props.cdn;\n  //           let mtyp = mst[\"type\"];\n  //           if (l.indexOf(\".svg\") > -1 && mtyp !== \"general\" && mtyp !== \"svg\" && mtyp !== \"png\" && mtyp !== \"image\" &&\n  //             cdn.length > 0 && this.props.context) {\n  //             if (cdn === support_lib + \"/images/symbols/\")\n  //               cdn = \"https://semtalkportal45.azurewebsites.net/\";\n  //             let l0 = l.replace(\"/images\", cdn);\n  //             mst[\"logo\"] = l0;\n  //           } else {\n  //             mst[\"logo\"] = support_lib + l;\n  //           }\n  //         } else {\n  //           // let l1 = support_lib + \"/images/stencils/\";\n  //           // let l0 = mst[\"logo\"].replace(\"https://semtalkportal45.azurewebsites.net/stencils/\", l1);\n  //           // mst[\"logo\"] = l0;\n  //         }\n\n  //         let sc = ob.FindSystemClass(mst[\"name\"]);\n  //         if (sc) {\n  //           mst[\"label\"] = sc.ID2NameNspLan(Code2Language(this.props.guilanguage));\n  //         } else {\n  //           mst[\"label\"] = mst[\"name\"];\n  //         }\n  //       }\n  //     }\n  //   }\n  //   for (let mst of this.CLASS_STENCIL) {\n  //     if (mst[\"logo\"]) {\n  //       let l = mst[\"logo\"];\n  //       if (l.indexOf(\"/images\") === 0) {\n  //         let cdn = this.props.cdn;\n  //         let mtyp = mst[\"type\"];\n  //         if (l.indexOf(\".svg\") > -1 && mtyp !== \"general\" && mtyp !== \"svg\" && mtyp !== \"png\" && mtyp !== \"image\" &&\n  //           cdn.length > 0 && this.props.context) {\n  //           if (cdn === support_lib + \"/images/symbols/\")\n  //             cdn = \"https://semtalkportal45.azurewebsites.net/\";\n  //           let l0 = l.replace(\"/images\", cdn);\n  //           mst[\"logo\"] = l0;\n  //         } else {\n  //           mst[\"logo\"] = support_lib + l;\n  //         }\n  //       }\n  //       let sc = ob.FindSystemClass(mst[\"name\"]);\n  //       if (sc) {\n  //         mst[\"label\"] = sc.ID2NameNspLan(Code2Language(this.props.guilanguage));\n  //       } else {\n  //         if (sem) {\n  //           mst[\"label\"] = sem.getResStrListener(mst[\"label\"], this.props.guilanguage);\n  //         } else {\n  //         }\n  //       }\n  //     }\n  //   }\n  //   for (let mst of this.GENERIC_STENCIL) {\n  //     if (mst[\"logo\"]) {\n  //       let l = mst[\"logo\"];\n  //       if (l.indexOf(\"/images\") === 0) {\n  //         let cdn = this.props.cdn;\n  //         let mtyp = mst[\"type\"];\n  //         if (l.indexOf(\".svg\") > -1 && mtyp !== \"general\" && mtyp !== \"svg\" && mtyp !== \"png\" && mtyp !== \"image\" &&\n  //           cdn.length > 0 && this.props.context) {\n  //           if (cdn === support_lib + \"/images/symbols/\")\n  //             cdn = \"https://semtalkportal45.azurewebsites.net/\";\n  //           let l0 = l.replace(\"/images\", cdn);\n  //           mst[\"logo\"] = l0;\n  //         } else {\n  //           mst[\"logo\"] = support_lib + l;\n  //         }\n  //       } else {\n  //       }\n  //       let sc = ob.FindSystemClass(mst[\"name\"]);\n  //       if (sc) {\n  //         mst[\"label\"] = sc.ID2NameNspLan(Code2Language(this.props.guilanguage));\n  //       } else {\n  //         if (sem) {\n  //           mst[\"label\"] = sem.getResStrListener(mst[\"label\"], this.props.guilanguage);\n  //         } else {\n  //         }\n  //       }\n  //     }\n  //   }\n  //   return template;\n  // }\n  // private setStencil = (diag: ISemTalkDiagram): any[] => {\n  //   let dclassname = diag.ClassOf().ObjectName;\n  //   const ob = diag.ObjectBase;\n  //   switch (dclassname) {\n  //     case SemTalkBaseConstant.SLGeneric: {\n  //       this.stencil = this.GENERIC_STENCIL;\n  //       break;\n  //     }\n  //     case ob.GetModelAttribute(Process_ElementName.SLProc): {\n  //       this.stencil = this.CUSTOMPROC_STENCIL;\n  //       let template = ob.GetModelAttribute(ModelAttribute.Template).toLowerCase();\n  //       if (template.indexOf(\"bpmn\") > -1) {\n  //         this.stencil = this.BPMN_STENCIL;\n  //       }\n  //       if (template.indexOf(\"epc.\") > -1) {\n  //         this.stencil = this.EPC_STENCIL;\n  //       }\n  //       break;\n  //     }\n  //     default: {\n  //       let isclass = diag.ClassOf().IsClass;\n  //       if (isclass) {\n  //         this.stencil = this.CLASS_STENCIL;\n  //         // return this.stencil;\n  //       } else {\n  //         this.stencil = this.CUSTOMPROC_STENCIL;\n  //       }\n  //     }\n  //   }\n  //   return this.stencil;\n  // }\n  private loadPage = async (oid: number, semtalk: IVisioRDFS): Promise<void> => {\n    if (semtalk) {\n      this.autosave = false;\n      semtalk.IsAutoSave = false;\n      const ob = semtalk.base;\n      let diag = ob.FindDiagramByID(oid) as ISemTalkDiagram;\n      this.stencil = semtalk.setStencil(diag);\n\n      semtalk.masters = this.stencil;\n      if (semtalk.tseditor) {\n        // semtalk.tseditor.configShapes(semtalk.tseditor.graph, this.stencil, this.xmlshapes);\n        semtalk.tseditor.configShapes(semtalk.tseditor.graph, this.stencil);\n        semtalk.tseditor.sidebar.LoadStencil(this.stencil);\n\n      }\n      let mxg = diag.GetValue(SemTalkBaseConstant.SLMXGAttribute);\n      let xml = ob.GetModelAttribute(mxg);\n      if (xml === undefined) {\n        xml = \"\";\n      }\n      if (xml.length > 0) {\n        let decoded = this.decode(xml);\n        xml = this.patchEPC(decoded);\n      }\n      // console.debug(xml);\n      if (semtalk.tseditor) {\n        semtalk.page = diag;\n        semtalk.tseditor.resetEditor(xml, diag.ObjectCaption, diag.ID, semtalk.horizontal, false);\n      }\n\n      refreshPage(semtalk, this.graphClient, this.props.context, this.props.site, this.state.mongo);\n\n      this.setState({\n        semtalk: semtalk,\n        xmlgraph: xml,\n        diag: diag\n      });\n      semtalk.page = null;\n      semtalk.loadDiag(oid);\n      semtalk.IsAutoSave = true;\n      this.autosave = true;\n    }\n  }\n\n  public doubleClick = (_cell: any): void => {\n  }\n  public setEditor = (tseditor: ITSEditor): void => {\n    let sem = this.state.semtalk;\n    if (sem && this.stencil) {\n      // console.debug(tseditor.graph);\n      sem.graph = tseditor.graph;\n      sem.tseditor = tseditor;\n      sem.base.User = this.getUsername();\n\n      // sem.tseditor.resetEditor(decoded, diag);\n      // sem.tseditor.configShapes(sem.tseditor.graph, this.stencil, this.xmlshapes);\n      if (sem.tseditor.sidebar) {\n        sem.tseditor.configShapes(sem.tseditor.graph, this.stencil);\n        sem.tseditor.sidebar.LoadStencil(this.stencil);\n      }\n      let pg = sem.page;\n      if (pg && pg.ClassOf().ObjectName === sem.base.GetModelAttribute(Process_ElementName.SLProc)) {\n        sem.tseditor.enableSwimlanes(sem.horizontal, false);\n      }\n      // sem.tseditor.enableLayout();\n\n      // if (this.state.diag) {\n      // this.loadObject(this.state.diag.ID, this.state.semtalk);\n      // gotoDocument(this.state.diag.ID);\n      // this.state.semtalk.loadDiag(this.state.diag.ID);\n      // }\n    }\n  }\n  public shapeAdded = (cell: mxCell): void => {\n    let sem = this.state.semtalk;\n    if (sem) {\n      let graph = sem.graph;\n      sem.visShapeAdded(cell);\n      gotoObject(cell.objectid);\n      graph.setSelectionCell(cell);\n      // sem.shape = cell;\n      if (this.state.hideComposeDialog) {\n        const sc = sem.visCellSystemClass(cell.objectid);\n        if (sc && sc.ObjectName === sem.base.GetModelAttribute(Process_ElementName.SLActivity)) {\n          // console.debug(cell);\n          sem.noevents = true;\n          cell.value = \" \";\n          cell.label = \" \";\n          sem.tseditor.refresh();\n          sem.noevents = false;\n          graph.startEditingAtCell(cell);\n        }\n      }\n    }\n    // alert(\"shapeAdded\");\n    // gotoObject(cell.objectid);\n  }\n  public shapeDeleted = (cells: mxCell[]): void => {\n    if (this.state.semtalk) {\n      this.state.semtalk.visShapesDeleted(cells);\n    }\n    //  alert(\"shapeDeleted\");\n    // gotoObject(cell.objectid);\n  }\n  // public redrawLastShape = () => {\n  //   if (this.state.semtalk) {\n  //     this.state.semtalk.redrawLastShape();\n\n  //   }\n  // }\n  public shapeExitedTextEdit = (cell: mxCell, newValue: any): void => {\n    if (this.state.semtalk) {\n      this.state.semtalk.visShapeExitedTextEdit(cell, newValue);\n    }\n    // alert(\"shapeExitedTextEdit\");\n    // gotoObject(cell.objectid);\n  }\n  public shapeMoveCells = (cells: mxCell[], clone: boolean): void => {\n    if (clone === true && this.state.semtalk) {\n      this.state.semtalk.visShapesCloned(cells);\n    }\n    if (this.state.semtalk) {\n      this.state.semtalk.visShapesMoved(cells);\n    }\n  }\n  public shapeCopyCells = (cells: mxCell[]): void => {\n    if (this.state.semtalk) {\n      this.state.semtalk.visShapesCopied(cells);\n    }\n  }\n  // public addVertex = (cell: any): void => {\n  //     console.debug(cell);\n  // }\n\n  public printPreview = () => {\n    let sem = this.state.semtalk;\n    if (sem && sem.page) {\n      sem.tseditor.printPreview(1, undefined, undefined, 20, 20, undefined, sem.page.ObjectCaption);\n      //  this.state.semtalk.tseditor.exportSVG();\n      //   this.state.semtalk.tseditor.exportFile(\"png\");\n    }\n  }\n  public resetView = () => {\n    if (this.state.semtalk)\n      this.state.semtalk.tseditor.resetView(0.15);\n  }\n  public togglePageBreaks = (): void => {\n    if (this.state.semtalk)\n      this.state.semtalk.tseditor.togglePageBreaks();\n  }\n  public togglePanZoom = (): void => {\n    if (this.state.semtalk) {\n      this.state.semtalk.tseditor.togglePanZoom();\n    }\n  }\n  public toggleStencil = (): void => {\n    if (this.state.semtalk) {\n      this.state.semtalk.tseditor.toggleStencil();\n    }\n  }\n  public shapeConnectionAdded = (event: any, edge: mxCell, source: mxCell, target: mxCell): void => {\n    if (this.state.semtalk) {\n      this.state.semtalk.visConnectionAdded(event, edge, source, target);\n    }\n  }\n  public shapeConnectionsDeleted = (edge: mxCell): void => {\n    if (this.state.semtalk) {\n      this.state.semtalk.visConnectionsDeleted(edge);\n    }\n  }\n  public newDocument = (): void => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      if (sem.ismodified) {\n        if (!window.confirm('Leave without saving?')) {\n          return;\n        }\n      }\n      this.setState({\n        hideFileOpen: false, isopen: false, isnew: true, issaveas: false, isimport: false,\n        spexplorercaption: sem.getResStrListener(\"STRDLGCMDNE\")\n      });\n    }\n  }\n\n  public openlocalDocument = async () => {\n    this.resetFileDialog(\"\");\n    let w: any = window;\n    if (this.state.semtalk && this.state.semtalk.ismodified) {\n      if (!window.confirm('Leave without saving?')) {\n        return;\n      }\n    }\n    if (this.props.mongo.iselectron && w.api) {\n      const data = await w.api.openDocument({ \"dialog\": { properties: ['openFile'], filters: [{ name: 'SemTalk', extensions: ['sdx'] }] } });\n      if (data) {\n        let fname: string = data[\"filename\"];\n        if (fname && data[\"data\"]) {\n          // let meta = await w.api.getfilemetadata({ \"filename\": fname });\n          // console.debug(meta);\n          if (fname.endsWith(\".sdx\")) {\n            let s = JSON.parse(data[\"data\"]);\n            window.localStorage.setItem(SemTalkCookie.autosaveSemTalk, \"\");\n            this.loadDocumentFromJSON(data[\"filename\"], s);\n            this.filename = data[\"filename\"];\n          }\n        }\n      }\n      return;\n    }\n    // const mongo = this.state.mongo;\n    // if (!mongo.usemongo && !this.props.context) {\n    this.upload();\n    // return;\n    // }\n  }\n  public openDocument = (): void => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      if (sem.ismodified) {\n        if (!window.confirm('Leave without saving?')) {\n          return;\n        }\n      }\n      this.setState({\n        hideFileOpen: false, isopen: true, isnew: false, issaveas: false, isimport: false,\n        spexplorercaption: sem.getResStrListener(\"STRDLGCMDOP\")\n      });\n    }\n  }\n\n  private resetFileDialog = (filename: string) => {\n    this.setState({\n      hideFileOpen: true,\n      hideComposeDialog: true,\n      hideCustomizeDialog: true,\n      hideExpandDialog: true,\n      hideCreateDiagramDialog: true,\n      hideHelp: true,\n      hideInsertDialog: true,\n      hideOpenLinkDialog: true,\n      hidePropertyDialog: true,\n      hideRelationDialog: true,\n      hideSelectDialog: true,\n      hideShapeStyle: true,\n      hideTermSetDialog: true,\n      filename: filename\n    });\n    window.localStorage.setItem(SemTalkCookie.autosaveSemTalk, \"\");\n  }\n  public openDocumentCallBack = async (filename: string) => {\n    this.resetFileDialog(filename);\n    this.loadDocument(filename);\n  }\n  public importDocument = (): void => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      this.setState({\n        hideFileOpen: false, isopen: false, isnew: false, issaveas: false, isimport: true,\n        spexplorercaption: sem.getResStrListener(\"STRDLGCMDOP\")\n      });\n    }\n  }\n  public mergeDocumentCallBack = async (filename: string) => {\n    this.setState({\n      hideFileOpen: true,\n      hideComposeDialog: true,\n      hideCustomizeDialog: true,\n      hideExpandDialog: true,\n      hideCreateDiagramDialog: true,\n      hideHelp: true,\n      hideInsertDialog: true,\n      hideOpenLinkDialog: true,\n      hidePropertyDialog: true,\n      hideRelationDialog: true,\n      hideSelectDialog: true,\n      hideShapeStyle: true,\n      hideTermSetDialog: true,\n      filename: filename\n    });\n    window.localStorage.setItem(SemTalkCookie.autosaveSemTalk, \"\");\n    this.mergeDocument(filename);\n  }\n  public newDocumentCallBack = async (template: string) => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      this.setState({\n        hideFileOpen: true,\n        hideComposeDialog: true,\n        hideCustomizeDialog: true,\n        hideExpandDialog: true,\n        hideCreateDiagramDialog: true,\n        hideHelp: true,\n        hideInsertDialog: true,\n        hideOpenLinkDialog: true,\n        hidePropertyDialog: true,\n        hideRelationDialog: true,\n        hideSelectDialog: true,\n        hideShapeStyle: true,\n        hideTermSetDialog: true\n      });\n      window.localStorage.setItem(SemTalkCookie.autosaveSemTalk, \"\");\n      this.createDocument(sem, template);\n    }\n  }\n  public saveDocument = async () => {\n    const sem = this.state.semtalk;\n    let w: any = window;\n    if (sem && this.props.mongo.iselectron && w.api) {\n      if (!this.filename) {\n        this.saveAsDocument();\n        return;\n      }\n      this.saveCurrentGraph();\n      const o2j = new OB2JSON();\n      let body = o2j.SaveJSON(sem.base);\n      if (sem.page)\n        body.currentpage = sem.page.ID;\n      if (sem.tempId)\n        body.tempId = sem.tempId;\n      const blob: string = JSON.stringify(body);\n      w.api.saveDocument({ \"filename\": this.filename, \"data\": blob });\n      return;\n    }\n    const mongo = this.state.mongo;\n    if (!mongo.usemongo && !this.props.context) {\n      this.download();\n      return;\n    }\n\n    let fname = this.state.filename;\n    // let fname = this.filename;\n    if (sem && fname.endsWith(\".sdx\")) {\n      if (sem.readonly) {\n        this.alert(\"Sorry, but this Document is ReadOnly!\", MessageBarType.blocked);\n        return;\n      }\n      if (!sem.BeforeDocumentSave()) {\n        this.alert(\"Sorry, but this Document cannot be saved yet!\", MessageBarType.blocked);\n        return;\n      }\n\n      const ob = sem.base;\n      this.beginTransaction(\"\", \"saveDocument\");\n      // this.endTransaction(\"\", \"saveDocument\");\n      sem.base.SetModelAttribute(ModelAttribute.modname, fname);\n      ob.ObjectName = fname;\n      this.saveCurrentGraph();\n      const o2j = new OB2JSON();\n      let body = o2j.SaveJSON(ob);\n      if (sem.page)\n        body.currentpage = sem.page.ID;\n      body.tempId = sem.tempId;\n\n      if (mongo.usemongo) {\n        let res: any = await mgSaveDocument(mongo, mongo.documents, fname, body);\n        if (res.status !== 200) {\n          this.alert(res.status + \" \" + JSON.stringify(res.data), MessageBarType.error);\n        } else {\n          // this.alert(res.status + \" \" + JSON.stringify(res.data), MessageBarType.success);\n        }\n      } else {\n        if (this.props.context) {\n          const url3 = this.props.site + \"/_api/Web/Lists/getByTitle('\" + this.props.library\n            + \"')/RootFolder/Files/Add(url='\" + fname + \"', overwrite=true)\";\n          let s = JSON.stringify(body);\n          await sem.explorer.postTXT(this.props.context, url3, s);\n        }\n      }\n\n      this.endTransaction(\"\", \"saveDocument\");\n      sem.ismodified = false;\n      if (document.title.endsWith(\" *\")) {\n        document.title = document.title.replace(\" *\", \"\");\n      }\n\n      //console.debug(txt2);\n    } else {\n      this.saveAsDocument();\n    }\n  }\n  public savelocalDocument = () => {\n    this.resetFileDialog(\"\");\n    const sem = this.state.semtalk;\n    let w: any = window;\n    if (sem && this.props.mongo.iselectron && w.api) {\n      let dialog = {\n        defaultPath: this.filename,\n        filters: [{\n          name: 'SemTalk',\n          extensions: ['sdx']\n        }]\n      };\n      this.saveCurrentGraph();\n      const o2j = new OB2JSON();\n      let body = o2j.SaveJSON(sem.base);\n      if (sem.page)\n        body.currentpage = sem.page.ID;\n      if (sem.tempId)\n        body.tempId = sem.tempId;\n      const blob: string = JSON.stringify(body);\n      w.api.saveAsDocument({ \"dialog\": dialog, \"data\": blob });\n      return;\n    }\n    // const mongo = this.state.mongo;\n    // if (!mongo.usemongo && !this.props.context) {\n    this.download();\n    // return;\n    // }\n  }\n  public saveAsDocument = async () => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      this.setState({\n        hideFileOpen: false, isopen: false, issaveas: true, isnew: false, isimport: false,\n        spexplorercaption: sem.getResStrListener(\"STRSAVEAS\").replace(\"&\", \"\")\n      });\n    }\n  }\n  public saveAsDocumentCallBack = async (filename: string, ext: string) => {\n    const sem = this.state.semtalk;\n    if (sem && filename.length > 0) {\n      if (!sem.BeforeDocumentSave()) {\n        this.alert(\"Sorry, but this Document cannot be saved yet!\", MessageBarType.blocked);\n        return;\n      }\n      const ob = sem.base;\n      this.beginTransaction(\"\", \"saveAsDocument\");\n      // if (!filename.endsWith(\".sdx\")) {\n      //   filename = filename + \".sdx\";\n      // }\n      if (filename.endsWith(\".stx\")) {\n        filename = filename.replace(\".stx\", ext);\n      }\n      if (!filename.endsWith(ext)) {\n        filename = filename + ext;\n      }\n\n      ob.SetModelAttribute(ModelAttribute.modname, filename);\n      ob.ObjectName = filename;\n      this.saveCurrentGraph();\n      const o2j = new OB2JSON();\n      let body = o2j.SaveJSON(ob);\n      if (sem.page)\n        body.currentpage = sem.page.ID;\n      if (sem.tempId)\n        body.tempId = sem.tempId;\n      const mongo = this.state.mongo;\n      if (mongo.usemongo) {\n        let lib = mongo.documents;\n        if (ext === \".stx\") {\n          lib = this.state.mongo.templates;\n        }\n        let res: any = await mgSaveDocumentAs(mongo, lib, filename, body);\n        if (res.status !== 201) {\n          this.alert(res.status + \" \" + JSON.stringify(res.data), MessageBarType.error);\n        } else {\n          // this.alert(res.status + \" \" + JSON.stringify(res.data), MessageBarType.success);\n        }\n      } else {\n        if (this.props.context) {\n          let lib = this.props.library;\n          if (ext === \".stx\") {\n            lib = this.props.templates;\n          }\n          const url3 = this.props.site + \"/_api/Web/Lists/getByTitle('\" + lib\n            + \"')/RootFolder/Files/Add(url='\" + filename + \"', overwrite=true)\";\n          let s = JSON.stringify(body);\n          let res = await sem.explorer.postTXT(this.props.context, url3, s);\n          if (res.status !== 201) {\n            this.alert(res.status + \" \" + JSON.stringify(res.data), MessageBarType.error);\n          } else {\n            // this.alert(res.status + \" \" + JSON.stringify(res.data), MessageBarType.success);\n          }\n        }\n      }\n      // console.debug(txt2);\n      if (sem) {\n        sem.readonly = false;\n      }\n      this.resetFileDialog(filename);\n      // this.loadDocument(filename);\n      this.endTransaction(\"\", \"saveAsDocument\");\n      if (ext === \".stx\") {\n        if (sem)\n          this.createDocument(sem, filename);\n      } else {\n        this.loadDocument(filename);\n      }\n      if (sem) {\n        sem.ismodified = false;\n        if (document.title.endsWith(\" *\")) {\n          document.title = document.title.replace(\" *\", \"\");\n        }\n      }\n    }\n  }\n  private saveCurrentGraph = () => {\n    let sem = this.state.semtalk;\n    if (sem) {\n      let pg = sem.page;\n      if (pg !== null && pg !== undefined) {\n        const ob = sem.base;\n        let xml = sem.tseditor.getGraphXml();\n        let encoded = this.encode(xml);\n        ob.SetModelAttribute(SemTalkBaseConstant.SLMXGPagePrefix + pg.ID, encoded);\n        pg.SetValue(SemTalkBaseConstant.SLMXGAttribute,\n          SemTalkBaseConstant.SLMXGPagePrefix + pg.ID);\n      }\n    }\n  }\n\n  public addPage = () => {\n    this.setState({ hideCreateDiagramDialog: false });\n  }\n  public newPage = (pname: string, parent: ISemTalkObject | null, diagtype: ISemTalkDiagramType): ISemTalkDiagram | null => {\n    let sem = this.state.semtalk;\n    if (sem) {\n      let pg = sem.page;\n      if (pg !== null) {\n        // pg.save();\n        const ob = sem.base;\n        let pgn = ob.FindDiagram(pname);\n        if (pgn === null) {\n          ob.maxid = ob.maxid + 1;\n          const maxid = ob.maxid;\n          if (pname === \"\") {\n            pname = diagtype.ObjectCaption + \".\" + maxid;\n          }\n          pgn = ob.MakeDiagram(diagtype, pname, SemTalkType.SemTalkDiagram, maxid);\n          if (parent !== null) {\n            parent.Refinement = pgn;\n          }\n          pgn.SetValue(SemTalkBaseConstant.SLMXGAttribute,\n            SemTalkBaseConstant.SLMXGPagePrefix + pgn.ID);\n        }\n        // this.endTransaction(\"\", \"newPage\");\n        (window as any).localStorage.setItem(SemTalkCookie.autosaveSemTalk, \"\");\n\n        sem.visPageAdded(pgn);\n        sem.page = pgn;\n\n        let g = ob.GetModelAttribute(pgn.GetValue(SemTalkBaseConstant.SLMXGAttribute));\n        let xml = g;\n        if (g === undefined) {\n          xml = \"\";\n        } else {\n          let decoded = this.decode(g);\n          (window as any).localStorage.setItem(SemTalkCookie.autosaveSemTalk, \"\");\n          xml = this.patchEPC(decoded);\n        }\n        sem.tseditor.resetEditor(xml, pgn.ObjectCaption, pgn.ID, sem.horizontal, true);\n        // if (pgn) {\n        // this.loadObject(this.state.diag.ID, this.state.semtalk);\n        //   gotoDocument(pgn.ID);\n\n        sem.loadDiag(pgn.ID);\n        sem.initPage(pgn);\n        // }\n        //  this.endTransaction(\"\", \"newPage2\");\n        if (xml === \"\") {\n          xml = sem.tseditor.getGraphXml();\n          // g = ob.GetModelAttribute(pgn.GetValue(SemTalkBaseConstant.SLMXGAttribute));\n          // let decoded1 = this.decode(g);\n          // xml = this.patchEPC(decoded1);\n\n          let encoded = this.encode(xml);\n          ob.SetModelAttribute(SemTalkBaseConstant.SLMXGPagePrefix + pgn.ID, encoded);\n        }\n        // let lis: { text: string, key: number }[] = [];\n        // for (const dt of sem.base.AllDiagrams()) {\n        //   lis.push({ text: dt.ObjectCaption, key: dt.ID });\n        // }\n\n        let cntpages = sem.base.AllDiagrams().length;\n        this.setState({\n          xmlgraph: xml,\n          diag: pgn,\n          cntpages: cntpages,\n          // diaglist: lis,\n        });\n        this.updateDiaglist();\n\n        refreshPage(sem, this.graphClient, this.props.context, this.props.site, this.state.mongo);\n        /*        let at = ob.FindAttributeType(\"HorizontalSwimlane\") as ISemTalkAttributeType;\n               if (at === null)\n               {\n                // ob.maxid = ob.maxid + 1;\n                 at = ob.MakeAttributeType(\"HorizontalSwimlane\");\n               }\n               let a = pgn.FindAttribute(\"HorizontalSwimlane\") as ISemTalkAttribute;\n               if (a === null) {\n                 ob.maxid = ob.maxid + 1;\n                 //a = ob.MakeAttribute(pgn, at, this.props.horizontalSL);\n                 a = pgn.MakeAttribute(at, this.props.horizontalSL);\n                 a.Group = \"Swimlane Settings\";\n                 a.ValueType = SemTalkValueType.Boolean;\n                 a.Value = false;\n               }\n               at = ob.FindAttributeType(\"SwimlaneWidth\") as ISemTalkAttributeType;\n               if (at === null)\n               {\n                // ob.maxid = ob.maxid + 1;\n                 at = ob.MakeAttributeType(\"SwimlaneWidth\");\n               }\n               a = pgn.FindAttribute(\"SwimlaneWidth\") as ISemTalkAttribute;\n               if (a === null) {\n                 // ob.maxid = ob.maxid + 1;\n                 //a = ob.MakeAttribute(pgn, at, this.props.horizontalSL);\n                 a = pgn.MakeAttribute(at, this.props.SLWidth);\n                 a.Group = \"Swimlane Settings\";\n                 a.ValueType = SemTalkValueType.Integer;\n                 a.Value = false;\n               }\n               at = ob.FindAttributeType(\"SwimlaneHeight\") as ISemTalkAttributeType;\n               if (at === null)\n               {\n                // ob.maxid = ob.maxid + 1;\n                 at = ob.MakeAttributeType(\"SwimlaneHeight\");\n               }\n               a = pgn.FindAttribute(\"SwimlaneHeight\") as ISemTalkAttribute;\n               if (a === null) {\n                 //ob.maxid = ob.maxid + 1;\n                 //a = ob.MakeAttribute(pgn, at, this.props.horizontalSL);\n                 a = pgn.MakeAttribute(at, this.props.SLHeight);\n                 a.Group = \"Swimlane Settings\";\n                 a.ValueType = SemTalkValueType.Integer;\n                 a.Value = false;\n               }\n        */\n        gotoDocument(pgn.ID);\n        return pgn;\n      }\n    }\n    return null;\n  }\n  public deletePage = (): void => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      this.beginTransaction(\"\", \"deletePage\");\n      const ob = sem.base;\n      if (ob.AllDiagrams().length === 1) {\n        this.alert(\"The last page of a document cannot be deleted!\", MessageBarType.blocked);\n      } else {\n        if (sem.page) {\n          sem.page.Delete();\n          this.updateDiaglist();\n          const diag = ob.AllDiagrams()[0];\n          gotoDocument(diag.ID);\n        }\n      }\n      this.endTransaction(\"\", \"deletePage\");\n    }\n  }\n  public updateDiaglist() {\n    let sem = this.state.semtalk;\n    if (sem) {\n      sem.updateDiaglist();\n    }\n  }\n\n\n  public stopPanning = () => {\n    this.setState({ isconnectionpoints: false });\n    let sem = this.state.semtalk;\n    if (sem && sem.tseditor)\n      sem.tseditor.stopPanning();\n  }\n  public startPanning = () => {\n    this.setState({ isconnectionpoints: false });\n    let sem = this.state.semtalk;\n    if (sem && sem.tseditor)\n      sem.tseditor.startPanning();\n  }\n\n  public connectionPoints = () => {\n    let sem = this.state.semtalk;\n    if (sem && sem.tseditor)\n      sem.tseditor.connectionPoints();\n    this.setState({ isconnectionpoints: true });\n  }\n  public isConnectionPoints = (): boolean => {\n    return this.state.isconnectionpoints;\n  }\n  public zoomIn = () => {\n    let sem = this.state.semtalk;\n    if (sem && sem.tseditor)\n      sem.tseditor.zoom(zoomoption.zoomin);\n  }\n  public zoomOut = () => {\n    let sem = this.state.semtalk;\n    if (sem && sem.tseditor)\n      sem.tseditor.zoom(zoomoption.zoomout);\n  }\n  public zoomFit = () => {\n    let sem = this.state.semtalk;\n    if (sem && sem.tseditor)\n      sem.tseditor.zoom(zoomoption.zoomfit);\n  }\n  public zoomActual = () => {\n    let sem = this.state.semtalk;\n    if (sem && sem.tseditor)\n      sem.tseditor.zoom(zoomoption.zoomactual);\n  }\n\n  public Undo = async () => {\n    let sem = this.state.semtalk;\n    if (sem && sem.tseditor && sem.tseditor.isUndo()) {\n      sem.tseditor.Undo();\n      return;\n    }\n    if (sem && sem.page && this.undoManger.IsUndo()) {\n      let s1 = this.undoManger.GetUndo();\n      if (s1 === \"\") return;\n      let pid = sem.page.ID; // was ist wenn die Seite grade gelöscht wurde?\n      console.debug(\"undo..\");\n\n      const ob = new ObjectBase();\n      const o2j = new OB2JSON();\n      let s: any = {};\n      try {\n        s = JSON.parse(s1);\n        console.debug(\"Undo: \", s.transaction);\n        o2j.LoadJSON(ob, s);\n        sem.init(ob, this.props.guilanguage);\n        // sem.hasVector = this.hasvector;\n        // this.initVectors();\n        // sem.initSubTask(ob);\n\n        await this.loadPage(pid, sem);\n      } catch (e) {\n        console.debug(e);\n      }\n\n      // this.zoomActual();\n\n      this.undoManger.Undo();\n      sem.clearUndo();\n    }\n\n  }\n  public Redo = async () => {\n    let sem = this.state.semtalk;\n    if (sem && sem.tseditor && sem.tseditor.isRedo()) {\n      sem.tseditor.Redo();\n      return;\n    }\n    let s1 = this.undoManger.GetRedo();\n    if (sem && sem.page && s1 && s1.length > 0) {\n      let pid = sem.page.ID; // was ist wenn die Seite grade gelöscht wurde?\n      console.debug(\"redo..\");\n\n      const ob = new ObjectBase();\n      const o2j = new OB2JSON();\n      let s: any = {};\n      try {\n        s = JSON.parse(s1);\n        console.debug(\"Redo: \", s.transaction);\n      } catch (e) {\n        console.debug(e);\n      }\n      o2j.LoadJSON(ob, s);\n      sem.init(ob, this.props.guilanguage);\n      // sem.hasVector = this.hasvector;\n      // this.initVectors();\n\n      await this.loadPage(pid, sem);\n\n      // this.zoomActual();\n\n      this.undoManger.Redo();\n      sem.clearUndo();\n    }\n\n  }\n  public beginTransaction = (xml: string, reason: string): void => {\n    if (this.state.semtalk && this.autosave && this.state.semtalk.currentTransaction() === \"\") {\n      this.state.semtalk.beginTransaction(xml, reason);\n    }\n  }\n\n  public endTransaction = (xml: string, reason: string): void => {\n    let sem = this.state.semtalk;\n    if (sem && this.autosave && sem.currentTransaction() === reason) {\n      if (reason !== \"mxGraph\") {\n        sem.endTransaction(xml, reason);\n      }\n      if (xml === \"\") xml = sem.tseditor.getGraphXml();\n      this.setState({\n        xmlgraph: xml,\n      });\n    } else {\n      if (sem) {\n        sem.ismodified = true;\n        if (!document.title.endsWith(\" *\")) {\n          document.title += \" *\";\n        }\n      }\n    }\n  }\n  public autoSave = () => {\n    let sem = this.state.semtalk;\n    if (sem) {\n      let xml = sem.tseditor.getGraphXml();\n      sem.autoSave(xml);\n    }\n  }\n  // private addnewitem = (): void => {\n  //   this.setState({ hideFilePicker: true });\n  // }\n  // private cancelnew = (): void => {\n  //   this.setState({ hideFilePicker: true });\n  // }\n\n  private popupMenuRef = null; //React.useRef(null);\n\n  public shapeCreatePopupMenu = (_graph: mxGraph, _menu: mxPopupMenuHandler, cell: mxCell, evt: any, _edi: any): void => {\n    if (evt) {\n      this.popupMenuRef = evt;\n      this.onShowContextualMenu(cell, evt);\n    }\n  }\n  public shapeSelectionChanged = (cell: mxCell | undefined, evt: any): void => {\n    let e = evt.properties[\"event\"];\n    if (e) {\n      this.click_x = e.layerX;\n      this.click_y = e.layerY;\n    }\n    // if (this.state.semtalk && this.state.semtalk.shape && this.state.semtalk.shape.label) {\n    //   if (this.state.semtalk.shape.label.length === 0 ||\n    //     this.state.semtalk.shape.label === \" \") {\n    //     this.state.semtalk.redrawLastShape();\n    //   }\n    // }\n    let sem = this.state.semtalk;\n    // if (sem && !cell) {\n    //   let shapes = sem.selectedShapes();\n    //   if (shapes.length>0) {\n    //     cell= shapes[shapes.length-1];\n    //   }\n    // }\n    gotoShape(cell);\n\n    if (cell && this.state.diag !== null) {\n      if (sem) {\n        let node = this.state.diag.FindNodeOfShape(sem.getMxId(cell));\n        // if (node === null) {\n        //   node = this.state.diag.FindNodeOfShape(this.state.semtalk.getMxId(cell.shapeid));\n        // }\n        if (node !== null) {\n          // sem.shape = cell; !!!!!!!!!!!!!!!!!!!!\n          if (node.Master === \"Swimlane\" || node.Master === SemTalkMaster.MasterSwimlane) {\n            let ob = sem.base;\n            let inst = ob.FindInstanceByID(node.Model.ID);\n            if (inst)\n              for (let role of inst.LinkedObjects(SemTalkBaseConstant.SLDisplays)) {\n                gotoObject(role.ID);\n                break;\n              }\n          } else {\n            gotoNode(node.ID, node.Model.ID, node.Diagram.ID, node.ShapeID);\n          }\n          // console.log(node);\n          if (evt && evt.properties.event && evt.properties.event.shiftKey === true) {\n            this.editCell(cell);\n          }\n        }\n      }\n    } else {\n      // if (sem) {\n      //   sem.shape = null;\n      // }\n    }\n    // alert(\"shapeSelectionChanged\");\n    // gotoObject(cell.objectid);\n  }\n  public editPage = (): void => {\n    if (this.state.diag !== null) {\n      gotoObject(this.state.diag.ID);\n      this.setState({ hidePropertyDialog: false });\n    }\n  }\n  public editCell = (cell: mxCell): void => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      let obj = sem.base.FindInstanceByID(cell.objectid);\n      if (obj !== null && sem.base.IsInstance(obj)) {\n        switch (obj.ClassOf().ObjectName) {\n          case sem.base.GetModelAttribute(ModelAttribute.SLComment): {\n            const defof = sem.base.GetModelAttribute(ModelAttribute.SLCommentOf);\n            for (let c of obj.LinkedObjects(defof, false, SemTalkRelation.SemTalkSystemRelation)) {\n              gotoObject(c.ID);\n              this.setState({ hidePropertyDialog: false });\n              return;\n            }\n            return;\n          }\n          case SemTalkBaseConstant.SLSwimlane: {\n            for (let c of obj.LinkedObjects(SemTalkBaseConstant.SLDisplays)) {\n              gotoObject(c.ID);\n              this.setState({ hidePropertyDialog: false });\n              return;\n            }\n            return;\n          }\n          default: {\n            let dobj = sem.base.FindSystemClass(sem.base.GetModelAttribute(Process_ElementName.SLDataObject));\n            if (dobj && obj.IsInstance(dobj)) {\n              let infotype = sem.base.GetModelAttribute(Process_ElementName.SLInfoType);\n              for (let c of obj.LinkedObjects(infotype)) {\n                gotoObject(c.ID);\n                this.setState({ hidePropertyDialog: false });\n                return;\n              }\n              // return;\n            }\n          }\n        }\n        // } else {\n        //   let cla = sem.base.FindObjectByID(cell.objectid);\n        //   if (cla !== null) {\n        //     gotoObject(cla.ID);\n        //     this.setState({ hidePropertyDialog: false });\n        //     return;\n        //   }\n      }\n    }\n    gotoObject(cell.objectid);\n    this.setState({ hidePropertyDialog: false });\n  }\n  public refineCell = (cell: mxCell) => {\n    gotoObject(cell.objectid);\n    this.refineObject();\n  }\n  public editObject = (id: number): void => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      if (id < 0) {\n        let cell = sem.currentShape();\n        if (cell && cell.objectid) {\n          this.editCell(cell);\n          return;\n        }\n      } else {\n        gotoObject(id);\n        this.setState({ hidePropertyDialog: false });\n      }\n    }\n    // let oid: number = getObject();\n    this.setState({ hidePropertyDialog: false });\n  }\n  public customizeObject = () => {\n    this.setState({ hideCustomizeDialog: false });\n  }\n  public refreshObject = async () => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      const oid: number = getObject();\n      const obj = sem.base.FindObjectByID(oid);\n      if (obj && obj.EditLink) {\n        refreshObject(sem, obj, this.graphClient, this.props.context, this.props.site, this.state.mongo);\n      }\n    }\n  }\n  public speakObject = (input: string) => {\n    var msg = new SpeechSynthesisUtterance(input);\n    msg.lang = this.props.guilanguage + \"-\" + this.props.guilanguage.toUpperCase(); // 'de-DE';\n    // msg.voice = 'native'; msg.voice = 'Google US English'; //  'Google UK English Female'\n    // msg.voice = 'Google US English'\n    msg.volume = 1;\n    msg.rate = 1;\n    msg.pitch = 1;\n    try {\n      window.speechSynthesis.speak(msg);\n    } catch (e) {\n      console.debug(e);\n    }\n  }\n\n  public editClass = () => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      const oid: number = getObject();\n      const obj = sem.base.FindObjectByID(oid);\n      if (obj !== null && sem.base.IsInstance(obj)) {\n        let ins: ISemTalkInstance = obj as ISemTalkInstance;\n        const cid: number = ins.ClassOf().ID;\n        this.editObject(cid);\n      }\n    }\n  }\n  public refineObject = () => {\n    const sem = this.state.semtalk;\n    if (sem && sem.page) {\n      this.beginTransaction(\"\", \"refineObject\");\n      const oid: number = getObject();\n      const obj = sem.base.FindObjectByID(oid);\n      let pgcl = sem.page.ClassOf();\n      let npg: ISemTalkDiagram | null = null;\n      if (obj !== null) {\n        if (obj.Refinement === null) {\n          if (obj.ExtRefinement === null) {\n            npg = sem.base.FindDiagramByName(obj.ObjectCaption);\n            if (npg !== null) {\n              obj.Refinement = npg;\n            }\n            else {\n              npg = this.newPage(obj.ObjectCaption, obj, pgcl);\n              if (obj.ObjectType === SemTalkType.SemTalkClass) {\n                sem.InsertObjects([obj], 100, 100, false);\n              }\n            }\n          } else {\n            this.loadDocument(obj.ExtRefinement);\n          }\n        } else {\n          npg = this.newPage(obj.Refinement.ObjectName, null, pgcl);\n        }\n      }\n      this.endTransaction(\"\", \"refineObject\");\n      if (npg !== null) {\n        gotoDocument(npg.ID);\n      }\n    }\n  }\n\n  public goUp = () => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      if (sem.page) {\n        for (let d of sem.page.InvRefinements()) {\n          gotoDocument(d.ID);\n          break;\n        }\n      }\n    }\n\n  }\n  public detachObject = () => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      this.beginTransaction(\"\", \"detachObject\");\n      const oid: number = getObject();\n      const obj = sem.base.FindObjectByID(oid);\n      if (obj !== null) {\n        obj.Refinement = null;\n      }\n      this.endTransaction(\"\", \"detachObject\");\n    }\n  }\n  public deleteShapes = () => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      this.beginTransaction(\"\", \"deleteShapes\");\n      sem.deleteShapes();\n      this.endTransaction(\"\", \"deleteShapes\");\n    }\n  }\n  public connectShapes = () => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      this.beginTransaction(\"\", \"connectShapes\");\n      const cellsSelected = sem.graph.getSelectionCells();\n      const cnt = cellsSelected.length;\n      let i = 0;\n      if (cnt > 1) {\n        while (i < cnt) {\n          let src = cellsSelected[i];\n          let dst = cellsSelected[i + 1];\n          let lnk = sem.tseditor.insertEdge(src, dst);\n          sem.visConnectionAdded(undefined, lnk, src, dst);\n          i += 1;\n        }\n      }\n      this.endTransaction(\"\", \"connectShapes\");\n    }\n  }\n  public groupShapes = () => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      this.beginTransaction(\"\", \"groupShapes\");\n      let grp = sem.tseditor.groupCells(\"group\", \"\");\n      console.debug(grp);\n      this.endTransaction(\"\", \"groupShapes\");\n    }\n  }\n  public ungroupShapes = () => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      this.beginTransaction(\"\", \"ungroupShapes\");\n      const cellsSelected = sem.graph.getSelectionCells();\n      let cells = sem.tseditor.ungroupCells(cellsSelected);\n      console.debug(cells);\n      this.endTransaction(\"\", \"ungroupShapes\");\n    }\n  }\n\n  public deleteObject = () => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      this.beginTransaction(\"\", \"deleteObject\");\n      const oid: number = getObject();\n      // const shp = sem.currentShape();\n      // if (shp && shp.objectid === oid) {\n      //   sem.graph.removeCells([shp]);\n      // }\n      const obj = sem.base.FindObjectByID(oid);\n      if (obj !== null) {\n        // eslint-disable-next-line no-restricted-globals\n        // if (confirm(sem.getResStr(\"STRBRODELOBJ1\") + obj.ObjectCaption + sem.getResStr(\"STRBRODELOBJ2\"))) {\n        obj.Delete();\n        // }\n      }\n      this.endTransaction(\"\", \"deleteObject\");\n    }\n  }\n  public redraw = () => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      sem.redraw();\n    }\n  }\n  public composeCell = (cell: mxCell): void => {\n    gotoObject(cell.objectid);\n    this.setState({ hideComposeDialog: false });\n  }\n  public composeObject = (): void => {\n    const sem = this.state.semtalk;\n    if (sem !== null) {\n      const oid: number = getObject();\n      gotoObject(oid);\n      this.setState({ hideComposeDialog: false });\n    }\n  }\n  public hyperlinkObject = (): void => {\n    const sem = this.state.semtalk;\n    if (sem !== null) {\n      const oid: number = getObject();\n      gotoObject(oid);\n      this.setState({ hideHyperlinkDialog: false });\n    }\n  }\n  public collapseCell = (cell: mxCell | undefined): void => {\n    const sem = this.state.semtalk;\n    if (sem && cell) {\n      this.beginTransaction(\"\", \"collapseCell\");\n      sem.tseditor.toggleCollapse(cell);\n      this.endTransaction(\"\", \"collapseCell\");\n    }\n  }\n  public elbowCell = (cell: mxCell): void => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      this.beginTransaction(\"\", \"elbowCell\");\n      sem.tseditor.elbowCell(cell);\n      this.endTransaction(\"\", \"el#bowCell\");\n    }\n  }\n\n  public termstore = () => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      if (sem.page) {\n        this.diagramroot = sem.page.ClassOf().Root;\n        this.isclasses = sem.page.ClassOf().IsClass;\n      }\n      let cell = sem.currentShape();\n      this.setState({ hideTermSetDialog: false, shape: cell, object: null, relation: null });\n    }\n  }\n  public insert = () => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      if (sem.page) {\n        let dt = sem.page.ClassOf();\n        if (dt.ObjectName === SemTalkBaseConstant.SLGeneric) {\n          this.isclasses = false;\n        } else {\n          this.isclasses = dt.IsClass;\n        }\n        this.diagramroot = sem.page.ClassOf().Root;\n      }\n      let cell = sem.currentShape();\n      this.setState({ hideInsertDialog: false, shape: cell, object: null, relation: null });\n    }\n  }\n  public InsertObject = (_semtalk: IVisioRDFS, _shape: any, newobjs: ISemTalkObject[], expand: boolean) => {\n    if (this.state.semtalk) {\n      this.beginTransaction(\"\", \"InsertObject\");\n      this.state.semtalk.InsertObjects(newobjs, this.click_x, this.click_y, expand);\n      this.endTransaction(\"\", \"InsertObject\");\n    }\n    this._closeInsertDialog();\n  }\n  private selectclass: boolean = false;\n  public selectCell = (cell: mxCell | undefined): void => {\n    // gotoObject(cell.objectid);\n    this.selectclass = false;\n    let sem = this.state.semtalk;\n    if (sem && cell) {\n      const bas = sem.base;\n      const ins = bas.FindInstanceByID(cell.objectid);\n      if (ins !== null) {\n        const icl = ins.ClassOf();\n        const scl = icl.SystemClass();\n        if (scl !== null) {\n          let lbl: ISemTalkLabel | null = null;\n          if (scl.AllInstanceLabels().length > 0) {\n            lbl = scl.AllInstanceLabels()[0];\n          }\n          else {\n            for (const scc of scl.AllSuperClasses()) {\n              if (lbl === null) {\n                const slbls = (scc as ISemTalkSystemClass).AllInstanceLabels();\n                if (slbls.length > 0) {\n                  lbl = slbls[0];\n                }\n              }\n            }\n          }\n\n          if (lbl !== null) {\n            // console.debug(\"Label: \" + lbl);\n            let relname = lbl.Text;\n            if (lbl.Text.indexOf(\"{\") > -1) {\n              relname = lbl.Text.substr(0, lbl.Text.indexOf(\"{\"));\n            }\n            if (relname.indexOf(\" (\") > 0) {\n              relname = relname.substr(0, relname.indexOf(\" (\"));\n            }\n            const relt = bas.FindAssociationType(relname);\n            // console.debug(slinfotype);\n            if (relt !== null) {\n              const olist = scl.AllLinkedObjects(relname);\n              if (olist.length > 0) {\n                const ocl = olist[0] as ISemTalkSystemClass;\n                this.selectclass = (ocl.ObjectName === bas.GetModelAttribute(Process_ElementName.SLInformation));\n                // console.debug(ocl);\n                this.otherroot = ocl;\n                this.setState({ hideRelationDialog: false, shape: cell, object: cell.objectid, relation: relname });\n                return;\n              }\n            }\n          }\n        }\n      } else {\n        const oth = bas.FindObjectByID(cell.objectid);\n        if (oth !== null) {\n          this.selectclass = true;\n        }\n      }\n      // sem.shape = cell; !!!!!!!!!!!!\n      // this.saveGraph(\"\",\"selectCell\");\n      this.setState({\n        hideSelectDialog: false, shape: cell, object: cell.objectid,\n        relation: null\n      });\n    } else {\n      this.setState({\n        hideSelectDialog: false, shape: undefined, object: undefined,\n        relation: null\n      });\n    }\n\n  }\n  public ChangeRelation = (semtalk: IVisioRDFS, shape: any, newobjs: ISemTalkObject[], _expand: boolean) => {\n    if (semtalk && this.state.relation && newobjs.length > 0) {\n      this.beginTransaction(\"\", \"ChangeRelation\");\n      let newobj = newobjs[0];\n      const rel = this.state.relation;\n      const objid = this.state.object;\n      let obj = semtalk.base.FindInstanceByID(objid);\n      if (obj) {\n        for (const lnk of obj.Links(rel)) {\n          if (lnk.ToObject.ObjectName !== newobj.ObjectName) {\n            obj.DeleteAssociation(rel, lnk.ToObject);\n          }\n        }\n        if (!obj.HasDirectLink(rel, newobj)) {\n          obj.MakeAssociation(rel, newobj);\n        }\n      }\n      if (rel === SemTalkBaseConstant.SLDisplays) {\n        semtalk.UpdateSwimlaneContent(shape);\n      }\n      //  this.state.semtalk.ChangeObject(shape, newobj);\n      this.endTransaction(\"\", \"ChangeRelation\");\n    }\n    this._closeRelationDialog();\n  }\n  public ChangeObject = (_semtalk: IVisioRDFS, shape: any, newobj: ISemTalkObject[], _expand: boolean) => {\n    const sem = this.state.semtalk;\n    if (sem && shape) {\n      this.beginTransaction(\"\", \"ChangeObject\");\n      sem.ChangeObject(shape, newobj);\n      this.endTransaction(\"\", \"ChangeObject\");\n    }\n    this._closeSelectDialog();\n  }\n  public ImportTermSet = (sysc: ISemTalkSystemClass, items: ITermSetItem[]) => {\n    // if (this.state.semtalk) {\n    //   this.state.semtalk.InsertObject(shape, newobj, this.click_x, this.click_y);\n    //   this.click_x += 10;\n    //   this.click_y += 10;\n    // }\n    // console.debug(newobj);\n    if (this.state.semtalk) {\n      this.beginTransaction(\"\", \"ImportTermSet\");\n      this.state.semtalk.ImportTermSet(sysc, items, this.click_x, this.click_y);\n      this.endTransaction(\"\", \"ImportTermSet\");\n    }\n    this._closeTermSetDialog();\n  }\n  public ImportTermSetTree = (syscname: string, items: any[]) => {\n    // if (this.state.semtalk) {\n    //   this.state.semtalk.InsertObject(shape, newobj, this.click_x, this.click_y);\n    //   this.click_x += 10;\n    //   this.click_y += 10;\n    // }\n    // console.debug(newobj);\n    if (this.state.semtalk) {\n      this.beginTransaction(\"\", \"ImportTermSet\");\n      this.state.semtalk.ImportTermSetTree(syscname, items, this.click_x, this.click_y);\n      this.endTransaction(\"\", \"ImportTermSet\");\n    }\n    this._closeTermSetDialog();\n  }\n  public ExpandObject = (_semtalk: IVisioRDFS, shape: any, newlinks: ISemTalkAssociation[]) => {\n    if (this.state.semtalk) {\n      this.beginTransaction(\"\", \"ExpandObject\");\n      this.state.semtalk.ExpandObject(shape, newlinks);\n      this.endTransaction(\"\", \"ExpandObject\");\n    }\n    // this._closeExpandDialog();\n  }\n  public ExpandSimilarObject = (_semtalk: IVisioRDFS, shape: any, newlinks: string[]) => {\n    if (this.state.semtalk) {\n      this.beginTransaction(\"\", \"ExpandSimilarObject\");\n      this.state.semtalk.ExpandSimilarClass(shape, newlinks);\n      this.endTransaction(\"\", \"ExpandSimilarObject\");\n    }\n    // this._closeExpandDialog();\n  }\n  public createPage = (_semtalk: IVisioRDFS, name: string, diagtype: ISemTalkDiagramType | null) => {\n    this._closeCreateDiagramDialog();\n    if (this.state.semtalk) {\n      const sem = this.state.semtalk;\n      if (sem !== null && sem.page && name.length > 0) {\n        this.beginTransaction(\"\", \"createPage\");\n        let pgcl: ISemTalkDiagramType;\n        if (diagtype) {\n          pgcl = diagtype;\n        } else {\n          pgcl = sem.page.ClassOf();\n        }\n        this.newPage(name, null, pgcl);\n        this.endTransaction(\"\", \"createPage\");\n      }\n    }\n  }\n\n  public selectObject = () => {\n    const sem = this.state.semtalk;\n    this.selectclass = false;\n    let objectid = getObject();\n    if (sem) {\n      let cell = sem.currentShape();\n      this.setState({ hideSelectDialog: false, shape: cell, object: objectid, relation: null });\n    }\n  }\n  public expandObject = () => {\n    const sem = this.state.semtalk;\n    // this.selectclass = false;\n    let objectid = getObject();\n    if (sem) {\n      let cell = sem.currentShape();\n      this.setState({ hideExpandDialog: false, shape: cell, object: objectid, relation: null });\n    }\n  }\n  public showShapeStyle = (_cells: mxCell[]): void => {\n    if (this.state.semtalk) {\n      this.setState({\n        hideShapeStyle: false\n      });\n    }\n  }\n  public showHelp = (): void => {\n    if (this.state.semtalk) {\n      this.setState({\n        hideHelp: false\n      });\n    }\n  }\n  public showForm = (): void => {\n    if (this.state.semtalk) {\n      this.setState({\n        hideFormDialog: false\n      });\n    }\n  }\n  public showSubTask = (addoncommand: string): void => {\n    if (this.state.semtalk) {\n      this.setState({\n        addoncommand: addoncommand,\n        hideSubTaskDialog: false\n      });\n    }\n  }\n  public doLayout = (layoutname: any, animate: boolean, horizontal: boolean, invert: boolean) => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      this.beginTransaction(\"\", \"doLayout\");\n      sem.tseditor.doLayout(null, layoutname, sem.currentShape(), animate, horizontal, invert);\n      this.endTransaction(\"\", \"doLayout\");\n    }\n  }\n  public isValid = (srcid: number, dstid: number): boolean => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      return sem.isValid(srcid, dstid);\n    }\n    return true;\n  }\n  private _closeSelectDialog = (): void => {\n    this.setState({ hideSelectDialog: true, shape: null, object: null, relation: null });\n  }\n  private _closeTermSetDialog = (): void => {\n    this.setState({ hideTermSetDialog: true, shape: null, object: null, relation: null });\n  }\n  private _closeRelationDialog = (): void => {\n    this.setState({ hideRelationDialog: true, shape: null, object: null, relation: null });\n  }\n  private _closeCreateDiagramDialog = (): void => {\n    this.setState({ hideCreateDiagramDialog: true });\n  }\n\n  private _closeInsertDialog = (): void => {\n    this.setState({ hideInsertDialog: true, shape: null, object: null, relation: null });\n  }\n\n  public ParseMenu = (isribbon: boolean, ctrl?: React.Component): { \"items\": any, \"allitems\": any } => {\n    let ribbon: SemTalkRibbon = this.state.ribbon;\n    if (!isribbon) {\n      ribbon = this.state.toolbar;\n      // ribbon = require(\"./toolbar.json\");\n    }\n\n    // Hier sollte man auch ggf die ShortCuts setzen\n    // Export Import aus subtask DLL erweitern\n    let allitems: any = {};\n    let items: any[] = [];\n    const sem = this.state.semtalk;\n    if (!ctrl) ctrl = this;\n    if (!ribbon) ribbon = this.state.ribbon;\n    if (sem) {\n      let parseMenuItem = (ribbonitem: any): any => {\n        let nitem: any = {};\n        if (ribbonitem[\"key\"]) {\n          nitem[\"key\"] = ribbonitem[\"key\"];\n          allitems[nitem[\"key\"]] = nitem;\n\n          if (ribbonitem[\"text\"] && ribbonitem[\"text\"].length > 0) {\n            nitem[\"text\"] = sem.getResStr(ribbonitem[\"text\"]).replace(\"&\", \"\").replace(\":\", \"\");\n          } else {\n            if (ribbonitem[\"textL\"] && ribbonitem[\"textL\"].length > 0) {\n              nitem[\"text\"] = sem.getResStrListener(ribbonitem[\"textL\"]).replace(\"&\", \"\").replace(\":\", \"\");\n            }\n          }\n          if (ribbonitem[\"cacheKey\"]) nitem[\"cacheKey\"] = ribbonitem[\"cacheKey\"];\n          if (ribbonitem[\"split\"]) nitem[\"split\"] = true;\n          if (ribbonitem[\"iconOnly\"]) nitem[\"iconOnly\"] = true;\n          if (ribbonitem[\"iconProps\"]) nitem[\"iconProps\"] = ribbonitem[\"iconProps\"];\n          if (ribbonitem[\"subMenuProps\"]) {\n            let subitems: any = [];\n            let items1 = ribbonitem[\"subMenuProps\"][\"items\"];\n            for (let sitemindex in items1) {\n              let sitem = items1[sitemindex];\n              subitems.push(parseMenuItem(sitem));\n            }\n            nitem[\"subMenuProps\"] = { \"items\": subitems };\n          }\n          if (ribbonitem[\"onClickCallback\"]) {\n            nitem[\"onClick\"] = () => {\n              this.DoCommand(ribbonitem[\"onClickCallback\"], {});\n            };\n          }\n          if (ribbonitem[\"onClickAddOn\"]) {\n            nitem[\"onClick\"] = () => {\n              this.DoCommand(SemTalkOnlineCommand.AddonCommand, { \"command\": ribbonitem[\"onClickAddOn\"] });\n            };\n          }\n          if (ribbonitem[\"onClickState\"]) {\n            nitem[\"onClick\"] = () => {\n              let sname: string = ribbonitem[\"onClickState\"];\n              let s: any = {};\n              s[sname] = true;\n              // if (ctrl) ctrl.setState(s);\n              this.setState(s);\n            };\n          }\n          if (ribbonitem[\"itemType\"] && ribbonitem[\"itemType\"] === 1) {\n            nitem[\"name\"] = \"-\";\n            nitem[\"itemType\"] = ContextualMenuItemType.Divider;\n          }\n        }\n        return nitem;\n      };\n      for (let ribbonitem of ribbon) {\n        items.push(parseMenuItem(ribbonitem));\n      }\n    }\n    return { \"items\": items, \"allitems\": allitems };\n  }\n\n  // public ribbon: any = require(\"./ribbon.json\");\n\n  private menuItems: IContextualMenuItem[] = [];\n  private onShowContextualMenu = (cell: mxCell, ev: React.MouseEvent<HTMLElement>) => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      const res = this.ParseMenu(true, this);\n      const allitems = res[\"allitems\"];\n      let getMenuItem = (key: string, onclick: undefined | (() => void)): any => {\n        const nmenu = allitems[key];\n        if (onclick) nmenu[\"onClick\"] = onclick;\n        return nmenu;\n      };\n      ev.preventDefault(); // don't navigate\n      let menu: IContextualMenuItem[] = [];\n      const ob = sem.base;\n      if (cell != null) {\n        const sc = sem.visCellSystemClass(cell.objectid);\n        let sel: boolean = false;\n        if (sc && ob.IsAssociationType(sc) &&\n          sc.FindLabelForMaster(\"\", ob.GetModelAttribute(Process_ElementName.SLInfoType) + \"{ Group\").length > 0) {\n          sel = true;\n        }\n        if (sc && (!sc.BottomUp || sel)) {\n          if (allitems['selectObject']) {\n            menu.push(getMenuItem('selectObject', () => { this.selectCell(cell); }));\n          }\n        }\n        if (allitems['editObject']) {\n          menu.push(getMenuItem('editObject', () => { this.editCell(cell); }));\n        }\n        if (cell.edge) {\n          menu.push({\n            key: 'elbow',\n            text: sem.getResStrListener(\"STRELBOW\"),\n            iconProps: { iconName: 'TurnRight' },\n            onClick: (): void => {\n              this.elbowCell(cell);\n              // this.onHideContextualMenu();\n            }\n          });\n        }\n        if (sc && sc.Composeable) {\n          if (allitems['composeObject']) {\n            menu.push(getMenuItem('composeObject', () => { this.composeCell(cell); }));\n          }\n        }\n        if (sc && sc.ObjectName === Process_ElementName.Swimlane) {\n          if (allitems['swimlane']) {\n            menu.push(getMenuItem('swimlane', undefined));\n          }\n        }\n        if (sc && (sc.ObjectName === ob.GetModelAttribute(Process_ElementName.SLActivity))) {\n          if (allitems['refineObject']) {\n            menu.push(\n              getMenuItem(\"divider1\", undefined),\n              getMenuItem('refineObject', () => { this.refineCell(cell); }));\n          }\n        }\n        if (allitems['deleteObject']) {\n          menu.push(\n            getMenuItem(\"divider3\", undefined),\n            getMenuItem('deleteObject', undefined));\n        }\n        if (sem.page && sem.page.ClassOf().ObjectName !==\n          ob.GetModelAttribute(Process_ElementName.SLProc)) {\n          if (allitems['expandObject']) {\n            menu.push(\n              getMenuItem(\"divider4\", undefined),\n              getMenuItem('expandObject', undefined));\n          }\n        }\n      }\n\n\n      const obj = cell ? ob.FindObjectByID(cell.objectid) : null;\n      if (obj) {\n        const hlist = obj.Attachments();\n        if (hlist.length > 0) {\n          menu.push(getMenuItem(\"divider5\", undefined));\n          for (let assoc of hlist) {\n            let lbl: string = assoc.GetValue(\"label\");\n            if (lbl !== null && lbl.length > 0) {\n            } else {\n              lbl = assoc.ToObject.ID2NameNsp();\n            }\n            let hn = assoc.ToObject.ObjectName;\n            menu.push({\n              \"key\": hn, \"text\": lbl,\n              \"iconProps\": {\n                \"iconName\": \"Link\"\n              },\n              // eslint-disable-next-line no-loop-func\n              \"onClick\": (_evt: any): void => {\n                const link: any = document.createElement('a');\n                link.href = hn;\n                link.setAttribute('target', \"_blank\");\n                document.body.appendChild(link);\n                link.click();\n                link.parentNode.removeChild(link);\n              }\n            });\n          }\n        }\n      } else {\n        menu.push(getMenuItem('pointer', undefined),\n          getMenuItem('move', undefined),\n          getMenuItem('panandzoom', undefined),\n          getMenuItem('stencil', undefined),\n          getMenuItem('zoomPage', undefined));\n        if (sem && sem.page\n          && sem.page.ClassOf().ObjectName !== ob.GetModelAttribute(Process_ElementName.SLProc)) {\n          menu.push(\n            getMenuItem(\"divider5\", undefined),\n            getMenuItem('insertPage', undefined));\n        }\n        menu.push(getMenuItem('newPage', undefined));\n        if (sem && sem.page\n          && sem.page.ClassOf().ObjectName !== ob.GetModelAttribute(Process_ElementName.SLProc)) {\n          menu.push(getMenuItem('layoutPage', undefined));\n        }\n        if (sem && sem.page\n          && sem.page.ClassOf().ObjectName === ob.GetModelAttribute(Process_ElementName.SLProc)) {\n          menu.push(getMenuItem('layoutPage', undefined));\n        }\n      }\n      this.menuItems = menu;\n      this.setState({ showContextualMenu: true });\n    }\n  }\n\n  private onHideContextualMenu = () => {\n    this.setState({ showContextualMenu: false });\n  }\n  public getLabel = (cell: mxCell, tmp: string): string => {\n    if (this.state.semtalk) {\n      return this.state.semtalk.getLabel(cell, tmp);\n    }\n    return tmp;\n  }\n  public isCellResizable = (cell: mxCell): boolean => {\n    if (cell.vertex && cell.objectid &&\n      cell.shapeKey !== SemTalkMaster.MasterSwimlane &&\n      cell.shapeKey !== SemTalkMaster.MasterUMLClass) {\n      if (cell.style && cell.style.indexOf(\"resize=0;\") > -1) {\n        return false;\n      }\n    }\n    return true;\n  }\n  public isWrapping(_cell: mxCell): boolean {\n    return true;\n  }\n\n  public quickShapes = (cell: mxCell): SemTalkStencil => {\n    if (this.state.semtalk) {\n      let sem = this.state.semtalk;\n      const oid = cell[\"objectid\"];\n      if (oid) {\n        return sem.quickShapes(oid, this.stencil);\n      }\n    }\n    return [];\n  }\n\n  public makeInstance = (class_cell: mxCell, inst_cell: mxCell): void => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      sem.makeInstance(class_cell, inst_cell);\n      sem.graph.startEditingAtCell(inst_cell);\n\n    }\n  }\n  public makeSubClass = (class_cell: mxCell, subcl_cell: mxCell): void => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      sem.makeSubClass(class_cell, subcl_cell);\n      sem.graph.startEditingAtCell(subcl_cell);\n    }\n  }\n  public align = (direction: string) => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      sem.tseditor.align(direction, undefined);\n    }\n  }\n  // public distribute(direction: string) {\n  //   const sem = this.state.semtalk;\n  //   if (sem !== null) {\n  //     sem.tseditor.distribute(direction);\n  //   }\n  // }\n  public checkOutDocument = () => {\n    if (this.state.mongo.usemongo) {\n      mgCheckDocument(this.state.mongo, this.state.mongo.documents, this.state.filename, false);\n    } else {\n      if (this.props.spCheckInOut && this.state.semtalk && this.props.context) {\n        this.state.semtalk.explorer.spCheckOutDocument(this.props.context, this.props.site, this.siteRelativeURL() + \"/\" + this.props.library, this.state.filename);\n      } else {\n        // this.storeToTempList(this.filename);\n      }\n    }\n    let sem = this.state.semtalk;\n    if (sem) {\n      sem.readonly = false;\n    }\n    this.setState({ checkedOut: true });\n    if (this.state.filename) {\n      document.title = \"SemTalk Online (CO): \" + this.state.filename;\n    }\n  }\n  public checkInDocument = () => {\n    if (this.state.mongo.usemongo) {\n      mgCheckDocument(this.state.mongo, this.state.mongo.documents, this.state.filename, true);\n    } else {\n      if (this.props.spCheckInOut && this.state.semtalk && this.props.context) {\n        this.state.semtalk.explorer.spCheckInDocument(this.props.context, this.props.site, this.siteRelativeURL() + \"/\" + this.props.library, this.state.filename);\n      } else {\n        // this.deleteFromTempList(this.filename);\n        // if (this.templist && this.state.semtalk && this.tempdd > 0) {\n        //   this.state.semtalk.explorer.deleteListItem(this.props.context, this.props.site, this.templist, this.tempdd);\n        // }\n      }\n      let sem = this.state.semtalk;\n      if (sem) {\n        sem.readonly = true;\n      }\n    }\n    this.setState({ checkedOut: false });\n    if (this.state.filename) {\n      document.title = \"SemTalk Online: \" + this.state.filename;\n    }\n  }\n  public deleteDocument = async () => {\n    if (this.state.mongo.usemongo) {\n      await mgDeleteItem(this.state.mongo, this.state.mongo.dbname, this.state.mongo.documents, this.state.filename);\n    } else {\n    }\n    this.setState({ checkedOut: false });\n    if (this.state.filename) {\n      document.title = \"SemTalk Online\" + this.state.filename + \" (deleted)\";\n    }\n  }\n  private siteRelativeURL(): string {\n    let site = this.props.site;\n    let s2: string = site.substring(site.indexOf(\"//\") + 2);\n    s2 = s2.substring(s2.indexOf(\"/\"));\n    return s2;\n  }\n  public fileImage = async () => {\n    if (this.state.semtalk) {\n      // this.setState({ hideimagefileopen: false });\n      let svg = this.state.semtalk.tseditor.exportSVG(this.state.semtalk.graph as mxGraph);\n\n      let fname = this.state.filename;\n      if (fname.length === 0) fname = \"export.sdx\";\n\n      if (fname.endsWith(\".sdx\")) {\n        fname = fname.replace(\".sdx\", \".svg\");\n        // this.beginTransaction(\"\", \"svgDocument\");\n        // this.endTransaction(\"\", \"saveDocument\");\n        // if (this.props.context) {\n        // let site = this.props.site;\n        // const url3 = site + \"/_api/Web/Lists/getByTitle('\" + this.props.svglibrary\n        //   + \"')/RootFolder/Files/Add(url='\" + fname + \"', overwrite=true)\";\n        // //   let s = JSON.stringify(svg);\n        // if (this.props.context) {\n        //   await this.state.semtalk.explorer.postTXT(this.props.context, url3, svg);\n        // }\n        // this.endTransaction(\"\", \"svgDocument\");\n        // let s1 = site + \"/\" + this.props.svglibrary + \"/Forms/AllItems.aspx?id=\";\n        // let s2: string = site.substring(site.indexOf(\"//\") + 2);\n        // s2 = s2.substring(s2.indexOf(\"/\")) + \"/\" + this.props.svglibrary;\n        // let url = s1 + encodeURIComponent(s2 + \"/\") + encodeURIComponent(fname) + \"&parent=\" + encodeURIComponent(s2);\n        // // let url = \"https://semtalk.sharepoint.com/sites/Modellierung/SVG/Forms/AllItems.aspx?id=%2Fsites%2FModellierung%2FSVG%2Fexport%2Esvg&parent=%2Fsites%2FModellierung%2FSVG\";\n        // this.setState({\n        //   hideOpenLinkDialog: false,\n        //   openlinkurl: url,\n        //   openlinkcaption: this.props.svglibrary + \"/\" + fname\n        // });\n        // } else {\n        const url = window.URL.createObjectURL(new Blob([svg]),);\n        const link: any = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', fname,);\n        document.body.appendChild(link);\n        link.click();\n        link.parentNode.removeChild(link);\n        // }\n      }\n      console.debug(svg);\n    }\n  }\n\n  public alert = (msg: string, mtype: MessageBarType): void => {\n    if (msg === \"\") {\n      this.setState({ nosuccess: false, errormsg: msg });\n    } else {\n      this.setState({\n        nosuccess: true,\n        errormsg: msg,\n        msgbartype: mtype\n      });\n    }\n  }\n\n  public keyPressed = (evtobj: KeyboardEvent): void => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      let code = evtobj.code;\n      if (evtobj.shiftKey) {\n        code= \"Shift+\" + code;\n      }\n      if (evtobj.altKey) {\n        code= \"Alt+\" + code;\n      }\n      let menuitem = sem.getRibbon().keys[code];\n      if (menuitem[\"onClickCallback\"]) {\n        this.DoCommand(menuitem[\"onClickCallback\"], {});\n      }\n    }\n  }\n  public hasKeyHandler = (evtobj: KeyboardEvent): boolean => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      let code = evtobj.code;\n      if (evtobj.shiftKey) {\n        code= \"Shift+\" + code;\n      }\n      if (evtobj.altKey) {\n        code= \"Alt+\" + code;\n      }\n      return (sem.getRibbon().keys[code] !== undefined);\n    }\n    return false;\n  }\n  // private keyHandler(evt: { key: any; stopPropagation: () => void; consume: () => void; }) {\n  //   switch (evt.key) {\n  //     case 'e': {\n  //       this.editObject();\n  //       evt.stopPropagation();\n  //       evt.consume();\n  //       break;\n  //     }\n  //     case 's': {\n  //       this.saveDocument();\n  //       evt.stopPropagation();\n  //       evt.consume();\n  //       break;\n  //     }\n  //   }\n  //   // alert(`do something upon keydown event of ${evt}`);\n  // }\n  private vectors: { [name: number]: {} } = {};\n  public hasvector = (obj: ISemTalkObject): any => {\n    if (!this.semantics_service || !this.semantics_service.startsWith(\"http\")) return false;\n    return this.vectors[obj.ID];\n  }\n  private WordVectors = async () => {\n    if (!this.semantics_service || !this.semantics_service.startsWith(\"http\")) return;\n    let sem = this.state.semtalk;\n    if (sem) {\n      this.setState({ \"isLoading\": \"Computing similarities...\" });\n      this.beginTransaction(\"\", \"WordVectors\");\n      this.vectors = {};\n      sem.hasVector = this.hasvector;\n      let objects: ISemTalkObject[] = [];\n      let pg = sem.page;\n      // let links: ISemTalkAssociation[] = [];\n      if (pg) {\n        for (let n of pg.Contents()) {\n          if (sem.base.IsAssociation(n.Model)) {\n            // links.push(n.Model as ISemTalkAssociation);\n          } else {\n            objects.push(n.Model);\n          }\n        }\n      }\n      let vlist: ISemTalkObject[] = [];\n      for (let c of objects) {\n        let cname = c.ObjectCaption;\n        // let hasV = false;\n        let s = this.semantics_service + \"spacy/hasvector\";\n        let args = {\n          args: { \"text\": cname, \"corpus\": this.props.semantics.corpus },\n          service: s\n        };\n        let res: any = await mgCallService(this.props.mongo, args);\n        if (res === 'True') {\n          if (!this.vectors[c.ID]) {\n            this.vectors[c.ID] = {};\n          }\n          vlist.push(c);\n        }\n        sem.UpdateLabel(c);\n      }\n      let s1 = this.semantics_service + \"spacy/similaritymatrix\";\n      let htable = {};\n      let vlist1 = vlist.map((f) => {\n        let c = f.ObjectCaption;\n        htable[c] = f;\n        return c;\n      });\n      let args1 = {\n        args: {\n          \"words\": vlist1,\n          \"words2\": vlist1,\n          \"dist\": this.props.semantics.distance,\n          \"corpus\": this.props.semantics.corpus\n        },\n        service: s1\n      };\n      const related = sem.base.MakeAssociationType(SemTalkRelation.SemTalkProperty, \"related\");\n      if (!related.FindAttribute(\"similarity\")) related.MakeAttribute(\"similarity\", 0);\n      let res1: any = await mgCallService(this.props.mongo, args1);\n      for (let w1 of Object.keys(res1)) {\n        let fobj = htable[w1];\n        for (let w2 of Object.keys(res1[w1])) {\n          let sig = res1[w1][w2];\n          if (sig > this.props.semantics.distance && sig < 1.0) {\n            let tobj = htable[w2];\n            let r1 = fobj.MakeAssociation(related, tobj);\n            if (r1) r1.SetValue(\"similarity\", sig);\n          }\n        }\n      }\n      for (let fobj of vlist) {\n        for (let n of fobj.Nodes()) {\n          if (n.Diagram === sem.page) {\n            let shp = sem.FindShapeByShapeID(n.ShapeID);\n            if (shp) {\n              sem.ExpandObject(shp, fobj.Links(\"related\"));\n            }\n          }\n        }\n      }\n      this.endTransaction(\"\", \"WordVectors\");\n      this.setState({ \"isLoading\": \"\" });\n    }\n  }\n\n  public initVectors = async () => {\n    if (!this.semantics_service || !this.semantics_service.startsWith(\"http\")) return;\n    let sem = this.state.semtalk;\n    if (sem) {\n      let objects = sem.base.AllClasses();\n      for (let c of objects) {\n        // let hasV = false;\n        if (!this.vectors[c.ID]) {\n          let s = this.semantics_service + \"spacy/hasvector\";\n          let cname = c.ObjectCaption;\n          let args = {\n            args: { \"text\": cname, \"corpus\": this.props.semantics.corpus },\n            service: s,\n          };\n          let res: any = await mgCallService(this.props.mongo, args);\n          if (res === 'True') {\n            if (!this.vectors[c.ID]) {\n              this.vectors[c.ID] = {};\n            }\n          }\n        }\n      }\n    }\n  }\n  public wordswithvector = async (): Promise<string[]> => {\n    if (this.semantics_service && this.props.mongo) {\n      let s = this.semantics_service + \"spacy/wordswithvector\";\n      let args = {\n        args: { \"corpus\": this.props.semantics.corpus },\n        service: s,\n        // user: \"Semtation\",\n        // pwd: \"mbeddings\"\n      };\n      let res = await mgCallService(this.props.mongo, args);\n      console.debug(res);\n      return res;\n    } else {\n      return [];\n    }\n  }\n\n  private invertedTaxo = (rootnames: string[]): { \"intents\": any; \"words\": any, \"regex\": any } | null => {\n    const sem = this.state.semtalk;\n    if (sem) {\n      let intents = {};\n      let words = {};\n      let regex = {};\n      let negregex = {};\n      for (let rootname in rootnames) {\n        let root = sem.base.FindClass(rootname);\n        if (root) {\n          for (let c of root.AllSubClasses()) {\n            let sl: string[] = [];\n            for (let sc of c.AllSuperClasses()) {\n              if (sc !== c && sc !== root) {\n                sl.push(sc.ObjectName);\n              }\n            }\n            words[c.ObjectName] = sl;\n            if (c.SubClasses().length > 0) {\n              let jl: string[] = [c.ObjectName];\n              for (let sc of c.AllSubClasses()) {\n                jl.push(sc.ObjectName);\n                for (let sy of sc.AllSynonyms()) {\n                  if (sy.Name !== sc.ObjectName) {\n                    jl.push(sy.Name);\n                  }\n                }\n              }\n              intents[c.ObjectName] = jl;\n            }\n            let r = c.GetValue(\"regex\");\n            let n = c.GetValue(\"negregex\");\n            if (r) {\n              regex[c.ObjectName] = r;\n            }\n            if (n) {\n              negregex[c.ObjectName] = n;\n            }\n          }\n        }\n        let invtax = { \"intents\": intents, \"words\": words, \"regex\": regex, \"negregex\": negregex };\n        return invtax;\n      }\n    }\n    return null;\n  }\n  public InvertedTaxonomy = async () => {\n    if (this.semantics_service && this.props.mongo) {\n      let tx = this.invertedTaxo([\"Vorhabensart\", \"Dokumentenart\"]);\n      if (tx) {\n        let s = this.semantics_service + \"metadata/insert_one\";\n        let args = {\n          args: { \"colname\": \"vorhaben_inv\", \"item\": tx },\n          service: s,\n          // user: \"Semtation\",\n          // pwd: \"mbeddings\"\n        };\n        let res = await mgCallService(this.props.mongo, args);\n        console.debug(res);\n        return res;\n      }\n    }\n    return [];\n  }\n\n  public MS365Login = async () => {\n    try {\n      let gc: any;\n      if ((window.location.origin === \"http://localhost:3000\")) {\n        let scopes = [\"User.Read\",\n          \"Sites.Read.All\",\n          \"Group.ReadWrite.All\",\n          \"Files.Read.All\",\n          \"TermStore.ReadWrite.All\"];\n        // gc = await this.login(\"9eec9ef7-38a4-4b29-8ac5-b8b02564c78b\",\n        //   \"https://login.microsoftonline.com/semtalkdev.onmicrosoft.com\",\n        //   scopes);\n        gc = await ms365login(\"9eec9ef7-38a4-4b29-8ac5-b8b02564c78b\",\n          \"https://login.microsoftonline.com/semtalk.onmicrosoft.com\",\n          scopes);\n      } else {\n        gc = await ms365login(this.props.clientID,\n          this.props.authority,\n          this.props.scopes);\n        // gc = await this.login(\"f2f7dcf0-0917-4911-b587-f0c941391758\",\n        //                     \"https://login.microsoftonline.com/semtalk.onmicrosoft.com\");\n      }\n      this.graphClient = gc;\n    } catch (e) {\n\n    }\n  }\n  public mgLogin = async () => {\n    this.setState({ hidemgLoginDialog: false });\n  }\n  private _onClose = (s: any): void => {\n    this.setState(s);\n  }\n  public render(): React.ReactElement<ISemTalkOnlineProps> {\n    let divHostStyle: any = {\n      position: \"fixed\",\n      height: \"100%\", //this.props.height,\n      width: \"100%\" //this.props.width\n    };\n\n    return (\n      <div className={styles.semTalkOnlineWebpart} >\n        <div>\n          <div>\n            {this.state.semtalk &&\n              <div>\n                {this.props.showCommandBar &&\n                  <SemTalkCommandBar\n                    context={this.props.context}\n                    semtalk={this.state.semtalk}\n                    callback={this}\n                    site={this.props.site}\n                    library={this.props.library}\n                    templates={this.props.templates}\n                    goodlist={this.props.goodlist} badlist={this.props.badlist}\n                    spCheckInOut={this.props.spCheckInOut}\n                    showSimulation={this.props.showSimulation}\n                    showBPMN={this.props.showBPMN}\n                    showlanguage={this.props.showlanguage}\n                    language={this.state.language}\n                    guilanguage={this.props.guilanguage}\n                    mongo={this.state.mongo}\n                  />\n                }\n                {(this.props.showToolBar) &&\n                  <SemTalkToolBar\n                    semtalk={this.state.semtalk}\n                    callback={this}\n                    mongo={this.state.mongo}\n                    showlanguage={this.props.showlanguage}\n                    language={this.state.language}\n                    guilanguage={this.props.guilanguage}\n                  />}\n                {this.state.nosuccess && (\n                  <MessageBar\n                    messageBarType={this.state.msgbartype}\n                    onDismiss={(_event) => this.alert(\"\", MessageBarType.info)}\n                    dismissButtonAriaLabel=\"Close\"\n                  >\n                    {this.state.errormsg}\n                  </MessageBar>\n                )}\n                {(this.state.cntpages > 1 || this.state.filename.length > 0) &&\n                  // <Stack horizontal>\n                  //   {this.state.cntpages > 1 && <Stack.Item>\n                  //     <SemTalkPages base={this.state.semtalk.base}></SemTalkPages>\n                  //   </Stack.Item>\n                  //   }\n                  //   <Stack.Item min-width=\"75%\" grow={3}>\n                  <SemTalkBreadCrumbs context={this.props.context}\n                    semtalk={this.state.semtalk} filename={this.state.filename} />\n                  //   </Stack.Item>\n                  // </Stack>\n                }\n              </div>\n            }\n            {this.state.isLoading.length > 0 &&\n              <ProgressIndicator label={this.state.isLoading} description={\"\"} />\n            }\n            {true &&\n              < div ref={this.popupMenuRef} id='iframeHost' className={styles.iframeHost} style={divHostStyle}>\n                {/* <GraphEditor/> */}\n                {this.state.xmlgraph && this.state.semtalk && this.state.diag &&\n                  <TSEditor site={this.props.site} xmlgraph={this.state.xmlgraph}\n                    // diaglist={this.state.diaglist}\n                    diagcaption={this.state.diag.ObjectCaption}\n                    diagid={this.state.diag.ID}\n                    width={this.props.width} height={this.props.height}\n                    stencil={this.state.stencil}\n                    // xmlshapes={this.state.xmlshapes}\n                    //  semtalk={this.state.semtalk}\n                    callback={this}\n                    ispanzoom={true}\n                    isstencil={true}\n                    isconnectionpoints={true}\n                  />\n                }\n              </div>\n            }\n            {/* {this.state.semtalk && !this.state.hideFormDialog &&\n                   <div>\n                    <SemTalkForm context={this.props.context} semtalk={this.state.semtalk}\n                    />\n                  </div>\n              } */}\n          </div>\n          <div>\n            {this.state.showSearch &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showSearch}\n                type={PanelType.medium}\n                isBlocking={false}\n                onDismiss={() => this._onClose({ showSearch: false })}\n                headerText={this.state.semtalk.getResStrListener(\"STRDLHTMLSEARCH\")}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n                <SemTalkTable semtalk={this.state.semtalk} />\n              </Panel>\n            }\n            {this.state.showFacetSearch &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showFacetSearch}\n                type={PanelType.extraLarge}\n                isBlocking={false}\n                onDismiss={() => this._onClose({ showFacetSearch: false })}\n                headerText={this.state.semtalk.getResStrListener(\"STRDLHTMLSEARCH\")}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n                <SemTalkFacetSearch />\n              </Panel>\n            }\n            {this.state.showSettings &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showSettings}\n                type={PanelType.medium}\n                onDismiss={() => { this._onClose({ showSettings: false }); window.location.reload(); }}\n                headerText={this.state.semtalk.getResStr(\"STROPTIONS\")}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n                <SemTalkSettings semtalk={this.state.semtalk}\n                  guilanguage={this.props.guilanguage}\n                />\n              </Panel>\n            }\n            {this.state.showModelProperties &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showModelProperties}\n                type={PanelType.medium}\n                onDismiss={() => this._onClose({ showModelProperties: false })}\n                headerText={\"Model Properties\"}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n                <SemTalkModelProperty\n                  semtalk={this.state.semtalk}\n                  // context={this.props.context}\n                  mongo={this.props.mongo}\n                  library={this.props.library}\n                  docname={this.state.semtalk.base.ObjectName}\n                //  filter={this.props.filter} token={this.props.token} service={this.props.service}\n                />\n              </Panel>\n            }\n            {this.state.showDiag &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showDiag}\n                type={PanelType.medium}\n                onDismiss={() => this._onClose({ showDiag: false })}\n                headerText={this.state.semtalk.getResStrListener(\"STRDLHTMLOUTDIA\")}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n                <SemTalkDiagramTab context={this.props.context}\n                  semtalk={this.state.semtalk}\n                  goodlist={[]} badlist={[]}\n                />\n              </Panel>\n            }\n            {this.state.showNav &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showNav}\n                type={PanelType.medium}\n                isBlocking={false}\n                onDismiss={() => this._onClose({ showNav: false })}\n                //         headerText={strings.Navigation}\n                headerText={this.state.semtalk.getResStrListener(\"STRDLHTMLDIAGR\")}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n                <SemTalkNavigation\n                  semtalk={this.state.semtalk}\n                  callback={this}\n                  goodlist={this.props.goodlist} badlist={this.props.badlist} />\n              </Panel>\n            }\n            {this.state.showHie &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showHie}\n                type={PanelType.medium}\n                isBlocking={false}\n                onDismiss={() => this._onClose({ showHie: false })}\n                headerText={this.state.semtalk.getResStr(\"STROBJECTS\")}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n                <SemTalkObjects\n                  semtalk={this.state.semtalk}\n                  callback={this} />\n              </Panel>\n            }\n            {this.state.showAssocTypes &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showAssocTypes}\n                type={PanelType.smallFixedFar}\n                isBlocking={false}\n                onDismiss={() => this._onClose({ showAssocTypes: false })}\n                headerText={this.state.semtalk.getResStrListener(\"STRDLGTABASS\")}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n                <SemTalkAssociationTypes\n                  semtalk={this.state.semtalk}\n                  callback={this} />\n              </Panel>\n            }\n            {this.state.showAttrTypes &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showAttrTypes}\n                type={PanelType.smallFixedFar}\n                isBlocking={false}\n                onDismiss={() => this._onClose({ showAttrTypes: false })}\n                headerText={this.state.semtalk.getResStrListener(\"STRDLGTABATT\")}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n                <SemTalkAttributeTypes\n                  semtalk={this.state.semtalk}\n                  callback={this} />\n              </Panel>\n            }\n            {this.state.showMethodTypes &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showMethodTypes}\n                type={PanelType.smallFixedFar}\n                isBlocking={false}\n                onDismiss={() => this._onClose({ showMethodTypes: false })}\n                headerText={this.state.semtalk.getResStrListener(\"STRDLGTABMET\")}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n                <SemTalkMethodTypes\n                  semtalk={this.state.semtalk} callback={this} />\n              </Panel>\n            }\n            {this.state.showStateTypes &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showStateTypes}\n                type={PanelType.smallFixedFar}\n                isBlocking={false}\n                onDismiss={() => this._onClose({ showStateTypes: false })}\n                headerText={this.state.semtalk.getResStrListener(\"STRDLGTABSTA\")}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n                <SemTalkStateTypes\n                  semtalk={this.state.semtalk} callback={this} />\n              </Panel>\n            }\n            {this.state.showDiagTypes &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showDiagTypes}\n                type={PanelType.smallFixedFar}\n                isBlocking={false}\n                onDismiss={() => this._onClose({ showDiagTypes: false })}\n                headerText={this.state.semtalk.getResStrListener(\"STRDIAGTYPE\")}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n                <SemTalkDiagramTypes\n                  semtalk={this.state.semtalk} callback={this} />\n              </Panel>\n            }\n            {this.state.showRep &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showRep}\n                type={PanelType.medium}\n                isBlocking={false}\n                onDismiss={() => this._onClose({ showRep: false })}\n                headerText={this.state.semtalk.getResStrListener(\"STRREPORT\")}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n              </Panel>\n            }\n            {this.state.showRepositoryTable &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showRepositoryTable}\n                type={PanelType.large}\n                onDismiss={() => {\n                  this._onClose({ showRepositoryTable: false });\n                  for (let k in sessionStorage) {\n                    if (k.startsWith(\"mgGetItemNames_\")) {\n                      sessionStorage.removeItem(k);\n                    }\n                  }\n                }}\n                headerText={this.state.semtalk.getResStr(\"STRREPOSITORY\") + \": \" + this.props.mongo.repository}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n                {/* {!this.props.mongo.usemongo &&\n              <SemTalkRepository />\n            } */}\n                <SemTalkRepository\n                  mongo={this.props.mongo}\n                  context={this.props.context}\n                  site={this.props.site}\n                  semtalk={this.state.semtalk}\n                  showSimulation={this.props.showSimulation}\n                  showBPMN={this.props.showBPMN}\n                />\n                {/* <SemTalkReport context={this.props.context} filter={this.props.filter}\n              token={this.props.token} service={this.props.service} pagesize={20} /> */}\n              </Panel>\n            }\n            {this.state.showTableEditor &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showTableEditor}\n                type={PanelType.large}\n                isBlocking={false}\n                onDismiss={() => { this._onClose({ showTableEditor: false }); }}\n                headerText={this.state.semtalk.getResStr(\"STRTABLE\")}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n                {/* {!this.props.mongo.usemongo &&\n              <SemTalkRepository />\n            } */}\n                <SemTalkTableEditor\n                  semtalk={this.state.semtalk}\n                  callback={this}\n                  mongo={this.props.mongo}\n                  context={this.props.context}\n                  site={this.props.site}\n                  showSimulation={this.props.showSimulation}\n                  showBPMN={this.props.showBPMN}\n                />\n                {/* <SemTalkReport context={this.props.context} filter={this.props.filter}\n              token={this.props.token} service={this.props.service} pagesize={20} /> */}\n              </Panel>\n            }\n            {this.state.showTableImport &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showTableImport}\n                type={PanelType.large}\n                onDismiss={() => this._onClose({ showTableImport: false })}\n                headerText={\"Table Import\"}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              >\n                <SemTalkTableImport context={this.props.context} semtalk={this.state.semtalk}\n                  graphClient={this.props.graphClient}\n                  library={this.props.library}\n                  templates={this.props.templates}\n                  mongo={this.props.mongo}\n                />\n              </Panel>\n            }\n            {this.state.showProp &&\n              this.state.semtalk &&\n              <Panel\n                isOpen={this.state.showProp}\n                type={PanelType.medium}\n                onDismiss={() => this._onClose({ showProp: false })}\n                isBlocking={false}\n                closeButtonAriaLabel={this.state.semtalk.getResStrListener(\"STRDLGCMDCL\")}\n              > {this.state.semtalk &&\n                <SemTalkPivot context={this.props.context} semtalk={this.state.semtalk}\n                  graphClient={this.props.graphClient}\n                  library={this.props.library}\n                  templates={this.props.templates}\n                  showProps={this.props.propsVisible} site={this.props.site}\n                  goodlist={this.props.goodlist} badlist={this.props.badlist} navigateproperties={true}\n                  showGeneral={true} showAttributes={true} showAssocs={true}\n                  showSimulation={this.props.showSimulation} showBPMN={this.props.showBPMN}\n                  showSynonyms={this.props.showlanguage} showMethods={true} showStates={true} showInheritance={true} showInstances={true}\n                  showAudit={true} showdiagproperties={true}\n                  stencil={this.state.stencil}\n                  spCheckInOut={this.props.spCheckInOut}\n                  mongo={this.props.mongo}\n\n                />\n                }\n              </Panel>\n            }\n            {\n              this.state.semtalk &&\n              <Panel isOpen={!this.state.hideHyperlinkDialog}\n                onDismiss={() => this._onClose({ hideHyperlinkDialog: true })}\n                headerText={this.state.semtalk.getResStr(\"STRHYPERLINKS\")}\n                isBlocking={false}>\n                <SemTalkAttachmentTab semtalk={this.state.semtalk} newitem={true}></SemTalkAttachmentTab>\n              </Panel>\n            }\n            {\n              this.state.semtalk && !this.state.hideOpenLinkDialog &&\n              <Panel isOpen={!this.state.hideOpenLinkDialog}\n                onDismiss={() => this._onClose({ hideOpenLinkDialog: true })}\n                isBlocking={false}\n                // headerText={this.state.semtalk.getResStrListener(\"STRDLHTMLPROPS\")}\n                type={PanelType.smallFixedFar}\n                headerText={this.state.semtalk.getResStr(\"STRMNUIMAGE\")}\n              >\n                <div><a href={this.state.openlinkurl} target=\"_blank\">{this.state.openlinkcaption}</a></div>\n              </Panel>\n            }\n            {\n              this.state.semtalk && !this.state.hideFileOpen &&\n              <Panel isOpen={!this.state.hideFileOpen}\n                onDismiss={() => this._onClose({ hideFileOpen: true })}\n                isBlocking={true}\n                // headerText={this.state.semtalk.getResStrListener(\"STRDLHTMLPROPS\")}\n                type={PanelType.medium}\n                headerText={this.state.spexplorercaption}\n              >\n                <SemTalkOpen context={this.props.context}\n                  semtalk={this.state.semtalk}\n                  callback={this}\n                  site={this.props.site}\n                  library={this.props.library}\n                  templates={this.props.templates}\n                  isopen={this.state.isopen}\n                  isnew={this.state.isnew}\n                  issaveas={this.state.issaveas}\n                  isimport={this.state.isimport}\n                  title={this.state.spexplorercaption}\n                  filename={this.state.filename}\n                  template={this.state.template}\n                  templist={this.checkouttoken_templist}\n                  spCheckInOut={this.props.spCheckInOut}\n                  mongo={this.state.mongo}\n                />\n              </Panel>\n            }\n            {\n              this.state.semtalk &&\n              <Panel isOpen={!this.state.hidePropertyDialog}\n                onDismiss={() => { this._onClose({ hidePropertyDialog: true }); }}\n                isBlocking={false}\n                // headerText={this.state.semtalk.getResStrListener(\"STRDLHTMLPROPS\")}\n                type={PanelType.medium}\n              //   headerText={strings.PropsLabel}\n              >\n                <SemTalkPivot context={this.props.context} semtalk={this.state.semtalk}\n                  graphClient={this.graphClient}\n                  showProps={this.props.propsVisible} site={this.props.site}\n                  library={this.props.library}\n                  templates={this.props.templates}\n                  goodlist={this.props.goodlist} badlist={this.props.badlist} navigateproperties={true}\n                  showGeneral={true} showAttributes={true} showAssocs={true}\n                  showSynonyms={true} showMethods={true} showStates={true} showInheritance={true} showInstances={true}\n                  showAudit={true} showdiagproperties={true}\n                  showSimulation={this.props.showSimulation} showBPMN={this.props.showBPMN}\n                  stencil={this.state.stencil}\n                  spCheckInOut={this.props.spCheckInOut}\n                  mongo={this.state.mongo}\n                />\n              </Panel>\n            }\n            {\n              this.state.semtalk &&\n              <Panel isOpen={!this.state.hideCustomizeDialog}\n                onDismiss={() => { this._onClose({ hideCustomizeDialog: true }); }}\n                isBlocking={false}\n                type={PanelType.medium}\n              //  headerText={this.state.semtalk.getResStrListener(\"STRDLGLCAPTION\").replace(\":\",\"\")}\n              >\n                <SemTalkCustomize context={this.props.context} semtalk={this.state.semtalk}\n                  site={this.props.site}\n                  showSystemClass={true}\n                  showAssociationType={true} showAttributeType={true} showDiagramType={true}\n                />\n              </Panel>\n            }\n            {\n              this.state.semtalk &&\n              <Panel\n                isOpen={!this.state.hideSelectDialog}\n                onDismiss={() => { this._onClose({ hideSelectDialog: true }); }}\n                isBlocking={true}\n                headerText={this.state.semtalk.getResStrListener(\"STRSELECTSL\")}\n                type={PanelType.smallFixedFar}>\n                <SemTalkSelect context={this.props.context}\n                  semtalk={this.state.semtalk}\n                  graphClient={this.graphClient}\n                  callback={this.ChangeObject}\n                  site={this.props.site} isexport={this.props.isexport}\n                  systemclass={null} isclasses={this.selectclass}\n                  focus={this.state.object}\n                  mongo={this.state.mongo}\n                  sharepointrepository={this.props.sharepointrepository}\n                />\n              </Panel>\n            }\n            {\n              this.state.semtalk &&\n              <Panel\n                isOpen={!this.state.hideTermSetDialog}\n                onDismiss={() => { this._onClose({ hideTermSetDialog: true }); }}\n                isBlocking={false}\n                headerText={\"Taxonomy\"}\n                type={PanelType.medium}>\n                <SemTalkTermSet context={this.props.context} graphClient={this.graphClient}\n                  clientID={this.props.clientID} authority={this.props.authority}\n                  scopes={this.props.scopes} semtalk={this.state.semtalk}\n                  callbackimport={this.ImportTermSetTree}\n                  goodlist={this.props.goodlist} badlist={this.props.badlist}\n                  site={this.props.site} isexport={false}\n                  systemclass={null} focus={this.state.object}\n                  termset={this.props.termset}\n                  termsetgroup={this.props.termsetgroup}\n                  termsetassoc={this.props.termsetassoc}\n                  termsetroot={this.props.termsetroot}\n                />\n              </Panel>\n            }\n            {\n              this.state.semtalk &&\n              <Panel\n                isOpen={!this.state.hideExpandDialog}\n                onDismiss={() => { this._onClose({ hideExpandDialog: true }); }}\n                isBlocking={false}\n                headerText={this.state.semtalk.getResStrListener(\"STREXPAND\")}\n                type={PanelType.smallFixedFar}>\n                <SemTalkExpand semtalk={this.state.semtalk}\n                  callback={this.ExpandObject}\n                  simcallback={this.ExpandSimilarObject}\n                  semantics_service={this.semantics_service + \"spacy/matchingconcepts\"}\n                  focus={this.state.object}\n                  mongo={this.state.mongo} />\n              </Panel>\n            }\n            {\n              this.state.semtalk &&\n              <Panel\n                isOpen={!this.state.hideRelationDialog}\n                onDismiss={() => { this._onClose({ hideRelationDialog: true }); }}\n                isBlocking={true}\n                headerText={this.state.semtalk.getResStrListener(\"STRSELECTSL\")}\n                type={PanelType.smallFixedFar}>\n                <SemTalkSelect context={this.props.context} semtalk={this.state.semtalk}\n                  graphClient={this.graphClient}\n                  callback={this.ChangeRelation}\n                  site={this.props.site} isexport={this.props.isexport}\n                  systemclass={this.otherroot}\n                  isclasses={this.selectclass} focus={0}\n                  mongo={this.state.mongo}\n                  sharepointrepository={this.props.sharepointrepository}\n                />\n              </Panel>\n            }\n            {\n              this.state.semtalk &&\n              <Panel\n                isOpen={!this.state.hideCreateDiagramDialog}\n                onDismiss={() => { this._onClose({ hideCreateDiagramDialog: true }); }}\n                isBlocking={true}\n                headerText={this.state.semtalk.getResStrListener(\"STRDLHTMLOUTDIA\")}\n                type={PanelType.smallFixedFar}>\n                <SemTalkCreateDiagram semtalk={this.state.semtalk} callback={this.createPage}\n                  diagram={this.state.semtalk.page} />\n              </Panel>\n            }\n            {\n              this.state.semtalk &&\n              <Panel\n                isOpen={!this.state.hideInsertDialog}\n                onDismiss={() => { this._onClose({ hideInsertDialog: true }); }}\n                isBlocking={true}\n                headerText={this.state.semtalk.getResStrListener(\"STRDLGINSCAPTION\")}\n                type={PanelType.smallFixedFar}>\n                <SemTalkInsert context={this.props.context} semtalk={this.state.semtalk}\n                  graphClient={this.graphClient}\n                  callback={this.InsertObject}\n                  site={this.props.site} isexport={this.props.isexport}\n                  systemclass={this.diagramroot} isclasses={this.isclasses}\n                  isinsert={true} focus={0}\n                  mongo={this.state.mongo}\n                  sharepointrepository={this.props.sharepointrepository}\n                />\n              </Panel>\n            }\n            {\n              this.state.semtalk &&\n              <Panel\n                isOpen={!this.state.hideComposeDialog}\n                onDismiss={() => { this._onClose({ hideComposeDialog: true }); }}\n                isBlocking={false}\n                headerText={this.state.semtalk.getResStrListener(\"STRCOMPOSE\")}\n                type={PanelType.smallFixedFar}>\n                {this.state.semtalk &&\n                  <SemTalkCompose context={this.props.context} semtalk={this.state.semtalk}\n                    graphClient={this.graphClient}\n                    site={this.props.site} mongo={this.state.mongo}\n                    sharepointrepository={this.props.sharepointrepository}\n                  />\n                }\n              </Panel>\n            }\n            {\n              this.state.semtalk &&\n              <Panel\n                isOpen={!this.state.hideFormDialog}\n                onDismiss={() => { this._onClose({ hideFormDialog: true }); }}\n                isBlocking={false}\n                type={PanelType.medium}\n              >\n                {this.state.semtalk &&\n                  <SemTalkForm context={this.props.context} semtalk={this.state.semtalk}\n                  />\n                }\n              </Panel>\n            }\n            {\n              this.state.semtalk &&\n              <Panel\n                isOpen={!this.state.hideSubTaskDialog}\n                onDismiss={() => { this._onClose({ hideSubTaskDialog: true }); }}\n                isBlocking={false}\n                type={PanelType.medium}\n              >\n                {this.state.semtalk &&\n                  this.state.semtalk.renderSubTaskDialog(this.state.addoncommand)\n                }\n              </Panel>\n            }\n            {\n              this.state.semtalk &&\n              <Panel\n                isOpen={!this.state.hideShapeStyle}\n                onDismiss={() => { this._onClose({ hideShapeStyle: true }); }}\n                isBlocking={false}\n                headerText={this.state.semtalk.getResStr(\"STRSTYLE\")}\n                type={PanelType.smallFixedFar}>\n                {this.state.semtalk &&\n                  <SemTalkShapeStyle semtalk={this.state.semtalk} />\n                }\n              </Panel>\n            }\n            {\n              this.state.semtalk &&\n              <Panel\n                isOpen={!this.state.hideHelp}\n                onDismiss={() => { this._onClose({ hideHelp: true }); }}\n                isBlocking={false}\n                headerText={this.state.semtalk.getResStr(\"STRHELP\").replace(\"&\", \"\")}\n                type={PanelType.smallFixedFar}>\n                {this.state.semtalk &&\n                  <SemTalkAbout />\n                }\n              </Panel>\n            }\n            {\n              this.state.semtalk &&\n              <Panel\n                isOpen={!this.state.hidemgLoginDialog}\n                onDismiss={() => { this._onClose({ hidemgLoginDialog: true }); }}\n                isBlocking={true}\n                headerText={this.state.semtalk.getResStr(\"STRLOGIN\").replace(\"&\", \"\")}\n                type={PanelType.smallFluid}>\n                {this.state.semtalk &&\n                  <LoginIntern setToken={this.props.setToken}\n                    setcurrToken={this.props.setcurrToken}\n                    mongo={this.props.mongo}\n                    dismiss={() => { this._onClose({ hidemgLoginDialog: true }); window.location.reload(); }}\n                  />}\n              </Panel>\n            }\n          </div>\n        </div>\n        <ContextualMenu\n          items={this.menuItems}\n          hidden={!this.state.showContextualMenu}\n          target={this.popupMenuRef}\n          onItemClick={this.onHideContextualMenu}\n          onDismiss={this.onHideContextualMenu}\n        />\n      </div >\n    );\n  }\n}\n","import React from 'react';\r\nimport {\r\n  createTheme,\r\n  Customizations\r\n} from 'office-ui-fabric-react';\r\nimport './App.css';\r\n\r\nimport { SemTalkBaseConstant, SemTalkLanguage, SemTalkLanguageCode } from './components/application/tbase/Interface';\r\nimport { GetLanguageCode, GetLanguage } from './components/application/tbase/langtools';\r\nimport Login from './components/controls/stlogin/Login';\r\nimport { IMongoOption } from './components/SemTalkMongoServer';\r\nimport { SemTalkOnline } from './components/SemTalkOnline';\r\nimport { SemTalkCookie } from './components/ISemTalkOnline';\r\n\r\n// https://github.com/microsoft/fluentui/wiki/Customizing-fonts\r\n\r\nlet ff0 = '\"Segoe UI WestEuropean\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif';\r\nlet ff = (window as any).localStorage.getItem(SemTalkCookie.guifont);\r\nlet theme: any;\r\nif (ff === 'undefined') ff = ff0;\r\nif (!ff) ff = ff0;\r\n\r\nlet th = (window as any).localStorage.getItem(SemTalkCookie.themeStyle);\r\nlet ic = (window as any).localStorage.getItem(SemTalkCookie.iconcolor);\r\nlet icj: any = undefined;\r\nif (ic !== 'undefined' && ic !== null && ic !== \"\") {\r\n  switch (ic) {\r\n    case \"Black\": {\r\n      icj = {\"themePrimary\" : \"#000000\", \"themeDarkAlt\": '#616161',\"themeDark\": '#616161', \"themeDarker\": '#8c8c8c'};\r\n      break;\r\n    }\r\n    case \"Green\": {\r\n      icj = {\"themePrimary\" : \"#00c21d\", \"themeDarkAlt\": '#009316',\"themeDark\": '#009316', \"themeDarker\": '#006d10'};\r\n      break;\r\n    }\r\n    case \"Red\": {\r\n      icj = {\"themePrimary\" : \"#e00004\", \"themeDarkAlt\": '#ab0003',\"themeDark\": '#ab0003', \"themeDarker\": '#7e0002'};\r\n      break;\r\n    }\r\n    case \"Blue\": {\r\n      icj = {\"themePrimary\" : \"#0078d4\", \"themeDarkAlt\": '#005ba1',\"themeDark\": '#005ba1', \"themeDarker\": '#004377'};\r\n      break;\r\n    }\r\n    case \"Orange\": {\r\n      icj = {\"themePrimary\" : \"#f09c00\", \"themeDarkAlt\": '#b67600',\"themeDark\": '#b67600', \"themeDarker\": '#865700'};\r\n      break;\r\n    }\r\n    case \"White\": {\r\n      icj = {\"themePrimary\" : \"#ffffff\", \"themeDarkAlt\": '#f4f4f4',\"themeDark\": '#f4f4f4', \"themeDarker\": '#f8f8f8'};\r\n      break;\r\n    }\r\n    default: {\r\n      break;\r\n    }\r\n  }\r\n}\r\nif (th !== undefined && th !== null && th !== \"\") {\r\n  let themeTemplate = JSON.parse(th);\r\n  if (themeTemplate.themePrimary !== undefined && themeTemplate.themePrimary !== null) {\r\n    if (icj !== undefined) {\r\n      themeTemplate.themePrimary = icj[\"themePrimary\"];\r\n      themeTemplate.themeDark = icj[\"themeDark\"];\r\n      themeTemplate.themeDarker = icj[\"themeDarker\"];\r\n      themeTemplate.themeDarkAlt = icj[\"themeDarkAlt\"];\r\n    }\r\n  }\r\n  if (themeTemplate.white !== undefined && themeTemplate.white !== null) {\r\n    let bg = themeTemplate.white;\r\n    if (bg !== 'undefined' && bg !== null && bg !== \"\") {\r\n      (window as any).localStorage.setItem(SemTalkCookie.backgroundColor, bg);\r\n    }\r\n  }\r\n  if (themeTemplate !== 'undefined' && themeTemplate !== null) {\r\n    theme = createTheme({\r\n      defaultFontStyle: { fontFamily: ff },\r\n      palette: themeTemplate\r\n    });\r\n  } else {\r\n      if (icj !== undefined){\r\n        theme = createTheme({\r\n          defaultFontStyle: { fontFamily: ff },\r\n          palette: {\r\n            themePrimary : icj[\"themePrimary\"],\r\n            themeDark : icj[\"themeDark\"],\r\n            themeDarker : icj[\"themeDarker\"],\r\n            themeDarkAlt : icj[\"themeDarkAlt\"],\r\n          }\r\n        });\r\n      } else {\r\n        theme = createTheme({\r\n          defaultFontStyle: { fontFamily: ff }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  else {\r\n  if (icj !== undefined) {\r\n    theme = createTheme({\r\n      defaultFontStyle: { fontFamily: ff },\r\n      palette: {\r\n        themePrimary : icj[\"themePrimary\"],\r\n        themeDark : icj[\"themeDark\"],\r\n        themeDarker : icj[\"themeDarker\"],\r\n        themeDarkAlt : icj[\"themeDarkAlt\"],\r\n      }\r\n    });\r\n  } else {\r\n    theme = createTheme({\r\n      defaultFontStyle: { fontFamily: ff }\r\n    });\r\n  }\r\n}\r\n// if (ff !== ff0) {\r\n  Customizations.applySettings({ theme });\r\n// }\r\n\r\nexport interface IAppProps {\r\n  setToken: any;\r\n  getToken: any;\r\n  mongo: IMongoOption;\r\n  // semmongoserverurl: string;\r\n  semmongologintokencookiename: string;\r\n  // semmongoconnectiontoken: string;\r\n  // pca: IPublicClientApplication;\r\n}\r\nexport interface IAppState {\r\n  currLoginToken: any;\r\n}\r\n\r\nexport default class App extends React.Component<IAppProps, IAppState> {\r\n  constructor(props: IAppProps) {\r\n    super(props);\r\n    document.title = `SemTalk Online`;\r\n    this.state = {\r\n      currLoginToken: null\r\n    };\r\n  }\r\n  public setcurrToken = (token: any) => {\r\n    this.setState({ \"currLoginToken\": token });\r\n  }\r\n  public async componentDidMount() {\r\n    let bg = (window as any).localStorage.getItem(SemTalkCookie.backgroundColor);\r\n    if (bg !== 'undefined' || bg !== null) {\r\n      document.body.style.backgroundColor = bg;\r\n    }\r\n\r\n    // window.addEventListener(\"beforeunload\", (ev) => { ev.preventDefault(); this.onTabClose(ev); });\r\n  }\r\n  // private onTabClose = (ev: any) => {\r\n  //   ev.preventDefault();\r\n  //   localStorage.removeItem(this.props.semmongologintokencookiename);\r\n  // }\r\n  public render(): React.ReactElement {\r\n    let token = this.state.currLoginToken;\r\n    if (!token) {\r\n      token = this.props.getToken();\r\n    }\r\n\r\n    let blc = GetLanguageCode((navigator.languages[1] || navigator.language));\r\n    let guilanguage: SemTalkLanguageCode = SemTalkLanguageCode.English;\r\n    if (blc) {\r\n      guilanguage = blc;\r\n    }\r\n    let language: string = SemTalkLanguage.English;\r\n    if (guilanguage === SemTalkLanguageCode.German) {\r\n      language = SemTalkLanguage.German;\r\n    }\r\n    let cdn = \"\";\r\n    let gl = GetLanguageCode((window as any).localStorage.getItem(SemTalkCookie.guilanguage));\r\n    if (gl) guilanguage = gl;\r\n    let l = GetLanguage((window as any).localStorage.getItem(SemTalkCookie.language));\r\n    if (l) language = l;\r\n\r\n    let showcommandbar: boolean = true;\r\n\r\n    let mongo = this.props.mongo;\r\n    let iselectron: boolean = mongo.iselectron;\r\n    let usemongo: boolean = mongo.usemongo;\r\n    let dbname = mongo.dbname;\r\n    let repository = mongo.repository;\r\n    let modelname = \"\";\r\n    let pagename = \"\";\r\n    let url = document.baseURI;\r\n    // let url = \"https://kind-flower-00727bb03.azurestaticapps.net/?guilanguage=en&language=English\";\r\n    if (url.indexOf(\"?\") > 0) {\r\n      let args = url.substr(url.indexOf(\"?\") + 1);\r\n      for (let param of args.split(\"&\")) {\r\n        let p = param.split(\"=\")[0];\r\n        let v = decodeURI(param.split(\"=\")[1]);\r\n        switch (p) {\r\n          case \"guilanguage\": {\r\n            let lc = GetLanguageCode(v);\r\n            if (lc)\r\n              guilanguage = lc;\r\n            break;\r\n          }\r\n          case \"language\": {\r\n            let lc = GetLanguage(v);\r\n            if (lc)\r\n              language = lc;\r\n            break;\r\n          }\r\n          case \"database\": {\r\n            dbname = v;\r\n            break;\r\n          }\r\n          case \"repository\": {\r\n            repository = v;\r\n            break;\r\n          }\r\n          case \"model\": {\r\n            modelname = v;\r\n            break;\r\n          }\r\n          case \"page\": {\r\n            pagename = v;\r\n            break;\r\n          }\r\n          case \"showcommandbar\": {\r\n            showcommandbar = (v !== \"false\");\r\n            break;\r\n          }\r\n          case \"iselectron\": {\r\n            iselectron = (v !== \"false\");\r\n            break;\r\n          }\r\n          case \"usemongo\": {\r\n            usemongo = (v !== \"false\");\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    mongo.usemongo=usemongo;\r\n    mongo.dbname = dbname;\r\n    mongo.repository = repository;\r\n    mongo.iselectron = iselectron;\r\n\r\n    if (!iselectron && mongo.usemongo) {\r\n      if (!token) {\r\n        return <Login setToken={this.props.setToken}\r\n          setcurrToken={this.setcurrToken}\r\n          mongo={mongo}\r\n        />;\r\n      } else {\r\n        mongo[\"semuserlogin\"] = token;\r\n      }\r\n    }\r\n    // console.debug(this.state.currLoginToken);\r\n    // https://graph.microsoft.com/v1.0/sites/semtalk.sharepoint.com:/teams/denkmalschutz:/\r\n    // https://graph.microsoft.com/v1.0/sites/semtalk.sharepoint.com:/sites/Modellierung:/lists/Buffers/items?expand=Title\r\n    let sharepointrepository = \"/sites/semtalk.sharepoint.com:/sites/Modellierung:/\";\r\n    let site = \".\";\r\n    let library = \"SDX\";\r\n    let support = \"Support\";\r\n    let ss = (window as any).localStorage.getItem(SemTalkCookie.simulation);\r\n    let s: boolean = false;\r\n    if (ss === 'true') {\r\n      s = true;\r\n    }\r\n    let bb = (window as any).localStorage.getItem(SemTalkCookie.bpmn);\r\n    let b: boolean = false;\r\n    if (bb === 'true') {\r\n      b = true;\r\n    }\r\n    let rr = (window as any).localStorage.getItem(SemTalkCookie.refinements);\r\n    let r: boolean = false;\r\n    if (rr === 'true') {\r\n      r = true;\r\n    }\r\n    let la = (window as any).localStorage.getItem(SemTalkCookie.showlanguage);\r\n    let ll: boolean = false;\r\n    if (la === 'true') {\r\n      ll = true;\r\n    }\r\n    let fb = (window as any).localStorage.getItem(SemTalkCookie.showtoolbar);\r\n    let showtoolbar: boolean = true;\r\n    if (fb === 'false') {\r\n      showtoolbar = false;\r\n    }\r\n    let hy = (window as any).localStorage.getItem(SemTalkCookie.showhyperlinkmarker);\r\n    let showhyperlinkmarker: boolean = true;\r\n    if (hy === 'false') {\r\n      showhyperlinkmarker = false;\r\n    }\r\n\r\n    let se = (window as any).localStorage.getItem(SemTalkCookie.semanticsserver);\r\n    let semantics_server = \"\";\r\n    if (se) {\r\n      semantics_server = se;\r\n    }\r\n\r\n    let sec = (window as any).localStorage.getItem(SemTalkCookie.semanticscorpus);\r\n    let semantics_corpus = \"de_core_news_md\";\r\n    if (sec) {\r\n      semantics_corpus = sec;\r\n    }\r\n\r\n    let sdi = (window as any).localStorage.getItem(SemTalkCookie.semanticsdistance);\r\n    let semantics_distance = \"0.7\";\r\n    if (sdi) {\r\n      semantics_distance = sdi;\r\n    }\r\n\r\n    let app = (window as any).localStorage.getItem(SemTalkCookie.applicationid);\r\n    let applicationid = \"f2f7dcf0-0917-4911-b587-f0c941391758\";\r\n    if (app) {\r\n      applicationid = app;\r\n    }\r\n\r\n    let aut = (window as any).localStorage.getItem(SemTalkCookie.authority);\r\n    let authority = \"https://login.microsoftonline.com/semtalk.onmicrosoft.com\";\r\n    if (aut) {\r\n      authority = aut;\r\n    }\r\n\r\n    let sco = (window as any).localStorage.getItem(SemTalkCookie.authority);\r\n    let scopes = [\"User.Read\",\r\n      \"Sites.Read.All\",\r\n      \"Group.ReadWrite.All\",\r\n      \"Files.Read.All\",\r\n      \"TermStore.ReadWrite.All\"];\r\n    if (sco) {\r\n      scopes = sco;\r\n    }\r\n\r\n\r\n    let tg = (window as any).localStorage.getItem(SemTalkCookie.termsetgroup);\r\n    let termsetgroup = \"\";\r\n    if (tg) {\r\n      termsetgroup = tg;\r\n    }\r\n    let ts = (window as any).localStorage.getItem(SemTalkCookie.termset);\r\n    let termset = \"\";\r\n    if (ts) {\r\n      termset = ts;\r\n    }\r\n    let tr = (window as any).localStorage.getItem(SemTalkCookie.termsetroot);\r\n    let termsetroot = \"\";\r\n    if (tr) {\r\n      termsetroot = tr;\r\n    }\r\n    let ta = (window as any).localStorage.getItem(SemTalkCookie.termsetassoc);\r\n    let termsetassoc = SemTalkBaseConstant.SLSubClassOf;\r\n    if (ta) {\r\n      termsetassoc = ta;\r\n    }\r\n    // termset = {\"ba1d58d5-f8f3-4336-b7af-79a495360e02\"}\r\n    // termsetgroup= {\"f9e6a049-6545-49fb-b26f-7df6a490b6c6\"}\r\n    // termsetassoc={ SemTalkBaseConstant.SLSubClassOf} \r\n\r\n    // let usemongo = true;\r\n\r\n    // let isexport = false;\r\n    // let navVisible = false;\r\n    // let svgshapes = \"\";\r\n\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <MsalProvider instance={this.props.pca}> */}\r\n        {/* <AuthenticatedTemplate> */}\r\n        <SemTalkOnline site={site}\r\n          library={library}\r\n          sharepointrepository={sharepointrepository}\r\n          model={modelname}\r\n          page={pagename}\r\n          support={support}\r\n          goodlist={[]} badlist={[]}\r\n          // hidebpmn={[]}\r\n          // hidesimulation={[]}\r\n          navVisible={true}\r\n          searchVisible={true}\r\n          propsVisible={true}\r\n          diagVisible={true}\r\n          hieVisible={true}\r\n          width={2000}\r\n          height={1000}\r\n          guilanguage={guilanguage}\r\n          language={language}\r\n          showlanguage={ll}\r\n          isexport={false}\r\n          templates={\"\"}\r\n          // svglibrary={\"\"}\r\n          clientID={applicationid}\r\n          authority={authority}\r\n          scopes={scopes}\r\n          termsetgroup={termsetgroup}\r\n          termset={termset}\r\n          termsetroot={termsetroot}\r\n          termsetassoc={termsetassoc}\r\n          spCheckInOut={false}\r\n          mongo={mongo}\r\n          setToken={this.props.setToken}\r\n          setcurrToken={this.setcurrToken}\r\n          // usemongo={usemongo}\r\n          // semmongoserverurl={this.props.mongo.semmongoserverurl}\r\n          // semuserlogintoken={this.state.currLoginToken}\r\n          // semmongoconnectiontoken={this.props.mongo.semmongoconnectiontoken}\r\n          showSimulation={s}\r\n          showBPMN={b}\r\n          showCommandBar={showcommandbar}\r\n          underlineRefinements={r}\r\n          cdn={cdn}\r\n          showToolBar={showtoolbar}\r\n          showhyperlinkmarker={showhyperlinkmarker}\r\n          semantics={{\r\n            server: semantics_server,\r\n            corpus: semantics_corpus,\r\n            distance: Number(semantics_distance)\r\n          }}\r\n        // pca={this.props.pca}\r\n        >\r\n        </SemTalkOnline>\r\n        {/* </AuthenticatedTemplate>\r\n\r\n          <UnauthenticatedTemplate>\r\n            <div>Please sign-in to see your profile information.</div>\r\n          </UnauthenticatedTemplate> */}\r\n        {/* </MsalProvider> */}\r\n      </div >\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Fabric, MessageBar, MessageBarType, TextField, Text, Stack, StackItem,\r\n  DefaultButton, PrimaryButton,\r\n  Dropdown, IDropdownOption\r\n} from 'office-ui-fabric-react';\r\n// import { IIconProps } from 'office-ui-fabric-react';\r\n\r\n\r\n// import { Link } from \"react-router-dom\";\r\nimport './Login.css';\r\nimport { IMongoOption, mgCreate_user, mglistDatabases } from '../../SemTalkMongoServer';\r\nimport { VisioRDFS } from '../../application/semtalklistener/visiordfs';\r\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { SemTalkCookie } from \"../../ISemTalkOnline\";\r\n// const addFriendIcon: IIconProps = { iconName: 'AddFriend' };\r\n\r\nexport interface ISignupProps {\r\n  setToken: any;\r\n  mongo: IMongoOption;\r\n}\r\nexport interface ISignupState {\r\n  dbname: string;\r\n  username: string | null;\r\n  fullname: string;\r\n  registrationkey: string;\r\n  password: string | null;\r\n  password2: string | null;\r\n  success: boolean;\r\n  nosuccess: boolean;\r\n  message: string;\r\n}\r\nexport default class Signup extends React.Component<ISignupProps, ISignupState> {\r\n  private res: IVisioRDFS;\r\n  constructor(props: ISignupProps) {\r\n    super(props);\r\n    let gl = (window as any).localStorage.getItem(SemTalkCookie.guilanguage);\r\n    if (!gl) gl = navigator.languages[1] || navigator.language;\r\n    this.res = new VisioRDFS(null, null);\r\n    this.res.init(null, gl);\r\n\r\n    this.init();\r\n\r\n    this.state = {\r\n      dbname: \"semtalkonline\",\r\n      username: null,\r\n      fullname: \"\",\r\n      password: null,\r\n      password2: null,\r\n      registrationkey: \"\",\r\n      success: false,\r\n      nosuccess: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  private async init() {\r\n    let dblist = await mglistDatabases(this.props.mongo, this.props.mongo.semmongoconnectiontoken, this.props.mongo.dbname, \"SDX\");\r\n    // console.debug(dblist);\r\n    for (let db of dblist) {\r\n      if (db !== \"semtalkonline\") {\r\n        this.options.push({ key: db, text: db });\r\n      }\r\n    }\r\n  }\r\n  private handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    if (this.state.password !== this.state.password2) {\r\n      this.setState({\r\n        \"success\": false, \"nosuccess\": true,\r\n        message: this.res.getResStr(\"STRLoginPasswordnoMatch\")\r\n      });\r\n      return;\r\n    }\r\n    if (this.state.username?.indexOf(\"@\") === -1 || this.state.username?.indexOf(\".\") === -1) {\r\n      this.setState({\r\n        \"success\": false, \"nosuccess\": true,\r\n        message: this.res.getResStr(\"STRLoginUserIsNotEMail\")\r\n      });\r\n      return;\r\n    }\r\n    if (this.state.username && this.state.password) {\r\n      try {\r\n        let mongo = this.props.mongo;\r\n        mongo.dbname = this.state.dbname;\r\n        const res: any = await mgCreate_user(mongo,\r\n          this.state.username,\r\n          this.state.fullname,\r\n          this.state.registrationkey,\r\n          this.state.password);\r\n        if (res !== undefined) {\r\n          this.setState({ \"success\": true, \"nosuccess\": false, message: this.res.getResStr(\"STRLoginAccountCreated\") });\r\n          // this.props.setToken(res);\r\n          // this.props.setcurrToken(res);\r\n        } else {\r\n          this.setState({ \"success\": false, \"nosuccess\": true, message: this.res.getResStr(\"STRLoginAccountCreationFailed\") });\r\n        }\r\n      }\r\n      catch (err) {\r\n        let msg: string = \"unknown\";\r\n        if (err && typeof err === \"object\") {\r\n          const e1: any = err;\r\n          msg = e1[\"message\"];\r\n        }\r\n        this.setState({ \"success\": false, \"nosuccess\": true, message: msg });\r\n      }\r\n    }\r\n  }\r\n  private options: IDropdownOption[] = [\r\n    { key: \"semtalkonline\", text: \"Default\" }\r\n  ];\r\n  public render(): React.ReactElement {\r\n    let divHostStyle: any = {\r\n      // position: \"fixed\",\r\n      // height: \"100%\", //this.props.height,\r\n      // width: \"80%\", //this.props.width,\r\n      padding: \"20px\"\r\n    };\r\n    const stackTokens = { childrenGap: 10 };\r\n    return (\r\n      <Fabric>\r\n        {this.res &&\r\n          <Stack style={divHostStyle} tokens={stackTokens}>\r\n            <StackItem>\r\n              <Text variant=\"xxLarge\">SemTalk Online</Text>\r\n            </StackItem>\r\n            <StackItem>\r\n              <Text variant=\"large\">{this.res.getResStr(\"STRREGISTER\")}</Text>\r\n            </StackItem>\r\n            <StackItem>\r\n              {!this.state.success && this.state.nosuccess && (\r\n                <MessageBar\r\n                  // Setting this to error, blocked, or severeWarning automatically sets the role to \"alert\"\r\n                  messageBarType={MessageBarType.error}\r\n                // Or you could set the role manually, IF an alert role is appropriate for the message\r\n                // role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </MessageBar>\r\n              )}\r\n              {!this.state.success &&\r\n                <form onSubmit={this.handleSubmit}>\r\n                  <Stack tokens={stackTokens}>\r\n                    <StackItem>\r\n                      <Dropdown\r\n                        placeholder=\"Select a Database\"\r\n                        label={this.res.getResStr(\"STRSQLDATABASE\").replace(\":\", \"\")}\r\n                        defaultSelectedKey={this.state.dbname}\r\n                        onChange={(_e: any, v?: any) => {\r\n                          this.setState({ \"dbname\": v.key });\r\n                        }}\r\n                        options={this.options}\r\n                      />\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <TextField required label={this.res.getResStr(\"STRUSERID\")}\r\n                        placeholder=\"max@mustermann.org\"\r\n                        onChange={(_e: any, v?: any) => this.setState({ \"username\": v })} />\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <TextField label={this.res.getResStr(\"STRDLGPROXYUSER\")}\r\n                        placeholder=\"Max Mustermann\"\r\n                        onChange={(_e: any, v?: any) => this.setState({ \"fullname\": v })} />\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <TextField type=\"password\" label={this.res.getResStr(\"STRDLGPWD\")} required\r\n                        onChange={(_e: any, v?: any) => this.setState({ \"password\": v })} />\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <TextField type=\"password\" label={this.res.getResStr(\"STRRepeat\") + \" \" + this.res.getResStr(\"STRDLGPWD\")} required\r\n                        onChange={(_e: any, v?: any) => this.setState({ \"password2\": v })} />\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <TextField label={this.res.getResStr(\"STRPRODKEY\")}\r\n                        onChange={(_e: any, v?: any) => this.setState({ \"registrationkey\": v })} />\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <Stack tokens={stackTokens} horizontal>\r\n                        <PrimaryButton type=\"submit\" text={this.res.getResStr(\"STRDLGCMDOK\")}></PrimaryButton>\r\n                        <DefaultButton><Link to=\"/\">{this.res.getResStr(\"STRDLGCMDCA\")}</Link></DefaultButton>\r\n                      </Stack>\r\n                    </StackItem>\r\n                  </Stack>\r\n                </form>\r\n              }\r\n            </StackItem>\r\n            {this.state.success &&\r\n              <Stack style={divHostStyle} tokens={stackTokens}>\r\n                <StackItem>\r\n                  <MessageBar\r\n                    messageBarType={MessageBarType.success}>\r\n                    {this.state.message}\r\n                  </MessageBar>\r\n                </StackItem>\r\n                <StackItem>\r\n                  <DefaultButton><Link to=\"/\">{this.res.getResStr(\"STRDLGBOPTLO\")}</Link></DefaultButton>\r\n                </StackItem>\r\n              </Stack>\r\n            }\r\n          </Stack>\r\n        }\r\n      </Fabric >\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Fabric, MessageBar, MessageBarType, TextField, Text, Stack, StackItem,\r\n  Checkbox,\r\n  DefaultButton, PrimaryButton,\r\n  Dropdown, IDropdownOption\r\n} from 'office-ui-fabric-react';\r\n\r\n// import { Link } from \"react-router-dom\";\r\nimport './Login.css';\r\nimport {\r\n  IMongoOption, mgCreate_database, mgEncode,\r\n  mgnewDatabaseName, mglistDatabases\r\n} from '../../SemTalkMongoServer';\r\nimport { VisioRDFS } from '../../application/semtalklistener/visiordfs';\r\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { SemTalkCookie } from \"../../ISemTalkOnline\";\r\n\r\nexport interface ICloneDatabaseProps {\r\n  mongo: IMongoOption;\r\n}\r\nexport interface ICloneDatabaseState {\r\n  dbname: string;\r\n  desturl: string;\r\n  destdbname: string;\r\n  reponame: string;\r\n  destreponame: string;\r\n  users: boolean;\r\n  semtalklib: boolean;\r\n  conntoken: string;\r\n  success: boolean;\r\n  nosuccess: boolean;\r\n  message: string;\r\n  options: IDropdownOption[];\r\n}\r\nexport default class CloneDatabase extends React.Component<ICloneDatabaseProps, ICloneDatabaseState> {\r\n  private res: IVisioRDFS;\r\n  constructor(props: ICloneDatabaseProps) {\r\n    super(props);\r\n    let gl = (window as any).localStorage.getItem(SemTalkCookie.guilanguage);\r\n    if (!gl) gl = navigator.languages[1] || navigator.language;\r\n    this.res = new VisioRDFS(null, null);\r\n    this.res.init(null, gl);\r\n\r\n\r\n    // const shortName: string = uniqueNamesGenerator({\r\n    //   dictionaries: [adjectives, animals],\r\n    //   separator: '-',\r\n    //   length: 2,\r\n    // });\r\n\r\n    this.state = {\r\n      dbname: this.props.mongo.dbname,\r\n      desturl: \"mongodb://localhost:27017\",\r\n      destdbname: \"\",\r\n      reponame: this.props.mongo.repository,\r\n      destreponame: \"repository2\",\r\n      users: false,\r\n      semtalklib: true,\r\n      conntoken: \"\",\r\n      success: false,\r\n      nosuccess: false,\r\n      message: \"\",\r\n      options: []\r\n    };\r\n    this.init(true);\r\n    this.generate();\r\n  }\r\n  private async init(semtalklib: boolean) {\r\n    let dblist: any;\r\n    if (semtalklib) {\r\n      dblist = await mglistDatabases(this.props.mongo, this.props.mongo.semmongoconnectiontoken, this.props.mongo.dbname, \"SDX\");\r\n    } else {\r\n      dblist = await mglistDatabases(this.props.mongo, this.props.mongo.semmongoconnectiontoken, this.props.mongo.dbname, \"\");\r\n    }\r\n    // console.debug(dblist);\r\n    let options = [{ key: \"semtalkonline\", text: \"Default\" }];\r\n    for (let db of dblist) {\r\n      if (db !== \"semtalkonline\") {\r\n        options.push({ key: db, text: db });\r\n      }\r\n    }\r\n    this.setState({ options: options });\r\n  }\r\n  private encode = async () => {\r\n    const res: any = await mgEncode(this.props.mongo,\r\n      this.state.desturl,\r\n      this.state.destdbname);\r\n    this.setState({ \"conntoken\": res });\r\n  }\r\n  private generate = async () => {\r\n    const res: any = await mgnewDatabaseName(this.props.mongo,\r\n      this.state.desturl,\r\n      \"semtalkonline\");\r\n    this.setState({ \"destdbname\": res });\r\n  }\r\n\r\n  private handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    let destdb = this.state.destdbname;\r\n    if (!this.state.semtalklib) {\r\n      destdb = this.state.destreponame;\r\n    }\r\n    if (this.state.desturl && destdb) {\r\n      if (!(this.state.dbname !== destdb ||\r\n        this.props.mongo.semmongoserverurl !== this.state.desturl)) {\r\n        this.setState({\r\n          message: \"Server or Database must differ!. You cannot copy the database onto itself.\",\r\n          \"nosuccess\": true\r\n        });\r\n        return;\r\n      }\r\n      let mongo2 = this.props.mongo;\r\n      let dbname = mongo2.dbname;\r\n      mongo2.dbname = this.state.dbname;\r\n      const res: any = await mgCreate_database(this.props.mongo,\r\n        this.state.desturl,\r\n        destdb);\r\n      // if (this.state.repo && this.props.mongo.semmongoserverurl !== this.state.desturl) {\r\n      //   mongo2.dbname = this.state.destreponame;\r\n      //   await mgCreate_database(mongo2,\r\n      //     this.state.desturl,\r\n      //     this.state.destreponame);\r\n      // }\r\n      mongo2.dbname = dbname;\r\n      if (res.length > 0) {\r\n        this.setState({\r\n          \"success\": true, \"nosuccess\": false,\r\n          message: \"Sucessfully cloned the database!\"\r\n        });\r\n        // this.props.setToken(res);\r\n        // this.props.setcurrToken(res);\r\n      } else {\r\n        this.setState({\r\n          \"success\": false, \"nosuccess\": true,\r\n          message: \"Sorry, could not clone database. Please try again.\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n  public render(): React.ReactElement {\r\n    let divHostStyle: any = {\r\n      // position: \"fixed\",\r\n      // height: \"100%\", //this.props.height,\r\n      // width: \"80%\", //this.props.width,\r\n      padding: \"20px\"\r\n    };\r\n    const stackTokens = { childrenGap: 10 };\r\n    return (\r\n      <Fabric>\r\n        {this.res &&\r\n          <Stack style={divHostStyle} tokens={stackTokens}>\r\n            <StackItem>\r\n              <Text variant=\"xxLarge\">SemTalk Online</Text>\r\n            </StackItem>\r\n            <StackItem>\r\n              <Text variant=\"large\">{\"Clone Database\"}</Text>\r\n            </StackItem>\r\n            {!this.state.success &&\r\n              <StackItem>\r\n                <form onSubmit={this.handleSubmit}>\r\n                  {this.state.nosuccess && (\r\n                    <MessageBar\r\n                      messageBarType={MessageBarType.error}\r\n                    >{this.state.message}\r\n                    </MessageBar>\r\n                  )}\r\n                  <Stack tokens={stackTokens}>\r\n                    <StackItem>\r\n                      <TextField defaultValue={this.state.desturl} required label={\"MongoDB \" + this.res.getResStr(\"STRSQLSERVER\").replace(\":\", \"\") +\r\n                        \" (\" + this.res.getResStrListener(\"STWFSTRDESTL\") + \")\"}\r\n                        onChange={(_e: any, v?: any) => this.setState({ \"desturl\": v })} />\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <Checkbox id=\"repo\" checked={this.state.semtalklib} disabled={this.props.mongo.semmongoserverurl === this.state.desturl} label={\"SemTalk Documents\"} onChange={(_ev, isChecked: boolean | undefined) => {\r\n\r\n                        if (isChecked) {\r\n                          this.init(true);\r\n                          this.setState({ \"semtalklib\": true });\r\n                        } else {\r\n                          this.init(false);\r\n                          this.setState({ \"semtalklib\": false });\r\n                        }\r\n                      }}></Checkbox>\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <Dropdown\r\n                        placeholder=\"Select a Database\"\r\n                        label={this.res.getResStr(\"STRSQLDATABASE\").replace(\":\", \"\")}\r\n                        defaultSelectedKey={this.state.dbname}\r\n                        onChange={(_e: any, v?: any) => {\r\n                          this.setState({ \"dbname\": v.key });\r\n                        }}\r\n                        options={this.state.options}\r\n                      />\r\n                    </StackItem>\r\n                    {this.state.semtalklib &&\r\n                      <Stack tokens={stackTokens} horizontal horizontalAlign={'center'}>\r\n                        <StackItem grow={3}>\r\n                          <TextField value={this.state.destdbname}\r\n                            onChange={(_e: any, v?: any) => this.setState({ \"destdbname\": v })}\r\n                          />\r\n                        </StackItem>\r\n                        {/* <StackItem>\r\n                          <Checkbox id=\"users\" checked={this.state.users} label={\"Include User Accounts\"} onChange={(ev, isChecked: boolean | undefined) => {\r\n                            if (isChecked) {\r\n                              this.setState({ \"users\": true });\r\n                            } else {\r\n                              this.setState({ \"users\": false });\r\n                            }\r\n                          }}></Checkbox>\r\n                        </StackItem> */}\r\n                      </Stack>\r\n                    }\r\n                    {!this.state.semtalklib &&\r\n                      <TextField value={this.state.destreponame}\r\n                        onChange={(_e: any, v?: any) => this.setState({ \"destreponame\": v })} />\r\n                    }\r\n\r\n                    <StackItem>\r\n                      <Stack tokens={stackTokens} horizontal>\r\n                        <PrimaryButton type=\"submit\" text={this.res.getResStr(\"STRCOPY\")}></PrimaryButton>\r\n                        <DefaultButton><Link to=\"/\">{this.res.getResStr(\"STRDLGCMDCA\")}</Link></DefaultButton>\r\n                      </Stack>\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <Stack tokens={stackTokens} horizontal horizontalAlign={'center'}>\r\n                        <StackItem grow={3}>\r\n                          <TextField value={this.state.conntoken} label={\"\"}\r\n                            onChange={(_e: any, v?: any) => this.setState({ \"conntoken\": v })} />\r\n                        </StackItem>\r\n                        <StackItem>\r\n                          <DefaultButton onClick={this.encode}>{\"Encode MongoDB Connection\"}</DefaultButton>\r\n                        </StackItem>\r\n                      </Stack>\r\n                    </StackItem>\r\n                  </Stack>\r\n                </form>\r\n              </StackItem>\r\n            }\r\n            {this.state.success &&\r\n              <Stack style={divHostStyle} tokens={stackTokens}>\r\n                <StackItem>\r\n                  <MessageBar\r\n                    messageBarType={MessageBarType.success}>\r\n                    {this.state.message}\r\n                  </MessageBar>\r\n                </StackItem>\r\n                <StackItem>\r\n                  <DefaultButton><Link to=\"/\">{this.res.getResStr(\"STRDLGBOPTLO\")}</Link></DefaultButton>\r\n                </StackItem>\r\n              </Stack>\r\n            }\r\n          </Stack>\r\n        }\r\n      </Fabric >\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Logout.css';\r\n\r\nexport interface ILogoutProps {\r\n  semmongologintokencookiename: any;\r\n}\r\nexport default class Logout extends React.Component<ILogoutProps> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    sessionStorage.removeItem(this.props.semmongologintokencookiename);\r\n  }\r\n  public render(): React.ReactElement {\r\n    return (\r\n      <div className=\"login-wrapper\">\r\n        <div>\r\n          <h1>Sucessfully logged out!\"</h1>\r\n          <p></p>\r\n          <Link to=\"/\">Go back to home</Link>\r\n          <p></p>\r\n          <Link to=\"/signup\">Signup new user</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import './Login.css';\nimport { IMongoOption } from '../../SemTalkMongoServer';\nimport { Link } from \"react-router-dom\";\nimport {\n  Stack, StackItem,\n  DefaultButton\n} from 'office-ui-fabric-react';\nimport { SemTalkSettings } from '../stsettings/SemTalkSettings';\n\nimport { VisioRDFS } from '../../application/semtalklistener/visiordfs';\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\nimport { SemTalkCookie } from \"../../ISemTalkOnline\";\n\nexport interface IOptionsProps {\n  mongo: IMongoOption;\n  // semmongoserverurl: string;\n  // semmongoconnectiontoken: string;\n}\nexport interface IOptionsState {\n}\nexport default class Options extends React.Component<IOptionsProps, IOptionsState> {\n  private res: IVisioRDFS;\n  constructor(props: IOptionsProps) {\n    super(props);\n    let gl = (window as any).localStorage.getItem(SemTalkCookie.guilanguage);\n    if (!gl) gl = navigator.languages[1] || navigator.language;\n    this.res = new VisioRDFS(null, null);\n    this.res.init(null, gl);\n\n    this.state = {\n    };\n  }\n  public render(): React.ReactElement {\n    let divHostStyle: any = {\n      // position: \"fixed\",\n      // height: \"100%\", //this.props.height,\n      // width: \"80%\", //this.props.width,\n      padding: \"20px\"\n    };\n    const stackTokens = { childrenGap: 10 };\n    return (\n      <div>\n        {this.res &&\n          <div>\n            <form>\n              <Stack tokens={stackTokens}>\n                <StackItem>\n                  <Stack style={divHostStyle} tokens={stackTokens} horizontal>\n                    <DefaultButton><Link to=\"/\">{this.res.getResStr(\"STRDLGCMDOK\")}</Link></DefaultButton>\n                    <DefaultButton><Link to=\"/signup\" >{this.res.getResStr(\"STRREGISTER\")}</Link></DefaultButton>\n                    <DefaultButton><Link to=\"/updatepassword\" >{this.res.getResStr(\"STRLoginChangePassword\")}</Link></DefaultButton>\n                    <DefaultButton><Link to=\"/logout\" >{this.res.getResStr(\"STRLOGOUT\")}</Link></DefaultButton>\n                    <DefaultButton><Link to=\"/clonedb\" >{this.res.getResStr(\"STRSQLDATABASE\").replace(\":\", \"\")}</Link></DefaultButton>\n                  </Stack>\n                </StackItem>\n                <StackItem>\n                  <SemTalkSettings />\n                </StackItem>\n              </Stack>\n            </form>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Fabric, MessageBar, MessageBarType, TextField, Text, Stack, StackItem,\r\n  Dropdown, IDropdownOption,\r\n  DefaultButton, PrimaryButton\r\n} from 'office-ui-fabric-react';\r\n// import { IIconProps } from 'office-ui-fabric-react';\r\n\r\n\r\n// import { Link } from \"react-router-dom\";\r\nimport './Login.css';\r\nimport {\r\n  IMongoOption, mgChange_Password,\r\n  mgForgot_Password_send_token, mglistDatabases\r\n} from '../../SemTalkMongoServer';\r\nimport { VisioRDFS } from '../../application/semtalklistener/visiordfs';\r\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { SemTalkCookie } from \"../../ISemTalkOnline\";\r\n// const addFriendIcon: IIconProps = { iconName: 'AddFriend' };\r\n\r\nexport interface IUpdatePasswordProps {\r\n  setToken: any;\r\n  mongo: IMongoOption;\r\n}\r\nexport interface IUpdatePasswordState {\r\n  username: string | null;\r\n  oldpassword: string;\r\n  registrationkey: string;\r\n  password: string | null;\r\n  password2: string | null;\r\n  success: boolean;\r\n  nosuccess: boolean;\r\n  message: string;\r\n  dbname: string;\r\n}\r\nexport default class UpdatePassword extends React.Component<IUpdatePasswordProps, IUpdatePasswordState> {\r\n  private res: IVisioRDFS;\r\n  constructor(props: IUpdatePasswordProps) {\r\n    super(props);\r\n    let gl = (window as any).localStorage.getItem(SemTalkCookie.guilanguage);\r\n    if (!gl) gl = navigator.languages[1] || navigator.language;\r\n    this.res = new VisioRDFS(null, null);\r\n    this.res.init(null, gl);\r\n\r\n    this.init();\r\n\r\n    this.state = {\r\n      dbname: this.props.mongo.dbname,\r\n      username: null,\r\n      oldpassword: \"\",\r\n      password: null,\r\n      password2: null,\r\n      registrationkey: \"\",\r\n      success: false,\r\n      nosuccess: false,\r\n      message: \"\" //this.res.getResStr(\"STRLoginError\")\r\n    };\r\n  }\r\n  private async init() {\r\n    let dblist = await mglistDatabases(this.props.mongo, this.props.mongo.semmongoconnectiontoken, this.props.mongo.dbname, \"SDX\");\r\n    // console.debug(dblist);\r\n    for (let db of dblist) {\r\n      if (db !== \"semtalkonline\") {\r\n        this.options.push({ key: db, text: db });\r\n      }\r\n    }\r\n  }\r\n  private handleForgotPassword = async (e: any) => {\r\n    e.preventDefault();\r\n    if (this.state.username) {\r\n      let mongo2 = this.props.mongo;\r\n      let dbname = mongo2.dbname;\r\n      try {\r\n        mongo2.dbname = this.state.dbname;\r\n        let curURL: string = window.location.href;\r\n        curURL = curURL.substr(0, curURL.lastIndexOf(\"/\"));\r\n        const res: any = await mgForgot_Password_send_token(mongo2,\r\n          this.state.username, curURL + '/forgotpasswordverify');\r\n        if (res.status !== 201) {\r\n          if (res.errormsg && res.errormsg.toString().length > 0) {\r\n            this.setState({\r\n              \"success\": false, \"nosuccess\": true,\r\n              message: res.errormsg\r\n            });\r\n          }\r\n        } else {\r\n          this.setState({\r\n            \"success\": true, \"nosuccess\": false,\r\n            message: this.res.getResStr(\"STRLoginMailSend\")\r\n          });\r\n        }\r\n      } catch (err) {\r\n        let msg: string = \"unknown\";\r\n        if (err && typeof err === \"object\") {\r\n          const e: any = err;\r\n          msg = e[\"message\"];\r\n        }\r\n        this.setState({ \"success\": false, \"nosuccess\": true, message:  msg });\r\n      }\r\n      mongo2.dbname = dbname;\r\n    } else {\r\n      this.setState({ \"success\": false, \"nosuccess\": true, message: this.res.getResStr(\"STRLoginUsernameEmpty\") });\r\n    }\r\n  }\r\n\r\n  private handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    if (this.state.password !== this.state.password2) {\r\n      this.setState({\r\n        \"success\": false, \"nosuccess\": true,\r\n        message: this.res.getResStr(\"STRLoginPasswordnoMatch\")\r\n      });\r\n      return;\r\n    }\r\n    if (this.state.username && this.state.password) {\r\n      let dbname = this.props.mongo.dbname;\r\n      try {\r\n        this.props.mongo.dbname = this.state.dbname;\r\n        const res: any = await mgChange_Password(this.props.mongo,\r\n          this.state.username,\r\n          this.state.oldpassword,\r\n          this.state.registrationkey,\r\n          this.state.password);\r\n        if (res.errormsg !== undefined) {\r\n          if (res.errormsg.toString().length > 0) {\r\n            this.setState({\r\n              \"success\": false, \"nosuccess\": true,\r\n              message: res.errormsg\r\n            });\r\n          }\r\n        } else {\r\n          if (res.login_token !== undefined) {\r\n            if (res.login_token.toString().length > 0) {\r\n              this.setState({\r\n                \"success\": true, \"nosuccess\": false,\r\n                message: this.res.getResStr(\"STRLoginPasswordisChanged\")\r\n              });\r\n              // this.props.setToken(res);\r\n              // this.props.setcurrToken(res);\r\n            } else {\r\n              this.setState({\r\n                \"success\": false, \"nosuccess\": true,\r\n                message: this.res.getResStr(\"STRLoginEmptyLoginToken\")\r\n              });\r\n            }\r\n          } else {\r\n            this.setState({\r\n              \"success\": false, \"nosuccess\": true,\r\n              message: this.res.getResStr(\"STRLoginChangePasswordFailed\")\r\n            });\r\n          }\r\n        }\r\n      } catch (err) {\r\n        let msg: string = \"unknown\";\r\n        if (err && typeof err === \"object\") {\r\n          const e1: any = err;\r\n          msg = e1[\"message\"];\r\n        }\r\n        this.setState({ \"success\": false, \"nosuccess\": true, message:  msg });\r\n      }\r\n      this.props.mongo.dbname = dbname;\r\n    }\r\n  }\r\n  private options: IDropdownOption[] = [\r\n    { key: \"semtalkonline\", text: \"Default\" }\r\n  ];\r\n  public render(): React.ReactElement {\r\n    let divHostStyle: any = {\r\n      // position: \"fixed\",\r\n      // height: \"100%\", //this.props.height,\r\n      // width: \"80%\", //this.props.width,\r\n      padding: \"20px\"\r\n    };\r\n    const stackTokens = { childrenGap: 10 };\r\n    return (\r\n      <Fabric>\r\n        {this.res &&\r\n          <Stack style={divHostStyle} tokens={stackTokens}>\r\n            <StackItem>\r\n              <Text variant=\"xxLarge\">SemTalk Online</Text>\r\n            </StackItem>\r\n            <StackItem>\r\n              <Text variant=\"large\">{this.res.getResStr(\"STRLoginChangePassword\")}</Text>\r\n            </StackItem>\r\n            <StackItem>\r\n              {/* <form onSubmit={this.handleForgotPassword}>\r\n                {this.state.success && (\r\n                  <MessageBar\r\n                    messageBarType={MessageBarType.success}>\r\n                    {this.state.errormsg}\r\n                  </MessageBar>\r\n                )}\r\n              </form> */}\r\n              {!this.state.success && this.state.nosuccess && (\r\n                <MessageBar messageBarType={MessageBarType.error}>\r\n                  {this.state.message}\r\n                </MessageBar>\r\n              )}\r\n              {!this.state.success &&\r\n                <form onSubmit={this.handleSubmit}>\r\n                  <Stack tokens={stackTokens}>\r\n                    <StackItem>\r\n                      <Dropdown\r\n                        placeholder=\"Select a Database\"\r\n                        label={this.res.getResStr(\"STRSQLDATABASE\").replace(\":\", \"\")}\r\n                        defaultSelectedKey={this.state.dbname}\r\n                        onChange={(_e: any, v?: any) => {\r\n                          this.setState({ \"dbname\": v.key });\r\n                        }}\r\n                        options={this.options}\r\n                      />\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <TextField required label={this.res.getResStr(\"STRUSERID\")}\r\n                        onChange={(_e: any, v?: any) => this.setState({ \"username\": v })} />\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <TextField type=\"password\" label={this.res.getResStr(\"STRAddOld\") + \" \" + this.res.getResStr(\"STRDLGPWD\")} required\r\n                        onChange={(_e: any, v?: any) => this.setState({ \"oldpassword\": v })} />\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <TextField type=\"password\" label={this.res.getResStr(\"STRAddNew\") + \" \" + this.res.getResStr(\"STRDLGPWD\")} required\r\n                        onChange={(_e: any, v?: any) => this.setState({ \"password\": v })} />\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <TextField type=\"password\" label={this.res.getResStr(\"STRRepeat\") + \" \" + this.res.getResStr(\"STRAddNew\") + \" \" + this.res.getResStr(\"STRDLGPWD\")} required\r\n                        onChange={(_e: any, v?: any) => this.setState({ \"password2\": v })} />\r\n                    </StackItem>\r\n                    {/* <StackItem>\r\n                    <TextField label={this.res.getResStr(\"STRPRODKEY\")}\r\n                      onChange={(e: any, v?: any) => this.setState({ \"registrationkey\": v })} />\r\n                  </StackItem> */}\r\n                    <StackItem>\r\n                      <Stack tokens={stackTokens} horizontal>\r\n                        <PrimaryButton type=\"submit\" text={this.res.getResStr(\"STRDLGCMDOK\")}></PrimaryButton>\r\n                        <DefaultButton><Link to=\"/\">{this.res.getResStr(\"STRDLGCMDCA\")}</Link></DefaultButton>\r\n                        <DefaultButton type=\"submit\" onClick={this.handleForgotPassword}> {this.res.getResStr(\"STRLoginForgotPassword\")} </DefaultButton>\r\n                      </Stack>\r\n                    </StackItem>\r\n                  </Stack>\r\n                </form>\r\n              }\r\n              {this.state.success &&\r\n                <Stack style={divHostStyle} tokens={stackTokens}>\r\n                  <StackItem>\r\n                    <MessageBar\r\n                      messageBarType={MessageBarType.success}>\r\n                      {this.state.message}\r\n                    </MessageBar>\r\n                  </StackItem>\r\n                  <StackItem>\r\n                    <DefaultButton><Link to=\"/\">{this.res.getResStr(\"STRDLGBOPTLO\")}</Link></DefaultButton>\r\n                  </StackItem>\r\n                </Stack>\r\n              }\r\n            </StackItem>\r\n          </Stack>\r\n        }\r\n      </Fabric >\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Fabric, MessageBar, MessageBarType, TextField, Text, Stack, StackItem,\r\n  DefaultButton, PrimaryButton\r\n} from 'office-ui-fabric-react';\r\n\r\nimport './Login.css';\r\nimport { IMongoOption, mgForgot_Password_Update } from '../../SemTalkMongoServer';\r\nimport { VisioRDFS } from '../../application/semtalklistener/visiordfs';\r\nimport { IVisioRDFS } from '../../application/semtalklistener/visiordfsinterface';\r\nimport { SemTalkCookie } from \"../../ISemTalkOnline\";\r\n\r\nexport interface IForgotPasswordVerifyProps {\r\n  setToken: any;\r\n  mongo: IMongoOption;\r\n}\r\nexport interface IForgotPasswordVerifyState {\r\n  username: string;\r\n  verify_token: string;\r\n  new_password: string;\r\n  repeat_password: string;\r\n  registrationkey: string;\r\n  success: boolean;\r\n  nosuccess: boolean;\r\n  errormsg: string;\r\n}\r\n\r\nexport default class ForgotPasswordVerify extends React.Component<IForgotPasswordVerifyProps, IForgotPasswordVerifyState> {\r\n  private res: IVisioRDFS;\r\n  constructor(props: IForgotPasswordVerifyProps) {\r\n    super(props);\r\n    let gl = (window as any).localStorage.getItem(SemTalkCookie.guilanguage);\r\n    if (!gl) gl = navigator.languages[1] || navigator.language;\r\n    this.res = new VisioRDFS(null, null);\r\n    this.res.init(null, gl);\r\n    let curURL:string = window.location.href;\r\n    let curSplitURL: string[] = curURL.split(\"?\");\r\n    let curSplitURLArguments: string[] = curSplitURL[1].split(\"/\");\r\n    let verify_token: string = curSplitURLArguments[1];\r\n    let username: string = curSplitURLArguments[0];\r\n    this.state = {\r\n      username: username,\r\n      registrationkey: \"\",\r\n      verify_token: verify_token,\r\n      new_password: \"\",\r\n      repeat_password: \"\",\r\n      success: false,\r\n      nosuccess: false,\r\n      errormsg: this.res.getResStr(\"STRLoginError\")\r\n    };\r\n  }\r\n\r\n  private handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    \r\n    if (this.state.username && this.state.new_password && this.state.repeat_password) {\r\n      try{\r\n        if (this.state.new_password === this.state.repeat_password){\r\n          const res: any = await mgForgot_Password_Update(this.props.mongo, \r\n            this.state.username, this.state.verify_token, this.state.new_password);\r\n          if (res.errormsg !== undefined){\r\n            if (res.errormsg.toString().length > 0) \r\n            {\r\n              this.setState({ \"success\": false, \"nosuccess\": true , errormsg: res.errormsg});\r\n            }\r\n            else{\r\n              this.setState({ \"success\": true, \"nosuccess\": false, errormsg: this.res.getResStr(\"STRLoginPasswordisChanged\") });\r\n            }\r\n          }\r\n          else {\r\n            this.setState({ \"success\": true, \"nosuccess\": false, errormsg: this.res.getResStr(\"STRLoginPasswordisChanged\") });\r\n          }\r\n        }\r\n        else {\r\n          this.setState({ \"success\": true, \"nosuccess\": false, errormsg: this.res.getResStr(\"STRLoginPasswordnoMatch\") });\r\n        }\r\n      }catch (err)\r\n      {    \r\n        this.setState({ \"success\": false, \"nosuccess\": true, errormsg: \"unkown\" });\r\n      }\r\n    }\r\n  }\r\n  public render(): React.ReactElement {\r\n    let divHostStyle: any = {\r\n      padding: \"20px\"\r\n    };\r\n    const stackTokens = { childrenGap: 10 };\r\n    return (\r\n      <Fabric>\r\n        {this.res &&\r\n          <Stack style={divHostStyle} tokens={stackTokens}>\r\n            <StackItem>\r\n              <Text variant=\"xxLarge\">SemTalk Online</Text>\r\n            </StackItem>\r\n            <StackItem>\r\n              <Text variant=\"large\">{this.res.getResStr(\"STRLoginChangePassword\")}</Text>\r\n            </StackItem>\r\n            <StackItem>\r\n              <form onSubmit={this.handleSubmit}>\r\n                {this.state.nosuccess && (\r\n                  <MessageBar\r\n                    // Setting this to error, blocked, or severeWarning automatically sets the role to \"alert\"\r\n                    messageBarType={MessageBarType.error}\r\n                  // Or you could set the role manually, IF an alert role is appropriate for the message\r\n                  // role=\"alert\"\r\n                  >\r\n                    {this.state.errormsg}\r\n                  </MessageBar>\r\n                )}\r\n                {this.state.success && (\r\n                  <MessageBar\r\n                    messageBarType={MessageBarType.success}>\r\n                    <h1>{this.state.errormsg}</h1>\r\n                    <p></p>\r\n                    <DefaultButton><Link to=\"/\">{this.res.getResStr(\"STRLoginBacktoLogin\")}</Link></DefaultButton>\r\n                  </MessageBar>)}\r\n                  <Stack tokens={stackTokens}>\r\n                    <StackItem>\r\n                      <TextField required label={this.res.getResStr(\"STRUSERID\")} \r\n                        value ={this.state.username} \r\n                        onChange={(_e: any, v?: any) => this.setState({ \"username\": v })} />\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <TextField required label={this.res.getResStr(\"STRLoginVerifyToken\")}\r\n                        value ={this.state.verify_token} \r\n                        onChange={(_e: any, v?: any) => this.setState({ \"verify_token\": v })} />\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <TextField required type=\"password\" label={this.res.getResStr(\"STRAddNew\") + \" \" + this.res.getResStr(\"STRDLGPWD\")}\r\n                        onChange={(_e: any, v?: any) => this.setState({ \"new_password\": v })} />\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <TextField required type=\"password\" label={this.res.getResStr(\"STRRepeat\") + \" \" + this.res.getResStr(\"STRAddNew\") + this.res.getResStr(\"STRDLGPWD\")}\r\n                        onChange={(_e: any, v?: any) => this.setState({ \"repeat_password\": v })} />\r\n                    </StackItem>\r\n                    <StackItem>\r\n                      <Stack tokens={stackTokens} horizontal>\r\n                        <PrimaryButton type=\"submit\" text={this.res.getResStr(\"STRDLGCMDOK\")}></PrimaryButton>\r\n                        <DefaultButton><Link to=\"/\">{this.res.getResStr(\"STRDLGCMDCA\")}</Link></DefaultButton>\r\n                      </Stack>\r\n                    </StackItem>\r\n                </Stack>\r\n              </form>\r\n            </StackItem>\r\n          </Stack>\r\n        }\r\n      </Fabric >\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\nimport Signup from './components/controls/stlogin/Signup';\r\nimport CloneDatabase from './components/controls/stlogin/Database';\r\nimport Logout from './components/controls/stlogout/Logout';\r\nimport Options from './components/controls/stlogin/Options';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { IMongoOption } from './components/SemTalkMongoServer';\r\nimport UpdatePassword from './components/controls/stlogin/UpdatePassword';\r\n//import ForgotPassword from './components/controls/stlogin/ForgotPassword';\r\nimport ForgotPasswordVerify from './components/controls/stlogin/ForgotPasswordVerify';\r\nimport { SemTalkCookie } from './components/ISemTalkOnline';\r\n\r\n// let showlogin: boolean = true;\r\nlet usemongo: boolean = true;\r\nlet usemongos = (window as any).localStorage.getItem(SemTalkCookie.usemongo);\r\nif (usemongos !== undefined) {\r\n  usemongo = (usemongos !== \"false\");\r\n}\r\n\r\nlet semmongoserverurl = (window as any).localStorage.getItem(SemTalkCookie.semmongoserverurl);\r\nif (!semmongoserverurl) {\r\n  semmongoserverurl = \"/api/\";\r\n  (window as any).localStorage.setItem(SemTalkCookie.semmongoserverurl, semmongoserverurl);\r\n}\r\n\r\n// semmongoserverurl = \"https://semmongo.azurewebsites.net/api/\";\r\n\r\nsemmongoserverurl = \"http://localhost:7071/api/\";\r\n// semmongoserverurl = \"/api/\";\r\n\r\nconst semmongologintokencookiename = \"mongo_token\";\r\n\r\nlet semconnecttoken = (window as any).localStorage.getItem(SemTalkCookie.semconnecttoken);\r\nif (!semconnecttoken) semconnecttoken = \"\";\r\n\r\n// \"mongodb://localhost:27017\"\r\nsemconnecttoken = \"aef864f1cb11a4d5b9cd6421b56c113c7f7c9f17efeee15e1c03d3c67d55d6a832eb757e6e7a53cb9b1d54c74e73d291102e64b62818fb4cfd3feb6c6e76b12c54ef\";\r\n\r\n//  \"mongodb://ssss:xxxx%21@semtalkmongodb.westeurope.azurecontainer.io:27017\"\r\n// semconnecttoken = \"aef864f1cb11a4d5b9cd6421b56c113c7f7c9f17efeefe541216deda7b49cca853b9281b383414dada4e11e65f77cc8053782da8221be842f536aa75676cab2c03e05d3fc9e4b1798a869e7519643451e9687436cf07c154167985d81fb38a\";\r\n\r\n// \"mongodb+srv://ssss:xxxx!@cluster0.pumvg.mongodb.net/semtalkonline\"\r\n// semconnecttoken = \"aef864f1cb11a4d5b9cd6421b56c113c7f7c9f06b3b3fb0b504dcccb7f52c3e669b32b750a3d12bd9e104b950d52c298476732a03f45a15de439f2652c72b02711fd562d82a4b577d0879e7b026b2c5bef687d2d8f0b8c13\"\r\n// semconnecttoken = \"\";\r\n\r\nlet db = (window as any).localStorage.getItem(SemTalkCookie.dbname);\r\nif (!db) db = \"semtalkonline\";\r\nlet re = (window as any).localStorage.getItem(SemTalkCookie.repository);\r\nif (!re) re = \"repository\";\r\n\r\n\r\nfunction setToken(userToken: any) {\r\n  sessionStorage.setItem(semmongologintokencookiename, JSON.stringify(userToken));\r\n}\r\n\r\nfunction getToken() {\r\n  const tokenString = sessionStorage.getItem(semmongologintokencookiename);\r\n  if (tokenString) {\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken;\r\n  }\r\n}\r\nlet mongo: IMongoOption = {\r\n  usemongo: usemongo,\r\n  semmongoserverurl: semmongoserverurl,\r\n  documents: \"SDX\",\r\n  templates: \"Templates\",\r\n  stencils: \"Stencils\",\r\n  semuserlogin: null,\r\n  semmongoconnectiontoken: semconnecttoken,\r\n  dbname: db,\r\n  repository: re,\r\n  iselectron: false\r\n};\r\nlet url = document.baseURI;\r\nif (url.indexOf(\"?\") > 0) {\r\n  let args = url.substr(url.indexOf(\"?\") + 1);\r\n  for (let param of args.split(\"&\")) {\r\n    let p = param.split(\"=\")[0];\r\n    let v = decodeURI(param.split(\"=\")[1]);\r\n    switch (p) {\r\n      case \"iselectron\": {\r\n        mongo.iselectron = (v !== \"false\");\r\n        // showlogin=false;\r\n        break;\r\n      }\r\n      case \"usemongo\": {\r\n        mongo.usemongo = (v !== \"false\");\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nif (mongo.iselectron) {\r\n  ReactDOM.render(\r\n    <App setToken={setToken} getToken={getToken}\r\n      mongo={mongo} semmongologintokencookiename={semmongologintokencookiename} />,\r\n    document.getElementById('root'));\r\n} else {\r\n  ReactDOM.render(\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact >\r\n          <App setToken={setToken} getToken={getToken}\r\n            mongo={mongo} semmongologintokencookiename={semmongologintokencookiename} />\r\n        </Route>\r\n        <Route path=\"/logout\" exact> <Logout semmongologintokencookiename={semmongologintokencookiename} /></Route>\r\n        <Route path=\"/signup\" exact> <Signup mongo={mongo} setToken={setToken} /></Route>\r\n        <Route path=\"/updatepassword\" exact> <UpdatePassword mongo={mongo} setToken={setToken} /></Route>\r\n        {/* <Route path=\"/forgotpassword\" exact> <ForgotPassword mongo={mongo} setToken={setToken} /></Route> */}\r\n        <Route path=\"/forgotpasswordverify\"> <ForgotPasswordVerify mongo={mongo} setToken={setToken} /></Route>\r\n        <Route path=\"/clonedb\" exact> <CloneDatabase mongo={mongo} /></Route>\r\n        <Route path=\"/options\" exact> <Options mongo={mongo} /></Route>\r\n      </Switch>\r\n    </BrowserRouter>,\r\n    document.getElementById('root'));\r\n}\r\n\r\ndocument.title = `SemTalk Online`;\r\n","export enum cit_ElementName {\r\n    Node = \"Node\",\r\n    ComplexNode = \"ComplexNode\",\r\n    InputField = \"InputField\",\r\n    FieldSet = \"FieldSet\",\r\n    InfoBox = \"InfoBox\",\r\n    BooleanField = \"BooleanField\",\r\n    ChoiceField = \"ChoiceField\",\r\n    ComputedField = \"ComputedField\",\r\n    DateField = \"DateField\",\r\n    FileField = \"FileField\",\r\n    IdField = \"IdField\",\r\n    NumberField = \"NumberField\",\r\n    NumberUnitField = \"NumberUnitField\",\r\n    TextField = \"TextField\",\r\n    TextArea = \"TextArea\",\r\n    Rule = \"Rule\",\r\n    WebserviceMethod = \"WebserviceMethod\",\r\n    XmlResource = \"XmlResource\",\r\n    Relation = \"Relation\",\r\n    HasRule = \"HasRule\",\r\n    HasResource = \"HasResource\",\r\n    ExternalComponent = \"ExternalComponent\",\r\n    SubFieldSet = \"SubFieldSet\",\r\n}\r\nexport enum cit_AttributeName {\r\n    UserNumber = \"UserNumber\",\r\n    Label = \"Label\",\r\n    FieldName = \"FieldName\",\r\n    DisplayText = \"DisplayText\",\r\n    Title = \"Title\",\r\n    Intro = \"Intro\",\r\n    Outro = \"Outro\",\r\n    AuxField = \"AuxField\",\r\n    OptionsList = \"OptionsList\",\r\n    OptionsFileLocation = \"OptionsFileLocation\",\r\n    Multiplicity = \"Multiplicity\",\r\n    Scope = \"Scope\",\r\n    XPathQuerySelect = \"XPathQuerySelect\",\r\n    Required = \"Required\",\r\n    HideInput = \"HideInput\",\r\n    RowCount = \"RowCount\",\r\n    MaxLength = \"MaxLength\",\r\n    ReadOnly = \"ReadOnly\",\r\n    Placeholder = \"Placeholder\",\r\n    ControlStyle = \"ControlStyle\",\r\n    DefaultValueExpression = \"DefaultValueExpression\",\r\n    ExternalComponent64 = \"ExternalComponent64\",\r\n    StyleClass = \"StyleClass\",\r\n    AbsolutePath = \"AbsolutePath\",\r\n    RelativePath = \"RelativePath\",\r\n    VariantSaved = \"VariantSaved\",\r\n    PageBreakBefore = \"PageBreakBefore\",\r\n    ValidationExpression = \"ValidationExpression\",\r\n    ValidationPattern = \"ValidationPattern\",\r\n    ValidationMessage = \"ValidationMessage\",\r\n    DefaultValue = \"DefaultValue\",\r\n    SampleValue = \"SampleValue\",\r\n    SampleValueExpression = \"SampleValueExpression\",\r\n    EnablePrefill = \"EnablePrefill\",\r\n    LabelStyle = \"LabelStyle\",\r\n    DefaultValueToday = \"DefaultValueToday\",\r\n    Autocomplete = \"Autocomplete\",\r\n    live = \"live\",\r\n    LoopOptions = \"LoopOptions\",\r\n    DatabaseConnection = \"DatabaseConnection\",\r\n    DatabaseQueryParameters = \"DatabaseQueryParameters\",\r\n    XPathQueryText = \"XPathQueryText\",\r\n    XPathQueryValue = \"XPathQueryValue\",\r\n    XPathQueryGroup = \"XPathQueryGroup\",\r\n    XPathQueryParameters = \"XPathQueryParameters\",\r\n    XPathQueryNamespaces = \"XPathQueryNamespaces\",\r\n    XPathQuerySorts = \"XPathQuerySorts\",\r\n    TrackValue = \"TrackValue\",\r\n    ListLimit = \"ListLimit\",\r\n    Repeated = \"Repeated\",\r\n    ValueExpression = \"ValueExpression\",\r\n    ChoiceMultipleAllowOtherValue = \"ChoiceMultipleAllowOtherValue\",\r\n    ChoiceMultipleRememberOtherValues = \"ChoiceMultipleRememberOtherValues\",\r\n    RequestAcademicTitle = \"RequestAcademicTitle\",\r\n    RequestAgeVerification = \"RequestAgeVerification\",\r\n    RequestAgeVerificationValue = \"RequestAgeVerificationValue\",\r\n    RequestArtisticName = \"RequestArtisticName\",\r\n    RequestBirthName = \"RequestBirthName\",\r\n    RequestDateOfBirth = \"RequestDateOfBirth\",\r\n    RequestDocumentType = \"RequestDocumentType\",\r\n    RequestFamilyNames = \"RequestFamilyNames\",\r\n    RequestGivenNames = \"RequestGivenNames\",\r\n    RequestIssuingState = \"RequestIssuingState\",\r\n    RequestPlaceOfBirth = \"RequestPlaceOfBirth\",\r\n    RequestPlaceOfResidence = \"RequestPlaceOfResidence\",\r\n    RequestPlaceVerification = \"RequestPlaceVerification\",\r\n    RequestPlaceVerificationValue = \"RequestPlaceVerificationValue\",\r\n    RequestRestrictedId = \"RequestRestrictedId\",\r\n    Units = \"Units\",\r\n    NumberFormat = \"NumberFormat\",\r\n    ColumnCount = \"ColumnCount\",\r\n    RenderAsHtml = \"RenderAsHtml\",\r\n    ValidationMode = \"ValidationMode\",\r\n    FaultTemplate = \"FaultTemplate\",\r\n    RequestTemplate = \"RequestTemplate\",\r\n    ResponseTemplate = \"ResponseTemplate\",\r\n    WebserviceConnection = \"WebserviceConnection\",\r\n    Location = \"Location\",\r\n    CacheMode = \"CacheMode\",\r\n    XsltScript = \"XsltScript\",\r\n    ResourceRange = \"ResourceRange\",\r\n    RoadmapTitle = \"RoadmapTitle\",\r\n    SetType = \"SetType\",\r\n    SummaryExpression = \"SummaryExpression\",\r\n    ChoiceCascade = \"ChoiceCascade\",\r\n    RelationType = \"RelationType\",\r\n    ConditionExpression = \"ConditionExpression\",\r\n    Condition = \"Condition\",\r\n    FixedCount = \"FixedCount\",\r\n    InitialRowCount = \"InitialRowCount\",\r\n    MaxCount = \"MaxCount\",\r\n    MinCount = \"MinCount\",\r\n    RowIncrement = \"RowIncrement\"\r\n    \r\n}\r\n\r\nexport enum cit_DiagramTypeName {\r\n    Dialogmodell = \"Dialogmodell\"\r\n}\r\n\r\nexport enum cit_UserTabs{\r\n    Main = \"UserTab_Main\",\r\n    Layout = \"UserTab_Layout\",\r\n    Validation = \"UserTab_Validation\",\r\n    Value = \"UserTab_Values\",\r\n    Database = \"UserTab_Database\",\r\n    XML = \"UserTab_XML\",\r\n    Parameter = \"UserTab_Parameter\"\r\n}\r\n\r\nexport enum cit_UserTabsGroups {\r\n    Main = \"MainAttributes\",\r\n    Layout = \"LayoutAttributes\",\r\n    Validation = \"ValidationAttributes\",\r\n    Value = \"ValueAttributes\",\r\n    Database = \"DatabaseAttributes\",\r\n    XML = \"XMLAttributes\",\r\n    Parameter = \"ParameterAttributes\"\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treeView\":\"TreeView_treeView__3ltmY\",\"listItem\":\"TreeView_listItem__2vIUT\",\"treeSelector\":\"TreeView_treeSelector__15qdI\",\"itemContent\":\"TreeView_itemContent__2Jpz6\",\"disabled\":\"TreeView_disabled__3koy0\",\"labels\":\"TreeView_labels__3-UWi\",\"itemSubLabel\":\"TreeView_itemSubLabel__2DtGC\",\"noCheckBox\":\"TreeView_noCheckBox__3bVW5\",\"checked\":\"TreeView_checked__2hfbp\",\"checkbox\":\"TreeView_checkbox__LTWn5\",\"icon\":\"TreeView_icon__1By8z\",\"imagetab\":\"TreeView_imagetab__satg8\",\"itemLabel\":\"TreeView_itemLabel__91nzM\",\"itemMenu\":\"TreeView_itemMenu__3PP2N\",\"actionMore\":\"TreeView_actionMore__2P6cb\",\"actionButton\":\"TreeView_actionButton__1lYl7\",\"tree\":\"TreeView_tree__2eZDT\",\"blankspace\":\"TreeView_blankspace__32ApS\"};","import {\r\n  IObjectBase, ISemTalkClass, ISemTalkDiagramType,\r\n  ISemTalkInstance, ISemTalkObject, SemTalkRelation, SemTalkType,\r\n  SemTalkBaseConstant,\r\n  ModelAttribute,\r\n  ISemTalkAssociation\r\n} from \"./Interface\";\r\n// import * as base64 from 'base-64';\r\nimport { Guid } from \"guid-typescript\";\r\n\r\n\r\n// hiermit könnte man XML lesen\r\n// https://www.npmjs.com/package/xml2js\r\n\r\nexport class OB2JSON {\r\n  private isSystemClass = (c: any): boolean => {\r\n    switch (c.name) {\r\n      case \"XOR\": return true;\r\n      case \"OR\": return true;\r\n      case \"AND\": return true;\r\n      case \"epc#Class\": return true;\r\n    }\r\n    return false;\r\n  }\r\n  public LoadJSON(tb: IObjectBase, json: any, _fn?: () => void): void {\r\n    // tslint:disable-next-line:no-var-keyword\r\n    var inp = json;\r\n    console.debug(\"Loading\");\r\n    tb._loading = true;\r\n    if (inp !== null) {\r\n      for (const v in inp) {\r\n        switch (v) {\r\n          case \"classes\":\r\n          case \"assoctypes\":\r\n          case \"diagtypes\":\r\n          case \"instances\":\r\n          case \"diags\":\r\n          case \"methodtypes\":\r\n          case \"attrtypes\":\r\n          case \"statetypes\":\r\n            break;\r\n          case \"MaxID\":\r\n            tb.maxid = Number(inp[v]);\r\n            break;\r\n          default:\r\n            tb.SetModelAttribute(v, inp[v]);\r\n        }\r\n      }\r\n      tb.ObjectName = tb.GetModelAttribute(ModelAttribute.modname);\r\n      for (const c of inp.classes) {\r\n        let cid: number = Number(c.ID);\r\n        // if (cid === 0) {\r\n        //   tb.maxid = tb.maxid + 1;\r\n        //   cid = tb.maxid;\r\n        // }\r\n        // if ((c.SystemClass === \"True\" && c.ReadOnly === \"1\") || this.isSystemClass(c)) {\r\n        if (c.SystemClass === \"True\" || this.isSystemClass(c)) {\r\n          // if (c.ReadOnly !== \"1\") {\r\n          //   console.log(c.name);\r\n          // }\r\n          const cs = tb.MakeSystemClass(c.name, cid);\r\n          // tslint:disable-next-line:no-console\r\n          console.assert(cs !== null);\r\n\r\n        } else {\r\n          if (c.BusinessClass === \"True\") {\r\n            const cs = tb.MakeBusinessClass(c.name, cid);\r\n            // tslint:disable-next-line:no-console\r\n            console.assert(cs !== null);\r\n\r\n          } else {\r\n            const cs = tb.MakeClass(c.name, cid);\r\n            // tslint:disable-next-line:no-console\r\n            console.assert(cs !== null);\r\n          }\r\n        }\r\n      }\r\n      for (const c of inp.assoctypes) {\r\n        let cid: number = Number(c.ID);\r\n        if (cid === 0) {\r\n          // tb.maxid = parseInt(tb.maxid) + 1;\r\n          tb.maxid += 1;\r\n          cid = tb.maxid;\r\n        }\r\n        let cs = tb.FindAssociationType(c.name);\r\n        if (cs === null) {\r\n          let rt = tb.FindSemTalkRelationType(c.type);\r\n          if (c.name === SemTalkBaseConstant.SLInstanceOf) {\r\n            //  console.debug(\"instanceOf\");\r\n            rt = SemTalkRelation.SemTalkInstanceOf;\r\n          }\r\n          cs = tb.MakeAssociationType(rt, c.name, cid);\r\n          console.assert(cs !== null);\r\n        }\r\n        if (cs && c.name === SemTalkBaseConstant.SLInstanceOf) {\r\n          cs.RelationType = SemTalkRelation.SemTalkInstanceOf;\r\n        }\r\n      }\r\n      for (const c of inp.methodtypes) {\r\n        const cs = tb.MakeMethodType(c.name, Number(c.ID));\r\n        console.assert(cs !== null);\r\n      }\r\n      if (inp.statetypes !== undefined) {\r\n        for (const c of inp.statetypes) {\r\n          const cs = tb.MakeStateType(c.name, Number(c.ID));\r\n          console.assert(cs !== null);\r\n        }\r\n      }\r\n      for (const c of inp.attrtypes) {\r\n        const cs = tb.MakeAttributeType(c.name, Number(c.ID));\r\n        console.assert(cs !== null);\r\n      }\r\n      for (const c of inp.diagtypes) {\r\n        const cs = tb.MakeDiagramType(c.name, Number(c.ID));\r\n        console.assert(cs !== null);\r\n      }\r\n      for (const c of inp.instances) {\r\n        const cl = tb.FindClass(c.class);\r\n        // if (cl === null) {\r\n        //   alert(\"help. I cannot find Class: \" + c.class);\r\n        // } else {\r\n        console.assert(cl !== null);\r\n        let cs = tb.MakeInstance((cl as ISemTalkClass), c.name, SemTalkType.SemTalkInstance, Number(c.ID));\r\n        console.assert(cs !== null);\r\n        // }\r\n      }\r\n      for (const c of inp.diags) {\r\n        const cl = tb.FindDiagramType(c.class);\r\n        if (cl !== null) {\r\n          const cs = tb.MakeDiagram(cl, c.name, SemTalkType.SemTalkDiagram, Number(c.ID));\r\n          console.assert(cs !== null);\r\n        }\r\n      }\r\n      for (const c of inp.diagtypes) {\r\n        const at = tb.FindDiagramType(c.name);\r\n        if (at !== null) {\r\n          at.Load(c);\r\n        }\r\n      }\r\n      for (const c of inp.attrtypes) {\r\n        const at = tb.FindAttributeType(c.name);\r\n        if (at !== null) {\r\n          at.Load(c);\r\n        }\r\n      }\r\n      for (const c of inp.methodtypes) {\r\n        const at = tb.FindMethodType(c.name);\r\n        if (at !== null) {\r\n          at.Load(c);\r\n        }\r\n      }\r\n      for (const c of inp.assoctypes) {\r\n        const at = tb.FindAssociationType(c.name);\r\n        if (at !== null) {\r\n          at.Load(c);\r\n        }\r\n      }\r\n      for (const c of inp.diags) {\r\n        const at = tb.FindDiagram(c.name);\r\n        if (at !== null) {\r\n          at.Load(c);\r\n        }\r\n      }\r\n      for (const c of inp.classes) {\r\n        const cl = tb.FindClass(c.name);\r\n        if (cl !== null) {\r\n          cl.Load(c);\r\n        }\r\n      }\r\n      for (const c of inp.instances) {\r\n        const at = tb.FindInstance(c.name);\r\n        if (at !== null) {\r\n          at.Load(c);\r\n        }\r\n      }\r\n    }\r\n    tb._loading = false;\r\n    // if (fn !== undefined) {\r\n    //   fn();\r\n    // }\r\n  }\r\n\r\n  public SaveJSON(tb: IObjectBase): any {\r\n    // tslint:disable:no-var-keyword\r\n    // tslint:disable:prefer-const\r\n    var doc: any = {};\r\n    for (const name of tb.AllModelAttributes()) {\r\n      doc[name] = tb.GetModelAttribute(name);\r\n    }\r\n    // $.each(tb._modelattr, (name: string, val: any) => { doc[name] = val; });\r\n    doc.MaxID = tb.maxid;\r\n\r\n    var jclasses: any[] = [];\r\n    for (const obj of tb.AllClasses()) {\r\n      // if (obj.ObjectType === SemTalkType.SemTalkClass) {\r\n      if (tb.IsClass(obj)) {\r\n        obj.Save(jclasses);\r\n      }\r\n    }\r\n    doc.classes = jclasses;\r\n    // $.each(tb._classes, (_id: string, obj: tbase.SemTalkClass) => {\r\n    //     if (obj.ObjectType === SemTalkType.SemTalkClass) { obj.Save(jclasses); }\r\n    // });\r\n\r\n    var jassoctypes: any[] = [];\r\n    for (const obj of tb.AllAssociationTypes()) {\r\n      obj.Save(jassoctypes);\r\n    }\r\n    // $.each(tb._assoctypes, (_id: string, obj: tbase.SemTalkAssociationType) => { obj.Save(jassoctypes); });\r\n    doc.assoctypes = jassoctypes;\r\n\r\n    var jdiagtypes: any[] = [];\r\n    for (const obj of tb.AllDiagramTypes()) {\r\n      obj.Save(jdiagtypes);\r\n    }\r\n    // $.each(tb._diagtypes, (id: string, obj: nodes.SemTalkDiagramType): any => { obj.Save(jdiagtypes); });\r\n    doc.diagtypes = jdiagtypes;\r\n\r\n    // tslint:disable-next-line:no-var-keyword\r\n    var jinstances: any[] = [];\r\n    for (const obj of tb.AllInstances()) {\r\n      if (obj.ObjectType === SemTalkType.SemTalkInstance) {\r\n        obj.Save(jinstances);\r\n      }\r\n    }\r\n    // $.each(tb._instances, (id: string, obj: tbase.SemTalkInstance) => {\r\n    //     if (obj.ObjectType === SemTalkType.SemTalkInstance) { obj.Save(jinstances); }\r\n    // });\r\n    doc.instances = jinstances;\r\n\r\n    // tslint:disable-next-line:no-var-keyword\r\n    var jdiags: any[] = [];\r\n    for (const obj of tb.AllDiagrams()) {\r\n      obj.Save(jdiags);\r\n    }\r\n    // $.each(tb._diags, (id: string, obj: nodes.SemTalkDiagram) => { obj.Save(jdiags); });\r\n    doc.diags = jdiags;\r\n\r\n    // tslint:disable-next-line:no-var-keyword\r\n    var jmethodtypes: any[] = [];\r\n    for (const obj of tb.AllMethodTypes()) {\r\n      obj.Save(jmethodtypes);\r\n    }\r\n    //  $.each(tb._methodtypes, (id: string, obj: bbase.SemTalkMethodType) => { obj.Save(jmethodtypes); });\r\n    doc.methodtypes = jmethodtypes;\r\n\r\n    // tslint:disable-next-line:no-var-keyword\r\n    var jstatetypes: any[] = [];\r\n    for (const obj of tb.AllStateTypes()) {\r\n      obj.Save(jstatetypes);\r\n    }\r\n    // $.each(tb._statetypes, (id: string, obj: bbase.SemTalkStateType) => { obj.Save(jstatetypes); });\r\n    doc.statetypes = jstatetypes;\r\n\r\n    // tslint:disable-next-line:no-var-keyword\r\n    var jattrtypes: any[] = [];\r\n    for (const obj of tb.AllAttributeTypes()) {\r\n      obj.Save(jattrtypes);\r\n    }\r\n    // $.each(tb._attrtypes, (id: string, obj: tbase.SemTalkAttributeType) => { obj.Save(jattrtypes); });\r\n    doc.attrtypes = jattrtypes;\r\n\r\n    // var jfolders = [];\r\n    // $.each(this._folders,  (id, obj) => { obj.Save(jfolders); });\r\n    // doc.folders = jfolders;\r\n\r\n    // tslint:enable:no-var-keyword\r\n    // tslint:enable:prefer-const\r\n    return doc;\r\n  }\r\n\r\n  public Merge(ob: IObjectBase, ob2: IObjectBase, encode: any, decode: any): any {\r\n    // was machen wir mit anderen Metamodellen? Konnten wir das bei SemTalk4?\r\n    for (let sc2 of ob2.AllDiagramTypes()) {\r\n      let sc = ob.FindDiagramType(sc2.ObjectName);\r\n      if (sc === null) {\r\n        sc = ob.MakeDiagramType(sc2.ObjectName);\r\n        sc.Clone(sc2);\r\n      }\r\n    }\r\n    for (let sc2 of ob2.AllDiagrams()) {\r\n      let sc = ob.FindDiagram(sc2.ObjectName);\r\n      if (sc === null) {\r\n        const cla = ob.FindDiagramType(sc2.ClassOf().ObjectName) as ISemTalkDiagramType;\r\n        sc = ob.MakeDiagram(cla, sc2.ObjectName);\r\n        sc.Clone(sc2);\r\n        let mxg = sc2.GetValue(SemTalkBaseConstant.SLMXGAttribute);\r\n        let encoded = ob2.GetModelAttribute(mxg);\r\n        ob.SetModelAttribute(SemTalkBaseConstant.SLMXGPagePrefix + sc.ID, encoded);\r\n        sc.SetValue(SemTalkBaseConstant.SLMXGAttribute, SemTalkBaseConstant.SLMXGPagePrefix + sc.ID);\r\n      } else {\r\n        if (sc.Contents().length === 0) {\r\n          // sc.DeleteAttribute(SemTalkBaseConstant.SLMXGAttribute);\r\n          sc.Clone(sc2);\r\n          let mxg = sc2.GetValue(SemTalkBaseConstant.SLMXGAttribute);\r\n          let encoded = ob2.GetModelAttribute(mxg);\r\n          // let decoded = base64.decode(encoded);\r\n          // console.debug(decoded);\r\n          ob.SetModelAttribute(SemTalkBaseConstant.SLMXGPagePrefix + sc.ID, encoded);\r\n          sc.SetValue(SemTalkBaseConstant.SLMXGAttribute,\r\n            SemTalkBaseConstant.SLMXGPagePrefix + sc.ID);\r\n        }\r\n      }\r\n      if (sc) {\r\n      }\r\n    }\r\n    for (let sc2 of ob2.AllAssociationTypes()) {\r\n      let sc = ob.FindAssociationType(sc2.ObjectName);\r\n      if (sc === null) {\r\n        sc = ob.MakeAssociationType(sc2.RelationType, sc2.ObjectName);\r\n        sc.Clone(sc2);\r\n      }\r\n    }\r\n    for (let sc2 of ob2.AllSystemClasses()) {\r\n      let sc = ob.FindSystemClass(sc2.ObjectName);\r\n      if (sc === null) {\r\n        sc = ob.MakeSystemClass(sc2.ObjectName);\r\n        sc.Clone(sc2);\r\n      }\r\n    }\r\n    for (let sc2 of ob2.AllAttributeTypes()) {\r\n      let sc = ob.FindAttributeType(sc2.ObjectName);\r\n      if (sc === null) {\r\n        sc = ob.MakeAttributeType(sc2.ObjectName);\r\n        sc.Clone(sc2);\r\n      }\r\n    }\r\n    for (let sc2 of ob2.AllMethodTypes()) {\r\n      let sc = ob.FindMethodType(sc2.ObjectName);\r\n      if (sc === null) {\r\n        sc = ob.MakeMethodType(sc2.ObjectName);\r\n        sc.Clone(sc2);\r\n      }\r\n    }\r\n    for (let sc2 of ob2.AllStateTypes()) {\r\n      let sc = ob.FindStateType(sc2.ObjectName);\r\n      if (sc === null) {\r\n        sc = ob.MakeStateType(sc2.ObjectName);\r\n        sc.Clone(sc2);\r\n      }\r\n    }\r\n    for (let sc2 of ob2.AllClasses()) {\r\n      let sc = ob.FindClass(sc2.ObjectName);\r\n      if (sc === null) {\r\n        sc = ob.MakeClass(sc2.ObjectName);\r\n        sc.Clone(sc2);\r\n      }\r\n    }\r\n    for (let sc2 of ob2.AllClasses()) {\r\n      let sc = ob.FindClass(sc2.ObjectName) as ISemTalkClass;\r\n      for (let ss2 of sc2.SuperClasses()) {\r\n        let ssc = ob.FindClass(ss2.ObjectName) as ISemTalkClass;\r\n        if (!sc.IsParent(ssc)) {\r\n          sc.AddSubclassOf(ssc);\r\n        }\r\n      }\r\n    }\r\n    let instance_map: { [name: string]: ISemTalkInstance } = {};\r\n    let mapping: { [oldid: string]: any } = {};\r\n    let shapeids: { [newid: string]: string } = {};\r\n    for (let sc2 of ob2.AllInstances()) {\r\n      const sys = sc2.SystemClass();\r\n      // if (sys && !sys.OnceOnly) {\r\n      const cla = ob.FindClass(sc2.ClassOf().ObjectName) as ISemTalkClass;\r\n      let sc = ob.FindInstance(sc2.ObjectName);\r\n      if (sc === null || (sys && sys.BottomUp)) {\r\n        let iname = sc2.ObjectName;\r\n        let id = sc2.ID;\r\n        if (iname.endsWith(\".\" + id.toString())) {\r\n          ob.maxid += 1;\r\n          iname = iname.replace(\".\" + id.toString(), \".\" + ob.maxid.toString());\r\n          id = ob.maxid;\r\n        }\r\n        sc = ob.MakeInstance(cla, iname, sc2.ObjectType, id);\r\n        sc.Clone(sc2);\r\n      }\r\n      instance_map[sc2.ObjectName] = sc;\r\n      mapping[sc2.ID + \"_\"] = sc;\r\n      // }\r\n    }\r\n    for (let sc2 of ob2.AllClasses()) {\r\n      let me = ob.FindClass(sc2.ObjectName) as ISemTalkClass;\r\n      for (let nd2 of sc2.Nodes()) {\r\n        let pg = ob.FindDiagram(nd2.Diagram.ObjectName);\r\n        if (pg) {\r\n          const oldshpid = nd2.ShapeID;\r\n          const newshpid: string = Guid.create().toString();\r\n          shapeids[newshpid] = oldshpid;\r\n          pg.MakeNode(me, newshpid);\r\n          // console.debug(nd);\r\n        }\r\n      }\r\n      for (let ass2 of sc2.Associations()) {\r\n        let oth2 = ass2.ToObject;\r\n        let acla = ass2.ClassOf().ObjectName;\r\n        let oth: ISemTalkObject | undefined | null = ob.FindClass(oth2.ObjectName) as ISemTalkClass;\r\n        if (oth === undefined) {\r\n          oth = ob.FindInstance(oth2.ObjectName);\r\n        }\r\n        if (oth && !me.HasDirectLink(acla, oth)) {\r\n          let ass: ISemTalkAssociation | null = null;\r\n          if (acla === SemTalkBaseConstant.SLSubClassOf && ob.IsClass(oth)) {\r\n            if (!me.IsParent(oth as ISemTalkClass)) {\r\n              let ass2a = me.AddSubclassOf(oth as ISemTalkClass);\r\n              if (ass2a) ass = ass2a;\r\n            }\r\n          } else {\r\n            ass = me.MakeAssociation(acla, oth);\r\n          }\r\n          if (ass) {\r\n            ass.Clone(ass2);\r\n            for (let nd2 of ass2.Nodes()) {\r\n              let pg = ob.FindDiagram(nd2.Diagram.ObjectName);\r\n              if (pg) {\r\n                const oldshpid = nd2.ShapeID;\r\n                const newshpid: string = Guid.create().toString();\r\n                shapeids[newshpid] = oldshpid;\r\n                pg.MakeNode(ass, newshpid);\r\n                // console.debug(nd);\r\n              }\r\n            }\r\n            mapping[ass2.ID + \"_\"] = ass;\r\n          } else {\r\n            console.debug(\"Import: invalid relation: \" + me.ObjectName + \" \" + acla + \" \" + oth.ObjectName);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (let sc2 of ob2.AllInstances()) {\r\n      let me = instance_map[sc2.ObjectName];\r\n      if (me === undefined) {\r\n        me = ob.FindInstance(sc2.ObjectName) as ISemTalkInstance;\r\n      }\r\n      for (let nd2 of sc2.Nodes()) {\r\n        let pg = ob.FindDiagram(nd2.Diagram.ObjectName);\r\n        if (pg) {\r\n          const oldshpid = nd2.ShapeID;\r\n          const newshpid: string = Guid.create().toString();\r\n          shapeids[newshpid] = oldshpid;\r\n          pg.MakeNode(me, newshpid);\r\n          // console.debug(nd);\r\n        }\r\n      }\r\n      for (let ass2 of sc2.Associations()) {\r\n        let oth2 = ass2.ToObject;\r\n        let acla = ass2.ClassOf().ObjectName;\r\n        let oth: ISemTalkObject | undefined | null = instance_map[oth2.ObjectName];\r\n        if (oth === undefined) {\r\n          oth = ob.FindInstance(oth2.ObjectName);\r\n        }\r\n        if (oth === null) {\r\n          oth = ob.FindClass(oth2.ObjectName);\r\n        }\r\n        if (oth && !me.HasDirectLink(acla, oth)) {\r\n          if (me.IsValid(oth, acla)) {\r\n            let ass = me.MakeAssociation(acla, oth);\r\n            ass.Clone(ass2);\r\n            for (let nd2 of ass2.Nodes()) {\r\n              let pg = ob.FindDiagram(nd2.Diagram.ObjectName);\r\n              if (pg) {\r\n                const oldshpid = nd2.ShapeID;\r\n                const newshpid: string = Guid.create().toString();\r\n                shapeids[newshpid] = oldshpid;\r\n                pg.MakeNode(ass, newshpid);\r\n                // console.debug(nd);\r\n              }\r\n            }\r\n            mapping[ass2.ID + \"_\"] = ass;\r\n          } else {\r\n            console.debug(\"Import: invalid relation: \" + me.ObjectName + \" \" + acla + \" \" + oth.ObjectName);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // for (let sc of ob.AllDiagrams()) {\r\n    for (let sc2 of ob2.AllDiagrams()) {\r\n      let sc = ob.FindDiagram(sc2.ObjectName);\r\n      if (sc) {\r\n        let mxg = sc.GetValue(SemTalkBaseConstant.SLMXGAttribute);\r\n        let encoded = ob.GetModelAttribute(mxg);\r\n        let decoded = decode(encoded);\r\n        console.debug(decoded);\r\n        for (let oid in mapping) {\r\n          let oids = 'objectid=\"' + oid.replace(\"_\", \"\") + '\"';\r\n          if (decoded.indexOf(oids) > 0) {\r\n            let newobj = mapping[oid];\r\n            let oidn = 'objectid=\"' + newobj.ID + '\"';\r\n            decoded = decoded.replace(oids, oidn);\r\n          }\r\n        }\r\n        for (let nd of sc.Contents()) {\r\n          let shapeid = nd.ShapeID;\r\n          const oldshpid = shapeids[shapeid];\r\n          let oids = 'shapeid=\"' + oldshpid + '\"';\r\n          if (decoded.indexOf(oids) > 0) {\r\n            let oidn = 'shapeid=\"' + shapeid + '\"';\r\n            decoded = decoded.replace(oids, oidn);\r\n          }\r\n        }\r\n        encoded = encode(decoded);\r\n        ob.SetModelAttribute(SemTalkBaseConstant.SLMXGPagePrefix + sc.ID, encoded);\r\n      }\r\n    }\r\n    return mapping;\r\n  }\r\n}\r\n","export enum BPMN_ElementName {\n  SLDecision = \"SLDecision\",\n  // SLEvent = \"SLEvent\",\n  // SLActivity = \"SLActivity\",\n  SLSequenceFlow = \"SLSequenceFlow\",\n  SLMessageFlow = \"SLMessageFlow\",\n  // SLControl = \"SLControl\",\n  SLSystem = \"SLSystem\",\n  SLAssociation = \"SLAssociation\",\n  FlowObject = \"Flow Object\",\n  BPMNElement = \"BPMN Element\",\n  Participant = \"Participant\",\n  Task = \"Task\",\n  Activity = \"Activity\",\n  Event = \"Event\",\n  System = \"System\",\n  FlowChartElement = \"FlowChartElement\",\n  Artifact = \"Artifact\",\n  Annotation = \"Annotation\",\n  Entity = \"Entity\"\n}\nexport enum BPMN_AssociationName {\n  dataobject = \"dataobjectOf_\",\n  attachedto = \"attached to\"\n}\nexport enum BPMN_AttributeTypeName\n{\n  GatewayType = \"GatewayType\",\n  EventType = \"EventType\",\n  TriggerType = \"TriggerType\",\n  TaskType = \"TaskType\",\n  Instantiate = \"Instantiate\",\n  Implementation = \"Implementation\",\n  adhoc = \"adhoc\",\n  //loop = \"loop\",\n  Compensation = \"Compensation\",\n  IntermediateType = \"IntermediateType\",\n  SubProcessOrdering = \"SubProcessOrdering\",\n  Script = \"Script\",\n  refinement = \"refinement\"\n}\n\nexport enum BPMN_GatewayTypeName\n{\n  XOR = \"Exclusive Data\",\n  XORwM = \"Exclusive Data (with Marker)\",\n  ExclusiveEvent = \"Exclusive Event\",\n  Inclusive = \"Inclusive\",\n  Parallel = \"Parallel\",\n  Complex = \"Complex\",\n  ExclusiveEventIns = \"Exclusive Event (Instantiate)\",\n  ParallelEventIns = \"Parallel Event (Instantiate)\"\n}\n\nexport enum BPMN_EventTypeName\n{\n  Start = \"Start\",\n  End = \"End\",\n  Intermediate = \"Intermediate\"\n}\n\n\n// enumList: [{val: 'standard', dispName: 'Standard'}, \n// {val: 'eventInt', dispName: 'Interrupting'}, \n// {val: 'eventNonint', dispName: 'Non-Interrupting'}, \n// {val: 'catching', dispName: 'Catching'}, \n// {val: 'boundInt', dispName: 'Bound Interrupting'}, \n// {val: 'boundNonint', dispName: 'Bound Non-Interrupting'}, \n// {val: 'throwing', dispName: 'Throwing'}, \n// {val: 'end', dispName: 'End'}, \n// {val: 'none', dispName: 'None'}]\n\nexport enum BPMN_TriggerTypeName\n{\n  None = \"None\",\n  Message = \"Message\",\n  Timer = \"Timer\",\n  Error = \"Error\",\n  Rule = \"Rule\",\n  Signal = \"Signal\",\n  Multiple = \"Multiple\",\n  Cancel = \"Cancel\",\n  Compensation = \"Compensation\",\n  Link = \"Link\",\n  Terminate = \"Terminate\",\n  Escalation = \"Escalation\",\n  ParallelMultiple = \"Parallel Multiple\"\n}\nexport enum BPMN_TaskTypeName\n{\n  None = \"None\",\n  Service = \"Service\",\n  Send = \"Send\",\n  Receive = \"Receive\",\n  User = \"User\",\n  Manual = \"Manual\",\n  Script = \"Script\",\n  InstantiationReceive = \"Instantiation Receive\",\n  BusinessRule = \"Business Rule\",\n  Abstract = \"Abstract\"\n}\n\nexport enum BPMN_GatewayType\n{\n  XOR = 0,\n  XORwM = 1,\n  ExclusiveEvent = 2,\n  Inclusive = 3,\n  Parallel = 4,\n  Complex = 5,\n  ExclusiveEventIns = 6,\n  ParallelEventIns = 7\n}\n\nexport enum BPMN_EventType\n{\n  Start = 0,\n  End = 2,\n  Intermediate = 1\n}\nexport enum BPMN_TriggerType\n{\n  None = 0,\n  Message = 1,\n  Timer = 2,\n  Error = 3,\n  Rule = 4,\n  Signal = 5,\n  Multiple = 6,\n  Cancel = 7,\n  Compensation = 8,\n  Link = 9,\n  Terminate = 10,\n  Escalation = 11,\n  ParallelMultiple = 12\n}\nexport enum BPMN_TaskType\n{\n  None = 0,\n  Service = 1,\n  Send = 2,\n  Receive = 3,\n  User = 4,\n  Manual = 5,\n  Script = 6,\n  InstantiationReceive = 7,\n  BusinessRule = 8\n}\nexport enum BPMN_ImplementationType\n{\n  None = \"\",\n  Service = \"Web Service\",\n  Other = \"Other\"\n}\n\nexport enum BPMN_EventIntermediateType\n{\n  None = \"\",\n  Catch = \"Catch\",\n  Throw = \"Throw\"\n}\n\nexport enum BPMN_SubprocessOrdering\n{\n  None = \"None\",\n  Loop = \"Loop\",\n  Parallel = \"Parallel\",\n  Sequential = \"Sequential\"\n}\n\n\n// export enum BPMN_OverlayPosition\n// {\n//   ALIGN_CENTER = 'center',\n//   ALIGN_LEFT = 'left',\n//   ALIGN_RIGHT = 'right',\n//   ALIGN_TOP= 'top',\n//   ALIGN_MIDDLE = 'middle',\n//   ALIGN_BOTTOM = 'bottom'\n// }\n// export interface IBPMNElements {\n//   GetAllTaskTypeNames(): BPMN_TaskTypeName [];\n//   GetAllTriggerTypeNames(): BPMN_TriggerTypeName [];\n//   GetAllEventTypeNames(): BPMN_EventTypeName [];\n//   GetAllGatewayTypeNames(): BPMN_GatewayTypesName [];\n\n//   GetTaskTypeName(type: BPMN_TaskType): BPMN_TaskTypeName;\n//   GetEventTypeName(type: BPMN_EventType): BPMN_EventTypeName;\n//   GetGatewayTypeName(type: BPMN_GatewayType): BPMN_GatewayTypesName;\n//   GetTriggerTypeName(name: BPMN_TriggerType): BPMN_TriggerTypeName;\n\n//   GetTaskType(name: BPMN_TaskTypeName): BPMN_TaskType;\n//   GetEventType(name: BPMN_EventTypeName): BPMN_EventType;\n//   GetGatewayType(name: BPMN_GatewayTypesName): BPMN_GatewayType;\n//   GetTriggerType(name: BPMN_TriggerTypeName): BPMN_TriggerType;\n\n//   CheckTaskType(TaskTypeValue: string): Boolean;\n//   CheckGatewayType(GatewayTypeValue: string): Boolean;\n//   CheckTriggerType(TriggerTypeValue: string): Boolean;\n// }\n","export class Utils {\r\n    public static MasterNoDot(mastername: string): string {\r\n        mastername = mastername.trim();\r\n        if (mastername === \"Swimlane (vertical)\" || mastername === \"Swimlane (horizontal)\") {\r\n            mastername = \"Swimlane\";\r\n        }\r\n        if (mastername.indexOf(\".\") > 0) {\r\n            const r: string = mastername.substr(mastername.lastIndexOf(\".\")+1);\r\n            if (parseInt(r, 0) > 0 || r.length === 0) {\r\n                mastername = mastername.substr(0, mastername.lastIndexOf(\".\"));\r\n            }\r\n        }\r\n        return mastername;\r\n    }\r\n\r\n}\r\n","import { BPMN_AssociationName } from \"../semtalklistener/subtask/bpmn/bpmninterface\";\r\nimport { EPC_ElementName } from \"../semtalklistener/subtask/epc/epcinterface\";\r\nimport { Process_ElementName } from \"../semtalklistener/processInterface\";\r\nimport {\r\n  IObjectBase,\r\n  ISemTalkNamedThing,\r\n  ISemTalkSynonym,\r\n  ISemTalkSharePointObject,\r\n  ISemTalkSharePointInstance,\r\n  ISemTalkSharePointClass,\r\n  ISemTalkObject,\r\n  ILabelSpec,\r\n  ISemTalkDiagram,\r\n  ISemTalkComposition,\r\n  ISemTalkAttribute,\r\n  ISemTalkAttributeType,\r\n  ISemTalkAssociation,\r\n  ISemTalkAssociationType,\r\n  ISemTalkClass,\r\n  ISemTalkInstance,\r\n  ISemTalkNode,\r\n  ISemTalkBusinessClass,\r\n  ISemTalkMethodType,\r\n  ISemTalkStateType,\r\n  ISemTalkVirtualInstance,\r\n  ISemTalkSystemClass,\r\n  ISemTalkSpecialization,\r\n  SemTalkType, SemTalkRelation, SemTalkValueType,\r\n  SemTalkBaseConstant,\r\n  // SemTalkLanguage,\r\n  ModelAttribute\r\n} from \"./Interface\";\r\nimport { GetLanguage } from './langtools';\r\n\r\nimport { Utils } from \"./utils\";\r\n\r\n// tslint:disable:max-classes-per-file\r\n// tslint:disable:variable-name\r\n\r\n/* tslint:disable:member-ordering */\r\n/* tslint:disable:forin */\r\n\r\nabstract class SemTalkNamedThing implements ISemTalkNamedThing {\r\n  constructor(tb: IObjectBase, newname: string, otype: SemTalkType) {\r\n    this._tbase = tb;\r\n    this._name = newname;\r\n    this._type = otype;\r\n    // if (tb === null) {\r\n    //   throw new Error(\"SemTalkNamedThing: Each object must have a objectbase!\");\r\n    // }\r\n    // if (newname === null) {\r\n    //   throw new Error(\"SemTalkNamedThing: Each object must have a name!\");\r\n    // }\r\n    // if (otype === null) {\r\n    //   throw new Error(\"SemTalkNamedThing: Each object must have a type!\");\r\n    // }\r\n    return this;\r\n  }\r\n  public get ID(): number { return -1; }\r\n  protected _name: string;\r\n  public get ObjectName(): string {\r\n    return this._name;\r\n  }\r\n  private _type: SemTalkType;\r\n  private _tbase: IObjectBase;\r\n  public get ObjectBase(): IObjectBase { return this._tbase; }\r\n\r\n  private _label_synonyms: { [language: string]: ISemTalkSynonym } = {};\r\n  private _alt_synonyms: ISemTalkSynonym[] = [];\r\n\r\n  public MakeAltSynonym(name: string, lang: string): ISemTalkSynonym {\r\n    let s = this.FindAltSynonym(name, lang);\r\n    if (s === undefined) {\r\n      s = new SemTalkSynonym(this as ISemTalkNamedThing, name, lang);\r\n      this._alt_synonyms.push(s);\r\n      s.Synonym = true;\r\n    }\r\n    return s;\r\n  }\r\n  public MakeSynonym(name: string, lang: string, isinv?: boolean): ISemTalkSynonym {\r\n    if (name.includes(\"#\")) {\r\n      name = name.substr(name.indexOf(\"#\") + 1);\r\n    }\r\n    let s = this.FindSynonym(lang, isinv);\r\n    // tslint:disable-next-line: no-use-before-declare\r\n    //this.DeleteSynonym(lang);\r\n    let langname = lang.toString();\r\n    if (s === undefined) {\r\n      s = new SemTalkSynonym(this as ISemTalkNamedThing, name, lang, isinv);\r\n      if (isinv !== undefined && isinv === true) {\r\n        langname = \"Inv \" + langname;\r\n      }\r\n      this._label_synonyms[langname] = s;\r\n      // console.debug(\"OnSynonymAdded: \" + s.Owner.ObjectName + s);\r\n      this.ObjectBase.OnSynonymAdded(s);\r\n    } else {\r\n      s.Name = name;\r\n    }\r\n    return s;\r\n  }\r\n  public DeleteSynonym(lang: string, isinv?: boolean): ISemTalkNamedThing {\r\n    let langname = lang.toString();\r\n    if (isinv !== undefined && isinv === true) {\r\n      langname = \"Inv \" + langname;\r\n    }\r\n    const s = this._label_synonyms[langname];\r\n    if (s !== undefined) {\r\n      delete this._label_synonyms[langname];\r\n      // s.Owner = null;\r\n      // console.debug(\"OnSynonymDeleted: \" + s.Owner.ObjectName + s);\r\n      this.ObjectBase.OnSynonymDeleted(s);\r\n    }\r\n    return this;\r\n  }\r\n  public DeleteAltSynonym(name: string, lang: string): ISemTalkNamedThing {\r\n    let s = this.FindAltSynonym(name, lang);\r\n    if (s !== undefined) {\r\n      this._alt_synonyms.splice(this._alt_synonyms.indexOf(s), 1);\r\n    }\r\n    return this;\r\n  }\r\n  public FindSynonym(lang: string, isinv?: boolean): ISemTalkSynonym | undefined {\r\n    let langname = lang.toString();\r\n    if (isinv !== undefined && isinv === true) {\r\n      langname = \"Inv \" + langname;\r\n    }\r\n    return this._label_synonyms[langname];\r\n  }\r\n  public FindAltSynonym(name: string, lang: string): ISemTalkSynonym | undefined {\r\n    for (let s of this._alt_synonyms) {\r\n      if (s.Name === name && s.Language === lang) {\r\n        return s;\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n  public Synonyms(): ISemTalkSynonym[] {\r\n    const alist: ISemTalkSynonym[] = [];\r\n    for (const lang in this._label_synonyms) {\r\n      alist[alist.length] = this._label_synonyms[lang];\r\n    }\r\n    return alist;\r\n  }\r\n  public AltSynonyms(): ISemTalkSynonym[] {\r\n    return this._alt_synonyms;\r\n  }\r\n  public AllSynonyms(): ISemTalkSynonym[] {\r\n    const alist: ISemTalkSynonym[] = [];\r\n    for (const lang in this._label_synonyms) {\r\n      alist[alist.length] = this._label_synonyms[lang];\r\n    }\r\n    return alist;\r\n  }\r\n  public get ID2Name(): string {\r\n    if (this._name.includes(\"#\")) {\r\n      return this._name.substr(this._name.indexOf(\"#\") + 1);\r\n    } else {\r\n      return this._name;\r\n    }\r\n  }\r\n  // public get ID2Namespace(): string {\r\n  //   if (!this._name.includes(\"#\")) {\r\n  //     return \"\";\r\n  //   } else {\r\n  //     return this._name.substr(0, this._name.indexOf(\"#\"));\r\n  //   }\r\n  // }\r\n  public get ObjectType(): SemTalkType {\r\n    return this._type;\r\n  }\r\n  public set ObjectType(val: SemTalkType) {\r\n    this._type = val;\r\n  }\r\n  public toString(): string { return \"<\" + this._tbase.SemTalkTypeName(this._type) + \" \" + this._name + \">\"; }\r\n\r\n  public CurrentName(lang: string): string {\r\n    // let iso = SemTalkNamedThing._iso2languagename(lang);\r\n    // if (iso === undefined && lang.indexOf(\"-\") > 0)\r\n    //   lang = SemTalkNamedThing._iso2languagename[lang.substr(0, lang.indexOf(\"-\"))];\r\n    // if (iso !== undefined) lang = iso;\r\n    if (lang in this._label_synonyms) {\r\n      return this._label_synonyms[lang].Name;\r\n    }\r\n    else {\r\n      return this._name;\r\n    }\r\n  }\r\n  public ID2NameNsp(): string {\r\n    const lang: string = this._tbase.CurrentNsp;\r\n    if (lang) {\r\n      return this.ID2NameNspLan(lang);\r\n    } else {\r\n      return this.ObjectName;\r\n    }\r\n  }\r\n  public get ObjectCaption(): string {\r\n    return this.ID2NameNsp();\r\n  }\r\n  public ID2NameNspLan(lang: string): string {\r\n    let res: string = this.CurrentName(lang);\r\n    if (res.indexOf(\"#\") > -1) {\r\n      res = res.substr(res.indexOf(\"#\") + 1);\r\n    }\r\n    return res;\r\n  }\r\n  public Load(je: any): void {\r\n    if (je.synonyms) {\r\n      for (const a of je.synonyms) {\r\n        if (this.FindSynonym(a.namespace)) {\r\n          this.MakeAltSynonym(a.name, a.namespace).Load(a);\r\n        } else {\r\n          this.MakeSynonym(a.name, a.namespace, (a.inverse === '1')).Load(a);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  public LoadXML(element: Element): void {\r\n    const synonyms = element.getElementsByTagName(\"Synonym\");\r\n    for (const i in synonyms) {\r\n      const syn = synonyms[i];\r\n      if (syn.parentNode === element && syn.attributes && syn.nodeName === \"Synonym\") {\r\n        const name = syn.attributes.getNamedItem(\"name\")?.value;\r\n        const namespace = syn.attributes.getNamedItem(\"namespace\")?.value;\r\n        if (namespace && name) {\r\n          if (this.FindSynonym(namespace)) {\r\n            this.MakeAltSynonym(name, namespace).LoadXML(syn);\r\n          } else {\r\n            const inverse = syn.attributes.getNamedItem(\"inverse\")?.value;\r\n            this.MakeSynonym(name, namespace, (inverse === '1')).LoadXML(syn);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  public Save(par: any[]): any {\r\n    const el: any = {};\r\n    par.push(el);\r\n    el.name = this._name;\r\n    el.ObjectType = this._tbase.SemTalkTypeName(this._type);\r\n    if (this._label_synonyms !== null) {\r\n      const syns: any[] = [];\r\n      for (const l in this._label_synonyms) {\r\n        const s = this._label_synonyms[l];\r\n        s.Save(syns);\r\n      }\r\n      el.synonyms = syns;\r\n    }\r\n    return el;\r\n  }\r\n  public SaveXML(xd: XMLDocument, el: HTMLElement): void {\r\n    el.setAttribute(\"name\", this._name);\r\n    el.setAttribute(\"ObjectType\", this._tbase.SemTalkTypeName(this._type));\r\n    if (this._label_synonyms !== null) {\r\n      for (const l in this._label_synonyms) {\r\n        const s = this._label_synonyms[l];\r\n        let sy = xd.createElement(\"Synonym\");\r\n        el.appendChild(sy);\r\n        s.SaveXML(xd, sy);\r\n      }\r\n    }\r\n  }\r\n  public Clone(oth: ISemTalkNamedThing) {\r\n    for (let s2 of oth.Synonyms()) {\r\n      let s2l = GetLanguage(s2.Language);\r\n      if (s2l) {\r\n        if (!this.FindSynonym(s2l, s2.Inverse)) {\r\n          this.MakeSynonym(s2.Name, s2l, s2.Inverse);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class SemTalkSynonym implements ISemTalkSynonym {\r\n  constructor(owner: ISemTalkNamedThing, name: string, lang: string, isinv?: boolean, issyn?: boolean) {\r\n    this.Owner = owner;\r\n    this.Language = lang;\r\n    this.Name = name;\r\n    this._name = name;\r\n    if (isinv !== undefined) {\r\n      this.Inverse = isinv;\r\n    }\r\n    if (issyn !== undefined) {\r\n      this.Synonym = issyn;\r\n    }\r\n  }\r\n  private _name: string;\r\n  public Owner: ISemTalkNamedThing;\r\n  public Language: string;\r\n  public get Name(): string { return this._name; }\r\n  public set Name(s: string) {\r\n    if (s.includes(\"#\")) {\r\n      s = s.substr(s.indexOf(\"#\") + 1);\r\n    }\r\n    if (s !== this._name && !this.Synonym) {\r\n      const oldname = this._name;\r\n      this._name = s;\r\n      if (this.Owner !== undefined) {\r\n        // console.debug(\"OnSynonymRenamed: \" + this.Owner.ObjectName + s);\r\n        this.Owner.ObjectBase.OnSynonymRenamed(this, oldname);\r\n      }\r\n    }\r\n  }\r\n  public Inverse: boolean = false;\r\n  public Synonym: boolean = false;\r\n  public Comment: string | null = null;\r\n  private _type = SemTalkType.SemTalkSynonym;\r\n\r\n  public toString(): string { return \"<\" + this.Owner.ObjectBase.SemTalkTypeName(this._type) + \" \" + this.Name + \" \" + this.Language + \">\"; }\r\n\r\n  public Load(je: any): void {\r\n    this.Inverse = (je.inverse === \"1\");\r\n    this.Synonym = (je.synonym === \"1\");\r\n    if (je.comment) {\r\n      this.Comment = je.comment;\r\n    }\r\n  }\r\n  public LoadXML(element: Element): void {\r\n    if (element.attributes) {\r\n      const inverse = element.attributes.getNamedItem(\"inverse\")?.value;\r\n      if (inverse) this.Inverse = (inverse === '1');\r\n      const synonym = element.attributes.getNamedItem(\"synonym\")?.value;\r\n      if (synonym) this.Synonym = (synonym === '1');\r\n      const comment = element.attributes.getNamedItem(\"comment\")?.value;\r\n      if (comment) {\r\n        this.Comment = comment;\r\n      }\r\n    }\r\n  }\r\n\r\n  public Save(par: any[]): any {\r\n    const el: any = {};\r\n    el.ObjectType = \"Synonym\";\r\n    el.name = this.Name;\r\n    el.namespace = this.Language;\r\n    if (this.Inverse) { el.inverse = \"1\"; }\r\n    if (this.Synonym) { el.synonym = \"1\"; }\r\n    if (this.Comment !== null) { el.comment = this.Comment; }\r\n    par.push(el);\r\n    return el;\r\n  }\r\n  public SaveXML(_xd: XMLDocument, el: HTMLElement): void {\r\n    el.setAttribute(\"name\", this.Name);\r\n    el.setAttribute(\"namespace\", this.Language);\r\n    if (this.Inverse) { el.setAttribute(\"inverse\", \"1\"); }\r\n    if (this.Synonym) { el.setAttribute(\"synonym\", \"1\"); }\r\n    if (this.Comment !== null) { el.setAttribute(\"comment\", this.Comment); }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport abstract class SemTalkObject extends SemTalkNamedThing implements ISemTalkObject {\r\n  public indeletion: boolean = false;\r\n  constructor(tb: IObjectBase, newname: string, otype: SemTalkType, id?: number | null) {\r\n    super(tb, newname, otype);\r\n    if (id === null || id === undefined || id === 0) {\r\n      tb.maxid = tb.maxid + 1;\r\n      this._id = tb.maxid;\r\n    } else {\r\n      const iid: number = id;\r\n      if (iid > tb.maxid) {\r\n        tb.maxid = iid;\r\n      }\r\n      this._id = iid;\r\n    }\r\n    tb._objectids[this.ID + \"_\"] = this;\r\n    tb._objects[newname] = this;\r\n    const d = new Date();\r\n    this.Created = d.toUTCString();\r\n    this.CreatedBy = this.ObjectBase.User;\r\n    this.ObjectBase.OnCreated(this);\r\n    return this;\r\n  }\r\n  public ID2NameNsp(): string {\r\n    let c = this.Composition();\r\n    if (c !== null) {\r\n      let s: string = (c as ISemTalkComposition).ID2NameNsp();\r\n      return s;\r\n    } else {\r\n      return super.ID2NameNsp();\r\n    }\r\n  }\r\n\r\n  public RenameObject(value: string): void {\r\n    // if (this.ObjectName===value) {\r\n    //   return;\r\n    // }\r\n    const ob = this.ObjectBase;\r\n    if (ob._objects[value] !== undefined) {\r\n      throw new Error(\"set ObjectName: There is a different object named: \" + value);\r\n    }\r\n    const oldname: string = this.ObjectName;\r\n    const oldid2name: string = this.ID2Name;\r\n    this._name = value;\r\n    ob._objects[value] = this;\r\n\r\n    const newname: string = value;\r\n    const lang = GetLanguage(ob.GetModelAttribute(ModelAttribute.currentnsp));\r\n    if (lang) {\r\n      let syn = this.FindSynonym(lang);\r\n      // if (syn)\r\n      //     console.debug(oldname + \" \" + newname + \" \" + syn.Name);\r\n      if (syn && (!syn.Synonym || (syn.Name === oldname || syn.Name === oldid2name))) {\r\n        this.DeleteSynonym(lang);\r\n        this.MakeSynonym(newname, lang);\r\n      }\r\n      delete ob._objects[oldname];\r\n      this.Changed = new Date().toUTCString();\r\n      this.ChangedBy = this.ObjectBase.User;\r\n    }\r\n    ob.OnRenamed(this, oldname);\r\n  }\r\n  public get ID2Namespace(): string {\r\n    if (!this._name.includes(\"#\")) {\r\n      return \"\";\r\n    } else {\r\n      return this._name.substr(0, this._name.indexOf(\"#\"));\r\n    }\r\n  }\r\n  public set ID2Namespace(n: string) {\r\n    if (n.includes(\"#\")) {\r\n      throw new Error(\"Namespace must not contain a hashmark: \" + n);\r\n    }\r\n    if (this.ObjectName.indexOf(\"#\") < 0) {\r\n      if (n.length > 0 && n.trim() !== \"\")\r\n        this.RenameObject(n + \"#\" + this.ObjectName);\r\n    }\r\n    else {\r\n      if (n.length > 0 && n.trim() !== \"\") {\r\n        this.RenameObject(n + \"#\" + this.ObjectName.substr(this.ObjectName.indexOf(\"#\") + 1));\r\n      } else {\r\n        this.RenameObject(this.ObjectName.substr(this.ObjectName.indexOf(\"#\") + 1));\r\n      }\r\n    }\r\n  }\r\n  public abstract SystemClass(): ISemTalkSystemClass | null;\r\n\r\n  public abstract UpdateLabel(mastername?: string): ILabelSpec;\r\n\r\n  private _comment: string | null = null;\r\n  get Comment(): string {\r\n    if (this._comment === null) { return \"\"; }\r\n    else { return this._comment; }\r\n  }\r\n  set Comment(value: string) {\r\n    let v: string | null = value;\r\n    if (value === \"\") { v = null; }\r\n    const old: string | null = this._comment;\r\n    this._comment = v;\r\n    this.Changed = new Date().toUTCString();\r\n    this.ChangedBy = this.ObjectBase.User;\r\n    this.ObjectBase.OnCommentChanged(this, old, v);\r\n  }\r\n  // private _comments: { [language: string]: string } = {};\r\n  private _id: number = -1;\r\n  public get ID(): number { return this._id; }\r\n  // public set ID(n: number) { this._id = n };\r\n  // public ID: number = 0;\r\n  public SrcID: number = 0;\r\n  public EditLink: string | null = null;\r\n\r\n  public IsReadOnly: boolean = false;\r\n  public Ghosted: boolean = false;\r\n\r\n  private _created: string = \"\";\r\n  public get Created(): string { return this._created; }\r\n  public set Created(s: string) { if (!this.ObjectBase._loading) this._created = s; }\r\n\r\n  private _createdby: string = \"\";\r\n  public get CreatedBy(): string { return this._createdby; }\r\n  public set CreatedBy(s: string) { if (!this.ObjectBase._loading) this._createdby = s; }\r\n\r\n  private _changed: string = \"\";\r\n  public get Changed(): string { return this._changed; }\r\n  public set Changed(s: string) {\r\n    if (!this.ObjectBase._loading) this._changed = s;\r\n  }\r\n\r\n  private _changedby: string = \"\";\r\n  public get ChangedBy(): string { return this._changedby; }\r\n  public set ChangedBy(s: string) {\r\n    if (!this.ObjectBase._loading) this._changedby = s;\r\n  }\r\n\r\n  public Color: string | null = null;\r\n  public LinePattern: string | null = null;\r\n  public LineWeight: string | null = null;\r\n  public Location: string | null = null;\r\n  public ExtRefinement: string | null = null;\r\n  //  public Reference: SemTalkSharepointObject | null = null; // new tbase.SemTalkSharepointObject()\r\n\r\n  private _refinement: ISemTalkDiagram | null = null;\r\n  get Refinement(): ISemTalkDiagram | null {\r\n    return this._refinement;\r\n  }\r\n  set Refinement(value: ISemTalkDiagram | null) {\r\n    const old: ISemTalkDiagram | null = this._refinement;\r\n    if (old) {\r\n      old.RemoveInvRefinement(this);\r\n    }\r\n    if (value) {\r\n      (value as ISemTalkDiagram).AddInvRefinement(this);\r\n    }\r\n    if (value) {\r\n      this._refinement = value as ISemTalkDiagram;\r\n    } else {\r\n      this._refinement = null;\r\n    }\r\n    this.Changed = new Date().toUTCString();\r\n    this.ChangedBy = this.ObjectBase.User;\r\n    if (old) {\r\n      this.ObjectBase.OnDetached(this, old);\r\n    }\r\n    if (value) {\r\n      this.ObjectBase.OnRefined(this, value);\r\n    }\r\n  }\r\n\r\n  private _composition: ISemTalkComposition | null = null;\r\n  public Composition(): ISemTalkComposition | null {\r\n    return this._composition;\r\n  }\r\n  public MakeComposition(cls: ISemTalkBusinessClass, met: ISemTalkMethodType | null, sta: ISemTalkStateType | null,\r\n    attr: ISemTalkAttributeType | null, oth?: ISemTalkBusinessClass | null, op?: string,\r\n    isnotop?: boolean, cmpvalue?: any): ISemTalkComposition {\r\n    let c = this.ObjectBase.MakeComposition(this, cls, met, sta, attr, oth, op, isnotop, cmpvalue);\r\n    this.SetComposition(c);\r\n    this.Changed = new Date().toUTCString();\r\n    this.ChangedBy = this.ObjectBase.User;\r\n    this.ObjectBase.OnComposed(this);\r\n    return c;\r\n  }\r\n  public DeleteComposition(): void {\r\n    this.SetComposition(null);\r\n    this.Changed = new Date().toUTCString();\r\n    this.ChangedBy = this.ObjectBase.User;\r\n    this.ObjectBase.OnUnComposed(this);\r\n  }\r\n  private SetComposition(c: ISemTalkComposition | null): ISemTalkComposition | null {\r\n    if (this._composition !== null) {\r\n      const cc = this._composition;\r\n      this._composition = null;\r\n      cc.Delete();\r\n    }\r\n    this._composition = c;\r\n    if (c !== null) {\r\n      c.Owner = this;\r\n      if (c.ComposedClass) {\r\n        c.ComposedClass.AddInvComposition(c);\r\n      }\r\n      if (c.Other) {\r\n        c.Other.AddInvComposition(c);\r\n      }\r\n      if (c.Method) {\r\n        c.Method.AddInvComposition(c);\r\n      }\r\n      if (c.State) {\r\n        c.State.AddInvComposition(c);\r\n      }\r\n      if (c.Attribute) {\r\n        c.Attribute.AddInvComposition(c);\r\n      }\r\n      this.ObjectBase.OnComposed(this);\r\n    } else {\r\n      this.ObjectBase.OnUnComposed(this);\r\n    }\r\n    return this._composition;\r\n  }\r\n  private _attributes: { [id: string]: ISemTalkAttribute } = {};\r\n  // public AddAttribute(a: ISemTalkAttribute): ISemTalkAttribute {\r\n  //   this._attributes[a.ClassOf().ID + \"_\"] = a;\r\n  //   return a;\r\n  // }\r\n  public RemoveAttribute(a: ISemTalkAttribute): void {\r\n    this.Changed = new Date().toUTCString();\r\n    this.ChangedBy = this.ObjectBase.User;\r\n    delete this._attributes[a.ClassOf().ID + \"_\"];\r\n  }\r\n  public FindAttribute(attr: string | ISemTalkAttributeType): ISemTalkAttribute | null {\r\n    let cla: ISemTalkAttributeType | null;\r\n    if (typeof attr === 'string') {\r\n      cla = this.ObjectBase.FindAttributeType(attr as string);\r\n    } else {\r\n      cla = attr as ISemTalkAttributeType;\r\n    }\r\n    if (cla === null) {\r\n      return null;\r\n    } else {\r\n      const a = this._attributes[cla.ID + \"_\"];\r\n      if (a === undefined) {\r\n        return null;\r\n      } else {\r\n        return a;\r\n      }\r\n    }\r\n  }\r\n\r\n  public static getAttributeType(ob: IObjectBase, attr: string | ISemTalkAttributeType): ISemTalkAttributeType {\r\n    if (typeof attr === 'string') {\r\n      const mt = ob.FindAttributeType(attr as string);\r\n      if (mt !== null) {\r\n        return mt;\r\n      } else {\r\n        return new SemTalkAttributeType(ob, attr as string);\r\n      }\r\n    } else {\r\n      return attr as ISemTalkAttributeType;\r\n    }\r\n  }\r\n  public MakeAttribute(attr: string | ISemTalkAttributeType, val: any): ISemTalkAttribute {\r\n    const cla: ISemTalkAttributeType = SemTalkObject.getAttributeType(this.ObjectBase, attr);\r\n    // if (cla === null) { throw new Error(\"MakeAttribute failed\" + attr); }\r\n    let a: ISemTalkAttribute | null = this.FindAttribute(attr);\r\n    // if (val === undefined) {\r\n    //   console.debug(val);\r\n    // }\r\n    if (a === null) {\r\n      a = this.ObjectBase.MakeAttribute(this, cla, val);\r\n      if (a) {\r\n        this._attributes[cla.ID + \"_\"] = a;\r\n        a.SetClass(cla);\r\n\r\n      }\r\n    } else {\r\n      a.Value = val;\r\n    }\r\n    this.Changed = new Date().toUTCString();\r\n    this.ChangedBy = this.ObjectBase.User;\r\n    this.ObjectBase.OnAttributeAdded(a);\r\n    return a;\r\n  }\r\n  // public NewAttribute(attr: string, val: any): ISemTalkAttribute | null {\r\n  //   return this.MakeAttribute(attr, val);\r\n  // }\r\n\r\n  public DeleteAttribute(attr: string | ISemTalkAttributeType): ISemTalkObject {\r\n    let ob = this.ObjectBase;\r\n    let cla: ISemTalkAttributeType | null;\r\n    if (typeof attr === 'string') {\r\n      cla = ob.FindAttributeType(attr);\r\n    } else {\r\n      cla = attr as ISemTalkAttributeType;\r\n    }\r\n    if (cla === null) {\r\n      throw new Error(\"DeleteAttribute failed: \" + attr);\r\n    }\r\n    const at: ISemTalkAttribute | null = this.FindAttribute(cla);\r\n    if (at) {\r\n      at.Delete();\r\n      delete this._attributes[at.ClassOf().ID + \"_\"];\r\n      this.Changed = new Date().toUTCString();\r\n      this.ChangedBy = this.ObjectBase.User;\r\n      this.ObjectBase.OnAttributeDeleted(at);\r\n    }\r\n    return this;\r\n  }\r\n  public Attributes(): ISemTalkAttribute[] {\r\n    const alist: ISemTalkAttribute[] = [];\r\n    for (const an in this._attributes) {\r\n      const a: ISemTalkAttribute = this._attributes[an];\r\n      alist[alist.length] = a;\r\n    }\r\n    return alist;\r\n  }\r\n  public abstract AllAttributes(): ISemTalkAttribute[];\r\n  public abstract GetAttributeOwner(attr: string | ISemTalkAttributeType): ISemTalkAttribute | null;\r\n\r\n  public SetValue(attr: string | ISemTalkAttributeType, val: any): ISemTalkObject {\r\n    // if (val === \"\") { val = null; }\r\n    let a: ISemTalkAttribute | null = this.FindAttribute(attr);\r\n    if (a !== null && val === null) {\r\n      a.Delete();\r\n    } else {\r\n      if (a === null) {\r\n        a = this.MakeAttribute(attr, val);\r\n      } else {\r\n        a.Value = val;\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  public GetValue(attr: string | ISemTalkAttributeType): any {\r\n    const a: ISemTalkAttribute | null = this.FindAttribute(attr);\r\n    if (a === null) {\r\n      return null;\r\n    } else {\r\n      if (a === undefined) {\r\n        return null;\r\n      } else {\r\n        return a.Value;\r\n      }\r\n    }\r\n  }\r\n  public GetCurrentValue(attr: string | ISemTalkAttributeType, language?: string) {\r\n    const a: ISemTalkAttribute | null = this.FindAttribute(attr);\r\n    if (a === null) {\r\n      return null;\r\n    }\r\n    else {\r\n      if (a === undefined) {\r\n        return null;\r\n      } else {\r\n        return a.CurrentValue(language);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  private _associations: { [id: number]: ISemTalkAssociation } = {};\r\n  private _invassociations: { [id: number]: ISemTalkAssociation } = {};\r\n  public AddAssociation(a: ISemTalkAssociation): ISemTalkAssociation {\r\n    this._associations[a.ID] = a;\r\n    return a;\r\n  }\r\n  public RemoveAssociation(a: ISemTalkAssociation): ISemTalkAssociation {\r\n    delete this._associations[a.ID];\r\n    return a;\r\n  }\r\n  public AddInvAssociation(a: ISemTalkAssociation): ISemTalkAssociation {\r\n    this._invassociations[a.ID] = a;\r\n    return a;\r\n  }\r\n  public RemoveInvAssociation(a: ISemTalkAssociation): ISemTalkAssociation {\r\n    delete this._invassociations[a.ID];\r\n    return a;\r\n  }\r\n  public static getAssociationType(ob: IObjectBase, attr: string | ISemTalkAssociationType, ptype: SemTalkRelation, bcreate: boolean = true): ISemTalkAssociationType | null {\r\n    let cla: ISemTalkAssociationType | null = null;\r\n    if (typeof attr === 'string') {\r\n      const at: ISemTalkAssociationType | null = ob.FindAssociationType(attr as string);\r\n      if (at !== null) { cla = at as ISemTalkAssociationType; }\r\n      if (cla === null && bcreate) {\r\n        cla = ob.MakeAssociationType(ptype, attr as string);\r\n      }\r\n    } else {\r\n      cla = attr as ISemTalkAssociationType;\r\n    }\r\n    return cla;\r\n  }\r\n  public FindAssociation(attr: string | ISemTalkAssociationType, toobj: ISemTalkObject, ptype?: SemTalkRelation | null): ISemTalkAssociation | null {\r\n    let aname: string;\r\n    if (typeof attr === 'string') { aname = attr; } else { aname = attr.ObjectName; }\r\n    if (ptype === null || ptype === undefined) { ptype = SemTalkRelation.SemTalkProperty; }\r\n    for (const a in this._associations) {\r\n      const x: ISemTalkAssociation = this._associations[a];\r\n      const r: ISemTalkAssociationType = x.ClassOf() as ISemTalkAssociationType;\r\n      if (r.ObjectName === aname && r.RelationType === ptype && x.ToObject === toobj) { return x; }\r\n    }\r\n    return null;\r\n  }\r\n  public MakeAssociation(attr: string | ISemTalkAssociationType, toobj: ISemTalkObject, ptype?: SemTalkRelation | null, id?: number | null,\r\n    fn?: (cla: ISemTalkAssociationType, ptype: SemTalkRelation, fromobj: ISemTalkObject, toobj: ISemTalkObject, i: number) => ISemTalkAssociation): ISemTalkAssociation {\r\n    if (ptype === null || ptype === undefined) {\r\n      ptype = SemTalkRelation.SemTalkProperty;\r\n    }\r\n    let a: ISemTalkAssociation | null = this.FindAssociation(attr, toobj, ptype);\r\n    if (a === null) {\r\n      const tb = this.ObjectBase;\r\n      // , id?: number | null\r\n      if (id === null || id === undefined) {\r\n        tb.maxid = tb.maxid + 1;\r\n        id = tb.maxid;\r\n      } else {\r\n        const iid: number = id;\r\n        if (iid > tb.maxid) {\r\n          tb.maxid = iid;\r\n        }\r\n        id = iid;\r\n      }\r\n      if (ptype === SemTalkRelation.SemTalkSubClassOf && tb.IsClass(this) && tb.IsClass(toobj)) {\r\n        // tslint:disable-next-line: no-use-before-declare\r\n        let me: any = this;\r\n        a = new SemTalkSpecialization(me as ISemTalkClass, toobj as ISemTalkClass, id);\r\n      }\r\n      else {\r\n        const cla: ISemTalkAssociationType = SemTalkObject.getAssociationType(this.ObjectBase, attr, ptype, true) as ISemTalkAssociationType;\r\n        // tslint:disable-next-line: no-use-before-declare\r\n        if (fn === undefined) {\r\n          a = new SemTalkAssociation(cla, ptype, this, toobj, id);\r\n        } else {\r\n          a = fn(cla, ptype, this, toobj, id);\r\n        }\r\n        // a = new SemTalkAssociation(cla, ptype, this, toobj, id);\r\n        if (id !== null && a !== null && a.ObjectName !== cla.ObjectName + \".\" + a.ID) {\r\n          a.RenameObject(cla.ObjectName + \".\" + a.ID);\r\n        }\r\n      }\r\n    }\r\n    return a;\r\n  }\r\n  public DeleteAssociation(attr: string | ISemTalkAssociationType, toobj: ISemTalkObject): void {\r\n    const a: ISemTalkAssociation | null = this.FindAssociation(attr, toobj, null);\r\n    if (a !== null) {\r\n      a.Delete();\r\n    }\r\n  }\r\n  public Associations(): ISemTalkAssociation[] {\r\n    const alist: ISemTalkAssociation[] = [];\r\n    for (const a in this._associations) {\r\n      alist[alist.length] = this._associations[a];\r\n    }\r\n    return alist;\r\n  }\r\n  public AssociationTypes(): ISemTalkAssociationType[] {\r\n    const alist: ISemTalkAssociationType[] = [];\r\n    const fnd: any = {};\r\n    const ptype = SemTalkRelation.SemTalkProperty;\r\n    for (const a in this._associations) {\r\n      const x: ISemTalkAssociation = this._associations[a];\r\n      const atype: ISemTalkAssociationType = x.ClassOf() as ISemTalkAssociationType;\r\n      if (fnd[atype.ObjectName] === undefined && atype.RelationType === ptype) {\r\n        fnd[atype.ObjectName] = atype;\r\n        alist[alist.length] = atype;\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n  public InvAssociations(): ISemTalkAssociation[] {\r\n    const alist: ISemTalkAssociation[] = [];\r\n    for (const a in this._invassociations) {\r\n      alist[alist.length] = this._invassociations[a];\r\n    }\r\n    return alist;\r\n  }\r\n  public InvAssociationTypes(): ISemTalkAssociationType[] {\r\n    const alist: ISemTalkAssociationType[] = [];\r\n    const fnd: any = {};\r\n    const ptype = SemTalkRelation.SemTalkProperty;\r\n    for (const a in this._invassociations) {\r\n      const x: ISemTalkAssociation = this._invassociations[a];\r\n      const atype: ISemTalkAssociationType = x.ClassOf() as ISemTalkAssociationType;\r\n      if (fnd[atype.ObjectName] === undefined && atype.RelationType === ptype) {\r\n        fnd[atype.ObjectName] = atype;\r\n        alist[alist.length] = atype;\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n  public LinkedObjects(attr: string | ISemTalkAssociationType, rec?: boolean, ptype?: SemTalkRelation | null): ISemTalkObject[] {\r\n    function _LinkedObjectsRec(obj: ISemTalkObject, aname1: string, ptype1: SemTalkRelation, alist1: ISemTalkObject[], fnd1: any): void {\r\n      for (const x of obj.Associations()) {\r\n        const r: ISemTalkAssociationType = x.ClassOf() as ISemTalkAssociationType;\r\n        if (r.ObjectName === aname1 && r.RelationType === ptype1 && fnd1[x.ToObject.ID] === undefined) {\r\n          alist1[alist1.length] = x.ToObject;\r\n          fnd1[x.ToObject.ID] = x.ToObject.ID;\r\n          _LinkedObjectsRec(x.ToObject, aname1, ptype1, alist1, fnd1);\r\n        }\r\n      }\r\n\r\n    }\r\n    let aname: string;\r\n    if (typeof attr === 'string') { aname = attr; } else { aname = attr.ObjectName; }\r\n    const alist: ISemTalkObject[] = [];\r\n    if (ptype === null || ptype === undefined) { ptype = SemTalkRelation.SemTalkProperty; }\r\n    const fnd: any = {};\r\n    fnd[this.ID] = this.ID;\r\n    for (const a in this._associations) {\r\n      const x: ISemTalkAssociation = this._associations[a];\r\n      const r: ISemTalkAssociationType = x.ClassOf() as ISemTalkAssociationType;\r\n      if (r.ObjectName === aname && r.RelationType === ptype) {\r\n        alist[alist.length] = x.ToObject;\r\n        fnd[x.ToObject.ID] = x.ToObject.ID;\r\n        if (rec) {\r\n          _LinkedObjectsRec(x.ToObject, aname, ptype, alist, fnd);\r\n        }\r\n      }\r\n    }\r\n\r\n    return alist;\r\n  }\r\n  public InvLinkedObjects(attr: string | ISemTalkAssociationType, rec?: boolean, ptype?: SemTalkRelation | null): ISemTalkObject[] {\r\n    function _InvLinkedObjectsRec(obj: ISemTalkObject, aname1: string, ptype1: SemTalkRelation, alist1: ISemTalkObject[], fnd1: any): void {\r\n      for (const x of obj.InvAssociations()) {\r\n        const r: ISemTalkAssociationType = x.ClassOf() as ISemTalkAssociationType;\r\n        if (r.ObjectName === aname1 && r.RelationType === ptype1 && fnd1[x.FromObject.ID] === undefined) {\r\n          alist1[alist1.length] = x.FromObject;\r\n          fnd1[x.ToObject.ID] = x.FromObject.ID;\r\n          _InvLinkedObjectsRec(x.FromObject, aname1, ptype1, alist1, fnd1);\r\n        }\r\n      }\r\n    }\r\n    let aname: string;\r\n    if (typeof attr === 'string') { aname = attr; } else { aname = attr.ObjectName; }\r\n    const alist: ISemTalkObject[] = [];\r\n    if (ptype === null || ptype === undefined) { ptype = SemTalkRelation.SemTalkProperty; }\r\n    const fnd: any = {};\r\n    fnd[this.ID] = this.ID;\r\n    for (const a in this._invassociations) {\r\n      const x: ISemTalkAssociation = this._invassociations[a];\r\n      const r: ISemTalkAssociationType = x.ClassOf() as ISemTalkAssociationType;\r\n      if (r.ObjectName === aname && r.RelationType === ptype) {\r\n        alist[alist.length] = x.FromObject;\r\n        fnd[x.FromObject.ID] = x.FromObject.ID;\r\n        if (rec) {\r\n          _InvLinkedObjectsRec(x.FromObject, aname, ptype, alist, fnd);\r\n        }\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n  public Links(attr: string | ISemTalkAssociationType, ptype?: SemTalkRelation | null): ISemTalkAssociation[] {\r\n    let aname: string;\r\n    if (typeof attr === 'string') { aname = attr; } else { aname = attr.ObjectName; }\r\n    const alist: ISemTalkAssociation[] = [];\r\n    if (ptype === null || ptype === undefined) { ptype = SemTalkRelation.SemTalkProperty; }\r\n    for (const a in this._associations) {\r\n      const x: ISemTalkAssociation = this._associations[a];\r\n      const atype: ISemTalkAssociationType = x.ClassOf() as ISemTalkAssociationType;\r\n      if (x.ClassOf().ObjectName === aname && atype.RelationType === ptype) {\r\n        alist[alist.length] = x;\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n  public InvLinks(attr: ISemTalkAssociationType | string, ptype?: SemTalkRelation | null): ISemTalkAssociation[] {\r\n    let aname: string;\r\n    if (typeof attr === 'string') { aname = attr; } else { aname = attr.ObjectName; }\r\n    const alist: ISemTalkAssociation[] = [];\r\n    if (ptype === null || ptype === undefined) { ptype = SemTalkRelation.SemTalkProperty; }\r\n    for (const a in this._invassociations) {\r\n      const x: ISemTalkAssociation = this._invassociations[a];\r\n      const atype: ISemTalkAssociationType = x.ClassOf() as ISemTalkAssociationType;\r\n      if (x.ClassOf().ObjectName === aname && atype.RelationType === ptype) {\r\n        alist[alist.length] = x;\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n\r\n  public MapProperties(fn: (x: any) => void) {\r\n    for (const an in this._attributes) {\r\n      const a: ISemTalkAttribute = this._attributes[an];\r\n      fn(a);\r\n    }\r\n    const ptype: SemTalkRelation = SemTalkRelation.SemTalkProperty;\r\n    for (const a in this._associations) {\r\n      const x: ISemTalkAssociation = this._associations[a];\r\n      if (x.ClassOf().RelationType === ptype) {\r\n        fn(x);\r\n      }\r\n    }\r\n    for (const a in this._invassociations) {\r\n      const x: ISemTalkAssociation = this._invassociations[a];\r\n      if (x.ClassOf().RelationType === ptype) {\r\n        fn(x);\r\n      }\r\n    }\r\n  }\r\n  public HasDirectLink(attr: ISemTalkAssociationType | string, other: ISemTalkObject, ptype?: SemTalkRelation | null): boolean {\r\n    let aname: string;\r\n    if (typeof attr === 'string') { aname = attr; } else { aname = attr.ObjectName; }\r\n    if (ptype === null || ptype === undefined) { ptype = SemTalkRelation.SemTalkProperty; }\r\n    for (const a in this._associations) {\r\n      const x: ISemTalkAssociation = this._associations[a];\r\n      const atype: ISemTalkAssociationType = x.ClassOf() as ISemTalkAssociationType;\r\n      if (atype.ObjectName === aname && atype.RelationType === ptype && x.ToObject === other) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  public HasLink(attr: ISemTalkAssociationType | string, other: ISemTalkObject, ptype?: SemTalkRelation | null): boolean {\r\n    let aname: string;\r\n    if (typeof attr === 'string') { aname = attr; } else { aname = attr.ObjectName; }\r\n    if (ptype === null || ptype === undefined) { ptype = SemTalkRelation.SemTalkProperty; }\r\n    for (const a in this._associations) {\r\n      const x: ISemTalkAssociation = this._associations[a];\r\n      const atype: ISemTalkAssociationType = x.ClassOf() as ISemTalkAssociationType;\r\n      if (atype.ObjectName === aname && atype.RelationType === ptype) {\r\n        if (x.ToObject === other) {\r\n          return true;\r\n        }\r\n        else {\r\n          return x.ToObject.HasLink(attr, other, ptype);\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public MakeAttachment(link: string, label?: string, nsp?: string, suburl?: string, typ?: string, exi?: string, fra?: string, nwi?: boolean): ISemTalkInstance | null {\r\n    // if (aname.length === 0)\r\n    //    aname = \"#document#\" + link;\r\n    const aname: string = link;\r\n    const ob = this.ObjectBase;\r\n    let atti = ob.FindInstance(aname);\r\n    if (atti === null) {\r\n      let attc = ob.MakeClass(SemTalkBaseConstant.SLAttachment);\r\n      atti = new SemTalkInstance(attc, aname, SemTalkType.SemTalkInstance, null);\r\n    }\r\n    // if (atti) {\r\n    const lnk: ISemTalkAssociation | null = this.MakeAssociation(SemTalkBaseConstant.SLhasAttachment, atti, SemTalkRelation.SemTalkSystemRelation, null);\r\n    if (lnk) {\r\n      lnk.SetValue(\"label\", label);\r\n      lnk.SetValue(\"namespace\", nsp);\r\n      lnk.SetValue(\"subaddress\", suburl);\r\n      lnk.SetValue(\"type\", typ);\r\n      lnk.SetValue(\"frame\", fra);\r\n      lnk.SetValue(\"extrainfo\", exi);\r\n      lnk.SetValue(\"newwindow\", nwi);\r\n      this.Changed = new Date().toUTCString();\r\n      this.ChangedBy = this.ObjectBase.User;\r\n      this.ObjectBase.OnAttachmentAdded(lnk);\r\n    }\r\n    // }\r\n    return atti;\r\n  }\r\n  public Attachments(): ISemTalkAssociation[] {\r\n    return this.Links(SemTalkBaseConstant.SLhasAttachment, SemTalkRelation.SemTalkSystemRelation);\r\n  }\r\n\r\n  public GetAttachment(name: string): ISemTalkAssociation | null {\r\n    const llist: ISemTalkAssociation[] = this.Attachments();\r\n    for (const atti of llist) {\r\n      if (atti.ToObject.ObjectName === name) {\r\n        return atti;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  public DeleteAttachment(name: string): void {\r\n    const atti: ISemTalkAssociation | null = this.GetAttachment(name);\r\n    if (atti !== null) {\r\n      this.Changed = new Date().toUTCString();\r\n      this.ChangedBy = this.ObjectBase.User;\r\n      atti.Delete();\r\n    }\r\n  }\r\n\r\n  private _nodes: { [id: string]: ISemTalkNode } = {};\r\n  public Nodes(): ISemTalkNode[] {\r\n    const alist: ISemTalkNode[] = [];\r\n    for (const ai in this._nodes) {\r\n      const a = this._nodes[ai];\r\n      alist[alist.length] = a;\r\n    }\r\n    return alist;\r\n  }\r\n\r\n  public FindNode(d: ISemTalkDiagram, s?: string): ISemTalkNode[] {\r\n    const alist: ISemTalkNode[] = [];\r\n    for (const ai in this._nodes) {\r\n      const a: ISemTalkNode = this._nodes[ai];\r\n      if (s === undefined) {\r\n        if (a.Diagram === d) {\r\n          alist.push(a);\r\n        }\r\n      } else\r\n        if (a.Diagram === d && a.ShapeID === s) {\r\n          alist.push(a);\r\n        }\r\n    }\r\n    return alist;\r\n  }\r\n  public AddNode(n: ISemTalkNode): ISemTalkNode {\r\n    this._nodes[n.Diagram.ID + \"&\" + n.ShapeID] = n;\r\n    return n;\r\n  }\r\n  public RemoveNode(n: ISemTalkNode): void {\r\n    delete this._nodes[n.Diagram.ID + \"&\" + n.ShapeID];\r\n  }\r\n  public Load(je: any): void {\r\n    super.Load(je);\r\n    const tb = this.ObjectBase;\r\n    tb._loading = false;\r\n    this.Created = je.created;\r\n    this.Changed = je.changed;\r\n    this.CreatedBy = je.createdBy;\r\n    this.ChangedBy = je.changedBy;\r\n    tb._loading = true;\r\n    if (je.EditLink) { this.EditLink = je.EditLink; }\r\n\r\n    if (je.ReadOnly) { this.IsReadOnly = (je.ReadOnly === \"1\"); }\r\n    if (je.color) { this.Color = je.color; }\r\n    if (je.linepattern) { this.LinePattern = je.linepattern; }\r\n    if (je.lineweight) { this.LineWeight = je.lineweight; }\r\n    if (je.comment) { this.Comment = je.comment; }\r\n    if (je.refinement) {\r\n      const d = tb.FindDiagram(je.refinement);\r\n      if (d) {\r\n        this.Refinement = d;\r\n      }\r\n    }\r\n    // const obj: SemTalkObject = this;\r\n    if (je.composition) {\r\n      const cmp: any = je.composition;\r\n      let cl1: ISemTalkBusinessClass | null = null;\r\n      if (cmp.fclass) {\r\n        cl1 = (tb.FindBusinessClass(cmp.fclass) as ISemTalkBusinessClass);\r\n      }\r\n      let mt1: ISemTalkMethodType | null = null;\r\n      if (cmp.fmethod) {\r\n        const mt = tb.FindMethodType(cmp.fmethod);\r\n        if (mt !== null) { mt1 = (mt as ISemTalkMethodType); }\r\n      }\r\n      let ot1: ISemTalkBusinessClass | null = null;\r\n      if (cmp.fother !== undefined) { ot1 = tb.FindBusinessClass(cmp.fother) as ISemTalkBusinessClass; }\r\n      let st1: ISemTalkStateType | null = null;\r\n      let at1: ISemTalkAttributeType | null = null;\r\n      if (cmp.feature !== undefined) {\r\n        switch (cmp.ftype) {\r\n          case \"2\":\r\n            const at = tb.FindAttributeType(cmp.feature);\r\n            if (at !== null) { at1 = at as ISemTalkAttributeType; }\r\n            break;\r\n          case \"1\":\r\n            const st = tb.FindStateType(cmp.feature);\r\n            if (st !== null) { st1 = st; }\r\n            break;\r\n        }\r\n      }\r\n      if (cl1) {\r\n        // this.Composition = new SemTalkComposition(cl1, mt1, st1, at1, ot1, cmp.fop, cmp.fnot, cmp.fvalue);\r\n        this.MakeComposition(cl1, mt1, st1, at1, ot1, cmp.fop, cmp.fnot, cmp.fvalue);\r\n      }\r\n    }\r\n    if (je.attributes) {\r\n      for (const ai in je.attributes) {\r\n        const a: any = je.attributes[ai];\r\n        // const an: SemTalkAttribute = new SemTalkAttribute(obj, a.name, a.defaultvalue);\r\n        if (a.name !== \"namespace\" && a.name !== \"type\") {\r\n          let aname = a.class;\r\n          if (aname === undefined) {\r\n            aname = a.name;\r\n          }\r\n          const an = this.MakeAttribute(aname, a.defaultvalue);\r\n          if (an) an.Load(a);\r\n        }\r\n      }\r\n    }\r\n    if (je.associations) {\r\n      for (const ai in je.associations) {\r\n        const rel: any = je.associations[ai];\r\n        if (rel.type !== SemTalkBaseConstant.SLSubClassOf) {\r\n          let oth: ISemTalkObject | null = tb.FindInstance(rel.other);\r\n          if (oth === null) {\r\n            oth = tb.FindClass(rel.other);\r\n          }\r\n          // if (oth === null) {\r\n          //   oth = tb.FindAssociationType(rel.other);\r\n          // }\r\n          if (oth !== null) {\r\n            let a = this.MakeAssociation(rel.class, oth, tb.FindSemTalkRelationType(rel.type), Number(rel.ID));\r\n            a.Load(rel);\r\n          } else {\r\n            console.debug(\"Bad Other: \" + rel);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (je.nodelist) {\r\n      for (const ai in je.nodelist) {\r\n        const x: any = je.nodelist[ai];\r\n        const pg = tb.FindDiagram(x.page);\r\n        if (pg !== null) {\r\n          // const an: SemTalkNode = new SemTalkNode(pg, obj, x.id);\r\n          const an = pg.MakeNode(this, x.id);\r\n          an.Load(x);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  public LoadXML(element: Element): void {\r\n    super.LoadXML(element);\r\n    const tb: IObjectBase = this.ObjectBase;\r\n    if (element.attributes) {\r\n      tb._loading = false;\r\n      const created = element.attributes.getNamedItem(\"created\")?.value;\r\n      if (created) this.Created = created;\r\n      const changed = element.attributes.getNamedItem(\"changed\")?.value;\r\n      if (changed) this.Changed = changed;\r\n      const createdBy = element.attributes.getNamedItem(\"createdBy\")?.value;\r\n      if (createdBy) this.CreatedBy = createdBy;\r\n      const changedBy = element.attributes.getNamedItem(\"changedBy\")?.value;\r\n      if (changedBy) this.ChangedBy = changedBy;\r\n\r\n      tb._loading = true;\r\n      const EditLink = element.attributes.getNamedItem(\"EditLink\")?.value;\r\n      if (EditLink) { this.EditLink = EditLink; }\r\n      const IsReadOnly = (element.attributes.getNamedItem(\"IsReadOnly\")?.value === \"1\");\r\n      if (IsReadOnly) { this.IsReadOnly = IsReadOnly; }\r\n      const color = element.attributes.getNamedItem(\"color\")?.value;\r\n      if (color) { this.Color = color; }\r\n      const linepattern = element.attributes.getNamedItem(\"linepattern\")?.value;\r\n      if (linepattern) { this.LinePattern = linepattern; }\r\n      const lineweight = element.attributes.getNamedItem(\"lineweight\")?.value;\r\n      if (lineweight) { this.LineWeight = lineweight; }\r\n      const comment = element.attributes.getNamedItem(\"comment\")?.value;\r\n      if (comment) { this.Comment = comment; }\r\n      const refinement = element.attributes.getNamedItem(\"refinement\")?.value;\r\n      if (refinement) {\r\n        const d: ISemTalkDiagram = tb.FindDiagram(refinement) as ISemTalkDiagram;\r\n        this.Refinement = d;\r\n      }\r\n    }\r\n    const compositions = element.getElementsByTagName(\"Composition\");\r\n    for (const i in compositions) {\r\n      const cmp = compositions[i];\r\n      if (cmp.parentNode === element && cmp.attributes && cmp.nodeName === \"Composition\") {\r\n\r\n        const fclass = cmp.attributes.getNamedItem(\"fclass\")?.value;\r\n        let cl1: ISemTalkBusinessClass | null = null;\r\n        if (fclass) {\r\n          cl1 = (tb.FindBusinessClass(fclass) as ISemTalkBusinessClass);\r\n        }\r\n\r\n        let fmethod = cmp.attributes.getNamedItem(\"fmethod\")?.value;\r\n        let mt1: ISemTalkMethodType | null = null;\r\n        if (fmethod) {\r\n          const mt: ISemTalkMethodType | null = tb.FindMethodType(fmethod);\r\n          if (mt !== null) { mt1 = mt as ISemTalkMethodType; }\r\n        }\r\n\r\n        let fother = cmp.attributes.getNamedItem(\"fother\")?.value;\r\n        let ot1: ISemTalkBusinessClass | null = null;\r\n        if (fother !== undefined) { ot1 = tb.FindBusinessClass(fother) as ISemTalkBusinessClass; }\r\n\r\n        let feature = cmp.attributes.getNamedItem(\"feature\")?.value;\r\n        let st1: ISemTalkStateType | null = null;\r\n        let at1: ISemTalkAttributeType | null = null;\r\n        if (feature !== undefined) {\r\n          const ftype = cmp.attributes.getNamedItem(\"ftype\")?.value;\r\n          switch (ftype) {\r\n            case \"2\":\r\n              const at: any | null = tb.FindAttributeType(feature);\r\n              if (at !== null) { at1 = at as ISemTalkAttributeType; }\r\n              break;\r\n            case \"1\":\r\n              const st: any | null = tb.FindStateType(feature);\r\n              if (st !== null) { st1 = st; }\r\n              break;\r\n          }\r\n        }\r\n        if (cl1) {\r\n          const fop = cmp.attributes.getNamedItem(\"fop\")?.value;\r\n          const fnot = (cmp.attributes.getNamedItem(\"fnot\")?.value === \"1\");\r\n          const fvalue = cmp.attributes.getNamedItem(\"fvalue\")?.value;\r\n          this.MakeComposition(cl1, mt1, st1, at1, ot1, fop, fnot, fvalue);\r\n        }\r\n      }\r\n    }\r\n    const attributes = element.getElementsByTagName(\"Attribute\");\r\n    for (const i in attributes) {\r\n      const a = attributes[i];\r\n      if (a.parentNode === element && a.attributes && a.nodeName === \"Attribute\") {\r\n        if (a.parentNode) {\r\n          let par: any = a.parentNode;\r\n          if (par && par[\"id\"] !== element[\"id\"]) {\r\n            continue;\r\n          }\r\n        }\r\n        const name = a.attributes.getNamedItem(\"name\")?.value;\r\n        if (name !== \"namespace\" && name !== \"type\") {\r\n          let aname = a.attributes.getNamedItem(\"class\")?.value;\r\n          const defaultvalue = a.attributes.getNamedItem(\"defaultvalue\")?.value;\r\n          if (aname === undefined) {\r\n            aname = name;\r\n          }\r\n          if (aname) {\r\n            const an: ISemTalkAttribute | null = this.MakeAttribute(aname, defaultvalue);\r\n            if (an) an.LoadXML(a);\r\n          }\r\n        }\r\n\r\n      }\r\n    }\r\n    const associations = element.getElementsByTagName(\"Relation\");\r\n    for (const i in associations) {\r\n      const rel = associations[i];\r\n      if (rel.parentNode === element && rel.attributes && rel.nodeName === \"Relation\") {\r\n        const type = rel.attributes.getNamedItem(\"type\")?.value;\r\n        if (type !== SemTalkBaseConstant.SLSubClassOf) {\r\n          const other = rel.attributes.getNamedItem(\"other\")?.value;\r\n          if (other) {\r\n            let oth: any = tb.FindInstance(other);\r\n            if (oth === null) {\r\n              oth = tb.FindClass(other);\r\n            }\r\n            if (oth !== null) {\r\n              const rclass = rel.attributes.getNamedItem(\"class\")?.value;\r\n              const rtype = rel.attributes.getNamedItem(\"type\")?.value;\r\n              const id = rel.attributes.getNamedItem(\"ID\")?.value;\r\n              if (rclass && rtype && id) {\r\n                const a = this.MakeAssociation(rclass, oth,\r\n                  tb.FindSemTalkRelationType(rtype), Number(id));\r\n                a.LoadXML(rel);\r\n              }\r\n            } else {\r\n              console.debug(\"Bad Other: \" + rel);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const nodelist = element.getElementsByTagName(\"Node\");\r\n    for (const i in nodelist) {\r\n      const x = nodelist[i];\r\n      if (x.parentNode === element && x.attributes && x.nodeName === \"Node\") {\r\n        const page = x.attributes.getNamedItem(\"page\")?.value;\r\n        if (page) {\r\n          const pg = tb.FindDiagram(page);\r\n          if (pg !== null) {\r\n            const an = pg.MakeNode(this, x.id);\r\n            an.LoadXML(x);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public Save(par: any[]): any {\r\n\r\n    let el = super.Save(par);\r\n\r\n    if (this.ID !== 0) { el.ID = this.ID; }\r\n    if (this.SrcID !== 0) { el.SrcID = this.SrcID; }\r\n    if (this.EditLink) { el.EditLink = this.EditLink; }\r\n    if (this.IsReadOnly) { el.ReadOnly = \"1\"; }\r\n    if (this.Color) { el.Color = this.Color; }\r\n    if (this.LinePattern) { el.LinePattern = this.LinePattern; }\r\n    if (this.LineWeight) { el.LineWeight = this.LineWeight; }\r\n\r\n    if (this.Created) { el.created = this.Created; }\r\n    if (this.Changed) { el.changed = this.Changed; }\r\n    if (this.ChangedBy) { el.changedBy = this.ChangedBy; }\r\n    if (this.CreatedBy) { el.createdBy = this.CreatedBy; }\r\n    if (this.Comment) { el.comment = this.Comment; }\r\n\r\n    if (this._refinement) {\r\n      el.refinement = this._refinement.ObjectName;\r\n    }\r\n\r\n    if (this._attributes !== {}) {\r\n      const al: any[] = [];\r\n      for (const ai in this._attributes) {\r\n        const a: ISemTalkAttribute = this._attributes[ai];\r\n        const sel: any = a.Save(al);\r\n        sel.name = a.ClassOf().ObjectName + \".\" + ai.replace(\"_\", \"\");\r\n      }\r\n      el.attributes = al;\r\n    }\r\n    if (this._associations) {\r\n      const al: any[] = [];\r\n      for (const ai in this._associations) {\r\n        const a: ISemTalkAssociation = this._associations[ai];\r\n        const sel = a.Save(al);\r\n        sel.name = ai;\r\n        if (a.ToObject) { sel.other = a.ToObject.ObjectName; }\r\n      }\r\n      el.associations = al;\r\n    }\r\n    if (this._invassociations) {\r\n      const al: any[] = [];\r\n      for (const ai in this._invassociations) {\r\n        const a: ISemTalkAssociation = this._invassociations[ai];\r\n        const sel = a.Save(al);\r\n        sel.name = ai;\r\n        if (a.FromObject) { sel.other = a.FromObject.ObjectName; }\r\n      }\r\n      el.invassociations = al;\r\n    }\r\n    if (this._nodes) {\r\n      const nl: any[] = [];\r\n      for (const ai in this._nodes) {\r\n        const a: any = this._nodes[ai]; // SemTalkNode\r\n        const sel = a.Save(nl);\r\n        sel.name = ai;\r\n      }\r\n      el.nodelist = nl;\r\n    }\r\n    const c = this.Composition();\r\n    if (c) {\r\n      el.composition = c.Save();\r\n    }\r\n    return el;\r\n  }\r\n  public SaveXML(xd: XMLDocument, el: HTMLElement): void {\r\n\r\n    super.SaveXML(xd, el);\r\n\r\n    if (this.ID !== 0) { el.setAttribute(\"ID\", String(this.ID)); }\r\n    if (this.SrcID !== 0) { el.setAttribute(\"SrcID\", String(this.SrcID)); }\r\n    if (this.EditLink) { el.setAttribute(\"EditLink\", this.EditLink); }\r\n    if (this.IsReadOnly) { el.setAttribute(\"ReadOnly\", \"1\"); }\r\n    if (this.Color) { el.setAttribute(\"Color\", this.Color); }\r\n    if (this.LinePattern) { el.setAttribute(\"LinePattern\", this.LinePattern); }\r\n    if (this.LineWeight) { el.setAttribute(\"LineWeight\", this.LineWeight); }\r\n\r\n    if (this.Created) { el.setAttribute(\"created\", this.Created); }\r\n    if (this.Changed) { el.setAttribute(\"changed\", this.Changed); }\r\n    if (this.ChangedBy) { el.setAttribute(\"changedBy\", this.ChangedBy); }\r\n    if (this.CreatedBy) { el.setAttribute(\"createdBy\", this.CreatedBy); }\r\n    if (this.Comment) { el.setAttribute(\"comment\", this.Comment); }\r\n\r\n    if (this._refinement) {\r\n      el.setAttribute(\"refinement\", this._refinement.ObjectName);\r\n    }\r\n\r\n    if (this._attributes !== {}) {\r\n      for (const ai in this._attributes) {\r\n        const a: ISemTalkAttribute = this._attributes[ai];\r\n        let at = xd.createElement(\"Attribute\");\r\n        el.appendChild(at);\r\n        // at.setAttribute(\"name\", a.ClassOf().ObjectName + \".\" + ai.replace(\"_\",\"\"));\r\n        a.SaveXML(xd, at);\r\n      }\r\n    }\r\n    if (this._associations) {\r\n      for (const ai in this._associations) {\r\n        const a: ISemTalkAssociation = this._associations[ai];\r\n        let re = xd.createElement(\"Relation\");\r\n        el.appendChild(re);\r\n        a.SaveXML(xd, re);\r\n        const aname = a.ClassOf().ObjectName + \".\" + ai.replace(\"_\", \"\");\r\n        re.setAttribute(\"name\", aname);\r\n        if (a.ToObject) { re.setAttribute(\"other\", a.ToObject.ObjectName); }\r\n      }\r\n    }\r\n    if (this._invassociations) {\r\n      for (const ai in this._invassociations) {\r\n        const a: ISemTalkAssociation = this._invassociations[ai];\r\n        let re = xd.createElement(\"InvRelation\");\r\n        el.appendChild(re);\r\n        a.SaveXML(xd, re);\r\n        const aname = a.ClassOf().ObjectName + \".\" + ai.replace(\"_\", \"\");\r\n        re.setAttribute(\"name\", aname);\r\n        if (a.FromObject) { re.setAttribute(\"other\", a.FromObject.ObjectName); }\r\n      }\r\n    }\r\n    if (this._nodes) {\r\n      for (const ai in this._nodes) {\r\n        const a: any = this._nodes[ai]; // SemTalkNode\r\n        let nd = xd.createElement(\"Node\");\r\n        el.appendChild(nd);\r\n        a.SaveXML(xd, nd);\r\n      }\r\n    }\r\n    const c = this.Composition();\r\n    if (c) {\r\n      let nd = xd.createElement(\"Composition\");\r\n      el.appendChild(nd);\r\n      c.SaveXML(xd, nd);\r\n    }\r\n  }\r\n\r\n  public Clone(oth: ISemTalkObject) {\r\n    super.Clone(oth);\r\n    if (this.Comment.length === 0 && oth.Comment.length > 0) {\r\n      this.Comment = oth.Comment;\r\n    }\r\n    for (let lnk of oth.Attachments()) {\r\n      const label = lnk.GetValue(\"label\");\r\n      const nsp = lnk.GetValue(\"namespace\");\r\n      const suburl = lnk.GetValue(\"subaddress\");\r\n      const typ = lnk.GetValue(\"type\");\r\n      const fra = lnk.GetValue(\"frame\");\r\n      const exi = lnk.GetValue(\"extrainfo\");\r\n      const nwi = lnk.GetValue(\"newwindow\");\r\n      this.MakeAttachment(lnk.ToObject.ObjectName, label, nsp, suburl, typ, exi, fra, nwi);\r\n    }\r\n    this.Created = oth.Created;\r\n    this.CreatedBy = oth.CreatedBy;\r\n    for (let a2 of oth.Attributes()) {\r\n      const aname = a2.ClassOf().ObjectName;\r\n      if (!this.FindAttribute(aname)) {\r\n        const a = this.MakeAttribute(aname, a2.Value);\r\n        a.Clone(a2);\r\n      }\r\n    }\r\n  }\r\n  public Delete(): void {\r\n    this.ObjectBase.OnBeforeDeleted(this);\r\n    this.indeletion = true;\r\n    for (const n in this._nodes) {\r\n      this._nodes[n].Delete();\r\n    }\r\n    for (const a in this._associations) {\r\n      this._associations[a].Delete();\r\n    }\r\n    for (const a in this._invassociations) {\r\n      this._invassociations[a].Delete();\r\n    }\r\n    delete this.ObjectBase._objectids[this.ID + \"_\"];\r\n    delete this.ObjectBase._objects[this.ObjectName];\r\n    this.Changed = new Date().toUTCString();\r\n    this.ChangedBy = this.ObjectBase.User;\r\n    this.ObjectBase.OnDeleted(this);\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport abstract class SemTalkVirtualInstance implements ISemTalkVirtualInstance {\r\n\r\n  constructor(t: SemTalkType, own: ISemTalkObject) {\r\n    this._type = t;\r\n    this.Owner = own;\r\n  }\r\n  private _virtualclass: ISemTalkClass;\r\n  private _type: SemTalkType;\r\n  public Owner: ISemTalkObject;\r\n  public _propname: string | undefined = undefined;\r\n  public get PropName(): string {\r\n    if (this._propname === undefined) {\r\n      throw (new Error(\"Undefined Virtual Instance\"));\r\n    }\r\n    return this._propname;\r\n  }\r\n  public set PropName(s: string) { this._propname = s; }\r\n\r\n  public SetClass(cla: ISemTalkClass): void {\r\n    this._virtualclass = cla;\r\n  }\r\n  public ClassOf(): ISemTalkClass {\r\n    // if (this._virtualclass === undefined) {\r\n    //   // console.debug(\"Undefined Virtual Instance\");\r\n    //   throw (new Error(\"Undefined Virtual Instance\"));\r\n    // }\r\n    return this._virtualclass;\r\n  }\r\n  public Delete(): void {\r\n    // this._virtualclass = null;\r\n  }\r\n  public Save(par: any[]): any {\r\n    const el: any = {};\r\n    par.push(el);\r\n    // if (this._virtualclass) {\r\n    el.class = this._virtualclass.ObjectName;\r\n    // } else {\r\n    //   console.debug(\"Missing virtual class: \", this);\r\n    // }\r\n    return el;\r\n  }\r\n  public SaveXML(_xd: XMLDocument, el: HTMLElement): void {\r\n    el.setAttribute(\"class\", this._virtualclass.ObjectName);\r\n    el.setAttribute(\"name\", this._virtualclass.ObjectName);\r\n  }\r\n  // tslint:disable-next-line:no-empty\r\n  public Load(_je: any): void {\r\n\r\n  }\r\n  public LoadXML(_element: HTMLElement): void {\r\n\r\n  }\r\n  public Clone(_oth: ISemTalkVirtualInstance): void {\r\n\r\n  }\r\n  public get ObjectType(): SemTalkType {\r\n    return this._type;\r\n  }\r\n  // public set ObjectType(val: SemTalkType) {\r\n  //   this._type = val;\r\n  // }\r\n  public toString(): string {\r\n    // if (this._virtualclass === undefined) {\r\n    //   return \"Undefined Virtual Instance\";\r\n    // }\r\n    return \"<\" + this._virtualclass.ObjectBase.SemTalkTypeName(this._type) + \" \" + this.ClassOf().ObjectName + \">\";\r\n  }\r\n  //  this.ObjectBase.SemTalkTypeName(this.ObjectType)\r\n}\r\nexport class SemTalkInstance extends SemTalkObject implements ISemTalkInstance {\r\n  constructor(cla: ISemTalkClass, newname: string, otype: SemTalkType, id?: number | null) {\r\n    super(cla.ObjectBase, newname, otype, id);\r\n    // if (tb.FindInstance(newname) === null) {\r\n    this.ObjectBase._instances[this.ID + \"_\"] = this;\r\n    // } else {\r\n    //    super.Delete();\r\n    //     throw new Error(\"SemTalkInstance: There is another SemTalkInstance named: \" + newname);\r\n    // }\r\n    cla.AddInstance(this);\r\n    this._class = cla;\r\n    this.ObjectBase.OnClassChanged(this, null);\r\n    return this;\r\n  }\r\n  private _class: ISemTalkClass;\r\n  public SetClass(cla: ISemTalkClass): void {\r\n    if (cla.ObjectName === this._class.ObjectName) {\r\n      return;\r\n    }\r\n    let oldclass = this._class;\r\n    const isanon = (this.ObjectName === this._class.ObjectName + '.' + this.ID);\r\n    this._class.RemoveInstance(this);\r\n    cla.AddInstance(this);\r\n    this._class = cla;\r\n    if (isanon) {\r\n      this.RenameObject(this._class.ObjectName + '.' + this.ID);\r\n    }\r\n    this.Changed = new Date().toUTCString();\r\n    this.ChangedBy = this.ObjectBase.User;\r\n    this.ObjectBase.OnClassChanged(this, oldclass);\r\n  }\r\n  public ClassOf(): ISemTalkClass {\r\n    return this._class;\r\n  }\r\n  public IsInstance(cla: ISemTalkClass): boolean {\r\n    if (!this._class) return false;\r\n    if (this._class.ID === cla.ID) { return true; }\r\n    return this._class.IsParent(cla);\r\n  }\r\n  public SystemClass(): ISemTalkSystemClass | null {\r\n    if (!this._class) return null;\r\n    return this.ClassOf().SystemClass();\r\n  }\r\n  public IsValid(dst: ISemTalkObject, attr: ISemTalkAssociationType | string): boolean {\r\n    let rel: ISemTalkAssociationType | null = null;\r\n    let ob = dst.ObjectBase;\r\n\r\n    if (typeof attr === 'string') {\r\n      const at: ISemTalkAssociationType | null = this.ObjectBase.FindAssociationType(attr as string);\r\n      if (at !== null) { rel = at as ISemTalkAssociationType; }\r\n    } else {\r\n      rel = attr as ISemTalkAssociationType;\r\n    }\r\n    if (ob.IsInstance(dst)) {\r\n      if ((dst as SemTalkInstance).ClassOf().ObjectName === SemTalkBaseConstant.SLAttachment && rel !== null && rel.ObjectName === SemTalkBaseConstant.SLhasAttachment)\r\n        return true;\r\n    }\r\n    if (rel === null) {\r\n      // tslint:disable-next-line:no-console\r\n      // console.debug(\"IsValid: \" + this.ObjectName + \" \" + dst.ObjectName + \"  No Association \" + attr);\r\n      return false;\r\n    }\r\n    const ots: SemTalkType = this.ObjectType;\r\n    const otd: SemTalkType = dst.ObjectType;\r\n    switch (rel.RelationType) {\r\n      case SemTalkRelation.SemTalkSubClassOf:\r\n        return false;\r\n      case SemTalkRelation.SemTalkInstanceOf:\r\n        if (otd === SemTalkType.SemTalkClass) { return true; }\r\n        return false;\r\n      case SemTalkRelation.SemTalkHiddenRelation:\r\n        return false;\r\n      case SemTalkRelation.SemTalkSystemRelation:\r\n        switch (rel.ObjectName) {\r\n          case ob.GetModelAttribute(ModelAttribute.SLCommentOf):\r\n            return (this._class.ObjectName === ob.GetModelAttribute(ModelAttribute.SLComment));\r\n          case BPMN_AssociationName.dataobject:\r\n            return (this._class.ObjectName === ob.GetModelAttribute(Process_ElementName.SLDataObject));\r\n          // case \"sameAs\":\r\n          //   if (otd === ots) { return true; }\r\n          //   return false;\r\n          default:\r\n            return false;\r\n        }\r\n      case SemTalkRelation.SemTalkProperty:\r\n    }\r\n    if (ots !== SemTalkType.SemTalkAssociation && otd === SemTalkType.SemTalkInstance) {\r\n      const parents: ISemTalkClass[] = [];\r\n      parents[parents.length] = this._class;\r\n      const inslinks: ISemTalkObject[] = this.LinkedObjects(SemTalkBaseConstant.SLInstanceOf, false, SemTalkRelation.SemTalkInstanceOf);\r\n      for (const x of inslinks) {\r\n        parents[parents.length] = x as ISemTalkClass;\r\n      }\r\n      const dstparents: ISemTalkClass[] = [];\r\n      const dstinst: ISemTalkInstance = dst as ISemTalkInstance;\r\n      dstparents.push(dstinst.ClassOf());\r\n      const dstinslinks: ISemTalkObject[] = dstinst.LinkedObjects(SemTalkBaseConstant.SLInstanceOf, false, SemTalkRelation.SemTalkInstanceOf);\r\n      for (const x of dstinslinks) {\r\n        dstparents.push(x as ISemTalkClass);\r\n      }\r\n      // let found: boolean = false;\r\n      for (const pa of parents) {\r\n        const olist: ISemTalkClass[] = pa.GetRelationOtherBases(rel, SemTalkRelation.SemTalkProperty);\r\n        for (const own of olist) {\r\n          if (dstinst.IsInstance(own)) {\r\n            return true;\r\n          }\r\n          for (const r of dstparents) {\r\n            if (r.ID === own.ID || r.IsParent(own)) {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      const sups: ISemTalkClass[] = rel.SuperClasses();\r\n      for (const reli in sups) {\r\n        const srel = sups[reli] as ISemTalkAssociationType;\r\n        if (this.IsValid(dst, srel)) {\r\n          return true;\r\n        }\r\n      }\r\n      // tslint:disable-next-line:no-console\r\n      // console.debug(\"IsValid: \" + this.ObjectName + \" \" + dst.ObjectName + \"  Not valid \" + attr);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  public MakeAssociation(attr: string | ISemTalkAssociationType, toobj: ISemTalkObject, ptype?: SemTalkRelation | null, id?: number | null,\r\n    fn?: (cla: ISemTalkAssociationType, ptype: SemTalkRelation, fromobj: ISemTalkObject, toobj: ISemTalkObject, i: number) => ISemTalkAssociation): ISemTalkAssociation {\r\n    if (ptype === null || ptype === undefined) { ptype = SemTalkRelation.SemTalkProperty; }\r\n    const cla: ISemTalkAssociationType = SemTalkObject.getAssociationType(this.ObjectBase, attr, ptype, true) as ISemTalkAssociationType;\r\n    //   if (this.ObjectBase._loading || this.IsValid(toobj, cla)) {\r\n    if (this.ObjectBase._loading || this.IsValid(toobj, cla)) {\r\n      // tslint:disable-next-line:no-console\r\n      // console.debug(\"MakeAssociation: \" + this.ObjectName + \" \" + toobj.ObjectName + \" valid \" + cla.ObjectName);\r\n      return super.MakeAssociation(attr, toobj, ptype, id, fn);\r\n    } else {\r\n      throw new Error(\"MakeAssociation:\" + attr + \" is not valid between \" + this.ObjectName + \" and \" + toobj.ObjectName);\r\n    }\r\n  }\r\n  public toString(): string { return \"<\" + this.ObjectBase.SemTalkTypeName(this.ObjectType) + \" \" + this.ObjectName + \" Class: \" + this._class.ObjectName + \">\"; }\r\n  public GetValue(aname: string): any {\r\n    const a: any = super.GetValue(aname);\r\n    if (a === null || a === undefined) {\r\n      const sc = this.ClassOf();\r\n      if (sc) {\r\n        const sa: any = sc.GetValue(aname);\r\n        if (sa) {\r\n          return sa;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n    else { return a; }\r\n  }\r\n\r\n  public Delete(): void {\r\n    // console.debug(\"Delete: \"  + \" \" + this.ObjectName);\r\n    super.Delete();\r\n    delete this.ObjectBase._instances[this.ID + \"_\"];\r\n    if (this._class) {\r\n      this._class.RemoveInstance(this);\r\n    }\r\n    this.ObjectBase.OnInstanceDeleted(this);\r\n\r\n    // this._class = null;\r\n  }\r\n  public Save(par: any[]): any {\r\n    // let el= super.Save(par);\r\n    let je = super.Save(par);\r\n    // if (this.ClassOf) {\r\n    je.class = this.ClassOf().ObjectName;\r\n    // }\r\n    return je;\r\n  }\r\n  public SaveXML(xd: XMLDocument, el: HTMLElement): void {\r\n    super.SaveXML(xd, el);\r\n    el.setAttribute(\"class\", this.ClassOf().ObjectName);\r\n  }\r\n  public ID2NameNsp(): string {\r\n    if (this._name === null) { return \"\"; }\r\n    // if (this._name.indexOf(\"#\") < 0) return this._name;\r\n    const ocl = this.ClassOf();\r\n    if (ocl !== undefined) {\r\n      const scl = ocl.SystemClass();\r\n      if (scl !== null && scl.BottomUp) {\r\n        return ocl.ID2NameNsp();\r\n      }\r\n    }\r\n    let txt = super.ID2NameNsp();\r\n    if (txt.endsWith(\".\" + String(this.ID))) {\r\n      txt = txt.substring(0, txt.lastIndexOf(\".\"));\r\n    }\r\n    return txt;\r\n  }\r\n  public RenameObject(value: string): void {\r\n    const ocl = this.ClassOf();\r\n    if (ocl !== undefined) {\r\n      const scl = ocl.SystemClass();\r\n      if (scl !== null && scl.BottomUp) {\r\n\r\n      }\r\n    }\r\n    super.RenameObject(value);\r\n  }\r\n  public AllAttributeTypes(): ISemTalkAttributeType[] {\r\n    const alist: ISemTalkAttributeType[] = [];\r\n    const fnd: any = {};\r\n    const fnda: any = {};\r\n    for (const x of this.Attributes()) {\r\n      const atype = x.ClassOf();\r\n      if (fnda[atype.ObjectName] === undefined) {\r\n        fnda[atype.ObjectName] = atype;\r\n        alist.push(atype);\r\n      }\r\n    }\r\n    function allsuperclassesrec(cl: ISemTalkClass) {\r\n      for (const x of cl.SuperClasses()) {\r\n        if (fnd[x.ObjectName] === undefined) {\r\n          fnd[x.ObjectName] = x;\r\n          for (const xs of x.Attributes()) {\r\n            const atypes = xs.ClassOf();\r\n            if (fnda[atypes.ObjectName] === undefined) {\r\n              fnda[atypes.ObjectName] = atypes;\r\n              alist.push(atypes);\r\n            }\r\n          }\r\n          allsuperclassesrec(x);\r\n        }\r\n      }\r\n    }\r\n    for (const x of this.ClassOf().Attributes()) {\r\n      const atype = x.ClassOf();\r\n      if (fnda[atype.ObjectName] === undefined) {\r\n        fnda[atype.ObjectName] = atype;\r\n        alist.push(atype);\r\n      }\r\n    }\r\n    allsuperclassesrec(this.ClassOf());\r\n    return alist;\r\n  }\r\n  public AllAttributes(): ISemTalkAttribute[] {\r\n    const alist: ISemTalkAttribute[] = [];\r\n    const fnda: any = {};\r\n    for (const x of this.Attributes()) {\r\n      const atype = x.ClassOf();\r\n      if (fnda[atype.ObjectName] === undefined) {\r\n        fnda[atype.ObjectName] = atype;\r\n        alist.push(x);\r\n      }\r\n    }\r\n    for (const x of this.ClassOf().AllAttributes()) {\r\n      const atype = x.ClassOf();\r\n      if (fnda[atype.ObjectName] === undefined) {\r\n        fnda[atype.ObjectName] = atype;\r\n        alist.push(x);\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n  public GetAttributeOwner(attr: string | ISemTalkAttributeType): ISemTalkAttribute | null {\r\n    const a = this.FindAttribute(attr);\r\n    if (a !== null) {\r\n      return a;\r\n    } else {\r\n      return this.ClassOf().GetAttributeOwner(attr);\r\n    }\r\n  }\r\n  public UpdateLabel(mastername?: string): ILabelSpec {\r\n    const lbl = this.ObjectBase.MakeLabelSpec();\r\n    // const lbl = super.UpdateLabel(mastername);\r\n    lbl.newtxt = \"\";\r\n    // let masternameU = mastername;\r\n    if (mastername === undefined) {\r\n      mastername = \"\";\r\n    }\r\n    let ob = this.ObjectBase;\r\n    mastername = Utils.MasterNoDot(mastername);\r\n\r\n    if (mastername === SemTalkBaseConstant.SLSubClassOf ||\r\n      mastername === SemTalkBaseConstant.SLInstanceOf\r\n      || mastername === ob.GetModelAttribute(ModelAttribute.SLCommentOf)) {\r\n      lbl.newtxt = \"\";\r\n      return lbl;\r\n    }\r\n    if (mastername === EPC_ElementName.AND || mastername === EPC_ElementName.OR\r\n      || mastername === EPC_ElementName.XOR) {\r\n      lbl.newtxt = \"\";\r\n      return lbl;\r\n    }\r\n    const com = ob.GetModelAttribute(ModelAttribute.SLComment);\r\n    if (com && com.length > 0 && mastername === com) {\r\n      const defof = this.ObjectBase.GetModelAttribute(ModelAttribute.SLCommentOf);\r\n      const olist = this.LinkedObjects(defof, false, SemTalkRelation.SemTalkSystemRelation);\r\n      lbl.newtxt = \"\";\r\n      if (olist.length > 0) {\r\n        lbl.newtxt = olist[0].Comment;\r\n      }\r\n      return lbl;\r\n    }\r\n\r\n    let haslabels: boolean = false;\r\n    const sc: ISemTalkSystemClass | null = this.ClassOf().SystemClass();\r\n    if (sc !== null) {\r\n      haslabels = sc.CollectInstLabels(lbl, this, mastername);\r\n      lbl.haslabels = haslabels;\r\n      if (haslabels === false) {\r\n        for (const scc of sc.AllSuperClasses()) {\r\n          let mn = mastername;\r\n          if (mn === scc.ObjectName) {\r\n            mn = \"\";\r\n          }\r\n          if (ob.IsSystemClass(scc)) {\r\n            let s: ISemTalkSystemClass = scc as ISemTalkSystemClass;\r\n            if (s.Labels(mn).length > 0) {\r\n              haslabels = s.CollectInstLabels(lbl, this, mn);\r\n              if (haslabels) {\r\n                return lbl;\r\n              }\r\n            }\r\n            // Es gelingt mir nicht einen Test zu bauen, der da hinkommt :-(\r\n            // if (s.Labels().length > 0) {\r\n            //   console.debug(s);\r\n            //   haslabels = s.CollectInstLabels(lbl, this);\r\n            //   if (haslabels) {\r\n            //     return lbl;\r\n            //   }\r\n            // }\r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n    if (!haslabels && lbl.newtxt === \"\") {\r\n      lbl.newtxt = this.ID2NameNsp();\r\n    }\r\n    return lbl;\r\n  }\r\n\r\n}\r\nexport class SemTalkSharePointInstance extends SemTalkInstance implements ISemTalkInstance, ISemTalkSharePointObject {\r\n  public UniqueID: number | null = null;\r\n  public URL: string | null = null;\r\n  public CTName: string | null = null;\r\n  public SPPrefix: string | null = null;\r\n  public RowID: number | null = null;\r\n}\r\nexport class SemTalkClass extends SemTalkObject implements ISemTalkClass {\r\n  constructor(tb: IObjectBase, newname: string, id?: number | null) {\r\n    super(tb, newname, SemTalkType.SemTalkClass, id);\r\n    // const fndbyname = tb.FindClass(newname)\r\n    // if (fndbyname === null) {\r\n    tb._classes[this.ID + \"_\"] = this;\r\n    // } else {\r\n    //   super.Delete();\r\n    //     throw new Error(\"SemTalkClass: There is another SemTalkClass named: \" + newname);\r\n    // }\r\n    return this;\r\n  }\r\n  // public IsSystemClass = false;\r\n  private _instances: { [id: number]: ISemTalkInstance } = {};\r\n  public AddInstance(a: ISemTalkInstance): ISemTalkInstance {\r\n    this._instances[a.ID] = a;\r\n    return a;\r\n  }\r\n  public RemoveInstance(a: ISemTalkInstance): void {\r\n    delete this._instances[a.ID];\r\n  }\r\n  public RenameObject(value: string): void {\r\n    const oldname = this.ID2Name;\r\n    super.RenameObject(value);\r\n    for (const i of this.Instances()) {\r\n      if (i.ObjectName === oldname + \".\" + i.ID) {\r\n        i.RenameObject(i.ClassOf().ID2Name + \".\" + i.ID);\r\n      }\r\n    }\r\n  }\r\n\r\n  public Delete(): void {\r\n    this.ObjectBase.OnClassBeforeDeleted(this);\r\n\r\n    this.indeletion = true;\r\n    let sysc = this.SystemClass();\r\n    if (sysc && sysc.ID !== this.ID) {\r\n      for (let fromobj of this.SubClasses()) {\r\n        fromobj.AddSubclassOf(sysc);\r\n      }\r\n    }\r\n\r\n    super.Delete();\r\n    delete this.ObjectBase._classes[this.ID + \"_\"];\r\n    for (const cmp of this.InvCompositions()) {\r\n      cmp.Delete();\r\n    }\r\n    for (const l of this.Instances()) {\r\n      l.Delete();\r\n    }\r\n    this.ObjectBase.OnClassDeleted(this);\r\n  }\r\n  public GetCurrentValue(aname: string, lang?: string): any {\r\n    const val: any = super.GetCurrentValue(aname, lang);\r\n    if (val === null) {\r\n      for (const x of this.SuperClasses()) {\r\n        const cval: any = x.GetCurrentValue(aname, lang);\r\n        if (cval) {\r\n          return cval;\r\n        }\r\n      }\r\n      return val;\r\n    } else {\r\n      return val;\r\n    }\r\n  }\r\n  public UsageCount(): number {\r\n    return this.Instances().length + this.SubClasses().length;\r\n  }\r\n\r\n\r\n\r\n  private _invcompositions: { [id: number]: ISemTalkComposition } = {};\r\n  public AddInvComposition(a: ISemTalkComposition): ISemTalkComposition {\r\n    // if (a.Owner !== null) {\r\n    this._invcompositions[a.Owner.ID] = a;\r\n    // }\r\n    // else {\r\n    //   throw new Error(\"AddInvComposition: Missing Composition Owner\");\r\n    // }\r\n    return a;\r\n  }\r\n  public RemoveInvComposition(a: ISemTalkComposition): void {\r\n    // if (a.Owner !== null) {\r\n    delete this._invcompositions[a.Owner.ID];\r\n    // }\r\n    // else {\r\n    //   throw new Error(\"RemoveInvComposition: Missing Composition Owenr\");\r\n    // }\r\n  }\r\n  public InvCompositions(): ISemTalkComposition[] {\r\n    const alist: ISemTalkComposition[] = [];\r\n    for (const i in this._invcompositions) {\r\n      alist.push(this._invcompositions[i]);\r\n    }\r\n    return alist;\r\n  }\r\n\r\n  public AddSubclassOf(c: ISemTalkClass, id?: number | null): ISemTalkSpecialization | null {\r\n    const aname: string = SemTalkBaseConstant.SLSubClassOf;\r\n    if (!this.HasDirectLink(aname, c, SemTalkRelation.SemTalkSubClassOf)) {\r\n      if (this === c || c.IsParent(this)) {\r\n        throw new Error(\"subClassOf Circles are not allowed!: \" + this.ObjectName + \" => \" + c.ObjectName);\r\n      }\r\n      const rem: ISemTalkClass[] = [];\r\n      for (const s of this.AllSuperClasses()) {\r\n        if (c.IsParent(s)) {\r\n          rem.push(s);\r\n        }\r\n      }\r\n      for (const s of rem) {\r\n        this.DeleteSubclassOf(s);\r\n      }\r\n      const tb = this.ObjectBase;\r\n      if (id === null || id === undefined) {\r\n        tb.maxid = tb.maxid + 1;\r\n        id = tb.maxid;\r\n      } else {\r\n        const iid: number = id;\r\n        if (iid > tb.maxid) {\r\n          tb.maxid = iid;\r\n        }\r\n        id = iid;\r\n      }\r\n      return new SemTalkSpecialization(this, c, id);\r\n    } else {\r\n      return this.FindSpecialization(c);\r\n    }\r\n  }\r\n  public DeleteSubclassOf(c: ISemTalkClass): void {\r\n    const rel = this.FindSpecialization(c);\r\n    if (rel) {\r\n      rel.Delete();\r\n    }\r\n  }\r\n  public FindSpecialization(toobj: ISemTalkClass): ISemTalkSpecialization | null {\r\n    return this.FindAssociation(SemTalkBaseConstant.SLSubClassOf,\r\n      (toobj as ISemTalkObject), SemTalkRelation.SemTalkSubClassOf) as ISemTalkSpecialization;\r\n  }\r\n  public SuperClasses(): ISemTalkClass[] {\r\n    const alist: ISemTalkClass[] = [];\r\n    const ptype = SemTalkRelation.SemTalkSubClassOf;\r\n    for (const x of this.Associations()) {\r\n      if (x.ClassOf().RelationType === ptype) {\r\n        alist.push(x.ToObject as ISemTalkClass);\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n  public AllSuperClasses(): ISemTalkClass[] {\r\n    const alist: ISemTalkClass[] = [];\r\n    const ptype = SemTalkRelation.SemTalkSubClassOf;\r\n    const fnd: any = {};\r\n    function allsuperclassesrec(cl: ISemTalkClass) {\r\n      for (const x of cl.Associations()) {\r\n        if (x.ClassOf().RelationType === ptype) {\r\n          if (fnd[x.ToObject.ObjectName] === undefined) {\r\n            fnd[x.ToObject.ObjectName] = x.ToObject;\r\n            alist.push(x.ToObject as ISemTalkClass);\r\n            allsuperclassesrec(x.ToObject as ISemTalkClass);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allsuperclassesrec(this);\r\n    return alist;\r\n  }\r\n  public IsParent(other: ISemTalkClass): boolean {\r\n    if (this.ID === other.ID) { return false; }\r\n    for (const s of this.SuperClasses()) {\r\n      if (s.ID === other.ID) {\r\n        return true;\r\n      }\r\n    }\r\n    // tslint:disable-next-line:no-console\r\n    // console.debug(\"Indirect parent: \" + this.ObjectName + \" \" + other.ObjectName + \" AllSuperClasses:\" + this.AllSuperClasses());\r\n    for (const s of this.AllSuperClasses()) {\r\n\r\n      if (s.ID === other.ID) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  public SubClasses(): ISemTalkClass[] {\r\n    const alist: ISemTalkClass[] = [];\r\n    const ptype = SemTalkRelation.SemTalkSubClassOf;\r\n    for (const x of this.InvAssociations()) {\r\n      if (x.ClassOf().RelationType === ptype) {\r\n        alist[alist.length] = x.FromObject as ISemTalkClass;\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n  public AllSubClasses(): ISemTalkClass[] {\r\n    const alist: ISemTalkClass[] = [];\r\n    const fnd: any = {};\r\n    const ptype = SemTalkRelation.SemTalkSubClassOf;\r\n    function allsubclassesrec(cl: ISemTalkClass): void {\r\n      for (const x of cl.InvAssociations()) {\r\n        if (x.ClassOf().RelationType === ptype) {\r\n          if (fnd[x.FromObject.ObjectName] === undefined) {\r\n            fnd[x.FromObject.ObjectName] = x.FromObject;\r\n            alist[alist.length] = x.FromObject as ISemTalkClass;\r\n            allsubclassesrec(x.FromObject as ISemTalkClass);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allsubclassesrec(this);\r\n    return alist;\r\n  }\r\n  public get IsLeaf(): boolean {\r\n    if (this.SubClasses().length + this.Instances().length > 0) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  public MakeInstance(n?: string, t?: SemTalkType, i?: number, fn?: (cla: ISemTalkClass, n: string, t: SemTalkType, i: number) => ISemTalkInstance): ISemTalkInstance {\r\n    const tb = this.ObjectBase;\r\n    let existing: ISemTalkInstance | null = null;\r\n    if (n)\r\n      existing = tb.FindInstance(n);\r\n    if (existing) {\r\n      return existing;\r\n    } else {\r\n      tb.maxid = tb.maxid + 1;\r\n      if (n === undefined) {\r\n        n = this.ObjectName + \".\" + tb.maxid;\r\n      }\r\n      if (t === undefined) {\r\n        t = SemTalkType.SemTalkInstance;\r\n      }\r\n      if (i === undefined) {\r\n        i = tb.maxid;\r\n      }\r\n      if (fn === undefined) {\r\n        const inst = new SemTalkInstance(this, n, t, i);\r\n        return inst;\r\n      } else {\r\n        const inst = fn(this, n, t, i);\r\n        return inst;\r\n      }\r\n    }\r\n  }\r\n  public MakeSharePointInstance(n?: string, t?: SemTalkType, i?: number): ISemTalkSharePointInstance {\r\n    const tb = this.ObjectBase;\r\n    let existing: ISemTalkInstance | null = null;\r\n    if (n)\r\n      existing = tb.FindInstance(n);\r\n    if (existing) {\r\n      return existing as ISemTalkSharePointInstance;\r\n    } else {\r\n      tb.maxid = tb.maxid + 1;\r\n      if (n === undefined) {\r\n        n = this.ObjectName + \".\" + tb.maxid;\r\n      }\r\n      if (t === undefined) {\r\n        t = SemTalkType.SemTalkInstance;\r\n      }\r\n      if (i === undefined) {\r\n        i = tb.maxid;\r\n      }\r\n      const inst = new SemTalkSharePointInstance(this, n, t, i);\r\n      return inst;\r\n    }\r\n  }\r\n  public MakeSubClass(n: string, _t?: SemTalkType, i?: number, fn?: (tb: IObjectBase, n: string, i?: number) => ISemTalkClass): ISemTalkClass {\r\n    const tb = this.ObjectBase;\r\n    const s = tb.FindClass(n);\r\n    let scla: ISemTalkClass;\r\n    if (s !== null) {\r\n      scla = s;\r\n    } else {\r\n      if (fn === undefined) {\r\n        scla = tb.MakeClass(n, i);\r\n      } else {\r\n        scla = fn(tb, n, i);\r\n      }\r\n    }\r\n    if (!scla.IsParent(this)) {\r\n      scla.AddSubclassOf(this);\r\n    }\r\n    return scla;\r\n  }\r\n  public MakeSharePointSubClass(n: string, _t?: SemTalkType, i?: number): ISemTalkSharePointClass {\r\n    const tb = this.ObjectBase;\r\n    const s = tb.FindClass(n);\r\n    let scla: ISemTalkSharePointClass;\r\n    if (s !== null) {\r\n      scla = s as ISemTalkSharePointClass;\r\n    } else {\r\n      scla = tb.MakeSharePointClass(n, i);\r\n    }\r\n    if (!scla.IsParent(this)) {\r\n      scla.AddSubclassOf(this);\r\n    }\r\n    return scla;\r\n  }\r\n  public Instances(): ISemTalkInstance[] {\r\n    const alist: ISemTalkInstance[] = [];\r\n    for (const index in this._instances) {\r\n      const x = this._instances[index];\r\n      alist[alist.length] = x;\r\n    }\r\n    return alist;\r\n  }\r\n  public AllInstances(): ISemTalkInstance[] {\r\n    const alist: ISemTalkInstance[] = this.Instances();\r\n    const fnd: any = {};\r\n    const ptype = SemTalkRelation.SemTalkSubClassOf;\r\n    function allsubclassesrec(cl: ISemTalkClass): void {\r\n      for (const x of cl.InvAssociations()) {\r\n        if (x.ClassOf().RelationType === ptype) {\r\n          if (fnd[x.FromObject.ObjectName] === undefined) {\r\n            fnd[x.FromObject.ObjectName] = x.FromObject;\r\n            const f: SemTalkClass = x.FromObject as SemTalkClass;\r\n            const ilist = f.Instances();\r\n            for (const i of ilist) {\r\n              alist[alist.length] = i;\r\n            }\r\n            allsubclassesrec(x.FromObject as ISemTalkClass);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allsubclassesrec(this);\r\n    return alist;\r\n  }\r\n  public GetRelationOtherBases(rel: ISemTalkAssociationType, ptype?: SemTalkRelation | null): ISemTalkClass[] {\r\n    let alist: ISemTalkClass[] = [];\r\n    if (ptype === undefined || ptype === null) { ptype = SemTalkRelation.SemTalkProperty; }\r\n    const clist = this.LinkedObjects(rel, false, ptype);\r\n    if (clist.length === 0) {\r\n      // let fnd: boolean = false;\r\n      const sl = this.SuperClasses();\r\n      for (const s of sl) {\r\n        const glist = s.GetRelationOtherBases(rel, ptype);\r\n        if (glist.length > 0) {\r\n          alist = glist;\r\n        }\r\n        //  }\r\n      }\r\n    } else {\r\n      for (const s of clist) {\r\n        if (s.ObjectType === SemTalkType.SemTalkClass) {\r\n          alist.push(s as ISemTalkClass);\r\n        }\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n  public GetInvRelationOtherBases(rel: ISemTalkAssociationType, ptype?: SemTalkRelation | null): ISemTalkClass[] {\r\n    let alist: ISemTalkClass[] = [];\r\n    if (ptype === undefined || ptype === null) { ptype = SemTalkRelation.SemTalkProperty; }\r\n    const clist = this.InvLinkedObjects(rel.ObjectName, false, ptype);\r\n    if (clist.length === 0) {\r\n      // let fnd: boolean = false;\r\n      const sl = this.SuperClasses();\r\n      for (const s of sl) {\r\n        const glist = s.GetInvRelationOtherBases(rel, ptype);\r\n        if (glist.length > 0) {\r\n          alist = glist;\r\n        }\r\n        //   }\r\n      }\r\n    } else {\r\n      for (const s of clist) {\r\n        if (s.ObjectType === SemTalkType.SemTalkClass) {\r\n          alist.push(s as ISemTalkClass);\r\n        }\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n  public IsValid(dst: ISemTalkObject, rel: ISemTalkAssociationType) {\r\n    const ots: SemTalkType = this.ObjectType;\r\n    const otd: SemTalkType = dst.ObjectType;\r\n    // if (rel.ObjectName === \"Property\") {\r\n    //   return true;\r\n    // }\r\n    switch (rel.RelationType) {\r\n      case SemTalkRelation.SemTalkSubClassOf:\r\n        if (ots === otd) {\r\n          if (ots !== SemTalkType.SemTalkInstance && ots !== SemTalkType.SemTalkAssociation) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      case SemTalkRelation.SemTalkSystemRelation:\r\n        break;\r\n      // switch (rel.ObjectName) {\r\n      //   case \"disjointWith\":\r\n      //     if (ots === otd) {\r\n      //       if (ots !== SemTalkType.SemTalkInstance && ots !== SemTalkType.SemTalkAssociation) {\r\n      //         return true;\r\n      //       }\r\n      //     }\r\n      //     return false;\r\n      //   case \"equivalentClass\":\r\n      //     if (ots === otd) {\r\n      //       if (ots !== SemTalkType.SemTalkInstance && ots !== SemTalkType.SemTalkAssociation) {\r\n      //         return true;\r\n      //       }\r\n      //     }\r\n      //     return false;\r\n      //   case \"unionOf\":\r\n      //     if (this.ObjectName.indexOf(\"unionOf Class\") === 0 && otd === SemTalkType.SemTalkClass) {\r\n      //       return true;\r\n      //     }\r\n      //     return false;\r\n      //   case \"oneOf\":\r\n      //     if (this.ObjectName.indexOf(\"oneOf Class\") === 0 && otd === SemTalkType.SemTalkInstance) {\r\n      //       return true;\r\n      //     }\r\n      //     return false;\r\n      //   case \"intersectionOf\":\r\n      //     if (this.ObjectName.indexOf(\"intersectionOf Class\") === 0 && otd === SemTalkType.SemTalkClass) {\r\n      //       return true;\r\n      //     }\r\n      //     return false;\r\n      //   case \"complementOf\":\r\n      //     if (this.ObjectName.indexOf(\"complementOf Class\") === 0 && otd === SemTalkType.SemTalkClass) {\r\n      //       return true;\r\n      //     }\r\n      //     return false;\r\n      //   case \"distinctMembers\":\r\n      //     if (this.ObjectName.indexOf(\"AllDifferent Class\") === 0 && otd === SemTalkType.SemTalkInstance) {\r\n      //       return true;\r\n      //     }\r\n      //     return false;\r\n      //   case \"equivalentProperty\":\r\n      //     if (ots === otd) {\r\n      //       if (ots === SemTalkType.SemTalkAssociationType) {\r\n      //         return true;\r\n      //       }\r\n      //     }\r\n      //     return false;\r\n      //   case \"sameAs\":\r\n      //     if (otd === ots) { return true; }\r\n      //     return false;\r\n      // }\r\n      // return false;\r\n      case SemTalkRelation.SemTalkProperty:\r\n        break;\r\n    }\r\n    if (ots !== SemTalkType.SemTalkAssociation && otd === SemTalkType.SemTalkClass) {\r\n      const parents: ISemTalkClass[] = [];\r\n      parents.push(this);\r\n      const dstparents: ISemTalkClass[] = [];\r\n      const dstc: ISemTalkClass = dst as ISemTalkClass;\r\n      dstparents.push(dstc);\r\n      // let dstinslinks: SemTalkObject[] = dst.LinkedObjects(SemTalkBaseConstant.SLInstanceOf, false, SemTalkRelation.SemTalkSystemRelation)\r\n      // for (let x of dstinslinks) dstparents[dstparents.length] = x;\r\n      // let found: boolean = false;\r\n      const isclassrelation: boolean = (rel.ToType === SemTalkType.SemTalkClass);\r\n      for (const pa of parents) {\r\n        for (const own of pa.GetRelationOtherBases(rel, SemTalkRelation.SemTalkProperty)) {\r\n          if (isclassrelation) {\r\n            if (dstc.IsParent(own)) {\r\n              return true;\r\n            }\r\n          } else {\r\n            for (const r of dstparents) {\r\n              if (r.ID === own.ID || r.IsParent(own)) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (const srel of rel.SuperClasses()) {\r\n        if (this.IsValid(dst, srel as ISemTalkAssociationType)) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  public AllValidClassRelations(dst: ISemTalkObject): ISemTalkAssociationType[] {\r\n    const alist: ISemTalkAssociationType[] = [];\r\n    const reltmp: any = {};\r\n    const par = this.AllSuperClasses();\r\n    par.unshift(this);\r\n\r\n    for (const xobj of this.AllAssociationTypes()) {\r\n      let found: boolean = false;\r\n      const glist = this.GetRelationOtherBases(xobj, SemTalkRelation.SemTalkProperty);\r\n      for (const own of glist) {\r\n        if (!found) {\r\n          if (dst.ObjectName === own.ObjectName) {\r\n            found = true;\r\n          }\r\n          else {\r\n            const dstc: SemTalkClass = dst as SemTalkClass;\r\n            if (dstc.IsParent(own)) {\r\n              found = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (found) {\r\n        reltmp[xobj.ObjectName] = xobj;\r\n      }\r\n    }\r\n    for (const ind in reltmp) {\r\n      const r: ISemTalkAssociationType = reltmp[ind];\r\n      alist[alist.length] = r;\r\n      for (const s of r.AllSubClasses()) {\r\n        alist.push(s as ISemTalkAssociationType);\r\n      }\r\n    }\r\n    alist.sort((x, y) => x.ObjectCaption.localeCompare(y.ObjectCaption));\r\n    return alist;\r\n  }\r\n  public GetValue(aname: string): any {\r\n    const a: any = super.GetValue(aname);\r\n    if (a === null || a === undefined) {\r\n      const sl = this.SuperClasses();\r\n      for (const sc of sl) {\r\n        const sa: any = sc.GetValue(aname);\r\n        if (sa) {\r\n          return sa;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n    else { return a; }\r\n  }\r\n  public SystemClass(): ISemTalkSystemClass | null {\r\n    const ob = this.ObjectBase;\r\n\r\n    function isSystemClass(obj: any): boolean {\r\n      return ob.IsSystemClass(obj);\r\n    }\r\n    const suplist = this.SuperClasses();\r\n    for (const s of suplist) {\r\n      if (isSystemClass(s)) {\r\n        //   sc = s;\r\n        return s as ISemTalkSystemClass;\r\n      }\r\n      const slist2 = s.SuperClasses();\r\n      for (const s2 of slist2) {\r\n        // if ((s2.SuperClasses().length === 0) && isSystemClass(s2)) {\r\n        if (isSystemClass(s2)) {\r\n          // sc = s2;\r\n          return s2 as ISemTalkSystemClass;\r\n        }\r\n      }\r\n    }\r\n    //   if (sc === this) {\r\n    for (const s2 of this.AllSuperClasses()) {\r\n      // if ((s2.SuperClasses().length === 0) && isSystemClass(s2)) {\r\n      if (isSystemClass(s2)) {\r\n        //  if (sc === this) {\r\n        //    sc = s2;\r\n        return s2 as ISemTalkSystemClass;\r\n        //  }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public AllAttributes(): ISemTalkAttribute[] {\r\n    const alist: ISemTalkAttribute[] = [];\r\n    const fnd: any = {};\r\n    const fnda: any = {};\r\n    for (const x of this.Attributes()) {\r\n      const atype = x.ClassOf();\r\n      if (fnda[atype.ObjectName] === undefined) {\r\n        fnda[atype.ObjectName] = atype;\r\n        alist.push(x);\r\n      }\r\n    }\r\n    function allsuperclassesrec(cl: ISemTalkClass) {\r\n      for (const x of cl.SuperClasses()) {\r\n        if (fnd[x.ObjectName] === undefined) {\r\n          fnd[x.ObjectName] = x;\r\n          for (const xs of x.Attributes()) {\r\n            const atypes = xs.ClassOf();\r\n            if (fnda[atypes.ObjectName] === undefined) {\r\n              fnda[atypes.ObjectName] = atypes;\r\n              alist.push(xs);\r\n            }\r\n          }\r\n          allsuperclassesrec(x);\r\n        }\r\n      }\r\n    }\r\n    allsuperclassesrec(this);\r\n    return alist;\r\n  }\r\n  public GetAttributeOwner(attr: string | ISemTalkAttributeType): ISemTalkAttribute | null {\r\n    const a = this.FindAttribute(attr);\r\n    if (a !== null) {\r\n      return a;\r\n    } else {\r\n      for (const x of this.SuperClasses()) {\r\n        const aa = x.GetAttributeOwner(attr);\r\n        if (aa !== null) return aa;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  public AllAttributeTypes(): ISemTalkAttributeType[] {\r\n    const alist: ISemTalkAttributeType[] = [];\r\n    const fnd: any = {};\r\n    const fnda: any = {};\r\n    for (const x of this.Attributes()) {\r\n      const atype = x.ClassOf();\r\n      if (fnda[atype.ObjectName] === undefined) {\r\n        fnda[atype.ObjectName] = atype;\r\n        alist.push(atype);\r\n      }\r\n    }\r\n    function allsuperclassesrec(cl: ISemTalkClass) {\r\n      for (const x of cl.SuperClasses()) {\r\n        if (fnd[x.ObjectName] === undefined) {\r\n          fnd[x.ObjectName] = x;\r\n          for (const xs of x.Attributes()) {\r\n            const atypes = xs.ClassOf();\r\n            if (fnda[atypes.ObjectName] === undefined) {\r\n              fnda[atypes.ObjectName] = atypes;\r\n              alist.push(atypes);\r\n            }\r\n          }\r\n          allsuperclassesrec(x);\r\n        }\r\n      }\r\n    }\r\n    allsuperclassesrec(this);\r\n    return alist;\r\n  }\r\n\r\n  public AllAssociationTypes(): ISemTalkAssociationType[] {\r\n    const alist: ISemTalkAssociationType[] = [];\r\n    const fnd: any = {};\r\n    const fnda: any = {};\r\n    for (const x of this.Associations()) {\r\n      const atype = x.ClassOf();\r\n      if (fnda[atype.ObjectName] === undefined && atype.RelationType === SemTalkRelation.SemTalkProperty) {\r\n        fnda[atype.ObjectName] = atype;\r\n        alist.push(atype);\r\n      }\r\n    }\r\n    const ptype: SemTalkRelation = SemTalkRelation.SemTalkSubClassOf;\r\n    function allsuperclassesrec(cl: ISemTalkClass) {\r\n      for (const x of cl.Associations()) {\r\n        const atype = x.ClassOf();\r\n        if (atype.RelationType === ptype) {\r\n          if (fnd[x.ToObject.ObjectName] === undefined) {\r\n            fnd[x.ToObject.ObjectName] = x.ToObject;\r\n            for (const xs of x.ToObject.Associations()) {\r\n              const atypes = xs.ClassOf();\r\n              if (fnda[atypes.ObjectName] === undefined && atypes.RelationType === SemTalkRelation.SemTalkProperty) {\r\n                fnda[atypes.ObjectName] = atypes;\r\n                alist.push(atypes);\r\n              }\r\n            }\r\n            allsuperclassesrec(x.ToObject as ISemTalkClass);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allsuperclassesrec(this);\r\n    return alist;\r\n  }\r\n  public AllInvAssociationTypes(): ISemTalkAssociationType[] {\r\n    const alist: ISemTalkAssociationType[] = [];\r\n    const fnd: any = {};\r\n    const fnda: any = {};\r\n    for (const x of this.InvAssociations()) {\r\n      const atype = x.ClassOf();\r\n      if (fnda[atype.ObjectName] === undefined && atype.RelationType === SemTalkRelation.SemTalkProperty) {\r\n        fnda[atype.ObjectName] = atype;\r\n        alist[alist.length] = atype;\r\n      }\r\n    }\r\n    const ptype: SemTalkRelation = SemTalkRelation.SemTalkSubClassOf;\r\n    function allsuperclassesrec(cl: ISemTalkClass) {\r\n      for (const x of cl.Associations()) {\r\n        const atype = x.ClassOf();\r\n        if (atype.RelationType === ptype) {\r\n          if (fnd[x.ToObject.ObjectName] === undefined) {\r\n            fnd[x.ToObject.ObjectName] = x.ToObject;\r\n            for (const xs of x.ToObject.InvAssociations()) {\r\n              const atypes = xs.ClassOf();\r\n              if (fnda[atypes.ObjectName] === undefined && atypes.RelationType === SemTalkRelation.SemTalkProperty) {\r\n                fnda[atypes.ObjectName] = atypes;\r\n                alist.push(atypes);\r\n              }\r\n            }\r\n            allsuperclassesrec(x.ToObject as ISemTalkClass);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allsuperclassesrec(this);\r\n    return alist;\r\n  }\r\n  public AllAssociations(): ISemTalkAssociation[] {\r\n    const alist: ISemTalkAssociation[] = [];\r\n    const fnd: any = {};\r\n    const fnda: any = {};\r\n    for (const x of this.Associations()) {\r\n      alist.push(x);\r\n    }\r\n    for (const x of this.Associations()) {\r\n      const atype = x.ClassOf();\r\n      if (fnda[atype.ObjectName] === undefined) {\r\n        fnda[atype.ObjectName] = atype;\r\n      }\r\n    }\r\n    function allsuperclassesrec(cl: ISemTalkClass) {\r\n      for (const x of cl.SuperClasses()) {\r\n        if (fnd[x.ObjectName] === undefined) {\r\n          fnd[x.ObjectName] = x;\r\n          for (const xs of x.Associations()) {\r\n            const atypes = xs.ClassOf();\r\n            if (fnda[atypes.ObjectName] === undefined) {\r\n              alist.push(xs);\r\n            }\r\n          }\r\n          for (const xs of x.Associations()) {\r\n            const atypes = xs.ClassOf();\r\n            if (fnda[atypes.ObjectName] === undefined) {\r\n              fnda[atypes.ObjectName] = atypes;\r\n            }\r\n          }\r\n          allsuperclassesrec(x);\r\n        }\r\n      }\r\n    }\r\n    allsuperclassesrec(this);\r\n    return alist;\r\n  }\r\n  public AllInvAssociations(): ISemTalkAssociation[] {\r\n    const alist: ISemTalkAssociation[] = [];\r\n    const fnd: any = {};\r\n    const fnda: any = {};\r\n    for (const x of this.InvAssociations()) {\r\n      alist.push(x);\r\n    }\r\n    for (const x of this.InvAssociations()) {\r\n      const atype = x.ClassOf();\r\n      if (fnda[atype.ObjectName] === undefined) {\r\n        fnda[atype.ObjectName] = atype;\r\n      }\r\n    }\r\n    function allsuperclassesrec(cl: ISemTalkClass) {\r\n      for (const x of cl.SuperClasses()) {\r\n        if (fnd[x.ObjectName] === undefined) {\r\n          fnd[x.ObjectName] = x;\r\n          for (const xs of x.InvAssociations()) {\r\n            const atypes = xs.ClassOf();\r\n            if (fnda[atypes.ObjectName] === undefined) {\r\n              alist.push(xs);\r\n            }\r\n          }\r\n          for (const xs of x.InvAssociations()) {\r\n            const atypes = xs.ClassOf();\r\n            if (fnda[atypes.ObjectName] === undefined) {\r\n              fnda[atypes.ObjectName] = atypes;\r\n            }\r\n          }\r\n          allsuperclassesrec(x);\r\n        }\r\n      }\r\n    }\r\n    allsuperclassesrec(this);\r\n    return alist;\r\n  }\r\n  public AllLinkedObjects(aname: string, rec?: boolean, ptype?: SemTalkRelation | null): ISemTalkObject[] {\r\n    const alist: ISemTalkObject[] = this.LinkedObjects(aname, rec, ptype);\r\n    if (alist.length > 0) { return alist; }\r\n    if (ptype === null || ptype === undefined) { ptype = SemTalkRelation.SemTalkProperty; }\r\n    const fnd: any = {};\r\n    function allsuperclassesrec(cl: ISemTalkClass) {\r\n      for (const x of cl.SuperClasses()) {\r\n        if (fnd[x.ObjectName] === undefined) {\r\n          fnd[x.ObjectName] = x;\r\n          for (const xs of x.LinkedObjects(aname, rec, ptype)) {\r\n            alist[alist.length] = xs;\r\n          }\r\n          if (alist.length === 0) {\r\n            allsuperclassesrec(x);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allsuperclassesrec(this);\r\n    return alist;\r\n  }\r\n  public AllInvLinkedObjects(aname: string, rec?: boolean, ptype?: SemTalkRelation | null): ISemTalkObject[] {\r\n    const alist: ISemTalkObject[] = this.InvLinkedObjects(aname, rec, ptype);\r\n    if (alist.length > 0) { return alist; }\r\n    if (ptype === null || ptype === undefined) { ptype = SemTalkRelation.SemTalkProperty; }\r\n    const fnd: any = {};\r\n    function allsuperclassesrec(cl: ISemTalkClass) {\r\n      for (const x of cl.SuperClasses()) {\r\n        if (!fnd[x.ObjectName]) {\r\n          fnd[x.ObjectName] = x;\r\n          for (const xs of x.InvLinkedObjects(aname, rec, ptype)) {\r\n            alist[alist.length] = xs;\r\n          }\r\n          if (alist.length === 0) {\r\n            allsuperclassesrec(x);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allsuperclassesrec(this);\r\n    return alist;\r\n  }\r\n  public AllLinks(aname: string, _rec?: boolean, ptype?: SemTalkRelation | null): ISemTalkAssociation[] {\r\n    const alist: ISemTalkAssociation[] = this.Links(aname, ptype);\r\n    if (alist.length > 0) { return alist; }\r\n    if (ptype === null || ptype === undefined) { ptype = SemTalkRelation.SemTalkProperty; }\r\n    const fnd: any = {};\r\n    function allsuperclassesrec(cl: ISemTalkClass) {\r\n      for (const x of cl.SuperClasses()) {\r\n        if (fnd[x.ObjectName] === undefined) {\r\n          fnd[x.ObjectName] = x;\r\n          for (const xs of x.Links(aname, ptype)) {\r\n            alist.push(xs);\r\n          }\r\n          if (alist.length === 0) {\r\n            allsuperclassesrec(x);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allsuperclassesrec(this);\r\n    return alist;\r\n  }\r\n  public AllInvLinks(aname: string, _rec?: boolean, ptype?: SemTalkRelation | null): ISemTalkAssociation[] {\r\n    const alist: ISemTalkAssociation[] = this.InvLinks(aname, ptype);\r\n    if (alist.length > 0) { return alist; }\r\n    if (ptype === null || ptype === undefined) { ptype = SemTalkRelation.SemTalkProperty; }\r\n    const fnd: any = {};\r\n    function allsuperclassesrec(cl: ISemTalkClass) {\r\n      for (const x of cl.SuperClasses()) {\r\n        if (fnd[x.ObjectName] === undefined) {\r\n          fnd[x.ObjectName] = x;\r\n          for (const xs of x.InvLinks(aname, ptype)) {\r\n            alist.push(xs);\r\n          }\r\n          if (alist.length === 0) {\r\n            allsuperclassesrec(x);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allsuperclassesrec(this);\r\n    return alist;\r\n  }\r\n  public AllAttachments(): ISemTalkAssociation[] {\r\n    return this.AllLinks(SemTalkBaseConstant.SLhasAttachment, false, SemTalkRelation.SemTalkSystemRelation);\r\n  }\r\n  public UpdateLabel(mastername?: string): ILabelSpec {\r\n    //const lbl = super.UpdateLabel(mastername);\r\n    const lbl = this.ObjectBase.MakeLabelSpec();\r\n    lbl.newtxt = \"\";\r\n\r\n    // let masternameU = mastername;\r\n    if (mastername === undefined) {\r\n      mastername = \"\";\r\n    }\r\n    mastername = Utils.MasterNoDot(mastername);\r\n\r\n    if (lbl.isuml) { lbl.newtxt = \"\"; }\r\n\r\n    let haslabels: boolean = false;\r\n    const sc: ISemTalkSystemClass | null = (this as ISemTalkClass).SystemClass();\r\n    if (sc !== null) {\r\n      haslabels = sc.CollectClassLabels(lbl, this, mastername);\r\n    }\r\n\r\n    lbl.haslabels = haslabels;\r\n    if (!haslabels && lbl.newtxt === \"\") {\r\n      lbl.newtxt = this.ID2NameNsp();\r\n    }\r\n    return lbl;\r\n  }\r\n  public Load(je: any): void {\r\n    super.Load(je);\r\n    if (je.associations) {\r\n      for (const i in je.associations) {\r\n        const rel: any = je.associations[i];\r\n        if (rel.type === SemTalkBaseConstant.SLSubClassOf) {\r\n          let ot = this.ObjectBase.FindObject(this.ObjectType, rel.other);\r\n          let oth: ISemTalkClass | null = null;\r\n          if (ot) { oth = ot as ISemTalkClass; }\r\n          if (oth) {\r\n            // console.log(\"Class Load\" + this.ObjectName + \"->\" + oth.ObjectName);\r\n            let r = this.AddSubclassOf(oth, Number(rel.ID));\r\n            if (r) {\r\n              r.Load(rel);\r\n            }\r\n          }\r\n          // else {\r\n          //   console.log(\"Class Load: Missing SuperClass: \" + rel.other);\r\n          //   throw new Error(\"Class Load: Missing SuperClass: \" + rel.other);\r\n          // }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  public LoadXML(element: Element): void {\r\n    super.LoadXML(element);\r\n    const tb: IObjectBase = this.ObjectBase;\r\n    const associations = element.getElementsByTagName(\"Relation\");\r\n    for (const i in associations) {\r\n      const rel = associations[i];\r\n      if (rel.parentNode === element && rel.attributes) {\r\n        const type = rel.attributes.getNamedItem(\"type\")?.value;\r\n        if (type === SemTalkBaseConstant.SLSubClassOf) {\r\n          const other = rel.attributes.getNamedItem(\"other\")?.value;\r\n          if (other) {\r\n            let oth: any = tb.FindInstance(other);\r\n            if (oth === null) {\r\n              oth = tb.FindClass(other);\r\n            }\r\n            if (oth !== null) {\r\n              this.AddSubclassOf(oth);\r\n            } else {\r\n              console.debug(\"Bad Other: \" + rel);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public Save(par: any[]): any {\r\n    return super.Save(par);\r\n  }\r\n  public Clone(oth: ISemTalkClass) {\r\n    super.Clone(oth);\r\n  }\r\n}\r\n\r\nexport class SemTalkSharePointClass extends SemTalkClass implements ISemTalkClass, ISemTalkSharePointObject {\r\n  public UniqueID: number | null = null;\r\n  public URL: string | null = null;\r\n  public CTName: string | null = null;\r\n  public SPPrefix: string | null = null;\r\n  public RowID: number | null = null;\r\n}\r\nexport class SemTalkAttributeType extends SemTalkClass implements ISemTalkAttributeType {\r\n  constructor(tb: IObjectBase, newname: string, id?: number | null) {\r\n    super(tb, newname, id);\r\n    this.ObjectType = SemTalkType.SemTalkAttributeType;\r\n    if (tb.FindAttributeType(newname) === null) {\r\n      tb._attrtypes[this.ID + \"_\"] = this;\r\n      // } else {\r\n      //   super.Delete();\r\n      //   throw new Error(\"SemTalkAttributeType: There is another AttributeType named: \" + newname);\r\n    }\r\n  }\r\n  public Delete(): void {\r\n    super.Delete();\r\n    const tb = this.ObjectBase;\r\n    for (const objid in tb._objectids) {\r\n      const s: ISemTalkObject = tb._objectids[objid];\r\n      if (s !== null) {\r\n        for (const attr of (s as ISemTalkObject).Attributes()) {\r\n          if (attr.ClassOf().ID === this.ID) {\r\n            attr.Delete();\r\n          }\r\n        }\r\n      }\r\n    }\r\n    delete this.ObjectBase._attrtypes[this.ID + \"_\"];\r\n  }\r\n  public Value: any = \"\";\r\n  public Values: string[] = [];\r\n  public Options: string[] = [];\r\n  public ValueType: SemTalkValueType = SemTalkValueType.Symbol;\r\n  public IsList: boolean = false;\r\n  public Min: number | null = null;\r\n  public Max: number | null = null;\r\n  public SyncVisio: boolean = false;\r\n  public Raise: boolean = false;\r\n  public Required: boolean = false;\r\n  public Group: string = \"\";\r\n  public Weight: number = 0;\r\n  public AllowFreeForm: boolean = true;\r\n\r\n  public Load(je: any): void {\r\n    super.Load(je);\r\n    this.Value = je.defaultvalue;\r\n    if (je.valuetype !== undefined) { this.ValueType = this.ObjectBase.FindSemTalkValueType(je.valuetype); }\r\n    if (je.min !== undefined) { this.Min = je.min; }\r\n    if (je.max !== undefined) { this.Max = je.max; }\r\n    if (je.islist !== undefined) { this.IsList = (je.islist === \"1\"); }\r\n    if (je.values !== undefined) { this.Values = je.values.split(\"; \"); }\r\n    if (je.options !== undefined) { this.Options = je.options.split(\"; \"); }\r\n    if (je.syncvisio !== undefined) { this.SyncVisio = (je.syncvisio === \"1\"); }\r\n    if (je.raise !== undefined) { this.Raise = (je.raise === \"1\"); }\r\n    if (je.required !== undefined) { this.Required = (je.required === \"1\"); }\r\n    if (je.group !== undefined) { this.Group = je.group; }\r\n    if (je.weight !== undefined) { this.Weight = je.weight; }\r\n    if (je.allowfreeform !== undefined) { this.AllowFreeForm = (je.allowfreeform === \"1\"); }\r\n  }\r\n  public LoadXML(element: Element): void {\r\n    super.LoadXML(element);\r\n    if (element.attributes) {\r\n      let defaultvalue = element.attributes.getNamedItem(\"defaultvalue\")?.value;\r\n      if (defaultvalue !== undefined) {\r\n        this.Value = defaultvalue;\r\n      }\r\n      let valuetype = element.attributes.getNamedItem(\"valuetype\")?.value;\r\n      const tb = this.ObjectBase;\r\n      if (valuetype !== undefined) {\r\n        this.ValueType = tb.FindSemTalkValueType(valuetype);\r\n      }\r\n      let min = element.attributes.getNamedItem(\"min\")?.value;\r\n      if (min !== undefined) { this.Min = Number(min); }\r\n      let max = element.attributes.getNamedItem(\"max\")?.value;\r\n      if (max !== undefined) { this.Max = Number(max); }\r\n      let islist = element.attributes.getNamedItem(\"islist\")?.value;\r\n      if (islist !== undefined) { this.IsList = (islist === \"1\"); }\r\n      let values = element.attributes.getNamedItem(\"values\")?.value;\r\n      if (values !== undefined) {\r\n        this.Values = values.split(\"; \");\r\n      }\r\n      let options = element.attributes.getNamedItem(\"options\")?.value;\r\n      if (options !== undefined) {\r\n        this.Options = options.split(\"; \");\r\n      }\r\n      let required = element.attributes.getNamedItem(\"required\")?.value;\r\n      if (required !== undefined) { this.Required = (required === \"1\"); }\r\n      let group = element.attributes.getNamedItem(\"group\")?.value;\r\n      if (group !== undefined) { this.Group = group; }\r\n      let weight = element.attributes.getNamedItem(\"weight\")?.value;\r\n      if (weight !== undefined) { this.Weight = Number(weight); }\r\n      let allowfreeform = element.attributes.getNamedItem(\"allowfreeform\")?.value;\r\n      if (allowfreeform !== undefined) { this.AllowFreeForm = (allowfreeform === \"1\"); }\r\n    }\r\n  }\r\n  public Save(par: any[]): any {\r\n    // const el: any = {};\r\n    // // el.ObjectType = \"AttributeType\";\r\n    // par[par.length] = el;\r\n    // super.Save(el);\r\n    let el = super.Save(par);\r\n\r\n    if (this.Value !== undefined) el.defaultvalue = this.Value;\r\n    if (this.ValueType !== undefined) el.valuetype = \"http://www.semtalk.com/datatype#\" + this.ObjectBase.SemTalkValueTypeName(this.ValueType);\r\n    if (this.Min !== undefined) { el.min = this.Min; }\r\n    if (this.Max !== undefined) { el.max = this.Max; }\r\n\r\n    if (this.IsList) { el.islist = \"1\"; }\r\n    if (this.Values !== undefined) {\r\n      let v = \"\";\r\n      for (const vv of this.Values) {\r\n        v = v + vv + \"; \";\r\n      }\r\n      if (v.length > 0) { v = v.substr(0, v.length - 2); }\r\n      if (v !== \"\") { el.values = v; }\r\n    }\r\n    if (this.Options !== undefined) {\r\n      let v = \"\";\r\n      for (const vv of this.Options) {\r\n        v = v + vv + \"; \";\r\n      }\r\n      if (v.length > 0) { v = v.substr(0, v.length - 2); }\r\n      if (v !== \"\") { el.options = v; }\r\n    }\r\n    if (this.SyncVisio) { el.syncvisio = \"1\"; }\r\n    if (this.Raise) { el.raise = \"1\"; }\r\n    if (this.Required) { el.required = \"1\"; }\r\n    if (this.Weight) { el.weight = this.Weight; }\r\n    if (this.Group) { el.group = this.Group; }\r\n    if (!this.AllowFreeForm) { el.allowfreeform = \"0\"; }\r\n  }\r\n  public SaveXML(xd: XMLDocument, el: HTMLElement): void {\r\n    super.SaveXML(xd, el);\r\n    if (this.Value !== undefined) el.setAttribute(\"defaultvalue\", this.Value);\r\n    if (this.ValueType !== undefined) el.setAttribute(\"valuetype\", \"http://www.semtalk.com/datatype#\" + this.ObjectBase.SemTalkValueTypeName(this.ValueType));\r\n    if (this.Min !== undefined) { el.setAttribute(\"min\", String(this.Min)); }\r\n    if (this.Max !== undefined) { el.setAttribute(\"max\", String(this.Max)); }\r\n\r\n    if (this.IsList) { el.setAttribute(\"islist\", \"1\"); }\r\n    if (this.Values !== undefined) {\r\n      let v = \"\";\r\n      for (const vv of this.Values) {\r\n        v = v + vv + \"; \";\r\n      }\r\n      if (v.length > 0) { v = v.substr(0, v.length - 2); }\r\n      if (v !== \"\") { el.setAttribute(\"values\", v); }\r\n    }\r\n    if (this.Options !== undefined) {\r\n      let v = \"\";\r\n      for (const vv of this.Options) {\r\n        v = v + vv + \"; \";\r\n      }\r\n      if (v.length > 0) { v = v.substr(0, v.length - 2); }\r\n      if (v !== \"\") { el.setAttribute(\"options\", v); }\r\n    }\r\n    if (this.SyncVisio) { el.setAttribute(\"syncvisio\", \"1\"); }\r\n    if (this.Raise) { el.setAttribute(\"raise\", \"1\"); }\r\n    if (this.Required) { el.setAttribute(\"required\", \"1\"); }\r\n    if (this.Weight) { el.setAttribute(\"weight\", String(this.Weight)); }\r\n    if (this.Group) { el.setAttribute(\"group\", this.Group); }\r\n    if (!this.AllowFreeForm) { el.setAttribute(\"allowfreeform\", \"0\"); }\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport class SemTalkAttribute extends SemTalkVirtualInstance implements ISemTalkAttribute {\r\n  constructor(obj: ISemTalkObject, attr: string | ISemTalkAttributeType, val: any) {\r\n    super(SemTalkType.SemTalkAttribute, obj);\r\n    this._value = val;\r\n    const tb = obj.ObjectBase;\r\n    const at1 = SemTalkObject.getAttributeType(tb, attr);\r\n    this.SetClass(at1);\r\n    const ao = obj.GetAttributeOwner(attr);\r\n    if (ao) {\r\n      // console.debug(ao);\r\n      this.Group = ao.Group;\r\n      this.Required = ao.Required;\r\n      this.Weight = ao.Weight;\r\n      this.AllowFreeForm = ao.AllowFreeForm;\r\n      if (val === null || val === undefined) {\r\n        this._value = ao.Value;\r\n      }\r\n      if (ao.ValueType !== SemTalkValueType.Symbol) {\r\n        this.ValueType = ao.ValueType;\r\n      }\r\n      this.Min = ao.Min;\r\n      this.Max = ao.Max;\r\n      this.Options = ao.Options;\r\n\r\n    } else {\r\n\r\n      // Dies kann z.Zeit gar nicht perGUI verändert werden, wird aber beim laden alter Dateien verwendet\r\n      //  if (tb.IsClass(obj)) {\r\n      this.Group = at1.Group;\r\n      this.Required = at1.Required;\r\n      this.Weight = at1.Weight;\r\n      this.AllowFreeForm = at1.AllowFreeForm;\r\n      // if (val === null || val === undefined) {\r\n      //   this._value = at1.Value;\r\n      // }\r\n      // if (at1.ValueType !== SemTalkValueType.Symbol) {\r\n      //   this.ValueType = at1.ValueType;\r\n      // }\r\n      this.Min = at1.Min;\r\n      this.Max = at1.Max;\r\n      this.Options = at1.Options;\r\n      // }\r\n    }\r\n    tb.OnAttributeAdded(this);\r\n  }\r\n  private facets: any = {};\r\n  private _value: any;\r\n  public ValueType = SemTalkValueType.Symbol;\r\n  //  private _class: SemTalkAttributeType = null;\r\n  public Min: number | null = null;\r\n  public Max: number | null = null;\r\n  public IsList: boolean = false;\r\n  public Values: any[] | null = null;\r\n  public Options: string[] = [];\r\n  public NoHTML: boolean = false;\r\n  public Required: boolean = false;\r\n  public ReadOnly: boolean = false;\r\n  public Group: string;\r\n  public Weight: number;\r\n  public AllowFreeForm: boolean = true;\r\n\r\n  public CurrentValue(lang?: string): any {\r\n    let facet = \"\";\r\n    if (lang === undefined) {\r\n      let currentnsp = this.Owner.ObjectBase.CurrentNsp;\r\n      if (currentnsp !== null) {\r\n        facet = \"facet_\" + currentnsp;\r\n      } else\r\n        facet = \"\";\r\n    } else {\r\n      facet = \"facet_\" + lang;\r\n    }\r\n    if (facet !== \"\") {\r\n      const v = this.facets[facet];\r\n      if (v !== undefined) {\r\n        return v;\r\n      }\r\n    }\r\n    return this._value;\r\n  }\r\n  public SetFacetValue(facet: string, value: any): void {\r\n    if (facet !== \"\") {\r\n      this.facets[facet] = value;\r\n    }\r\n  }\r\n  public GetFacetValue(facet: string): any {\r\n    if (facet !== \"\") {\r\n      return this.facets[facet];\r\n    }\r\n  }\r\n  public ClassOf(): ISemTalkAttributeType {\r\n    return super.ClassOf() as ISemTalkAttributeType;\r\n  }\r\n  public get Value(): any { return this._value; }\r\n  public set Value(value: any) {\r\n    const old: any = this._value;\r\n    this._value = value;\r\n    switch (this.ClassOf().ObjectName) {\r\n      case SemTalkBaseConstant.SLUserNumber:\r\n        this.Owner.ObjectBase.OnUserNumberChanged(this, old);\r\n        break;\r\n      case \"Color\":\r\n        this.Owner.ObjectBase.OnColorChanged(this, old);\r\n        break;\r\n    }\r\n    let currentnsp = this.Owner.ObjectBase.CurrentNsp;\r\n    // if (currentnsp !== \"\") {\r\n    const facet = \"facet_\" + currentnsp;\r\n    this.facets[facet] = value;\r\n    // }\r\n    this.Owner.ObjectBase.OnValueChanged(this, old);\r\n  }\r\n  public get PropValue(): any { return this._value; }\r\n  public get PropName(): string { return this.ClassOf().ID2Name; }\r\n  public get PropType(): string { return this.Owner.ObjectBase.SemTalkTypeName(this.ObjectType); }\r\n  public toString(): string { return \"<\" + this.Owner.ObjectBase.SemTalkTypeName(this.ObjectType) + \" '\" + this.ClassOf().ObjectName + \"' Owner: '\" + this.Owner.ObjectName + \"'>\"; }\r\n\r\n  public Delete(): void {\r\n    super.Delete();\r\n    this.Owner.RemoveAttribute(this);\r\n    this.Owner.ObjectBase.OnAttributeDeleted(this);\r\n    // this.Owner = null;\r\n    this._value = null;\r\n  }\r\n  public Load(je: any): SemTalkAttribute {\r\n    const tb = this.Owner.ObjectBase;\r\n    let aname: string = je.class;\r\n    if (je.class === undefined) {\r\n      aname = je.name;\r\n    }\r\n    if (aname !== undefined) {\r\n      let cl: ISemTalkAttributeType = SemTalkObject.getAttributeType(tb, aname);\r\n      this.SetClass(cl);\r\n    } else {\r\n      // tslint:disable-next-line:no-console\r\n      // console.debug(\"Load Attribute: \" + this.Owner.ObjectName + \" \" + je.class + \" Missing Class \" + JSON.stringify(je));\r\n    }\r\n    // if (je.defaultvalue !== undefined) {\r\n    this._value = je.defaultvalue;\r\n    // }\r\n    if (je.valuetype !== undefined) {\r\n      this.ValueType = tb.FindSemTalkValueType(je.valuetype);\r\n    }\r\n    if (je.min !== undefined) { this.Min = je.min; }\r\n    if (je.max !== undefined) { this.Max = je.max; }\r\n    if (je.islist !== undefined) { this.IsList = (je.islist === \"1\"); }\r\n    if (je.values !== undefined) {\r\n      this.Values = je.values.split(\"; \");\r\n    }\r\n    if (je.options !== undefined) {\r\n      this.Options = je.options.split(\"; \");\r\n    }\r\n    if (je.nohtml !== undefined) { this.NoHTML = (je.nohtml === \"1\"); }\r\n    if (je.required !== undefined) { this.Required = (je.required === \"1\"); }\r\n    if (je.group !== undefined) { this.Group = je.group; }\r\n    if (je.weight !== undefined) { this.Weight = je.weight; }\r\n    if (je.allowfreeform !== undefined) { this.AllowFreeForm = (je.allowfreeform === \"1\"); }\r\n    return this;\r\n  }\r\n  public LoadXML(element: HTMLElement): void {\r\n    super.LoadXML(element);\r\n    const tb = this.Owner.ObjectBase;\r\n    if (element.attributes) {\r\n      let aname = element.attributes.getNamedItem(\"class\")?.value;\r\n      if (aname === undefined) {\r\n        aname = element.attributes.getNamedItem(\"name\")?.value;\r\n      }\r\n      if (aname !== undefined) {\r\n        let cl: ISemTalkAttributeType = SemTalkObject.getAttributeType(tb, aname);\r\n        this.SetClass(cl);\r\n      } else {\r\n        // tslint:disable-next-line:no-console\r\n        // console.debug(\"Load Attribute: \" + this.Owner.ObjectName + \" \" + je.class + \" Missing Class \" + JSON.stringify(je));\r\n      }\r\n      let defaultvalue = element.attributes.getNamedItem(\"defaultvalue\")?.value;\r\n      if (defaultvalue !== undefined) {\r\n        this._value = defaultvalue;\r\n      }\r\n      let valuetype = element.attributes.getNamedItem(\"valuetype\")?.value;\r\n      if (valuetype !== undefined) {\r\n        this.ValueType = tb.FindSemTalkValueType(valuetype);\r\n      }\r\n      let min = element.attributes.getNamedItem(\"min\")?.value;\r\n      if (min !== undefined) { this.Min = Number(min); }\r\n      let max = element.attributes.getNamedItem(\"max\")?.value;\r\n      if (max !== undefined) { this.Max = Number(max); }\r\n      let islist = element.attributes.getNamedItem(\"islist\")?.value;\r\n      if (islist !== undefined) { this.IsList = (islist === \"1\"); }\r\n      let values = element.attributes.getNamedItem(\"values\")?.value;\r\n      if (values !== undefined) {\r\n        this.Values = values.split(\"; \");\r\n      }\r\n      let options = element.attributes.getNamedItem(\"options\")?.value;\r\n      if (options !== undefined) {\r\n        this.Options = options.split(\"; \");\r\n      }\r\n      let nohtml = element.attributes.getNamedItem(\"nohtml\")?.value;\r\n      if (nohtml !== undefined) { this.NoHTML = (nohtml === \"1\"); }\r\n      let required = element.attributes.getNamedItem(\"required\")?.value;\r\n      if (required !== undefined) { this.Required = (required === \"1\"); }\r\n      let group = element.attributes.getNamedItem(\"group\")?.value;\r\n      if (group !== undefined) { this.Group = group; }\r\n      let weight = element.attributes.getNamedItem(\"weight\")?.value;\r\n      if (weight !== undefined) { this.Weight = Number(weight); }\r\n      let allowfreeform = element.attributes.getNamedItem(\"allowfreeform\")?.value;\r\n      if (allowfreeform !== undefined) { this.AllowFreeForm = (allowfreeform === \"1\"); }\r\n\r\n\r\n    }\r\n  }\r\n  public Save(par: any[]): any {\r\n    // el.ObjectType = this.Owner.ObjectBase.SemTalkTypeName(this.ObjectType);\r\n    const el = super.Save(par);\r\n    // if (el.class === undefined) {\r\n    //   console.debug(this);\r\n    //   el.class = this.ClassOf().ObjectName;\r\n    // }\r\n    // el.owner = this._owner._name;\r\n    el.defaultvalue = this._value;\r\n    if (this.Min) { el.min = this.Min; }\r\n    if (this.Max) { el.max = this.Max; }\r\n    if (this.IsList) { el.islist = \"1\"; }\r\n\r\n    if (this.Values) {\r\n      let v = \"\";\r\n      let vl = this.Values;\r\n      for (const i in vl) {\r\n        v = v + vl[i] + \"; \";\r\n      }\r\n      if (v.length > 0) { v = v.substr(0, v.length - 2); }\r\n      if (v !== \"\") { el.values = v; }\r\n    }\r\n    if (this.Options) {\r\n      let v = \"\";\r\n      for (const vv of this.Options) {\r\n        v = v + vv + \"; \";\r\n      }\r\n      if (v.length > 0) { v = v.substr(0, v.length - 2); }\r\n      if (v !== \"\") { el.options = v; }\r\n    }\r\n    if (this.NoHTML) { el.nohtml = \"1\"; }\r\n    if (this.Required) { el.required = \"1\"; }\r\n    if (this.Weight) { el.weight = this.Weight; }\r\n    if (this.Group) { el.group = this.Group; }\r\n    if (!this.AllowFreeForm) { el.allowfreeform = \"0\"; }\r\n    if (this.ValueType !== undefined && this.ValueType !== SemTalkValueType.Symbol) {\r\n      const ob = this.Owner.ObjectBase;\r\n      // console.debug(\"Save VT\");\r\n      el.valuetype = \"http://www.semtalk.com/datatype#\" + ob.SemTalkValueTypeName(this.ValueType);\r\n    }\r\n    return el;\r\n  }\r\n  public SaveXML(xd: XMLDocument, el: HTMLElement): void {\r\n\r\n    super.SaveXML(xd, el);\r\n\r\n    if (this._value) el.setAttribute(\"defaultvalue\", this._value);\r\n    if (this.Min) { el.setAttribute(\"min\", String(this.Min)); }\r\n    if (this.Max) { el.setAttribute(\"max\", String(this.Max)); }\r\n    if (this.IsList) { el.setAttribute(\"islist\", \"1\"); }\r\n\r\n    if (this.Values) {\r\n      let v = \"\";\r\n      let vl = this.Values;\r\n      for (const i in vl) {\r\n        v = v + vl[i] + \"; \";\r\n      }\r\n      if (v.length > 0) { v = v.substr(0, v.length - 2); }\r\n      if (v !== \"\") { el.setAttribute(\"values\", v); }\r\n    }\r\n    if (this.Options) {\r\n      let v = \"\";\r\n      for (const vv of this.Options) {\r\n        v = v + vv + \"; \";\r\n      }\r\n      if (v.length > 0) { v = v.substr(0, v.length - 2); }\r\n      if (v !== \"\") { el.setAttribute(\"options\", v); }\r\n    }\r\n    if (this.NoHTML) { el.setAttribute(\"nohtml\", \"1\"); }\r\n    if (this.Required) { el.setAttribute(\"required\", \"1\"); }\r\n    if (this.Weight) { el.setAttribute(\"weight\", String(this.Weight)); }\r\n    if (this.Group) { el.setAttribute(\"group\", this.Group); }\r\n    if (!this.AllowFreeForm) { el.setAttribute(\"allowfreeform\", \"0\"); }\r\n    // if (this.ValueType !== undefined && this.ValueType !== SemTalkValueType.Symbol) {\r\n    if (this.ValueType !== undefined) {\r\n      const ob = this.Owner.ObjectBase;\r\n      // console.debug(\"Save VT\");\r\n      el.setAttribute(\"valuetype\", \"http://www.semtalk.com/datatype#\" + ob.SemTalkValueTypeName(this.ValueType));\r\n    }\r\n  }\r\n}\r\nexport class SemTalkAssociation extends SemTalkInstance implements ISemTalkAssociation {\r\n  constructor(cla: ISemTalkAssociationType, reltype: SemTalkRelation, fromobj: ISemTalkObject, toobj: ISemTalkObject, id: number) {\r\n    super(cla, cla.ObjectName + \".\" + id.toString(), SemTalkType.SemTalkAssociation, id);\r\n\r\n    this.ObjectType = SemTalkType.SemTalkAssociation;\r\n    fromobj.AddAssociation(this);\r\n    toobj.AddInvAssociation(this);\r\n    this.FromObject = fromobj;\r\n    this.ToObject = toobj;\r\n    this.RelationType = reltype;\r\n    this.FromObject.ObjectBase.OnAssociationAdded(this);\r\n  }\r\n  public ClassOf(): ISemTalkAssociationType { return super.ClassOf() as ISemTalkAssociationType; }\r\n  public FromObject: ISemTalkObject;\r\n  public ToObject: ISemTalkObject;\r\n  public RelationType = SemTalkRelation.SemTalkProperty;\r\n  public FromMin: number | null = null;\r\n  public FromMax: number | null = null;\r\n  public ToMin: number | null = null;\r\n  public ToMax: number | null = null;\r\n  public get PropValue(): ISemTalkObject { return this.ToObject; }\r\n  public get PropInvValue(): ISemTalkObject { return this.FromObject; }\r\n  public get PropValueName(): number { return this.ToObject.ID; }\r\n  public get PropValueCaption(): string { return this.ToObject.ID2NameNsp(); }\r\n  public get PropInvValueCaption(): string { return this.FromObject.ID2NameNsp(); }\r\n  public get PropName(): string { return this.ClassOf().ID2NameNsp(); }\r\n  public get PropType(): string { return \"Reference\"; }\r\n  public toString(): string {\r\n    return \"<\" + this.ObjectBase.SemTalkTypeName(this.ObjectType) + \" '\" + this.ObjectName\r\n      + \"' From: '\" + this.FromObject.ObjectName + \"' To: '\" + this.ToObject.ObjectName + \"'>\";\r\n  }\r\n  public Delete(): void {\r\n    this.ObjectBase.OnAssociationBeforeDeleted(this);\r\n    this.FromObject.RemoveAssociation(this);\r\n    this.ToObject.RemoveInvAssociation(this);\r\n    super.Delete();\r\n    this.ObjectBase.OnAssociationDeleted(this);\r\n  }\r\n  public Save(par: any[]): any {\r\n    const el = super.Save(par);\r\n    // if (this.ClassOf()) { el.class = this.ClassOf().ObjectName; }\r\n    if (this.ClassOf()) { el.text = this.ClassOf().ObjectName; }\r\n    el.type = this.ObjectBase.SemTalkRelationTypeName(this.RelationType);\r\n    el.ObjectType = this.ObjectBase.SemTalkTypeName(this.ObjectType);\r\n    // par[par.length] = el;\r\n    // el.owner = this._owner._name;\r\n    return el;\r\n  }\r\n  public SaveXML(xd: XMLDocument, el: HTMLElement): void {\r\n    super.SaveXML(xd, el);\r\n    if (this.ClassOf()) { el.setAttribute(\"text\", this.ClassOf().ObjectName); }\r\n    el.setAttribute(\"type\", this.ObjectBase.SemTalkRelationTypeName(this.RelationType));\r\n  }\r\n  public UpdateLabel(mastername?: string): ILabelSpec {\r\n    const lbl = super.UpdateLabel(mastername);\r\n    if (lbl.newtxt === this.ID2NameNsp() || lbl.newtxt === this.ClassOf().ObjectCaption) {\r\n      if (mastername === \"subClassOf_\") {\r\n        lbl.newtxt = \"\";\r\n      } else\r\n        if (this.FromObject.ObjectType !== SemTalkType.SemTalkClass && this.ToObject.ObjectType !== SemTalkType.SemTalkClass) {\r\n          lbl.newtxt = \"\";\r\n        }\r\n    }\r\n    return lbl;\r\n  }\r\n}\r\nexport class SemTalkSpecialization extends SemTalkAssociation implements ISemTalkSpecialization {\r\n  constructor(fromobj: ISemTalkClass, toobj: ISemTalkClass, id: number) {\r\n    const aname: string = SemTalkBaseConstant.SLSubClassOf;\r\n    let cla: ISemTalkAssociationType | null = null;\r\n    const at = fromobj.ObjectBase.FindAssociationType(aname);\r\n    if (at !== null) { cla = at as ISemTalkAssociationType; }\r\n    if (cla === null) {\r\n      cla = fromobj.ObjectBase.MakeAssociationType(SemTalkRelation.SemTalkSubClassOf, aname);\r\n      // cla.RelationType = SemTalkRelation.SemTalkSubClassOf;\r\n    }\r\n    super(cla, SemTalkRelation.SemTalkSubClassOf, fromobj, toobj, id);\r\n    this.RelationType = SemTalkRelation.SemTalkSubClassOf;\r\n    this.ObjectType = SemTalkType.SemTalkSpecialization;\r\n    let fo = this.FromObject as ISemTalkClass;\r\n    fo.ObjectBase.OnSubClassCreated(this);\r\n  }\r\n  public Delete(): void {\r\n    let toobj = this.ToObject;\r\n    let fromobj = this.FromObject as ISemTalkClass;\r\n    let sysc = toobj.SystemClass();\r\n\r\n    super.Delete();\r\n\r\n    if (sysc && sysc.ID !== toobj.ID) {\r\n      if (!fromobj.indeletion && !fromobj.IsParent(sysc)) {\r\n        fromobj.AddSubclassOf(sysc);\r\n      }\r\n    }\r\n    this.ObjectBase.OnSubClassDeleted(this);\r\n  }\r\n\r\n}\r\n","import {\n  IObjectBase,\n  ISemTalkLabels,\n  ISemTalkSystemClass,\n  ISemTalkLabel,\n  ISemTalkClassLabel,\n  ILabelSpec,\n  ISemTalkClass,\n  ISemTalkBusinessClass,\n  ISemTalkInstance,\n  ISemTalkAssociationType,\n  SemTalkType,\n  ISemTalkAttributeType,\n  SemTalkBaseConstant\n} from './Interface';\n// import { SemTalkSystemClass } from './SystemClass';\n// import { SemTalkAssociationType, SemTalkAttributeType } from './tbase';\n\n// tslint:disable:max-classes-per-file\n// tslint:disable:variable-name\n/* tslint:disable:member-ordering */\n/* tslint:disable:forin */\n\n\nexport class SemTalkLabels implements ISemTalkLabels {\n  constructor(own: ISemTalkSystemClass) {\n    //  this.ObjectBase = own.ObjectBase;\n    this.Owner = own;\n  }\n  public Owner: ISemTalkSystemClass;\n  public get ObjectBase(): IObjectBase { return this.Owner.ObjectBase; }\n  private _labels: { [id: string]: ISemTalkLabel } = {};\n  private _classlabels: { [id: string]: ISemTalkClassLabel } = {};\n  public ShowAname: boolean = false;\n  public ShowCAname: boolean = false;\n\n  public Delete(): void {\n    // for (const l of this.AllLabels()) {\n    //   l.Delete();\n    // }\n  }\n\n  public AddLabel(a: ISemTalkLabel): ISemTalkLabel {\n    this._labels[a.Master + \"*\" + a.Text] = a;\n    return a;\n  }\n  public RemoveLabel(a: ISemTalkLabel): void {\n    delete this._labels[a.Master + \"*\" + a.Text];\n  }\n  public AddClassLabel(a: ISemTalkClassLabel): ISemTalkClassLabel {\n    this._classlabels[a.Master + \"*\" + a.Text] = a;\n    return a;\n  }\n  public RemoveClassLabel(a: ISemTalkClassLabel): void {\n    delete this._classlabels[a.Master + \"*\" + a.Text];\n  }\n  public AllLabels(): ISemTalkLabel[] {\n    const alist: ISemTalkLabel[] = [];\n    for (const ai in this._labels) {\n      const a = this._labels[ai];\n      alist[alist.length] = a;\n    }\n    // for (const ai in this._classlabels) {\n    //   const a = this._classlabels[ai];\n    //   alist[alist.length] = a;\n    // }\n    return alist;\n  }\n\n  public Labels(mastername?: string): ISemTalkLabel[] {\n    const alist: ISemTalkLabel[] = [];\n    // let haslabel: boolean = false;\n    for (const ai in this._labels) {\n      // haslabel = true;\n      const a: ISemTalkLabel = this._labels[ai];\n      if (mastername === undefined) {\n        // if (a.Master === null) {\n        if (a.Master === \"\") {\n          alist.push(a);\n        }\n      } else\n        //   if (a.Master === \"\" || a.Master === mastername || this.Owner.ObjectName === a.Master) { // ?????\n        // if (a.Master === mastername || (a.Master === \"\" && this.Owner.ObjectName === mastername)) {\n        if (a.Master === mastername) {\n          alist.push(a);\n        }\n    }\n    // if (haslabel === false) {\n    //     for (const sc of this.Owner.SuperClasses()) {\n    //         if ((sc as tbase.SemTalkSystemClass).Labels(sc.ObjectName).length > 0) {\n    //             return (sc as tbase.SemTalkSystemClass).Labels(sc.ObjectName);\n    //         }\n    //     }\n    // }\n    return alist;\n  }\n  public AllInstanceLabels(): ISemTalkLabel[] {\n    const alist: ISemTalkLabel[] = [];\n    for (const ai in this._labels) {\n      const a: ISemTalkLabel = this._labels[ai];\n      alist.push(a);\n    }\n    return alist;\n  }\n\n  public ClassLabels(mastername?: string): ISemTalkClassLabel[] {\n    const alist: ISemTalkClassLabel[] = [];\n    for (const ai in this._classlabels) {\n      const a: ISemTalkLabel = this._classlabels[ai];\n      if (mastername === undefined) {\n        if (a.Master === \"\") {\n          alist.push(a);\n        }\n      } else\n        // if (a.Master === null || a.Master === mastername || this.Owner.ObjectName === mastername) { // ?????\n        if (a.Master === mastername || (a.Master === \"\" && this.Owner.ObjectName === mastername)) {\n          alist[alist.length] = a;\n        }\n    }\n    return alist;\n  }\n  public AllClassLabels(): ISemTalkClassLabel[] {\n    const alist: ISemTalkClassLabel[] = [];\n    for (const ai in this._classlabels) {\n      const a = this._classlabels[ai];\n      alist.push(a);\n    }\n    return alist;\n  }\n  public FindLabelForMaster(master: string, text?: string): ISemTalkLabel[] {\n    if (text !== undefined) {\n      let l = this._labels[master + \"*\" + text];\n      if (l !== undefined) {\n        return [l];\n      } else\n        return [];\n    } else {\n      const alist: ISemTalkLabel[] = [];\n      for (const ai in this._labels) {\n        const a = this._labels[ai];\n        if (a.Master === master) {\n          alist.push(a);\n        }\n      }\n      return alist;\n    }\n  }\n  public FindClassLabelForMaster(master: string, text?: string): ISemTalkClassLabel[] {\n    if (text !== undefined) {\n      let l = this._classlabels[master + \"*\" + text];\n      if (l !== undefined) {\n        return [l];\n      } else\n        return [];\n    } else {\n      const alist: ISemTalkClassLabel[] = [];\n      for (const ai in this._classlabels) {\n        const a = this._classlabels[ai];\n        if (a.Master === master) {\n          alist.push(a);\n        }\n      }\n      return alist;\n    }\n  }\n  public MakeLabel(text: string, master: string): ISemTalkLabel {\n    if (this._labels[master + \"*\" + text] !== undefined) { throw new Error(\"Duplicate Label :\" + master + \"*\" + text); }\n    if (text.indexOf(\"{\") < 1) {\n      // throw new Error(\"Bad Label no '{' :\" + text);\n    }\n\n    const lbl: ISemTalkLabel = new SemTalkLabel(this, text, master);\n    this.AddLabel(lbl);\n    return lbl;\n  }\n  public MakeClassLabel(text: string, master: string): ISemTalkClassLabel {\n    if (this._classlabels[master + \"*\" + text] !== undefined) { throw new Error(\"Duplicate Label :\" + master + \"*\" + text); }\n    // if (text.indexOf(\"{\") < 1) {\n    //     throw new Error(\"Bad Label no '{' :\" + text);\n    // }\n    const lbl: ISemTalkClassLabel = new SemTalkClassLabel(this, text, master);\n    this.AddClassLabel(lbl);\n    return lbl;\n    //}\n  }\n\n  public static SetField(lbl: ILabelSpec, lpos: string, txt: string): void {\n    switch (lpos) {\n      case \" Group\":\n        if (lbl.newtxt === \"\") { lbl.newtxt = txt; } else { lbl.newtxt = lbl.newtxt + \"<br/>\" + txt; }\n        break;\n      case \" 0\":\n        if (lbl.newtxt0 === \"\") { lbl.newtxt0 = txt; } else { lbl.newtxt0 = lbl.newtxt0 + \"<br/>\" + txt; }\n        break;\n      case \" 1\":\n        if (lbl.newtxt1 === \"\") { lbl.newtxt1 = txt; } else { lbl.newtxt1 = lbl.newtxt1 + \"<br/>\" + txt; }\n        break;\n      case \" 2\":\n        if (lbl.newtxt2 === \"\") { lbl.newtxt2 = txt; } else { lbl.newtxt2 = lbl.newtxt2 + \"<br/>\" + txt; }\n        break;\n      case \" 3\":\n        if (lbl.newtxt3 === \"\") {\n          lbl.newtxt3 = txt;\n        } else {\n          lbl.newtxt3 = lbl.newtxt3 + \"<br/>\" + txt;\n        }\n        break;\n      case \" 4\":\n        if (lbl.newtxt4 === \"\") { lbl.newtxt4 = txt; } else { lbl.newtxt4 = lbl.newtxt4 + \"<br/>\" + txt; }\n        break;\n      case \" 5\":\n        if (lbl.newtxt5 === \"\") {\n          lbl.newtxt5 = txt;\n        } else {\n          lbl.newtxt5 = lbl.newtxt5 + \"<br/>\" + txt;\n        }\n        break;\n      case \" 6\":\n        if (lbl.newtxt6 === \"\") { lbl.newtxt6 = txt; } else { lbl.newtxt6 = lbl.newtxt6 + \"<br/>\" + txt; }\n        break;\n      case \" 7\":\n        if (lbl.newtxt7 === \"\") { lbl.newtxt7 = txt; } else { lbl.newtxt7 = lbl.newtxt7 + \"<br/>\" + txt; }\n        break;\n      case \" 8\":\n        if (lbl.newtxt8 === \"\") { lbl.newtxt8 = txt; } else { lbl.newtxt8 = lbl.newtxt8 + \"<br/>\" + txt; }\n        break;\n      case \" 9\":\n        if (lbl.newtxt9 === \"\") { lbl.newtxt9 = txt; } else { lbl.newtxt9 = lbl.newtxt9 + \"<br/>\" + txt; }\n        break;\n      case \" 10\":\n        if (lbl.newtxt10 === \"\") { lbl.newtxt10 = txt; } else { lbl.newtxt10 = lbl.newtxt10 + \"<br/>\" + txt; }\n        break;\n    }\n  }\n\n\n  public CollectClassLabels(lbl: ILabelSpec, obj: ISemTalkClass, mastername?: string): boolean {\n    //   if (this._classlabels != null) {\n    let attributes = obj.AllAttributeTypes();\n\n    for (const l of this.ClassLabels(mastername)) {\n      lbl.haslabels = true;\n      let lx: string = l.Text;\n      let lpos: string = \" Group\";\n      let idx = lx.indexOf(\"{\");\n      if (idx > -1) {\n        lpos = lx.substr(idx + 1);\n        lx = lx.substr(0, idx);\n      }\n      // if (lx.indexOf(\"{\") > -1) {\n      //   lpos = lx.substr(lx.indexOf(\"{\") + 1);\n      //   lx = lx.substr(0, lx.indexOf(\"{\"));\n      // }\n      if (lx.indexOf(\"(\") > -1) {\n        lx = lx.substr(0, lx.indexOf(\"(\") - 1);\n      }\n      switch (lx) {\n        case \"Name\":\n          {\n            SemTalkLabels.SetField(lbl, lpos, obj.ID2NameNsp());\n            break;\n          }\n        case \"FullName\":\n          {\n            SemTalkLabels.SetField(lbl, lpos, obj.ObjectName);\n            break;\n          }\n        case \"Synonyms\":\n          {\n            for (const s of obj.Synonyms()) {\n              if (s.Language !== \"\") {\n                SemTalkLabels.SetField(lbl, lpos, s.Language + \": \" + s.Name);\n              } else {\n                SemTalkLabels.SetField(lbl, lpos, s.Name);\n              }\n            }\n            break;\n          }\n        case \"SystemClass\": {\n          const sc = obj.SystemClass() as ISemTalkSystemClass;\n          // if (sc !== null) {\n          SemTalkLabels.SetField(lbl, lpos, sc.ID2NameNsp());\n          // }\n          break;\n        }\n        case \"SuperClasses\":\n          {\n            for (const s of obj.SuperClasses()) {\n              SemTalkLabels.SetField(lbl, lpos, s.ID2NameNsp());\n            }\n            break;\n          }\n        case \"SubClasses\":\n          {\n            for (const s of obj.SubClasses()) {\n              SemTalkLabels.SetField(lbl, lpos, s.ID2NameNsp());\n            }\n            break;\n          }\n        case \"Links\":\n          {\n            for (const s of obj.Attachments()) {\n              SemTalkLabels.SetField(lbl, lpos, s.ToObject.ID2NameNsp());\n            }\n            break;\n          }\n        case \"Comment\": {\n          SemTalkLabels.SetField(lbl, lpos, obj.Comment);\n          break;\n        }\n        default: {\n          let fnd: boolean = false;\n          const attr = attributes.find((a) => a.ObjectName === lx);\n          //  const attr = obj.FindAttribute(lx);\n          if (attr !== undefined) {\n            fnd = true;\n            if (this.ShowCAname) {\n              SemTalkLabels.SetField(lbl, lpos, attr.ID2NameNsp() + \": \" + obj.GetValue(lx));\n            } else {\n              SemTalkLabels.SetField(lbl, lpos, obj.GetValue(lx));\n            }\n          }\n          if (!fnd) {\n            for (const s of obj.LinkedObjects(lx)) {\n              fnd = true;\n              if (this.ShowCAname) {\n                const a = obj.ObjectBase.FindAssociationType(lx) as ISemTalkAssociationType;\n                // if (a != null) {\n                SemTalkLabels.SetField(lbl, lpos, a.ID2NameNsp() + \": \" + s.ID2NameNsp());\n                // } else {\n                //   SemTalkLabels.SetField(lbl, lpos, s.ID2NameNsp());\n                // }\n              } else {\n                SemTalkLabels.SetField(lbl, lpos, s.ID2NameNsp());\n              }\n            }\n            // }\n            // if (!fnd) {\n            for (const s of obj.InvLinkedObjects(lx)) {\n              fnd = true;\n              if (this.ShowCAname) {\n                const a = obj.ObjectBase.FindAssociationType(lx) as ISemTalkAssociationType;\n                // if (a != null) {\n                SemTalkLabels.SetField(lbl, lpos, a.ID2NameNsp() + \": \" + s.ID2NameNsp());\n                // } else {\n                //   SemTalkLabels.SetField(lbl, lpos, s.ID2NameNsp());\n                // }\n              } else {\n                SemTalkLabels.SetField(lbl, lpos, s.ID2NameNsp());\n              }\n            }\n          }\n        }\n\n      }\n    }\n    return lbl.haslabels;\n    // } else {\n    //   return false;\n    // }\n    //    return false;\n  }\n  public CollectBusinessClassLabels(lbl: ILabelSpec, obj: ISemTalkBusinessClass, mastername?: string): boolean {\n    // return this._labels.CollectClassLabels(lbl, obj, mastername);\n    // const obj = obj1.ObjectBase.FindBusinessClass(obj1.ObjectName);\n\n    // if (this._labels != null && obj !== null) {\n    this.CollectClassLabels(lbl, obj, mastername);\n    for (const l of this.ClassLabels(mastername)) {\n      lbl.haslabels = true;\n      let lx: string = l.Text;\n      let lpos: string = \" Group\";\n      let idx = lx.indexOf(\"{\");\n      if (idx > -1) {\n        lpos = lx.substr(idx + 1);\n        lx = lx.substr(0, idx);\n      }\n      // if (lx.indexOf(\"{\") > -1) {\n      //   lpos = lx.substr(lx.indexOf(\"{\") + 1);\n      //   lx = lx.substr(0, lx.indexOf(\"{\"));\n      // }\n      if (lx.indexOf(\"(\") > -1) {\n        lx = lx.substr(0, lx.indexOf(\"(\") - 1);\n      }\n      switch (lx) {\n        case \"Methods\":\n          {\n            for (const s of obj.Methods()) {\n              SemTalkLabels.SetField(lbl, lpos, s.ClassOf().ID2NameNsp());\n            }\n            break;\n          }\n        case \"Attributes\":\n          {\n            for (const s of obj.Attributes()) {\n              SemTalkLabels.SetField(lbl, lpos, s.ClassOf().ID2NameNsp());\n            }\n            break;\n          }\n        case \"States\":\n          {\n            for (const s of obj.States()) {\n              SemTalkLabels.SetField(lbl, lpos, s.ClassOf().ID2NameNsp());\n            }\n            break;\n          }\n      }\n    }\n    return lbl.haslabels;\n    // } else {\n    //   return false;\n    // }\n  }\n\n  public builtinInstLabels: string[] = [\"Name\", \"FullName\", \"Synonyms\", \"Links\", \"Comment\", \"Class\", \"SystemClass\",\n    \"Probability\", \"UserNumber\", \"UserNumberAtFront\", \"NameAndUserNumber\", \"UserNumberAndName\"];\n\n  public builtinClassLabels: string[] = [\"Name\", \"FullName\", \"Synonyms\", \"Links\", \"Comment\", \"SystemClass\",\n    \"SuperClasses\", \"SubClasses\"];\n\n  public builtinBusinesClassLabels: string[] = [\"Methods\", \"Attributes\", \"States\"];\n\n  public CollectInstLabels(lbl: ILabelSpec, obj: ISemTalkInstance, mastername?: string): boolean {\n    //  if (this._labels != null) {\n    let lbls: ISemTalkLabel[] = this.Labels(mastername);\n\n    if (lbls.length === 0) {\n      lbls = this.Labels();\n    }\n    let attributes: ISemTalkAttributeType[] = [];\n    if (lbls.length > 0) attributes = obj.AllAttributeTypes();\n\n    for (const l of lbls) {\n      lbl.haslabels = true;\n      let lx: string = l.Text;\n      let lpos: string = \" Group\";\n      let idx = lx.indexOf(\"{\");\n      if (idx > -1) {\n        lpos = lx.substr(idx + 1);\n        lx = lx.substr(0, idx);\n      }\n      // if (lx.indexOf(\"{\") > -1) {\n      //   lpos = lx.substr(lx.indexOf(\"{\") + 1);\n      //   lx = lx.substr(0, lx.indexOf(\"{\"));\n      // }\n      if (lx.indexOf(\"(\") > -1) {\n        lx = lx.substr(0, lx.indexOf(\"(\") - 1);\n      }\n      switch (lx) {\n        case \"Name\":\n          {\n            SemTalkLabels.SetField(lbl, lpos, obj.ID2NameNsp());\n            break;\n          }\n        case \"FullName\":\n          {\n            SemTalkLabels.SetField(lbl, lpos, obj.ObjectName);\n            break;\n          }\n        case \"Synonyms\":\n          {\n            for (const s of obj.Synonyms()) {\n              if (s.Language !== \"\") {\n                SemTalkLabels.SetField(lbl, lpos, s.Language + \": \" + s.Name);\n              } else {\n                SemTalkLabels.SetField(lbl, lpos, s.Name);\n              }\n            }\n            break;\n          }\n        case \"Links\":\n          {\n            for (const s of obj.Attachments()) {\n              SemTalkLabels.SetField(lbl, lpos, s.ToObject.ID2NameNsp());\n            }\n            break;\n          }\n        case \"Comment\": {\n          SemTalkLabels.SetField(lbl, lpos, obj.Comment);\n          break;\n        }\n        case \"Class\": {\n          SemTalkLabels.SetField(lbl, lpos, obj.ClassOf().ID2NameNsp());\n          break;\n        }\n        case \"SystemClass\": {\n          const c = obj.ClassOf();\n          // if (c !== null) {\n          const sc = c.SystemClass() as ISemTalkSystemClass;\n          // if (sc !== null) {\n          SemTalkLabels.SetField(lbl, lpos, sc.ID2NameNsp());\n          // }\n          // }\n          break;\n        }\n        case \"Probability\": {\n          SemTalkLabels.SetField(lbl, lpos, obj.GetValue(\"Probability\") + \"%\");\n          break;\n        }\n        case \"UserNumber\": {\n          const un: string | null = obj.GetValue(SemTalkBaseConstant.SLUserNumber) as string;\n          if (lpos === \" Group\" && un !== null) {\n            SemTalkLabels.SetField(lbl, lpos, obj.ClassOf().ID2NameNsp() + \".\" + un);\n          } else {\n            if (un !== null) {\n              SemTalkLabels.SetField(lbl, lpos, un);\n            }\n          }\n          break;\n        }\n        case \"UserNumberAtFront\": {\n          const un: string = obj.GetValue(SemTalkBaseConstant.SLUserNumber) as string;\n          if (lpos === \" Group\" && un !== \"\") {\n            SemTalkLabels.SetField(lbl, lpos, un + \" \" + obj.ClassOf().ID2NameNsp());\n          } else {\n            SemTalkLabels.SetField(lbl, lpos, un);\n          }\n          break;\n        }\n        case \"NameAndUserNumber\": {\n          const un: string = obj.GetValue(SemTalkBaseConstant.SLUserNumber) as string;\n          if (un !== \"\" && un !== null) {\n            SemTalkLabels.SetField(lbl, lpos, obj.ClassOf().ID2NameNsp() + \".\" + un);\n          } else {\n            SemTalkLabels.SetField(lbl, lpos, obj.ClassOf().ID2NameNsp());\n          }\n          break;\n        }\n        case \"UserNumberAndName\": {\n          const un: string = obj.GetValue(SemTalkBaseConstant.SLUserNumber) as string;\n          if (un !== \"\" && un !== null) {\n            SemTalkLabels.SetField(lbl, lpos, un + \" \" + obj.ClassOf().ID2NameNsp());\n          } else {\n            SemTalkLabels.SetField(lbl, lpos, obj.ClassOf().ID2NameNsp());\n          }\n          break;\n        }\n        default: {\n          let fnd: boolean = false;\n          const attr = attributes.find((a) => a.ObjectName === lx);\n          //  const attr = obj.FindAttribute(lx);\n          if (attr !== undefined) {\n            fnd = true;\n            let v = obj.GetValue(lx);\n            if (v === null) v = \"\";\n            if (this.ShowAname) {\n              SemTalkLabels.SetField(lbl, lpos, attr.ID2NameNsp() + \": \" + v);\n            } else {\n              SemTalkLabels.SetField(lbl, lpos, v);\n            }\n          }\n          if (!fnd) {\n            for (const s of obj.LinkedObjects(lx)) {\n              fnd = true;\n              if (this.ShowAname === true) {\n                const a = obj.ObjectBase.FindAssociationType(lx) as ISemTalkAssociationType;\n                // if (a != null) {\n                SemTalkLabels.SetField(lbl, lpos, a.ID2NameNsp() + \": \" + s.ID2NameNsp());\n                // } else {\n                //   SemTalkLabels.SetField(lbl, lpos, s.ID2NameNsp());\n                //}\n              } else {\n                SemTalkLabels.SetField(lbl, lpos, s.ID2NameNsp());\n              }\n            }\n            // }\n            // if (!fnd) {\n            for (const s of obj.InvLinkedObjects(lx)) {\n              fnd = true;\n              if (this.ShowAname === true) {\n                const a = obj.ObjectBase.FindAssociationType(lx) as ISemTalkAssociationType;\n                //if (a != null) {\n                SemTalkLabels.SetField(lbl, lpos, a.ID2NameNsp() + \": \" + s.ID2NameNsp());\n                // } else {\n                //   SemTalkLabels.SetField(lbl, lpos, s.ID2NameNsp());\n                //}\n              } else {\n                SemTalkLabels.SetField(lbl, lpos, s.ID2NameNsp());\n              }\n            }\n          }\n        }\n      }\n    }\n    return lbl.haslabels;\n    // } else {\n    //   return false;\n    // }\n  }\n  public Load(je: any): void {\n\n    this.ShowAname = (je.ShowAName === \"1\");\n    this.ShowCAname = (je.ShowCAName === \"1\");\n\n    for (const i in je.labels) {\n      const a1: any = je.labels[i];\n      let m = a1.master;\n      const an1 = new SemTalkLabel(this, a1.name, m);\n      this.AddLabel(an1);\n      an1.Load(a1);\n    }\n    for (const i in je.classlabels) {\n      const a1: any = je.classlabels[i];\n      const an1 = new SemTalkClassLabel(this, a1.name, a1.master);\n      this.AddClassLabel(an1);\n      an1.Load(a1);\n    }\n    //}\n  }\n  public LoadXML(c: Element): void {\n\n  }\n\n  public Save(par: any): void {\n    // const el: any = {};\n    // el.ObjectType = \"Class\";\n    // par[par.length] = el;\n    // if (this._labels != null) {\n    if (this.ShowAname) { par.ShowAname = \"1\"; }\n    if (this.ShowCAname) { par.ShowCAname = \"1\"; }\n\n    const ml: any[] = [];\n    for (const l of this.AllLabels()) { l.Save(ml); }\n    par.labels = ml;\n    //}\n    // if (this._classlabels != null) {\n    const ml2: any[] = [];\n    for (const l of this.AllClassLabels()) {\n      // console.debug(l.Master);\n      l.Save(ml2);\n    }\n    par.classlabels = ml2;\n    // }\n    // if (par.classlabels !== undefined && par.classlabels.length>0)\n    //   console.debug(par);\n    // return el;\n  }\n  public SaveXML(xd: XMLDocument, el: HTMLElement): void {\n    if (this.ShowAname) { el.setAttribute(\"ShowAname\", \"1\"); }\n    if (this.ShowCAname) { el.setAttribute(\"ShowCAname\", \"1\"); }\n    for (const l of this.AllLabels()) {\n      let sy = xd.createElement(\"Label\");\n      el.appendChild(sy);\n      l.SaveXML(xd, sy);\n    }\n    for (const l of this.AllClassLabels()) {\n      let sy = xd.createElement(\"ClassLabel\");\n      el.appendChild(sy);\n      l.SaveXML(xd, sy);\n    }\n  }\n}\nexport class SemTalkLabel implements ISemTalkLabel {\n  constructor(owner: SemTalkLabels, text: string, mst: string) {\n    this.Owner = owner;\n    this.Master = mst;\n    this.Text = text;\n    return this;\n  }\n  public Owner: ISemTalkLabels;\n  public Master: string;\n  public Text: string;\n  public _type = SemTalkType.SemTalkLabel;\n  public Delete(): void {\n    this.Owner.RemoveLabel(this);\n  }\n  // tslint:disable-next-line:no-empty\n  public Load(je: any): void {\n  }\n  public LoadXML(c: Element): void {\n  }\n\n  public Save(par: any): void {\n    const el: any = {};\n    el.ObjectType = this.Owner.ObjectBase.SemTalkTypeName(this._type);\n    el.name = this.Text;\n    el.master = this.Master;\n    par.push(el);\n  }\n  public SaveXML(_xd: XMLDocument, el: HTMLElement): void {\n    el.setAttribute(\"name\", this.Text);\n    el.setAttribute(\"master\", this.Master);\n  }\n}\nexport class SemTalkClassLabel extends SemTalkLabel implements ISemTalkClassLabel {\n  constructor(owner: SemTalkLabels, text: string, mst: string) {\n    super(owner, text, mst);\n    owner.AddClassLabel(this);\n    return this;\n  }\n  // public Owner: ISemTalkLabels;\n  // public Master: string;\n  // public Text: string;\n  public _type = SemTalkType.SemTalkClassLabel;\n  public Delete(): void {\n    this.Owner.RemoveClassLabel(this);\n  }\n}\nexport class LabelSpec implements ILabelSpec {\n  public newtxt: string = \"\";\n  public newtxt0: string = \"\";\n  public newtxt1: string = \"\";\n  public newtxt2: string = \"\";\n  public newtxt3: string = \"\";\n  public newtxt4: string = \"\";\n  public newtxt5: string = \"\";\n  public newtxt6: string = \"\";\n  public newtxt7: string = \"\";\n  public newtxt8: string = \"\";\n  public newtxt9: string = \"\";\n  public newtxt10: string = \"\";\n  public isuml: boolean = false;\n  public slabel: boolean = false;\n  public nolayoutinfo: boolean = false;\n  public hasimage: boolean = false;\n  public haslabels: boolean = false;\n  public showimage: boolean = false;\n  public usegrphx: boolean = true;\n  public imgfile: string = \"\";\n  public col: string = \"\";\n  public pat: string = \"\";\n  public wei: string = \"\";\n}\n\n","import {\n  IObjectBase, ISemTalkTabSpecs, ISemTalkTabSpec,\n  ISemTalkGenericTabSpec, ISemTalkGenericAttributeTabSpec, ISemTalkSystemClass,\n  SemTalkType\n} from './Interface';\n\n\nexport class SemTalkTabSpecs implements ISemTalkTabSpecs {\n  constructor(own: ISemTalkSystemClass) {\n    this.Owner = own;\n  }\n  public Owner: ISemTalkSystemClass;\n  public get ObjectBase(): IObjectBase { return this.Owner.ObjectBase; }\n\n  private _tabspecs: { [id: string]: ISemTalkTabSpec } = {};\n  public AddTabSpec(a: ISemTalkTabSpec): ISemTalkTabSpec {\n    this._tabspecs[a.Text + \"_\" + a.IsClass] = a;\n    return a;\n  }\n  public RemoveTabSpec(a: ISemTalkTabSpec): void {\n    delete this._tabspecs[a.Text + \"_\" + a.IsClass];\n  }\n  public Delete(): void {\n    for (const l of this.TabSpecs()) {\n      l.Delete();\n    }\n  }\n  public Load(je: any): void {\n    if (je.tabspecs != null) {\n      for (const i in je.tabspecs) {\n        const a2: any = je.tabspecs[i];\n        switch (a2.ObjectType) {\n          case \"TabSpec\": {\n            let an = new SemTalkTabSpec(this, a2.name, (a2.class !== \"False\"));\n            if (an !== null) {\n              an.Load(a2);\n            }\n          }\n            break;\n          case \"GenericTabSpec\": {\n            let an = new SemTalkGenericTabSpec(this, a2.name, a2.relname, a2.toobj, (a2.isinst === \"1\"), (a2.isinv === \"1\"), (a2.isuni === \"1\"), (a2.class !== \"False\"));\n            if (an !== null) {\n              an.Load(a2);\n            }\n          }\n            break;\n          case \"GenericAttributeTabSpec\": {\n            let an = new SemTalkGenericAttributeTabSpec(this, a2.name, a2.group, a2.attributes, (a2.class !== \"False\"));\n            if (an !== null) {\n              an.Load(a2);\n            }\n          } break;\n        }\n      }\n    }\n  }\n  public LoadXML(element: HTMLElement): void {\n    const tabspecs = element.getElementsByTagName(\"TabSpec\");\n    for (const i in tabspecs) {\n      const tab = tabspecs[i];\n      if (tab.attributes) {\n\n        const name = tab.attributes.getNamedItem(\"name\")?.value;\n        const ObjectType = tab.attributes.getNamedItem(\"ObjectType\")?.value;\n        if (name) {\n          switch (ObjectType) {\n            case \"TabSpec\": {\n              let an = new SemTalkTabSpec(this, name, false);\n              if (an !== null) {\n                an.LoadXML(tab);\n              }\n              break;\n            }\n            case \"GenericTabSpec\": {\n              const relname = tab.attributes.getNamedItem(\"relname\")?.value;\n              const toobj = tab.attributes.getNamedItem(\"toobj\")?.value;\n              if (relname && toobj) {\n                let an = new SemTalkGenericTabSpec(this, name, relname, toobj,\n                  true, false, false, false);\n                if (an !== null) {\n                  an.LoadXML(tab);\n                }\n              }\n              break;\n            }\n            case \"GenericAttributeTabSpec\": {\n              let an = new SemTalkGenericAttributeTabSpec(this, name, \"\", [], false);\n              if (an !== null) {\n                an.LoadXML(tab);\n              }\n              break;\n            } \n          }\n        }\n      }\n    }\n  }\n  public Save(el: any): any {\n    if (this._tabspecs != null) {\n      const ml: any[] = [];\n      const tl = this.TabSpecs();\n      // if (tl.length>0)\n      //   console.debug(this._tabspecs);\n      for (const x of tl) {\n        x.Save(ml);\n      }\n      el.tabspecs = ml;\n    }\n    return el;\n  }\n  public SaveXML(xd: XMLDocument, el: HTMLElement): void {\n    if (this._tabspecs != null) {\n      const tl = this.TabSpecs();\n      for (const x of tl) {\n        let sy = xd.createElement(\"TabSpec\");\n        el.appendChild(sy);\n        x.SaveXML(xd, sy);\n      }\n\n    }\n  }\n  public TabSpecs(): ISemTalkTabSpec[] {\n    const alist: ISemTalkTabSpec[] = [];\n    for (const index in this._tabspecs) {\n      const x = this._tabspecs[index];\n      alist.push(x);\n    }\n    return alist;\n  }\n  public TabInstanceSpecs(): ISemTalkTabSpec[] {\n    const alist: ISemTalkTabSpec[] = [];\n    for (const index in this._tabspecs) {\n      const x = this._tabspecs[index];\n      if (!x.IsClass && x.ObjectType !== SemTalkType.SemTalkGenericTabSpec && x.ObjectType !== SemTalkType.SemTalkGenericAttributeTabSpec) {\n        alist[alist.length] = x;\n      }\n    }\n    return alist;\n  }\n\n  public FindTabSpec(aname: string): ISemTalkTabSpec | null {\n    for (const index in this._tabspecs) {\n      const a = this._tabspecs[index];\n      if (a.Text === aname) { return a; }\n    }\n    return null;\n  }\n  public TabClassSpecs(): ISemTalkTabSpec[] {\n    const alist: ISemTalkTabSpec[] = [];\n    for (const index in this._tabspecs) {\n      const x = this._tabspecs[index];\n      if (x.IsClass && x.ObjectType !== SemTalkType.SemTalkGenericTabSpec && x.ObjectType !== SemTalkType.SemTalkGenericAttributeTabSpec) {\n        alist[alist.length] = x;\n      }\n    }\n    return alist;\n  }\n  public GenericTabSpecs(): ISemTalkGenericTabSpec[] {\n    const alist: ISemTalkGenericTabSpec[] = [];\n    for (const index in this._tabspecs) {\n      const x = this._tabspecs[index];\n      if (!x.IsClass && x.ObjectType === SemTalkType.SemTalkGenericTabSpec) {\n        alist[alist.length] = x as SemTalkGenericTabSpec;\n      }\n    }\n    return alist;\n  }\n  public GenericTabClassSpecs(): ISemTalkGenericTabSpec[] {\n    const alist: ISemTalkGenericTabSpec[] = [];\n    for (const index in this._tabspecs) {\n      const x = this._tabspecs[index];\n      if (x.IsClass && x.ObjectType === SemTalkType.SemTalkGenericTabSpec) {\n        alist[alist.length] = x as SemTalkGenericTabSpec;\n      }\n    }\n    return alist;\n  }\n  public GenericAttributeTabSpecs(): ISemTalkGenericAttributeTabSpec[] {\n    const alist: SemTalkGenericAttributeTabSpec[] = [];\n    for (const index in this._tabspecs) {\n      const x = this._tabspecs[index];\n      if (!x.IsClass && x.ObjectType === SemTalkType.SemTalkGenericAttributeTabSpec) {\n        alist[alist.length] = x as SemTalkGenericAttributeTabSpec;\n      }\n    }\n    return alist;\n  }\n  public GenericAttributeTabClassSpecs(): ISemTalkGenericAttributeTabSpec[] {\n    const alist: SemTalkGenericAttributeTabSpec[] = [];\n    for (const index in this._tabspecs) {\n      const x = this._tabspecs[index];\n      if (x.IsClass && x.ObjectType === SemTalkType.SemTalkGenericAttributeTabSpec) {\n        alist[alist.length] = x as SemTalkGenericAttributeTabSpec;\n      }\n    }\n    return alist;\n  }\n  public MakeTabSpec(text: string, isclass: boolean): ISemTalkTabSpec {\n    let a = this.FindTabSpec(text);\n    if (a == null) {\n      // tslint:disable-next-line: no-use-before-declare\n      a = new SemTalkTabSpec(this, text, isclass);\n    }\n    if (a.IsClass !== isclass) {\n      throw new Error((\"MakeTabSpec: There is already a TabSpec of different type named: \" + text));\n    }\n    return a;\n  }\n  public MakeGenericTabSpec(text: string, relname: string, toobj: string, isinst: boolean, isinv: boolean, isuni: boolean, isclass: boolean): SemTalkGenericTabSpec {\n    let a = this.FindTabSpec(text);\n    if (a == null) {\n      // tslint:disable-next-line: no-use-before-declare\n      a = new SemTalkGenericTabSpec(this, text, relname, toobj, isinst, isinv, isuni, isclass);\n    }\n    if (a.IsClass !== isclass || a.ObjectType !== SemTalkType.SemTalkGenericTabSpec) {\n      throw new Error((\"MakeGenericTabSpec: There is already a TabSpec of different type named: \" + text));\n    }\n    return a as SemTalkGenericTabSpec;\n  }\n  public MakeGenericAttributeTabSpec(text: string, group: string, attributes: string[], isclass: boolean): ISemTalkGenericAttributeTabSpec {\n    let a = this.FindTabSpec(text);\n    if (a == null) {\n      // tslint:disable-next-line: no-use-before-declare\n      a = new SemTalkGenericAttributeTabSpec(this, text, group, attributes, isclass);\n    } else {\n    }\n    if (a.IsClass !== isclass || a.ObjectType !== SemTalkType.SemTalkGenericAttributeTabSpec) {\n      throw new Error((\"MakeGenericAttributeTabSpec: There is already a TabSpec of different type named: \" + text));\n    } else {\n      let ats: ISemTalkGenericAttributeTabSpec = a as ISemTalkGenericAttributeTabSpec;\n      ats.Group = group;\n      ats.Attributes = attributes;\n    }\n    return a as ISemTalkGenericAttributeTabSpec;\n  }\n\n}\nexport class SemTalkTabSpec implements ISemTalkTabSpec {\n  constructor(owner: ISemTalkTabSpecs, text: string, isclass: boolean) {\n    this.Owner = owner;\n    this.IsClass = isclass;\n    this.Visible = true;\n    this.Text = text;\n    owner.AddTabSpec(this);\n  }\n  public Owner: ISemTalkTabSpecs;\n  public IsClass: boolean;\n  public Text: string;\n  public ObjectType = SemTalkType.SemTalkTabSpec;\n  public Visible: boolean;\n\n  public Delete(): void {\n    this.Owner.RemoveTabSpec(this);\n    // delete this.Owner._tabspecs[this.Text + \"&\" + this.IsClass];\n  }\n  public toString(): string {\n    return \"<\" + this.Owner.ObjectBase.SemTalkTypeName(this.ObjectType) + \" \" + this.Text + \" isclass: \" + this.IsClass + \">\";\n  }\n  public Load(je: any): void {\n    this.Text = je.name;\n    this.IsClass = (je.class === \"True\");\n    this.Visible = (je.visible !== \"False\");\n  }\n  public Save(par: any[]): any {\n    const el: any = {};\n    el.ObjectType = this.Owner.ObjectBase.SemTalkTypeName(this.ObjectType);\n    par.push(el);\n    el.name = this.Text;\n    if (this.IsClass) { el.class = \"True\"; }\n    if (!this.Visible) { el.visible = \"False\"; }\n    return el;\n  }\n  public SaveXML(_xd: XMLDocument, el: HTMLElement): void {\n    el.setAttribute(\"name\", this.Text);\n    if (this.IsClass) { el.setAttribute(\"class\", \"True\"); }\n    if (!this.Visible) { el.setAttribute(\"visible\", \"False\"); }\n  }\n  public LoadXML(element: Element): void {\n    if (element.attributes) {\n      const name = element.attributes.getNamedItem(\"name\")?.value;\n      if (name) this.Text = name;\n      const isclass = (element.attributes.getNamedItem(\"class\")?.value === \"True\");\n      if (isclass) this.IsClass = isclass;\n      const visible = (element.attributes.getNamedItem(\"visible\")?.value === \"True\");\n      if (!visible) this.Visible = isclass;\n    }\n  }\n}\nexport class SemTalkGenericTabSpec extends SemTalkTabSpec implements ISemTalkGenericTabSpec {\n  constructor(owner: ISemTalkTabSpecs, text: string, relname: string, toobj: string, isinst: boolean, isinv: boolean, isuni: boolean, isclass: boolean) {\n    super(owner, text, isclass);\n    this.ObjectType = SemTalkType.SemTalkGenericTabSpec;\n    this.Relname = relname;\n    this.Toobj = toobj;\n    this.IsInst = isinst;\n    this.IsInv = isinv;\n    this.IsUni = isuni;\n  }\n  public Relname: string;\n  public Toobj: string;\n  public IsInst: boolean;\n  public IsInv: boolean;\n  public IsUni: boolean;\n\n  public Load(je: any): void {\n    this.Relname = je.relname;\n    this.IsInst = (je.isinst === \"1\");\n    this.IsInv = (je.isinv === \"1\");\n    this.IsUni = (je.isuni === \"1\");\n    this.Toobj = je.Toobj;\n  }\n  public LoadXML(element: Element): void {\n    if (element.attributes) {\n      const relname = element.attributes.getNamedItem(\"relname\")?.value;\n      if (relname) this.Relname = relname;\n      const isinst = (element.attributes.getNamedItem(\"isinst\")?.value === \"1\");\n      if (isinst) this.IsInst = isinst;\n      const isinv = (element.attributes.getNamedItem(\"isinv\")?.value === \"1\");\n      if (isinv) this.IsInv = isinv;\n      const isuni = (element.attributes.getNamedItem(\"isuni\")?.value === \"1\");\n      if (isuni) this.IsUni = isuni;\n      const Toobj = element.attributes.getNamedItem(\"Toobj\")?.value;\n      if (Toobj) this.Toobj = Toobj;\n    }\n  }\n\n  public Save(par: any[]): any {\n    const el: any = super.Save(par);\n    el.ObjectType = this.Owner.ObjectBase.SemTalkTypeName(this.ObjectType);\n    // par[par.length] = el;\n    el.relname = this.Relname;\n    if (this.IsInst) { el.isinst = \"1\"; }\n    if (this.IsInv) { el.isinv = \"1\"; }\n    if (this.IsUni) { el.isuni = \"1\"; }\n    if (this.Toobj) { el.Toobj = this.Toobj; }\n    return el;\n  }\n  public SaveXML(xd: XMLDocument, el: HTMLElement): void {\n    super.SaveXML(xd, el);\n    el.setAttribute(\"relname\", this.Relname);\n    if (this.IsInst) { el.setAttribute(\"isinst\", \"1\"); }\n    if (this.IsInv) { el.setAttribute(\"isinv\", \"1\"); }\n    if (this.IsUni) { el.setAttribute(\"isuni\", \"1\"); }\n    if (this.Toobj) { el.setAttribute(\"Toobj\", this.Toobj); }\n  }\n}\nexport class SemTalkGenericAttributeTabSpec extends SemTalkTabSpec implements ISemTalkGenericAttributeTabSpec {\n  constructor(owner: ISemTalkTabSpecs, text: string, group: string, attributes: string[], isclass: boolean) {\n    super(owner, text, isclass);\n    this.ObjectType = SemTalkType.SemTalkGenericAttributeTabSpec;\n    this.Group = group;\n    this.Attributes = attributes;\n  }\n  public Group: string;\n  public Attributes: string[];\n  public Load(je: any): void {\n    this.Group = je.group;\n    this.Attributes = je.attributes;\n  }\n  public LoadXML(element: Element): void {\n    if (element.attributes) {\n      const group = element.attributes.getNamedItem(\"group\")?.value;\n      if (group) this.Group = group;\n      const attributes = element.attributes.getNamedItem(\"attributes\")?.value;\n      if (attributes) this.Attributes = attributes.split(\",\");\n    }\n  }\n\n\n  public Save(par: any[]): any {\n    const el: any = super.Save(par);\n    el.ObjectType = this.Owner.ObjectBase.SemTalkTypeName(this.ObjectType);\n    // par[par.length] = el;\n    el.group = this.Group;\n    el.attributes = this.Attributes;\n    return el;\n  }\n  public SaveXML(xd: XMLDocument, el: HTMLElement): void {\n    super.SaveXML(xd, el);\n    el.setAttribute(\"group\", this.Group);\n    if (this.Attributes) {\n      el.setAttribute(\"attributes\", this.Attributes.join(', '));\n    }\n  }\n}\n\n","import { Process_ElementName } from \"../semtalklistener/processInterface\";\nimport {\n  IObjectBase,\n  ILabelSpec,\n  ISemTalkClass,\n  ISemTalkAssociationType,\n  ISemTalkInstance,\n  ISemTalkSystemClass,\n  ISemTalkInstDialog,\n  ISemTalkTabSpecs,\n  ISemTalkTabSpec,\n  ISemTalkLabels,\n  ISemTalkLabel,\n  ISemTalkClassLabel,\n  SemTalkRelation,\n  SemTalkType,\n  SemTalkConnectionPoint,\n  ModelAttribute\n} from \"./Interface\";\n\nimport { SemTalkLabels } from \"./Label\";\nimport { SemTalkTabSpecs } from \"./TabSpec\";\nimport { SemTalkClass } from \"./Tbase\";\n\nexport class SemTalkInstDialog implements ISemTalkInstDialog {\n  public CheckGeneral: boolean = true;\n  public CheckNamespace: boolean = false;\n  public CheckClass: boolean = false;\n  public CheckMethods: boolean = false;\n  public CheckAttributes: boolean = false;\n  public CheckAssociations: boolean = false;\n  public CheckSynonyms: boolean = false;\n  public CheckAttachments: boolean = false;\n  public CheckStates: boolean = false;\n  public CheckAudit: boolean = true;\n}\nexport class SemTalkClassDialog {\n  public CheckGeneral: boolean = true;\n  public CheckNamespace: boolean = true;\n  public CheckMethods: boolean = false;\n  public CheckAttributes: boolean = true;\n  public CheckAssociations: boolean = true;\n  public CheckSynonyms: boolean = true;\n  public CheckAttachments: boolean = true;\n  public CheckStates: boolean = false;\n  public CheckAudit: boolean = true;\n  public CheckSharePoint: boolean = false;\n  public CheckRefinement: boolean = false;\n  public CheckDSN: boolean = false;\n}\n\nexport class SemTalkSystemClass extends SemTalkClass implements ISemTalkSystemClass {\n  constructor(tb: IObjectBase, newname: string, id?: number | null) {\n    super(tb, newname, id);\n    this._tabspecs = new SemTalkTabSpecs(this);\n    this._labels = new SemTalkLabels(this);\n    return this;\n  }\n  public InstIcon: number = 4;\n  public ClassIcon: number = 0;\n  public Hide: boolean = false;\n  public OnceOnly: boolean = false;\n  public BottomUp: boolean = false;\n  public BottomUpSubclasses: boolean = false;\n  public Composeable: boolean = false;\n  public Refineable: boolean = true;\n  public HyperlinksEnabled: boolean = false;\n  public IsSystemClass = true;\n  public ShowLabel: boolean = true;\n  public Style: string = \"\";\n  public ShapeHTML: string = \"\";\n  public RefinementOfClass: boolean = false;\n  public HideInClassDiagram: boolean = false;\n  public InstDialog: SemTalkInstDialog | null = null;\n  public ClassDialog: SemTalkClassDialog | null = null; // new tbase.SemTalkClassDialog()\n  public SharepointGoodlist: string = \"\";\n\n  public SystemClass(): ISemTalkSystemClass {\n    return this;\n  }\n  public Delete(): void {\n    this.ObjectBase.OnClassBeforeDeleted(this);\n    super.Delete();\n    delete this.ObjectBase._classes[this.ID + \"_\"];\n    // for (const l of this.AllLabels()) { l.Delete(); }\n    if (this._labels !== null) {\n      this._labels.Delete();\n    }\n    // for (const l of this.TabSpecs()) { l.Delete(); }\n    if (this._tabspecs !== null) {\n      this._tabspecs.Delete();\n    }\n    this.ObjectBase.OnClassDeleted(this);\n  }\n\n  private _tabspecs: ISemTalkTabSpecs;\n  public TabSpecDefinitions(): ISemTalkTabSpecs {\n    return this._tabspecs;\n  }\n  public TabSpecs(): ISemTalkTabSpec[] {\n    return this._tabspecs.TabSpecs();\n  }\n  public ClassTabSpecs(): ISemTalkTabSpec[] {\n    return this._tabspecs.TabClassSpecs();\n  }\n  public InstanceTabSpecs(): ISemTalkTabSpec[] {\n    return this._tabspecs.TabInstanceSpecs();\n  }\n  public FindTabSpec(aname: string): ISemTalkTabSpec | null {\n    return this._tabspecs.FindTabSpec(aname);\n  }\n\n  private _labels: ISemTalkLabels;\n\n  public Labels(mastername?: string): ISemTalkLabel[] {\n    return this._labels.Labels(mastername);\n  }\n  public AllInstanceLabels(): ISemTalkLabel[] {\n    return this._labels.AllInstanceLabels();\n  }\n  public ClassLabels(mastername?: string): ISemTalkClassLabel[] {\n    return this._labels.ClassLabels(mastername);\n  }\n  public AllClassLabels(): ISemTalkClassLabel[] {\n    return this._labels.AllClassLabels();\n  }\n  public MakeLabel(text: string, master: string): ISemTalkLabel {\n    return this._labels.MakeLabel(text, master);\n  }\n  public MakeClassLabel(text: string, master: string): ISemTalkClassLabel {\n    return this._labels.MakeClassLabel(text, master);\n  }\n  public AllLabels(): ISemTalkLabel[] {\n    return this._labels.AllLabels();\n  }\n  public FindLabelForMaster(master: string, text?: string): ISemTalkLabel[] {\n    return this._labels.FindLabelForMaster(master, text);\n  }\n  public FindClassLabelForMaster(master: string, text?: string): ISemTalkClassLabel[] {\n    return this._labels.FindClassLabelForMaster(master, text);\n  }\n  public AllSystemSubClasses(): ISemTalkSystemClass[] {\n    const alist: ISemTalkSystemClass[] = [];\n    const fnd: any = {};\n    const ptype = SemTalkRelation.SemTalkSubClassOf;\n    function allsubclassesrec(cl: ISemTalkSystemClass): void {\n      for (const x of cl.InvAssociations()) {\n        if (x.ClassOf().RelationType === ptype && x.FromObject instanceof SemTalkSystemClass) {\n          if (fnd[x.FromObject.ObjectName] === undefined) {\n            fnd[x.FromObject.ObjectName] = x.FromObject;\n            alist.push(x.FromObject as ISemTalkSystemClass);\n            allsubclassesrec(x.FromObject as ISemTalkSystemClass);\n          }\n        }\n      }\n    }\n    allsubclassesrec(this);\n    return alist;\n  }\n\n  public get ShowAname(): boolean {\n    return this._labels.ShowAname;\n  }\n  public set ShowAname(b: boolean) {\n    this._labels.ShowAname = b;\n  }\n  public get ShowCAname(): boolean {\n    return this._labels.ShowCAname;\n  }\n  public set ShowCAname(b: boolean) {\n    this._labels.ShowCAname = b;\n  }\n  public BuiltinInstLabels(): string[] {\n    return this._labels.builtinInstLabels;\n  }\n  public BuiltinClassLabels(): string[] {\n    return this._labels.builtinInstLabels;\n  }\n  public BuiltinBusinesClassLabels(): string[] {\n    return this._labels.builtinBusinesClassLabels;\n  }\n  public AllValidClassRelations(dst: ISemTalkSystemClass): ISemTalkAssociationType[] {\n    let bmode = this.ObjectBase.GetModelAttribute(ModelAttribute.BPMNMode);\n    if (bmode && bmode === \"1\") {\n      const ob = this.ObjectBase;\n      const task = ob.GetModelAttribute(Process_ElementName.SLActivity);\n      const event = ob.GetModelAttribute(Process_ElementName.SLEvent);\n      const gateway = ob.GetModelAttribute(Process_ElementName.SLDecision);\n      const buffer = ob.GetModelAttribute(Process_ElementName.SLBuffer);\n      // const dataobject = ob.GetModelAttribute(Process_ElementName.SLDataObject);\n      switch (this.ObjectName) {\n        case task: {\n          switch (dst.ObjectName) {\n            case gateway:\n              return [ob.FindAssociationType(ob.GetModelAttribute(Process_ElementName.SLControl)) as ISemTalkAssociationType];\n            case event:\n            case task:\n              return [ob.FindAssociationType(ob.GetModelAttribute(Process_ElementName.SLMessageFlow)) as ISemTalkAssociationType,\n              ob.FindAssociationType(ob.GetModelAttribute(Process_ElementName.SLControl)) as ISemTalkAssociationType];\n            case buffer:\n              return [ob.FindAssociationType(ob.GetModelAttribute(Process_ElementName.SLMessageFlow)) as ISemTalkAssociationType];\n          }\n          break;\n        }\n        case event: {\n          switch (dst.ObjectName) {\n            case gateway:\n              return [ob.FindAssociationType(ob.GetModelAttribute(Process_ElementName.SLControl)) as ISemTalkAssociationType];\n            case event:\n            case task:\n              return [ob.FindAssociationType(ob.GetModelAttribute(Process_ElementName.SLMessageFlow)) as ISemTalkAssociationType,\n              ob.FindAssociationType(ob.GetModelAttribute(Process_ElementName.SLControl)) as ISemTalkAssociationType];\n          }\n          break;\n        }\n        case gateway: {\n          switch (dst.ObjectName) {\n            case gateway:\n            case event:\n            case task:\n              return [ob.FindAssociationType(ob.GetModelAttribute(Process_ElementName.SLControl)) as ISemTalkAssociationType];\n          }\n          break;\n        }\n        case buffer: {\n          switch (dst.ObjectName) {\n            case task:\n              return [ob.FindAssociationType(ob.GetModelAttribute(Process_ElementName.SLMessageFlow)) as ISemTalkAssociationType];\n            default:\n              return [];\n          }\n        }\n      }\n    }\n    if (this.ObjectName === this.ObjectBase.GetModelAttribute(ModelAttribute.SLComment)) {\n      const ob = this.ObjectBase;\n      return [ob.FindAssociationType(ob.GetModelAttribute(ModelAttribute.SLCommentOf)) as ISemTalkAssociationType];\n    }\n    return super.AllValidClassRelations(dst);\n  }\n\n  public InitInstDialog(): ISemTalkInstDialog {\n    this.InstDialog = new SemTalkInstDialog();\n    return this.InstDialog;\n  }\n  public Load(je: any): void {\n    super.Load(je);\n\n    this.IsSystemClass = (je.SystemClass === \"True\");\n    this.ShowLabel = (je.ShowLabel === \"1\");\n    if (je.style) this.Style = je.style;\n    if (je.html) this.ShapeHTML = je.html;\n    this.Hide = (je.Hide === \"1\");\n    this.OnceOnly = (je.OnceOnly === \"1\");\n    this.BottomUp = (je.BottomUp === \"1\");\n    this.BottomUpSubclasses = (je.BottomUpSubclasses === \"1\");\n    this.Composeable = (je.Composeable === \"1\");\n    this.Refineable = (je.Refineable === \"1\");\n    this.RefinementOfClass = (je.RefinementOfClass === \"1\");\n    this.HideInClassDiagram = (je.hideInClassDiagram === \"1\");\n\n    if (je.LocalInstDialog === \"1\") {\n      this.InstDialog = new SemTalkInstDialog();\n      if (je.CheckGeneral !== undefined) { this.InstDialog.CheckGeneral = (je.CheckGeneral === \"1\"); }\n      if (je.CheckNamespace !== undefined) { this.InstDialog.CheckNamespace = (je.CheckNamespace === \"1\"); }\n      if (je.CheckClass !== undefined) { this.InstDialog.CheckClass = (je.CheckClass === \"1\"); }\n      if (je.CheckMethods !== undefined) { this.InstDialog.CheckMethods = (je.CheckMethods === \"1\"); }\n      if (je.CheckAttributes !== undefined) { this.InstDialog.CheckAttributes = (je.CheckAttributes === \"1\"); }\n      if (je.CheckAssociations !== undefined) { this.InstDialog.CheckAssociations = (je.CheckAssociations === \"1\"); }\n      if (je.CheckSynonyms !== undefined) { this.InstDialog.CheckSynonyms = (je.CheckSynonyms === \"1\"); }\n      if (je.CheckStates !== undefined) { this.InstDialog.CheckStates = (je.CheckStates === \"1\"); }\n      if (je.CheckAudit !== undefined) { this.InstDialog.CheckAudit = (je.CheckAudit === \"1\"); }\n    }\n    if (je.LocalClassDialog === \"1\") {\n      this.ClassDialog = new SemTalkClassDialog();\n      if (je.CheckGeneralClass !== undefined) { this.ClassDialog.CheckGeneral = (je.CheckGeneralClass === \"1\"); }\n      if (je.CheckNamespaceClass !== undefined) { this.ClassDialog.CheckNamespace = (je.CheckNamespaceClass === \"1\"); }\n      if (je.CheckMethodsClass !== undefined) { this.ClassDialog.CheckMethods = (je.CheckMethodsClass === \"1\"); }\n      if (je.CheckAttributesClass !== undefined) { this.ClassDialog.CheckAttributes = (je.CheckAttributesClass === \"1\"); }\n      if (je.CheckAssociationsClass !== undefined) { this.ClassDialog.CheckAssociations = (je.CheckAssociationsClass === \"1\"); }\n      if (je.CheckSynonymsClass !== undefined) { this.ClassDialog.CheckSynonyms = (je.CheckSynonymsClass === \"1\"); }\n      if (je.CheckStatesClass !== undefined) { this.ClassDialog.CheckStates = (je.CheckStatesClass === \"1\"); }\n      if (je.CheckAuditClass !== undefined) { this.ClassDialog.CheckAudit = (je.CheckAuditClass === \"1\"); }\n      if (je.CheckSharePoint !== undefined) { this.ClassDialog.CheckSharePoint = (je.CheckSharePoint === \"1\"); }\n      if (je.CheckRefinement !== undefined) { this.ClassDialog.CheckRefinement = (je.CheckRefinement === \"1\"); }\n      if (je.CheckDSN !== undefined) { this.ClassDialog.CheckDSN = (je.CheckDSN === \"1\"); }\n    }\n\n    this._labels.Load(je);\n    this._tabspecs.Load(je);\n  }\n  public LoadXML(element: Element): void {\n    super.LoadXML(element);\n    if (element.attributes) {\n      // const tb = this.ObjectBase;\n      let SystemClass = element.attributes.getNamedItem(\"SystemClass\")?.value;\n      if (SystemClass !== undefined) { this.IsSystemClass = (SystemClass === \"True\"); }\n      let ShowLabel = element.attributes.getNamedItem(\"ShowLabel\")?.value;\n      if (ShowLabel !== undefined) { this.ShowLabel = (ShowLabel === \"1\"); }\n      let style = element.attributes.getNamedItem(\"style\")?.value;\n      if (style !== undefined) { this.Style = style; }\n      let html = element.attributes.getNamedItem(\"html\")?.value;\n      if (html !== undefined) { this.ShapeHTML = html; }\n      let Hide = element.attributes.getNamedItem(\"Hide\")?.value;\n      if (Hide !== undefined) { this.Hide = (Hide === \"1\"); }\n      let OnceOnly = element.attributes.getNamedItem(\"OnceOnly\")?.value;\n      if (OnceOnly !== undefined) { this.OnceOnly = (OnceOnly === \"1\"); }\n      let BottomUp = element.attributes.getNamedItem(\"BottomUp\")?.value;\n      if (BottomUp !== undefined) { this.BottomUp = (BottomUp === \"1\"); }\n      let BottomUpSubclasses = element.attributes.getNamedItem(\"BottomUpSubclasses\")?.value;\n      if (BottomUpSubclasses !== undefined) { this.BottomUpSubclasses = (BottomUpSubclasses === \"1\"); }\n      let Composeable = element.attributes.getNamedItem(\"Composeable\")?.value;\n      if (Composeable !== undefined) { this.Composeable = (Composeable === \"1\"); }\n      let Refineable = element.attributes.getNamedItem(\"Refineable\")?.value;\n      if (Refineable !== undefined) { this.Refineable = (Refineable === \"1\"); }\n      let RefinementOfClass = element.attributes.getNamedItem(\"RefinementOfClass\")?.value;\n      if (RefinementOfClass !== undefined) { this.RefinementOfClass = (RefinementOfClass === \"1\"); }\n      let HideInClassDiagram = element.attributes.getNamedItem(\"HideInClassDiagram\")?.value;\n      if (HideInClassDiagram !== undefined) { this.HideInClassDiagram = (HideInClassDiagram === \"1\"); }\n\n      const LocalInstDialog = element.attributes.getNamedItem(\"LocalInstDialog\")?.value;\n      if (LocalInstDialog !== undefined && LocalInstDialog === \"1\") {\n        this.InstDialog = new SemTalkInstDialog();\n        const CheckGeneral = element.attributes.getNamedItem(\"CheckGeneral\")?.value;\n        if (CheckGeneral !== undefined) { this.InstDialog.CheckGeneral = (CheckGeneral === \"1\"); }\n        const CheckNamespace = element.attributes.getNamedItem(\"CheckNamespace\")?.value;\n        if (CheckNamespace !== undefined) { this.InstDialog.CheckNamespace = (CheckNamespace === \"1\"); }\n        const CheckClass = element.attributes.getNamedItem(\"CheckClass\")?.value;\n        if (CheckClass !== undefined) { this.InstDialog.CheckClass = (CheckClass === \"1\"); }\n        const CheckMethods = element.attributes.getNamedItem(\"CheckMethods\")?.value;\n        if (CheckMethods !== undefined) { this.InstDialog.CheckMethods = (CheckMethods === \"1\"); }\n        const CheckAttributes = element.attributes.getNamedItem(\"CheckAttributes\")?.value;\n        if (CheckAttributes !== undefined) { this.InstDialog.CheckAttributes = (CheckAttributes === \"1\"); }\n        const CheckAssociations = element.attributes.getNamedItem(\"CheckAssociations\")?.value;\n        if (CheckAssociations !== undefined) { this.InstDialog.CheckAssociations = (CheckAssociations === \"1\"); }\n        const CheckSynonyms = element.attributes.getNamedItem(\"CheckSynonyms\")?.value;\n        if (CheckSynonyms !== undefined) { this.InstDialog.CheckSynonyms = (CheckSynonyms === \"1\"); }\n        const CheckStates = element.attributes.getNamedItem(\"CheckStates\")?.value;\n        if (CheckStates !== undefined) { this.InstDialog.CheckStates = (CheckStates === \"1\"); }\n        const CheckAudit = element.attributes.getNamedItem(\"CheckAudit\")?.value;\n        if (CheckAudit !== undefined) { this.InstDialog.CheckAudit = (CheckAudit === \"1\"); }\n      }\n      const LocalClassDialog = element.attributes.getNamedItem(\"LocalClassDialog\")?.value;\n      if (LocalClassDialog !== undefined && LocalClassDialog === \"1\") {\n        this.ClassDialog = new SemTalkClassDialog();\n        const CheckGeneralClass = element.attributes.getNamedItem(\"CheckGeneralClass\")?.value;\n        if (CheckGeneralClass !== undefined) { this.ClassDialog.CheckGeneral = (CheckGeneralClass === \"1\"); }\n        const CheckNamespaceClass = element.attributes.getNamedItem(\"CheckNamespaceClass\")?.value;\n        if (CheckNamespaceClass !== undefined) { this.ClassDialog.CheckNamespace = (CheckNamespaceClass === \"1\"); }\n        const CheckMethodsClass = element.attributes.getNamedItem(\"CheckMethodsClass\")?.value;\n        if (CheckMethodsClass !== undefined) { this.ClassDialog.CheckMethods = (CheckMethodsClass === \"1\"); }\n        const CheckAttributesClass = element.attributes.getNamedItem(\"CheckAttributesClass\")?.value;\n        if (CheckAttributesClass !== undefined) { this.ClassDialog.CheckAttributes = (CheckAttributesClass === \"1\"); }\n        const CheckSynonymsClass = element.attributes.getNamedItem(\"CheckSynonymsClass\")?.value;\n        if (CheckSynonymsClass !== undefined) { this.ClassDialog.CheckSynonyms = (CheckSynonymsClass === \"1\"); }\n        const CheckStatesClass = element.attributes.getNamedItem(\"CheckStatesClass\")?.value;\n        if (CheckStatesClass !== undefined) { this.ClassDialog.CheckStates = (CheckStatesClass === \"1\"); }\n        const CheckAuditClass = element.attributes.getNamedItem(\"CheckAuditClass\")?.value;\n        if (CheckAuditClass !== undefined) { this.ClassDialog.CheckAudit = (CheckAuditClass === \"1\"); }\n        const CheckSharePoint = element.attributes.getNamedItem(\"CheckSharePoint\")?.value;\n        if (CheckSharePoint !== undefined) { this.ClassDialog.CheckSharePoint = (CheckSharePoint === \"1\"); }\n        const CheckRefinement = element.attributes.getNamedItem(\"CheckRefinement\")?.value;\n        if (CheckRefinement !== undefined) { this.ClassDialog.CheckRefinement = (CheckRefinement === \"1\"); }\n        const CheckDSN = element.attributes.getNamedItem(\"CheckDSN\")?.value;\n        if (CheckDSN !== undefined) { this.ClassDialog.CheckDSN = (CheckDSN === \"1\"); }  \n      }\n\n     }\n     this._labels.LoadXML(element);\n     this._tabspecs.LoadXML(element);\n    }\n\n  public Save(par: any[]): any {\n    let el = super.Save(par);\n\n    if (this.IsSystemClass) { el.SystemClass = \"True\"; }\n    if (this.ShowLabel) { el.ShowLabel = \"1\"; }\n    if (this.Style.length > 0) el.style = this.Style;\n    if (this.ShapeHTML.length > 0) el.html = this.ShapeHTML;\n\n    if (this.Hide) { el.Hide = \"1\"; }\n    if (this.OnceOnly) { el.OnceOnly = \"1\"; }\n    if (this.BottomUp) { el.BottomUp = \"1\"; }\n    if (this.BottomUpSubclasses) { el.BottomUpSubclasses = \"1\"; }\n    if (this.Composeable) { el.Composeable = \"1\"; }\n    if (this.Refineable) { el.Refineable = \"1\"; }\n    if (this.RefinementOfClass) { el.RefinementOfClass = \"1\"; }\n    if (this.HideInClassDiagram) { el.hideInClassDiagram = \"1\"; }\n\n    if (this.InstDialog !== null && this.InstDialog !== undefined) {\n      el.LocalInstDialog = \"1\";\n      if (this.InstDialog.CheckGeneral) { el.CheckGeneral = \"1\"; }\n      if (this.InstDialog.CheckNamespace) { el.CheckNamespace = \"1\"; }\n      if (this.InstDialog.CheckClass) { el.CheckClass = \"1\"; }\n      if (this.InstDialog.CheckMethods) { el.CheckMethods = \"1\"; }\n      if (this.InstDialog.CheckAttributes) { el.CheckAttributes = \"1\"; }\n      if (this.InstDialog.CheckAssociations) { el.CheckAssociations = \"1\"; }\n      if (this.InstDialog.CheckSynonyms) { el.CheckSynonyms = \"1\"; }\n      if (this.InstDialog.CheckStates) { el.CheckStates = \"1\"; }\n      if (this.InstDialog.CheckAudit) { el.CheckAudit = \"1\"; }\n    }\n    if (this.ClassDialog !== null && this.ClassDialog !== undefined) {\n      el.LocalClassDialog = \"1\";\n      if (this.ClassDialog.CheckGeneral) { el.CheckGeneralClass = \"1\"; }\n      if (this.ClassDialog.CheckNamespace) { el.CheckNamespaceClass = \"1\"; }\n      if (this.ClassDialog.CheckMethods) { el.CheckMethodsClass = \"1\"; }\n      if (this.ClassDialog.CheckAttributes) { el.CheckAttributesClass = \"1\"; }\n      if (this.ClassDialog.CheckAssociations) { el.CheckAssociationsClass = \"1\"; }\n      if (this.ClassDialog.CheckSynonyms) { el.CheckSynonymsClass = \"1\"; }\n      if (this.ClassDialog.CheckStates) { el.CheckStatesClass = \"1\"; }\n      if (this.ClassDialog.CheckAudit) { el.CheckAuditClass = \"1\"; }\n      if (this.ClassDialog.CheckSharePoint) { el.CheckSharePoint = \"1\"; }\n      if (this.ClassDialog.CheckRefinement) { el.CheckRefinement = \"1\"; }\n      if (this.ClassDialog.CheckDSN) { el.CheckDSN = \"1\"; }\n    }\n    this._labels.Save(el);\n    this._tabspecs.Save(el);\n\n    return el;\n  }\n  public SaveXML(xd: XMLDocument, el: HTMLElement): void {\n    super.SaveXML(xd, el);\n    if (this.IsSystemClass) { el.setAttribute(\"SystemClass\", \"True\"); }\n    if (this.ShowLabel) { el.setAttribute(\"ShowLabel\", \"1\"); }\n    if (this.Style.length > 0) el.setAttribute(\"style\", this.Style);\n    if (this.ShapeHTML.length > 0) el.setAttribute(\"html\", this.ShapeHTML);\n\n    if (this.Hide) { el.setAttribute(\"Hide\", \"1\"); }\n    if (this.OnceOnly) { el.setAttribute(\"OnceOnly\", \"1\"); }\n    if (this.BottomUp) { el.setAttribute(\"BottomUp\", \"1\"); }\n    if (this.BottomUpSubclasses) { el.setAttribute(\"BottomUpSubclasses\", \"1\"); }\n    if (this.Composeable) { el.setAttribute(\"Composeable\", \"1\"); }\n    if (this.Refineable) { el.setAttribute(\"Refineable\", \"1\"); }\n    if (this.RefinementOfClass) { el.setAttribute(\"RefinementOfClass\", \"1\"); }\n    if (this.HideInClassDiagram) { el.setAttribute(\"hideInClassDiagram\", \"1\"); }\n\n    if (this.InstDialog !== null && this.InstDialog !== undefined) {\n      el.setAttribute(\"LocalInstDialog\", \"1\");\n      if (this.InstDialog.CheckGeneral) { el.setAttribute(\"CheckGeneral\", \"1\"); }\n      if (this.InstDialog.CheckNamespace) { el.setAttribute(\"CheckNamespace\", \"1\"); }\n      if (this.InstDialog.CheckClass) { el.setAttribute(\"CheckClass\", \"1\"); }\n      if (this.InstDialog.CheckMethods) { el.setAttribute(\"CheckMethods\", \"1\"); }\n      if (this.InstDialog.CheckAttributes) { el.setAttribute(\"CheckAttributes\", \"1\"); }\n      if (this.InstDialog.CheckAssociations) { el.setAttribute(\"CheckAssociations\", \"1\"); }\n      if (this.InstDialog.CheckSynonyms) { el.setAttribute(\"CheckSynonyms\", \"1\"); }\n      if (this.InstDialog.CheckStates) { el.setAttribute(\"CheckStates\", \"1\"); }\n      if (this.InstDialog.CheckAudit) { el.setAttribute(\"CheckAudit\", \"1\"); }\n    }\n    if (this.ClassDialog !== null && this.ClassDialog !== undefined) {\n      el.setAttribute(\"LocalClassDialog\", \"1\");\n      if (this.ClassDialog.CheckGeneral) { el.setAttribute(\"CheckGeneralClass\", \"1\"); }\n      if (this.ClassDialog.CheckNamespace) { el.setAttribute(\"CheckNamespaceClass\", \"1\"); }\n      if (this.ClassDialog.CheckMethods) { el.setAttribute(\"CheckMethodsClass\", \"1\"); }\n      if (this.ClassDialog.CheckAttributes) { el.setAttribute(\"CheckAttributesClass\", \"1\"); }\n      if (this.ClassDialog.CheckAssociations) { el.setAttribute(\"CheckAssociationsClass\", \"1\"); }\n      if (this.ClassDialog.CheckSynonyms) { el.setAttribute(\"CheckSynonymsClass\", \"1\"); }\n      if (this.ClassDialog.CheckStates) { el.setAttribute(\"CheckStatesClass\", \"1\"); }\n      if (this.ClassDialog.CheckAudit) { el.setAttribute(\"CheckAuditClass\", \"1\"); }\n      if (this.ClassDialog.CheckSharePoint) { el.setAttribute(\"CheckSharePoint\", \"1\"); }\n      if (this.ClassDialog.CheckRefinement) { el.setAttribute(\"CheckRefinement\", \"1\"); }\n      if (this.ClassDialog.CheckDSN) { el.setAttribute(\"CheckDSN\", \"1\"); }\n    }\n    this._labels.SaveXML(xd, el);\n    this._tabspecs.SaveXML(xd, el);\n  }\n\n  public CollectClassLabels(lbl: ILabelSpec, obj: ISemTalkClass, mastername?: string): boolean {\n    return this._labels.CollectClassLabels(lbl, obj, mastername);\n  }\n  public CollectBusinessClassLabels(lbl: ILabelSpec, obj: ISemTalkClass, mastername?: string): boolean {\n    return this._labels.CollectBusinessClassLabels(lbl, obj, mastername);\n  }\n  public CollectInstLabels(lbl: ILabelSpec, obj: ISemTalkInstance, mastername?: string): boolean {\n    return this._labels.CollectInstLabels(lbl, obj, mastername);\n  }\n}\nexport class SemTalkAssociationType extends SemTalkSystemClass implements ISemTalkAssociationType {\n  constructor(tb: IObjectBase, ptype: SemTalkRelation, newname: string, id?: number | null) {\n    super(tb, newname, id);\n    this.ObjectType = SemTalkType.SemTalkAssociationType;\n    this.RelationType = ptype;\n    if (tb.FindAssociationType(newname) === null) {\n      tb._assoctypes[this.ID + \"_\"] = this;\n      // } else {\n      //   super.Delete();\n      //   throw new Error(\"SemTalkAssociationType: There is another SemTalkAssociationType named: \" + newname);\n    }\n  }\n  public RelationType = SemTalkRelation.SemTalkProperty;\n  public FromType = SemTalkType.SemTalkInstance;\n  public ToType = SemTalkType.SemTalkInstance;\n  public FromConnection = SemTalkConnectionPoint.South;\n  public ToConnection = SemTalkConnectionPoint.North;\n  private _invname: string | null = null;\n  get InvName(): string {\n    if (this._invname === null) {\n      return \"Inv \" + this._name;\n    } else { return this._invname; }\n  }\n  set InvName(val: string) {\n    this._invname = val;\n  }\n\n\n  public Cyclic: boolean = true;\n  public Symmetric: boolean = false;\n  public Transitiv: boolean = false;\n  public IsAggregation: boolean = false;\n  public Unique: boolean = false;\n  public IsContainer: boolean = false;\n  public UniqueModel: boolean = false;\n  public Expandable: boolean = true;\n  public IsCompositionAssociation: boolean = false;\n  public AllowFreeForm: boolean = true;\n\n  public Delete(): void {\n    super.Delete();\n    delete this.ObjectBase._assoctypes[this.ID + \"_\"];\n  }\n  public Load(je: any): void {\n    super.Load(je);\n    this.InvName = je.invname;\n    this.Cyclic = (je.cyclic === \"1\");\n    if (je.fromtype === \"Class\") { this.FromType = SemTalkType.SemTalkClass; }\n    if (je.totype === \"Class\") { this.ToType = SemTalkType.SemTalkClass; }\n    if (je.fromconnection) { this.FromConnection = Number(je.fromconnection); }\n    if (je.toconnection) { this.ToConnection = Number(je.toconnection); }\n    this.Symmetric = (je.symmetric === \"1\");\n    this.Transitiv = (je.transitiv === \"1\");\n    this.IsAggregation = (je.aggregate === \"1\");\n    this.Unique = (je.unique === \"1\");\n    this.IsContainer = (je.iscontainer === \"1\");\n    this.UniqueModel = (je.uniquemodel === \"1\");\n    this.IsCompositionAssociation = (je.composition === \"1\");\n    this.Expandable = (je.expandable !== \"0\");\n    this.AllowFreeForm = (je.allowfreeform !== \"0\");\n    this.RelationType = this.ObjectBase.FindSemTalkRelationType(je.type);\n  }\n  public LoadXML(element: Element): void {\n    super.LoadXML(element);\n    if (element.attributes) {\n      // const tb = this.ObjectBase;\n      let invname = element.attributes.getNamedItem(\"invname\")?.value;\n      if (invname !== undefined) { this.InvName = invname; }\n      let cyclic = element.attributes.getNamedItem(\"cyclic\")?.value;\n      if (cyclic !== undefined) { this.Cyclic = (cyclic === \"1\"); }\n      let fromtype = element.attributes.getNamedItem(\"fromtype\")?.value;\n      if (invname !== undefined && fromtype === \"Class\") { this.FromType = SemTalkType.SemTalkClass; }\n      let totype = element.attributes.getNamedItem(\"totype\")?.value;\n      if (totype !== undefined && totype === \"Class\") { this.ToType = SemTalkType.SemTalkClass; }\n      let fromconnection = element.attributes.getNamedItem(\"fromconnection\")?.value;\n      if (fromconnection !== undefined) { this.FromConnection = Number(fromconnection); }\n      let toconnection = element.attributes.getNamedItem(\"toconnection\")?.value;\n      if (toconnection !== undefined) { this.ToConnection = Number(toconnection); }\n      let symmetric = element.attributes.getNamedItem(\"symmetric\")?.value;\n      if (symmetric !== undefined) { this.Symmetric = (symmetric === \"1\"); }\n      let transitiv = element.attributes.getNamedItem(\"transitiv\")?.value;\n      if (transitiv !== undefined) { this.Transitiv = (transitiv === \"1\"); }\n      let aggregate = element.attributes.getNamedItem(\"aggregate\")?.value;\n      if (aggregate !== undefined) { this.IsAggregation = (aggregate === \"1\"); }\n      let unique = element.attributes.getNamedItem(\"unique\")?.value;\n      if (unique !== undefined) { this.Unique = (unique === \"1\"); }\n      let iscontainer = element.attributes.getNamedItem(\"iscontainer\")?.value;\n      if (iscontainer !== undefined) { this.IsContainer = (iscontainer === \"1\"); }\n      let uniquemodel = element.attributes.getNamedItem(\"uniquemodel\")?.value;\n      if (uniquemodel !== undefined) { this.UniqueModel = (uniquemodel === \"1\"); }\n      let composition = element.attributes.getNamedItem(\"composition\")?.value;\n      if (composition !== undefined) { this.IsCompositionAssociation = (composition === \"1\"); }\n      let expandable = element.attributes.getNamedItem(\"expandable\")?.value;\n      if (expandable !== undefined) { this.Expandable = (expandable === \"1\"); }\n      let allowfreeform = element.attributes.getNamedItem(\"allowfreeform\")?.value;\n      if (allowfreeform !== undefined) { this.AllowFreeForm = (allowfreeform === \"1\"); }\n      let rtype = element.attributes.getNamedItem(\"type\")?.value;\n      if (rtype !== undefined) { this.RelationType = this.ObjectBase.FindSemTalkRelationType(rtype); }\n    }\n  }\n\n  public Save(par: any[]): any {\n    const el = super.Save(par);\n    el.ObjectType = \"RelationType\";\n    el.invname = this.InvName;\n    if (!this.Cyclic) { el.cyclic = \"0\"; }\n    if (this.FromType === SemTalkType.SemTalkClass) { el.fromtype = \"Class\"; }\n    if (this.ToType === SemTalkType.SemTalkClass) { el.totype = \"Class\"; }\n    el.fromconnection = this.FromConnection;\n    el.toconnection = this.ToConnection;\n    if (this.Symmetric) { el.symmetric = \"1\"; }\n    if (this.Transitiv) { el.transitiv = \"1\"; }\n    if (this.IsAggregation) { el.aggregate = \"1\"; }\n    if (this.Unique) { el.unique = \"1\"; }\n    if (this.IsContainer) { el.iscontainer = \"1\"; }\n    if (this.UniqueModel) { el.uniquemodel = \"1\"; }\n    if (this.IsCompositionAssociation) { el.composition = \"1\"; }\n    if (!this.Expandable) { el.expandable = \"0\"; }\n    if (!this.AllowFreeForm) { el.allowfreeform = \"0\"; }\n    el.type = this.ObjectBase.SemTalkRelationTypeName(this.RelationType);\n    return el;\n  }\n  public SaveXML(xd: XMLDocument, el: HTMLElement): void {\n    super.SaveXML(xd, el);\n    el.setAttribute(\"invname\", this.InvName);\n    if (!this.Cyclic) { el.setAttribute(\"cyclic\", \"0\"); }\n    if (this.FromType === SemTalkType.SemTalkClass) { el.setAttribute(\"fromtype\", \"Class\"); }\n    if (this.ToType === SemTalkType.SemTalkClass) { el.setAttribute(\"totype\", \"Class\"); }\n    el.setAttribute(\"fromconnection\", String(this.FromConnection));\n    el.setAttribute(\"toconnection\", String(this.ToConnection));\n    if (this.Symmetric) { el.setAttribute(\"symmetric\", \"1\"); }\n    if (this.Transitiv) { el.setAttribute(\"transitiv\", \"1\"); }\n    if (this.IsAggregation) { el.setAttribute(\"aggregate\", \"1\"); }\n    if (this.Unique) { el.setAttribute(\"unique\", \"1\"); }\n    if (this.IsContainer) { el.setAttribute(\"iscontainer\", \"1\"); }\n    if (this.UniqueModel) { el.setAttribute(\"uniquemodel\", \"1\"); }\n    if (this.IsCompositionAssociation) { el.setAttribute(\"composition\", \"1\"); }\n    if (!this.Expandable) { el.setAttribute(\"expandable\", \"0\"); }\n    if (!this.AllowFreeForm) { el.setAttribute(\"allowfreeform\", \"0\"); }\n    el.setAttribute(\"type\", this.ObjectBase.SemTalkRelationTypeName(this.RelationType));\n  }\n}\n\n","import {\n  IObjectBase,\n  ISemTalkDiagramType,\n  ISemTalkSystemClass,\n  ISemTalkNamedThing,\n  ISemTalkObject,\n  ISemTalkClass,\n  ISemTalkInstance,\n  ISemTalkDiagram,\n  ISemTalkNode,\n  ISemTalkAssociation,\n  ISemTalkAssociationNode,\n  SemTalkType,\n  SemTalkRelation,\n  SemTalkBaseConstant,\n  ModelAttribute\n} from './Interface';\n\nimport { SemTalkInstance } from './Tbase';\nimport { SemTalkSystemClass } from './SystemClass';\nimport { SemTalkMaster } from '../SemTalkMaster';\n\n// tslint:disable:max-classes-per-file\n// tslint:disable:variable-name\n/* tslint:disable:member-ordering */\n/* tslint:disable:forin */\n\nexport class SemTalkDiagDialog {\n  public CheckEdit: boolean = false;\n  public CheckInsert: boolean = false;\n  public CheckFind: boolean = false;\n  public CheckGoUp: boolean = false;\n  public CheckRefresh: boolean = false;\n}\nexport class SemTalkDiagramType extends SemTalkSystemClass implements ISemTalkDiagramType {\n  constructor(tb: IObjectBase, newname: string, id?: number | null) {\n    super(tb, newname, id);\n    this.ObjectType = SemTalkType.SemTalkDiagramType;\n    if (tb.FindDiagramType(newname) === null) {\n      tb._diagtypes[this.ID + \"_\"] = this;\n      // } else {\n      //   super.Delete();\n      //   throw new Error(\"SemTalkDiagramType: There is another SemTalkDiagramType named: \" + newname);\n    }\n  }\n  public LocalDiagramDialog: SemTalkDiagDialog = new SemTalkDiagDialog();\n  public Root: ISemTalkSystemClass | null = null;\n  public InstanceRoot: ISemTalkSystemClass | null = null;\n  public NewSLRoot: ISemTalkSystemClass | null = null;\n  public UseInheritanceRelations: boolean = true;\n  public UseAllRelationsOfSubclasses: boolean = true;\n\n  public MasterNames: string[] = [\"Instance\", \"Comment\", \"Property\"];\n  private _isclass: boolean = false;\n  public set IsClass(b: boolean) {\n    if (b) {\n      if (this.MasterNames.indexOf(\"Instance\") > -1) {\n        this.MasterNames[this.MasterNames.indexOf(\"Instance\")] = \"Class\";\n      }\n    } else {\n      if (this.MasterNames.indexOf(\"Class\") > -1) {\n        this.MasterNames[this.MasterNames.indexOf(\"Class\")] = \"Instance\";\n      }\n    }\n    this._isclass = b;\n  }\n  public get IsClass(): boolean { return this._isclass; }\n\n  public Auto: boolean = false;\n  public Stencil: string | null = null;\n  public Prefix: string | null = null;\n  public DoubleClick: string | null = null;\n  public UMLShape: boolean = false;\n  public Delete(): void {\n    super.Delete();\n    delete this.ObjectBase._diagtypes[this.ID + \"_\"];\n  }\n  public GetPrefix(o: ISemTalkNamedThing): string {\n    if (this.Prefix !== null) { return this.Prefix + \"#\" + o.ObjectName; }\n    if (this.Root !== null) { return this.Root.ObjectName.substr(0, 2) + \"#\" + o.ObjectName; }\n    return o.ObjectName;\n  }\n  public IsAllowedMaster(o: ISemTalkObject, master: string): boolean {\n    if (this.MasterNames.indexOf(master) < 0) {\n      if (this.IsClass && master === SemTalkMaster.MasterUMLClass) { return this.UMLShape; }\n      return false;\n    }\n    if (this.IsClass && master === SemTalkMaster.MasterClass) { return !this.UMLShape; }\n    let sc: ISemTalkSystemClass | null = null;\n    if (this.ObjectBase.IsInstance(o)) {\n      if (master === SemTalkMaster.MasterInstance) {\n        if (this.Root === null) {\n          return true;\n        } else {\n          return (o as ISemTalkInstance).IsInstance(this.Root);\n        }\n      }\n      sc = (o as ISemTalkInstance).ClassOf().SystemClass();\n    }\n    if (this.ObjectBase.IsClass(o)) { sc = (o as ISemTalkClass).SystemClass(); }\n    if (sc !== null) {\n\n      const lbl = sc.Labels(master);\n      if (lbl.length === 0) {\n        return false;\n      }\n\n    } else {\n      return false;\n    }\n    return true;\n  }\n  public AllowedMasters(o: ISemTalkObject): string[] {\n    const m: string[] = [];\n    if (!this.IsAllowed(o)) { return m; }\n    let sc: ISemTalkSystemClass | null = null;\n    if (this.ObjectBase.IsInstance(o)) {\n      sc = (o as ISemTalkInstance).ClassOf().SystemClass();\n    }\n    if (this.ObjectBase.IsClass(o)) {\n      sc = (o as ISemTalkClass).SystemClass();\n    }\n    if (this.IsClass) {\n      //if (sc !== null) {\n      for (const l of (sc as ISemTalkSystemClass).AllClassLabels()) {\n        if (this.MasterNames.indexOf(l.Master) > -1) {\n          m[m.length] = l.Master;\n        }\n      }\n      // }\n      // console.debug(\"MasterNames \" + this.UMLShape + \" \" + this.MasterNames.indexOf(\"UML Class\"));\n      if (this.UMLShape && this.MasterNames.indexOf(SemTalkMaster.MasterUMLClass) !== -1) {\n        m[m.length] = SemTalkMaster.MasterUMLClass;\n      } else {\n        if (this.MasterNames.indexOf(SemTalkMaster.MasterClass) !== -1) {\n          m[m.length] = SemTalkMaster.MasterClass;\n        }\n      }\n    } else {\n      if (sc !== null) {\n        for (const l of sc.AllInstanceLabels()) {\n          if (this.MasterNames.indexOf(l.Master) > -1) {\n            m[m.length] = l.Master;\n          }\n        }\n      }\n      if (this.MasterNames.indexOf(\"Instance\") > -1) {\n        m[m.length] = \"Instance\";\n      }\n    }\n    return m;\n  }\n  public IsAllowed(o: ISemTalkObject): boolean {\n    if (this.ObjectBase._loading) return true;\n    if (this.ObjectName === SemTalkBaseConstant.SLGeneric) {\n      return true;\n    }\n    if (this.IsClass) {\n      if (this.ObjectBase.IsClass(o)) {\n        if (this.Root !== null) {\n          return (o as ISemTalkClass).IsParent(this.Root);\n        } else return true;\n      } else {\n        //if (this.ObjectBase.IsInstance(o)) {\n        if (this.InstanceRoot !== null && this.ObjectBase.IsInstance(o)) {\n          return (o as ISemTalkInstance).IsInstance(this.InstanceRoot);\n        } else\n          return false;\n        // } else\n        // return false;\n      }\n    } else {\n      if (this.ObjectBase.IsInstance(o)) {\n        if (this.Root !== null) {\n          // if (o.ObjectType === SemTalkType.SemTalkAssociation) {\n          //   // hidden Relations not implemented yet\n          //   return true;\n          // } else\n          return (o as ISemTalkInstance).IsInstance(this.Root);\n        } else return true;\n      } else return false;\n    }\n  }\n  public FindMasters(mst: string): ISemTalkSystemClass[] {\n    const m: ISemTalkSystemClass[] = [];\n    // tslint:disable-next-line:no-empty\n    if (this.IsClass) {\n    } else {\n      if (this.Root !== null) {\n        let sl = this.Root.AllSystemSubClasses();\n        sl.push(this.Root);\n        for (const sc of sl) {\n          if (sc.ObjectName === mst) {\n            m[m.length] = sc;\n            return m;\n          }\n          if (sc.Labels(mst).length > 0) {\n            m[m.length] = sc;\n          } else {\n            for (const sy of sc.AllSynonyms()) {\n              if (sy.Name === mst && m.indexOf(sc) < 0) {\n                m[m.length] = sc;\n              }\n            }\n          }\n        }\n\n      }\n    }\n    return m;\n  }\n  public Instances(): ISemTalkDiagram[] {\n    const alist: ISemTalkDiagram[] = [];\n    for (const x of super.Instances()) {\n      alist.push(x as ISemTalkDiagram);\n    }\n    return alist;\n  }\n  public SubClasses(): ISemTalkDiagramType[] {\n    const alist: ISemTalkDiagramType[] = [];\n    for (const x of super.SubClasses()) {\n      alist.push(x as ISemTalkDiagramType);\n    }\n    return alist;\n  }\n  public SuperClasses(): ISemTalkDiagramType[] {\n    const alist: ISemTalkDiagramType[] = [];\n    for (const x of super.SuperClasses()) {\n      alist.push(x as ISemTalkDiagramType);\n    }\n    return alist;\n  }\n  public MakeInstance(n: string, t?: SemTalkType, i?: number): ISemTalkDiagram {\n    if (t === undefined) {\n      t = SemTalkType.SemTalkDiagram;\n    }\n    let existing = this.ObjectBase.FindDiagram(n);\n    if (existing !== null) {\n      return existing;\n    } else {\n      return super.MakeInstance(n, t, i, (cla1: ISemTalkClass, n1: string, t1: SemTalkType, i1: number) =>\n        new SemTalkDiagram(cla1 as ISemTalkDiagramType, n1, t1, i1)) as ISemTalkDiagram;\n    }\n  }\n  public GetValidDiagTypRefinementOf(): ISemTalkDiagramType[] {\n    return this.LinkedObjects(\"RefinementOf\", false, SemTalkRelation.SemTalkSystemRelation) as ISemTalkDiagramType[];\n  }\n  public GetValidDiagTypRefinements(): ISemTalkDiagramType[] {\n    return this.InvLinkedObjects(\"RefinementOf\", false, SemTalkRelation.SemTalkSystemRelation) as ISemTalkDiagramType[];\n  }\n  public AllRootDiagrams(): ISemTalkDiagram[] {\n    const alist: ISemTalkDiagram[] = [];\n    if (this.IsClass || this.ObjectName === SemTalkBaseConstant.SLGeneric) {\n      for (const x of this.Instances()) {\n        alist.push(x as ISemTalkDiagram);\n      }\n    } else {\n      for (const x of this.Instances()) {\n        if ((x as ISemTalkDiagram).InvRefinements().length === 0) {\n          alist.push(x as ISemTalkDiagram);\n        }\n      }\n    }\n    return alist;\n  }\n  public Load(je: any): void {\n    super.Load(je);\n    if (this.ObjectBase.FindSystemClass(je.root) !== null) {\n      this.Root = this.ObjectBase.FindSystemClass(je.root);\n      // console.debug(this.Root);\n    }\n    if (this.ObjectBase.FindSystemClass(je.instanceroot) !== null) { this.InstanceRoot = this.ObjectBase.FindSystemClass(je.instanceroot); }\n    if (this.ObjectBase.FindSystemClass(je.slroot) !== null) { this.NewSLRoot = this.ObjectBase.FindSystemClass(je.slroot); }\n    this.UseInheritanceRelations = (je.UseInheritanceRelations !== \"0\");\n    this.UseAllRelationsOfSubclasses = (je.UseAllRelationsOfSubclasses !== \"0\");\n    this.IsClass = (je.type === \"Class\");\n    this.Auto = (je.auto === \"1\");\n    this.Stencil = je.stencil;\n    this.Prefix = je.prefix;\n    this.DoubleClick = je.doubleclick;\n    this.UMLShape = (je.UMLShape === \"1\");\n    if (je.CheckEdit !== undefined) { this.LocalDiagramDialog.CheckEdit = je.CheckEdit; }\n    if (je.CheckInsert !== undefined) { this.LocalDiagramDialog.CheckInsert = je.CheckInsert; }\n    if (je.CheckFind !== undefined) { this.LocalDiagramDialog.CheckFind = je.CheckFind; }\n    if (je.CheckGoUp !== undefined) { this.LocalDiagramDialog.CheckFind = je.CheckGoUp; }\n    if (je.CheckRefresh !== undefined) { this.LocalDiagramDialog.CheckFind = je.CheckRefresh; }\n  }\n  public Save(par: any[]): any {\n    const el: any = super.Save(par);\n    el.ObjectType = \"DiagramType\";\n\n    if (this.Root !== null) { el.root = this.Root.ObjectName; }\n    if (this.InstanceRoot !== null) { el.instanceroot = this.InstanceRoot.ObjectName; }\n    if (this.NewSLRoot !== null) { el.slroot = this.NewSLRoot.ObjectName; }\n    if (this.UseInheritanceRelations) { el.UseInheritanceRelations = \"1\"; }\n    if (this.IsClass) { el.type = \"Class\"; } else { el.type = \"Instance\"; }\n    if (this.Auto) { el.auto = \"1\"; }\n    el.stencil = this.Stencil;\n    el.prefix = this.Prefix;\n    el.doubleclick = this.DoubleClick;\n    if (this.UMLShape) { el.UMLShape = \"1\"; }\n\n    if (this.LocalDiagramDialog !== null) {\n      el.CheckEdit = this.LocalDiagramDialog.CheckEdit;\n      el.CheckInsert = this.LocalDiagramDialog.CheckInsert;\n      el.CheckFind = this.LocalDiagramDialog.CheckFind;\n      el.CheckGoUp = this.LocalDiagramDialog.CheckGoUp;\n      el.CheckRefresh = this.LocalDiagramDialog.CheckRefresh;\n    }\n  }\n  public SaveXML(xd: XMLDocument, el: HTMLElement): void {\n    super.SaveXML(xd, el);\n    if (this.Root) { el.setAttribute(\"root\", this.Root.ObjectName); }\n    if (this.InstanceRoot) { el.setAttribute(\"instanceroot\", this.InstanceRoot.ObjectName); }\n    if (this.NewSLRoot) { el.setAttribute(\"slroot\", this.NewSLRoot.ObjectName); }\n    if (this.UseInheritanceRelations) { el.setAttribute(\"UseInheritanceRelations\", \"1\"); }\n    if (this.IsClass) { el.setAttribute(\"type\", \"Class\"); } else { el.setAttribute(\"type\", \"Instance\"); }\n    if (this.Auto) { el.setAttribute(\"auto\", \"1\"); }\n    if (this.Stencil) { el.setAttribute(\"stencil\", this.Stencil); }\n    if (this.Prefix) { el.setAttribute(\"prefix\", this.Prefix); }\n    if (this.DoubleClick) { el.setAttribute(\"doubleclick\", this.DoubleClick); }\n    if (this.UMLShape) { el.setAttribute(\"UMLShape\", \"1\"); }\n\n    if (this.LocalDiagramDialog) {\n      el.setAttribute(\"CheckEdit\", this.LocalDiagramDialog.CheckEdit ? \"1\" : \"0\");\n      el.setAttribute(\"CheckInsert\", this.LocalDiagramDialog.CheckInsert ? \"1\" : \"0\");\n      el.setAttribute(\"CheckFind\", this.LocalDiagramDialog.CheckFind ? \"1\" : \"0\");\n      el.setAttribute(\"CheckGoUp\", this.LocalDiagramDialog.CheckGoUp ? \"1\" : \"0\");\n      el.setAttribute(\"CheckRefresh\", this.LocalDiagramDialog.CheckRefresh ? \"1\" : \"0\");\n    }\n  }\n}\nexport class SemTalkDiagram extends SemTalkInstance implements ISemTalkDiagram {\n  constructor(cla: ISemTalkDiagramType, newname: string, otype: SemTalkType, id?: number) {\n    super(cla, newname, otype, id);\n    //  if (this.ObjectBase.FindDiagram(newname) === null) {\n    this.ObjectBase._diags[this.ID + \"_\"] = this;\n    // } else {\n    //   super.Delete();\n    //   throw new Error(\"SemTalkDiagram: There is another SemTalkDiagram named: \" + newname);\n    // }\n    this.ObjectBase.OnDiagramCreated(this);\n    return this;\n  }\n  private _refinedby: { [ID: string]: ISemTalkObject } = {};\n  public AddInvRefinement(n: ISemTalkObject): ISemTalkObject {\n    this._refinedby[n.ID + \"_\"] = n;\n    return n;\n  }\n  public RemoveInvRefinement(n: ISemTalkObject): void {\n    delete this._refinedby[n.ID + \"_\"];\n  }\n\n  private _contents: { [shapeid: string]: ISemTalkNode } = {};\n  public Visible: boolean = true;\n  public vid: number = 0;\n  public get IsClass(): boolean { return this.ClassOf().IsClass; }\n  public MakeNode(obj: ISemTalkObject, shpid: string, master?: string): ISemTalkNode {\n    if (master !== undefined) {\n      if (!this.ClassOf().IsAllowedMaster(obj, master)) {\n        throw new Error(\"MakeNode: Bad master \" + master);\n      }\n    }\n    if (this.ObjectBase.IsAssociation(obj)) {\n      return this.ObjectBase.MakeAssociationNode(this, obj as ISemTalkAssociation, shpid, master);\n    } else {\n      if (!this.ClassOf().IsAllowed(obj)) {\n        if (this.ObjectBase.IsInstance(obj) &&\n          (obj as ISemTalkInstance).ClassOf().ObjectName ===\n          this.ObjectBase.GetModelAttribute(ModelAttribute.SLComment)) {\n        } else {\n          //console.debug(\"MakeNode: Not allowed \" + obj);\n          throw new Error(\"MakeNode: Not allowed \" + obj);\n        }\n      }\n      return this.ObjectBase.MakeNode(this, obj, shpid, master);\n    }\n  }\n  public ClassOf(): ISemTalkDiagramType {\n    return super.ClassOf() as ISemTalkDiagramType;\n  }\n  public SystemClass(): ISemTalkDiagramType | null {\n    const cl = this.ClassOf();\n    const sc = cl.SystemClass();\n    if (sc !== null)\n      return sc as ISemTalkDiagramType;\n    else\n      return null;\n  }\n  public AddNode(n: ISemTalkNode): ISemTalkNode {\n    // if (n.Diagram.ID !== this.ID) {\n    //   throw new Error(\"AddNode: Node already belongs to a different Diagram: \" + n);\n    // }\n    if (this._contents[n.ShapeID] !== undefined) {\n      throw new Error(\"AddNode: Duplicate ShapeID: \" + n);\n    }\n    // if (!this.ObjectBase._loading) {\n    //   if (!this.ClassOf().IsAllowed(n.Model)) {\n    //     if (this.ObjectBase.IsInstance(n.Model)) {\n    //       // tslint:disable-next-line:no-console\n    //       // console.debug(\"AddNode: Not Allowed: \" + n.Model + \" Root:\" + this.ClassOf().Root + \" IsInstance:\" + ((n.Model as ISemTalkInstance).ClassOf() as ISemTalkClass).IsParent((this.ClassOf().Root as ISemTalkClass)));\n    //       throw new Error(\"AddNode: Not Allowed: \" + n.Model + \" Root:\" + this.ClassOf().Root);\n    //     } else {\n    //       // tslint:disable-next-line:no-console\n    //       // console.debug(\"AddNode: Not Allowed: \" + n.Model + \" Root:\" + this.ClassOf().Root + \" IsSubClass:\" + (n.Model as ISemTalkClass).IsParent((this.ClassOf().Root as ISemTalkClass)));\n    //       throw new Error(\"AddNode: Not Allowed: \" + n.Model + \" Root:\" + this.ClassOf().Root);\n    //     }\n    //   }\n    // }\n    this._contents[n.ShapeID] = n;\n    return n;\n  }\n  public RemoveNode(n: ISemTalkNode): void {\n    if (this._contents[n.ShapeID] === undefined) { throw new Error(\"RemoveNode: Missing Node: \" + n); }\n    delete this._contents[n.ShapeID];\n  }\n  public Contents(): ISemTalkNode[] {\n    const alist: ISemTalkNode[] = [];\n    for (const shpid in this._contents) {\n      const n = this._contents[shpid];\n      alist.push(n);\n    }\n    return alist;\n  }\n\n  public Delete(): void {\n    for (const n of this.Contents()) {\n      // const m: ISemTalkObject = n.Model;\n      n.Delete();\n      // if (this.ObjectBase.IsInstance(m)) {\n      //   const scl: ISemTalkSystemClass | null = (m as ISemTalkInstance).ClassOf().SystemClass();\n      //   if (scl !== null && scl.OnceOnly) {\n      //     m.Delete();\n      //   }\n      // }\n    }\n    for (const r of this.RefinedObjects()) {\n      r.Refinement = null;\n    }\n    delete this.ObjectBase._diags[this.ID + \"_\"];\n    super.Delete();\n    this.ObjectBase.OnDiagramDeleted(this);\n  }\n  public FindNodeOf(obj: ISemTalkObject): ISemTalkNode[] {\n    const alist: ISemTalkNode[] = [];\n    for (const ndid in this._contents) {\n      const n = this._contents[ndid];\n      if (n.Model === obj) {\n        alist.push(n);\n      }\n    }\n    return alist;\n  }\n  public FindNodeOfShape(shpid: string): ISemTalkNode | null {\n    for (const sid in this._contents) {\n      const n = this._contents[sid];\n      if (n.ShapeID === shpid) {\n        return n;\n      }\n    }\n    return null;\n  }\n  public RefinedObjects(): ISemTalkObject[] {\n    const alist: ISemTalkObject[] = [];\n    const fnd: any = {};\n    for (const a in this._refinedby) {\n      const x: ISemTalkObject = this._refinedby[a];\n      if (fnd[x.ID] === undefined) {\n        alist[alist.length] = x;\n        fnd[x.ID] = x;\n      }\n    }\n    return alist;\n  }\n  public InvRefinements(): ISemTalkDiagram[] {\n    const alist: ISemTalkDiagram[] = [];\n    const fnd: any = {};\n    // How about RefinementOfClass ???\n    for (const a in this._refinedby) {\n      const x = this._refinedby[a];\n      for (const nd of x.Nodes()) {\n        if (fnd[nd.Diagram.ID] === undefined) {\n          alist.push(nd.Diagram);\n          fnd[nd.Diagram.ID] = nd.Diagram;\n        }\n      }\n    }\n    return alist;\n  }\n  public BreadCrumbs(): ISemTalkDiagram[] {\n    if (this.ClassOf().IsClass || this.ClassOf().ObjectName === \"Generic\") {\n      return [this];\n    }\n    let _BreadCrumbs = (par: ISemTalkDiagram, flist: string[]): ISemTalkDiagram[] => {\n      if (flist.indexOf(par.ObjectName) > -1) {\n        return [];\n      }\n      flist.push(par.ObjectName);\n      const _ir = par.InvRefinements();\n      const blist: ISemTalkDiagram[] = [par];\n      for (let _par of _ir) {\n        if (par.ID !== _par.ID)\n          blist.push(..._BreadCrumbs(_par, flist));\n      }\n      return blist;\n    };\n    const alist: ISemTalkDiagram[] = [this];\n    const ir = this.InvRefinements();\n    for (let par of ir) {\n      if (par.ID !== this.ID)\n        alist.push(..._BreadCrumbs(par, [this.ObjectName]));\n    }\n    return alist;\n  }\n\n  public Refinements(): ISemTalkDiagram[] {\n    const alist: ISemTalkDiagram[] = [];\n    for (const ndid in this._contents) {\n      const n = this._contents[ndid];\n      if (n.Model.Refinement !== null) {\n        alist.push(n.Model.Refinement);\n      }\n      else {\n        if (n.Model.ObjectType === SemTalkType.SemTalkInstance) {\n          const cla = (n.Model as ISemTalkInstance).ClassOf();\n          const scl = cla.SystemClass();\n          if (scl !== null && scl.RefinementOfClass) {\n            if (cla.Refinement !== null) {\n              alist.push(cla.Refinement);\n            }\n          }\n        }\n      }\n    }\n    return alist;\n  }\n  public ExtRefinements(): string[] {\n    const alist: string[] = [];\n    for (const ndid in this._contents) {\n      const n = this._contents[ndid];\n      if (n.Model.ExtRefinement !== null) {\n        let extref: string = n.Model.ExtRefinement;\n        if (extref.indexOf(\"/XML/\") > 0) {\n          extref = extref.substr(extref.indexOf(\"/XML/\") + 1);\n        }\n        alist.push(extref);\n      }\n      else\n        if (n.Model.ObjectType === SemTalkType.SemTalkInstance) {\n          const cla = (n.Model as ISemTalkInstance).ClassOf();\n          const scl = cla.SystemClass();\n          if (scl !== null && scl.RefinementOfClass) {\n            if (cla.ExtRefinement !== null) {\n              let extref2: string = cla.ExtRefinement;\n              if (extref2.indexOf(\"/XML/\") > 0) {\n                extref2 = extref2.substr(extref2.indexOf(\"/XML/\") + 1);\n              }\n              alist.push(extref2);\n            }\n          }\n        }\n    }\n    return alist;\n  }\n\n  public NewUserNumber(): string {\n    let n = 1;\n    let s = \"\";\n    for (const shpid in this._contents) {\n      const o = this._contents[shpid].Model;\n      const u = o.GetValue(SemTalkBaseConstant.SLUserNumber);\n      if (u !== undefined && u !== null) {\n        let us = u as string;\n        if (us.indexOf(\".\") > 0) {\n          if (s === \"\") {\n            s = us.substr(0, us.lastIndexOf(\".\") + 1);\n          }\n          us = us.substr(us.lastIndexOf(\".\") + 1);\n        }\n        const ui = Number(us) + 1;\n        if (ui > n) {\n          n = ui;\n        }\n      }\n    }\n    if (s === \"\") {\n      for (const o of this.RefinedObjects()) {\n        const u = o.GetValue(SemTalkBaseConstant.SLUserNumber);\n        if (u !== undefined) {\n          s = u + \".\";\n        }\n      }\n    }\n    s = s + String(n);\n    return s;\n  }\n  public get IsLeaf(): boolean {\n    for (const nd of this.Contents()) {\n      if (nd.Model.Refinement !== null) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  public GetVariant(): ISemTalkDiagram {\n    return this;\n  }\n  public toString(): string {\n    return \"<\" + this.ObjectBase.SemTalkTypeName(this.ObjectType) + \" \" + this.ObjectName + \" \" + this.ClassOf().ObjectName + \">\";\n  }\n  public Load(je: any) {\n    super.Load(je);\n    this.Visible = (je.visible === \"1\");\n    this.vid = je.vid;\n    // this.IsClass = (je.type === \"Class\");\n  }\n  public Save(par: any[]): any {\n    const el: any = super.Save(par);\n    // el.ObjectType = \"Diagram\";\n    if (!this.Visible) { el.Visible = \"0\"; }\n    if (this.vid !== null) { el.vid = this.vid; }\n    if (this.IsClass) { el.type = \"Class\"; }\n    return el;\n  }\n  public SaveXML(xd: XMLDocument, el: HTMLElement): void {\n    super.SaveXML(xd, el);\n    if (!this.Visible) { el.setAttribute(\"Visible\", \"0\"); }\n    if (this.vid) { el.setAttribute(\"vid\", String(this.vid)); }\n    if (this.IsClass) {\n      el.setAttribute(\"type\", \"Class\");\n    } else {\n      el.setAttribute(\"type\", \"Instance\");\n    }\n  }\n  public LoadXML(element: Element): void {\n    super.LoadXML(element);\n    if (element.attributes) {\n      const Visible = (element.attributes.getNamedItem(\"Visible\")?.value === \"1\");\n      if (!Visible) this.Visible = Visible;\n      const vid = element.attributes.getNamedItem(\"vid\")?.value;\n      if (vid) this.vid = Number(vid);\n      // const otype = (element.attributes.getNamedItem(\"type\")?.value === \"Class\");\n      // if (otype) this.IsClass = Number(vid);\n    }\n  }\n}\n\n\nexport class SemTalkNode implements ISemTalkNode {\n  constructor(diag: ISemTalkDiagram, obj: ISemTalkObject, shpid: string, master?: string) {\n    this.Model = (obj as ISemTalkObject);\n    this.Diagram = diag;\n    this.ShapeID = shpid;\n    if (master !== undefined) {\n      this.Master = master;\n    }\n    // if (shpid.indexOf(\".\") > 0) {\n    //   const idstr = shpid.substr(shpid.lastIndexOf(\".\") + 1);\n    //   const shpcpount = Number(idstr);\n    //   this.ID = diag.ID * 1000000 + shpcpount;\n    // } else {\n    //   if (shpid.indexOf(\"#\") > 0) {\n    //     const idstr = shpid.substr(shpid.lastIndexOf(\"#\") + 1);\n    //     const shpcpount = Number(idstr);\n    //     this.ID = diag.ID * 1000000 + shpcpount;\n    //   } else {\n    //     throw(\"Missing NodeID: \" + shpid);\n    //   }\n    // }\n    this.ID = diag.ID.toString() + \"%\" + obj.ID.toString() + \"%\" + shpid;\n    this.Diagram.AddNode(this);\n    this.Model.AddNode(this);\n    this.Model.ObjectBase.OnNodeCreated(obj, diag, shpid);\n  }\n  public Model: ISemTalkObject;\n  public Diagram: ISemTalkDiagram;\n  public ShapeID: string = \"\";\n  public ID: string;\n  public uid: string | null = null;\n  public X: number | null = null;\n  public Y: number | null = null;\n  public Width: number | null = null;\n  public Height: number | null = null;\n  public Master: string | undefined = undefined;\n  protected _type = SemTalkType.SemTalkNode;\n  public get ObjectID(): number { return this.Model.ID; }\n  public get ObjectCaption(): string {\n    return this.Model.ID2NameNsp();\n  }\n  // public get NodeShape(): string { return this.ShapeID; }\n  // public get NodePage(): number { return this.Diagram.ID; }\n  // public get DiagramName(): string { return this.Diagram.ID2NameNsp(); }\n  public toString(): string {\n    return \"<\" + this.Model.ObjectBase.SemTalkTypeName(this._type) + \" \" + this.ID + \" of '\" + this.Model.ObjectName + \"' \" + this.ShapeID + \">\";\n  }\n  public Delete(): void {\n    const shpid = this.ShapeID;\n    const obj = this.Model;\n    const diag = this.Diagram;\n    obj.RemoveNode(this);\n    diag.RemoveNode(this);\n    const ob = obj.ObjectBase;\n    if (ob.IsInstance(obj) && obj.Nodes().length === 0) {\n      const scl: ISemTalkSystemClass | null = (obj as ISemTalkInstance).ClassOf().SystemClass();\n      if (scl !== null && scl.OnceOnly) {\n        // console.debug(\"Delete: \" + scl.ObjectName + \" \" + obj.ObjectName);\n        (obj as ISemTalkInstance).Delete();\n      }\n    }\n    obj.ObjectBase.OnNodeDeleted(obj, diag, shpid);\n  }\n  public Load(je: any) {\n    this.uid = je.uid;\n    this.X = je.x;\n    this.Y = je.x;\n    this.Width = je.width;\n    this.Height = je.height;\n    this.Master = je.master;\n  }\n  public LoadXML(element: Element): void {\n    if (element.attributes) {\n      const uid = element.attributes.getNamedItem(\"uid\")?.value;\n      if (uid) this.uid = uid;\n      const x = element.attributes.getNamedItem(\"x\")?.value;\n      if (x) this.X = Number(x);\n      const y = element.attributes.getNamedItem(\"y\")?.value;\n      if (y) this.Y = Number(y);\n      const width = element.attributes.getNamedItem(\"width\")?.value;\n      if (width) this.Width = Number(width);\n      const height = element.attributes.getNamedItem(\"height\")?.value;\n      if (height) this.Height = Number(height);\n      const master = element.attributes.getNamedItem(\"master\")?.value;\n      if (master) this.Master = master;\n    }\n  }\n  public Save(par: any[]): any {\n    const el: any = {};\n    el.ObjectType = this.Model.ObjectBase.SemTalkTypeName(this._type);\n    par.push(el);\n    if (this.Diagram) { el.page = this.Diagram.ObjectName; }\n    if (this.ShapeID) { el.id = this.ShapeID; }\n    if (this.uid) { el.uid = this.uid; }\n    if (this.X) { el.x = this.X; }\n    if (this.Y) { el.y = this.Y; }\n    if (this.Width) { el.witdh = this.Width; }\n    if (this.Height) { el.height = this.Height; }\n    if (this.Master !== undefined) { el.master = this.Master; }\n    return el;\n  }\n  public SaveXML(_xd: XMLDocument, el: HTMLElement): void {\n    if (this.Diagram) { el.setAttribute(\"page\", this.Diagram.ObjectName); }\n    if (this.ShapeID) { el.setAttribute(\"id\", this.ShapeID); }\n    if (this.uid) { el.setAttribute(\"uid\", this.uid); }\n    if (this.X) { el.setAttribute(\"x\", String(this.X)); }\n    if (this.Y) { el.setAttribute(\"y\", String(this.Y)); }\n    if (this.Width) { el.setAttribute(\"witdh\", String(this.Width)); }\n    if (this.Height) { el.setAttribute(\"height\", String(this.Height)); }\n    if (this.Master) { el.setAttribute(\"master\", this.Master); }\n  }\n  // tslint:disable-next-line:no-empty\n  public ignore(): void { }\n\n}\nexport class SemTalkAssociationNode extends SemTalkNode implements ISemTalkAssociationNode {\n  constructor(diag: ISemTalkDiagram, obj: ISemTalkAssociation, shpid: string, master?: string) {\n    super(diag, obj, shpid, master);\n    this._type = SemTalkType.SemTalkAssociationNode;\n  }\n  public FromShape: string | undefined = undefined;\n  public OtherShape: string | undefined = undefined;\n  public BeginX: number | undefined = undefined;\n  public BeginY: number | undefined = undefined;\n  public EndX: number | undefined = undefined;\n  public EndY: number | undefined = undefined;\n}\n","import { LabelSpec } from \"./Label\";\n\nimport { SemTalkVirtualInstance, SemTalkClass } from './Tbase';\n// import { SemTalkSystemClass } from './SystemClass';\nimport { Utils } from \"./utils\";\n\n// tslint:disable-next-line:ordered-imports\nimport {\n  IObjectBase,\n  ISemTalkObject,\n  ISemTalkClass,\n  ISemTalkMethod,\n  ISemTalkMethodType,\n  ISemTalkState,\n  ISemTalkStateType,\n  ISemTalkAttributeType,\n  ISemTalkBusinessClass,\n  ISemTalkComposition,\n  SemTalkType,\n  ModelAttribute,\n  SemTalkComposeOrder,\n  SemTalkBaseConstant\n} from './Interface';\n\n// tslint:disable:max-classes-per-file\n// tslint:disable:variable-name\n\n/* tslint:disable:member-ordering */\n/* tslint:disable:forin */\nexport class SemTalkBusinessClass extends SemTalkClass implements ISemTalkBusinessClass {\n  constructor(tb: IObjectBase, newname: string, id?: number | null) {\n    super(tb, newname, id);\n    return this;\n  }\n  public Delete(): void {\n    super.Delete();\n    for (const l of this.Methods()) {\n      l.Delete();\n    }\n  }\n\n  public AllStateTypes(): ISemTalkStateType[] {\n    const alist: ISemTalkStateType[] = [];\n    const fnd: any = {};\n    const fnda: any = {};\n    for (const x of this.States()) {\n      const atype = x.ClassOf();\n      // if (fnda[atype.ObjectName] === undefined) {\n      fnda[atype.ObjectName] = atype;\n      alist.push(atype);\n      // }\n    }\n    function allsuperclassesrec(cl: ISemTalkClass) {\n      for (const x of cl.SuperClasses()) {\n        if (fnd[x.ObjectName] === undefined) {\n          fnd[x.ObjectName] = x;\n          if (x instanceof SemTalkBusinessClass) {\n            for (const xs of x.States()) {\n              if (x instanceof SemTalkBusinessClass) {\n                const atypes = xs.ClassOf();\n                if (fnda[atypes.ObjectName] === undefined) {\n                  fnda[atypes.ObjectName] = atypes;\n                  alist.push(atypes);\n                }\n              }\n            }\n          }\n          allsuperclassesrec(x);\n        }\n      }\n    }\n    allsuperclassesrec(this);\n    return alist;\n  }\n\n  private _methods: { [id: string]: ISemTalkMethod } = {};\n  public AddMethod(a: ISemTalkMethod): ISemTalkMethod {\n    try {\n      const mt: ISemTalkMethodType = a.ClassOf();\n      this._methods[mt.ID + \"_\"] = a;\n    } catch (e) {\n      console.debug(\"AddMethod: \", e);\n    }\n    return a;\n  }\n  public RemoveMethod(a: ISemTalkMethod): void {\n    delete this._methods[a.ClassOf().ID + \"_\"];\n  }\n  public Methods(): ISemTalkMethod[] {\n    const alist: ISemTalkMethod[] = [];\n    for (const index in this._methods) {\n      const x = this._methods[index];\n      alist.push(x);\n    }\n    return alist;\n  }\n  public FindMethod(attr: string | ISemTalkMethodType): ISemTalkMethod | null {\n    let cla: ISemTalkMethodType | null;\n    if (typeof attr === 'string') {\n      cla = this.ObjectBase.FindMethodType(attr as string);\n    } else {\n      cla = attr as ISemTalkMethodType;\n    }\n    if (cla === null) {\n      return null;\n    } else {\n      const a = this._methods[cla.ID + \"_\"];\n      if (a === undefined) {\n        return null;\n      } else {\n        return a;\n      }\n    }\n  }\n  public FindAMethod(attr: string | ISemTalkMethodType): ISemTalkMethod | null {\n    let m = this.FindMethod(attr);\n    if (m === null) {\n      for (let s of this.SuperClasses()) {\n        if (this.ObjectBase.IsBusinessClass(s)) {\n          let m1 = (s as ISemTalkBusinessClass).FindAMethod(attr);\n          if (m1) {\n            return m1;\n          }\n        }\n      }\n    }\n    return m;\n  }\n  public static getMethodType(ob: IObjectBase, attr: string | ISemTalkMethodType): ISemTalkMethodType {\n    if (typeof attr === 'string') {\n      const mt = ob.FindMethodType(attr as string);\n      if (mt !== null) {\n        return mt;\n      } else {\n        return new SemTalkMethodType(ob, attr as string);\n      }\n    } else {\n      return attr as ISemTalkMethodType;\n    }\n  }\n  public MakeMethod(attr: string | ISemTalkMethodType): ISemTalkMethod {\n    const cla = SemTalkBusinessClass.getMethodType(this.ObjectBase, attr);\n    // if (cla === null) { throw new Error(\"MakeMethod failed\" + attr); }\n    let a = this.FindMethod(cla);\n    if (a === null) {\n      a = new SemTalkMethod(this, cla);\n      this._methods[cla.ID + \"_\"] = a;\n      a.SetClass(cla);\n    }\n    return a;\n  }\n  public DeleteMethod(attr: string | ISemTalkMethodType): void {\n    let ob = this.ObjectBase;\n    let cla: ISemTalkMethodType | null;\n    if (typeof attr === 'string') {\n      cla = ob.FindMethodType(attr);\n    } else {\n      cla = attr as ISemTalkMethodType;\n    }\n    if (cla === null) {\n      throw new Error(\"DeleteMethod failed: \" + attr);\n    }\n    const at: ISemTalkMethod | null = this.FindMethod(cla);\n    if (at) {\n      at.Delete();\n      delete this._methods[at.ClassOf().ID + \"_\"];\n      this.Changed = new Date().toUTCString();\n      this.ChangedBy = this.ObjectBase.User;\n      this.ObjectBase.OnMethodDeleted(at);\n    }\n    // return this;\n\n    //  const cla = SemTalkBusinessClass.getMethodType(this.ObjectBase, attr);\n    // if (cla === null) { throw new Error(\"DeleteMethod failed: \" + attr); }\n    // const a = this.FindMethod(cla);\n    // if (a !== null) { a.Delete(); }\n    // // if (this._methods[cla.ID + \"_\"] !== undefined) {\n    // //   this._methods[cla.ID + \"_\"].Delete();\n    // // }\n  }\n\n\n\n  private _states: { [id: string]: ISemTalkState } = {};\n  public AddState(a: ISemTalkState): ISemTalkState {\n    try {\n      const mt: ISemTalkStateType = a.ClassOf();\n      this._states[mt.ID + \"_\"] = a;\n    } catch (e) {\n      console.debug(\"AddState: \", e);\n    }\n    return a;\n  }\n  public RemoveState(a: ISemTalkState): void {\n    delete this._states[a.ClassOf().ID + \"_\"];\n  }\n  public FindState(attr: string | ISemTalkStateType): ISemTalkState | null {\n    let cla: ISemTalkStateType | null;\n    if (typeof attr === 'string') {\n      cla = this.ObjectBase.FindStateType(attr as string);\n    } else {\n      cla = attr as ISemTalkStateType;\n    }\n    if (cla === null) {\n      return null;\n    } else {\n      const a = this._states[cla.ID + \"_\"];\n      if (a === undefined) {\n        return null;\n      } else {\n        return a;\n      }\n    }\n  }\n  public FindAState(attr: string | ISemTalkStateType): ISemTalkState | null {\n    let m = this.FindState(attr);\n    if (m === null) {\n      for (let s of this.SuperClasses()) {\n        if (this.ObjectBase.IsBusinessClass(s)) {\n          let m1 = (s as ISemTalkBusinessClass).FindAState(attr);\n          if (m1) {\n            return m1;\n          }\n        }\n      }\n    }\n    return m;\n  }\n\n\n  public static getStateType(ob: IObjectBase, attr: string | ISemTalkStateType): ISemTalkStateType {\n    if (typeof attr === 'string') {\n      const mt = ob.FindStateType(attr as string);\n      if (mt !== null) {\n        return mt;\n      } else {\n        return new SemTalkStateType(ob, attr as string);\n      }\n    } else {\n      return attr as ISemTalkStateType;\n    }\n  }\n\n  public MakeState(attr: string | ISemTalkStateType): ISemTalkState {\n    const cla = SemTalkBusinessClass.getStateType(this.ObjectBase, attr);\n    // if (cla === null) { throw new Error(\"MakeState failed\" + attr); }\n    let a = this.FindState(cla);\n    if (a === null) {\n      a = new SemTalkState(this, cla);\n      this._states[cla.ID + \"_\"] = a;\n      a.SetClass(cla);\n    }\n    return a;\n  }\n  public DeleteState(attr: string | ISemTalkStateType): void {\n    let ob = this.ObjectBase;\n    let cla: ISemTalkStateType | null;\n    if (typeof attr === 'string') {\n      cla = ob.FindStateType(attr);\n    } else {\n      cla = attr as ISemTalkStateType;\n    }\n    if (cla === null) {\n      throw new Error(\"DeleteState failed: \" + attr);\n    }\n    const at: ISemTalkState | null = this.FindState(cla);\n    if (at) {\n      at.Delete();\n      delete this._states[at.ClassOf().ID + \"_\"];\n      this.Changed = new Date().toUTCString();\n      this.ChangedBy = this.ObjectBase.User;\n      this.ObjectBase.OnStateDeleted(at);\n    }\n  }\n\n  public States(): ISemTalkState[] {\n    const alist: ISemTalkState[] = [];\n    for (const an in this._states) {\n      const a = this._states[an];\n      alist.push(a);\n    }\n    return alist;\n  }\n\n  public AllMethods(): ISemTalkMethod[] {\n    const alist: ISemTalkMethod[] = [];\n    const fnd: any = {};\n    const fnda: any = {};\n    for (const x of this.Methods()) {\n      const atype = x.ClassOf();\n      // if (fnda[atype.ObjectName] === undefined) {\n      fnda[atype.ObjectName] = atype;\n      alist.push(x);\n      // }\n    }\n    function allsuperclassesrec(cl: ISemTalkBusinessClass) {\n      for (const x of cl.SuperClasses()) {\n        if (fnd[x.ObjectName] === undefined && (x instanceof SemTalkBusinessClass)) {\n          fnd[x.ObjectName] = x;\n          for (const xs of x.Methods()) {\n            const atypes = xs.ClassOf();\n            //  if (fnda[atypes.ObjectName] === undefined) {\n            fnda[atypes.ObjectName] = atypes;\n            alist.push(xs);\n            //  }\n          }\n          allsuperclassesrec(x);\n        }\n      }\n    }\n    allsuperclassesrec(this);\n    return alist;\n  }\n  public AllMethodTypes(): ISemTalkMethodType[] {\n    const alist: ISemTalkMethodType[] = [];\n    const fnd: any = {};\n    const fnda: any = {};\n    for (const x of this.Methods()) {\n      const atype = x.ClassOf();\n      if (fnda[atype.ObjectName] === undefined) {\n        fnda[atype.ObjectName] = atype;\n        alist.push(atype);\n      }\n    }\n    function allsuperclassesrec(cl: SemTalkBusinessClass) {\n      for (const x of cl.SuperClasses()) {\n        if ((fnd[x.ObjectName] === undefined) && (x instanceof SemTalkBusinessClass)) {\n          fnd[x.ObjectName] = x;\n          for (const xs of x.Methods()) {\n            const atypes = xs.ClassOf();\n            if (fnda[atypes.ObjectName] === undefined) {\n              fnda[atypes.ObjectName] = atypes;\n              alist.push(atypes);\n            }\n          }\n          allsuperclassesrec(x);\n        }\n      }\n    }\n    allsuperclassesrec(this);\n    return alist;\n  }\n  public AllStates(): ISemTalkState[] {\n    const alist: ISemTalkState[] = [];\n    const fnd: any = {};\n    const fnda: any = {};\n    for (const x of this.States()) {\n      const atype = x.ClassOf();\n      // if (fnda[atype.ObjectName] === undefined) {\n      fnda[atype.ObjectName] = atype;\n      alist.push(x);\n      // }\n    }\n    function allsuperclassesrec(cl: ISemTalkClass) {\n      for (const x of cl.SuperClasses()) {\n        if (fnd[x.ObjectName] === undefined) {\n          fnd[x.ObjectName] = x;\n          if (x instanceof SemTalkBusinessClass) {\n            for (const xs of x.States()) {\n              const atypes = xs.ClassOf();\n              if (fnda[atypes.ObjectName] === undefined) {\n                fnda[atypes.ObjectName] = atypes;\n                alist[alist.length] = xs;\n              }\n            }\n          }\n          allsuperclassesrec(x);\n        }\n      }\n    }\n    allsuperclassesrec(this);\n    return alist;\n  }\n\n  public UpdateLabel(mastername?: string): LabelSpec {\n    const lbl = this.ObjectBase.MakeLabelSpec();\n    // const lbl = super.UpdateLabel(mastername);\n    lbl.newtxt = \"\";\n    // let masternameU = mastername;\n    if (mastername === undefined) {\n      mastername = \"\";\n    }\n    mastername = Utils.MasterNoDot(mastername);\n    if (lbl.isuml) { lbl.newtxt = \"\"; }\n\n    let haslabels: boolean = false;\n    const sc = this.SystemClass();\n    if (sc !== null) {\n      haslabels = sc.CollectBusinessClassLabels(lbl, this, mastername);\n    }\n    lbl.haslabels = haslabels;\n    if (!haslabels && lbl.newtxt === \"\") {\n      lbl.newtxt = this.ID2NameNsp();\n    }\n    // if (haslabels && !lbl.isuml && lbl.newtxt === \"\") {\n    //   lbl.newtxt = this.ID2NameNsp();\n    // }\n    return lbl;\n  }\n  public Load(je: any): void {\n    super.Load(je);\n    //  const obj: ISemTalkBusinessClass = this;\n    if (je.methods) {\n      for (const i in je.methods) {\n        const a: any = je.methods[i];\n        // Der SemTalk Visio Export schreibt \"name\". SemTalk Online Export schreibt \"class\"\n        let cl = a[\"class\"];\n        if (cl === undefined && a[\"name\"] !== undefined) {\n          cl = a[\"name\"];\n        }\n        if (cl) {\n          const an: SemTalkMethod = new SemTalkMethod(this, cl);\n          an.Load(a);\n        }\n      }\n    }\n    if (je.states) {\n      for (const ai in je.states) {\n        const a: any = je.states[ai];\n        // Der SemTalk Visio Export schreibt \"name\". SemTalk Online Export schreibt \"class\"\n        let cl = a[\"class\"];\n        if (cl === undefined && a[\"name\"] !== undefined) {\n          cl = a[\"name\"];\n        }\n        if (cl) {\n          const an: SemTalkState = new SemTalkState(this, cl);\n          an.Load(a);\n        }\n      }\n    }\n  }\n  public LoadXML(element: Element): void {\n    super.LoadXML(element);\n    const methods = element.getElementsByTagName(\"Method\");\n    for (const i in methods) {\n      const a = methods[i];\n      if (a.parentNode === element && a.attributes && a.nodeName === \"Method\") {\n        const name = a.attributes.getNamedItem(\"name\")?.value;\n          let aname = a.attributes.getNamedItem(\"class\")?.value;\n          if (aname === undefined) {\n            aname = name;\n          }\n          if (aname) {\n            const an = this.MakeMethod(aname);\n            if (an) an.LoadXML(a);\n          }\n        }\n    }\n    const states = element.getElementsByTagName(\"State\");\n    for (const i in states) {\n      const a = methods[i];\n      if (a.parentNode === element && a.attributes  && a.nodeName === \"State\") {\n        const name = a.attributes.getNamedItem(\"name\")?.value;\n          let aname = a.attributes.getNamedItem(\"class\")?.value;\n          if (aname === undefined) {\n            aname = name;\n          }\n          if (aname) {\n            const an = this.MakeState(aname);\n            if (an) an.LoadXML(a);\n          }\n        }\n    }\n  }\n\n  public Save(par: any[]): any {\n    const el: any = super.Save(par);\n    el.BusinessClass = \"True\";\n    if (this._methods) {\n      const ml: any[] = [];\n      for (const l of this.Methods()) {\n        if (l.ClassOf()) {\n          l.Save(ml);\n        }\n      }\n      el.methods = ml;\n    }\n    if (this._states) {\n      const ml: any[] = [];\n      for (const l of this.States()) {\n        if (l.ClassOf()) {\n          l.Save(ml);\n        }\n      }\n      el.states = ml;\n    }\n    return el;\n  }\n  public SaveXML(xd: XMLDocument, el: HTMLElement): void {\n    super.SaveXML(xd, el);\n    el.setAttribute(\"BusinessClass\", \"True\");\n    if (this._methods) {\n      for (const l of this.Methods()) {\n        if (l.ClassOf()) {\n          let me = xd.createElement(\"Method\");\n          el.appendChild(me);\n          l.SaveXML(xd, me);\n        }\n      }\n    }\n    if (this._states) {\n      for (const l of this.States()) {\n        if (l.ClassOf()) {\n          let me = xd.createElement(\"State\");\n          el.appendChild(me);\n          l.SaveXML(xd, me);\n        }\n      }\n    }\n  }\n}\n\nexport class SemTalkStateType extends SemTalkClass implements ISemTalkStateType {\n  constructor(tb: IObjectBase, newname: string, id?: number | null) {\n    super(tb, newname, id);\n    this.ObjectType = SemTalkType.SemTalkStateType;\n    if (tb.FindStateType(newname) === null) {\n      tb._statetypes[this.ID + \"_\"] = this;\n      // } else {\n      //   super.Delete();\n      //   this.ObjectType = SemTalkType.SemTalkStateType;\n      //   throw new Error(\"SemTalkStateType: There is another SemTalkStateType named: \" + newname);\n    }\n  }\n  public Delete(): void {\n    super.Delete();\n    const tb = this.ObjectBase;\n    for (const objid in tb._classes) {\n      const s = tb._classes[objid];\n      if (s instanceof SemTalkBusinessClass) {\n        for (const attr of s.States()) {\n          if (attr.ClassOf().ID === this.ID) {\n            attr.Delete();\n          }\n        }\n      }\n    }\n    delete this.ObjectBase._statetypes[this.ID + \"_\"];\n  }\n}\nexport class SemTalkMethodType extends SemTalkClass implements ISemTalkMethodType {\n  constructor(tb: IObjectBase, newname: string, id?: number | null) {\n    super(tb, newname, id);\n    this.ObjectType = SemTalkType.SemTalkMethodType;\n    if (tb.FindMethodType(newname) === null) {\n      tb._methodtypes[this.ID + \"_\"] = this;\n      // } else {\n      //   super.Delete();\n      //   throw new Error(\"SemTalkMethodType: There is another SemTalkMethodType named: \" + newname);\n    }\n  }\n  public Delete(): void {\n    super.Delete();\n    const tb = this.ObjectBase;\n    for (const objid in tb._classes) {\n      const s = tb._classes[objid];\n      if (s instanceof SemTalkBusinessClass) {\n        for (const attr of s.Methods()) {\n          if (attr.ClassOf().ID === this.ID) {\n            attr.Delete();\n          }\n        }\n      }\n    }\n    delete this.ObjectBase._methodtypes[this.ID + \"_\"];\n  }\n\n}\n\nexport class SemTalkState extends SemTalkVirtualInstance implements ISemTalkState {\n  constructor(obj: ISemTalkBusinessClass, newname: string | ISemTalkStateType) {\n    super(SemTalkType.SemTalkState, obj);\n    this.Owner = obj;\n    const tb = obj.ObjectBase;\n    const at1 = SemTalkBusinessClass.getStateType(tb, newname);\n    this.SetClass(at1);\n    obj.AddState(this);\n    tb.OnStateAdded(this);\n  }\n  public Owner: ISemTalkBusinessClass;\n  public get PropName(): string { return this.ClassOf().ID2Name; }\n  public get PropType(): string { return this.ClassOf().ObjectBase.SemTalkTypeName(this.ObjectType); }\n  public ClassOf(): ISemTalkStateType {\n    return super.ClassOf() as ISemTalkStateType;\n  }\n  public Delete(): void {\n    super.Delete();\n    (this.Owner as ISemTalkBusinessClass).RemoveState(this);\n    this.Owner.ObjectBase.OnStateDeleted(this);\n    // this.Owner = null;\n  }\n  public Load(je: any): SemTalkState {\n    const tb = this.Owner.ObjectBase;\n    // Der SemTalk Visio Export schreibt \"name\". SemTalk Online Export schreibt \"class\"\n    let cname = je[\"class\"];\n    if (cname === undefined && je[\"name\"] !== undefined) {\n      cname = je[\"name\"];\n    }\n    const cl = SemTalkBusinessClass.getStateType(tb, cname);\n    this.SetClass(cl);\n    return this;\n  }\n}\nexport class SemTalkMethod extends SemTalkVirtualInstance implements ISemTalkMethod {\n  constructor(obj: ISemTalkBusinessClass, newname: string | ISemTalkMethodType) {\n    super(SemTalkType.SemTalkMethod, obj);\n    this.Owner = obj;\n    const tb = obj.ObjectBase;\n    const at1 = SemTalkBusinessClass.getMethodType(obj.ObjectBase, newname);\n    this.SetClass(at1);\n    obj.AddMethod(this);\n    tb.OnMethodAdded(this);\n  }\n  public Owner: ISemTalkBusinessClass;\n  public get PropName(): string { return this.ClassOf().ID2Name; }\n  public get PropType(): string { return this.ClassOf().ObjectBase.SemTalkTypeName(this.ObjectType); }\n  public ClassOf(): ISemTalkMethodType {\n    return super.ClassOf() as ISemTalkMethodType;\n  }\n  public Delete(): void {\n    super.Delete();\n    this.Owner.RemoveMethod(this);\n    this.Owner.ObjectBase.OnMethodDeleted(this);\n    // this.Owner = null;\n  }\n  public Load(je: any): SemTalkMethod {\n    const tb = this.Owner.ObjectBase;\n    // Der SemTalk Visio Export schreibt \"name\". SemTalk Online Export schreibt \"class\"\n    let cname = je[\"class\"];\n    if (cname === undefined && je[\"name\"] !== undefined) {\n      cname = je[\"name\"];\n    }\n    const cl = SemTalkBusinessClass.getMethodType(tb, cname);\n    this.SetClass(cl);\n    return this;\n  }\n}\nexport class SemTalkComposition implements ISemTalkComposition {\n  constructor(own: ISemTalkObject, cls: ISemTalkBusinessClass, met: ISemTalkMethodType | null, sta: ISemTalkStateType | null,\n    attr: ISemTalkAttributeType | null, oth?: ISemTalkBusinessClass | null, op?: string, isnotop?: boolean, cmpvalue?: any) {\n    this.ComposedClass = cls;\n    if (met !== null) { this.Method = met; }\n    this.Owner = own;\n    this.State = sta;\n    this.Attribute = attr;\n    if (oth !== undefined) {\n      this.Other = oth;\n    }\n    if (op !== undefined) { this.Op = op; }\n    if (isnotop !== undefined) { this.NotOp = isnotop; }\n    if (cmpvalue !== undefined) { this.Value = cmpvalue; }\n  }\n  public Owner: ISemTalkObject;\n  public ComposedClass: ISemTalkBusinessClass;\n  public Method: ISemTalkMethodType | null = null;\n  public State: ISemTalkStateType | null;\n  public Other: ISemTalkBusinessClass | null = null;\n  public Attribute: ISemTalkAttributeType | null;\n  public Op: string | null = null;\n  public NotOp: boolean | null = null;\n  public Value: any;\n  private _type: SemTalkType = SemTalkType.SemTalkComposition;\n\n  public toString(): string {\n    return \"<\" + this.Owner.ObjectBase.SemTalkTypeName(this._type) + this.Owner.ObjectName + \">\";\n  }\n\n  public ID2NameNsp(): string {\n    let forder: boolean = (this.Owner.ObjectBase.GetModelAttribute(ModelAttribute.forder) === SemTalkComposeOrder.NounVerb);\n    if (this.Method && this.Method.ObjectName === SemTalkBaseConstant.SLHas) {\n      // console.debug(\"has\");\n      forder = false;\n    }\n    if (forder) {\n      let str = this.ComposedClass.ID2NameNsp();\n      if (this.Attribute) {\n        str = str + \" \" + this.Attribute.ID2NameNsp();\n      }\n      if (this.Method) {\n        str = str + \" \" + this.Method.ID2NameNsp();\n      }\n      if (this.Op) {\n        str = str + \" \" + this.Op;\n      }\n      if (this.State) {\n        str = str + \" \" + this.State.ID2NameNsp();\n      }\n      if (this.Op) {\n        str = str + \" \" + this.Op;\n      }\n      if (this.Value) {\n        str = str + \" \" + this.Value;\n      }\n      return str;\n    } else {\n      let str = \"\";\n      if (this.Method) {\n        str = str + \" \" + this.Method.ID2NameNsp();\n      }\n      if (this.Attribute) {\n        str = str + \" \" + this.Attribute.ID2NameNsp();\n      }\n      if (this.State) {\n        str = str + \" \" + this.State.ID2NameNsp();\n      }\n      str = str + \" \" + this.ComposedClass.ID2NameNsp();\n      if (this.Op) {\n        str = str + \" \" + this.Op;\n      }\n      if (this.Value) {\n        str = str + \" \" + this.Value;\n      }\n      return str.trim();\n    }\n  }\n  public Delete(): void {\n    if (this.ComposedClass) {\n      this.ComposedClass.RemoveInvComposition(this);\n    }\n    if (this.Other) {\n      this.Other.RemoveInvComposition(this);\n    }\n    if (this.Method) {\n      this.Method.RemoveInvComposition(this);\n    }\n    if (this.State) {\n      this.State.RemoveInvComposition(this);\n    }\n    if (this.Attribute) {\n      this.Attribute.RemoveInvComposition(this);\n    }\n    if (this.Owner && this.Owner.Composition() === this) {\n      this.Owner.DeleteComposition();\n    }\n  }\n  public Save(): any {\n    const el: any = {};\n    el.ObjectType = this.Owner.ObjectBase.SemTalkTypeName(this._type);\n    el.fclass = this.ComposedClass.ObjectName;\n    if (this.Method) {\n      el.fmethod = this.Method.ObjectName;\n    }\n    if (this.Other) {\n      el.fother = this.Other.ObjectName;\n    }\n    if (this.State) {\n      el.feature = this.State.ObjectName;\n      el.ftype = \"1\";\n    }\n    if (this.Attribute) {\n      el.feature = this.Attribute.ObjectName;\n      el.ftype = \"2\";\n    }\n    // if (this.Op) { }\n    el.fop = this.Op;\n    if (this.NotOp) {\n      el.fnot = this.NotOp;\n    }\n    if (this.Value) {\n      el.fvalue = this.Value;\n    }\n    return el;\n  }\n  public SaveXML(_xd: XMLDocument, el: HTMLElement): void {\n    el.setAttribute(\"fclass\", this.ComposedClass.ObjectName);\n    if (this.Method) {\n      el.setAttribute(\"fmethod\", this.Method.ObjectName);\n    }\n    if (this.Other) {\n      el.setAttribute(\"fother\", this.Other.ObjectName);\n    }\n    if (this.State) {\n      el.setAttribute(\"feature\", this.State.ObjectName);\n      el.setAttribute(\"ftype\", \"1\");\n    }\n    if (this.Attribute) {\n      el.setAttribute(\"feature\", this.Attribute.ObjectName);\n      el.setAttribute(\"ftype\", \"2\");\n    }\n    if (this.Op) {\n      el.setAttribute(\"fop\", String(this.Op));\n    }\n    if (this.NotOp) {\n      el.setAttribute(\"fnot\", String(this.NotOp));\n    }\n    if (this.Value) {\n      el.setAttribute(\"fvalue\", String(this.Value));\n    }\n  }\n}\n","import {\r\n  IObjectBase,\r\n  ISemTalkObject,\r\n  ISemTalkClass,\r\n  ISemTalkInstance,\r\n  ISemTalkAttributeType,\r\n  ISemTalkStateType,\r\n  ISemTalkAssociationType,\r\n  ISemTalkMethodType,\r\n  ISemTalkDiagramType,\r\n  ISemTalkDiagram,\r\n  ISemTalkNamedThing,\r\n  ISemTalkAttribute,\r\n  ISemTalkMethod,\r\n  ISemTalkState,\r\n  ISemTalkAssociation,\r\n  ISemTalkSpecialization,\r\n  ISemTalkSynonym,\r\n  ISemTalkSystemClass,\r\n  ISemTalkBusinessClass,\r\n  ISemTalkComposition,\r\n  SemTalkType, SemTalkRelation,\r\n  ISemTalkNode,\r\n  ISemTalkSharePointClass,\r\n  SemTalkValueType,\r\n  SemTalkConnectionPoint,\r\n  SemTalkBaseConstant,\r\n  SemTalkLanguage,\r\n  SemTalkObjectBaseEvent,\r\n  ModelAttribute,\r\n  SemTalkComposeOrder\r\n} from \"./Interface\";\r\n\r\n// import { OB2JSON } from \"./OB2JSON\";\r\n\r\nimport {\r\n  SemTalkClass, SemTalkInstance, SemTalkAssociation, SemTalkAttribute,\r\n  SemTalkAttributeType, SemTalkSharePointClass\r\n} from './Tbase';\r\nimport { SemTalkDiagram, SemTalkNode, SemTalkAssociationNode, SemTalkDiagramType } from './Node';\r\nimport { SemTalkBusinessClass, SemTalkMethodType, SemTalkStateType, SemTalkComposition } from './BusinessClass';\r\nimport { LabelSpec } from \"./Label\";\r\nimport { SemTalkSystemClass, SemTalkAssociationType } from './SystemClass';\r\n\r\n// tslint:disable:max-classes-per-file\r\n// tslint:disable:variable-name\r\n\r\n/* tslint:disable:member-ordering */\r\n/* tslint:disable:forin */\r\n\r\n\r\nexport class ObjectBase implements IObjectBase {\r\n  public _objects: { [name: string]: ISemTalkObject } = {};\r\n  public _objectids: { [id: string]: ISemTalkObject } = {};\r\n  public _classes: { [id: string]: ISemTalkClass } = {};\r\n  public _instances: { [id: string]: ISemTalkInstance } = {};\r\n  public _attrtypes: { [id: string]: ISemTalkAttributeType } = {};\r\n  public _statetypes: { [id: string]: ISemTalkStateType } = {};\r\n  public _assoctypes: { [id: string]: ISemTalkAssociationType } = {};\r\n  public _methodtypes: { [id: string]: ISemTalkMethodType } = {};\r\n  public _diagtypes: { [id: string]: ISemTalkDiagramType } = {};\r\n  public _diags: { [id: string]: ISemTalkDiagram } = {};\r\n  public _callbacks: any[] = [];\r\n\r\n  public ObjectName: string = \"\";\r\n  public ID: number = 0;\r\n  public _currentnsp: SemTalkLanguage;\r\n  public get CurrentNsp(): SemTalkLanguage {\r\n    return this._currentnsp;\r\n  }\r\n\r\n  public maxid: number = 0;\r\n  public _loading: boolean = false;\r\n  public User: string = \"\";\r\n\r\n  constructor() {\r\n    // console.debug(\"new TBase\");\r\n\r\n    //         let baz: any = JSON.parse('{ \"xxx\": 3 }');\r\n \r\n    // this.SetModelAttribute(\"GUILanguage\", \"\");\r\n    // this.SetModelAttribute(ModelAttribute.currentnsp, \"\");\r\n    this.SetModelAttribute(ModelAttribute.forder, SemTalkComposeOrder.NounVerb);\r\n    this.SetModelAttribute(ModelAttribute.Template, \"semtalk.vst\");\r\n    this.SetModelAttribute(ModelAttribute.modname, \"\");\r\n\r\n  }\r\n\r\n  public PostEvent(evt: any, obj: ISemTalkNamedThing | null, arg0?: any, arg1?: any, arg2?: any): void {\r\n    if (!this._loading) {\r\n      const m: any = {};\r\n      m.type = evt;\r\n      m.modelname = this.ObjectName;\r\n      if (obj !== null) {\r\n        m.objectname = obj.ObjectName;\r\n        let s: string;\r\n        s = obj.ObjectCaption;\r\n        m.objectcaption = s;\r\n        m.objectid = obj.ID;\r\n        m.semtalktype = obj.ObjectType;\r\n      }\r\n      m.modelid = this.ID;\r\n      m.arg0 = arg0;\r\n      m.arg1 = arg1;\r\n      m.arg2 = arg2;\r\n      const mstr = JSON.stringify(m);\r\n      this.LogAsync(mstr);\r\n      if (typeof window !== 'undefined') {\r\n        window.parent.postMessage(mstr, '*');\r\n      }\r\n      for (const cb of this._callbacks) {\r\n        cb.getMessage({ \"data\": mstr, \"sender\": this });\r\n      }\r\n    }\r\n  }\r\n  public PostAny(m: any): void {\r\n       const mstr = JSON.stringify(m);\r\n      this.LogAsync(mstr);\r\n      if (typeof window !== 'undefined') {\r\n        window.parent.postMessage(mstr, '*');\r\n      }\r\n      for (const cb of this._callbacks) {\r\n        cb.getMessage({ \"data\": mstr, \"sender\": this });\r\n      }\r\n  }\r\n  public Log(msg: any): void {\r\n    // tslint:disable-next-line:no-console\r\n    console.log(msg);\r\n  }\r\n  public LogAsync(_msg: any, _succeed?: () => void, _nextfunction?: () => void): void {\r\n    // tslint:disable-next-line:no-console\r\n    // console.log(msg);\r\n  }\r\n\r\n  public OnCreated(obj: ISemTalkObject): void { this.PostEvent(SemTalkObjectBaseEvent.OnCreated, obj, obj.ObjectType, obj.ID, null); }\r\n  public OnBeforeDeleted(obj: ISemTalkObject): void { this.PostEvent(SemTalkObjectBaseEvent.OnBeforeDeleted, obj, null, null, null); }\r\n  public OnDeleted(obj: ISemTalkObject): void { this.PostEvent(SemTalkObjectBaseEvent.OnDeleted, obj, null, null, null); }\r\n  public OnRenamed(obj: ISemTalkObject, oldname: string): void { this.PostEvent(SemTalkObjectBaseEvent.OnRenamed, obj, oldname, null, null); }\r\n  public OnCommentChanged(obj: ISemTalkObject, oldvalue: string | null, newvalue: string | null): void { this.PostEvent(SemTalkObjectBaseEvent.OnCommentChanged, obj, oldvalue, newvalue, null); }\r\n  public OnRefined(obj: ISemTalkObject, old: ISemTalkDiagram): void { this.PostEvent(SemTalkObjectBaseEvent.OnRefined, obj, old.ObjectName, null, null); }\r\n  public OnDetached(obj: ISemTalkObject, value: ISemTalkDiagram): void { this.PostEvent(SemTalkObjectBaseEvent.OnDetached, obj, value.ObjectName, null, null); }\r\n  public OnComposed(obj: ISemTalkObject): void { this.PostEvent(SemTalkObjectBaseEvent.OnComposed, obj, null, null, null); }\r\n  public OnUnComposed(obj: ISemTalkObject): void { this.PostEvent(SemTalkObjectBaseEvent.OnUnComposed, obj, null, null, null); }\r\n  public OnAttributeAdded(obj: ISemTalkAttribute): void { this.PostEvent(SemTalkObjectBaseEvent.OnAttributeAdded, obj.Owner, obj.PropName, null, null); }\r\n  public OnAttributeDeleted(obj: ISemTalkAttribute): void { this.PostEvent(SemTalkObjectBaseEvent.OnAttributeDeleted, obj.Owner, obj.PropName, null, null); }\r\n  public OnAttributeRenamed(obj: ISemTalkAttribute): void { this.PostEvent(SemTalkObjectBaseEvent.OnAttributeRenamed, obj.Owner, obj.PropName, null, null); }\r\n  public OnValueChanged(obj: ISemTalkAttribute, oldvalue: any): void { this.PostEvent(SemTalkObjectBaseEvent.OnValueChanged, obj.Owner, oldvalue, obj.Value, obj.ClassOf().ObjectName); }\r\n  public OnUserNumberChanged(obj: ISemTalkAttribute, oldvalue: string): void { this.PostEvent(SemTalkObjectBaseEvent.OnUserNumberChanged, obj.Owner, oldvalue, obj.Value, null); }\r\n  public OnColorChanged(obj: ISemTalkAttribute, oldvalue: string): void { this.PostEvent(SemTalkObjectBaseEvent.OnColorChanged, obj.Owner, oldvalue, obj.Value, null); }\r\n  public OnStateAdded(obj: ISemTalkState): void { this.PostEvent(SemTalkObjectBaseEvent.OnStateAdded, obj.Owner, obj.PropName, null, null); }\r\n  public OnStateRenamed(obj: ISemTalkState, oldvalue: any): void { this.PostEvent(SemTalkObjectBaseEvent.OnStateRenamed, obj.Owner, oldvalue, null, null); }\r\n  public OnStateDeleted(obj: ISemTalkState): void { this.PostEvent(SemTalkObjectBaseEvent.OnStateDeleted, obj.Owner, obj.PropName, null, null); }\r\n  public OnMethodAdded(obj: ISemTalkMethod): void { this.PostEvent(SemTalkObjectBaseEvent.OnMethodAdded, obj.Owner, obj.PropName, null, null); }\r\n  public OnMethodDeleted(obj: ISemTalkMethod): void { this.PostEvent(SemTalkObjectBaseEvent.OnMethodDeleted, obj.Owner, null, null, null); }\r\n  public OnAssociationAdded(obj: ISemTalkAssociation): void { this.PostEvent(SemTalkObjectBaseEvent.OnAssociationAdded, obj, obj.PropName, obj.ToObject.ObjectName, obj.ToObject.ID); }\r\n  public OnAssociationDeleted(obj: ISemTalkAssociation): void { this.PostEvent(SemTalkObjectBaseEvent.OnAssociationDeleted, obj, obj.PropName, obj.FromObject.ID, obj.ToObject.ID); }\r\n  public OnAssociationBeforeDeletedByID(obj: ISemTalkAssociation): void { this.PostEvent(SemTalkObjectBaseEvent.OnAssociationBeforeDeleted, obj, obj.PropName, null, null); }\r\n  public OnAssociationBeforeDeleted(obj: ISemTalkAssociation): void { this.PostEvent(SemTalkObjectBaseEvent.OnAssociationBeforeDeleted, obj, obj.PropName, null, null); }\r\n  public OnSubClassCreated(obj: ISemTalkSpecialization): void { this.PostEvent(SemTalkObjectBaseEvent.OnSubClassCreated, obj.FromObject, obj.PropName, obj.ToObject.ObjectName, obj.ToObject.ID); }\r\n  public OnSubClassDeleted(obj: ISemTalkSpecialization): void { this.PostEvent(SemTalkObjectBaseEvent.OnSubClassDeleted, obj.FromObject, obj.PropName, obj.ToObject.ObjectName, obj.ToObject.ID); }\r\n  public OnAttachmentAdded(obj: ISemTalkAssociation): void { this.PostEvent(SemTalkObjectBaseEvent.OnAttachmentAdded, obj.FromObject, obj.PropName, obj.ToObject.ObjectName, null); }\r\n  public OnAttachmentDeleted(obj: ISemTalkAssociation): void { this.PostEvent(SemTalkObjectBaseEvent.OnAttachmentDeleted, obj.FromObject, obj.PropName, obj.ToObject.ObjectName, null); }\r\n  public OnAttachmentRenamed(obj: ISemTalkAssociation): void { this.PostEvent(SemTalkObjectBaseEvent.OnAttachmentRenamed, obj.FromObject, obj.PropName, obj.ToObject.ObjectName, null); }\r\n  public OnNodeCreated(obj: ISemTalkObject, d: ISemTalkDiagram, s: string): void { this.PostEvent(SemTalkObjectBaseEvent.OnNodeCreated, obj, d.ObjectName, s, null); }\r\n  public OnNodeDeleted(obj: ISemTalkObject, d: ISemTalkDiagram, s: string): void { this.PostEvent(SemTalkObjectBaseEvent.OnNodeDeleted, obj, d.ObjectName, s, null); }\r\n  public OnClassBeforeDeleted(obj: ISemTalkClass): void { this.PostEvent(SemTalkObjectBaseEvent.OnClassBeforeDeleted, obj, null, null, null); }\r\n  public OnClassDeleted(obj: ISemTalkClass): void { this.PostEvent(SemTalkObjectBaseEvent.OnClassDeleted, obj, null, null, null); }\r\n  public OnInstanceDeleted(obj: ISemTalkInstance): void { this.PostEvent(SemTalkObjectBaseEvent.OnInstanceDeleted, obj, null, null, null); }\r\n  public OnDiagramDeleted(obj: ISemTalkDiagram): void { this.PostEvent(SemTalkObjectBaseEvent.OnDiagramDeleted, obj, null, null, null); }\r\n  public OnDiagramCreated(obj: ISemTalkDiagram): void { this.PostEvent(SemTalkObjectBaseEvent.OnDiagramCreated, obj, obj.ObjectType, obj.ID, null); }\r\n//  public OnDiagramClassChanged(obj: ISemTalkDiagram): void { this.PostEvent(SemTalkObjectBaseEvent.OnDiagramClassChanged, obj, obj.ObjectType, obj.ID, null); }\r\n  public OnSynonymAdded(obj: ISemTalkSynonym): void { this.PostEvent(SemTalkObjectBaseEvent.OnSynonymAdded, obj.Owner, obj.Name, obj.Language, null); }\r\n  public OnSynonymDeleted(obj: ISemTalkSynonym): void { this.PostEvent(SemTalkObjectBaseEvent.OnSynonymDeleted, obj.Owner, obj.Name, obj.Language, null); }\r\n  public OnSynonymRenamed(obj: ISemTalkSynonym, oldname: string): void { this.PostEvent(SemTalkObjectBaseEvent.OnSynonymRenamed, obj.Owner, obj.Name, obj.Language, oldname); }\r\n  public OnClassChanged(ins: ISemTalkInstance, old: ISemTalkClass | null): void { this.PostEvent(SemTalkObjectBaseEvent.OnClassChanged, ins, old ? old.ObjectName : null, null, null); }\r\n  public OnLoaded(filename: string): void { this.PostEvent(SemTalkObjectBaseEvent.OnLoaded, null, filename, null, null); }\r\n  public OnSaved(filename: string): void { this.PostEvent(SemTalkObjectBaseEvent.OnSaved, null, filename, null, null); }\r\n  public OnBeforeSaved(filename: string): void { this.PostEvent(SemTalkObjectBaseEvent.OnBeforeSaved, null, filename, null, null); }\r\n  public OnModelAttributeChanged(attr: string, oldvalue: any, newvalue: any): void { this.PostEvent(SemTalkObjectBaseEvent.OnModelAttributeChanged, null, attr, oldvalue, newvalue); }\r\n\r\n  public GetModelAttribute(name: string): string {\r\n    return this._modelattr[name];\r\n  }\r\n  public SetModelAttribute(name: string, value: any): void {\r\n    const oldvalue = this._modelattr[name];\r\n    if (value !== oldvalue) {\r\n      this._modelattr[name] = value;\r\n      switch (name) {\r\n        case \"currentnsp\":\r\n          this._currentnsp = value;\r\n      }\r\n      this.OnModelAttributeChanged(name, oldvalue, value);\r\n    }\r\n  }\r\n  public DeleteModelAttribute(name: string): void {\r\n      delete this._modelattr[name];\r\n  }\r\n  // public AllLanguages(): string[] {\r\n  //   return this._languages;\r\n  // }\r\n  public AllModelAttributes(): string[] {\r\n    let mlist: string[] = [];\r\n    for (const i in this._modelattr) {\r\n      //   mlist.push(this._modelattr[i]);\r\n      mlist.push(i);\r\n    }\r\n    return mlist;\r\n  }\r\n  public _modelattr: { [name: string]: string } = {};\r\n\r\n  /*     public ID2NameNspLan(obj: SemTalkNamedThing, lang: string): string {\r\n          let res: string = obj.CurrentName(lang);\r\n          if (res.indexOf(\"#\") > -1) {\r\n              res = res.substr(res.indexOf(\"#\") + 1);\r\n          }\r\n          return res\r\n      }\r\n   */\r\n  public FindAttributeType(name: string): ISemTalkAttributeType | null {\r\n    for (const i in this._attrtypes) {\r\n      const s: ISemTalkAttributeType = this._attrtypes[i];\r\n      if (s.ObjectName === name) { return s; }\r\n    }\r\n    return null;\r\n  }\r\n  public FindStateType(name: string): ISemTalkStateType | null {\r\n    for (const i in this._statetypes) {\r\n      const s: ISemTalkStateType = this._statetypes[i];\r\n      if (s.ObjectName === name) { return s; }\r\n    }\r\n    return null;\r\n  }\r\n  public FindMethodType(name: string): ISemTalkMethodType | null {\r\n    for (const i in this._methodtypes) {\r\n      const s: ISemTalkMethodType = this._methodtypes[i];\r\n      if (s.ObjectName === name) { return s; }\r\n    }\r\n    return null;\r\n  }\r\n  public FindAssociationType(name: string): ISemTalkAssociationType | null {\r\n    for (const i in this._assoctypes) {\r\n      const s: ISemTalkAssociationType = this._assoctypes[i];\r\n      if (s.ObjectName === name) { return s; }\r\n    }\r\n    return null;\r\n  }\r\n  public FindDiagramType(name: string): ISemTalkDiagramType | null {\r\n    for (const i in this._diagtypes) {\r\n      const s: ISemTalkDiagramType = this._diagtypes[i];\r\n      if (s.ObjectName === name) { return s; }\r\n    }\r\n    return null;\r\n  }\r\n  public FindClass(name: string): ISemTalkClass | null {\r\n    for (const i in this._classes) {\r\n      const s: ISemTalkClass = this._classes[i];\r\n      if (s.ObjectName === name) { return s; }\r\n    }\r\n    return null;\r\n  }\r\n  public FindClassByID(id: number): ISemTalkClass | null {\r\n    const s: ISemTalkObject = this._objectids[id + \"_\"];\r\n    if (s === undefined) { return null; }\r\n    if (!this.IsClass(s)) { return null; }\r\n    return s as ISemTalkClass;\r\n  }\r\n  public FindSystemClass(name: string): ISemTalkSystemClass | null {\r\n    for (const i in this._classes) {\r\n      const s: ISemTalkClass = this._classes[i];\r\n      if (s.ObjectName === name && s instanceof SemTalkSystemClass) { return s; }\r\n    }\r\n    return null;\r\n  }\r\n  public FindBusinessClass(name: string): ISemTalkBusinessClass | null {\r\n    for (const i in this._classes) {\r\n      const s: ISemTalkBusinessClass = (this._classes[i] as ISemTalkBusinessClass);\r\n      if (s.ObjectName === name) { return s; }\r\n    }\r\n    return null;\r\n  }\r\n  public FindInstance(name: string): ISemTalkInstance | null {\r\n    for (const i in this._instances) {\r\n      const s: ISemTalkInstance = this._instances[i];\r\n      if (s.ObjectName === name) { return s; }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public FindInstanceByID(id: number): ISemTalkInstance | null {\r\n    const s: ISemTalkObject = this._objectids[id + \"_\"];\r\n    if (s === undefined) { return null; }\r\n    if (!this.IsInstance(s)) { return null; }\r\n    return s as ISemTalkInstance;\r\n  }\r\n  public FindDiagram(name: string): ISemTalkDiagram | null {\r\n    for (const i in this._diags) {\r\n      const s: ISemTalkDiagram = this._diags[i];\r\n      if (s.ObjectName === name) { return s; }\r\n    }\r\n    return null;\r\n  }\r\n  public FindDiagramByName(name: string): ISemTalkDiagram | null {\r\n    for (const i in this._diags) {\r\n      const s: ISemTalkDiagram = this._diags[i];\r\n      if (s.ID2Name === name) { return s; }\r\n    }\r\n    return null;\r\n  }\r\n  public FindDiagramByID(id: number): ISemTalkDiagram | null {\r\n    const s: ISemTalkDiagram = this._diags[id + \"_\"];\r\n    if (s === undefined) { return null; }\r\n    return s;\r\n  }\r\n\r\n  // public FindModelByIDAsync(id: number, fn: (x: ObjectBase) => void): void {\r\n  //   fn(this);\r\n  // }\r\n  public FindObject(tname: SemTalkType, name: string): ISemTalkObject | null {\r\n    if (name === \"\") { return null; }\r\n    switch (tname) {\r\n      case SemTalkType.SemTalkClass:\r\n        return this.FindClass(name);\r\n      case SemTalkType.SemTalkAttributeType:\r\n        return this.FindAttributeType(name);\r\n      case SemTalkType.SemTalkStateType:\r\n        return this.FindStateType(name);\r\n      case SemTalkType.SemTalkAssociationType:\r\n        return this.FindAssociationType(name);\r\n      case SemTalkType.SemTalkDiagramType:\r\n        return this.FindDiagramType(name);\r\n      default:\r\n        const o: ISemTalkObject = this._objects[name];\r\n        if (o === undefined) {\r\n          return null;\r\n        }\r\n        else {\r\n          return o;\r\n        }\r\n    }\r\n  }\r\n  public FindObjectByID(id: number): ISemTalkObject | null {\r\n    const s: ISemTalkObject = this._objectids[id + \"_\"];\r\n    if (s === undefined) { return null; }\r\n    return s;\r\n  }\r\n  public FindNodeByID(id: string): ISemTalkNode | null {\r\n    for (const o in this._objects) {\r\n      const x = this._objects[o];\r\n      for (const n of x.Nodes()) {\r\n        if (n.ID === id) {\r\n          return n;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  public AllClasses(): ISemTalkClass[] {\r\n    const alist: ISemTalkClass[] = [];\r\n    for (const a in this._classes) {\r\n      const x = this._classes[a];\r\n      if (x.ObjectType === SemTalkType.SemTalkClass) {\r\n        alist.push(x);\r\n      }\r\n    }\r\n    // alist.sort(function (x, y) { return x.ObjectCaption.localeCompare(y.ObjectCaption); });\r\n    return alist;\r\n  }\r\n  public AllRootClasses(): ISemTalkClass[] {\r\n    const alist: ISemTalkClass[] = [];\r\n    for (const a in this._classes) {\r\n      const x = this._classes[a];\r\n      if (!this.IsAssociationType(x) &&\r\n          !this.IsAttributeType(x) && \r\n          !this.IsMethodType(x) && \r\n          !this.IsStateType(x) && \r\n          !this.IsDiagramType(x) && \r\n          this.IsClass(x) && x.SuperClasses().length === 0) {\r\n        alist.push(x);\r\n      }\r\n    }\r\n    // alist.sort(function (x, y) { return x.ObjectCaption.localeCompare(y.ObjectCaption); });\r\n    return alist;\r\n  }\r\n  public AllReadOnlyClasses(): ISemTalkClass[] {\r\n    const alist: ISemTalkClass[] = [];\r\n    for (const a in this._classes) {\r\n      const x = this._classes[a];\r\n      if (x.ObjectType === SemTalkType.SemTalkClass && x.IsReadOnly) {\r\n        alist.push(x);\r\n      }\r\n    }\r\n    // alist.sort(function (x, y) { return x.ObjectCaption.localeCompare(y.ObjectCaption); });\r\n    return alist;\r\n  }\r\n  public AllSystemClasses(): ISemTalkSystemClass[] {\r\n    const alist: ISemTalkSystemClass[] = [];\r\n    for (const a in this._classes) {\r\n      const x = this._classes[a];\r\n      if (this.IsSystemClass(x)) {\r\n        alist.push(x as ISemTalkSystemClass);\r\n      }\r\n    }\r\n    // alist.sort(function (x, y) { return x.ObjectCaption.localeCompare(y.ObjectCaption); });\r\n    return alist;\r\n  }\r\n  public AllDiagramTypes(): ISemTalkDiagramType[] {\r\n    const alist: ISemTalkDiagramType[] = [];\r\n    for (const a in this._diagtypes) {\r\n      const x = this._diagtypes[a];\r\n      if (x.ObjectType === SemTalkType.SemTalkDiagramType) {\r\n        alist.push(x);\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n  public AllMethodTypes(): ISemTalkMethodType[] {\r\n    const alist: ISemTalkMethodType[] = [];\r\n    for (const a in this._methodtypes) {\r\n      const x = this._methodtypes[a];\r\n      if (x.ObjectType === SemTalkType.SemTalkMethodType) {\r\n        alist.push(x);\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n  public AllAssociationTypes(): ISemTalkAssociationType[] {\r\n    const alist: ISemTalkAssociationType[] = [];\r\n    for (const a in this._assoctypes) {\r\n      const x = this._assoctypes[a];\r\n      if (x.ObjectType === SemTalkType.SemTalkAssociationType) {\r\n        alist.push(x);\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n\r\n  public AllAttributeTypes(): ISemTalkAttributeType[] {\r\n    const alist: ISemTalkAttributeType[] = [];\r\n    for (const a in this._attrtypes) {\r\n      const x = this._attrtypes[a];\r\n      if (x.ObjectType === SemTalkType.SemTalkAttributeType) {\r\n        alist.push(x);\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n\r\n  public AllStateTypes(): ISemTalkStateType[] {\r\n    const alist: ISemTalkStateType[] = [];\r\n    for (const a in this._statetypes) {\r\n      const x = this._statetypes[a];\r\n      if (x.ObjectType === SemTalkType.SemTalkStateType) {\r\n        alist.push(x);\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n  public AllInstances(): ISemTalkInstance[] {\r\n    const alist: ISemTalkInstance[] = [];\r\n    for (const a in this._instances) {\r\n      const x = this._instances[a];\r\n      if (x.ObjectType === SemTalkType.SemTalkInstance) {\r\n        alist.push(x);\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n  public AllDiagrams(): ISemTalkDiagram[] {\r\n    const alist: ISemTalkDiagram[] = [];\r\n    for (const a in this._diags) {\r\n      const x = this._diags[a];\r\n      if (x.ObjectType === SemTalkType.SemTalkDiagram) {\r\n        alist.push(x);\r\n      }\r\n    }\r\n    return alist;\r\n  }\r\n  public AllObjects(): ISemTalkObject[] {\r\n    const alist: ISemTalkObject[] = [];\r\n    for (const a in this._objects) {\r\n      const x = this._objects[a];\r\n      alist.push(x);\r\n    }\r\n    return alist;\r\n  }\r\n  public SemTalkRelationTypeName(r: SemTalkRelation): string {\r\n    switch (r) {\r\n      case SemTalkRelation.SemTalkProperty:\r\n        return \"Property\";\r\n      case SemTalkRelation.SemTalkSubClassOf:\r\n        return SemTalkBaseConstant.SLSubClassOf;\r\n      case SemTalkRelation.SemTalkInstanceOf:\r\n        return SemTalkBaseConstant.SLInstanceOf;\r\n      case SemTalkRelation.SemTalkHiddenRelation:\r\n        return \"HiddenRelation\";\r\n      case SemTalkRelation.SemTalkSystemRelation:\r\n        return \"SystemRelation\";\r\n    }\r\n  }\r\n  public FindSemTalkRelationType(s: string): SemTalkRelation {\r\n    switch (s) {\r\n      case SemTalkBaseConstant.SLSubClassOf:\r\n        return SemTalkRelation.SemTalkSubClassOf;\r\n      case SemTalkBaseConstant.SLInstanceOf:\r\n        return SemTalkRelation.SemTalkInstanceOf;\r\n      case \"HiddenRelation\":\r\n        return SemTalkRelation.SemTalkHiddenRelation;\r\n      case SemTalkBaseConstant.SLDefinitionOf:\r\n        return SemTalkRelation.SemTalkSystemRelation;\r\n      case \"SystemRelation\":\r\n        return SemTalkRelation.SemTalkSystemRelation;\r\n      default:\r\n        return SemTalkRelation.SemTalkProperty;\r\n    }\r\n  }\r\n  public SemTalkTypeName(r: SemTalkType): string {\r\n    switch (r) {\r\n      case SemTalkType.SemTalkClass: return \"Class\";\r\n      case SemTalkType.SemTalkInstance: return \"Instance\";\r\n      case SemTalkType.SemTalkAssociation: return \"Association\";\r\n      case SemTalkType.SemTalkAttribute: return \"Attribute\";\r\n      case SemTalkType.SemTalkMethod: return \"Method\";\r\n      case SemTalkType.SemTalkState: return \"State\";\r\n      case SemTalkType.SemTalkAttributeType: return \"AttributeType\";\r\n      case SemTalkType.SemTalkStateType: return \"StateType\";\r\n      case SemTalkType.SemTalkMethodType: return \"MethodType\";\r\n      case SemTalkType.SemTalkAssociationType: return \"AssociationType\";\r\n      case SemTalkType.SemTalkSpecialization: return \"Specialization\";\r\n      case SemTalkType.SemTalkDiagram: return \"Diagram\";\r\n      case SemTalkType.SemTalkDiagramType: return \"DiagramType\";\r\n      case SemTalkType.SemTalkNode: return \"Node\";\r\n      case SemTalkType.SemTalkAssociationNode: return \"AssociationNode\";\r\n      case SemTalkType.SemTalkTabSpec: return \"TabSpec\";\r\n      case SemTalkType.SemTalkGenericTabSpec: return \"GenericTabSpec\";\r\n      case SemTalkType.SemTalkGenericAttributeTabSpec: return \"GenericAttributeTabSpec\";\r\n      case SemTalkType.SemTalkLabel: return \"Label\";\r\n      case SemTalkType.SemTalkClassLabel: return \"ClassLabel\";\r\n      case SemTalkType.SemTalkSynonym: return \"Synonym\";\r\n      case SemTalkType.SemTalkComposition: return \"Composition\";\r\n      default: throw new Error((\"SemTalkTypeName: Missing type: \" + r));\r\n    }\r\n  }\r\n  public SemTalkConnectionPointName(con: SemTalkConnectionPoint): string {\r\n    switch (con) {\r\n      case SemTalkConnectionPoint.North: return \"North\";\r\n      case SemTalkConnectionPoint.East: return \"East\";\r\n      case SemTalkConnectionPoint.South: return \"South\";\r\n      case SemTalkConnectionPoint.West: return \"West\";\r\n    }\r\n  }\r\n  public FindSemTalkValueType(s: string): SemTalkValueType {\r\n    s=s.replace(\"http://www.semtalk.com/datatype#\",\"\");\r\n    switch (s) {\r\n        case \"Symbol\": return SemTalkValueType.Symbol;\r\n        case \"File\": return SemTalkValueType.File;\r\n        case \"Date\": return SemTalkValueType.Date;\r\n        case \"Duration\": return SemTalkValueType.Duration;\r\n        case \"Float\": return SemTalkValueType.Float;\r\n        case \"Integer\": return SemTalkValueType.Integer;\r\n        case \"Boolean\": return SemTalkValueType.Boolean;\r\n        case \"Color\": return SemTalkValueType.Color;\r\n        case \"Email\": return SemTalkValueType.Email;\r\n        case \"Password\": return SemTalkValueType.Password;\r\n        case \"URL\": return SemTalkValueType.URL;\r\n        case \"Tel\": return SemTalkValueType.Tel;\r\n        case \"Script\": return SemTalkValueType.Script;\r\n        default: return SemTalkValueType.Symbol;\r\n    }\r\n  }\r\n\r\n  public SemTalkValueTypeName(r: SemTalkValueType): string {\r\n    switch (r) {\r\n      case SemTalkValueType.Symbol: return \"Symbol\";\r\n      case SemTalkValueType.File: return \"File\";\r\n      case SemTalkValueType.Date: return \"Date\";\r\n      case SemTalkValueType.Duration: return \"Duration\";\r\n      case SemTalkValueType.Float: return \"Float\";\r\n      case SemTalkValueType.Integer: return \"Integer\";\r\n      case SemTalkValueType.Boolean: return \"Boolean\";\r\n      case SemTalkValueType.Color: return \"Color\";\r\n      case SemTalkValueType.Email: return \"Email\";\r\n      case SemTalkValueType.Password: return \"Password\";\r\n      case SemTalkValueType.URL: return \"URL\";\r\n      case SemTalkValueType.Tel: return \"Tel\";\r\n      case SemTalkValueType.Script: return \"Script\";\r\n      default: throw new Error((\"SemTalkValueTypeName: Missing type: \" + r));\r\n    }\r\n  }\r\n  // public Load(s: string, nfn?: () => void): void {\r\n  //   const o2j = new OB2JSON;\r\n  //   console.log(o2j);\r\n  //   // $.getJSON(\"./mxg.json\", (data: any) => {\r\n  //   //     o2j.LoadJSON(this, data);\r\n  //   //     if (nfn !== undefined && nfn != null) { nfn(); }\r\n  //   // });\r\n  // }\r\n  public MakeClass(newname: string, id?: number | null): ISemTalkClass {\r\n    let existing = this.FindClass(newname);\r\n    if (existing != null) {\r\n      return existing;\r\n    } else {\r\n      return new SemTalkClass(this, newname, id);\r\n\r\n    }\r\n  }\r\n  public IsClass(obj: any): boolean {\r\n    return obj instanceof SemTalkClass;\r\n  }\r\n  public MakeInstance(cla: ISemTalkClass, newname: string, otype: SemTalkType, id?: number | null): ISemTalkInstance {\r\n    let existing = this.FindInstance(newname);\r\n    if (existing != null) {\r\n      return existing;\r\n    } else {\r\n      return new SemTalkInstance(cla, newname, otype, id);\r\n    }\r\n  }\r\n  public IsInstance(obj: any): boolean {\r\n    return obj instanceof SemTalkInstance;\r\n  }\r\n  public IsAssociation(obj: any): boolean {\r\n    return obj instanceof SemTalkAssociation;\r\n  }\r\n  public MakeSystemClass(newname: string, id?: number | null): ISemTalkSystemClass {\r\n    let existing = this.FindSystemClass(newname);\r\n    if (existing != null) {\r\n      return existing;\r\n    } else {\r\n      return new SemTalkSystemClass(this, newname, id);\r\n    }\r\n  }\r\n  public MakeSharePointClass(newname: string, id?: number | null): ISemTalkSharePointClass {\r\n    let existing = this.FindClass(newname);\r\n    if (existing != null) {\r\n      return existing as ISemTalkSharePointClass;\r\n    } else {\r\n      return new SemTalkSharePointClass(this, newname, id);\r\n    }\r\n  }\r\n\r\n\r\n  public IsSystemClass(obj: any): boolean {\r\n    return obj instanceof SemTalkSystemClass;\r\n  }\r\n  public MakeBusinessClass(newname: string, id?: number | null): ISemTalkBusinessClass {\r\n    let existing = this.FindBusinessClass(newname);\r\n    if (existing != null) {\r\n      return existing;\r\n    } else {\r\n      return new SemTalkBusinessClass(this, newname, id);\r\n    }\r\n  }\r\n  public MakeComposition(own: ISemTalkObject, cls: ISemTalkBusinessClass, met: ISemTalkMethodType | null, sta: ISemTalkStateType | null,\r\n    attr: ISemTalkAttributeType | null, oth?: ISemTalkBusinessClass | null, op?: string,\r\n    isnotop?: boolean, cmpvalue?: any): ISemTalkComposition {\r\n    return new SemTalkComposition(own, cls, met, sta, attr, oth, op, isnotop, cmpvalue);\r\n  }\r\n  public IsBusinessClass(obj: any): boolean {\r\n    return obj instanceof SemTalkBusinessClass;\r\n  }\r\n  public MakeMethodType(newname: string, id?: number | null): ISemTalkMethodType {\r\n    let existing = this.FindMethodType(newname);\r\n    if (existing != null) {\r\n      return existing;\r\n    } else {\r\n      return new SemTalkMethodType(this, newname, id);\r\n    }\r\n  }\r\n  public IsMethodType(obj: any): boolean {\r\n    return obj instanceof SemTalkMethodType;\r\n  }\r\n  public MakeStateType(newname: string, id?: number | null): ISemTalkStateType {\r\n    let existing = this.FindStateType(newname);\r\n    if (existing != null) {\r\n      return existing;\r\n    } else {\r\n      return new SemTalkStateType(this, newname, id);\r\n    }\r\n  }\r\n  public IsStateType(obj: any): boolean {\r\n    return obj instanceof SemTalkStateType;\r\n  }\r\n  public MakeAttributeType(newname: string, id?: number | null): ISemTalkAttributeType {\r\n    let existing = this.FindAttributeType(newname);\r\n    if (existing != null) {\r\n      return existing;\r\n    } else {\r\n      return new SemTalkAttributeType(this, newname, id);\r\n    }\r\n  }\r\n  public IsAttributeType(obj: any): boolean {\r\n    return obj instanceof SemTalkAttributeType;\r\n  }\r\n  public MakeAssociationType(ptype: SemTalkRelation, newname: string, id?: number | null): ISemTalkAssociationType {\r\n    let existing = this.FindAssociationType(newname);\r\n    if (existing != null) {\r\n      return existing;\r\n    } else {\r\n      return new SemTalkAssociationType(this, ptype, newname, id);\r\n    }\r\n  }\r\n  public MakeAttribute(obj: ISemTalkObject, cla: ISemTalkAttributeType, val: any | null): ISemTalkAttribute {\r\n    return new SemTalkAttribute(obj, cla, val);\r\n  }\r\n  public IsAssociationType(obj: any): boolean {\r\n    return obj instanceof SemTalkAssociationType;\r\n  }\r\n  public MakeDiagramType(newname: string, id?: number | null): ISemTalkDiagramType {\r\n    let existing = this.FindDiagramType(newname);\r\n    if (existing != null) {\r\n      return existing;\r\n    } else {\r\n      return new SemTalkDiagramType(this, newname, id);\r\n    }\r\n  }\r\n  public IsDiagramType(obj: any): boolean {\r\n    return obj instanceof SemTalkDiagramType;\r\n  }\r\n  public MakeNode(diag: ISemTalkDiagram, obj: ISemTalkObject, shpid: string, master?: string): ISemTalkNode {\r\n    return new SemTalkNode(diag, obj, shpid, master);\r\n  }\r\n  public IsNode(obj: any): boolean {\r\n    return obj instanceof SemTalkNode;\r\n  }\r\n  public MakeAssociationNode(diag: ISemTalkDiagram, obj: ISemTalkAssociation, shpid: string, master?: string): SemTalkAssociationNode {\r\n    return new SemTalkAssociationNode(diag, obj, shpid, master);\r\n  }\r\n  public IsAssociationNode(obj: any): boolean {\r\n    return obj instanceof SemTalkAssociationNode;\r\n  }\r\n  public MakeDiagram(cla: ISemTalkDiagramType, newname: string, otype?: SemTalkType, id?: number): ISemTalkDiagram {\r\n    let existing = this.FindDiagram(newname);\r\n    if (existing != null) {\r\n      return existing;\r\n    } else {\r\n      let ot = SemTalkType.SemTalkDiagram;\r\n      if (otype !== undefined)\r\n        ot = otype;\r\n      return new SemTalkDiagram(cla, newname, ot, id);\r\n    }\r\n  }\r\n  public IsDiagram(obj: any): boolean {\r\n    return obj instanceof SemTalkDiagram;\r\n  }\r\n  public MakeLabelSpec(): LabelSpec {\r\n    return new LabelSpec();\r\n  }\r\n\r\n  public SearchObjects(str: string): ISemTalkObject[] {\r\n    let res: ISemTalkObject[] = [];\r\n    for (const obj of this.AllObjects())\r\n      if (obj.ObjectCaption.indexOf(str) > -1 || obj.Comment.indexOf(str) > -1) {\r\n        res.push(obj);\r\n      }\r\n    res = res.sort((a: ISemTalkObject, b: ISemTalkObject): number => { return a.ObjectCaption.localeCompare(b.ObjectCaption); });\r\n    return res;\r\n  }\r\n  public SearchNodes(str: string, paging_from?: number, paging_to?: number): ISemTalkNode[] {\r\n    let res: ISemTalkNode[] = [];\r\n    if (paging_from !== undefined && paging_to !== undefined) {\r\n      let cnt: number = -1;\r\n      for (const diag of this.AllDiagrams()) {\r\n        for (const nd of diag.Contents()) {\r\n          if (nd.Model.ObjectCaption.indexOf(str) > -1 || nd.Model.Comment.indexOf(str) > -1) {\r\n            cnt += 1;\r\n            if (cnt >= paging_from) {\r\n              res.push(nd);\r\n            }\r\n            if (cnt > paging_to) break;\r\n          }\r\n          if (cnt > paging_to) break;\r\n        }\r\n      }\r\n    } else {\r\n      for (const diag of this.AllDiagrams())\r\n        for (const nd of diag.Contents()) {\r\n          if (nd.Model.ObjectCaption.indexOf(str) > -1 || nd.Model.Comment.indexOf(str) > -1) {\r\n            res.push(nd);\r\n          }\r\n        }\r\n    }\r\n    res = res.sort((a: ISemTalkNode, b: ISemTalkNode): number => { return a.Model.ObjectCaption.localeCompare(b.Model.ObjectCaption); });\r\n    return res;\r\n  }\r\n  public SearchDiagram(diagid: number, str: string): ISemTalkNode[] {\r\n    let res: ISemTalkNode[] = [];\r\n    const diag = this.FindDiagramByID(diagid);\r\n    if (diag != null) {\r\n      for (let nd of diag.Contents()) {\r\n        if (nd.Model.ObjectCaption.indexOf(str) > -1 || nd.Model.Comment.indexOf(str) > -1) {\r\n          res.push(nd);\r\n        }\r\n      }\r\n    }\r\n    res = res.sort((a: ISemTalkNode, b: ISemTalkNode): number => { return a.Model.ObjectCaption.localeCompare(b.Model.ObjectCaption); });\r\n    return res;\r\n  }\r\n\r\n}\r\n","export enum Process_ElementName {\r\n    SLProc = \"SLProc\",\r\n    SLClassModel = \"SLClassModel\",\r\n    SLObjectModel = \"SLObjectModel\",\r\n    SLValueChain = \"SLValueChain\",  \r\n    SLOrgChart = \"SLOrgChart\",\r\n    SLActivity = \"SLActivity\",\r\n    SLResource = \"SLResource\",\r\n    SLPosition = \"SLPosition\",\r\n    SLOrgUnit = \"SLOrgUnit\",\r\n    SLDataObject = \"SLDataObject\",\r\n    SLPhysResource = \"SLPhysResource\",\r\n    SLBuffer = \"SLBuffer\",\r\n    SLControl = \"SLControl\",\r\n    SLDecision = \"SLDecision\",\r\n    SLMessageFlow = \"SLMessageFlow\",\r\n    SLUses = \"SLUses\",\r\n    SLInvUses = \"SLInvUses\",\r\n    SLUsesPhys = \"SLUsesPhys\",\r\n    SLPerson = \"SLPerson\",\r\n    SLEntryPoint = \"SLEntryPoint\",\r\n    SLExitPoint = \"SLExitPoint\",\r\n    SLEvent = \"SLEvent\",\r\n    SLStores = \"SLStores\",\r\n    SLReads = \"SLReads\",\r\n    SLInformation = \"SLInformation\",\r\n    SLInfoType = \"SLInfoType\",\r\n    SLOfftime = \"Offtime\",\r\n    Swimlane = \"Swimlane\",\r\n    SLGateway = \"SLGateway\",\r\n    SLSystem = \"SLSystem\",\r\n    SLRoot= \"SLRoot\",\r\n    STTriggers = \"STTriggers\",\r\n    STTriggeredBy = \"STTriggeredBy\",\r\n    SLBreakpoint = \"Breakpoint\"\r\n\r\n\r\n}\r\nexport enum SIM_AttributeTypeName {\r\n    CostDriver = \"CostDriver\",\r\n    Priority = \"Priority\",\r\n    Strategy = \"Strategy\",\r\n    DistributionType = \"DistributionType\",\r\n    WorkTime = \"WorkTime\",\r\n    WorkTime2 = \"WorkTime2\",\r\n    WaitingTime = \"WaitingTime\",\r\n    Restart = \"Restart\",\r\n    Begin = \"Begin\",\r\n    End = \"End\",\r\n    Jobs = \"Jobs\",\r\n    Period = \"Period\",\r\n    SetupTime = \"SetupTime\",\r\n    FixedCost = \"FixedCost\",\r\n    VariableCost = \"VariableCost\",\r\n    TransportationTime = \"TransportationTime\",\r\n    Probability = \"Probability\",\r\n    ConditionExpression = \"ConditionExpression\",\r\n    InitialContents = \"InitialContents\",\r\n    FlushNumber = \"FlushNumber\",\r\n    FlushTime = \"FlushTime\",\r\n    InfoDepended = \"InfoDepended\",\r\n    IsCopied = \"IsCopied\",\r\n    Quantity = \"Quantity\",\r\n    InputCondition = \"InputCondition\",\r\n    OutputCondition = \"OutputCondition\",\r\n    Capacity = \"Capacity\",\r\n    active = \"active\",\r\n    ValueFile = \"ValueFile\",\r\n    UserNumber = \"UserNumber\"\r\n}\r\nexport enum SIM_Strategy {\r\n    FIFO = \"FIFO\",\r\n    LIFO = \"LIFO\",\r\n    LONGEST = \"LONGEST\",\r\n    SHORTEST = \"SHORTEST\",\r\n    ANY = \"ANY\"\r\n}\r\nexport enum SIM_Distribution {\r\n    CONSTANT = \"Constant Value\",\r\n    EVEN = \"Even distribution\",\r\n    NORMAL = \"Normal distribution\",\r\n    EXPONENTIAL = \"Exponential distribution\"\r\n}\r\nexport enum SIM_Condition {\r\n    AND = \"AND\",\r\n    OR = \"OR\",\r\n    XOR = \"XOR\",\r\n    INFO = \"INFO\",\r\n    SAND = \"SAND\"\r\n}"],"sourceRoot":""}